BOOL GEOLogMsgEventBatchTrafficProbeIsValid(char *a1)
{
  int *v2;
  int *v3;
  int *v4;
  int *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v14;
  int v15;
  BOOL v17;

  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      v6 = 0;
      v7 = 0;
      v8 = 0;
      while (1)
      {
        v9 = *v2;
        v10 = *(void *)&a1[v9];
        v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          v8 = 0;
          v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      v14 = a1[*v4];
      if (a1[*v4]) {
        v8 = 0;
      }
LABEL_14:
      v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventCommuteWindowIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1) {
            goto LABEL_74;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_70;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_70;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOPredictedCommuteDestinationIsValid(a1)) {
            goto LABEL_74;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_74:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v26 = v42++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_71;
      }
LABEL_69:
      uint64_t v14 = *v4;
LABEL_70:
      a1[v14] = 1;
LABEL_71:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgEventWifiConnectionQualityProbeIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOWiFiConnectionQualityIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventParkedCarIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || v18 == 2)
      {
        if (v16 != 1) {
          goto LABEL_35;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v21 = v20 + 8, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (v18 == 1)
      {
        if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1))
        {
LABEL_35:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_35;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgEventTileCacheAnalyticIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCacheHitIsValid(a1)) {
          goto LABEL_31;
        }
LABEL_27:
        PBReaderRecallMark();
        goto LABEL_29;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOCacheMissIsValid(a1))
    {
LABEL_31:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_27;
  }
LABEL_30:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventGridDurationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgEventGridDurationEndStateErrorInfoIsValid(a1)) {
            goto LABEL_61;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_61;
          }
          unsigned int v33 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_61:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOLogMsgEventDisplayAnalyticIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_81;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_81;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_81;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_81;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_81;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v23 = v39++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v44 = 0;
          while (1)
          {
            uint64_t v45 = *v2;
            uint64_t v46 = *(void *)&a1[v45];
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
              goto LABEL_81;
            }
            int v48 = *(char *)(*(void *)&a1[*v5] + v46);
            *(void *)&a1[v45] = v47;
            if (v48 < 0)
            {
              BOOL v23 = v44++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_83;
          }
        case 7u:
          if (v16 != 1) {
            goto LABEL_86;
          }
          uint64_t v49 = *v2;
          unint64_t v50 = *(void *)&a1[v49];
          if (v50 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_82;
          }
          unint64_t v51 = v50 + 8;
          if (v51 > *(void *)&a1[*v3]) {
            goto LABEL_82;
          }
          *(void *)&a1[v49] = v51;
          continue;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_86;
          }
          unsigned int v52 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_86:
          BOOL v57 = 0;
          goto LABEL_85;
      }
      while (1)
      {
        uint64_t v53 = *v2;
        uint64_t v54 = *(void *)&a1[v53];
        unint64_t v55 = v54 + 1;
        if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
          break;
        }
        int v56 = *(char *)(*(void *)&a1[*v5] + v54);
        *(void *)&a1[v53] = v55;
        if (v56 < 0)
        {
          BOOL v23 = v52++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_83;
      }
LABEL_81:
      uint64_t v14 = *v4;
LABEL_82:
      a1[v14] = 1;
LABEL_83:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v57 = a1[*v4] == 0;
LABEL_85:
  PBReaderRecallMark();
  return v57;
}

BOOL GEOLogMsgEventThrottleIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 2u:
          if (v16 == 2) {
            goto LABEL_58;
          }
          goto LABEL_94;
        case 3u:
          if (v16 == 2) {
            goto LABEL_58;
          }
          goto LABEL_94;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v34 = 0;
          while (1)
          {
            uint64_t v35 = *v2;
            uint64_t v36 = *(void *)&a1[v35];
            unint64_t v37 = v36 + 1;
            if (v36 == -1 || v37 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v38 = *(char *)(*(void *)&a1[*v5] + v36);
            *(void *)&a1[v35] = v37;
            if (v38 < 0)
            {
              BOOL v23 = v34++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 8u:
          if (v16 != 2) {
            goto LABEL_94;
          }
LABEL_58:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_94:
          BOOL v57 = 0;
          goto LABEL_93;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v39 = 0;
          while (1)
          {
            uint64_t v40 = *v2;
            uint64_t v41 = *(void *)&a1[v40];
            unint64_t v42 = v41 + 1;
            if (v41 == -1 || v42 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v43 = *(char *)(*(void *)&a1[*v5] + v41);
            *(void *)&a1[v40] = v42;
            if (v43 < 0)
            {
              BOOL v23 = v39++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v44 = 0;
          while (1)
          {
            uint64_t v45 = *v2;
            uint64_t v46 = *(void *)&a1[v45];
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
              goto LABEL_84;
            }
            int v48 = *(char *)(*(void *)&a1[*v5] + v46);
            *(void *)&a1[v45] = v47;
            if (v48 < 0)
            {
              BOOL v23 = v44++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_94;
          }
          unsigned int v49 = 0;
          break;
        case 0xCu:
          if (v16 != 1) {
            goto LABEL_94;
          }
          uint64_t v54 = *v2;
          unint64_t v55 = *(void *)&a1[v54];
          if (v55 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_85;
          }
          unint64_t v56 = v55 + 8;
          if (v56 > *(void *)&a1[*v3]) {
            goto LABEL_85;
          }
          *(void *)&a1[v54] = v56;
          continue;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_94;
          }
          continue;
      }
      while (1)
      {
        uint64_t v50 = *v2;
        uint64_t v51 = *(void *)&a1[v50];
        unint64_t v52 = v51 + 1;
        if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
          break;
        }
        int v53 = *(char *)(*(void *)&a1[*v5] + v51);
        *(void *)&a1[v50] = v52;
        if (v53 < 0)
        {
          BOOL v23 = v49++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_86;
      }
LABEL_84:
      uint64_t v14 = *v4;
LABEL_85:
      a1[v14] = 1;
LABEL_86:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v57 = a1[*v4] == 0;
LABEL_93:
  PBReaderRecallMark();
  return v57;
}

BOOL GEOLogMsgEventMapKitCountsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapKitCountIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventPredExTrainingDataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
        case 0x11u:
          if (v16 != 1) {
            goto LABEL_179;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_175;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_175;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x10u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v26 = v42++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v26 = v47++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v26 = v52++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v26 = v57++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v26 = v62++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v26 = v67++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v26 = v72++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v26 = v77++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x19u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v82 = 0;
          while (1)
          {
            uint64_t v83 = *v2;
            uint64_t v84 = *(void *)&a1[v83];
            unint64_t v85 = v84 + 1;
            if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v86 = *(char *)(*(void *)&a1[*v5] + v84);
            *(void *)&a1[v83] = v85;
            if (v86 < 0)
            {
              BOOL v26 = v82++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v87 = 0;
          while (1)
          {
            uint64_t v88 = *v2;
            uint64_t v89 = *(void *)&a1[v88];
            unint64_t v90 = v89 + 1;
            if (v89 == -1 || v90 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v91 = *(char *)(*(void *)&a1[*v5] + v89);
            *(void *)&a1[v88] = v90;
            if (v91 < 0)
            {
              BOOL v26 = v87++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x1Bu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLatLngIsValid(a1)) {
            goto LABEL_179;
          }
          PBReaderRecallMark();
          continue;
        case 0x1Cu:
          if (v16 == 2) {
            goto LABEL_140;
          }
          goto LABEL_179;
        case 0x1Du:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v92 = 0;
          while (1)
          {
            uint64_t v93 = *v2;
            uint64_t v94 = *(void *)&a1[v93];
            unint64_t v95 = v94 + 1;
            if (v94 == -1 || v95 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v96 = *(char *)(*(void *)&a1[*v5] + v94);
            *(void *)&a1[v93] = v95;
            if (v96 < 0)
            {
              BOOL v26 = v92++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x1Eu:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v97 = 0;
          while (1)
          {
            uint64_t v98 = *v2;
            uint64_t v99 = *(void *)&a1[v98];
            unint64_t v100 = v99 + 1;
            if (v99 == -1 || v100 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v101 = *(char *)(*(void *)&a1[*v5] + v99);
            *(void *)&a1[v98] = v100;
            if (v101 < 0)
            {
              BOOL v26 = v97++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x1Fu:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v102 = 0;
          while (1)
          {
            uint64_t v103 = *v2;
            uint64_t v104 = *(void *)&a1[v103];
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)&a1[*v3]) {
              goto LABEL_174;
            }
            int v106 = *(char *)(*(void *)&a1[*v5] + v104);
            *(void *)&a1[v103] = v105;
            if (v106 < 0)
            {
              BOOL v26 = v102++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_176;
          }
        case 0x20u:
          if ((v8 & 7) != 0) {
            goto LABEL_179;
          }
          unsigned int v107 = 0;
          break;
        default:
LABEL_140:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_179:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v108 = *v2;
        uint64_t v109 = *(void *)&a1[v108];
        unint64_t v110 = v109 + 1;
        if (v109 == -1 || v110 > *(void *)&a1[*v3]) {
          break;
        }
        int v111 = *(char *)(*(void *)&a1[*v5] + v109);
        *(void *)&a1[v108] = v110;
        if (v111 < 0)
        {
          BOOL v26 = v107++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_176;
      }
LABEL_174:
      uint64_t v14 = *v4;
LABEL_175:
      a1[v14] = 1;
LABEL_176:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v112 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v112;
}

BOOL GEOLogMsgEventMarcoLiteUsageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_44;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_44;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMarcoLiteUsageStateIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_43;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_44;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_46;
    }
    unsigned int v24 = 0;
    while (1)
    {
      uint64_t v25 = *v2;
      uint64_t v26 = *(void *)&a1[v25];
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
      int v28 = *(char *)(*(void *)&a1[*v5] + v26);
      *(void *)&a1[v25] = v27;
      if (v28 < 0)
      {
        BOOL v23 = v24++ > 8;
        if (!v23) {
          continue;
        }
      }
      goto LABEL_43;
    }
  }
LABEL_44:
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOLogMsgEventTripDepartureFeedbackIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || v18 == 2)
      {
        if (v16 != 1) {
          goto LABEL_40;
        }
        uint64_t v25 = *v2;
        unint64_t v26 = *(void *)&a1[v25];
        if (v26 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_36;
        }
        unint64_t v27 = v26 + 8;
        if (v27 > *(void *)&a1[*v3]) {
          goto LABEL_36;
        }
        *(void *)&a1[v25] = v27;
      }
      else
      {
        if (v18 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_40;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0 && v19++ <= 8) {
              continue;
            }
            goto LABEL_37;
          }
          uint64_t v14 = *v4;
LABEL_36:
          a1[v14] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_40:
          BOOL v28 = 0;
          goto LABEL_39;
        }
      }
LABEL_37:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgEventDirectionsRequestDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgEventEVRoutingVehicleDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_44;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_44;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_40;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_41;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_44:
          BOOL v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgEventEVTripIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOChargeLocationDetailsIsValid(a1)) {
            goto LABEL_78;
          }
          goto LABEL_46;
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOStopAddedDetailsIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_78;
        case 5u:
          if (v15 == 2) {
            goto LABEL_48;
          }
          goto LABEL_78;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_74;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v38 = 0;
          break;
        case 9u:
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEODodgeballDetailsIsValid(a1)) {
            goto LABEL_78;
          }
LABEL_46:
          PBReaderRecallMark();
          continue;
        default:
LABEL_48:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_78:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_75;
      }
LABEL_74:
      a1[*v4] = 1;
LABEL_75:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOLogMsgEventCuratedCollectionStatsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              break;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgEventCuratedCollectionUsageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_39;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v27 = 0;
          break;
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_52;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_40;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOTouristInfoIsValid(a1)) {
            goto LABEL_52;
          }
          PBReaderRecallMark();
          continue;
        case 6u:
          if (v16 == 2) {
            goto LABEL_48;
          }
          goto LABEL_52;
        case 7u:
          if (v16 == 2) {
            goto LABEL_48;
          }
          goto LABEL_52;
        default:
LABEL_48:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_52:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_49;
      }
LABEL_39:
      uint64_t v14 = *v4;
LABEL_40:
      a1[v14] = 1;
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgEventMapsDeviceSettingsIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOLogMsgEventHardStopIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_49;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_49;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1) {
          goto LABEL_51;
        }
        uint64_t v24 = *v2;
        unint64_t v25 = *(void *)&a1[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v26 = v25 + 8, v26 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v24] = v26;
        }
        else {
          a1[v14] = 1;
        }
        goto LABEL_48;
      }
      if (v18 == 2) {
        break;
      }
      if (v18 != 1) {
        goto LABEL_33;
      }
      if (v16 == 2)
      {
        if (!PBReaderPlaceMark())
        {
LABEL_51:
          PBReaderRecallMark();
          return 0;
        }
LABEL_36:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v27 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              break;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v13 = v27++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_36;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 & 7) != 0) {
          goto LABEL_51;
        }
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0)
          {
            unsigned int v23 = v16++;
            if (v23 <= 8) {
              continue;
            }
          }
          goto LABEL_48;
        }
        a1[*v4] = 1;
      }
LABEL_48:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_49;
      }
    }
    if (v16 != 2) {
      goto LABEL_51;
    }
LABEL_33:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_51;
    }
    goto LABEL_48;
  }
LABEL_49:
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgEventVLFUsageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFEntryPointIsValid(a1)) {
            goto LABEL_85;
          }
          goto LABEL_88;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFLocalizationDetailsIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFCorrectionIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_88;
          }
          unsigned int v28 = 0;
          break;
        case 7u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOVLFPositionContextClassificationIsValid(a1))
          {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFInitializationFailureDetailsIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 9u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFARStateIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 0xAu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFDeviceOrientationIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 0xBu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFCrowdsourcingDetailsIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFLocationIsValid(a1)) {
            goto LABEL_88;
          }
          goto LABEL_85;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFARFailureTypesIsValid(a1)) {
            goto LABEL_88;
          }
LABEL_85:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_88:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_86;
      }
LABEL_57:
      a1[*v4] = 1;
LABEL_86:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventLogDiscardIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_38;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_38;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_37;
        }
        a1[*v4] = 1;
        goto LABEL_37;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_40:
        BOOL v24 = 0;
        goto LABEL_39;
      }
LABEL_37:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_38;
      }
    }
    if (v15 != 2) {
      goto LABEL_40;
    }
LABEL_32:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_37;
  }
LABEL_38:
  BOOL v24 = a1[*v4] == 0;
LABEL_39:
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgEventDailyUseSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEODailyUseSummaryUseEventIsValid(a1)) {
            goto LABEL_50;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if (v16 != 1) {
            goto LABEL_50;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_44;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_44;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_43;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v27 = 0;
          break;
        case 5u:
          if (v16 == 2) {
            goto LABEL_46;
          }
          goto LABEL_50;
        default:
LABEL_46:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_43:
      uint64_t v14 = *v4;
LABEL_44:
      a1[v14] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgEventPressureDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventPeriodicSettingsSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOLogMsgStateMapSettingsIsValid(a1)) {
            goto LABEL_125;
          }
          goto LABEL_129;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapUIShownIsValid(a1)) {
            goto LABEL_129;
          }
          goto LABEL_125;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_101;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_126;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_129;
          }
          unsigned int v58 = 0;
          break;
        case 0xCu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateAccountIsValid(a1)) {
            goto LABEL_129;
          }
          goto LABEL_125;
        case 0xDu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceConnectionIsValid(a1)) {
            goto LABEL_129;
          }
          goto LABEL_125;
        case 0xEu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsUserSettingsIsValid(a1)) {
            goto LABEL_129;
          }
          goto LABEL_125;
        case 0xFu:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateRoutingSettingsIsValid(a1)) {
            goto LABEL_129;
          }
          goto LABEL_125;
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateMapsFeaturesIsValid(a1)) {
            goto LABEL_129;
          }
          goto LABEL_125;
        case 0x11u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceSettingsIsValid(a1)) {
            goto LABEL_129;
          }
LABEL_125:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_129:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v59 = *v2;
        uint64_t v60 = *(void *)&a1[v59];
        unint64_t v61 = v60 + 1;
        if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
          break;
        }
        int v62 = *(char *)(*(void *)&a1[*v5] + v60);
        *(void *)&a1[v59] = v61;
        if (v62 < 0)
        {
          BOOL v22 = v58++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_126;
      }
LABEL_101:
      a1[*v4] = 1;
LABEL_126:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEOLogMsgEventThermalPressureIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_60;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_61;
          }
        case 2u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_76:
              PBReaderRecallMark();
              return 0;
            }
LABEL_64:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v43 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v44 = *v2;
                uint64_t v45 = *(void *)&a1[v44];
                unint64_t v46 = v45 + 1;
                if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
                  break;
                }
                int v47 = *(char *)(*(void *)&a1[*v5] + v45);
                *(void *)&a1[v44] = v46;
                if (v47 < 0)
                {
                  BOOL v13 = v43++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_64;
              }
              a1[*v4] = 1;
            }
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_76;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_61;
            }
LABEL_60:
            a1[*v4] = 1;
          }
LABEL_61:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_74;
          }
          break;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_60;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_61;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_60;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_61;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_76;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_60;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_61;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_76;
          }
          goto LABEL_61;
      }
    }
  }
LABEL_74:
  BOOL v48 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v48;
}

BOOL GEOLogMsgEventARSessionUsageIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFLocalizationResultsIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_60;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARElementDetailsIsValid(a1)) {
            goto LABEL_60;
          }
          goto LABEL_57;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_58;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_60;
          }
          unsigned int v28 = 0;
          break;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARSessionThermalPressureIsValid(a1)) {
            goto LABEL_60;
          }
LABEL_57:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_60:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_58;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_58:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventNetworkSelectionHarvestIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventImpressionEventIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOLogMsgEventShowcaseSuppressionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_45;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_48;
          }
        case 3u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_51;
          }
          unsigned int v28 = 0;
          break;
        case 5u:
          if (v15 == 2) {
            goto LABEL_47;
          }
          goto LABEL_51;
        default:
LABEL_47:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_51:
          BOOL v33 = 0;
          goto LABEL_50;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_48;
      }
LABEL_45:
      a1[*v4] = 1;
LABEL_48:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_50:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventPlaceCacheLookupIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_58;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_55;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_55;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_54;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_55;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v33 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_58:
          BOOL v38 = 0;
          goto LABEL_57;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_55;
      }
LABEL_54:
      a1[*v4] = 1;
LABEL_55:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
LABEL_57:
  PBReaderRecallMark();
  return v38;
}

BOOL GEOLogMsgEventDeviceSyncStatusIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEODeviceSyncDataIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventMapsInteractionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgEventNetworkEventSummaryIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONetEventDimensionalGroupingIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgEventServiceMetadataIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_41;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_41;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2
          || !PBReaderPlaceMark()
          || !GEODirectionsRequestResponseAnalyticsDataIsValid((unsigned __int8 *)a1))
        {
          goto LABEL_43;
        }
LABEL_36:
        PBReaderRecallMark();
        goto LABEL_40;
      }
      if (v17 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_40;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_41;
      }
    }
    if (v15 != 2
      || !PBReaderPlaceMark()
      || !GEOPDPlacesRequestResponseAnalyticsDataIsValid((unsigned __int8 *)a1))
    {
LABEL_43:
      PBReaderRecallMark();
      return 0;
    }
    goto LABEL_36;
  }
LABEL_41:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgEventMapsEngagementIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  v2 = (int *)MEMORY[0x1E4F940E8];
  v3 = (int *)MEMORY[0x1E4F940E0];
  v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

uint64_t _GEOLogMsgEventIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 520));
  uint64_t v2 = *(void *)(a1 + 528);
  if ((v2 & 0x8000000008400004) != 0) {
    return 1;
  }
  if ((v2 & 0x1000000000000000) != 0)
  {
    if (GEOLogMsgEventUserActionIsDirty(*(void *)(a1 + 488))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x81002000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x100000000) != 0)
  {
    if (GEOLogMsgEventNetworkIsDirty(*(os_unfair_lock_s **)(a1 + 256))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEOLogMsgEventDirectionsIsDirty(*(os_unfair_lock_s **)(a1 + 88))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x400000000000000) != 0)
  {
    if (GEOLogMsgEventTransitAppLaunchIsDirty(*(void *)(a1 + 464))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x300000000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000000) != 0)
  {
    if (GEOLogMsgEventMapsWidgetsInteractionSessionIsDirty(*(void *)(a1 + 232))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x100000) != 0)
  {
    if (GEOLogMsgEventListInteractionSessionIsDirty(*(void *)(a1 + 160))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x80000000000) != 0)
  {
    if (GEOLogMsgEventRefineSearchSessionIsDirty(*(void *)(a1 + 344))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x20000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x1000000) != 0)
  {
    if (GEOLogMsgEventMapLaunchIsDirty(*(void *)(a1 + 192))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x200000000000) != 0)
  {
    if (GEOLogMsgEventRideBookingSessionIsDirty(*(os_unfair_lock_s **)(a1 + 360))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x100000000000) != 0)
  {
    if (GEOLogMsgEventRideBookedSessionIsDirty(*(void *)(a1 + 352))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x4000000000000) != 0)
  {
    if (GEOLogMsgEventTableBookingSessionIsDirty(*(os_unfair_lock_s **)(a1 + 400))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x2000000000000) != 0)
  {
    if (GEOLogMsgEventTableBookedSessionIsDirty(*(void *)(a1 + 392))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x8000000010000) != 0) {
    return 1;
  }
  if ((v2 & 0x20) != 0)
  {
    if (GEOLogMsgEventClientACSuggestionsIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x4000040400000050) != 0) {
    return 1;
  }
  if ((v2 & 0x40000000000000) != 0)
  {
    if (GEOLogMsgEventTileCacheAnalyticIsDirty(*(void *)(a1 + 432))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x22000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000000000000) != 0)
  {
    if (GEOLogMsgEventThrottleIsDirty(*(void *)(a1 + 424))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x800000) != 0) {
    return 1;
  }
  if ((v2 & 0x8000000000) != 0)
  {
    if (GEOLogMsgEventPredExTrainingDataIsDirty(*(void *)(a1 + 312))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x800000040001000) != 0) {
    return 1;
  }
  if ((v2 & 0x4000) != 0)
  {
    if (GEOLogMsgEventEVRoutingVehicleDetailsIsDirty(*(void *)(a1 + 112))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x8000) != 0)
  {
    if (GEOLogMsgEventEVTripIsDirty(*(void *)(a1 + 120))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x80) != 0) {
    return 1;
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOLogMsgEventCuratedCollectionUsageIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x2000000) != 0) {
    return 1;
  }
  if ((v2 & 0x40000) != 0)
  {
    if (GEOLogMsgEventHardStopIsDirty(*(void *)(a1 + 144))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x2000000000000000) != 0)
  {
    if (GEOLogMsgEventVLFUsageIsDirty(*(os_unfair_lock_s **)(a1 + 496))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEOLogMsgEventLogDiscardIsDirty(*(void *)(a1 + 168))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOLogMsgEventDailyUseSummaryIsDirty(*(void *)(a1 + 72))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x10000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x4000000000) != 0)
  {
    if (GEOLogMsgEventPOIBusynessDataIsDirty(*(void *)(a1 + 304))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x800000000) != 0)
  {
    if (GEOLogMsgEventPeriodicSettingsSummaryIsDirty(*(os_unfair_lock_s **)(a1 + 280))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x10000000000000) != 0) {
    return 1;
  }
  if ((v2 & 8) != 0)
  {
    if (GEOLogMsgEventARSessionUsageIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x200080000) != 0) {
    return 1;
  }
  if ((v2 & 0x800000000000) != 0)
  {
    if (GEOLogMsgEventShowcaseSuppressionIsDirty(*(void *)(a1 + 376))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x1090000400) != 0) {
    return 1;
  }
  if ((v2 & 0x400000000000) != 0)
  {
    if (GEOLogMsgEventServiceMetadataIsDirty(*(void *)(a1 + 368))) {
      return 1;
    }
    uint64_t v2 = *(void *)(a1 + 528);
  }
  if ((v2 & 0x4000000) != 0) {
    return 1;
  }
  if ((v2 & 0x400000) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 176);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOLogMsgStateIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_115;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_115:

  return v3;
}

os_unfair_lock_s *GEOLogMsgEventIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgEventIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 130);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

uint64_t GEOLogMsgEventHasSensitiveFields(uint64_t result, uint64_t a2)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  if (result)
  {
    uint64_t v3 = (void *)result;
    v4 = [(id)result directionsEvent];
    if (GEOLogMsgEventDirectionsHasSensitiveFields(v4))
    {

      return 1;
    }
    id v5 = [v3 wifiConnectionQualityProbeEvent];
    unsigned __int8 v6 = GEOLogMsgEventWifiConnectionQualityProbeHasSensitiveFields(v5);

    if (v6) {
      return 1;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    unsigned int v7 = objc_msgSend(v3, "logMsgStates", 0);
    uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = *(void *)v13;
      while (2)
      {
        uint64_t v11 = 0;
        do
        {
          if (*(void *)v13 != v10) {
            objc_enumerationMutation(v7);
          }
          if (GEOLogMsgStateHasSensitiveFields(*(void **)(*((void *)&v12 + 1) + 8 * v11), a2))
          {

            return 1;
          }
          ++v11;
        }
        while (v9 != v11);
        uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v9) {
          continue;
        }
        break;
      }
    }

    return 0;
  }
  return result;
}

uint64_t GEOLogMsgEventDirectionsHasSensitiveFields(void *a1)
{
  if (!a1) {
    return 0;
  }
  uint64_t v2 = [a1 finalLocation];
  if (GEOLocationHasSensitiveFields((uint64_t)v2))
  {
    uint64_t HasSensitiveFields = 1;
  }
  else
  {
    v4 = [a1 parkingDetectionLocation];
    if (GEOLocationHasSensitiveFields((uint64_t)v4))
    {
      uint64_t HasSensitiveFields = 1;
    }
    else
    {
      id v5 = [a1 arrivalLocation];
      uint64_t HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5);
    }
  }

  return HasSensitiveFields;
}

void *GEOLogMsgEventWifiConnectionQualityProbeHasSensitiveFields(void *result)
{
  if (result)
  {
    v1 = [result wifiConnectionQuality];
    uint64_t v2 = GEOWiFiConnectionQualityHasSensitiveFields(v1);

    return v2;
  }
  return result;
}

void GEOLogMsgEventDirectionsClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (!a3)
  {
    uint64_t v10 = [a1 finalLocation];
    [v10 clearSensitiveFields:a2];

    goto LABEL_10;
  }
  if ([a1 hasFinalLocation]
    && ([a1 finalLocation],
        unsigned __int8 v6 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v6),
        v6,
        HasSensitiveFields))
  {
    uint64_t v8 = [a1 finalLocation];
    uint64_t v9 = (_DWORD *)[v8 copy];

    GEOLocationClearSensitiveFields(v9);
    [a1 setFinalLocation:v9];
  }
  else
  {
    uint64_t v9 = [a1 finalLocation];
    [v9 clearSensitiveFields:a2];
  }

  if (![a1 hasParkingDetectionLocation]
    || ([a1 parkingDetectionLocation],
        uint64_t v11 = objc_claimAutoreleasedReturnValue(),
        int v12 = GEOLocationHasSensitiveFields((uint64_t)v11),
        v11,
        !v12))
  {
LABEL_10:
    long long v15 = [a1 parkingDetectionLocation];
    [v15 clearSensitiveFields:a2];

    if (!a3) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  long long v13 = [a1 parkingDetectionLocation];
  long long v14 = (_DWORD *)[v13 copy];

  GEOLocationClearSensitiveFields(v14);
  [a1 setParkingDetectionLocation:v14];

LABEL_11:
  if ([a1 hasArrivalLocation])
  {
    unsigned int v16 = [a1 arrivalLocation];
    int v17 = GEOLocationHasSensitiveFields((uint64_t)v16);

    if (v17)
    {
      uint64_t v18 = [a1 arrivalLocation];
      uint64_t v19 = (_DWORD *)[v18 copy];

      GEOLocationClearSensitiveFields(v19);
      [a1 setArrivalLocation:v19];
      goto LABEL_15;
    }
  }
LABEL_14:
  uint64_t v19 = [a1 arrivalLocation];
  [v19 clearSensitiveFields:a2];
LABEL_15:
}

void GEOLogMsgEventWifiConnectionQualityProbeClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasWifiConnectionQuality]
    && ([a1 wifiConnectionQuality],
        id v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = GEOWiFiConnectionQualityHasSensitiveFields(v5),
        v5,
        v6))
  {
    unsigned int v7 = [a1 wifiConnectionQuality];
    id v9 = (id)[v7 copy];

    uint64_t v8 = [v9 location];
    [v8 clearSensitiveFields:a2];

    [a1 setWifiConnectionQuality:v9];
  }
  else
  {
    id v9 = [a1 wifiConnectionQuality];
    [v9 clearSensitiveFields:a2];
  }
}

void sub_18A22AB94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventARSessionUsageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unsigned int v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 64) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          long long v15 = 0;
        }
        else {
          long long v15 = a3;
        }
        LODWORD(v16) = v14;
        char v65 = (v7 != 0) | v14;
        char v66 = (v15 == 0) | v14;
        int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_95;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_95:
      if (v16)
      {
        char v59 = 1;
        goto LABEL_106;
      }
      if (v15)
      {
        while (1)
        {
          int v60 = *v15++;
          char v61 = 32;
          switch(v60)
          {
            case 0:
              goto LABEL_107;
            case 1:
              goto LABEL_101;
            case 2:
              char v61 = 8;
              goto LABEL_101;
            case 6:
              char v61 = 16;
LABEL_101:
              *(unsigned char *)(a1 + 64) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_107;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v66 & 1) == 0)
    {
      int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31 || (*(unsigned char *)(a1 + 64) & 0x20) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_103;
        }
        int v64 = (int)v16;
        unsigned int v16 = objc_alloc_init(GEOVLFLocalizationResults);
        if (!GEOVLFLocalizationResultsReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventARSessionUsage _addNoFlagsVlfLocalizationResults:](a1, v16);
        goto LABEL_78;
      case 2:
        if (!v31 || (*(unsigned char *)(a1 + 64) & 8) != 0) {
          goto LABEL_79;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_103;
        }
        int v64 = (int)v16;
        unsigned int v16 = objc_alloc_init(GEOARElementDetails);
        if (!GEOARElementDetailsReadAllFrom((uint64_t)v16, (void *)v3)) {
          goto LABEL_104;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventARSessionUsage _addNoFlagsArElementDetails:](a1, v16);
        goto LABEL_78;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 64) |= 1u;
        while (2)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v19) + v41);
            *(void *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v27 = v38++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_84:
        uint64_t v58 = 52;
        goto LABEL_93;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 64) |= 4u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v27 = v45++ >= 9;
              if (v27)
              {
                uint64_t v46 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v46 = 0;
        }
LABEL_88:
        *(unsigned char *)(a1 + 60) = v46 != 0;
        goto LABEL_94;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v53 = *v17;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v19) + v54);
            *(void *)(v3 + v53) = v55;
            v39 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v27 = v52++ >= 9;
              if (v27)
              {
                LODWORD(v39) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v39) = 0;
        }
LABEL_92:
        uint64_t v58 = 56;
LABEL_93:
        *(_DWORD *)(a1 + v58) = v39;
        goto LABEL_94;
      case 6:
        if (!v31 || (*(unsigned char *)(a1 + 64) & 0x10) != 0)
        {
LABEL_79:
          char v57 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
LABEL_102:
            char v59 = 0;
            goto LABEL_106;
          }
          goto LABEL_94;
        }
        if (PBReaderPlaceMark())
        {
          int v64 = (int)v16;
          unsigned int v16 = objc_alloc_init(GEOARSessionThermalPressure);
          if (!GEOARSessionThermalPressureReadAllFrom((uint64_t)v16, (void *)v3))
          {
LABEL_104:

            char v59 = 0;
            LOBYTE(v16) = v64;
            goto LABEL_105;
          }
          PBReaderRecallMark();
          -[GEOLogMsgEventARSessionUsage _addNoFlagsThermalPressure:](a1, v16);
LABEL_78:

          LODWORD(v16) = v64;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_94:
          if ((v65 & 1) == 0) {
            goto LABEL_95;
          }
          continue;
        }
LABEL_103:
        char v59 = 0;
LABEL_105:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        *(unsigned char *)(a1 + 64) |= 0x20u;
        *(unsigned char *)(a1 + 64) |= 8u;
        *(unsigned char *)(a1 + 64) |= 0x10u;
        if (v59)
        {
LABEL_107:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_108;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_108:
            int v62 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v36 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_102;
        }
        goto LABEL_94;
    }
  }
}

void sub_18A22D27C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A22E488(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventARSessionUsageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v2 = a1[4];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v26;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v26 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v25 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v25 objects:v31 count:16];
    }
    while (v4);
  }

  long long v23 = 0u;
  long long v24 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  id v7 = a1[2];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v22;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v22 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v21 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v21 objects:v30 count:16];
    }
    while (v9);
  }

  long long v19 = 0u;
  long long v20 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v12 = a1[3];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v18;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v18 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v17 + 1) + 8 * v16++), "readAll:", 1, (void)v17);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v17 objects:v29 count:16];
    }
    while (v14);
  }
}

unint64_t GEOLogMsgEventARSessionUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventARSessionUsageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventARSessionUsageReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventARSessionUsageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventARSessionUsageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventARSessionUsageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A22E850(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventARSessionUsageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventARSessionUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A22E8B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFLocalizationResultsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFCorrectionIsValid(a1)) {
            goto LABEL_40;
          }
          goto LABEL_46;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v17 = 0;
          break;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFLocalizationDetailsIsValid(a1)) {
            goto LABEL_46;
          }
          goto LABEL_40;
        case 4u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEOVLFPositionContextClassificationIsValid(a1))
          {
            goto LABEL_46;
          }
LABEL_40:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_46:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v18 = *v2;
        uint64_t v19 = *(void *)&a1[v18];
        unint64_t v20 = v19 + 1;
        if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
          break;
        }
        int v21 = *(char *)(*(void *)&a1[*v5] + v19);
        *(void *)&a1[v18] = v20;
        if (v21 < 0 && v17++ <= 8) {
          continue;
        }
        goto LABEL_41;
      }
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18A22EF1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventARSessionUsageIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x78) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A22F6CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventBatchTrafficProbeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A2300A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventBatchTrafficProbeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventBatchTrafficProbeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A230108(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCommuteWindowReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 44) |= 1u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            *(void *)(a1 + 16) = v20;
            goto LABEL_84;
          case 2u:
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 44) |= 2u;
            while (2)
            {
              uint64_t v24 = *v4;
              uint64_t v25 = *(void *)&v3[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
                *(void *)&v3[v24] = v26;
                v23 |= (unint64_t)(v27 & 0x7F) << v21;
                if (v27 < 0)
                {
                  v21 += 7;
                  BOOL v15 = v22++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_66;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_66:
            uint64_t v53 = 24;
            goto LABEL_83;
          case 3u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 44) |= 0x20u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v23 |= (unint64_t)(v33 & 0x7F) << v28;
                if (v33 < 0)
                {
                  v28 += 7;
                  BOOL v15 = v29++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_70;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_70:
            uint64_t v53 = 40;
            goto LABEL_83;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 44) |= 4u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
                *(void *)&v3[v36] = v38;
                v23 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_74;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_74:
            uint64_t v53 = 28;
            goto LABEL_83;
          case 5u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_90;
            }
            uint64_t v40 = objc_alloc_init(GEOPredictedCommuteDestination);
            if (!GEOPredictedCommuteDestinationReadAllFrom((uint64_t)v40, v3))
            {

              goto LABEL_90;
            }
            PBReaderRecallMark();
            objc_msgSend((id)a1, "addPredictedDestination:", v40, 0, 0);

LABEL_84:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_88;
            }
            break;
          case 6u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 44) |= 0x10u;
            while (2)
            {
              uint64_t v43 = *v4;
              uint64_t v44 = *(void *)&v3[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
                *(void *)&v3[v43] = v45;
                v23 |= (unint64_t)(v46 & 0x7F) << v41;
                if (v46 < 0)
                {
                  v41 += 7;
                  BOOL v15 = v42++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_78;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_78:
            uint64_t v53 = 36;
            goto LABEL_83;
          case 7u:
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
                *(void *)&v3[v49] = v51;
                v23 |= (unint64_t)(v52 & 0x7F) << v47;
                if (v52 < 0)
                {
                  v47 += 7;
                  BOOL v15 = v48++ >= 9;
                  if (v15)
                  {
                    LODWORD(v23) = 0;
                    goto LABEL_82;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v23) = 0;
            }
LABEL_82:
            uint64_t v53 = 32;
LABEL_83:
            *(_DWORD *)(a1 + v53) = v23;
            goto LABEL_84;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_90;
            }
            goto LABEL_84;
        }
      }
    }
LABEL_88:
    BOOL v54 = v3[*v6] == 0;
  }
  else
  {
LABEL_90:
    BOOL v54 = 0;
  }
  objc_sync_exit(v3);

  return v54;
}

void sub_18A231678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCommuteWindowReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventCommuteWindowReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2316F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPredictedCommuteDestinationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_46;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_46;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        if (v16 != 1) {
          goto LABEL_48;
        }
        uint64_t v30 = *v2;
        unint64_t v31 = *(void *)&a1[v30];
        if (v31 <= 0xFFFFFFFFFFFFFFF7)
        {
          unint64_t v32 = v31 + 8;
          if (v32 <= *(void *)&a1[*v3])
          {
            *(void *)&a1[v30] = v32;
            goto LABEL_43;
          }
        }
        goto LABEL_41;
      }
      if (v18 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v19 = 0;
        while (1)
        {
          uint64_t v20 = *v2;
          uint64_t v21 = *(void *)&a1[v20];
          unint64_t v22 = v21 + 1;
          if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
            goto LABEL_37;
          }
          int v23 = *(char *)(*(void *)&a1[*v5] + v21);
          *(void *)&a1[v20] = v22;
          if (v23 < 0)
          {
            BOOL v24 = v19++ > 8;
            if (!v24) {
              continue;
            }
          }
          goto LABEL_43;
        }
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_48:
        BOOL v33 = 0;
        goto LABEL_47;
      }
LABEL_43:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_46;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_48;
    }
    unsigned int v25 = 0;
    while (1)
    {
      uint64_t v26 = *v2;
      uint64_t v27 = *(void *)&a1[v26];
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)&a1[*v3]) {
        break;
      }
      int v29 = *(char *)(*(void *)&a1[*v5] + v27);
      *(void *)&a1[v26] = v28;
      if (v29 < 0)
      {
        BOOL v24 = v25++ > 8;
        if (!v24) {
          continue;
        }
      }
      goto LABEL_43;
    }
LABEL_37:
    uint64_t v14 = *v4;
LABEL_41:
    a1[v14] = 1;
    goto LABEL_43;
  }
LABEL_46:
  BOOL v33 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgEventCuratedCollectionStatsReadAllFrom(uint64_t a1, void *a2)
{
  BOOL v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v2[*MEMORY[0x1E4F940E8]] < *(void *)&v2[*MEMORY[0x1E4F940E0]])
    {
      char v6 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v2[*v5]) {
          break;
        }
        char v7 = 0;
        unsigned int v8 = 0;
        unint64_t v9 = 0;
        while (1)
        {
          uint64_t v10 = *v3;
          uint64_t v11 = *(void *)&v2[v10];
          unint64_t v12 = v11 + 1;
          if (v11 == -1 || v12 > *(void *)&v2[*v4]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v11);
          *(void *)&v2[v10] = v12;
          v9 |= (unint64_t)(v13 & 0x7F) << v7;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v7 += 7;
          BOOL v14 = v8++ >= 9;
          if (v14)
          {
            unint64_t v9 = 0;
            int v15 = v2[*v5];
            goto LABEL_15;
          }
        }
        v2[*v5] = 1;
LABEL_13:
        int v15 = v2[*v5];
        if (v2[*v5]) {
          unint64_t v9 = 0;
        }
LABEL_15:
        int v16 = v9 & 7;
        if (v15 || v16 == 4) {
          break;
        }
        if ((v9 >> 3) == 1)
        {
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_47;
            }
            while (*(void *)&v2[*v3] < *(void *)&v2[*v4] && !v2[*v5])
            {
              char v18 = 0;
              unsigned int v19 = 0;
              uint64_t v20 = 0;
              while (1)
              {
                uint64_t v21 = *v3;
                uint64_t v22 = *(void *)&v2[v21];
                unint64_t v23 = v22 + 1;
                if (v22 == -1 || v23 > *(void *)&v2[*v4]) {
                  break;
                }
                char v24 = *(unsigned char *)(*(void *)&v2[*v6] + v22);
                *(void *)&v2[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  BOOL v14 = v19++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v2[*v5] = 1;
LABEL_32:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            while (1)
            {
              uint64_t v28 = *v3;
              uint64_t v29 = *(void *)&v2[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v2[*v4]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v2[*v6] + v29);
              *(void *)&v2[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_44;
            }
            v2[*v5] = 1;
LABEL_44:
            PBRepeatedUInt64Add();
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v2[*v3] < *(void *)&v2[*v4]);
    }
    BOOL v32 = v2[*v5] == 0;
  }
  else
  {
LABEL_47:
    BOOL v32 = 0;
  }
  objc_sync_exit(v2);

  return v32;
}

void sub_18A232C20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCuratedCollectionStatsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventCuratedCollectionStatsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A232C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A23329C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventCuratedCollectionUsageReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 80) >> 6) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 80) >> 5) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v7 & 1) {
    char v13 = 0;
  }
  else {
    char v13 = a3;
  }
  BOOL v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_99;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_99:
      if (v12)
      {
        char v59 = 1;
        goto LABEL_107;
      }
      if (v13)
      {
        while (1)
        {
          int v60 = *v13++;
          char v61 = 64;
          switch(v60)
          {
            case 0:
              goto LABEL_108;
            case 5:
              goto LABEL_105;
            case 6:
              char v61 = 16;
              goto LABEL_105;
            case 7:
              char v61 = 32;
LABEL_105:
              *(unsigned char *)(a1 + 80) |= v61;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_108;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_76;
        }
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 80) |= 4u;
        while (1)
        {
          uint64_t v36 = *v14;
          uint64_t v37 = *(void *)(v3 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_79;
          }
          v33 += 7;
          BOOL v24 = v34++ >= 9;
          if (v24)
          {
            uint64_t v35 = 0;
            goto LABEL_81;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_79:
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v35 = 0;
        }
LABEL_81:
        *(void *)(a1 + 32) = v35;
        goto LABEL_98;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_76;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 80) |= 8u;
        while (2)
        {
          uint64_t v43 = *v14;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v16) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v24 = v41++ >= 9;
              if (v24)
              {
                LODWORD(v42) = 0;
                goto LABEL_85;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v42) = 0;
        }
LABEL_85:
        *(_DWORD *)(a1 + 76) = v42;
        goto LABEL_98;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_76;
        }
        *(unsigned char *)(a1 + 80) |= 1u;
        uint64_t v47 = *v14;
        unint64_t v48 = *(void *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v49 = *(void *)(*(void *)(v3 + *v16) + v48);
          *(void *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          uint64_t v49 = 0;
        }
        uint64_t v58 = 16;
        goto LABEL_97;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_76;
        }
        *(unsigned char *)(a1 + 80) |= 2u;
        uint64_t v50 = *v14;
        unint64_t v51 = *(void *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v49 = *(void *)(*(void *)(v3 + *v16) + v51);
          *(void *)(v3 + v50) = v51 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          uint64_t v49 = 0;
        }
        uint64_t v58 = 24;
LABEL_97:
        *(void *)(a1 + v58) = v49;
        goto LABEL_98;
      case 5:
        if (!v28) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          char v57 = 2 * *(unsigned char *)(a1 + 80);
LABEL_92:
          v8 += v57 >> 7;
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_106;
        }
        char v52 = objc_alloc_init(GEOTouristInfo);
        if (GEOTouristInfoReadAllFrom((uint64_t)v52, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v53 = *(void **)(a1 + 56);
          *(void *)(a1 + 56) = v52;

          --v8;
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_98:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_99;
          }
          continue;
        }

        char v59 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_107:
        *(unsigned char *)(a1 + 80) |= 0x40u;
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 0x20u;
        if (v59)
        {
LABEL_108:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_109;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_109:
            int v62 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if (!v28) {
          goto LABEL_76;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) == 0)
        {
          uint64_t v54 = PBReaderReadString();
          uint64_t v55 = 40;
          goto LABEL_75;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_106;
        }
        char v57 = 8 * *(unsigned char *)(a1 + 80);
        goto LABEL_92;
      case 7:
        if (!v28)
        {
LABEL_76:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_106;
          }
          goto LABEL_98;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) == 0)
        {
          uint64_t v54 = PBReaderReadString();
          uint64_t v55 = 48;
LABEL_75:
          char v56 = *(void **)(a1 + v55);
          *(void *)(a1 + v55) = v54;

          --v8;
          goto LABEL_98;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_106:
          char v59 = 0;
          goto LABEL_107;
        }
        char v57 = 4 * *(unsigned char *)(a1 + 80);
        goto LABEL_92;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_106;
        }
        goto LABEL_98;
    }
  }
}

void sub_18A233B74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A233CE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A23442C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventCuratedCollectionUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventCuratedCollectionUsageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgEventCuratedCollectionUsageReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgEventCuratedCollectionUsageReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventCuratedCollectionUsageReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 56) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A2345D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventCuratedCollectionUsageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventCuratedCollectionUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A234638(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTouristInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1) {
          goto LABEL_39;
        }
        uint64_t v24 = *v2;
        unint64_t v25 = *(void *)&a1[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v26 = v25 + 8, v26 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v24] = v26;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_39;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        BOOL v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

void sub_18A234A9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventCuratedCollectionUsageIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = *(unsigned __int8 *)(a1 + 80) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18A234EE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A235580(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventDailyUseSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 64) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 64) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  int v15 = (int *)MEMORY[0x1E4F940E8];
  if (v12) {
    BOOL v16 = 1;
  }
  else {
    BOOL v16 = v14 == 0;
  }
  BOOL v62 = v16;
  char v17 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_89;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_89:
      if (v13)
      {
        char v56 = 1;
        goto LABEL_100;
      }
      if (!v14)
      {
LABEL_101:
        unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
        if (!v13) {
          return v3;
        }
LABEL_102:
        int v60 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        int v58 = *v14++;
        int v57 = v58;
        if (v58 == 1) {
          break;
        }
        if (v57 == 5)
        {
          char v59 = 8;
LABEL_98:
          *(unsigned char *)(a1 + 64) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_101;
        }
      }
      char v59 = 16;
      goto LABEL_98;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v62)
    {
      int v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30 || (*(unsigned char *)(a1 + 64) & 0x10) != 0) {
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_99;
        }
        uint64_t v35 = objc_alloc_init(GEODailyUseSummaryUseEvent);
        if (GEODailyUseSummaryUseEventReadAllFrom((uint64_t)v35, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventDailyUseSummary _addNoFlagsUseEvents:](a1, v35);

          char v17 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_72;
        }

        char v56 = 0;
        char v17 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_100;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_71;
        }
        *(unsigned char *)(a1 + 64) |= 1u;
        uint64_t v36 = *v15;
        unint64_t v37 = *(void *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v38 = *(void *)(*(void *)(v3 + *v18) + v37);
          *(void *)(v3 + v36) = v37 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v17) = 1;
          uint64_t v38 = 0;
        }
        *(void *)(a1 + 16) = v38;
        goto LABEL_72;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_71;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 64) |= 2u;
        while (2)
        {
          uint64_t v42 = *v15;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v26 = v40++ >= 9;
              if (v26)
              {
                uint64_t v41 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v41 = 0;
        }
LABEL_80:
        *(void *)(a1 + 24) = v41;
        goto LABEL_72;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_71;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 64) |= 4u;
        while (2)
        {
          uint64_t v49 = *v15;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v26 = v47++ >= 9;
              if (v26)
              {
                LODWORD(v48) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v48) = 0;
        }
LABEL_84:
        *(_DWORD *)(a1 + 60) = v48;
        goto LABEL_72;
      case 5:
        if (!v30)
        {
LABEL_71:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_99;
          }
LABEL_72:
          if (v8) {
            char v55 = 1;
          }
          else {
            char v55 = v13;
          }
          if ((v55 & 1) == 0) {
            goto LABEL_89;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 64) & 8) == 0)
        {
          uint64_t v53 = PBReaderReadString();
          uint64_t v54 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v53;

          --v8;
          goto LABEL_72;
        }
        if (PBReaderSkipValueWithTag())
        {
          v8 += *(unsigned __int8 *)(a1 + 64) << 28 >> 31;
          goto LABEL_72;
        }
LABEL_99:
        char v56 = 0;
LABEL_100:
        *(unsigned char *)(a1 + 64) |= 0x10u;
        *(unsigned char *)(a1 + 64) |= 8u;
        if (v56) {
          goto LABEL_101;
        }
        unint64_t v3 = 0;
        if (v13) {
          goto LABEL_102;
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_99;
        }
        goto LABEL_72;
    }
  }
}

void sub_18A2361FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A236770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventDailyUseSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventDailyUseSummaryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgEventDailyUseSummaryReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgEventDailyUseSummaryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventDailyUseSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventDailyUseSummaryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A23690C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventDailyUseSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventDailyUseSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A236970(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A236C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDailyUseSummaryIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A236F30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDeviceSyncStatusReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v18 = objc_alloc_init(GEODeviceSyncData);
          if (!GEODeviceSyncDataReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addSyncData:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18A237AF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDeviceSyncStatusReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventDeviceSyncStatusReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A237B5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2381FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2386D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A238A64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2392BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A239748(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A239B10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A239C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A23A81C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A23C134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventDirectionsCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  id v2 = a1[11];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v4);
  }

  [a1[16] readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = a1[12];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
    }
    while (v9);
  }

  [a1[19] readAll:1];
  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v12 = a1[20];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * v16++), "readAll:", 1, (void)v18);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
    }
    while (v14);
  }

  [a1[17] readAll:1];
  return [a1[10] readAll:1];
}

uint64_t GEOLogMsgEventDirectionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 172))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventDirectionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 176));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 168) = [v8 position];
  *(_DWORD *)(a1 + 172) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventDirectionsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventDirectionsReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOLogMsgEventDirectionsReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventDirectionsCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 176));
  return Specified;
}

void sub_18A23C54C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgEventDirectionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOLogMsgEventDirectionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A23C5B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A23CE70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventDirectionsIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 176));
  uint64_t v2 = *(void *)(a1 + 240);
  if ((v2 & 0x202000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x20000000000) == 0)
  {
LABEL_5:
    if ((v2 & 0x19C000000000) != 0) {
      return 1;
    }
    if ((v2 & 0x40000000000) != 0)
    {
      if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 136))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 240);
    }
    if ((v2 & 0x1000000000) != 0)
    {
      if (GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 80))) {
        return 1;
      }
      uint64_t v2 = *(void *)(a1 + 240);
    }
    if ((v2 & 0x2000000000) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 88);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_17:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEODirectionsFeedbackIsDirty(*(void *)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_35;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_17;
            }
            break;
          }
        }
      }

      uint64_t v2 = *(void *)(a1 + 240);
    }
    if ((v2 & 0x100000000000) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 160);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_36:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_28:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEOWaypointInfoIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_28;
        }
        goto LABEL_36;
      }
    }
LABEL_35:
    uint64_t v3 = 1;
    goto LABEL_36;
  }
  if (!GEOLocationIsDirty(*(os_unfair_lock_s **)(a1 + 128)))
  {
    uint64_t v2 = *(void *)(a1 + 240);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOLogMsgEventDirectionsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgEventDirectionsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 44);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A23E59C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDirectionsRequestDetailsReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (2)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
                *(void *)&v3[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  BOOL v15 = v19++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_53:
            *(unsigned char *)(a1 + 20) = v20 != 0;
            continue;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
              *(void *)&v3[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if ((v31 & 0x80) == 0) {
                goto LABEL_55;
              }
              v25 += 7;
              BOOL v15 = v26++ >= 9;
              if (v15)
              {
                LODWORD(v27) = 0;
                goto LABEL_57;
              }
            }
            v3[*v6] = 1;
LABEL_55:
            if (v3[*v6]) {
              LODWORD(v27) = 0;
            }
LABEL_57:
            uint64_t v44 = 16;
            goto LABEL_66;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v27 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v27) = 0;
                    goto LABEL_61;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v27) = 0;
            }
LABEL_61:
            uint64_t v44 = 12;
            goto LABEL_66;
          case 4u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_69;
            }
            continue;
        }
        while (1)
        {
          uint64_t v40 = *v4;
          uint64_t v41 = *(void *)&v3[v40];
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)&v3[*v5]) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
          *(void *)&v3[v40] = v42;
          v27 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_63;
          }
          v38 += 7;
          BOOL v15 = v39++ >= 9;
          if (v15)
          {
            LODWORD(v27) = 0;
            goto LABEL_65;
          }
        }
        v3[*v6] = 1;
LABEL_63:
        if (v3[*v6]) {
          LODWORD(v27) = 0;
        }
LABEL_65:
        uint64_t v44 = 8;
LABEL_66:
        *(_DWORD *)(a1 + v44) = v27;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A24107C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDirectionsRequestDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventDirectionsRequestDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2410F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "18A24B290: too complex function (funcsize=7824)"

#error "18A25A78C: too complex function (funcsize=8028)"

BOOL GEOLogMsgEventDisplayAnalyticReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_75;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_77;
              }
            }
            v3[*v6] = 1;
LABEL_75:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_77:
            uint64_t v64 = 16;
            goto LABEL_102;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 0x40u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_81;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_81:
            uint64_t v64 = 36;
            goto LABEL_102;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 0x80u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_85;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_85:
            uint64_t v64 = 40;
            goto LABEL_102;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 0x20u;
            while (2)
            {
              uint64_t v39 = *v4;
              uint64_t v40 = *(void *)&v3[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v40);
                *(void *)&v3[v39] = v41;
                v20 |= (unint64_t)(v42 & 0x7F) << v37;
                if (v42 < 0)
                {
                  v37 += 7;
                  BOOL v15 = v38++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_89;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_89:
            uint64_t v64 = 32;
            goto LABEL_102;
          case 5u:
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 0x10u;
            while (2)
            {
              uint64_t v45 = *v4;
              uint64_t v46 = *(void *)&v3[v45];
              unint64_t v47 = v46 + 1;
              if (v46 == -1 || v47 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v48 = *(unsigned char *)(*(void *)&v3[*v7] + v46);
                *(void *)&v3[v45] = v47;
                v20 |= (unint64_t)(v48 & 0x7F) << v43;
                if (v48 < 0)
                {
                  v43 += 7;
                  BOOL v15 = v44++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_93;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_93:
            uint64_t v64 = 28;
            goto LABEL_102;
          case 6u:
            char v49 = 0;
            unsigned int v50 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 8u;
            while (2)
            {
              uint64_t v51 = *v4;
              uint64_t v52 = *(void *)&v3[v51];
              unint64_t v53 = v52 + 1;
              if (v52 == -1 || v53 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v54 = *(unsigned char *)(*(void *)&v3[*v7] + v52);
                *(void *)&v3[v51] = v53;
                v20 |= (unint64_t)(v54 & 0x7F) << v49;
                if (v54 < 0)
                {
                  v49 += 7;
                  BOOL v15 = v50++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_97;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_97:
            uint64_t v64 = 24;
            goto LABEL_102;
          case 7u:
            *(unsigned char *)(a1 + 44) |= 1u;
            uint64_t v55 = *v4;
            unint64_t v56 = *(void *)&v3[v55];
            if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v57 = *(void *)(*(void *)&v3[*v7] + v56);
              *(void *)&v3[v55] = v56 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v57 = 0;
            }
            *(void *)(a1 + 8) = v57;
            continue;
          case 8u:
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 44) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_108;
            }
            continue;
        }
        while (1)
        {
          uint64_t v60 = *v4;
          uint64_t v61 = *(void *)&v3[v60];
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)&v3[*v5]) {
            break;
          }
          char v63 = *(unsigned char *)(*(void *)&v3[*v7] + v61);
          *(void *)&v3[v60] = v62;
          v20 |= (unint64_t)(v63 & 0x7F) << v58;
          if ((v63 & 0x80) == 0) {
            goto LABEL_99;
          }
          v58 += 7;
          BOOL v15 = v59++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_101;
          }
        }
        v3[*v6] = 1;
LABEL_99:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_101:
        uint64_t v64 = 20;
LABEL_102:
        *(_DWORD *)(a1 + v64) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v65 = v3[*v6] == 0;
  }
  else
  {
LABEL_108:
    BOOL v65 = 0;
  }
  objc_sync_exit(v3);

  return v65;
}

void sub_18A264010(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventDisplayAnalyticReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventDisplayAnalyticReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A264094(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A264BC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVRoutingVehicleDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v62 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  char v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_85;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_85:
      if (v13)
      {
        char v56 = 1;
        goto LABEL_96;
      }
      if (!v14) {
        goto LABEL_97;
      }
      while (1)
      {
        int v58 = *v14++;
        int v57 = v58;
        if (v58 == 1) {
          break;
        }
        if (v57 == 2)
        {
          char v59 = 8;
LABEL_94:
          *(unsigned char *)(a1 + 52) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_97;
        }
      }
      char v59 = 4;
      goto LABEL_94;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v62)
    {
      char v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_102;
        }
        char v54 = 32 * *(unsigned char *)(a1 + 52);
        goto LABEL_80;
      case 2:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 52) & 8) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 24;
LABEL_49:
          unsigned int v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          long long v17 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_81;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v54 = 16 * *(unsigned char *)(a1 + 52);
LABEL_80:
          v9 += v54 >> 7;
          long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
          if (v9) {
            char v55 = 1;
          }
          else {
            char v55 = v13;
          }
          if ((v55 & 1) == 0) {
            goto LABEL_85;
          }
          continue;
        }
LABEL_102:
        char v56 = 0;
        long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
        *(unsigned char *)(a1 + 52) |= 4u;
        *(unsigned char *)(a1 + 52) |= 8u;
        if (v56)
        {
LABEL_97:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_98;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_98:
            uint64_t v60 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 52) |= 1u;
        while (2)
        {
          uint64_t v42 = *v16;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v26 = v40++ >= 9;
              if (v26)
              {
                LODWORD(v41) = 0;
                goto LABEL_71;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v41) = 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 44) = v41;
        goto LABEL_81;
      case 4:
        if (v8)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v48 = 0;
          *(unsigned char *)(a1 + 52) |= 2u;
          while (1)
          {
            uint64_t v49 = *v16;
            uint64_t v50 = *(void *)(v3 + v49);
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)(v3 + *v6)) {
              break;
            }
            char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if ((v52 & 0x80) == 0) {
              goto LABEL_73;
            }
            v46 += 7;
            BOOL v26 = v47++ >= 9;
            if (v26)
            {
              uint64_t v48 = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v48 = 0;
          }
LABEL_75:
          *(unsigned char *)(a1 + 48) = v48 != 0;
        }
        else
        {
LABEL_66:
          char v53 = PBReaderSkipValueWithTag();
          long long v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v53 & 1) == 0)
          {
LABEL_95:
            char v56 = 0;
            goto LABEL_96;
          }
        }
        goto LABEL_81;
      default:
        int v37 = PBReaderSkipValueWithTag();
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_95;
        }
        goto LABEL_81;
    }
  }
}

void sub_18A2652BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2658E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventEVRoutingVehicleDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A265A78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVRoutingVehicleDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventEVRoutingVehicleDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A265ADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A265CB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventEVRoutingVehicleDetailsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A265FFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A266578(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVTripReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 76)), (uint16x4_t)0xFFF7FFFAFFFBFFF8), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 76) >> 7) & 1));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 3);
  if ((v12 | v8)) {
    BOOL v13 = 0;
  }
  else {
    BOOL v13 = a3;
  }
  LODWORD(v14) = v12;
  char v81 = (v13 == 0) | v12;
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  long long v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_131;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_131:
      if (v14)
      {
        char v75 = 1;
        goto LABEL_144;
      }
      if (v13)
      {
        while (1)
        {
          int v76 = *v13++;
          __int16 v77 = 32;
          switch(v76)
          {
            case 0:
              goto LABEL_145;
            case 3:
              goto LABEL_139;
            case 4:
              __int16 v77 = 256;
              goto LABEL_139;
            case 5:
              __int16 v77 = 64;
              goto LABEL_139;
            case 9:
              __int16 v77 = 512;
              goto LABEL_139;
            case 10:
              __int16 v77 = 128;
LABEL_139:
              *(_WORD *)(a1 + 76) |= v77;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_145;
    }
    unint64_t v28 = v20 >> 3;
    BOOL v29 = (char)v14;
    if ((v81 & 1) == 0)
    {
      BOOL v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v34 = 0;
        unsigned int v35 = 0;
        uint64_t v36 = 0;
        *(_WORD *)(a1 + 76) |= 4u;
        while (1)
        {
          uint64_t v37 = *v15;
          uint64_t v38 = *(void *)(v3 + v37);
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)(v3 + *v6)) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)(v3 + *v17) + v38);
          *(void *)(v3 + v37) = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_107;
          }
          v34 += 7;
          BOOL v25 = v35++ >= 9;
          if (v25)
          {
            uint64_t v36 = 0;
            goto LABEL_109;
          }
        }
        *(unsigned char *)(v3 + *v16) = 1;
LABEL_107:
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v36 = 0;
        }
LABEL_109:
        BOOL v73 = v36 != 0;
        uint64_t v74 = 70;
        goto LABEL_126;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(_WORD *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v45 = *v15;
          uint64_t v46 = *(void *)(v3 + v45);
          unint64_t v47 = v46 + 1;
          if (v46 == -1 || v47 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v48 = *(unsigned char *)(*(void *)(v3 + *v17) + v46);
            *(void *)(v3 + v45) = v47;
            v44 |= (unint64_t)(v48 & 0x7F) << v42;
            if (v48 < 0)
            {
              v42 += 7;
              BOOL v25 = v43++ >= 9;
              if (v25)
              {
                uint64_t v44 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v44 = 0;
        }
LABEL_113:
        BOOL v73 = v44 != 0;
        uint64_t v74 = 71;
        goto LABEL_126;
      case 3:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x20) != 0) {
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        int v80 = (int)v14;
        char v14 = objc_alloc_init(GEOChargeLocationDetails);
        if (!GEOChargeLocationDetailsReadAllFrom((uint64_t)v14, (void *)v3)) {
          goto LABEL_142;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventEVTrip _addNoFlagsChargeLocationDetails:](a1, v14);
        goto LABEL_103;
      case 4:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x100) != 0) {
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        int v80 = (int)v14;
        char v14 = objc_alloc_init(GEOStopAddedDetails);
        if (!GEOStopAddedDetailsReadAllFrom((uint64_t)v14, (void *)v3)) {
          goto LABEL_142;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventEVTrip _addNoFlagsStopAddedDetails:](a1, v14);
        goto LABEL_103;
      case 5:
        if (!v29) {
          goto LABEL_104;
        }
        if ((*(_WORD *)(a1 + 76) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_141:
            char v75 = 0;
            goto LABEL_143;
          }
          v7 += *(unsigned __int16 *)(a1 + 76) << 25 >> 31;
        }
        else
        {
          uint64_t v49 = PBReaderReadString();
          uint64_t v50 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v49;

          --v7;
        }
        goto LABEL_129;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v53 = 0;
        *(_WORD *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v54 = *v15;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v17) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v25 = v52++ >= 9;
              if (v25)
              {
                uint64_t v53 = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v53 = 0;
        }
LABEL_117:
        BOOL v73 = v53 != 0;
        uint64_t v74 = 69;
        goto LABEL_126;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v58 = 0;
        unsigned int v59 = 0;
        uint64_t v60 = 0;
        *(_WORD *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v61 = *v15;
          uint64_t v62 = *(void *)(v3 + v61);
          unint64_t v63 = v62 + 1;
          if (v62 == -1 || v63 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v64 = *(unsigned char *)(*(void *)(v3 + *v17) + v62);
            *(void *)(v3 + v61) = v63;
            v60 |= (unint64_t)(v64 & 0x7F) << v58;
            if (v64 < 0)
            {
              v58 += 7;
              BOOL v25 = v59++ >= 9;
              if (v25)
              {
                uint64_t v60 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v60 = 0;
        }
LABEL_121:
        BOOL v73 = v60 != 0;
        uint64_t v74 = 68;
        goto LABEL_126;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_104;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v67 = 0;
        *(_WORD *)(a1 + 76) |= 0x10u;
        while (2)
        {
          uint64_t v68 = *v15;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v17) + v69);
            *(void *)(v3 + v68) = v70;
            v67 |= (unint64_t)(v71 & 0x7F) << v65;
            if (v71 < 0)
            {
              v65 += 7;
              BOOL v25 = v66++ >= 9;
              if (v25)
              {
                uint64_t v67 = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          uint64_t v67 = 0;
        }
LABEL_125:
        BOOL v73 = v67 != 0;
        uint64_t v74 = 72;
LABEL_126:
        *(unsigned char *)(a1 + v74) = v73;
        goto LABEL_130;
      case 9:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x200) != 0) {
          goto LABEL_104;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        int v80 = (int)v14;
        char v14 = objc_alloc_init(GEODodgeballDetails);
        if (!GEODodgeballDetailsReadAllFrom((uint64_t)v14, (void *)v3)) {
          goto LABEL_142;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventEVTrip _addNoFlagsStopRemovedDetails:](a1, v14);
        goto LABEL_103;
      case 10:
        if (!v29 || (*(_WORD *)(a1 + 76) & 0x80) != 0)
        {
LABEL_104:
          char v72 = PBReaderSkipValueWithTag();
          int v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v72 & 1) == 0)
          {
LABEL_140:
            char v75 = 0;
            goto LABEL_144;
          }
          goto LABEL_130;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_141;
        }
        int v80 = (int)v14;
        char v14 = objc_alloc_init(GEODodgeballDetails);
        if (GEODodgeballDetailsReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventEVTrip _addNoFlagsRealtimeDodgeball:](a1, v14);
LABEL_103:

          LODWORD(v14) = v80;
LABEL_129:
          int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_130:
          if (!(v14 & 1 | (v7 != 0))) {
            goto LABEL_131;
          }
          continue;
        }
LABEL_142:

        char v75 = 0;
        LOBYTE(v14) = v80;
LABEL_143:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_144:
        *(_WORD *)(a1 + 76) |= 0x20u;
        *(_WORD *)(a1 + 76) |= 0x100u;
        *(_WORD *)(a1 + 76) |= 0x40u;
        *(_WORD *)(a1 + 76) |= 0x200u;
        *(_WORD *)(a1 + 76) |= 0x80u;
        if (v75)
        {
LABEL_145:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_146;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v14)
          {
LABEL_146:
            uint64_t v78 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v41 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v41) {
          goto LABEL_140;
        }
        goto LABEL_130;
    }
  }
}

void sub_18A267320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2676E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2679B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A267D74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A269050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventEVTripCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  id v2 = a1[2];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v35;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v35 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v34 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v34 objects:v41 count:16];
    }
    while (v4);
  }

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  id v7 = a1[5];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v31;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v31 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v30 objects:v40 count:16];
    }
    while (v9);
  }

  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v12 = a1[6];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v27;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v27 != v15) {
          objc_enumerationMutation(v12);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v16++) readAll:1];
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v26 objects:v39 count:16];
    }
    while (v14);
  }

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v17 = a1[4];
  uint64_t v18 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)v23;
    do
    {
      uint64_t v21 = 0;
      do
      {
        if (*(void *)v23 != v20) {
          objc_enumerationMutation(v17);
        }
        objc_msgSend(*(id *)(*((void *)&v22 + 1) + 8 * v21++), "readAll:", 1, (void)v22);
      }
      while (v19 != v21);
      uint64_t v19 = [v17 countByEnumeratingWithState:&v22 objects:v38 count:16];
    }
    while (v19);
  }
}

unint64_t GEOLogMsgEventEVTripReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventEVTripReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventEVTripReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventEVTripReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventEVTripReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventEVTripCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A2694B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventEVTripReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventEVTripReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A269514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopAddedDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_18A269BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventEVTripIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(_WORD *)(a1 + 76) & 0x7E0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A26A41C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventFullNavTraceReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A26B04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventFullNavTraceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventFullNavTraceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A26B0B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationReadAllFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            a1[32] |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_54;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_56:
            uint64_t v44 = 20;
            goto LABEL_69;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            a1[32] |= 4u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_60;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_60:
            uint64_t v44 = 24;
            goto LABEL_69;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_73;
            }
            long long v31 = objc_alloc_init(GEOLogMsgEventGridDurationEndStateErrorInfo);
            if (!GEOLogMsgEventGridDurationEndStateErrorInfoReadAllFrom((uint64_t)v31, v3))
            {

              goto LABEL_73;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addEndStateErrorReason:", v31, 0, 0);

LABEL_70:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_71;
            }
            break;
          case 4u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v20 = 0;
            a1[32] |= 8u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v20 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_64:
            uint64_t v44 = 28;
            goto LABEL_69;
          case 5u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v20 = 0;
            a1[32] |= 1u;
            while (2)
            {
              uint64_t v40 = *v4;
              uint64_t v41 = *(void *)&v3[v40];
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
                *(void *)&v3[v40] = v42;
                v20 |= (unint64_t)(v43 & 0x7F) << v38;
                if (v43 < 0)
                {
                  v38 += 7;
                  BOOL v15 = v39++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_68:
            uint64_t v44 = 16;
LABEL_69:
            *(_DWORD *)&a1[v44] = v20;
            goto LABEL_70;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_73;
            }
            goto LABEL_70;
        }
      }
    }
LABEL_71:
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_73:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A26C66C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventGridDurationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A26C6E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationEndStateErrorInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgEventGridDurationEndStateErrorInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              int v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__type;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              int v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__type;
              goto LABEL_42;
            }
          }
          int v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__type;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              int v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__count;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              int v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__count;
              goto LABEL_42;
            }
          }
          int v26 = &OBJC_IVAR___GEOLogMsgEventGridDurationEndStateErrorInfo__count;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A26DA3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventGridDurationEndStateErrorInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventGridDurationEndStateErrorInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A26DAA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A26E038(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventHardStopReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_89:
    if (v12)
    {
      char v54 = 1;
      goto LABEL_91;
    }
    if (!v13) {
      goto LABEL_102;
    }
    while (1)
    {
      int v57 = *v13++;
      int v56 = v57;
      if (v57 == 1) {
        break;
      }
      if (v56 == 2)
      {
        char v55 = 4;
LABEL_98:
        *(unsigned char *)(a1 + 68) |= v55;
      }
      else if (!v56)
      {
        goto LABEL_102;
      }
    }
    char v55 = 2;
    goto LABEL_98;
  }
  if (v13) {
    BOOL v16 = (v7 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (v9) {
    int v17 = 1;
  }
  else {
    int v17 = v12;
  }
  int v60 = v17;
  BOOL v61 = v16;
  char v18 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_89;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v14;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_30;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_32;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_30:
    int v27 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v21 = 0;
    }
LABEL_32:
    int v28 = v21 & 7;
    if (v27 || v28 == 4) {
      goto LABEL_89;
    }
    unint64_t v30 = v21 >> 3;
    BOOL v31 = v12;
    if (!v61)
    {
      char v32 = v13;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3) {
      break;
    }
    if (v30 == 2)
    {
      if (v31 && (*(unsigned char *)(a1 + 68) & 4) == 0)
      {
        uint64_t v46 = PBReaderReadString();
        if (v46) {
          -[GEOLogMsgEventHardStop _addNoFlagsCities:](a1, v46);
        }

        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_87;
      }
      goto LABEL_72;
    }
    if (v30 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_105;
      }
LABEL_87:
      if (!v60) {
        goto LABEL_89;
      }
      goto LABEL_88;
    }
    if (!v31 || (*(unsigned char *)(a1 + 68) & 2) != 0) {
      goto LABEL_72;
    }
    if (v28 != 2)
    {
      char v47 = 0;
      unsigned int v48 = 0;
      uint64_t v49 = 0;
      while (1)
      {
        uint64_t v50 = *v14;
        uint64_t v51 = *(void *)(v3 + v50);
        unint64_t v52 = v51 + 1;
        if (v51 == -1 || v52 > *(void *)(v3 + *v6)) {
          break;
        }
        char v53 = *(unsigned char *)(*(void *)(v3 + *v18) + v51);
        *(void *)(v3 + v50) = v52;
        v49 |= (unint64_t)(v53 & 0x7F) << v47;
        if (v53 < 0)
        {
          v47 += 7;
          BOOL v26 = v48++ >= 9;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_86;
      }
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_86:
      PBRepeatedUInt32Add();
      goto LABEL_87;
    }
    if (!PBReaderPlaceMark()) {
      goto LABEL_105;
    }
    while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
    {
      char v36 = 0;
      unsigned int v37 = 0;
      uint64_t v38 = 0;
      while (1)
      {
        uint64_t v39 = *v14;
        uint64_t v40 = *(void *)(v3 + v39);
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
          break;
        }
        char v42 = *(unsigned char *)(*(void *)(v3 + *v18) + v40);
        *(void *)(v3 + v39) = v41;
        v38 |= (unint64_t)(v42 & 0x7F) << v36;
        if (v42 < 0)
        {
          v36 += 7;
          BOOL v26 = v37++ >= 9;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_60;
      }
      *(unsigned char *)(v3 + *v15) = 1;
LABEL_60:
      PBRepeatedUInt32Add();
    }
    PBReaderRecallMark();
    if ((v60 & 1) == 0) {
      goto LABEL_89;
    }
LABEL_88:
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
      goto LABEL_89;
    }
  }
  if (v8)
  {
    *(unsigned char *)(a1 + 68) |= 1u;
    uint64_t v43 = *v14;
    unint64_t v44 = *(void *)(v3 + v43);
    if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(v3 + *v6))
    {
      uint64_t v45 = *(void *)(*(void *)(v3 + *v18) + v44);
      *(void *)(v3 + v43) = v44 + 8;
    }
    else
    {
      *(unsigned char *)(v3 + *v15) = 1;
      uint64_t v45 = 0;
    }
    *(void *)(a1 + 48) = v45;
    goto LABEL_87;
  }
LABEL_72:
  if (PBReaderSkipValueWithTag()) {
    goto LABEL_87;
  }
LABEL_105:
  char v54 = 0;
LABEL_91:
  *(unsigned char *)(a1 + 68) |= 2u;
  *(unsigned char *)(a1 + 68) |= 4u;
  if (v54)
  {
LABEL_102:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_103;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_103:
  char v58 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_18A26E93C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A26F1EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventHardStopReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventHardStopReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventHardStopReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventHardStopReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventHardStopReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A26F37C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventHardStopReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventHardStopReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A26F3E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A26F658(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventHardStopIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A26FAAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventIdReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 28) |= 4u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_50;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              LODWORD(v28) = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6]) {
            LODWORD(v28) = 0;
          }
LABEL_52:
          *(_DWORD *)(a1 + 24) = v28;
        }
        else
        {
          if (v18 == 2)
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (1)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
                break;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v21 |= (unint64_t)(v38 & 0x7F) << v33;
              if ((v38 & 0x80) == 0) {
                goto LABEL_54;
              }
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6]) {
              uint64_t v21 = 0;
            }
LABEL_56:
            uint64_t v39 = 16;
          }
          else
          {
            if (v18 != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_60;
              }
              continue;
            }
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_46;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                uint64_t v21 = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6]) {
              uint64_t v21 = 0;
            }
LABEL_48:
            uint64_t v39 = 8;
          }
          *(void *)(a1 + v39) = v21;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A270698(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventIdReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventIdReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2706FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventImpressionEventReadAllFrom(uint64_t a1, void *a2)
{
  BOOL v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)&v2[v11];
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)&v2[*v4]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v16 = 1;
      }
      else {
        BOOL v16 = (v10 & 7) == 4;
      }
      if (v16) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v17 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v17 = 0;
  }
  objc_sync_exit(v2);

  return v17;
}

void sub_18A270DE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventImpressionEventReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOLogMsgEventImpressionEventReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18A270E3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2710BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventLogDiscardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v52 = v15;
  BOOL v16 = (int *)MEMORY[0x1E4F940E8];
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_73;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_73:
      if (v13)
      {
        char v46 = 1;
        goto LABEL_84;
      }
      if (!v14)
      {
LABEL_85:
        unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
        if (!v13) {
          return v3;
        }
        goto LABEL_86;
      }
      while (1)
      {
        int v48 = *v14++;
        int v47 = v48;
        if (v48 == 1) {
          break;
        }
        if (v47 == 2)
        {
          char v49 = 4;
LABEL_82:
          *(unsigned char *)(a1 + 48) |= v49;
        }
        else if (!v47)
        {
          goto LABEL_85;
        }
      }
      char v49 = 2;
      goto LABEL_82;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v52)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 == 3)
    {
      if ((v8 & 1) == 0) {
        goto LABEL_61;
      }
      char v36 = 0;
      unsigned int v37 = 0;
      uint64_t v38 = 0;
      *(unsigned char *)(a1 + 48) |= 1u;
      while (1)
      {
        uint64_t v39 = *v16;
        uint64_t v40 = *(void *)(v3 + v39);
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
          break;
        }
        char v42 = *(unsigned char *)(*(void *)(v3 + *v18) + v40);
        *(void *)(v3 + v39) = v41;
        v38 |= (unint64_t)(v42 & 0x7F) << v36;
        if ((v42 & 0x80) == 0) {
          goto LABEL_64;
        }
        v36 += 7;
        BOOL v26 = v37++ >= 9;
        if (v26)
        {
          LODWORD(v38) = 0;
          goto LABEL_66;
        }
      }
      *(unsigned char *)(v3 + *v17) = 1;
LABEL_64:
      if (*(unsigned char *)(v3 + *v17)) {
        LODWORD(v38) = 0;
      }
LABEL_66:
      *(_DWORD *)(a1 + 44) = v38;
LABEL_69:
      if (v9) {
        char v45 = 1;
      }
      else {
        char v45 = v13;
      }
      if ((v45 & 1) == 0) {
        goto LABEL_73;
      }
      continue;
    }
    break;
  }
  if (v29 != 2)
  {
    if (v29 == 1)
    {
      if (v30 && (*(unsigned char *)(a1 + 48) & 2) == 0)
      {
        uint64_t v35 = PBReaderReadData();
        if (v35) {
          -[GEOLogMsgEventLogDiscard _addNoFlagsCertificates:](a1, v35);
        }

        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_69;
      }
LABEL_61:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_83;
      }
    }
    else if (!PBReaderSkipValueWithTag())
    {
      goto LABEL_83;
    }
    goto LABEL_69;
  }
  if (!v30) {
    goto LABEL_61;
  }
  if ((*(unsigned char *)(a1 + 48) & 4) == 0)
  {
    uint64_t v43 = PBReaderReadData();
    unint64_t v44 = *(void **)(a1 + 24);
    *(void *)(a1 + 24) = v43;

    --v9;
    goto LABEL_69;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 48) << 29 >> 31;
    goto LABEL_69;
  }
LABEL_83:
  char v46 = 0;
LABEL_84:
  *(unsigned char *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 48) |= 4u;
  if (v46) {
    goto LABEL_85;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_86:
    uint64_t v50 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A271900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A272230(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventLogDiscardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventLogDiscardReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventLogDiscardReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventLogDiscardReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventLogDiscardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A2723C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventLogDiscardReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventLogDiscardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A272424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27267C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventLogDiscardIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A272A9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapKitCountsReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v18 = objc_alloc_init(GEOMapKitCount);
          if (!GEOMapKitCountReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addMapKitCounts:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18A273520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapKitCountsReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventMapKitCountsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A273584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapKitCountIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_18A273F24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventMapLaunchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v7 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_64;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_64:
      if (v12)
      {
        char v39 = 1;
        goto LABEL_73;
      }
      if (v13)
      {
        while (1)
        {
          int v41 = *v13++;
          char v40 = 2;
          switch(v41)
          {
            case 0:
              goto LABEL_74;
            case 1:
              goto LABEL_70;
            case 2:
              char v40 = 1;
              goto LABEL_70;
            case 3:
              char v40 = 4;
LABEL_70:
              *(unsigned char *)(a1 + 52) |= v40;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_74;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    if (v27 != 3)
    {
      if (v27 == 2)
      {
        if (v28)
        {
          if (*(unsigned char *)(a1 + 52))
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0)
            {
LABEL_72:
              char v39 = 0;
              goto LABEL_73;
            }
            v8 -= *(unsigned char *)(a1 + 52) & 1;
          }
          else
          {
            uint64_t v33 = PBReaderReadString();
            uint64_t v34 = 16;
LABEL_51:
            BOOL v37 = *(void **)(a1 + v34);
            *(void *)(a1 + v34) = v33;

            --v8;
          }
          goto LABEL_63;
        }
      }
      else
      {
        if (v27 != 1)
        {
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_72;
          }
          goto LABEL_63;
        }
        if (v28)
        {
          if ((*(unsigned char *)(a1 + 52) & 2) == 0)
          {
            uint64_t v33 = PBReaderReadString();
            uint64_t v34 = 24;
            goto LABEL_51;
          }
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_72;
          }
          char v38 = *(unsigned char *)(a1 + 52) << 6;
LABEL_60:
          v8 += v38 >> 7;
LABEL_63:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_64;
          }
          continue;
        }
      }
LABEL_54:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_72;
      }
      goto LABEL_63;
    }
    break;
  }
  if (!v28) {
    goto LABEL_54;
  }
  if ((*(unsigned char *)(a1 + 52) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_72;
    }
    char v38 = 32 * *(unsigned char *)(a1 + 52);
    goto LABEL_60;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_72;
  }
  unint64_t v35 = objc_alloc_init(GEOTimeToLeaveMapLaunch);
  if (GEOTimeToLeaveMapLaunchReadAllFrom((uint64_t)v35, (void *)v3))
  {
    PBReaderRecallMark();
    int v36 = *(void **)(a1 + 32);
    *(void *)(a1 + 32) = v35;

    --v8;
    BOOL v15 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_63;
  }

  char v39 = 0;
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_73:
  *(unsigned char *)(a1 + 52) |= 2u;
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 4u;
  if (v39)
  {
LABEL_74:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0) {
      return v3;
    }
    goto LABEL_75;
  }
  unint64_t v3 = 0;
  if (v12)
  {
LABEL_75:
    char v42 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A274544(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2746B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A274BC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventMapLaunchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventMapLaunchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgEventMapLaunchReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgEventMapLaunchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventMapLaunchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 32) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A274D70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventMapLaunchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventMapLaunchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A274DD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeToLeaveMapLaunchIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v16 != 1) {
          goto LABEL_29;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_29:
        BOOL v21 = 0;
        goto LABEL_28;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_28:
  PBReaderRecallMark();
  return v21;
}

void sub_18A275144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapLaunchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A27541C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsDeviceSettingsReadAllFrom(uint64_t a1, void *a2)
{
  BOOL v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    char v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)&v2[v11];
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)&v2[*v4]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v16 = 1;
      }
      else {
        BOOL v16 = (v10 & 7) == 4;
      }
      if (v16) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v17 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v17 = 0;
  }
  objc_sync_exit(v2);

  return v17;
}

void sub_18A2758A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsDeviceSettingsReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOLogMsgEventMapsDeviceSettingsReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18A275904(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsEngagementReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          int v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A27615C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsEngagementReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventMapsEngagementReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2761C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsInteractionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A276B3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMapsInteractionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventMapsInteractionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A276BA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMarcoLiteUsageReadAllFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_51;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_51;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 != 2)
        {
          if (v18 != 1)
          {
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_53;
            }
            goto LABEL_50;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          a1[24] |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_44:
          uint64_t v33 = 16;
          goto LABEL_49;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_53;
        }
        BOOL v32 = objc_alloc_init(GEOMarcoLiteUsageState);
        if (!GEOMarcoLiteUsageStateReadAllFrom((uint64_t)v32, v3))
        {

          goto LABEL_53;
        }
        PBReaderRecallMark();
        objc_msgSend(a1, "addUsageStates:", v32, 0, 0);

LABEL_50:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_51;
        }
      }
      char v26 = 0;
      unsigned int v27 = 0;
      uint64_t v21 = 0;
      a1[24] |= 2u;
      while (1)
      {
        uint64_t v28 = *v4;
        uint64_t v29 = *(void *)&v3[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
          break;
        }
        char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
        *(void *)&v3[v28] = v30;
        v21 |= (unint64_t)(v31 & 0x7F) << v26;
        if ((v31 & 0x80) == 0) {
          goto LABEL_46;
        }
        v26 += 7;
        BOOL v15 = v27++ >= 9;
        if (v15)
        {
          LODWORD(v21) = 0;
          goto LABEL_48;
        }
      }
      v3[*v6] = 1;
LABEL_46:
      if (v3[*v6]) {
        LODWORD(v21) = 0;
      }
LABEL_48:
      uint64_t v33 = 20;
LABEL_49:
      *(_DWORD *)&a1[v33] = v21;
      goto LABEL_50;
    }
LABEL_51:
    BOOL v34 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    BOOL v34 = 0;
  }
  objc_sync_exit(v3);

  return v34;
}

void sub_18A277A88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventMarcoLiteUsageReadFrom(unsigned char *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventMarcoLiteUsageReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A277AEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMarcoLiteUsageStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

void sub_18A278C28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventNetworkReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  uint64_t v10 = (const float *)(a1 + 164);
  uint32x4_t v11 = (uint32x4_t)vld1q_dup_f32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  unsigned int v13 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A641D50), v12), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A641D60), v12)));
  while (1)
  {
    unsigned int v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  char v15 = v9 | (v13 > 5);
  if (v9 & 1 | (v13 > 5) | v8 & 1) {
    unsigned int v16 = 0;
  }
  else {
    unsigned int v16 = a3;
  }
  uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_284;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_284:
      if (v15)
      {
        char v147 = 1;
        goto LABEL_304;
      }
      if (!v16) {
        goto LABEL_305;
      }
      while (1)
      {
        while (1)
        {
          int v149 = *v16++;
          int v148 = v149;
          if (v149 <= 49)
          {
            int v150 = 0x400000;
            switch(v148)
            {
              case 0:
                goto LABEL_305;
              case 1:
              case 2:
              case 3:
              case 4:
              case 6:
                continue;
              case 5:
                goto LABEL_302;
              case 7:
                int v150 = 0x200000;
                goto LABEL_302;
              case 8:
                int v150 = 0x100000;
                goto LABEL_302;
              default:
                if (v148 != 22) {
                  continue;
                }
                int v150 = 0x20000;
                goto LABEL_302;
            }
          }
          if (v148 <= 52) {
            break;
          }
          if (v148 == 53)
          {
            int v150 = 0x80000;
LABEL_302:
            *(_DWORD *)(a1 + 164) |= v150;
          }
          else if (v148 == 100)
          {
            int v150 = 0x1000000;
            goto LABEL_302;
          }
        }
        if (v148 == 50)
        {
          int v150 = 0x800000;
          goto LABEL_302;
        }
        if (v148 == 52)
        {
          int v150 = 0x40000;
          goto LABEL_302;
        }
      }
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      unsigned int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x40u;
        while (2)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
            *(void *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v27 = v37++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_201:
        uint64_t v142 = 128;
        goto LABEL_259;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x200u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v38 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_205;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_205:
        uint64_t v142 = 140;
        goto LABEL_259;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x400u;
        while (2)
        {
          uint64_t v53 = *v17;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v19) + v54);
            *(void *)(v3 + v53) = v55;
            v38 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v27 = v52++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_209:
        uint64_t v142 = 144;
        goto LABEL_259;
      case 4:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
        goto LABEL_52;
      case 5:
        if (!v31) {
          goto LABEL_196;
        }
        if ((*(unsigned char *)(a1 + 166) & 0x40) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 72;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_311;
        }
        int v145 = (int)(*(_DWORD *)(a1 + 164) << 9) >> 31;
        goto LABEL_276;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v59 = 0;
        unsigned int v60 = 0;
        uint64_t v61 = 0;
        *(_DWORD *)(a1 + 164) |= 2u;
        while (2)
        {
          uint64_t v62 = *v17;
          uint64_t v63 = *(void *)(v3 + v62);
          unint64_t v64 = v63 + 1;
          if (v63 == -1 || v64 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(v3 + *v19) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v27 = v60++ >= 9;
              if (v27)
              {
                uint64_t v61 = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v61 = 0;
        }
LABEL_213:
        *(void *)(a1 + 56) = v61;
        goto LABEL_283;
      case 7:
        if (!v31) {
          goto LABEL_196;
        }
        if ((*(unsigned char *)(a1 + 166) & 0x20) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 64;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_311;
        }
        int v145 = (int)(*(_DWORD *)(a1 + 164) << 10) >> 31;
        goto LABEL_276;
      case 8:
        if (!v31) {
          goto LABEL_196;
        }
        if ((*(unsigned char *)(a1 + 166) & 0x10) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 40;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_311;
        }
        int v145 = (int)(*(_DWORD *)(a1 + 164) << 11) >> 31;
        goto LABEL_276;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x80u;
        while (2)
        {
          uint64_t v68 = *v17;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v19) + v69);
            *(void *)(v3 + v68) = v70;
            v38 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v27 = v67++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_217:
        uint64_t v142 = 132;
        goto LABEL_259;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x2000u;
        while (2)
        {
          uint64_t v74 = *v17;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v19) + v75);
            *(void *)(v3 + v74) = v76;
            v38 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v27 = v73++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_221;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_221:
        uint64_t v142 = 156;
        goto LABEL_259;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x10u;
        while (2)
        {
          uint64_t v80 = *v17;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v19) + v81);
            *(void *)(v3 + v80) = v82;
            v38 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v27 = v79++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_225;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_225:
        uint64_t v142 = 120;
        goto LABEL_259;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v84 = 0;
        unsigned int v85 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 8u;
        while (2)
        {
          uint64_t v86 = *v17;
          uint64_t v87 = *(void *)(v3 + v86);
          unint64_t v88 = v87 + 1;
          if (v87 == -1 || v88 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v89 = *(unsigned char *)(*(void *)(v3 + *v19) + v87);
            *(void *)(v3 + v86) = v88;
            v38 |= (unint64_t)(v89 & 0x7F) << v84;
            if (v89 < 0)
            {
              v84 += 7;
              BOOL v27 = v85++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_229;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_229:
        uint64_t v142 = 116;
        goto LABEL_259;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        *(_DWORD *)(a1 + 164) |= 4u;
        uint64_t v90 = *v17;
        unint64_t v91 = *(void *)(v3 + v90);
        if (v91 <= 0xFFFFFFFFFFFFFFF7 && v91 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v92 = *(void *)(*(void *)(v3 + *v19) + v91);
          *(void *)(v3 + v90) = v91 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v92 = 0;
        }
        uint64_t v146 = 80;
        goto LABEL_282;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        *(_DWORD *)(a1 + 164) |= 1u;
        uint64_t v93 = *v17;
        unint64_t v94 = *(void *)(v3 + v93);
        if (v94 <= 0xFFFFFFFFFFFFFFF7 && v94 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v92 = *(void *)(*(void *)(v3 + *v19) + v94);
          *(void *)(v3 + v93) = v94 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v92 = 0;
        }
        uint64_t v146 = 48;
LABEL_282:
        *(void *)(a1 + v146) = v92;
        goto LABEL_283;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x100u;
        while (2)
        {
          uint64_t v97 = *v17;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v19) + v98);
            *(void *)(v3 + v97) = v99;
            v38 |= (unint64_t)(v100 & 0x7F) << v95;
            if (v100 < 0)
            {
              v95 += 7;
              BOOL v27 = v96++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_233;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_233:
        uint64_t v142 = 136;
        goto LABEL_259;
      case 22:
        if (!v31) {
          goto LABEL_196;
        }
        if ((*(unsigned char *)(a1 + 166) & 2) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 16;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_311;
        }
        int v145 = (int)(*(_DWORD *)(a1 + 164) << 14) >> 31;
        goto LABEL_276;
      case 23:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v101 = 0;
        unsigned int v102 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x1000u;
        while (2)
        {
          uint64_t v103 = *v17;
          uint64_t v104 = *(void *)(v3 + v103);
          unint64_t v105 = v104 + 1;
          if (v104 == -1 || v105 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v106 = *(unsigned char *)(*(void *)(v3 + *v19) + v104);
            *(void *)(v3 + v103) = v105;
            v38 |= (unint64_t)(v106 & 0x7F) << v101;
            if (v106 < 0)
            {
              v101 += 7;
              BOOL v27 = v102++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_237;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_237:
        uint64_t v142 = 152;
        goto LABEL_259;
      case 24:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v107 = 0;
        unsigned int v108 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x20u;
        while (2)
        {
          uint64_t v109 = *v17;
          uint64_t v110 = *(void *)(v3 + v109);
          unint64_t v111 = v110 + 1;
          if (v110 == -1 || v111 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v112 = *(unsigned char *)(*(void *)(v3 + *v19) + v110);
            *(void *)(v3 + v109) = v111;
            v38 |= (unint64_t)(v112 & 0x7F) << v107;
            if (v112 < 0)
            {
              v107 += 7;
              BOOL v27 = v108++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_241;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_241:
        uint64_t v142 = 124;
        goto LABEL_259;
      case 25:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v113 = 0;
        unsigned int v114 = 0;
        uint64_t v115 = 0;
        *(_DWORD *)(a1 + 164) |= 0x4000u;
        while (2)
        {
          uint64_t v116 = *v17;
          uint64_t v117 = *(void *)(v3 + v116);
          unint64_t v118 = v117 + 1;
          if (v117 == -1 || v118 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v119 = *(unsigned char *)(*(void *)(v3 + *v19) + v117);
            *(void *)(v3 + v116) = v118;
            v115 |= (unint64_t)(v119 & 0x7F) << v113;
            if (v119 < 0)
            {
              v113 += 7;
              BOOL v27 = v114++ >= 9;
              if (v27)
              {
                uint64_t v115 = 0;
                goto LABEL_245;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v115 = 0;
        }
LABEL_245:
        BOOL v143 = v115 != 0;
        uint64_t v144 = 160;
        goto LABEL_254;
      case 26:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v120 = 0;
        unsigned int v121 = 0;
        uint64_t v122 = 0;
        *(_DWORD *)(a1 + 164) |= 0x10000u;
        while (2)
        {
          uint64_t v123 = *v17;
          uint64_t v124 = *(void *)(v3 + v123);
          unint64_t v125 = v124 + 1;
          if (v124 == -1 || v125 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v126 = *(unsigned char *)(*(void *)(v3 + *v19) + v124);
            *(void *)(v3 + v123) = v125;
            v122 |= (unint64_t)(v126 & 0x7F) << v120;
            if (v126 < 0)
            {
              v120 += 7;
              BOOL v27 = v121++ >= 9;
              if (v27)
              {
                uint64_t v122 = 0;
                goto LABEL_249;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v122 = 0;
        }
LABEL_249:
        BOOL v143 = v122 != 0;
        uint64_t v144 = 162;
        goto LABEL_254;
      case 50:
        if (!v31) {
          goto LABEL_196;
        }
        if ((*(unsigned char *)(a1 + 166) & 0x80) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 88;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_311;
        }
        int v145 = (int)(*(_DWORD *)(a1 + 164) << 8) >> 31;
        goto LABEL_276;
      case 51:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v127 = 0;
        unsigned int v128 = 0;
        uint64_t v129 = 0;
        *(_DWORD *)(a1 + 164) |= 0x8000u;
        while (2)
        {
          uint64_t v130 = *v17;
          uint64_t v131 = *(void *)(v3 + v130);
          unint64_t v132 = v131 + 1;
          if (v131 == -1 || v132 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v133 = *(unsigned char *)(*(void *)(v3 + *v19) + v131);
            *(void *)(v3 + v130) = v132;
            v129 |= (unint64_t)(v133 & 0x7F) << v127;
            if (v133 < 0)
            {
              v127 += 7;
              BOOL v27 = v128++ >= 9;
              if (v27)
              {
                uint64_t v129 = 0;
                goto LABEL_253;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v129 = 0;
        }
LABEL_253:
        BOOL v143 = v129 != 0;
        uint64_t v144 = 161;
LABEL_254:
        *(unsigned char *)(a1 + v144) = v143;
        goto LABEL_283;
      case 52:
        if (!v31) {
          goto LABEL_196;
        }
        if ((*(unsigned char *)(a1 + 166) & 4) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 24;
          goto LABEL_187;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_311;
        }
        int v145 = (int)(*(_DWORD *)(a1 + 164) << 13) >> 31;
        goto LABEL_276;
      case 53:
        if (!v31) {
          goto LABEL_196;
        }
        if ((*(unsigned char *)(a1 + 166) & 8) == 0)
        {
          uint64_t v57 = PBReaderReadString();
          uint64_t v58 = 32;
LABEL_187:
          v134 = *(void **)(a1 + v58);
          *(void *)(a1 + v58) = v57;

          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          --v7;
          goto LABEL_283;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_311;
        }
        int v145 = (int)(*(_DWORD *)(a1 + 164) << 12) >> 31;
        goto LABEL_276;
      case 54:
        if ((v8 & 1) == 0) {
          goto LABEL_196;
        }
        char v135 = 0;
        unsigned int v136 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 164) |= 0x800u;
        while (2)
        {
          uint64_t v137 = *v17;
          uint64_t v138 = *(void *)(v3 + v137);
          unint64_t v139 = v138 + 1;
          if (v138 == -1 || v139 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v140 = *(unsigned char *)(*(void *)(v3 + *v19) + v138);
            *(void *)(v3 + v137) = v139;
            v38 |= (unint64_t)(v140 & 0x7F) << v135;
            if (v140 < 0)
            {
              v135 += 7;
              BOOL v27 = v136++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_258;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_258:
        uint64_t v142 = 148;
LABEL_259:
        *(_DWORD *)(a1 + v142) = v38;
        goto LABEL_283;
      default:
        if (v30 != 100)
        {
LABEL_52:
          int v44 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if (!v44) {
            goto LABEL_303;
          }
LABEL_283:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_284;
          }
          continue;
        }
        if (!v31)
        {
LABEL_196:
          char v141 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v141 & 1) == 0)
          {
LABEL_303:
            char v147 = 0;
            goto LABEL_304;
          }
          goto LABEL_283;
        }
        if (*(unsigned char *)(a1 + 167))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_311;
          }
          int v145 = (int)(*(_DWORD *)(a1 + 164) << 7) >> 31;
LABEL_276:
          v7 += v145;
          goto LABEL_277;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_311;
        }
        v153 = objc_alloc_init(GEONetworkSessionTaskTransactionMetrics);
        if (GEONetworkSessionTaskTransactionMetricsReadAllFrom((uint64_t)v153, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v43 = *(void **)(a1 + 96);
          *(void *)(a1 + 96) = v153;

          --v7;
LABEL_277:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_283;
        }

LABEL_311:
        char v147 = 0;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_304:
        *(_DWORD *)(a1 + 164) |= 0x400000u;
        *(_DWORD *)(a1 + 164) |= 0x200000u;
        *(_DWORD *)(a1 + 164) |= 0x100000u;
        *(_DWORD *)(a1 + 164) |= 0x20000u;
        *(_DWORD *)(a1 + 164) |= 0x800000u;
        *(_DWORD *)(a1 + 164) |= 0x40000u;
        *(_DWORD *)(a1 + 164) |= 0x80000u;
        *(_DWORD *)(a1 + 164) |= 0x1000000u;
        if (v147)
        {
LABEL_305:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_306;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_306:
            v151 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
    }
  }
}

void sub_18A27A1E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27A354(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27A840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27AD14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27AF0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27B080(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27B278(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A27CA2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventNetworkReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventNetworkReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgEventNetworkReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgEventNetworkReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventNetworkReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 96) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_18A27CBD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventNetworkReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventNetworkReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A27CC38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONetworkSessionTaskTransactionMetricsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 8u:
        case 9u:
        case 0xAu:
        case 0xBu:
          if (v16 != 1) {
            goto LABEL_62;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_58;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_58;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_57;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_59;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_62;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_62:
          BOOL v42 = 0;
          goto LABEL_61;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v26 = v32++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_59;
      }
LABEL_57:
      uint64_t v14 = *v4;
LABEL_58:
      a1[v14] = 1;
LABEL_59:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_61:
  PBReaderRecallMark();
  return v42;
}

void sub_18A27D43C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkIsDirty(os_unfair_lock_s *a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner(a1 + 28);
  BOOL v2 = (a1[41]._os_unfair_lock_opaque & 0x3FE0000) != 0;
  os_unfair_lock_unlock(a1 + 28);
  return v2;
}

void sub_18A27DDB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkEventSummaryReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v20 = objc_alloc_init(GEONetEventDimensionalGrouping);
          if (!GEONetEventDimensionalGroupingReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addGroups:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18A27F284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkEventSummaryReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventNetworkEventSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A27F2E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONetEventDimensionalGroupingIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 5u:
          if (v15 == 2) {
            goto LABEL_114;
          }
          goto LABEL_152;
        case 6u:
          if (v15 == 2) {
            goto LABEL_114;
          }
          goto LABEL_152;
        case 7u:
          if (v15 == 2) {
            goto LABEL_114;
          }
          goto LABEL_152;
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0xDu:
          if (v15 == 2) {
            goto LABEL_114;
          }
          goto LABEL_152;
        case 0xEu:
          if (v15 == 2) {
            goto LABEL_114;
          }
          goto LABEL_152;
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x10u:
          if (v15 == 2) {
            goto LABEL_114;
          }
          goto LABEL_152;
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v22 = v73++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_148;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v22 = v78++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_149;
          }
        case 0x14u:
        case 0x15u:
        case 0x16u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONetEventAggregateStatsIsValid(a1)) {
            goto LABEL_152;
          }
          PBReaderRecallMark();
          continue;
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_152;
          }
          unsigned int v83 = 0;
          break;
        default:
LABEL_114:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_152:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v84 = *v2;
        uint64_t v85 = *(void *)&a1[v84];
        unint64_t v86 = v85 + 1;
        if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
          break;
        }
        int v87 = *(char *)(*(void *)&a1[*v5] + v85);
        *(void *)&a1[v84] = v86;
        if (v87 < 0)
        {
          BOOL v22 = v83++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_149;
      }
LABEL_148:
      a1[*v4] = 1;
LABEL_149:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v88 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v88;
}

BOOL GEOLogMsgEventNetworkSelectionHarvestReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A280374(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventNetworkSelectionHarvestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventNetworkSelectionHarvestReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2803D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A280840(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPOIBusynessDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 76) >> 5) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (v14) {
          BOOL v19 = 1;
        }
        else {
          BOOL v19 = v15 == 0;
        }
        BOOL v59 = v19;
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_87;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      if (v22++ >= 9)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_87:
      if (v16)
      {
        char v52 = 1;
        goto LABEL_101;
      }
      if (!v15) {
        goto LABEL_102;
      }
      while (1)
      {
        int v54 = *v15++;
        int v53 = v54;
        if (v54 == 2) {
          break;
        }
        if (v53 == 6)
        {
          char v55 = 32;
LABEL_96:
          *(unsigned char *)(a1 + 76) |= v55;
        }
        else if (!v53)
        {
          goto LABEL_102;
        }
      }
      char v55 = 16;
      goto LABEL_96;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v59)
    {
      unsigned int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 76) |= 4u;
        uint64_t v37 = *v17;
        unint64_t v38 = *(void *)(v3 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v38);
          *(void *)(v3 + v37) = v38 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v50 = 48;
        goto LABEL_82;
      case 2:
        if (!v32) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_98;
          }
          BOOL v58 = v16;
          unint64_t v41 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v41, (void *)v3)) {
            goto LABEL_99;
          }
          PBReaderRecallMark();
          int v42 = *(void **)(a1 + 32);
          *(void *)(a1 + 32) = v41;

          --v7;
          goto LABEL_68;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_98:
          char v52 = 0;
          goto LABEL_100;
        }
        v7 += *(unsigned __int8 *)(a1 + 76) << 27 >> 31;
        goto LABEL_73;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 76) |= 2u;
        uint64_t v43 = *v17;
        unint64_t v44 = *(void *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v44);
          *(void *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v50 = 24;
        goto LABEL_82;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 76) |= 8u;
        uint64_t v45 = *v17;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v46);
          *(void *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v50 = 56;
        goto LABEL_82;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_69;
        }
        *(unsigned char *)(a1 + 76) |= 1u;
        uint64_t v47 = *v17;
        unint64_t v48 = *(void *)(v3 + v47);
        if (v48 <= 0xFFFFFFFFFFFFFFF7 && v48 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v48);
          *(void *)(v3 + v47) = v48 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v50 = 16;
LABEL_82:
        *(void *)(a1 + v50) = v39;
        goto LABEL_83;
      case 6:
        if (!v32 || (*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
LABEL_69:
          char v49 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v49 & 1) == 0)
          {
LABEL_97:
            char v52 = 0;
            goto LABEL_101;
          }
LABEL_83:
          if (v7) {
            char v51 = 1;
          }
          else {
            char v51 = v16;
          }
          if ((v51 & 1) == 0) {
            goto LABEL_87;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_98;
        }
        BOOL v58 = v16;
        unint64_t v41 = objc_alloc_init(GEOLogMsgEventPOIPredictionData);
        if (GEOLogMsgEventPOIPredictionDataReadAllFrom((uint64_t)v41, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgEventPOIBusynessData _addNoFlagsPoiPredictions:](a1, v41);

LABEL_68:
          BOOL v16 = v58;
LABEL_73:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_83;
        }
LABEL_99:

        char v52 = 0;
        BOOL v16 = v58;
LABEL_100:
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        if (v52)
        {
LABEL_102:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_103;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_103:
            unint64_t v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v40 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_97;
        }
        goto LABEL_83;
    }
  }
}

void sub_18A2811C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A281CA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgEventPOIBusynessDataCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 32) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOLogMsgEventPOIBusynessDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventPOIBusynessDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgEventPOIBusynessDataReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgEventPOIBusynessDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventPOIBusynessDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventPOIBusynessDataCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A281F50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPOIBusynessDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventPOIBusynessDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A281FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIPredictionDataIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v16 != 1) {
          goto LABEL_39;
        }
        uint64_t v24 = *v2;
        unint64_t v25 = *(void *)&a1[v24];
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v26 = v25 + 8, v26 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v24] = v26;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_39;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_36;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_39:
        BOOL v27 = 0;
        goto LABEL_38;
      }
LABEL_36:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
LABEL_38:
  PBReaderRecallMark();
  return v27;
}

void sub_18A28249C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIBusynessDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(unsigned char *)(a1 + 76) & 0x70) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18A2829F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIPredictionDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v25 = *v4;
          unint64_t v26 = *(void *)&v3[v25];
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v26);
            *(void *)&v3[v25] = v26 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v27 = 0;
          }
          *(void *)(a1 + 8) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_36:
          *(void *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_18A283630(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPOIPredictionDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventPOIPredictionDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A283694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventParkedCarReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (1)
      {
        if (v3[*v6]) {
          goto LABEL_39;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          goto LABEL_39;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3) {
          break;
        }
        if (v18 == 2)
        {
          *(unsigned char *)(a1 + 32) |= 1u;
          uint64_t v24 = *v4;
          unint64_t v25 = *(void *)&v3[v24];
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v23 = *(void *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v25 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v23 = 0;
          }
          uint64_t v26 = 8;
LABEL_37:
          *(void *)(a1 + v26) = v23;
          goto LABEL_38;
        }
        if (v18 == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_41;
          }
          unsigned int v19 = objc_alloc_init(GEOLatLng);
          if (!GEOLatLngReadAllFrom((uint64_t)v19, v3))
          {

            goto LABEL_41;
          }
          PBReaderRecallMark();
          uint64_t v20 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v19;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
LABEL_38:
        if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
          goto LABEL_39;
        }
      }
      *(unsigned char *)(a1 + 32) |= 2u;
      uint64_t v21 = *v4;
      unint64_t v22 = *(void *)&v3[v21];
      if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
      {
        uint64_t v23 = *(void *)(*(void *)&v3[*v7] + v22);
        *(void *)&v3[v21] = v22 + 8;
      }
      else
      {
        v3[*v6] = 1;
        uint64_t v23 = 0;
      }
      uint64_t v26 = 24;
      goto LABEL_37;
    }
LABEL_39:
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A28422C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventParkedCarReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventParkedCarReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A284290(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A284994(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPeriodicSettingsSummaryReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = (const float *)(a1 + 116);
  uint32x4_t v12 = (uint32x4_t)vld1q_dup_f32(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  unsigned int v14 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641D70), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v12, (uint32x4_t)xmmword_18A641D80), v13)));
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 5;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          unsigned int v19 = 0;
        }
        else {
          unsigned int v19 = a3;
        }
        uint64_t v20 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v114 = (v19 == 0) | v18;
        unint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        char v113 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v21)) {
      goto LABEL_211;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    if (v31 || (v25 & 7) == 4)
    {
LABEL_211:
      if (v18)
      {
        char v107 = 1;
        goto LABEL_213;
      }
      if (v19)
      {
        while (1)
        {
          int v108 = *v19++;
          int v109 = 4096;
          switch(v108)
          {
            case 0:
              goto LABEL_226;
            case 1:
              goto LABEL_225;
            case 2:
              int v109 = 0x2000;
              goto LABEL_225;
            case 12:
              int v109 = 512;
              goto LABEL_225;
            case 13:
              int v109 = 1024;
              goto LABEL_225;
            case 14:
              int v109 = 0x8000;
              goto LABEL_225;
            case 15:
              int v109 = 0x10000;
              goto LABEL_225;
            case 16:
              int v109 = 0x4000;
              goto LABEL_225;
            case 17:
              int v109 = 2048;
LABEL_225:
              *(_DWORD *)(a1 + 116) |= v109;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_226;
    }
    unint64_t v33 = v25 >> 3;
    BOOL v34 = v18;
    if ((v114 & 1) == 0)
    {
      int v35 = v19;
      do
      {
        int v37 = *v35++;
        int v36 = v37;
        BOOL v34 = v37 != 0;
        if (v37) {
          BOOL v38 = v36 == v33;
        }
        else {
          BOOL v38 = 1;
        }
      }
      while (!v38);
    }
    switch((int)v33)
    {
      case 1:
        if (!v34) {
          goto LABEL_152;
        }
        if ((*(unsigned char *)(a1 + 117) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_231;
          }
          char v112 = objc_alloc_init(GEOLogMsgStateMapSettings);
          if (GEOLogMsgStateMapSettingsReadAllFrom(v112, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v39 = 40;
            goto LABEL_151;
          }
          goto LABEL_230;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_231;
        }
        int v106 = (int)(*(_DWORD *)(a1 + 116) << 19) >> 31;
        goto LABEL_208;
      case 2:
        if (!v34) {
          goto LABEL_152;
        }
        if ((*(unsigned char *)(a1 + 117) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 116) << 18) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v112 = objc_alloc_init(GEOLogMsgStateMapUIShown);
        if (!GEOLogMsgStateMapUIShownReadAllFrom((uint64_t)v112, (void *)v3)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v39 = 48;
        goto LABEL_151;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v43 = 0;
        *(_DWORD *)(a1 + 116) |= 0x40u;
        while (2)
        {
          uint64_t v44 = *v20;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v22) + v45);
            *(void *)(v3 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              BOOL v30 = v42++ >= 9;
              if (v30)
              {
                uint64_t v43 = 0;
                goto LABEL_157;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v43 = 0;
        }
LABEL_157:
        BOOL v103 = v43 != 0;
        uint64_t v104 = 110;
        goto LABEL_191;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v50 = 0;
        *(_DWORD *)(a1 + 116) |= 0x10u;
        while (2)
        {
          uint64_t v51 = *v20;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v22) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v30 = v49++ >= 9;
              if (v30)
              {
                uint64_t v50 = 0;
                goto LABEL_161;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v50 = 0;
        }
LABEL_161:
        BOOL v103 = v50 != 0;
        uint64_t v104 = 108;
        goto LABEL_191;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v57 = 0;
        *(_DWORD *)(a1 + 116) |= 0x100u;
        while (2)
        {
          uint64_t v58 = *v20;
          uint64_t v59 = *(void *)(v3 + v58);
          unint64_t v60 = v59 + 1;
          if (v59 == -1 || v60 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v61 = *(unsigned char *)(*(void *)(v3 + *v22) + v59);
            *(void *)(v3 + v58) = v60;
            v57 |= (unint64_t)(v61 & 0x7F) << v55;
            if (v61 < 0)
            {
              v55 += 7;
              BOOL v30 = v56++ >= 9;
              if (v30)
              {
                uint64_t v57 = 0;
                goto LABEL_165;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v57 = 0;
        }
LABEL_165:
        BOOL v103 = v57 != 0;
        uint64_t v104 = 112;
        goto LABEL_191;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 116) |= 2u;
        while (2)
        {
          uint64_t v65 = *v20;
          uint64_t v66 = *(void *)(v3 + v65);
          unint64_t v67 = v66 + 1;
          if (v66 == -1 || v67 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v68 = *(unsigned char *)(*(void *)(v3 + *v22) + v66);
            *(void *)(v3 + v65) = v67;
            v64 |= (unint64_t)(v68 & 0x7F) << v62;
            if (v68 < 0)
            {
              v62 += 7;
              BOOL v30 = v63++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_169;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v64) = 0;
        }
LABEL_169:
        uint64_t v105 = 96;
        goto LABEL_182;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v69 = 0;
        unsigned int v70 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 116) |= 8u;
        while (2)
        {
          uint64_t v71 = *v20;
          uint64_t v72 = *(void *)(v3 + v71);
          unint64_t v73 = v72 + 1;
          if (v72 == -1 || v73 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v74 = *(unsigned char *)(*(void *)(v3 + *v22) + v72);
            *(void *)(v3 + v71) = v73;
            v64 |= (unint64_t)(v74 & 0x7F) << v69;
            if (v74 < 0)
            {
              v69 += 7;
              BOOL v30 = v70++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_173;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v64) = 0;
        }
LABEL_173:
        uint64_t v105 = 104;
        goto LABEL_182;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v75 = 0;
        unsigned int v76 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 116) |= 1u;
        while (2)
        {
          uint64_t v77 = *v20;
          uint64_t v78 = *(void *)(v3 + v77);
          unint64_t v79 = v78 + 1;
          if (v78 == -1 || v79 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v80 = *(unsigned char *)(*(void *)(v3 + *v22) + v78);
            *(void *)(v3 + v77) = v79;
            v64 |= (unint64_t)(v80 & 0x7F) << v75;
            if (v80 < 0)
            {
              v75 += 7;
              BOOL v30 = v76++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_177;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v64) = 0;
        }
LABEL_177:
        uint64_t v105 = 92;
        goto LABEL_182;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v81 = 0;
        unsigned int v82 = 0;
        uint64_t v64 = 0;
        *(_DWORD *)(a1 + 116) |= 4u;
        while (2)
        {
          uint64_t v83 = *v20;
          uint64_t v84 = *(void *)(v3 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(v3 + *v22) + v84);
            *(void *)(v3 + v83) = v85;
            v64 |= (unint64_t)(v86 & 0x7F) << v81;
            if (v86 < 0)
            {
              v81 += 7;
              BOOL v30 = v82++ >= 9;
              if (v30)
              {
                LODWORD(v64) = 0;
                goto LABEL_181;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v64) = 0;
        }
LABEL_181:
        uint64_t v105 = 100;
LABEL_182:
        *(_DWORD *)(a1 + v105) = v64;
        goto LABEL_210;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v89 = 0;
        *(_DWORD *)(a1 + 116) |= 0x80u;
        while (2)
        {
          uint64_t v90 = *v20;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v22) + v91);
            *(void *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v30 = v88++ >= 9;
              if (v30)
              {
                uint64_t v89 = 0;
                goto LABEL_186;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v89 = 0;
        }
LABEL_186:
        BOOL v103 = v89 != 0;
        uint64_t v104 = 111;
        goto LABEL_191;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_152;
        }
        char v94 = 0;
        unsigned int v95 = 0;
        uint64_t v96 = 0;
        *(_DWORD *)(a1 + 116) |= 0x20u;
        while (2)
        {
          uint64_t v97 = *v20;
          uint64_t v98 = *(void *)(v3 + v97);
          unint64_t v99 = v98 + 1;
          if (v98 == -1 || v99 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v100 = *(unsigned char *)(*(void *)(v3 + *v22) + v98);
            *(void *)(v3 + v97) = v99;
            v96 |= (unint64_t)(v100 & 0x7F) << v94;
            if (v100 < 0)
            {
              v94 += 7;
              BOOL v30 = v95++ >= 9;
              if (v30)
              {
                uint64_t v96 = 0;
                goto LABEL_190;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          uint64_t v96 = 0;
        }
LABEL_190:
        BOOL v103 = v96 != 0;
        uint64_t v104 = 109;
LABEL_191:
        *(unsigned char *)(a1 + v104) = v103;
        goto LABEL_210;
      case 12:
        if (!v34) {
          goto LABEL_152;
        }
        if ((*(unsigned char *)(a1 + 117) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 116) << 22) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v112 = objc_alloc_init(GEOLogMsgStateAccount);
        if (!GEOLogMsgStateAccountReadAllFrom((uint64_t)v112, (void *)v3)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v39 = 16;
        goto LABEL_151;
      case 13:
        if (!v34) {
          goto LABEL_152;
        }
        if ((*(unsigned char *)(a1 + 117) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 116) << 21) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v112 = objc_alloc_init(GEOLogMsgStateDeviceConnection);
        if (!GEOLogMsgStateDeviceConnectionReadAllFrom((uint64_t)v112, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v39 = 24;
        goto LABEL_151;
      case 14:
        if (!v34) {
          goto LABEL_152;
        }
        if ((*(unsigned char *)(a1 + 117) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 116) << 16) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v112 = objc_alloc_init(GEOLogMsgStateMapsUserSettings);
        if (!GEOLogMsgStateMapsUserSettingsReadAllFrom((uint64_t)v112, (void *)v3)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v39 = 64;
        goto LABEL_151;
      case 15:
        if (!v34) {
          goto LABEL_152;
        }
        if (*(unsigned char *)(a1 + 118))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 116) << 15) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v112 = objc_alloc_init(GEOLogMsgStateRoutingSettings);
        if (!GEOLogMsgStateRoutingSettingsReadAllFrom((uint64_t)v112, (void *)v3, v9 & 1)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v39 = 72;
        goto LABEL_151;
      case 16:
        if (!v34) {
          goto LABEL_152;
        }
        if ((*(unsigned char *)(a1 + 117) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 116) << 17) >> 31;
          goto LABEL_208;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v112 = objc_alloc_init(GEOLogMsgStateMapsFeatures);
        if (!GEOLogMsgStateMapsFeaturesReadAllFrom((uint64_t)v112, (void *)v3)) {
          goto LABEL_230;
        }
        PBReaderRecallMark();
        uint64_t v39 = 56;
        goto LABEL_151;
      case 17:
        if (!v34)
        {
LABEL_152:
          char v102 = PBReaderSkipValueWithTag();
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v113;
          if ((v102 & 1) == 0)
          {
LABEL_229:
            char v107 = 0;
            goto LABEL_213;
          }
LABEL_210:
          if (!(v18 & 1 | (v7 != 0))) {
            goto LABEL_211;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 117) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_231;
          }
          int v106 = (int)(*(_DWORD *)(a1 + 116) << 20) >> 31;
LABEL_208:
          v7 += v106;
LABEL_209:
          char v18 = v113;
          uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_210;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_231;
        }
        char v112 = objc_alloc_init(GEOLogMsgStateDeviceSettings);
        if (GEOLogMsgStateDeviceSettingsReadAllFrom((uint64_t)v112, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v39 = 32;
LABEL_151:
          char v101 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v112;

          --v7;
          goto LABEL_209;
        }
LABEL_230:

LABEL_231:
        char v107 = 0;
        char v18 = v113;
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_213:
        *(_DWORD *)(a1 + 116) |= 0x1000u;
        *(_DWORD *)(a1 + 116) |= 0x2000u;
        *(_DWORD *)(a1 + 116) |= 0x200u;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        *(_DWORD *)(a1 + 116) |= 0x8000u;
        *(_DWORD *)(a1 + 116) |= 0x10000u;
        *(_DWORD *)(a1 + 116) |= 0x4000u;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        if (v107)
        {
LABEL_226:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_227;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v18 & 1) == 0) {
          return v3;
        }
LABEL_227:
        uint64_t v110 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        int v40 = PBReaderSkipValueWithTag();
        uint64_t v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v113;
        if (!v40) {
          goto LABEL_229;
        }
        goto LABEL_210;
    }
  }
}

void sub_18A285AC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2860A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A286220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A286398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A286510(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A286680(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2867F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2877DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventPeriodicSettingsSummaryCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  BOOL v2 = *(void **)(a1 + 32);

  return [v2 readAll:1];
}

unint64_t GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventPeriodicSettingsSummaryReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventPeriodicSettingsSummaryCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18A287A2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPeriodicSettingsSummaryReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventPeriodicSettingsSummaryReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A287A90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapSettingsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v22 = v53++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v58 = 0;
          while (1)
          {
            uint64_t v59 = *v2;
            uint64_t v60 = *(void *)&a1[v59];
            unint64_t v61 = v60 + 1;
            if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v62 = *(char *)(*(void *)&a1[*v5] + v60);
            *(void *)&a1[v59] = v61;
            if (v62 < 0)
            {
              BOOL v22 = v58++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v63 = 0;
          while (1)
          {
            uint64_t v64 = *v2;
            uint64_t v65 = *(void *)&a1[v64];
            unint64_t v66 = v65 + 1;
            if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v67 = *(char *)(*(void *)&a1[*v5] + v65);
            *(void *)&a1[v64] = v66;
            if (v67 < 0)
            {
              BOOL v22 = v63++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v68 = 0;
          while (1)
          {
            uint64_t v69 = *v2;
            uint64_t v70 = *(void *)&a1[v69];
            unint64_t v71 = v70 + 1;
            if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v72 = *(char *)(*(void *)&a1[*v5] + v70);
            *(void *)&a1[v69] = v71;
            if (v72 < 0)
            {
              BOOL v22 = v68++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v73 = 0;
          while (1)
          {
            uint64_t v74 = *v2;
            uint64_t v75 = *(void *)&a1[v74];
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v77 = *(char *)(*(void *)&a1[*v5] + v75);
            *(void *)&a1[v74] = v76;
            if (v77 < 0)
            {
              BOOL v22 = v73++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v78 = 0;
          while (1)
          {
            uint64_t v79 = *v2;
            uint64_t v80 = *(void *)&a1[v79];
            unint64_t v81 = v80 + 1;
            if (v80 == -1 || v81 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v82 = *(char *)(*(void *)&a1[*v5] + v80);
            *(void *)&a1[v79] = v81;
            if (v82 < 0)
            {
              BOOL v22 = v78++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v83 = 0;
          while (1)
          {
            uint64_t v84 = *v2;
            uint64_t v85 = *(void *)&a1[v84];
            unint64_t v86 = v85 + 1;
            if (v85 == -1 || v86 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v87 = *(char *)(*(void *)&a1[*v5] + v85);
            *(void *)&a1[v84] = v86;
            if (v87 < 0)
            {
              BOOL v22 = v83++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v88 = 0;
          while (1)
          {
            uint64_t v89 = *v2;
            uint64_t v90 = *(void *)&a1[v89];
            unint64_t v91 = v90 + 1;
            if (v90 == -1 || v91 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v92 = *(char *)(*(void *)&a1[*v5] + v90);
            *(void *)&a1[v89] = v91;
            if (v92 < 0)
            {
              BOOL v22 = v88++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x10u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEONavVoiceGuidanceSettingsIsValid(a1)) {
            goto LABEL_237;
          }
          PBReaderRecallMark();
          continue;
        case 0x11u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v93 = 0;
          while (1)
          {
            uint64_t v94 = *v2;
            uint64_t v95 = *(void *)&a1[v94];
            unint64_t v96 = v95 + 1;
            if (v95 == -1 || v96 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v97 = *(char *)(*(void *)&a1[*v5] + v95);
            *(void *)&a1[v94] = v96;
            if (v97 < 0)
            {
              BOOL v22 = v93++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x12u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v98 = 0;
          while (1)
          {
            uint64_t v99 = *v2;
            uint64_t v100 = *(void *)&a1[v99];
            unint64_t v101 = v100 + 1;
            if (v100 == -1 || v101 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v102 = *(char *)(*(void *)&a1[*v5] + v100);
            *(void *)&a1[v99] = v101;
            if (v102 < 0)
            {
              BOOL v22 = v98++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x13u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v103 = 0;
          while (1)
          {
            uint64_t v104 = *v2;
            uint64_t v105 = *(void *)&a1[v104];
            unint64_t v106 = v105 + 1;
            if (v105 == -1 || v106 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v107 = *(char *)(*(void *)&a1[*v5] + v105);
            *(void *)&a1[v104] = v106;
            if (v107 < 0)
            {
              BOOL v22 = v103++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x14u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v108 = 0;
          while (1)
          {
            uint64_t v109 = *v2;
            uint64_t v110 = *(void *)&a1[v109];
            unint64_t v111 = v110 + 1;
            if (v110 == -1 || v111 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v112 = *(char *)(*(void *)&a1[*v5] + v110);
            *(void *)&a1[v109] = v111;
            if (v112 < 0)
            {
              BOOL v22 = v108++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x15u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v113 = 0;
          while (1)
          {
            uint64_t v114 = *v2;
            uint64_t v115 = *(void *)&a1[v114];
            unint64_t v116 = v115 + 1;
            if (v115 == -1 || v116 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v117 = *(char *)(*(void *)&a1[*v5] + v115);
            *(void *)&a1[v114] = v116;
            if (v117 < 0)
            {
              BOOL v22 = v113++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x16u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v118 = 0;
          while (1)
          {
            uint64_t v119 = *v2;
            uint64_t v120 = *(void *)&a1[v119];
            unint64_t v121 = v120 + 1;
            if (v120 == -1 || v121 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v122 = *(char *)(*(void *)&a1[*v5] + v120);
            *(void *)&a1[v119] = v121;
            if (v122 < 0)
            {
              BOOL v22 = v118++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x17u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v123 = 0;
          while (1)
          {
            uint64_t v124 = *v2;
            uint64_t v125 = *(void *)&a1[v124];
            unint64_t v126 = v125 + 1;
            if (v125 == -1 || v126 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v127 = *(char *)(*(void *)&a1[*v5] + v125);
            *(void *)&a1[v124] = v126;
            if (v127 < 0)
            {
              BOOL v22 = v123++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x18u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v128 = 0;
          while (1)
          {
            uint64_t v129 = *v2;
            uint64_t v130 = *(void *)&a1[v129];
            unint64_t v131 = v130 + 1;
            if (v130 == -1 || v131 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v132 = *(char *)(*(void *)&a1[*v5] + v130);
            *(void *)&a1[v129] = v131;
            if (v132 < 0)
            {
              BOOL v22 = v128++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x19u:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v133 = 0;
          while (1)
          {
            uint64_t v134 = *v2;
            uint64_t v135 = *(void *)&a1[v134];
            unint64_t v136 = v135 + 1;
            if (v135 == -1 || v136 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v137 = *(char *)(*(void *)&a1[*v5] + v135);
            *(void *)&a1[v134] = v136;
            if (v137 < 0)
            {
              BOOL v22 = v133++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x1Au:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v138 = 0;
          while (1)
          {
            uint64_t v139 = *v2;
            uint64_t v140 = *(void *)&a1[v139];
            unint64_t v141 = v140 + 1;
            if (v140 == -1 || v141 > *(void *)&a1[*v3]) {
              goto LABEL_233;
            }
            int v142 = *(char *)(*(void *)&a1[*v5] + v140);
            *(void *)&a1[v139] = v141;
            if (v142 < 0)
            {
              BOOL v22 = v138++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_234;
          }
        case 0x1Bu:
          if ((v8 & 7) != 0) {
            goto LABEL_237;
          }
          unsigned int v143 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_237:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v144 = *v2;
        uint64_t v145 = *(void *)&a1[v144];
        unint64_t v146 = v145 + 1;
        if (v145 == -1 || v146 > *(void *)&a1[*v3]) {
          break;
        }
        int v147 = *(char *)(*(void *)&a1[*v5] + v145);
        *(void *)&a1[v144] = v146;
        if (v147 < 0)
        {
          BOOL v22 = v143++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_234;
      }
LABEL_233:
      a1[*v4] = 1;
LABEL_234:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v148 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v148;
}

BOOL GEOLogMsgStateMapUIShownIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEOLogMsgStateAccountIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              unsigned int v27 = v15++;
              if (v27 <= 8) {
                continue;
              }
            }
            goto LABEL_49;
          }
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v28 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              break;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v13 = v28++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else
      {
        if ((v8 >> 3) == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              break;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0 && v17++ <= 8) {
              continue;
            }
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_52;
        }
      }
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateDeviceConnectionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_40;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_41;
          }
        case 2u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_44;
        case 3u:
          if (v15 == 2) {
            goto LABEL_30;
          }
          goto LABEL_44;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_30:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_44:
          BOOL v28 = 0;
          goto LABEL_43;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_41;
      }
LABEL_40:
      a1[*v4] = 1;
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateMapsUserSettingsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v21 = v42++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v21 = v47++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_86;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_89;
          }
          unsigned int v52 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_89:
          BOOL v57 = 0;
          goto LABEL_88;
      }
      while (1)
      {
        uint64_t v53 = *v2;
        uint64_t v54 = *(void *)&a1[v53];
        unint64_t v55 = v54 + 1;
        if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
          break;
        }
        int v56 = *(char *)(*(void *)&a1[*v5] + v54);
        *(void *)&a1[v53] = v55;
        if (v56 < 0)
        {
          BOOL v21 = v52++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_86;
      }
LABEL_85:
      a1[*v4] = 1;
LABEL_86:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v57 = a1[*v4] == 0;
LABEL_88:
  PBReaderRecallMark();
  return v57;
}

BOOL GEOLogMsgStateRoutingSettingsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_35;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_35;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutingSettingsDrivingPrefsIsValid(a1))
        {
LABEL_36:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_32;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutingSettingsVirtualGarageSetttingsIsValid(a1)) {
          goto LABEL_36;
        }
LABEL_32:
        PBReaderRecallMark();
        goto LABEL_34;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_36;
      }
LABEL_34:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_35;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEORoutingSettingsCyclingPrefsIsValid(a1)) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_35:
  BOOL v18 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v18;
}

BOOL GEOLogMsgStateMapsFeaturesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v21 = v42++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v21 = v47++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v21 = v52++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v57 = 0;
          while (1)
          {
            uint64_t v58 = *v2;
            uint64_t v59 = *(void *)&a1[v58];
            unint64_t v60 = v59 + 1;
            if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v61 = *(char *)(*(void *)&a1[*v5] + v59);
            *(void *)&a1[v58] = v60;
            if (v61 < 0)
            {
              BOOL v21 = v57++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 0xAu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v62 = 0;
          while (1)
          {
            uint64_t v63 = *v2;
            uint64_t v64 = *(void *)&a1[v63];
            unint64_t v65 = v64 + 1;
            if (v64 == -1 || v65 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v66 = *(char *)(*(void *)&a1[*v5] + v64);
            *(void *)&a1[v63] = v65;
            if (v66 < 0)
            {
              BOOL v21 = v62++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v67 = 0;
          while (1)
          {
            uint64_t v68 = *v2;
            uint64_t v69 = *(void *)&a1[v68];
            unint64_t v70 = v69 + 1;
            if (v69 == -1 || v70 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v71 = *(char *)(*(void *)&a1[*v5] + v69);
            *(void *)&a1[v68] = v70;
            if (v71 < 0)
            {
              BOOL v21 = v67++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v72 = 0;
          while (1)
          {
            uint64_t v73 = *v2;
            uint64_t v74 = *(void *)&a1[v73];
            unint64_t v75 = v74 + 1;
            if (v74 == -1 || v75 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v76 = *(char *)(*(void *)&a1[*v5] + v74);
            *(void *)&a1[v73] = v75;
            if (v76 < 0)
            {
              BOOL v21 = v72++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v77 = 0;
          while (1)
          {
            uint64_t v78 = *v2;
            uint64_t v79 = *(void *)&a1[v78];
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)&a1[*v3]) {
              goto LABEL_133;
            }
            int v81 = *(char *)(*(void *)&a1[*v5] + v79);
            *(void *)&a1[v78] = v80;
            if (v81 < 0)
            {
              BOOL v21 = v77++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_134;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_137;
          }
          unsigned int v82 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_137:
          BOOL v87 = 0;
          goto LABEL_136;
      }
      while (1)
      {
        uint64_t v83 = *v2;
        uint64_t v84 = *(void *)&a1[v83];
        unint64_t v85 = v84 + 1;
        if (v84 == -1 || v85 > *(void *)&a1[*v3]) {
          break;
        }
        int v86 = *(char *)(*(void *)&a1[*v5] + v84);
        *(void *)&a1[v83] = v85;
        if (v86 < 0)
        {
          BOOL v21 = v82++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_134;
      }
LABEL_133:
      a1[*v4] = 1;
LABEL_134:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v87 = a1[*v4] == 0;
LABEL_136:
  PBReaderRecallMark();
  return v87;
}

BOOL GEOLogMsgStateDeviceSettingsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 4) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

void sub_18A28A0B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventPeriodicSettingsSummaryIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  unsigned int v2 = *(_DWORD *)(a1 + 116);
  if ((v2 & 0x23200) != 0) {
    return 1;
  }
  if ((v2 & 0x400) != 0)
  {
    if (GEOLogMsgStateDeviceConnectionIsDirty(*(void *)(a1 + 24))) {
      return 1;
    }
    unsigned int v2 = *(_DWORD *)(a1 + 116);
  }
  if ((v2 & 0x8000) != 0) {
    return 1;
  }
  if ((v2 & 0x10000) == 0) {
    goto LABEL_10;
  }
  if (GEOLogMsgStateRoutingSettingsIsDirty(*(void *)(a1 + 72))) {
    return 1;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 116);
LABEL_10:
  if ((v2 & 0x4000) != 0) {
    return 1;
  }
  return (v2 >> 11) & 1;
}

os_unfair_lock_s *GEOLogMsgEventPeriodicSettingsSummaryIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgEventPeriodicSettingsSummaryIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A28A834(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceCacheLookupReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            uint64_t v19 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v18;

            continue;
          case 2u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v23 = *v4;
              uint64_t v24 = *(void *)&v3[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
                *(void *)&v3[v23] = v25;
                v22 |= (unint64_t)(v26 & 0x7F) << v20;
                if (v26 < 0)
                {
                  v20 += 7;
                  BOOL v15 = v21++ >= 9;
                  if (v15)
                  {
                    uint64_t v22 = 0;
                    goto LABEL_54;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v22 = 0;
            }
LABEL_54:
            *(void *)(a1 + 8) = v22;
            continue;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (1)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
                break;
              }
              char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v32;
              v29 |= (unint64_t)(v33 & 0x7F) << v27;
              if ((v33 & 0x80) == 0) {
                goto LABEL_56;
              }
              v27 += 7;
              BOOL v15 = v28++ >= 9;
              if (v15)
              {
                LODWORD(v29) = 0;
                goto LABEL_58;
              }
            }
            v3[*v6] = 1;
LABEL_56:
            if (v3[*v6]) {
              LODWORD(v29) = 0;
            }
LABEL_58:
            uint64_t v46 = 28;
            goto LABEL_67;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
                *(void *)&v3[v36] = v38;
                v29 |= (unint64_t)(v39 & 0x7F) << v34;
                if (v39 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    LODWORD(v29) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v29) = 0;
            }
LABEL_62:
            uint64_t v46 = 24;
            goto LABEL_67;
          case 5u:
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_70;
            }
            continue;
        }
        while (1)
        {
          uint64_t v42 = *v4;
          uint64_t v43 = *(void *)&v3[v42];
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)&v3[*v5]) {
            break;
          }
          char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
          *(void *)&v3[v42] = v44;
          v29 |= (unint64_t)(v45 & 0x7F) << v40;
          if ((v45 & 0x80) == 0) {
            goto LABEL_64;
          }
          v40 += 7;
          BOOL v15 = v41++ >= 9;
          if (v15)
          {
            LODWORD(v29) = 0;
            goto LABEL_66;
          }
        }
        v3[*v6] = 1;
LABEL_64:
        if (v3[*v6]) {
          LODWORD(v29) = 0;
        }
LABEL_66:
        uint64_t v46 = 32;
LABEL_67:
        *(_DWORD *)(a1 + v46) = v29;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v47 = v3[*v6] == 0;
  }
  else
  {
LABEL_70:
    BOOL v47 = 0;
  }
  objc_sync_exit(v3);

  return v47;
}

void sub_18A28BE28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceCacheLookupReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventPlaceCacheLookupReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A28BEA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceDataCacheReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A28C940(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPlaceDataCacheReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventPlaceDataCacheReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A28C9A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A28EC28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPredExTrainingDataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 132);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 128)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(_DWORD *)(a1 + 200) >> 30) & 1) + (*(_DWORD *)(a1 + 200) >> 31);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v9])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v7;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v16 == 0;
        }
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        BOOL v194 = v18;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v7;
        uint64_t v13 = v10;
LABEL_8:
        ++v9;
        uint64_t v7 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_353;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_353:
      if (v15)
      {
        *(void *)(a1 + 200) |= 0xC0000000uLL;
        goto LABEL_363;
      }
      if (!v16)
      {
LABEL_363:
        unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
        if (!v15) {
          return v3;
        }
LABEL_364:
        v191 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      }
      while (1)
      {
        int v190 = *v16++;
        int v189 = v190;
        if (v190 == 27) {
          break;
        }
        if (v189 == 28)
        {
          uint64_t v188 = 0x40000000;
LABEL_359:
          *(void *)(a1 + 200) |= v188;
        }
        else if (!v189)
        {
          goto LABEL_363;
        }
      }
      uint64_t v188 = 0x80000000;
      goto LABEL_359;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v18)
    {
      char v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x80000uLL;
        while (1)
        {
          uint64_t v40 = *v17;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v20) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_246;
          }
          v37 += 7;
          BOOL v28 = v38++ >= 9;
          if (v28)
          {
            LODWORD(v39) = 0;
            goto LABEL_248;
          }
        }
        *(unsigned char *)(v3 + *v19) = 1;
LABEL_246:
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_248:
        uint64_t v180 = 168;
        goto LABEL_313;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x20uLL;
        uint64_t v45 = *v17;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v46);
          *(void *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 56;
        goto LABEL_348;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x10uLL;
        uint64_t v48 = *v17;
        unint64_t v49 = *(void *)(v3 + v48);
        if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v49);
          *(void *)(v3 + v48) = v49 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 48;
        goto LABEL_348;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x100uLL;
        uint64_t v50 = *v17;
        unint64_t v51 = *(void *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v51);
          *(void *)(v3 + v50) = v51 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 80;
        goto LABEL_348;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x40uLL;
        uint64_t v52 = *v17;
        unint64_t v53 = *(void *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v53);
          *(void *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 64;
        goto LABEL_348;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x200uLL;
        uint64_t v54 = *v17;
        unint64_t v55 = *(void *)(v3 + v54);
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v55);
          *(void *)(v3 + v54) = v55 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 88;
        goto LABEL_348;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 1uLL;
        uint64_t v56 = *v17;
        unint64_t v57 = *(void *)(v3 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v57);
          *(void *)(v3 + v56) = v57 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 16;
        goto LABEL_348;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 2uLL;
        uint64_t v58 = *v17;
        unint64_t v59 = *(void *)(v3 + v58);
        if (v59 <= 0xFFFFFFFFFFFFFFF7 && v59 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v59);
          *(void *)(v3 + v58) = v59 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 24;
        goto LABEL_348;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 4uLL;
        uint64_t v60 = *v17;
        unint64_t v61 = *(void *)(v3 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && v61 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v61);
          *(void *)(v3 + v60) = v61 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 32;
        goto LABEL_348;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x400uLL;
        uint64_t v62 = *v17;
        unint64_t v63 = *(void *)(v3 + v62);
        if (v63 <= 0xFFFFFFFFFFFFFFF7 && v63 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v63);
          *(void *)(v3 + v62) = v63 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 96;
        goto LABEL_348;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 8uLL;
        uint64_t v64 = *v17;
        unint64_t v65 = *(void *)(v3 + v64);
        if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v65);
          *(void *)(v3 + v64) = v65 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 40;
        goto LABEL_348;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x80uLL;
        uint64_t v66 = *v17;
        unint64_t v67 = *(void *)(v3 + v66);
        if (v67 <= 0xFFFFFFFFFFFFFFF7 && v67 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v67);
          *(void *)(v3 + v66) = v67 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 72;
        goto LABEL_348;
      case 13:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x400000uLL;
        while (2)
        {
          uint64_t v70 = *v17;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v20) + v71);
            *(void *)(v3 + v70) = v72;
            v39 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v28 = v69++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_252;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_252:
        uint64_t v180 = 180;
        goto LABEL_313;
      case 14:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x100000uLL;
        while (2)
        {
          uint64_t v76 = *v17;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v20) + v77);
            *(void *)(v3 + v76) = v78;
            v39 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v28 = v75++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_256;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_256:
        uint64_t v180 = 172;
        goto LABEL_313;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v80 = 0;
        unsigned int v81 = 0;
        uint64_t v82 = 0;
        *(void *)(a1 + 200) |= 0x8000000uLL;
        while (2)
        {
          uint64_t v83 = *v17;
          uint64_t v84 = *(void *)(v3 + v83);
          unint64_t v85 = v84 + 1;
          if (v84 == -1 || v85 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v86 = *(unsigned char *)(*(void *)(v3 + *v20) + v84);
            *(void *)(v3 + v83) = v85;
            v82 |= (unint64_t)(v86 & 0x7F) << v80;
            if (v86 < 0)
            {
              v80 += 7;
              BOOL v28 = v81++ >= 9;
              if (v28)
              {
                uint64_t v82 = 0;
                goto LABEL_260;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v82 = 0;
        }
LABEL_260:
        BOOL v181 = v82 != 0;
        uint64_t v182 = 194;
        goto LABEL_318;
      case 16:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v87 = 0;
        unsigned int v88 = 0;
        uint64_t v89 = 0;
        *(void *)(a1 + 200) |= 0x4000000uLL;
        while (2)
        {
          uint64_t v90 = *v17;
          uint64_t v91 = *(void *)(v3 + v90);
          unint64_t v92 = v91 + 1;
          if (v91 == -1 || v92 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v93 = *(unsigned char *)(*(void *)(v3 + *v20) + v91);
            *(void *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v28 = v88++ >= 9;
              if (v28)
              {
                uint64_t v89 = 0;
                goto LABEL_264;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v89 = 0;
        }
LABEL_264:
        BOOL v181 = v89 != 0;
        uint64_t v182 = 193;
        goto LABEL_318;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        *(void *)(a1 + 200) |= 0x800uLL;
        uint64_t v94 = *v17;
        unint64_t v95 = *(void *)(v3 + v94);
        if (v95 <= 0xFFFFFFFFFFFFFFF7 && v95 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v47 = *(void *)(*(void *)(v3 + *v20) + v95);
          *(void *)(v3 + v94) = v95 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v47 = 0;
        }
        uint64_t v186 = 104;
LABEL_348:
        *(void *)(a1 + v186) = v47;
        goto LABEL_349;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v96 = 0;
        unsigned int v97 = 0;
        uint64_t v98 = 0;
        *(void *)(a1 + 200) |= 0x20000000uLL;
        while (2)
        {
          uint64_t v99 = *v17;
          uint64_t v100 = *(void *)(v3 + v99);
          unint64_t v101 = v100 + 1;
          if (v100 == -1 || v101 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v102 = *(unsigned char *)(*(void *)(v3 + *v20) + v100);
            *(void *)(v3 + v99) = v101;
            v98 |= (unint64_t)(v102 & 0x7F) << v96;
            if (v102 < 0)
            {
              v96 += 7;
              BOOL v28 = v97++ >= 9;
              if (v28)
              {
                uint64_t v98 = 0;
                goto LABEL_268;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v98 = 0;
        }
LABEL_268:
        BOOL v181 = v98 != 0;
        uint64_t v182 = 196;
        goto LABEL_318;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x200000uLL;
        while (2)
        {
          uint64_t v105 = *v17;
          uint64_t v106 = *(void *)(v3 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(v3 + *v20) + v106);
            *(void *)(v3 + v105) = v107;
            v39 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              BOOL v28 = v104++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_272;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_272:
        uint64_t v180 = 176;
        goto LABEL_313;
      case 20:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x1000uLL;
        while (2)
        {
          uint64_t v111 = *v17;
          uint64_t v112 = *(void *)(v3 + v111);
          unint64_t v113 = v112 + 1;
          if (v112 == -1 || v113 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v114 = *(unsigned char *)(*(void *)(v3 + *v20) + v112);
            *(void *)(v3 + v111) = v113;
            v39 |= (unint64_t)(v114 & 0x7F) << v109;
            if (v114 < 0)
            {
              v109 += 7;
              BOOL v28 = v110++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_276;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_276:
        uint64_t v180 = 140;
        goto LABEL_313;
      case 21:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v115 = 0;
        unsigned int v116 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x20000uLL;
        while (2)
        {
          uint64_t v117 = *v17;
          uint64_t v118 = *(void *)(v3 + v117);
          unint64_t v119 = v118 + 1;
          if (v118 == -1 || v119 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v120 = *(unsigned char *)(*(void *)(v3 + *v20) + v118);
            *(void *)(v3 + v117) = v119;
            v39 |= (unint64_t)(v120 & 0x7F) << v115;
            if (v120 < 0)
            {
              v115 += 7;
              BOOL v28 = v116++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_280;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_280:
        uint64_t v180 = 160;
        goto LABEL_313;
      case 22:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v121 = 0;
        unsigned int v122 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x4000uLL;
        while (2)
        {
          uint64_t v123 = *v17;
          uint64_t v124 = *(void *)(v3 + v123);
          unint64_t v125 = v124 + 1;
          if (v124 == -1 || v125 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v126 = *(unsigned char *)(*(void *)(v3 + *v20) + v124);
            *(void *)(v3 + v123) = v125;
            v39 |= (unint64_t)(v126 & 0x7F) << v121;
            if (v126 < 0)
            {
              v121 += 7;
              BOOL v28 = v122++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_284;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_284:
        uint64_t v180 = 148;
        goto LABEL_313;
      case 23:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v127 = 0;
        unsigned int v128 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x40000uLL;
        while (2)
        {
          uint64_t v129 = *v17;
          uint64_t v130 = *(void *)(v3 + v129);
          unint64_t v131 = v130 + 1;
          if (v130 == -1 || v131 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v132 = *(unsigned char *)(*(void *)(v3 + *v20) + v130);
            *(void *)(v3 + v129) = v131;
            v39 |= (unint64_t)(v132 & 0x7F) << v127;
            if (v132 < 0)
            {
              v127 += 7;
              BOOL v28 = v128++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_288;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_288:
        uint64_t v180 = 164;
        goto LABEL_313;
      case 24:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v133 = 0;
        unsigned int v134 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x2000uLL;
        while (2)
        {
          uint64_t v135 = *v17;
          uint64_t v136 = *(void *)(v3 + v135);
          unint64_t v137 = v136 + 1;
          if (v136 == -1 || v137 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v138 = *(unsigned char *)(*(void *)(v3 + *v20) + v136);
            *(void *)(v3 + v135) = v137;
            v39 |= (unint64_t)(v138 & 0x7F) << v133;
            if (v138 < 0)
            {
              v133 += 7;
              BOOL v28 = v134++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_292;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_292:
        uint64_t v180 = 144;
        goto LABEL_313;
      case 25:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v139 = 0;
        unsigned int v140 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x10000uLL;
        while (2)
        {
          uint64_t v141 = *v17;
          uint64_t v142 = *(void *)(v3 + v141);
          unint64_t v143 = v142 + 1;
          if (v142 == -1 || v143 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v144 = *(unsigned char *)(*(void *)(v3 + *v20) + v142);
            *(void *)(v3 + v141) = v143;
            v39 |= (unint64_t)(v144 & 0x7F) << v139;
            if (v144 < 0)
            {
              v139 += 7;
              BOOL v28 = v140++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_296;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_296:
        uint64_t v180 = 156;
        goto LABEL_313;
      case 26:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v145 = 0;
        unsigned int v146 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x8000uLL;
        while (2)
        {
          uint64_t v147 = *v17;
          uint64_t v148 = *(void *)(v3 + v147);
          unint64_t v149 = v148 + 1;
          if (v148 == -1 || v149 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v150 = *(unsigned char *)(*(void *)(v3 + *v20) + v148);
            *(void *)(v3 + v147) = v149;
            v39 |= (unint64_t)(v150 & 0x7F) << v145;
            if (v150 < 0)
            {
              v145 += 7;
              BOOL v28 = v146++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_300;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_300:
        uint64_t v180 = 152;
        goto LABEL_313;
      case 27:
        if (!v32) {
          goto LABEL_243;
        }
        if ((*(unsigned char *)(a1 + 203) & 0x80) != 0)
        {
          char v183 = PBReaderSkipValueWithTag();
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          BOOL v18 = v194;
          if ((v183 & 1) == 0) {
            goto LABEL_367;
          }
          uint64_t v184 = *(void *)(a1 + 200) << 32;
LABEL_323:
          v9 += v184 >> 63;
          goto LABEL_349;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_367;
        }
        v193 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v193, (void *)v3))
        {
          PBReaderRecallMark();
          v151 = *(void **)(a1 + 120);
          *(void *)(a1 + 120) = v193;
LABEL_210:

          --v9;
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          BOOL v18 = v194;
LABEL_349:
          if (v9) {
            char v187 = 1;
          }
          else {
            char v187 = v15;
          }
          if ((v187 & 1) == 0) {
            goto LABEL_353;
          }
          continue;
        }

LABEL_367:
        unint64_t v3 = 0;
        *(void *)(a1 + 200) |= 0xC0000000uLL;
        if (v15) {
          goto LABEL_364;
        }
        return v3;
      case 28:
        if (!v32) {
          goto LABEL_243;
        }
        if ((*(unsigned char *)(a1 + 203) & 0x40) == 0)
        {
          uint64_t v152 = PBReaderReadString();
          v151 = *(void **)(a1 + 112);
          *(void *)(a1 + 112) = v152;
          goto LABEL_210;
        }
        char v185 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v18 = v194;
        if ((v185 & 1) == 0) {
          goto LABEL_367;
        }
        uint64_t v184 = *(void *)(a1 + 200) << 33;
        goto LABEL_323;
      case 29:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v153 = 0;
        unsigned int v154 = 0;
        uint64_t v155 = 0;
        *(void *)(a1 + 200) |= 0x2000000uLL;
        while (2)
        {
          uint64_t v156 = *v17;
          uint64_t v157 = *(void *)(v3 + v156);
          unint64_t v158 = v157 + 1;
          if (v157 == -1 || v158 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v159 = *(unsigned char *)(*(void *)(v3 + *v20) + v157);
            *(void *)(v3 + v156) = v158;
            v155 |= (unint64_t)(v159 & 0x7F) << v153;
            if (v159 < 0)
            {
              v153 += 7;
              BOOL v28 = v154++ >= 9;
              if (v28)
              {
                uint64_t v155 = 0;
                goto LABEL_304;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v155 = 0;
        }
LABEL_304:
        BOOL v181 = v155 != 0;
        uint64_t v182 = 192;
        goto LABEL_318;
      case 30:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v160 = 0;
        unsigned int v161 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x1000000uLL;
        while (2)
        {
          uint64_t v162 = *v17;
          uint64_t v163 = *(void *)(v3 + v162);
          unint64_t v164 = v163 + 1;
          if (v163 == -1 || v164 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v165 = *(unsigned char *)(*(void *)(v3 + *v20) + v163);
            *(void *)(v3 + v162) = v164;
            v39 |= (unint64_t)(v165 & 0x7F) << v160;
            if (v165 < 0)
            {
              v160 += 7;
              BOOL v28 = v161++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_308;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_308:
        uint64_t v180 = 188;
        goto LABEL_313;
      case 31:
        if ((v8 & 1) == 0) {
          goto LABEL_243;
        }
        char v166 = 0;
        unsigned int v167 = 0;
        uint64_t v39 = 0;
        *(void *)(a1 + 200) |= 0x800000uLL;
        while (2)
        {
          uint64_t v168 = *v17;
          uint64_t v169 = *(void *)(v3 + v168);
          unint64_t v170 = v169 + 1;
          if (v169 == -1 || v170 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v171 = *(unsigned char *)(*(void *)(v3 + *v20) + v169);
            *(void *)(v3 + v168) = v170;
            v39 |= (unint64_t)(v171 & 0x7F) << v166;
            if (v171 < 0)
            {
              v166 += 7;
              BOOL v28 = v167++ >= 9;
              if (v28)
              {
                LODWORD(v39) = 0;
                goto LABEL_312;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v39) = 0;
        }
LABEL_312:
        uint64_t v180 = 184;
LABEL_313:
        *(_DWORD *)(a1 + v180) = v39;
        goto LABEL_349;
      case 32:
        if (v8)
        {
          char v172 = 0;
          unsigned int v173 = 0;
          uint64_t v174 = 0;
          *(void *)(a1 + 200) |= 0x10000000uLL;
          while (1)
          {
            uint64_t v175 = *v17;
            uint64_t v176 = *(void *)(v3 + v175);
            unint64_t v177 = v176 + 1;
            if (v176 == -1 || v177 > *(void *)(v3 + *v6)) {
              break;
            }
            char v178 = *(unsigned char *)(*(void *)(v3 + *v20) + v176);
            *(void *)(v3 + v175) = v177;
            v174 |= (unint64_t)(v178 & 0x7F) << v172;
            if ((v178 & 0x80) == 0) {
              goto LABEL_315;
            }
            v172 += 7;
            BOOL v28 = v173++ >= 9;
            if (v28)
            {
              uint64_t v174 = 0;
              goto LABEL_317;
            }
          }
          *(unsigned char *)(v3 + *v19) = 1;
LABEL_315:
          if (*(unsigned char *)(v3 + *v19)) {
            uint64_t v174 = 0;
          }
LABEL_317:
          BOOL v181 = v174 != 0;
          uint64_t v182 = 195;
LABEL_318:
          *(unsigned char *)(a1 + v182) = v181;
        }
        else
        {
LABEL_243:
          char v179 = PBReaderSkipValueWithTag();
          BOOL v18 = v194;
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v179 & 1) == 0) {
            goto LABEL_367;
          }
        }
        goto LABEL_349;
      default:
        int v44 = PBReaderSkipValueWithTag();
        BOOL v18 = v194;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v44) {
          goto LABEL_367;
        }
        goto LABEL_349;
    }
  }
}

void sub_18A290534(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A29352C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPredExTrainingDataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventPredExTrainingDataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventPredExTrainingDataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventPredExTrainingDataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventPredExTrainingDataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 120) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_18A2936D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventPredExTrainingDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventPredExTrainingDataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A293734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A293D00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPredExTrainingDataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  BOOL v2 = (*(void *)(a1 + 200) & 0x1C0000000) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return v2;
}

void sub_18A29498C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPressureDataReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A296264(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventPressureDataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventPressureDataReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2962C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRealtimeTrafficProbeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadData();
          uint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A2967F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventRealtimeTrafficProbeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventRealtimeTrafficProbeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A296858(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A296DF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventServiceMetadataReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v8 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v16 == 0;
        }
        BOOL v58 = v17;
        uint64_t v18 = (int *)MEMORY[0x1E4F940E8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        BOOL v20 = (int *)MEMORY[0x1E4F940B8];
        char v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
        BOOL v57 = v15;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (1)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_79;
    }
    char v22 = 0;
    unsigned int v23 = 0;
    unint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *v18;
      uint64_t v26 = *(void *)(v3 + v25);
      unint64_t v27 = v26 + 1;
      if (v26 == -1 || v27 > *(void *)(v3 + *v6)) {
        break;
      }
      char v28 = *(unsigned char *)(*(void *)(v3 + *v20) + v26);
      *(void *)(v3 + v25) = v27;
      v24 |= (unint64_t)(v28 & 0x7F) << v22;
      if ((v28 & 0x80) == 0) {
        goto LABEL_26;
      }
      v22 += 7;
      BOOL v29 = v23++ >= 9;
      if (v29)
      {
        unint64_t v24 = 0;
        int v30 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v30 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v24 = 0;
    }
LABEL_28:
    if (v30 || (v24 & 7) == 4)
    {
LABEL_79:
      if (v15)
      {
        char v52 = 1;
        goto LABEL_93;
      }
      if (!v16) {
        goto LABEL_94;
      }
      while (1)
      {
        while (1)
        {
          int v54 = *v16++;
          int v53 = v54;
          if (v54 != 2) {
            break;
          }
LABEL_84:
          *(unsigned char *)(a1 + v21[423]) |= v53;
        }
        if (v53 == 3)
        {
          LOBYTE(v53) = 4;
          goto LABEL_84;
        }
        if (!v53) {
          goto LABEL_94;
        }
      }
    }
    unint64_t v32 = v24 >> 3;
    BOOL v33 = v15;
    if (!v58)
    {
      int v34 = v16;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    if (v32 != 3) {
      break;
    }
    if (v33)
    {
      if ((*(unsigned char *)(a1 + v21[423]) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        uint64_t v45 = objc_alloc_init(GEOPDPlacesRequestResponseAnalyticsData);
        if (!GEOPDPlacesRequestResponseAnalyticsDataReadAllFrom((uint64_t)v45, (void *)v3)) {
          goto LABEL_91;
        }
        PBReaderRecallMark();
        uint64_t v46 = 24;
LABEL_60:
        uint64_t v47 = *(void **)(a1 + v46);
        *(void *)(a1 + v46) = v45;

        --v7;
        char v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_74:
        BOOL v15 = v57;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        goto LABEL_75;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_90;
      }
      char v50 = 32 * *(unsigned char *)(a1 + v21[423]);
LABEL_73:
      v7 += v50 >> 7;
      goto LABEL_74;
    }
LABEL_63:
    char v49 = PBReaderSkipValueWithTag();
    uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
    BOOL v15 = v57;
    if ((v49 & 1) == 0)
    {
LABEL_89:
      char v52 = 0;
      goto LABEL_93;
    }
LABEL_75:
    if (v7) {
      char v51 = 1;
    }
    else {
      char v51 = v15;
    }
    if ((v51 & 1) == 0) {
      goto LABEL_79;
    }
  }
  if (v32 != 2)
  {
    if (v32 != 1)
    {
      int v48 = PBReaderSkipValueWithTag();
      uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
      BOOL v15 = v57;
      if (!v48) {
        goto LABEL_89;
      }
      goto LABEL_75;
    }
    if (v8)
    {
      char v38 = 0;
      unsigned int v39 = 0;
      uint64_t v40 = 0;
      *(unsigned char *)(a1 + v21[423]) |= 1u;
      while (1)
      {
        uint64_t v41 = *v18;
        uint64_t v42 = *(void *)(v3 + v41);
        unint64_t v43 = v42 + 1;
        if (v42 == -1 || v43 > *(void *)(v3 + *v6)) {
          break;
        }
        char v44 = *(unsigned char *)(*(void *)(v3 + *v20) + v42);
        *(void *)(v3 + v41) = v43;
        v40 |= (unint64_t)(v44 & 0x7F) << v38;
        if ((v44 & 0x80) == 0) {
          goto LABEL_66;
        }
        v38 += 7;
        BOOL v29 = v39++ >= 9;
        if (v29)
        {
          LODWORD(v40) = 0;
          goto LABEL_68;
        }
      }
      *(unsigned char *)(v3 + *v19) = 1;
LABEL_66:
      if (*(unsigned char *)(v3 + *v19)) {
        LODWORD(v40) = 0;
      }
LABEL_68:
      *(_DWORD *)(a1 + 44) = v40;
      goto LABEL_75;
    }
    goto LABEL_63;
  }
  if (!v33) {
    goto LABEL_63;
  }
  if ((*(unsigned char *)(a1 + v21[423]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_90:
      char v52 = 0;
      goto LABEL_92;
    }
    char v50 = *(unsigned char *)(a1 + v21[423]) << 6;
    goto LABEL_73;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_90;
  }
  uint64_t v45 = objc_alloc_init(GEODirectionsRequestResponseAnalyticsData);
  if (GEODirectionsRequestResponseAnalyticsDataReadAllFrom((uint64_t)v45, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v46 = 16;
    goto LABEL_60;
  }
LABEL_91:

  char v52 = 0;
  char v21 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_92:
  BOOL v15 = v57;
  uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
  *(unsigned char *)(a1 + v21[423]) |= 2u;
  *(unsigned char *)(a1 + v21[423]) |= 4u;
  if (v52)
  {
LABEL_94:
    unint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
    if (v15) {
      goto LABEL_95;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v15)
    {
LABEL_95:
      unint64_t v55 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18A2974CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A297AF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventServiceMetadataReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventServiceMetadataReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventServiceMetadataReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventServiceMetadataReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventServiceMetadataReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A297CAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventServiceMetadataReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventServiceMetadataReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A297D10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A297EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventServiceMetadataIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A2981E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A298708(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventShowcaseSuppressionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 60) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  if (v12) {
    BOOL v16 = 1;
  }
  else {
    BOOL v16 = v14 == 0;
  }
  BOOL v69 = v16;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_99;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        char v63 = 1;
        goto LABEL_110;
      }
      if (!v14) {
        goto LABEL_111;
      }
      while (1)
      {
        int v65 = *v14++;
        int v64 = v65;
        if (v65 == 3) {
          break;
        }
        if (v64 == 5)
        {
          char v66 = 8;
LABEL_108:
          *(unsigned char *)(a1 + 60) |= v66;
        }
        else if (!v64)
        {
          goto LABEL_111;
        }
      }
      char v66 = 16;
      goto LABEL_108;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v69)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 60) |= 1u;
        while (1)
        {
          uint64_t v38 = *v15;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_77;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            uint64_t v37 = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v37 = 0;
        }
LABEL_79:
        *(void *)(a1 + 24) = v37;
        goto LABEL_95;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 60) |= 2u;
        while (2)
        {
          uint64_t v46 = *v15;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v18) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v26 = v44++ >= 9;
              if (v26)
              {
                LODWORD(v45) = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v45) = 0;
        }
LABEL_83:
        uint64_t v60 = 52;
        goto LABEL_88;
      case 3:
        if (!v30) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 60) & 0x10) == 0)
        {
          uint64_t v50 = PBReaderReadString();
          uint64_t v51 = 32;
          goto LABEL_73;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_116;
        }
        char v61 = 8 * *(unsigned char *)(a1 + 60);
        goto LABEL_93;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 60) |= 4u;
        while (2)
        {
          uint64_t v54 = *v15;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v18) + v55);
            *(void *)(v3 + v54) = v56;
            v45 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v26 = v53++ >= 9;
              if (v26)
              {
                LODWORD(v45) = 0;
                goto LABEL_87;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v45) = 0;
        }
LABEL_87:
        uint64_t v60 = 56;
LABEL_88:
        *(_DWORD *)(a1 + v60) = v45;
        goto LABEL_95;
      case 5:
        if (!v30)
        {
LABEL_74:
          char v59 = PBReaderSkipValueWithTag();
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
LABEL_109:
            char v63 = 0;
            goto LABEL_110;
          }
          goto LABEL_95;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          uint64_t v50 = PBReaderReadString();
          uint64_t v51 = 16;
LABEL_73:
          BOOL v58 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v9;
LABEL_94:
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (v9) {
            char v62 = 1;
          }
          else {
            char v62 = v13;
          }
          if ((v62 & 1) == 0) {
            goto LABEL_99;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v61 = 16 * *(unsigned char *)(a1 + 60);
LABEL_93:
          v9 += v61 >> 7;
          goto LABEL_94;
        }
LABEL_116:
        char v63 = 0;
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        *(unsigned char *)(a1 + 60) |= 0x10u;
        *(unsigned char *)(a1 + 60) |= 8u;
        if (v63)
        {
LABEL_111:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_112:
            unint64_t v67 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v42 = PBReaderSkipValueWithTag();
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_109;
        }
        goto LABEL_95;
    }
  }
}

void sub_18A299118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2998B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventShowcaseSuppressionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventShowcaseSuppressionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventShowcaseSuppressionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventShowcaseSuppressionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventShowcaseSuppressionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A299A40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventShowcaseSuppressionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventShowcaseSuppressionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A299AA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A299C98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventShowcaseSuppressionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A29A044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventStateTimingReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v19 = *v4;
          unint64_t v20 = *(void *)&v3[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v21 = *(void *)(*(void *)&v3[*v7] + v20);
            *(void *)&v3[v19] = v20 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v21 = 0;
          }
          *(void *)(a1 + 8) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_34;
          }
          uint64_t v18 = objc_alloc_init(GEOStateTransitionFeedback);
          if (!GEOStateTransitionFeedbackReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_34;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addStateTransitionFeedback:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_34;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v22 = v3[*v6] == 0;
  }
  else
  {
LABEL_34:
    BOOL v22 = 0;
  }
  objc_sync_exit(v3);

  return v22;
}

void sub_18A29AC8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventStateTimingReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventStateTimingReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A29ACF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTelemetricReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          uint64_t v18 = objc_alloc_init(GEOTelemetricEntity);
          if (!GEOTelemetricEntityReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addTelemetricEntity:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18A29BAC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTelemetricReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventTelemetricReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A29BB28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTelemetricEntityIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2) {
          goto LABEL_44;
        }
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_39;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_41;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_41;
          }
LABEL_39:
          a1[*v4] = 1;
          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOLogMsgEventThermalPressureReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (2)
      {
        if (!v3[*v6])
        {
          char v8 = 0;
          unsigned int v9 = 0;
          unint64_t v10 = 0;
          while (1)
          {
            uint64_t v11 = *v4;
            uint64_t v12 = *(void *)&v3[v11];
            unint64_t v13 = v12 + 1;
            if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
              break;
            }
            char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
            *(void *)&v3[v11] = v13;
            v10 |= (unint64_t)(v14 & 0x7F) << v8;
            if ((v14 & 0x80) == 0) {
              goto LABEL_13;
            }
            v8 += 7;
            BOOL v15 = v9++ >= 9;
            if (v15)
            {
              unint64_t v10 = 0;
              int v16 = v3[*v6];
              goto LABEL_15;
            }
          }
          v3[*v6] = 1;
LABEL_13:
          int v16 = v3[*v6];
          if (v3[*v6]) {
            unint64_t v10 = 0;
          }
LABEL_15:
          int v17 = v10 & 7;
          if (!v16 && v17 != 4)
          {
            switch((v10 >> 3))
            {
              case 1u:
                char v19 = 0;
                unsigned int v20 = 0;
                uint64_t v21 = 0;
                *(unsigned char *)(a1 + 48) |= 8u;
                while (1)
                {
                  uint64_t v22 = *v4;
                  uint64_t v23 = *(void *)&v3[v22];
                  unint64_t v24 = v23 + 1;
                  if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                    break;
                  }
                  char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                  *(void *)&v3[v22] = v24;
                  v21 |= (unint64_t)(v25 & 0x7F) << v19;
                  if ((v25 & 0x80) == 0) {
                    goto LABEL_64;
                  }
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (v15)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_66;
                  }
                }
                v3[*v6] = 1;
LABEL_64:
                if (v3[*v6]) {
                  LODWORD(v21) = 0;
                }
LABEL_66:
                uint64_t v51 = 44;
                goto LABEL_79;
              case 2u:
                if (v17 == 2)
                {
                  if (!PBReaderPlaceMark()) {
                    goto LABEL_93;
                  }
                  while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
                  {
                    char v26 = 0;
                    unsigned int v27 = 0;
                    uint64_t v28 = 0;
                    while (1)
                    {
                      uint64_t v29 = *v4;
                      uint64_t v30 = *(void *)&v3[v29];
                      unint64_t v31 = v30 + 1;
                      if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
                        break;
                      }
                      char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                      *(void *)&v3[v29] = v31;
                      v28 |= (unint64_t)(v32 & 0x7F) << v26;
                      if (v32 < 0)
                      {
                        v26 += 7;
                        BOOL v15 = v27++ >= 9;
                        if (!v15) {
                          continue;
                        }
                      }
                      goto LABEL_41;
                    }
                    v3[*v6] = 1;
LABEL_41:
                    PBRepeatedInt32Add();
                  }
                  PBReaderRecallMark();
                }
                else
                {
                  char v52 = 0;
                  unsigned int v53 = 0;
                  uint64_t v54 = 0;
                  while (1)
                  {
                    uint64_t v55 = *v4;
                    uint64_t v56 = *(void *)&v3[v55];
                    unint64_t v57 = v56 + 1;
                    if (v56 == -1 || v57 > *(void *)&v3[*v5]) {
                      break;
                    }
                    char v58 = *(unsigned char *)(*(void *)&v3[*v7] + v56);
                    *(void *)&v3[v55] = v57;
                    v54 |= (unint64_t)(v58 & 0x7F) << v52;
                    if (v58 < 0)
                    {
                      v52 += 7;
                      BOOL v15 = v53++ >= 9;
                      if (!v15) {
                        continue;
                      }
                    }
                    goto LABEL_91;
                  }
                  v3[*v6] = 1;
LABEL_91:
                  PBRepeatedInt32Add();
                }
LABEL_80:
                if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
                  break;
                }
                continue;
              case 3u:
                char v33 = 0;
                unsigned int v34 = 0;
                uint64_t v21 = 0;
                *(unsigned char *)(a1 + 48) |= 4u;
                while (2)
                {
                  uint64_t v35 = *v4;
                  uint64_t v36 = *(void *)&v3[v35];
                  unint64_t v37 = v36 + 1;
                  if (v36 == -1 || v37 > *(void *)&v3[*v5])
                  {
                    v3[*v6] = 1;
                  }
                  else
                  {
                    char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                    *(void *)&v3[v35] = v37;
                    v21 |= (unint64_t)(v38 & 0x7F) << v33;
                    if (v38 < 0)
                    {
                      v33 += 7;
                      BOOL v15 = v34++ >= 9;
                      if (v15)
                      {
                        LODWORD(v21) = 0;
                        goto LABEL_70;
                      }
                      continue;
                    }
                  }
                  break;
                }
                if (v3[*v6]) {
                  LODWORD(v21) = 0;
                }
LABEL_70:
                uint64_t v51 = 40;
                goto LABEL_79;
              case 4u:
                char v39 = 0;
                unsigned int v40 = 0;
                uint64_t v21 = 0;
                *(unsigned char *)(a1 + 48) |= 2u;
                while (2)
                {
                  uint64_t v41 = *v4;
                  uint64_t v42 = *(void *)&v3[v41];
                  unint64_t v43 = v42 + 1;
                  if (v42 == -1 || v43 > *(void *)&v3[*v5])
                  {
                    v3[*v6] = 1;
                  }
                  else
                  {
                    char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
                    *(void *)&v3[v41] = v43;
                    v21 |= (unint64_t)(v44 & 0x7F) << v39;
                    if (v44 < 0)
                    {
                      v39 += 7;
                      BOOL v15 = v40++ >= 9;
                      if (v15)
                      {
                        LODWORD(v21) = 0;
                        goto LABEL_74;
                      }
                      continue;
                    }
                  }
                  break;
                }
                if (v3[*v6]) {
                  LODWORD(v21) = 0;
                }
LABEL_74:
                uint64_t v51 = 36;
                goto LABEL_79;
              case 5u:
                char v45 = 0;
                unsigned int v46 = 0;
                uint64_t v21 = 0;
                *(unsigned char *)(a1 + 48) |= 1u;
                while (2)
                {
                  uint64_t v47 = *v4;
                  uint64_t v48 = *(void *)&v3[v47];
                  unint64_t v49 = v48 + 1;
                  if (v48 == -1 || v49 > *(void *)&v3[*v5])
                  {
                    v3[*v6] = 1;
                  }
                  else
                  {
                    char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
                    *(void *)&v3[v47] = v49;
                    v21 |= (unint64_t)(v50 & 0x7F) << v45;
                    if (v50 < 0)
                    {
                      v45 += 7;
                      BOOL v15 = v46++ >= 9;
                      if (v15)
                      {
                        LODWORD(v21) = 0;
                        goto LABEL_78;
                      }
                      continue;
                    }
                  }
                  break;
                }
                if (v3[*v6]) {
                  LODWORD(v21) = 0;
                }
LABEL_78:
                uint64_t v51 = 32;
LABEL_79:
                *(_DWORD *)(a1 + v51) = v21;
                goto LABEL_80;
              default:
                if (!PBReaderSkipValueWithTag()) {
                  goto LABEL_93;
                }
                goto LABEL_80;
            }
          }
        }
        break;
      }
    }
    BOOL v59 = v3[*v6] == 0;
  }
  else
  {
LABEL_93:
    BOOL v59 = 0;
  }
  objc_sync_exit(v3);

  return v59;
}

void sub_18A29D92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventThermalPressureReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventThermalPressureReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A29D9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A29E694(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventThrottleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int16 *)(a1 + 88) >> 9) & 1)
      + (HIBYTE(*(unsigned __int16 *)(a1 + 88)) & 1)
      + ((*(unsigned __int16 *)(a1 + 88) >> 10) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_152;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_152:
      if (v12)
      {
        char v86 = 1;
        goto LABEL_154;
      }
      if (v13)
      {
        while (1)
        {
          int v88 = *v13++;
          __int16 v87 = 512;
          switch(v88)
          {
            case 0:
              goto LABEL_163;
            case 2:
              goto LABEL_161;
            case 3:
              __int16 v87 = 256;
              goto LABEL_161;
            case 8:
              __int16 v87 = 1024;
LABEL_161:
              *(_WORD *)(a1 + 88) |= v87;
              break;
            default:
              continue;
          }
        }
      }
LABEL_163:
      unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
      if (v12) {
        goto LABEL_164;
      }
      return v3;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 88) |= 2u;
        while (1)
        {
          uint64_t v36 = *v14;
          uint64_t v37 = *(void *)(v3 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_113;
          }
          v33 += 7;
          BOOL v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_115;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_113:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_115:
        uint64_t v84 = 60;
        goto LABEL_140;
      case 2:
        if (!v28) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 88) & 0x200) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 24;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_167;
        }
        __int16 v85 = *(_WORD *)(a1 + 88) << 6;
        goto LABEL_149;
      case 3:
        if (!v28) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 88) & 0x100) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 16;
          goto LABEL_81;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_167;
        }
        __int16 v85 = *(_WORD *)(a1 + 88) << 7;
        goto LABEL_149;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x80u;
        while (2)
        {
          uint64_t v44 = *v14;
          uint64_t v45 = *(void *)(v3 + v44);
          unint64_t v46 = v45 + 1;
          if (v45 == -1 || v46 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(v3 + *v16) + v45);
            *(void *)(v3 + v44) = v46;
            v35 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              BOOL v24 = v43++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_119:
        uint64_t v84 = 84;
        goto LABEL_140;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v49 = 0;
        unsigned int v50 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x40u;
        while (2)
        {
          uint64_t v51 = *v14;
          uint64_t v52 = *(void *)(v3 + v51);
          unint64_t v53 = v52 + 1;
          if (v52 == -1 || v53 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v54 = *(unsigned char *)(*(void *)(v3 + *v16) + v52);
            *(void *)(v3 + v51) = v53;
            v35 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              BOOL v24 = v50++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_123:
        uint64_t v84 = 80;
        goto LABEL_140;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v55 = 0;
        unsigned int v56 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 88) |= 8u;
        while (2)
        {
          uint64_t v57 = *v14;
          uint64_t v58 = *(void *)(v3 + v57);
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v60 = *(unsigned char *)(*(void *)(v3 + *v16) + v58);
            *(void *)(v3 + v57) = v59;
            v35 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              BOOL v24 = v56++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_127:
        uint64_t v84 = 68;
        goto LABEL_140;
      case 8:
        if (!v28) {
          goto LABEL_110;
        }
        if ((*(_WORD *)(a1 + 88) & 0x400) == 0)
        {
          uint64_t v40 = PBReaderReadString();
          uint64_t v41 = 40;
LABEL_81:
          char v61 = *(void **)(a1 + v41);
          *(void *)(a1 + v41) = v40;

          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          --v9;
LABEL_141:
          if (!(v12 & 1 | (v9 != 0))) {
            goto LABEL_152;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          __int16 v85 = 32 * *(_WORD *)(a1 + 88);
LABEL_149:
          v9 += v85 >> 15;
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_141;
        }
LABEL_167:
        char v86 = 0;
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_154:
        *(_WORD *)(a1 + 88) |= 0x200u;
        *(_WORD *)(a1 + 88) |= 0x100u;
        *(_WORD *)(a1 + 88) |= 0x400u;
        if (v86) {
          goto LABEL_163;
        }
        unint64_t v3 = 0;
        if ((v12 & 1) == 0) {
          return v3;
        }
LABEL_164:
        uint64_t v89 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v62 = 0;
        unsigned int v63 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x10u;
        while (2)
        {
          uint64_t v64 = *v14;
          uint64_t v65 = *(void *)(v3 + v64);
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v67 = *(unsigned char *)(*(void *)(v3 + *v16) + v65);
            *(void *)(v3 + v64) = v66;
            v35 |= (unint64_t)(v67 & 0x7F) << v62;
            if (v67 < 0)
            {
              v62 += 7;
              BOOL v24 = v63++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_131;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_131:
        uint64_t v84 = 72;
        goto LABEL_140;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v68 = 0;
        unsigned int v69 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 88) |= 0x20u;
        while (2)
        {
          uint64_t v70 = *v14;
          uint64_t v71 = *(void *)(v3 + v70);
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v73 = *(unsigned char *)(*(void *)(v3 + *v16) + v71);
            *(void *)(v3 + v70) = v72;
            v35 |= (unint64_t)(v73 & 0x7F) << v68;
            if (v73 < 0)
            {
              v68 += 7;
              BOOL v24 = v69++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_135;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_135:
        uint64_t v84 = 76;
        goto LABEL_140;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_110;
        }
        char v74 = 0;
        unsigned int v75 = 0;
        uint64_t v35 = 0;
        *(_WORD *)(a1 + 88) |= 4u;
        while (2)
        {
          uint64_t v76 = *v14;
          uint64_t v77 = *(void *)(v3 + v76);
          unint64_t v78 = v77 + 1;
          if (v77 == -1 || v78 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v79 = *(unsigned char *)(*(void *)(v3 + *v16) + v77);
            *(void *)(v3 + v76) = v78;
            v35 |= (unint64_t)(v79 & 0x7F) << v74;
            if (v79 < 0)
            {
              v74 += 7;
              BOOL v24 = v75++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_139;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_139:
        uint64_t v84 = 64;
LABEL_140:
        *(_DWORD *)(a1 + v84) = v35;
        goto LABEL_141;
      case 12:
        if (v8)
        {
          *(_WORD *)(a1 + 88) |= 1u;
          uint64_t v80 = *v14;
          unint64_t v81 = *(void *)(v3 + v80);
          if (v81 <= 0xFFFFFFFFFFFFFFF7 && v81 + 8 <= *(void *)(v3 + *v6))
          {
            uint64_t v82 = *(void *)(*(void *)(v3 + *v16) + v81);
            *(void *)(v3 + v80) = v81 + 8;
          }
          else
          {
            *(unsigned char *)(v3 + *v15) = 1;
            uint64_t v82 = 0;
          }
          *(void *)(a1 + 32) = v82;
        }
        else
        {
LABEL_110:
          char v83 = PBReaderSkipValueWithTag();
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v83 & 1) == 0)
          {
LABEL_166:
            char v86 = 0;
            goto LABEL_154;
          }
        }
        goto LABEL_141;
      default:
        int v48 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v48) {
          goto LABEL_166;
        }
        goto LABEL_141;
    }
  }
}

void sub_18A29F228(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A29F77C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A0844(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventThrottleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventThrottleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventThrottleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventThrottleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventThrottleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A2A09D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventThrottleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventThrottleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2A0A38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A0D04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventThrottleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(_WORD *)(a1 + 88) & 0xF00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A2A1284(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A1AB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTileCacheAnalyticReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 44) >> 1) & 1) + (*(unsigned char *)(a1 + 44) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  BOOL v15 = v14 == 0;
  if (v12) {
    BOOL v15 = 1;
  }
  BOOL v46 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  char v17 = (int *)MEMORY[0x1E4F940C8];
  unsigned int v18 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
  unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_64;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_26;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_26:
    int v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_28:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_64:
      if (v13)
      {
        char v41 = 1;
        goto LABEL_73;
      }
      if (v14)
      {
        do
        {
          while (1)
          {
            int v43 = *v14++;
            int v42 = v43;
            if (v43 != 1 && v42 != 2) {
              break;
            }
            *(unsigned char *)(a1 + v18[950]) |= v42;
          }
        }
        while (v42);
      }
      goto LABEL_74;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v13;
    if (!v46)
    {
      BOOL v32 = v14;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 != 2)
    {
      if (v30 != 1)
      {
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_72;
        }
        goto LABEL_55;
      }
      if (v31)
      {
        if (*(unsigned char *)(a1 + v18[950]))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_72;
          }
          v7 -= *(unsigned char *)(a1 + v18[950]) & 1;
        }
        else
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_72;
          }
          uint64_t v36 = v17;
          uint64_t v37 = objc_alloc_init(GEOCacheHit);
          if (!GEOCacheHitReadAllFrom((uint64_t)v37, (void *)v3)) {
            goto LABEL_79;
          }
          PBReaderRecallMark();
          uint64_t v38 = 16;
LABEL_51:
          char v39 = *(void **)(a1 + v38);
          *(void *)(a1 + v38) = v37;

          --v7;
          char v17 = v36;
          unsigned int v18 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
        }
LABEL_55:
        if (v7) {
          char v40 = 1;
        }
        else {
          char v40 = v13;
        }
        if ((v40 & 1) == 0) {
          goto LABEL_64;
        }
        continue;
      }
LABEL_54:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_72;
      }
      goto LABEL_55;
    }
    break;
  }
  if (!v31) {
    goto LABEL_54;
  }
  if ((*(unsigned char *)(a1 + v18[950]) & 2) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_72:
      char v41 = 0;
      goto LABEL_73;
    }
    v7 += *(unsigned __int8 *)(a1 + v18[950]) << 30 >> 31;
    goto LABEL_55;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_72;
  }
  uint64_t v36 = v17;
  uint64_t v37 = objc_alloc_init(GEOCacheMiss);
  if (GEOCacheMissReadAllFrom(v37, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v38 = 24;
    goto LABEL_51;
  }
LABEL_79:

  char v41 = 0;
  char v17 = v36;
  unsigned int v18 = &OBJC_IVAR___GEORPFeedbackComponent__unknownFields;
LABEL_73:
  *(unsigned char *)(a1 + v18[950]) |= 1u;
  *(unsigned char *)(a1 + v18[950]) |= 2u;
  if (v41)
  {
LABEL_74:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (!v13) {
      return v3;
    }
    goto LABEL_75;
  }
  unint64_t v3 = 0;
  if (v13)
  {
LABEL_75:
    uint64_t v44 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A2A2068(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A2530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTileCacheAnalyticReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventTileCacheAnalyticReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgEventTileCacheAnalyticReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgEventTileCacheAnalyticReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventTileCacheAnalyticReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A2A26EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTileCacheAnalyticReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventTileCacheAnalyticReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2A2750(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A28E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTileCacheAnalyticIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 44) & 7) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A2A2B80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTileSetStateReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(unsigned char *)(a1 + 36) |= 1u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v32 = 8;
            goto LABEL_48;
          case 2u:
            char v21 = 0;
            unsigned int v22 = 0;
            uint64_t v23 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            break;
          case 3u:
            *(unsigned char *)(a1 + 36) |= 4u;
            uint64_t v28 = *v4;
            unint64_t v29 = *(void *)&v3[v28];
            if (v29 <= 0xFFFFFFFFFFFFFFF7 && v29 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v29);
              *(void *)&v3[v28] = v29 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v32 = 24;
            goto LABEL_48;
          case 4u:
            *(unsigned char *)(a1 + 36) |= 2u;
            uint64_t v30 = *v4;
            unint64_t v31 = *(void *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v32 = 16;
LABEL_48:
            *(void *)(a1 + v32) = v20;
            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_51;
            }
            continue;
        }
        while (1)
        {
          uint64_t v24 = *v4;
          uint64_t v25 = *(void *)&v3[v24];
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)&v3[*v5]) {
            break;
          }
          char v27 = *(unsigned char *)(*(void *)&v3[*v7] + v25);
          *(void *)&v3[v24] = v26;
          v23 |= (unint64_t)(v27 & 0x7F) << v21;
          if ((v27 & 0x80) == 0) {
            goto LABEL_39;
          }
          v21 += 7;
          BOOL v15 = v22++ >= 9;
          if (v15)
          {
            LODWORD(v23) = 0;
            goto LABEL_41;
          }
        }
        v3[*v6] = 1;
LABEL_39:
        if (v3[*v6]) {
          LODWORD(v23) = 0;
        }
LABEL_41:
        *(_DWORD *)(a1 + 32) = v23;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_51:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A2A38E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTileSetStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventTileSetStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2A395C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveHypothesisReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 0x20u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_63;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_65;
              }
            }
            v3[*v6] = 1;
LABEL_63:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_65:
            uint64_t v52 = 44;
            goto LABEL_78;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 0x10u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_69:
            uint64_t v52 = 40;
            goto LABEL_78;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 0x40u;
            while (2)
            {
              uint64_t v33 = *v4;
              uint64_t v34 = *(void *)&v3[v33];
              unint64_t v35 = v34 + 1;
              if (v34 == -1 || v35 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v36 = *(unsigned char *)(*(void *)&v3[*v7] + v34);
                *(void *)&v3[v33] = v35;
                v20 |= (unint64_t)(v36 & 0x7F) << v31;
                if (v36 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_73;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_73:
            uint64_t v52 = 48;
            goto LABEL_78;
          case 4u:
            char v37 = 0;
            unsigned int v38 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 56) |= 0x80u;
            break;
          case 5u:
            *(unsigned char *)(a1 + 56) |= 2u;
            uint64_t v43 = *v4;
            unint64_t v44 = *(void *)&v3[v43];
            if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v45 = *(void *)(*(void *)&v3[*v7] + v44);
              *(void *)&v3[v43] = v44 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v45 = 0;
            }
            uint64_t v53 = 16;
            goto LABEL_87;
          case 6u:
            *(unsigned char *)(a1 + 56) |= 8u;
            uint64_t v46 = *v4;
            unint64_t v47 = *(void *)&v3[v46];
            if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v45 = *(void *)(*(void *)&v3[*v7] + v47);
              *(void *)&v3[v46] = v47 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v45 = 0;
            }
            uint64_t v53 = 32;
            goto LABEL_87;
          case 7u:
            *(unsigned char *)(a1 + 56) |= 1u;
            uint64_t v48 = *v4;
            unint64_t v49 = *(void *)&v3[v48];
            if (v49 <= 0xFFFFFFFFFFFFFFF7 && v49 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v45 = *(void *)(*(void *)&v3[*v7] + v49);
              *(void *)&v3[v48] = v49 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v45 = 0;
            }
            uint64_t v53 = 8;
            goto LABEL_87;
          case 8u:
            *(unsigned char *)(a1 + 56) |= 4u;
            uint64_t v50 = *v4;
            unint64_t v51 = *(void *)&v3[v50];
            if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v45 = *(void *)(*(void *)&v3[*v7] + v51);
              *(void *)&v3[v50] = v51 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v45 = 0;
            }
            uint64_t v53 = 24;
LABEL_87:
            *(void *)(a1 + v53) = v45;
            continue;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_90;
            }
            continue;
        }
        while (1)
        {
          uint64_t v39 = *v4;
          uint64_t v40 = *(void *)&v3[v39];
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)&v3[*v5]) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)&v3[*v7] + v40);
          *(void *)&v3[v39] = v41;
          v20 |= (unint64_t)(v42 & 0x7F) << v37;
          if ((v42 & 0x80) == 0) {
            goto LABEL_75;
          }
          v37 += 7;
          BOOL v15 = v38++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_77;
          }
        }
        v3[*v6] = 1;
LABEL_75:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_77:
        uint64_t v52 = 52;
LABEL_78:
        *(_DWORD *)(a1 + v52) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v54 = v3[*v6] == 0;
  }
  else
  {
LABEL_90:
    BOOL v54 = 0;
  }
  objc_sync_exit(v3);

  return v54;
}

void sub_18A2A5740(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveHypothesisReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventTimeToLeaveHypothesisReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2A57C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveInitialTravelTimeReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A2A69D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTimeToLeaveInitialTravelTimeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventTimeToLeaveInitialTravelTimeReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2A6A3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A6E68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTransitAppLaunchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 1);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        char v17 = (int *)MEMORY[0x1E4F940E8];
        char v52 = (v15 == 0) | v14;
        char v18 = (int *)MEMORY[0x1E4F940C8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_70;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_70:
      if (v16)
      {
        char v46 = 1;
        goto LABEL_81;
      }
      if (v15)
      {
        while (1)
        {
          int v47 = *v15++;
          char v48 = 2;
          switch(v47)
          {
            case 0:
              goto LABEL_82;
            case 1:
              goto LABEL_76;
            case 2:
              char v48 = 8;
              goto LABEL_76;
            case 3:
              char v48 = 4;
LABEL_76:
              *(unsigned char *)(a1 + 60) |= v48;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_82;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = (char)v16;
    if ((v52 & 1) == 0)
    {
      unsigned int v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          char v37 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v36;

          --v7;
          goto LABEL_66;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_78;
        }
        char v45 = *(unsigned char *)(a1 + 60) << 6;
        goto LABEL_65;
      case 2:
        if (!v31) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_78;
          }
          char v45 = 16 * *(unsigned char *)(a1 + 60);
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_78;
        }
        int v51 = (int)v16;
        int v16 = objc_alloc_init(GEOLatLng);
        if (!GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3)) {
          goto LABEL_79;
        }
        PBReaderRecallMark();
        uint64_t v39 = 32;
        goto LABEL_52;
      case 3:
        if (!v31) {
          goto LABEL_57;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_78:
            char v46 = 0;
            goto LABEL_80;
          }
          char v45 = 32 * *(unsigned char *)(a1 + 60);
LABEL_65:
          v7 += v45 >> 7;
          goto LABEL_66;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_78;
        }
        int v51 = (int)v16;
        int v16 = objc_alloc_init(GEOLatLng);
        if (GEOLatLngReadAllFrom((uint64_t)v16, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v39 = 24;
LABEL_52:
          uint64_t v40 = *(void **)(a1 + v39);
          *(void *)(a1 + v39) = v16;

          --v7;
          LODWORD(v16) = v51;
LABEL_66:
          char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_69:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_70;
          }
          continue;
        }
LABEL_79:

        char v46 = 0;
        LOBYTE(v16) = v51;
LABEL_80:
        char v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_81:
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 4u;
        if (v46)
        {
LABEL_82:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_83;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_83:
            unint64_t v49 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (v8)
        {
          *(unsigned char *)(a1 + 60) |= 1u;
          uint64_t v41 = *v17;
          unint64_t v42 = *(void *)(v3 + v41);
          if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(v3 + *v6))
          {
            uint64_t v43 = *(void *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v42 + 8;
          }
          else
          {
            *(unsigned char *)(v3 + *v18) = 1;
            uint64_t v43 = 0;
          }
          *(void *)(a1 + 40) = v43;
        }
        else
        {
LABEL_57:
          char v44 = PBReaderSkipValueWithTag();
          char v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v44 & 1) == 0)
          {
LABEL_77:
            char v46 = 0;
            goto LABEL_81;
          }
        }
        goto LABEL_69;
      default:
        int v38 = PBReaderSkipValueWithTag();
        char v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_77;
        }
        goto LABEL_69;
    }
  }
}

void sub_18A2A75E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A774C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A7D7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTransitAppLaunchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventTransitAppLaunchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventTransitAppLaunchReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventTransitAppLaunchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventTransitAppLaunchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A2A7F38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventTransitAppLaunchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventTransitAppLaunchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2A7F9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A816C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTransitAppLaunchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 60) & 0x1E) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A2A8520(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTripDepartureFeedbackReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(unsigned char *)(a1 + 28) |= 2u;
          uint64_t v26 = *v4;
          unint64_t v27 = *(void *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v27);
            *(void *)&v3[v26] = v27 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v28 = 0;
          }
          uint64_t v31 = 16;
        }
        else
        {
          if (v18 != 2)
          {
            if (v18 == 1)
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              *(unsigned char *)(a1 + 28) |= 4u;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if ((v25 & 0x80) == 0) {
                  goto LABEL_38;
                }
                v19 += 7;
                BOOL v15 = v20++ >= 9;
                if (v15)
                {
                  LODWORD(v21) = 0;
                  goto LABEL_40;
                }
              }
              v3[*v6] = 1;
LABEL_38:
              if (v3[*v6]) {
                LODWORD(v21) = 0;
              }
LABEL_40:
              *(_DWORD *)(a1 + 24) = v21;
            }
            else if (!PBReaderSkipValueWithTag())
            {
              goto LABEL_48;
            }
            continue;
          }
          *(unsigned char *)(a1 + 28) |= 1u;
          uint64_t v29 = *v4;
          unint64_t v30 = *(void *)&v3[v29];
          if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v30 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v28 = 0;
          }
          uint64_t v31 = 8;
        }
        *(void *)(a1 + v31) = v28;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_18A2A92EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventTripDepartureFeedbackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventTripDepartureFeedbackReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2A9350(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2A99FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventUserActionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFDFFFCFFFBFFFALL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 | (v10 > 2);
  if ((v12 | v8)) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  LODWORD(v14) = v12;
  char v67 = (v13 == 0) | v12;
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  int v16 = (int *)MEMORY[0x1E4F940C8];
  char v17 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v16)) {
      goto LABEL_105;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v15;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_24;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
    int v26 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v20 = 0;
    }
LABEL_26:
    if (v26 || (v20 & 7) == 4)
    {
LABEL_105:
      if (v14)
      {
        char v61 = 1;
        goto LABEL_116;
      }
      if (v13)
      {
        while (1)
        {
          int v62 = *v13++;
          char v63 = 32;
          switch(v62)
          {
            case 0:
              goto LABEL_117;
            case 1:
              goto LABEL_112;
            case 2:
              char v63 = 64;
              goto LABEL_112;
            case 5:
              char v63 = 16;
              goto LABEL_112;
            case 7:
              char v63 = 8;
LABEL_112:
              *(unsigned char *)(a1 + 72) |= v63;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_117;
    }
    unint64_t v28 = v20 >> 3;
    BOOL v29 = (char)v14;
    if ((v67 & 1) == 0)
    {
      unint64_t v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 32;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v60 = 4 * *(unsigned char *)(a1 + 72);
        goto LABEL_102;
      case 2:
        if (!v29) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x40) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 40;
          goto LABEL_78;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        char v60 = 2 * *(unsigned char *)(a1 + 72);
        goto LABEL_102;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v40 = *v15;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v43 = *(unsigned char *)(*(void *)(v3 + *v17) + v41);
            *(void *)(v3 + v40) = v42;
            v39 |= (unint64_t)(v43 & 0x7F) << v37;
            if (v43 < 0)
            {
              v37 += 7;
              BOOL v25 = v38++ >= 9;
              if (v25)
              {
                LODWORD(v39) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v39) = 0;
        }
LABEL_84:
        uint64_t v59 = 68;
        goto LABEL_93;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v46 = *v15;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v17) + v47);
            *(void *)(v3 + v46) = v48;
            v39 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v25 = v45++ >= 9;
              if (v25)
              {
                LODWORD(v39) = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v39) = 0;
        }
LABEL_88:
        uint64_t v59 = 64;
        goto LABEL_93;
      case 5:
        if (!v29) {
          goto LABEL_79;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_114;
          }
          char v60 = 8 * *(unsigned char *)(a1 + 72);
LABEL_102:
          v7 += v60 >> 7;
          goto LABEL_103;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_114;
        }
        int v66 = (int)v14;
        char v14 = objc_alloc_init(GEOLogMsgEventUserActionModuleInfo);
        if (GEOLogMsgEventUserActionModuleInfoReadAllFrom((uint64_t)v14, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v50 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v14;

          --v7;
          LODWORD(v14) = v66;
LABEL_103:
          int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_104:
          if (!(v14 & 1 | (v7 != 0))) {
            goto LABEL_105;
          }
          continue;
        }

        char v61 = 0;
        LOBYTE(v14) = v66;
LABEL_115:
        int v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_116:
        *(unsigned char *)(a1 + 72) |= 0x20u;
        *(unsigned char *)(a1 + 72) |= 0x40u;
        *(unsigned char *)(a1 + 72) |= 0x10u;
        *(unsigned char *)(a1 + 72) |= 8u;
        if (v61)
        {
LABEL_117:
          unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
          if (v14) {
            goto LABEL_118;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v14)
          {
LABEL_118:
            uint64_t v64 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_79;
        }
        char v51 = 0;
        unsigned int v52 = 0;
        uint64_t v39 = 0;
        *(unsigned char *)(a1 + 72) |= 1u;
        while (2)
        {
          uint64_t v53 = *v15;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v16) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v17) + v54);
            *(void *)(v3 + v53) = v55;
            v39 |= (unint64_t)(v56 & 0x7F) << v51;
            if (v56 < 0)
            {
              v51 += 7;
              BOOL v25 = v52++ >= 9;
              if (v25)
              {
                LODWORD(v39) = 0;
                goto LABEL_92;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v16)) {
          LODWORD(v39) = 0;
        }
LABEL_92:
        uint64_t v59 = 60;
LABEL_93:
        *(_DWORD *)(a1 + v59) = v39;
        goto LABEL_104;
      case 7:
        if (!v29)
        {
LABEL_79:
          char v58 = PBReaderSkipValueWithTag();
          int v16 = (int *)MEMORY[0x1E4F940C8];
          if ((v58 & 1) == 0)
          {
LABEL_113:
            char v61 = 0;
            goto LABEL_116;
          }
          goto LABEL_104;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          uint64_t v34 = PBReaderReadString();
          uint64_t v35 = 16;
LABEL_78:
          uint64_t v57 = *(void **)(a1 + v35);
          *(void *)(a1 + v35) = v34;

          --v7;
          goto LABEL_103;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_114:
          char v61 = 0;
          goto LABEL_115;
        }
        char v60 = 16 * *(unsigned char *)(a1 + 72);
        goto LABEL_102;
      default:
        int v36 = PBReaderSkipValueWithTag();
        int v16 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_113;
        }
        goto LABEL_104;
    }
  }
}

void sub_18A2AA310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2B3D94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2B41F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventUserActionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventUserActionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    int v9 = (int *)&GEOLogMsgEventUserActionReadAllFrom_recursiveTag;
  }
  else {
    int v9 = (int *)&GEOLogMsgEventUserActionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgEventUserActionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A2B74A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgEventUserActionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgEventUserActionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2B750C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventUserActionModuleInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgEventUserActionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = *(unsigned __int8 *)(a1 + 72) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A2B7B28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventUserActionModuleInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          int v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A2B9008(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventUserActionModuleInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventUserActionModuleInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2B906C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2B95A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgEventVLFUsageReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 116);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 112)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = *(unsigned __int16 *)(a1 + 136);
  unsigned int v12 = ((v11 >> 4) & 1)
      + ((v11 >> 9) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(v11), (uint16x4_t)0xFFF6FFF4FFF8FFF5) & 0xFF01FF01FF01FF01))+ ((v11 >> 5) & 1)+ ((v11 >> 7) & 1)+ ((v11 >> 6) & 1));
  while (2)
  {
    uint64_t v13 = 1;
    uint64_t v14 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v13 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v15 = v12 > 6;
        char v16 = v10 | v15;
        if (((v10 | v15) | v8)) {
          unsigned int v17 = 0;
        }
        else {
          unsigned int v17 = a3;
        }
        char v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        char v69 = (v17 == 0) | v16;
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        char v68 = v10 | v15;
        break;
      default:
        ++v12;
LABEL_6:
        uint64_t v13 = v9;
        uint64_t v14 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v13;
        uint64_t v10 = v14;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_144;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_23;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_23:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_25:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_144:
      if (v16)
      {
        char v62 = 1;
        goto LABEL_160;
      }
      if (v17)
      {
        while (1)
        {
          int v63 = *v17++;
          __int16 v64 = 256;
          switch(v63)
          {
            case 0:
              goto LABEL_161;
            case 1:
              goto LABEL_156;
            case 3:
              __int16 v64 = 2048;
              goto LABEL_156;
            case 5:
              __int16 v64 = 4096;
              goto LABEL_156;
            case 8:
              __int16 v64 = 1024;
              goto LABEL_156;
            case 9:
              __int16 v64 = 32;
              goto LABEL_156;
            case 10:
              __int16 v64 = 128;
              goto LABEL_156;
            case 11:
              __int16 v64 = 64;
              goto LABEL_156;
            case 12:
              __int16 v64 = 512;
              goto LABEL_156;
            case 13:
              __int16 v64 = 16;
LABEL_156:
              *(_WORD *)(a1 + 136) |= v64;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_161;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if ((v69 & 1) == 0)
    {
      BOOL v33 = v17;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_114;
        }
        if ((*(_WORD *)(a1 + 136) & 0x100) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_159;
          }
          char v67 = objc_alloc_init(GEOVLFEntryPoint);
          if (GEOVLFEntryPointReadAllFrom((uint64_t)v67, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v37 = 72;
            goto LABEL_113;
          }
          goto LABEL_158;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_159;
        }
        __int16 v61 = *(_WORD *)(a1 + 136) << 7;
        goto LABEL_141;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_114;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 136) |= 4u;
        while (2)
        {
          uint64_t v42 = *v18;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v20) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v28 = v40++ >= 9;
              if (v28)
              {
                LODWORD(v41) = 0;
                goto LABEL_119;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v41) = 0;
        }
LABEL_119:
        uint64_t v60 = 128;
        goto LABEL_128;
      case 3:
        if (!v32 || (*(_WORD *)(a1 + 136) & 0x800) != 0) {
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFLocalizationDetails);
        if (!GEOVLFLocalizationDetailsReadAllFrom((uint64_t)v67, (void *)v3, v9 & 1)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventVLFUsage _addNoFlagsLocalizationDetails:](a1, v67);
        goto LABEL_97;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_114;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 136) |= 2u;
        while (2)
        {
          uint64_t v48 = *v18;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v20) + v49);
            *(void *)(v3 + v48) = v50;
            v41 |= (unint64_t)(v51 & 0x7F) << v46;
            if (v51 < 0)
            {
              v46 += 7;
              BOOL v28 = v47++ >= 9;
              if (v28)
              {
                LODWORD(v41) = 0;
                goto LABEL_123;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v41) = 0;
        }
LABEL_123:
        uint64_t v60 = 124;
        goto LABEL_128;
      case 5:
        if (!v32) {
          goto LABEL_114;
        }
        if ((*(_WORD *)(a1 + 136) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v61 = 8 * *(_WORD *)(a1 + 136);
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFCorrection);
        if (!GEOVLFCorrectionReadAllFrom((uint64_t)v67, (void *)v3)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        uint64_t v37 = 104;
        goto LABEL_113;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_114;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v41 = 0;
        *(_WORD *)(a1 + 136) |= 8u;
        while (2)
        {
          uint64_t v54 = *v18;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v20) + v55);
            *(void *)(v3 + v54) = v56;
            v41 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v28 = v53++ >= 9;
              if (v28)
              {
                LODWORD(v41) = 0;
                goto LABEL_127;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v41) = 0;
        }
LABEL_127:
        uint64_t v60 = 132;
LABEL_128:
        *(_DWORD *)(a1 + v60) = v41;
        goto LABEL_143;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_114;
        }
        if (!PBReaderPlaceMark()
          || (GEOVLFPositionContextClassificationReadAllFrom(a1 + 16, v3) & 1) == 0)
        {
          goto LABEL_159;
        }
        PBReaderRecallMark();
        *(_WORD *)(a1 + 136) |= 1u;
        goto LABEL_142;
      case 8:
        if (!v32) {
          goto LABEL_114;
        }
        if ((*(_WORD *)(a1 + 136) & 0x400) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v61 = 32 * *(_WORD *)(a1 + 136);
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFInitializationFailureDetails);
        if (!GEOVLFInitializationFailureDetailsReadAllFrom((uint64_t)v67, (void *)v3)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        uint64_t v37 = 88;
        goto LABEL_113;
      case 9:
        if (!v32 || (*(_WORD *)(a1 + 136) & 0x20) != 0) {
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFARState);
        if (!GEOVLFARStateReadAllFrom((uint64_t)v67, (void *)v3)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventVLFUsage _addNoFlagsArState:](a1, v67);
        goto LABEL_97;
      case 10:
        if (!v32 || (*(_WORD *)(a1 + 136) & 0x80) != 0) {
          goto LABEL_114;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFDeviceOrientation);
        if (!GEOVLFDeviceOrientationReadAllFrom((uint64_t)v67, (void *)v3)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        -[GEOLogMsgEventVLFUsage _addNoFlagsDeviceOrientation:](a1, v67);
LABEL_97:

        goto LABEL_142;
      case 11:
        if (!v32) {
          goto LABEL_114;
        }
        if ((*(_WORD *)(a1 + 136) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v61 = *(_WORD *)(a1 + 136) << 9;
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFCrowdsourcingDetails);
        if (!GEOVLFCrowdsourcingDetailsReadAllFrom((uint64_t)v67, (void *)v3, v9 & 1)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        uint64_t v37 = 56;
        goto LABEL_113;
      case 12:
        if (!v32) {
          goto LABEL_114;
        }
        if ((*(_WORD *)(a1 + 136) & 0x200) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v61 = *(_WORD *)(a1 + 136) << 6;
          goto LABEL_141;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFLocation);
        if (!GEOVLFLocationReadAllFrom((uint64_t)v67, (void *)v3)) {
          goto LABEL_158;
        }
        PBReaderRecallMark();
        uint64_t v37 = 80;
        goto LABEL_113;
      case 13:
        if (!v32)
        {
LABEL_114:
          char v59 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          char v16 = v68;
          if ((v59 & 1) == 0)
          {
LABEL_157:
            char v62 = 0;
            goto LABEL_160;
          }
LABEL_143:
          if (!(v16 & 1 | (v7 != 0))) {
            goto LABEL_144;
          }
          continue;
        }
        if ((*(_WORD *)(a1 + 136) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_159;
          }
          __int16 v61 = *(_WORD *)(a1 + 136) << 11;
LABEL_141:
          v7 += v61 >> 15;
LABEL_142:
          char v16 = v68;
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_143;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_159;
        }
        char v67 = objc_alloc_init(GEOVLFARFailureTypes);
        if (GEOVLFARFailureTypesReadAllFrom((uint64_t)v67, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v37 = 40;
LABEL_113:
          char v58 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v67;

          --v7;
          goto LABEL_142;
        }
LABEL_158:

LABEL_159:
        char v62 = 0;
        char v16 = v68;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_160:
        *(_WORD *)(a1 + 136) |= 0x100u;
        *(_WORD *)(a1 + 136) |= 0x800u;
        *(_WORD *)(a1 + 136) |= 0x1000u;
        *(_WORD *)(a1 + 136) |= 0x400u;
        *(_WORD *)(a1 + 136) |= 0x20u;
        *(_WORD *)(a1 + 136) |= 0x80u;
        *(_WORD *)(a1 + 136) |= 0x40u;
        *(_WORD *)(a1 + 136) |= 0x200u;
        *(_WORD *)(a1 + 136) |= 0x10u;
        if (v62)
        {
LABEL_161:
          uint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_162;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v16)
          {
LABEL_162:
            uint64_t v65 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        char v16 = v68;
        if (!v38) {
          goto LABEL_157;
        }
        goto LABEL_143;
    }
  }
}

void sub_18A2BA384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BA87C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BAAEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BAC5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BB020(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BB3E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BB554(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BB6C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2BC9A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventVLFUsageCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  [a1[9] readAll:1];
  long long v28 = 0u;
  long long v29 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  id v2 = a1[12];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v27;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v27 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v26 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v26 objects:v32 count:16];
    }
    while (v4);
  }

  [a1[13] readAll:1];
  [a1[11] readAll:1];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = a1[6];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v23;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v23 != v10) {
          objc_enumerationMutation(v7);
        }
        [*(id *)(*((void *)&v22 + 1) + 8 * v11++) readAll:1];
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v22 objects:v31 count:16];
    }
    while (v9);
  }

  long long v20 = 0u;
  long long v21 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v12 = a1[8];
  uint64_t v13 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = *(void *)v19;
    do
    {
      uint64_t v16 = 0;
      do
      {
        if (*(void *)v19 != v15) {
          objc_enumerationMutation(v12);
        }
        objc_msgSend(*(id *)(*((void *)&v18 + 1) + 8 * v16++), "readAll:", 1, (void)v18);
      }
      while (v14 != v16);
      uint64_t v14 = [v12 countByEnumeratingWithState:&v18 objects:v30 count:16];
    }
    while (v14);
  }

  [a1[7] readAll:1];
  [a1[10] readAll:1];
  return [a1[5] readAll:1];
}

uint64_t GEOLogMsgEventVLFUsageReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 116))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgEventVLFUsageReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 120));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 112) = [v8 position];
  *(_DWORD *)(a1 + 116) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgEventVLFUsageReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgEventVLFUsageReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOLogMsgEventVLFUsageReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgEventVLFUsageCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 120));
  return Specified;
}

void sub_18A2BCDDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgEventVLFUsageReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOLogMsgEventVLFUsageReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2BCE40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFEntryPointIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOVLFLocalizationDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOVLFTileDetailsIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_74;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v24 = 0;
          break;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFLocalizationAlgorithmDetailsIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 5u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFSuccessDetailsIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFFailureDetailsIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 7u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFGravityVectorIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFLocationIsValid(a1)) {
            goto LABEL_74;
          }
          goto LABEL_69;
        case 9u:
          if (v16 != 1) {
            goto LABEL_74;
          }
          uint64_t v29 = *v2;
          unint64_t v30 = *(void *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_65;
          }
          unint64_t v31 = v30 + 8;
          if (v31 > *(void *)&a1[*v3]) {
            goto LABEL_65;
          }
          *(void *)&a1[v29] = v31;
          continue;
        case 0xAu:
          if (v16 != 2
            || !PBReaderPlaceMark()
            || !GEOVLFPositionContextClassificationIsValid(a1))
          {
            goto LABEL_74;
          }
LABEL_69:
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_74:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v25 = *v2;
        uint64_t v26 = *(void *)&a1[v25];
        unint64_t v27 = v26 + 1;
        if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
          break;
        }
        int v28 = *(char *)(*(void *)&a1[*v5] + v26);
        *(void *)&a1[v25] = v27;
        if (v28 < 0)
        {
          BOOL v23 = v24++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_70;
      }
LABEL_41:
      uint64_t v14 = *v4;
LABEL_65:
      a1[v14] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOVLFCorrectionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

uint64_t GEOVLFPositionContextClassificationIsValid(void *a1)
{
  v4[3] = [a1 position];
  v4[4] = [a1 length];
  memset(v4, 0, 24);
  uint64_t AllFrom = GEOVLFPositionContextClassificationReadAllFrom((uint64_t)v4, (uint64_t)a1);
  PBReaderRecallMark();
  return AllFrom;
}

BOOL GEOVLFInitializationFailureDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2) {
          goto LABEL_44;
        }
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_39;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_41;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_44;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_41;
          }
LABEL_39:
          a1[*v4] = 1;
          continue;
        }
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_44:
        BOOL v29 = 0;
        goto LABEL_43;
      }
LABEL_41:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
LABEL_43:
  PBReaderRecallMark();
  return v29;
}

BOOL GEOVLFARStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOVLFDeviceOrientationIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOVLFCrowdsourcingDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 1) {
            goto LABEL_20;
          }
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_112;
          }
          while (1)
          {
            BOOL v21 = (unint64_t *)&a1[*v2];
            unint64_t v22 = *v21;
            unint64_t v23 = *(void *)&a1[*v3];
            if (*v21 >= v23) {
              break;
            }
            uint64_t v24 = *v4;
            if (a1[v24]) {
              break;
            }
            if (v22 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v25 = v22 + 8, v25 > v23)) {
              a1[v24] = 1;
            }
            else {
              *BOOL v21 = v25;
            }
          }
          goto LABEL_51;
        case 2u:
          if (v16 == 1) {
            goto LABEL_20;
          }
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_112;
          }
          while (1)
          {
            int v26 = (unint64_t *)&a1[*v2];
            unint64_t v27 = *v26;
            unint64_t v28 = *(void *)&a1[*v3];
            if (*v26 >= v28) {
              break;
            }
            uint64_t v29 = *v4;
            if (a1[v29]) {
              break;
            }
            if (v27 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v30 = v27 + 8, v30 > v28)) {
              a1[v29] = 1;
            }
            else {
              *int v26 = v30;
            }
          }
          goto LABEL_51;
        case 3u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFSLAMTrackIsValid(a1)) {
            goto LABEL_112;
          }
          goto LABEL_51;
        case 4u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOVLFFrameDetailsIsValid(a1)) {
            goto LABEL_51;
          }
          goto LABEL_112;
        case 5u:
          if (v16 == 1) {
            goto LABEL_20;
          }
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_112;
          }
          while (1)
          {
            unint64_t v31 = (unint64_t *)&a1[*v2];
            unint64_t v32 = *v31;
            unint64_t v33 = *(void *)&a1[*v3];
            if (*v31 >= v33) {
              break;
            }
            uint64_t v34 = *v4;
            if (a1[v34]) {
              break;
            }
            if (v32 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v35 = v32 + 8, v35 > v33)) {
              a1[v34] = 1;
            }
            else {
              *unint64_t v31 = v35;
            }
          }
          goto LABEL_51;
        case 6u:
        case 7u:
        case 8u:
          if (v16 == 1) {
            goto LABEL_20;
          }
          goto LABEL_112;
        case 9u:
          if (v16 != 1)
          {
            if (v16 != 2 || !PBReaderPlaceMark()) {
              goto LABEL_112;
            }
            while (1)
            {
              BOOL v36 = (unint64_t *)&a1[*v2];
              unint64_t v37 = *v36;
              unint64_t v38 = *(void *)&a1[*v3];
              if (*v36 >= v38) {
                break;
              }
              uint64_t v39 = *v4;
              if (a1[v39]) {
                break;
              }
              if (v37 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v40 = v37 + 8, v40 > v38)) {
                a1[v39] = 1;
              }
              else {
                *BOOL v36 = v40;
              }
            }
            goto LABEL_51;
          }
LABEL_20:
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_96;
          }
          unint64_t v20 = v19 + 8;
          goto LABEL_22;
        case 0xAu:
          if (v16 == 5)
          {
            uint64_t v18 = *v2;
            unint64_t v57 = *(void *)&a1[v18];
            if (v57 > 0xFFFFFFFFFFFFFFFBLL) {
              goto LABEL_96;
            }
            unint64_t v20 = v57 + 4;
LABEL_22:
            if (v20 > *(void *)&a1[*v3]) {
LABEL_96:
            }
              a1[v14] = 1;
            else {
              *(void *)&a1[v18] = v20;
            }
          }
          else
          {
            if (v16 != 2 || !PBReaderPlaceMark())
            {
LABEL_112:
              PBReaderRecallMark();
              return 0;
            }
            while (1)
            {
              uint64_t v41 = (unint64_t *)&a1[*v2];
              unint64_t v42 = *v41;
              unint64_t v43 = *(void *)&a1[*v3];
              if (*v41 >= v43) {
                break;
              }
              uint64_t v44 = *v4;
              if (a1[v44]) {
                break;
              }
              if (v42 > 0xFFFFFFFFFFFFFFFBLL || (unint64_t v45 = v42 + 4, v45 > v43)) {
                a1[v44] = 1;
              }
              else {
                *uint64_t v41 = v45;
              }
            }
LABEL_51:
            PBReaderRecallMark();
          }
LABEL_97:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_110;
          }
          break;
        case 0xBu:
          if (v16 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_112;
            }
            while (1)
            {
              uint64_t v46 = *v2;
              uint64_t v47 = *(void *)&a1[v46];
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)&a1[*v3]) {
                break;
              }
              int v49 = *(char *)(*(void *)&a1[*v5] + v47);
              *(void *)&a1[v46] = v48;
              if (v49 < 0)
              {
                unsigned int v50 = v16++;
                if (v50 <= 8) {
                  continue;
                }
              }
              goto LABEL_97;
            }
LABEL_94:
            uint64_t v14 = *v4;
            goto LABEL_96;
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_112;
          }
LABEL_100:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v58 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v59 = *v2;
              uint64_t v60 = *(void *)&a1[v59];
              unint64_t v61 = v60 + 1;
              if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                break;
              }
              int v62 = *(char *)(*(void *)&a1[*v5] + v60);
              *(void *)&a1[v59] = v61;
              if (v62 < 0)
              {
                BOOL v13 = v58++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_100;
            }
            a1[*v4] = 1;
          }
          goto LABEL_51;
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_112;
          }
          unsigned int v51 = 0;
          while (1)
          {
            uint64_t v52 = *v2;
            uint64_t v53 = *(void *)&a1[v52];
            unint64_t v54 = v53 + 1;
            if (v53 == -1 || v54 > *(void *)&a1[*v3]) {
              goto LABEL_94;
            }
            int v55 = *(char *)(*(void *)&a1[*v5] + v53);
            *(void *)&a1[v52] = v54;
            if (v55 < 0 && v51++ <= 8) {
              continue;
            }
            goto LABEL_97;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          goto LABEL_97;
      }
    }
  }
LABEL_110:
  BOOL v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEOVLFLocationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOLatLngIsValid(a1)) {
            goto LABEL_32;
          }
          goto LABEL_54;
        case 2u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOECEFCoordinateIsValid(a1)) {
            goto LABEL_54;
          }
LABEL_32:
          PBReaderRecallMark();
          continue;
        case 3u:
        case 4u:
        case 5u:
          if (v16 != 1) {
            goto LABEL_54;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_50;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_50;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v27 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_49:
      uint64_t v14 = *v4;
LABEL_50:
      a1[v14] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOVLFARFailureTypesIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

void sub_18A2BEE18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgEventVLFUsageIsDirty(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 120));
  __int16 v2 = *(_WORD *)(a1 + 136);
  if ((v2 & 0x3DA0) != 0) {
    return 1;
  }
  if ((v2 & 0x40) != 0)
  {
    if (GEOVLFCrowdsourcingDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 56))) {
      return 1;
    }
    __int16 v2 = *(_WORD *)(a1 + 136);
  }
  if ((v2 & 0x210) != 0) {
    return 1;
  }
  if ((v2 & 0x800) == 0) {
    return 0;
  }
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v5 = *(id *)(a1 + 96);
  uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v6 = *(void *)v9;
    while (2)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        if (*(void *)v9 != v6) {
          objc_enumerationMutation(v5);
        }
        if (GEOVLFLocalizationDetailsIsDirty(*(os_unfair_lock_s **)(*((void *)&v8 + 1) + 8 * i)))
        {
          uint64_t v3 = 1;
          goto LABEL_20;
        }
      }
      uint64_t v3 = [v5 countByEnumeratingWithState:&v8 objects:v12 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
LABEL_20:

  return v3;
}

uint64_t GEOVLFPositionContextClassificationWriteTo(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 20);
  if ((v2 & 4) == 0)
  {
    if ((*(unsigned char *)(result + 20) & 1) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    result = PBDataWriterWriteDoubleField();
    if ((*(unsigned char *)(v1 + 20) & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  result = PBDataWriterWriteInt32Field();
  char v2 = *(unsigned char *)(v1 + 20);
  if (v2) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v2 & 2) == 0) {
    return result;
  }
LABEL_7:

  return PBDataWriterWriteDoubleField();
}

os_unfair_lock_s *GEOLogMsgEventVLFUsageIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgEventVLFUsageIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 30);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A2BF99C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFPositionContextClassificationEquals(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL GEOLogMsgEventWifiConnectionQualityProbeReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    long long v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      long long v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          int v20 = objc_alloc_init(GEOWiFiConnectionQuality);
          if (!GEOWiFiConnectionQualityReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          BOOL v21 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_18A2C073C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgEventWifiConnectionQualityProbeReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgEventWifiConnectionQualityProbeReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2C07A0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C0B88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 480));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 476);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 472)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = *(void *)(a1 + 488);
  uint64x2_t v12 = (uint64x2_t)vdupq_n_s64(v11);
  v13.i64[0] = 0x100000001;
  v13.i64[1] = 0x100000001;
  uint32x4_t v14 = (uint32x4_t)vdupq_n_s32(v11);
  *(int32x2_t *)v14.i8 = vadd_s32(vadd_s32(vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFE8FFFFFFFFLL), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A641DE0)), (int8x8_t)0x100000001)), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A641E00)),
                                                (int8x8_t)0x100000001),
                                   (int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFE2FFFFFFF0), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A641E10)), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 41, v11 >> 19), (int8x8_t)0x100000001)))), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A6323B0)),
                                              (int8x8_t)0x100000001),
                                 vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFEAFFFFFFFELL), (int8x8_t)0x100000001), vadd_s32((int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 49, v11 >> 11), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 37, v11 >> 7), (int8x8_t)0x100000001)))), vadd_s32(vadd_s32((int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A641E20)), (int8x8_t)0x100000001),
                                   (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 9, v11 >> 54), (int8x8_t)0x100000001)), vadd_s32((int32x2_t)vand_s8((int8x8_t)vshl_u32(*(uint32x2_t *)v14.i8, (uint32x2_t)0xFFFFFFECFFFFFFE9), (int8x8_t)0x100000001), (int32x2_t)vand_s8((int8x8_t)__PAIR64__(v11 >> 33, v11 >> 25), (int8x8_t)0x100000001))))), vadd_s32((int32x2_t)__PAIR64__((v11 >> 17) & 1, vaddvq_s32(vaddq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32(
                                                                          (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A641DA0), (int32x4_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A641D90)), v13), vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A641DB0), v13), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A641DC0), v13))), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v14, (uint32x4_t)xmmword_18A641DD0), v13)))), (int32x2_t)vand_s8((int8x8_t)vmovn_s64((int64x2_t)vshlq_u64(v12, (uint64x2_t)xmmword_18A641DF0)), (int8x8_t)0x100000001)));
  unsigned int v15 = vadd_s32(*(int32x2_t *)v14.i8, vdup_lane_s32(*(int32x2_t *)v14.i8, 1)).u32[0]
      + ((v11 >> 21) & 1)
      + ((v11 >> 8) & 1)
      + ((v11 >> 55) & 1)
      + ((v11 >> 15) & 1)
      + (BYTE4(v11) & 1)
      + ((v11 >> 46) & 1)
      + ((v11 >> 29) & 1)
      + ((v11 >> 39) & 1)
      + ((v11 >> 36) & 1)
      + (v11 >> 31);
  while (2)
  {
    uint64_t v16 = 1;
    uint64_t v17 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v16 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v18 = v10 | (v15 > 0x2C);
        if ((v18 | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        BOOL v20 = v18;
        char v61 = (v19 == 0) | v18;
        BOOL v21 = (int *)MEMORY[0x1E4F940E8];
        BOOL v22 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
        BOOL v60 = v18;
        break;
      default:
        ++v15;
LABEL_6:
        uint64_t v16 = v9;
        uint64_t v17 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v16;
        uint64_t v10 = v17;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v21) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v22)) {
      goto LABEL_413;
    }
    char v24 = 0;
    unsigned int v25 = 0;
    unint64_t v26 = 0;
    while (1)
    {
      uint64_t v27 = *v21;
      uint64_t v28 = *(void *)(v3 + v27);
      unint64_t v29 = v28 + 1;
      if (v28 == -1 || v29 > *(void *)(v3 + *v6)) {
        break;
      }
      char v30 = *(unsigned char *)(*(void *)(v3 + *v23) + v28);
      *(void *)(v3 + v27) = v29;
      v26 |= (unint64_t)(v30 & 0x7F) << v24;
      if ((v30 & 0x80) == 0) {
        goto LABEL_23;
      }
      v24 += 7;
      BOOL v31 = v25++ >= 9;
      if (v31)
      {
        unint64_t v26 = 0;
        int v32 = *(unsigned __int8 *)(v3 + *v22);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v22) = 1;
LABEL_23:
    int v32 = *(unsigned __int8 *)(v3 + *v22);
    if (*(unsigned char *)(v3 + *v22)) {
      unint64_t v26 = 0;
    }
LABEL_25:
    if (v32 || (v26 & 7) == 4)
    {
LABEL_413:
      if (v20)
      {
        *(void *)(a1 + 488) |= 0x3FFFFFFFFFFFFFEuLL;
      }
      else if (v19)
      {
        while (1)
        {
          int v56 = *v19++;
          int v55 = v56;
          if (v56 <= 600)
          {
            if (v55 <= 300)
            {
              uint64_t v53 = 0x1000000000000;
              switch(v55)
              {
                case 0:
                  goto LABEL_476;
                case 1:
                  goto LABEL_470;
                case 2:
                  uint64_t v53 = 0x200000000000000;
                  goto LABEL_470;
                case 3:
                  uint64_t v53 = 2;
                  goto LABEL_470;
                case 4:
                  uint64_t v53 = 0x80000000000;
                  goto LABEL_470;
                case 5:
                  uint64_t v53 = 0x40000000000;
                  goto LABEL_470;
                case 6:
                  uint64_t v53 = 0x20000000000000;
                  goto LABEL_470;
                case 7:
                  uint64_t v53 = 0x800000000;
                  goto LABEL_470;
                case 8:
                  uint64_t v53 = 0x800000000000;
                  goto LABEL_470;
                case 9:
                  uint64_t v53 = 0x10000;
                  goto LABEL_470;
                case 10:
                  uint64_t v53 = 0x80000;
                  goto LABEL_470;
                case 11:
                  uint64_t v53 = 0x8000000000000;
                  goto LABEL_470;
                case 12:
                  uint64_t v53 = 4;
                  goto LABEL_470;
                case 13:
                  uint64_t v53 = 0x200000000000;
                  goto LABEL_470;
                default:
                  if (v55 != 201) {
                    continue;
                  }
                  uint64_t v53 = 4096;
                  goto LABEL_470;
              }
            }
            int v54 = v55 - 501;
            switch(v54)
            {
              case 0:
                uint64_t v53 = 0x8000000;
                break;
              case 1:
                uint64_t v53 = 0x4000000;
                break;
              case 2:
                uint64_t v53 = 0x40000000000000;
                break;
              case 3:
                uint64_t v53 = 0x800000;
                break;
              case 4:
                uint64_t v53 = 0x2000000;
                break;
              case 5:
                uint64_t v53 = 0x1000000;
                break;
              default:
                if (v54 != 301) {
                  continue;
                }
                uint64_t v53 = 8;
                break;
            }
          }
          else
          {
            int v57 = v55 - 702;
            switch(v57)
            {
              case 0:
                uint64_t v53 = 0x10000000000;
                break;
              case 1:
                uint64_t v53 = 0x100000000000;
                break;
              case 2:
              case 9:
              case 10:
                continue;
              case 3:
                uint64_t v53 = 0x40000000;
                break;
              case 4:
                uint64_t v53 = 0x10000000000000;
                break;
              case 5:
                uint64_t v53 = 0x20000000000;
                break;
              case 6:
                uint64_t v53 = 0x400000000;
                break;
              case 7:
                uint64_t v53 = 0x400000;
                break;
              case 8:
                uint64_t v53 = 0x2000000000000;
                break;
              case 11:
                uint64_t v53 = 0x2000000000;
                break;
              case 12:
                uint64_t v53 = 0x4000000000000;
                break;
              case 13:
                uint64_t v53 = 512;
                break;
              case 14:
                uint64_t v53 = 0x100000;
                break;
              case 15:
                uint64_t v53 = 0x200000000;
                break;
              case 16:
                uint64_t v53 = 0x200000;
                break;
              case 17:
                uint64_t v53 = 256;
                break;
              case 18:
                uint64_t v53 = 0x80000000000000;
                break;
              case 19:
                uint64_t v53 = 0x8000;
                break;
              case 20:
                uint64_t v53 = 0x100000000;
                break;
              case 21:
                uint64_t v53 = 0x400000000000;
                break;
              case 22:
                uint64_t v53 = 0x10000000;
                break;
              case 23:
                uint64_t v53 = 0x80000000;
                break;
              case 24:
                uint64_t v53 = 16;
                break;
              case 25:
                uint64_t v53 = 64;
                break;
              case 26:
                uint64_t v53 = 32;
                break;
              case 27:
                uint64_t v53 = 0x20000000;
                break;
              case 28:
                uint64_t v53 = 0x8000000000;
                break;
              case 29:
                uint64_t v53 = 0x1000000000;
                break;
              default:
                if (v57 == 601)
                {
                  uint64_t v53 = 0x100000000000000;
                }
                else
                {
                  if (v57 != 602) {
                    continue;
                  }
                  uint64_t v53 = 0x20000;
                }
                break;
            }
          }
LABEL_470:
          *(void *)(a1 + 488) |= v53;
        }
      }
LABEL_476:
      unint64_t v3 = *(unsigned char *)(v3 + *v22) == 0;
      if (!v20) {
        return v3;
      }
      goto LABEL_477;
    }
    unint64_t v34 = v26 >> 3;
    BOOL v35 = v20;
    if ((v61 & 1) == 0)
    {
      BOOL v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    if ((int)v34 <= 600)
    {
      if ((int)v34 > 300)
      {
        switch((int)v34)
        {
          case 501:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 491) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 36;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapView);
            if (!GEOLogMsgStateMapViewReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 224;
            goto LABEL_304;
          case 502:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 491) & 4) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 37;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapViewLocation);
            if (!GEOLogMsgStateMapViewLocationReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 216;
            goto LABEL_304;
          case 503:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 494) & 0x40) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 9;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateTransit);
            if (!GEOLogMsgStateTransitReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 440;
            goto LABEL_304;
          case 504:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 490) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 40;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapSettings);
            if (!GEOLogMsgStateMapSettingsReadAllFrom(v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 192;
            goto LABEL_304;
          case 505:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 491) & 2) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 38;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapUI);
            if (!GEOLogMsgStateMapUIReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 208;
            goto LABEL_304;
          case 506:
            if (!v35) {
              goto LABEL_305;
            }
            if (*(unsigned char *)(a1 + 491))
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 39;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapUIShown);
            if (!GEOLogMsgStateMapUIShownReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 200;
            break;
          default:
            if (v34 != 301) {
              goto LABEL_74;
            }
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 488) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 60;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateApplicationIdentifier);
            if (!GEOLogMsgStateApplicationIdentifierReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 32;
            goto LABEL_304;
        }
      }
      else
      {
        switch((int)v34)
        {
          case 1:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 494) & 1) == 0)
            {
              uint64_t v40 = PBReaderReadString();
              uint64_t v41 = *(void **)(a1 + 392);
              *(void *)(a1 + 392) = v40;

              --v7;
              goto LABEL_412;
            }
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_480;
            }
            uint64_t v52 = *(void *)(a1 + 488) << 15;
            goto LABEL_411;
          case 2:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 495) & 2) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 6;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateUser);
            if (!GEOLogMsgStateUserReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 464;
            goto LABEL_304;
          case 3:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 488) & 2) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 62;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateAccount);
            if (!GEOLogMsgStateAccountReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 16;
            goto LABEL_304;
          case 4:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 493) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 20;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateRAP);
            if (!GEOLogMsgStateRAPReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 352;
            goto LABEL_304;
          case 5:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 493) & 4) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 21;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStatePlaceSummaryLayout);
            if (!GEOLogMsgStatePlaceSummaryLayoutReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 344;
            goto LABEL_304;
          case 6:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 494) & 0x20) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 10;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateTransitStep);
            if (!GEOLogMsgStateTransitStepReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 432;
            goto LABEL_304;
          case 7:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 492) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 28;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateNearbyTransit);
            if (!GEOLogMsgStateNearbyTransitReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 288;
            goto LABEL_304;
          case 8:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 493) & 0x80) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 16;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateSearchResults);
            if (!GEOLogMsgStateSearchResultsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 384;
            goto LABEL_304;
          case 9:
            if (!v35) {
              goto LABEL_305;
            }
            if (*(unsigned char *)(a1 + 490))
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 47;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateElementImpression);
            if (!GEOLogMsgStateElementImpressionReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 136;
            goto LABEL_304;
          case 10:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 490) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 44;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateImpressionObject);
            if (!GEOLogMsgStateImpressionObjectReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 160;
            goto LABEL_304;
          case 11:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 494) & 8) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 12;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateTapEvent);
            if (!GEOLogMsgStateTapEventReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 416;
            goto LABEL_304;
          case 12:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 488) & 4) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 61;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateActionButtonDetails);
            if (!GEOLogMsgStateActionButtonDetailsReadAllFrom(v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 24;
            goto LABEL_304;
          case 13:
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 493) & 0x20) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 18;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateRoutingWaypoints);
            if (!GEOLogMsgStateRoutingWaypointsReadAllFrom((uint64_t)v42, (void *)v3)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 368;
            break;
          default:
            if (v34 == 99)
            {
              if ((v8 & 1) == 0) {
                goto LABEL_305;
              }
              char v44 = 0;
              unsigned int v45 = 0;
              uint64_t v46 = 0;
              *(void *)(a1 + 488) |= 1uLL;
              while (1)
              {
                uint64_t v47 = *v21;
                uint64_t v48 = *(void *)(v3 + v47);
                unint64_t v49 = v48 + 1;
                if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v50 = *(unsigned char *)(*(void *)(v3 + *v23) + v48);
                *(void *)(v3 + v47) = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if ((v50 & 0x80) == 0) {
                  goto LABEL_308;
                }
                v44 += 7;
                BOOL v31 = v45++ >= 9;
                if (v31)
                {
                  LODWORD(v46) = 0;
                  goto LABEL_310;
                }
              }
              *(unsigned char *)(v3 + *v22) = 1;
LABEL_308:
              if (*(unsigned char *)(v3 + *v22)) {
                LODWORD(v46) = 0;
              }
LABEL_310:
              *(_DWORD *)(a1 + 484) = v46;
              goto LABEL_412;
            }
            if (v34 != 201) {
              goto LABEL_74;
            }
            if (!v35) {
              goto LABEL_305;
            }
            if ((*(unsigned char *)(a1 + 489) & 0x10) != 0)
            {
              if ((PBReaderSkipValueWithTag() & 1) == 0) {
                goto LABEL_480;
              }
              uint64_t v52 = *(void *)(a1 + 488) << 51;
              goto LABEL_411;
            }
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_480;
            }
            unint64_t v42 = objc_alloc_init(GEOLogMsgStateDeviceIdentifier);
            if (!GEOLogMsgStateDeviceIdentifierReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
              goto LABEL_479;
            }
            PBReaderRecallMark();
            uint64_t v43 = 104;
            goto LABEL_304;
        }
      }
      goto LABEL_304;
    }
    switch((int)v34)
    {
      case 702:
        if (!v35) {
          goto LABEL_305;
        }
        if (*(unsigned char *)(a1 + 493))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 23;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStatePlaceCard);
        if (!GEOLogMsgStatePlaceCardReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 328;
        goto LABEL_304;
      case 703:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 493) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 19;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateRoute);
        if (!GEOLogMsgStateRouteReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 360;
        goto LABEL_304;
      case 704:
      case 711:
      case 712:
        goto LABEL_74;
      case 705:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 491) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 33;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapsServer);
        if (!GEOLogMsgStateMapsServerReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 248;
        goto LABEL_304;
      case 706:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 494) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 11;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateTileSet);
        if (!GEOLogMsgStateTileSetReadAllFrom(v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 424;
        goto LABEL_304;
      case 707:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 493) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 22;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStatePlaceRequest);
        if (!GEOLogMsgStatePlaceRequestReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 336;
        goto LABEL_304;
      case 708:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 492) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 29;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateNavigation);
        if (!GEOLogMsgStateNavigationReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 280;
        goto LABEL_304;
      case 709:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 490) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 41;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapRestore);
        if (!GEOLogMsgStateMapRestoreReadAllFrom(v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 184;
        goto LABEL_304;
      case 710:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 494) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 14;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateSuggestions);
        if (!GEOLogMsgStateSuggestionsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 400;
        goto LABEL_304;
      case 713:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 492) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 26;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateOffline);
        if (!GEOLogMsgStateOfflineReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 304;
        goto LABEL_304;
      case 714:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 494) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 13;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateSummaryLookAroundLog);
        if (!GEOLogMsgStateSummaryLookAroundLogReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 408;
        goto LABEL_304;
      case 715:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 489) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 54;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateDetailLookAroundLog);
        if (!GEOLogMsgStateDetailLookAroundLogReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 80;
        goto LABEL_304;
      case 716:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 490) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 43;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateLookAroundView);
        if (!GEOLogMsgStateLookAroundViewReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 168;
        goto LABEL_304;
      case 717:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 492) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 30;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMuninResource);
        if (!GEOLogMsgStateMuninResourceReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 272;
        goto LABEL_304;
      case 718:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 490) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 42;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapLaunch);
        if (!GEOLogMsgStateMapLaunchReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 176;
        goto LABEL_304;
      case 719:
        if (!v35) {
          goto LABEL_305;
        }
        if (*(unsigned char *)(a1 + 489))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 55;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateCuratedCollection);
        if (!GEOLogMsgStateCuratedCollectionReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 72;
        goto LABEL_304;
      case 720:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 494) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 8;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateUGCPhoto);
        if (!GEOLogMsgStateUGCPhotoReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 448;
        goto LABEL_304;
      case 721:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 489) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 48;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateDirectionsDetail);
        if (!GEOLogMsgStateDirectionsDetailReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 128;
        goto LABEL_304;
      case 722:
        if (!v35) {
          goto LABEL_305;
        }
        if (*(unsigned char *)(a1 + 492))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 31;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMarket);
        if (!GEOLogMsgStateMarketReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 264;
        goto LABEL_304;
      case 723:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 493) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 17;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateRoutingSettings);
        if (!GEOLogMsgStateRoutingSettingsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 376;
        goto LABEL_304;
      case 724:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 491) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 35;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapsFeatures);
        if (!GEOLogMsgStateMapsFeaturesReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 232;
        goto LABEL_304;
      case 725:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 491) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 32;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapsUserSettings);
        if (!GEOLogMsgStateMapsUserSettingsReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 256;
        goto LABEL_304;
      case 726:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 488) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 59;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateARPPhotoSubmission);
        if (!GEOLogMsgStateARPPhotoSubmissionReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 40;
        goto LABEL_304;
      case 727:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 488) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 57;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateARPRatingSubmission);
        if (!GEOLogMsgStateARPRatingSubmissionReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 56;
        goto LABEL_304;
      case 728:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 488) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 58;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateARPRatingPhotoSubmission);
        if (!GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 48;
        goto LABEL_304;
      case 729:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 491) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 34;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateMapsPlaceIds);
        if (!GEOLogMsgStateMapsPlaceIdsReadAllFrom(v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 240;
        goto LABEL_304;
      case 730:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 492) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 24;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStatePlaceCardRap);
        if (!GEOLogMsgStatePlaceCardRapReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 320;
        goto LABEL_304;
      case 731:
        if (!v35) {
          goto LABEL_305;
        }
        if ((*(unsigned char *)(a1 + 492) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 27;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateOfflineDownload);
        if (!GEOLogMsgStateOfflineDownloadReadAllFrom((uint64_t)v42, (void *)v3)) {
          goto LABEL_479;
        }
        PBReaderRecallMark();
        uint64_t v43 = 296;
        goto LABEL_304;
      default:
        if (v34 != 601)
        {
          if (v34 != 602)
          {
LABEL_74:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_480;
            }
            goto LABEL_412;
          }
          if (!v35) {
            goto LABEL_305;
          }
          if ((*(unsigned char *)(a1 + 490) & 2) != 0)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_480;
            }
            uint64_t v52 = *(void *)(a1 + 488) << 46;
LABEL_411:
            v7 += v52 >> 63;
            goto LABEL_412;
          }
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_480;
          }
          unint64_t v42 = objc_alloc_init(GEOLogMsgStateExperiments);
          if (!GEOLogMsgStateExperimentsReadAllFrom((uint64_t)v42, (void *)v3, v9 & 1)) {
            goto LABEL_479;
          }
          PBReaderRecallMark();
          uint64_t v43 = 144;
LABEL_304:
          unsigned int v51 = *(void **)(a1 + v43);
          *(void *)(a1 + v43) = v42;

          --v7;
          BOOL v20 = v60;
LABEL_412:
          BOOL v22 = (int *)MEMORY[0x1E4F940C8];
          uint64_t v23 = (int *)MEMORY[0x1E4F940B8];
          if (!v20 && v7 == 0) {
            goto LABEL_413;
          }
          continue;
        }
        if (!v35)
        {
LABEL_305:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          goto LABEL_412;
        }
        if (*(unsigned char *)(a1 + 495))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_480;
          }
          uint64_t v52 = *(void *)(a1 + 488) << 7;
          goto LABEL_411;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_480;
        }
        unint64_t v42 = objc_alloc_init(GEOLogMsgStateUserSession);
        if (GEOLogMsgStateUserSessionReadAllFrom((uint64_t)v42, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v43 = 456;
          goto LABEL_304;
        }
LABEL_479:

        BOOL v20 = v60;
LABEL_480:
        unint64_t v3 = 0;
        *(void *)(a1 + 488) |= 0x3FFFFFFFFFFFFFEuLL;
        if (v20)
        {
LABEL_477:
          unsigned int v58 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = 0;
        }
        return v3;
    }
  }
}

void sub_18A2C376C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C38E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C3A5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C3BD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C3D48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C3F30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C40A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C4220(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C4390(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C4508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C5584(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C576C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C58E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C5ACC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C5C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C5E68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C5FE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C6158(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C62D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C6444(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C65BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C6734(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C68E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C6A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C6BFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C6D74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C6EEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7064(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C71D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7388(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7678(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C77EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7960(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7AD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7C4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7DC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2C7F3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 464) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  [*(id *)(a1 + 352) readAll:1];
  [*(id *)(a1 + 344) readAll:1];
  [*(id *)(a1 + 432) readAll:1];
  [*(id *)(a1 + 288) readAll:1];
  [*(id *)(a1 + 384) readAll:1];
  [*(id *)(a1 + 136) readAll:1];
  [*(id *)(a1 + 160) readAll:1];
  [*(id *)(a1 + 416) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 368) readAll:1];
  [*(id *)(a1 + 104) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 112) readAll:1];
  [*(id *)(a1 + 96) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  [*(id *)(a1 + 312) readAll:1];
  [*(id *)(a1 + 152) readAll:1];
  [*(id *)(a1 + 120) readAll:1];
  [*(id *)(a1 + 224) readAll:1];
  [*(id *)(a1 + 216) readAll:1];
  [*(id *)(a1 + 440) readAll:1];
  [*(id *)(a1 + 192) readAll:1];
  [*(id *)(a1 + 208) readAll:1];
  [*(id *)(a1 + 200) readAll:1];
  [*(id *)(a1 + 456) readAll:1];
  [*(id *)(a1 + 144) readAll:1];
  [*(id *)(a1 + 328) readAll:1];
  [*(id *)(a1 + 360) readAll:1];
  [*(id *)(a1 + 248) readAll:1];
  [*(id *)(a1 + 424) readAll:1];
  [*(id *)(a1 + 336) readAll:1];
  [*(id *)(a1 + 280) readAll:1];
  [*(id *)(a1 + 184) readAll:1];
  [*(id *)(a1 + 400) readAll:1];
  [*(id *)(a1 + 304) readAll:1];
  [*(id *)(a1 + 408) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 168) readAll:1];
  [*(id *)(a1 + 272) readAll:1];
  [*(id *)(a1 + 176) readAll:1];
  [*(id *)(a1 + 72) readAll:1];
  [*(id *)(a1 + 448) readAll:1];
  [*(id *)(a1 + 128) readAll:1];
  [*(id *)(a1 + 264) readAll:1];
  [*(id *)(a1 + 376) readAll:1];
  [*(id *)(a1 + 232) readAll:1];
  [*(id *)(a1 + 256) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 240) readAll:1];
  [*(id *)(a1 + 320) readAll:1];
  char v2 = *(void **)(a1 + 296);

  return [v2 readAll:1];
}

unint64_t GEOLogMsgStateReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 476))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 480));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 472) = [v8 position];
  *(_DWORD *)(a1 + 476) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStateReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStateReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStateCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 480));
  return Specified;
}

void sub_18A2CC25C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2CC2C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateUserIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 0xAu:
          if (v16 != 1) {
            goto LABEL_53;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_49;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_49;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 5u:
          if (v16 == 2) {
            goto LABEL_26;
          }
          goto LABEL_53;
        case 6u:
          if (v16 == 2) {
            goto LABEL_26;
          }
          goto LABEL_53;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 8u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v27 = 0;
          break;
        default:
LABEL_26:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v26 = v27++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_48:
      uint64_t v14 = *v4;
LABEL_49:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgStateRAPIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v24 = 0;
          break;
        case 3u:
          if (v16 == 2) {
            goto LABEL_49;
          }
          goto LABEL_55;
        case 4u:
          if (v16 == 2) {
            goto LABEL_49;
          }
          goto LABEL_55;
        case 5u:
          if (v16 != 1) {
            goto LABEL_55;
          }
          uint64_t v29 = *v2;
          unint64_t v30 = *(void *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_45;
          }
          unint64_t v31 = v30 + 8;
          if (v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          *(void *)&a1[v29] = v31;
          continue;
        case 6u:
          if (v16 == 2) {
            goto LABEL_49;
          }
          goto LABEL_55;
        case 7u:
          if (v16 != 2) {
            goto LABEL_55;
          }
LABEL_49:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_55:
          BOOL v32 = 0;
          goto LABEL_54;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_55;
          }
          continue;
      }
      while (1)
      {
        uint64_t v25 = *v2;
        uint64_t v26 = *(void *)&a1[v25];
        unint64_t v27 = v26 + 1;
        if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
          break;
        }
        int v28 = *(char *)(*(void *)&a1[*v5] + v26);
        *(void *)&a1[v25] = v27;
        if (v28 < 0)
        {
          BOOL v23 = v24++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_37:
      uint64_t v14 = *v4;
LABEL_45:
      a1[v14] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
LABEL_54:
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgStatePlaceSummaryLayoutIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_50;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEODynamicContextHyperlinkDetailsIsValid(a1))
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
        goto LABEL_35;
      }
      if (v17 == 2) {
        break;
      }
      if (v17 == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_52;
          }
LABEL_39:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v23 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v24 = *v2;
              uint64_t v25 = *(void *)&a1[v24];
              unint64_t v26 = v25 + 1;
              if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
                break;
              }
              int v27 = *(char *)(*(void *)&a1[*v5] + v25);
              *(void *)&a1[v24] = v26;
              if (v27 < 0)
              {
                BOOL v13 = v23++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_39;
            }
            a1[*v4] = 1;
          }
LABEL_35:
          PBReaderRecallMark();
          goto LABEL_49;
        }
        if ((v8 & 7) != 0) {
          goto LABEL_52;
        }
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            unsigned int v22 = v15++;
            if (v22 <= 8) {
              continue;
            }
          }
          goto LABEL_49;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
    if (v15 != 2 || !PBReaderPlaceMark() || !GEOTrailingEntityActionDetailsIsValid(a1)) {
      goto LABEL_52;
    }
    goto LABEL_35;
  }
LABEL_50:
  BOOL v28 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateTransitStepIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgStateNearbyTransitIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEONearbyTransitGroupIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateSearchResultsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_39;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v18 = 0;
        while (1)
        {
          uint64_t v19 = *v2;
          uint64_t v20 = *(void *)&a1[v19];
          unint64_t v21 = v20 + 1;
          if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
            break;
          }
          int v22 = *(char *)(*(void *)&a1[*v5] + v20);
          *(void *)&a1[v19] = v21;
          if (v22 < 0 && v18++ <= 8) {
            continue;
          }
          goto LABEL_38;
        }
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if (v17 != 1) {
        goto LABEL_35;
      }
      if (v15 != 2 || !PBReaderPlaceMark() || !GEOSearchResultIsValid(a1))
      {
LABEL_41:
        PBReaderRecallMark();
        return 0;
      }
      PBReaderRecallMark();
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if (v15 != 2) {
      goto LABEL_41;
    }
LABEL_35:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_41;
    }
    goto LABEL_38;
  }
LABEL_39:
  BOOL v24 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v24;
}

BOOL GEOLogMsgStateElementImpressionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOElementDetailsIsValid(a1)) {
            goto LABEL_26;
          }
          goto LABEL_66;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOImpressionObjectIdIsValid(a1)) {
            goto LABEL_66;
          }
LABEL_26:
          PBReaderRecallMark();
          continue;
        case 3u:
          if (v15 == 2) {
            goto LABEL_28;
          }
          goto LABEL_66;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v33 = 0;
          break;
        default:
LABEL_28:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_66:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v34 = *v2;
        uint64_t v35 = *(void *)&a1[v34];
        unint64_t v36 = v35 + 1;
        if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
          break;
        }
        int v37 = *(char *)(*(void *)&a1[*v5] + v35);
        *(void *)&a1[v34] = v36;
        if (v37 < 0)
        {
          BOOL v22 = v33++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v38 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v38;
}

BOOL GEOLogMsgStateImpressionObjectIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOImpressionObjectIdIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateTapEventIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOSearchResultIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateActionButtonDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOActionButtonDetailIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateRoutingWaypointsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateDeviceIdentifierIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_52;
          }
          goto LABEL_22;
        case 2u:
          if (v15 == 2) {
            goto LABEL_22;
          }
          goto LABEL_52;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_22:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_52:
          BOOL v33 = 0;
          goto LABEL_51;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_49;
      }
LABEL_48:
      a1[*v4] = 1;
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_51:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateApplicationIdentifierIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_48;
          }
          goto LABEL_34;
        case 2u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_48;
        case 3u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_48;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_44;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_45;
          }
        case 5u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_48;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v23 = 0;
          break;
        default:
LABEL_34:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_48:
          BOOL v28 = 0;
          goto LABEL_47;
      }
      while (1)
      {
        uint64_t v24 = *v2;
        uint64_t v25 = *(void *)&a1[v24];
        unint64_t v26 = v25 + 1;
        if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
          break;
        }
        int v27 = *(char *)(*(void *)&a1[*v5] + v25);
        *(void *)&a1[v24] = v26;
        if (v27 < 0)
        {
          BOOL v22 = v23++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_45;
      }
LABEL_44:
      a1[*v4] = 1;
LABEL_45:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v28 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v28;
}

BOOL GEOLogMsgStateDeviceBaseIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateDeviceLocaleIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_30;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_30;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 == 2)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
LABEL_26:
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_32;
        }
        goto LABEL_29;
      }
      if (v17 == 1)
      {
        if (v15 != 2) {
          goto LABEL_32;
        }
        goto LABEL_26;
      }
      if (!PBReaderSkipValueWithTag())
      {
LABEL_32:
        BOOL v18 = 0;
        goto LABEL_31;
      }
LABEL_29:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_30;
      }
    }
    if (v15 != 2) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_30:
  BOOL v18 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v18;
}

BOOL GEOLogMsgStateCarPlayIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOCarInfoIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStatePairedDeviceIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_49;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_50;
          }
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDeviceIdentifierIsValid(a1)) {
            goto LABEL_53;
          }
          PBReaderRecallMark();
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_53;
          }
          unsigned int v28 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_53:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_50;
      }
LABEL_49:
      a1[*v4] = 1;
LABEL_50:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateExtensionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgStateMapViewIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOMapRegionIsValid(a1)) {
            goto LABEL_74;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
        case 4u:
        case 5u:
          if (v16 != 1) {
            goto LABEL_74;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_70;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_70;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_71;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_74;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_74:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v26 = v42++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_71;
      }
LABEL_69:
      uint64_t v14 = *v4;
LABEL_70:
      a1[v14] = 1;
LABEL_71:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgStateMapViewLocationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTouristInfoIsValid(a1))
        {
LABEL_46:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else
      {
        if (v17 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_46;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_46;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v29 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v29;
}

BOOL GEOLogMsgStateTransitIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOLogMsgStateMapUIIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOMultiTabsStateIsValid(a1)) {
            goto LABEL_69;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_65;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_66;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_69;
          }
          unsigned int v38 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_69:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_66;
      }
LABEL_65:
      a1[*v4] = 1;
LABEL_66:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v43;
}

BOOL GEOLogMsgStateUserSessionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
        case 4u:
        case 9u:
        case 0xAu:
        case 0xDu:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOSessionIDIsValid(a1)) {
            goto LABEL_78;
          }
          goto LABEL_22;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v21 = 0;
          while (1)
          {
            uint64_t v22 = *v2;
            uint64_t v23 = *(void *)&a1[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v25 = *(char *)(*(void *)&a1[*v5] + v23);
            *(void *)&a1[v22] = v24;
            if (v25 < 0)
            {
              BOOL v26 = v21++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 3u:
        case 5u:
        case 8u:
        case 0xBu:
          if (v16 != 1) {
            goto LABEL_78;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_74;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_74;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 6u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocalTimeIsValid(a1)) {
            goto LABEL_78;
          }
LABEL_22:
          PBReaderRecallMark();
          continue;
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v26 = v27++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v26 = v32++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 0xEu:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_73;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v26 = v37++ > 8;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_75;
          }
        case 0xFu:
          if ((v8 & 7) != 0) {
            goto LABEL_78;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_78:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v26 = v42++ > 8;
          if (!v26) {
            continue;
          }
        }
        goto LABEL_75;
      }
LABEL_73:
      uint64_t v14 = *v4;
LABEL_74:
      a1[v14] = 1;
LABEL_75:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgStateExperimentsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOABExperimentAssignmentIsValid(a1)) {
            goto LABEL_36;
          }
          goto LABEL_39;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOABClientConfigIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_36;
        case 3u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDDatasetABStatusIsValid(a1)) {
            goto LABEL_39;
          }
          goto LABEL_36;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAbAssignInfoIsValid(a1)) {
            goto LABEL_39;
          }
LABEL_36:
          PBReaderRecallMark();
          goto LABEL_37;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_39:
            PBReaderRecallMark();
            return 0;
          }
LABEL_37:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          break;
      }
    }
  }
LABEL_38:
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStatePlaceCardIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPlaceActionDetailsIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_132;
        case 2u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_132;
            }
            while (1)
            {
              uint64_t v17 = *v2;
              uint64_t v18 = *(void *)&a1[v17];
              unint64_t v19 = v18 + 1;
              if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
                goto LABEL_97;
              }
              int v20 = *(char *)(*(void *)&a1[*v5] + v18);
              *(void *)&a1[v17] = v19;
              if (v20 < 0)
              {
                unsigned int v21 = v15++;
                if (v21 <= 8) {
                  continue;
                }
              }
              goto LABEL_98;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_132;
          }
LABEL_101:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v58 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v59 = *v2;
              uint64_t v60 = *(void *)&a1[v59];
              unint64_t v61 = v60 + 1;
              if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                break;
              }
              int v62 = *(char *)(*(void *)&a1[*v5] + v60);
              *(void *)&a1[v59] = v61;
              if (v62 < 0)
              {
                BOOL v13 = v58++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_101;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 3u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_132;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              uint64_t v23 = *(void *)&a1[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
                goto LABEL_97;
              }
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                unsigned int v26 = v15++;
                if (v26 <= 8) {
                  continue;
                }
              }
              goto LABEL_98;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_132;
          }
LABEL_111:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v63 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v64 = *v2;
              uint64_t v65 = *(void *)&a1[v64];
              unint64_t v66 = v65 + 1;
              if (v65 == -1 || v66 > *(void *)&a1[*v3]) {
                break;
              }
              int v67 = *(char *)(*(void *)&a1[*v5] + v65);
              *(void *)&a1[v64] = v66;
              if (v67 < 0)
              {
                BOOL v13 = v63++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_111;
            }
            a1[*v4] = 1;
          }
          goto LABEL_69;
        case 4u:
          if (v15 == 2) {
            goto LABEL_71;
          }
          goto LABEL_132;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_132;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_97;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v32 = v27++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_98;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_132;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_97;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v32 = v33++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_98;
          }
        case 7u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_132:
              PBReaderRecallMark();
              return 0;
            }
LABEL_121:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v68 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v69 = *v2;
                uint64_t v70 = *(void *)&a1[v69];
                unint64_t v71 = v70 + 1;
                if (v70 == -1 || v71 > *(void *)&a1[*v3]) {
                  break;
                }
                int v72 = *(char *)(*(void *)&a1[*v5] + v70);
                *(void *)&a1[v69] = v71;
                if (v72 < 0)
                {
                  BOOL v13 = v68++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_121;
              }
              a1[*v4] = 1;
            }
LABEL_69:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_132;
            }
            while (1)
            {
              uint64_t v38 = *v2;
              uint64_t v39 = *(void *)&a1[v38];
              unint64_t v40 = v39 + 1;
              if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
                break;
              }
              int v41 = *(char *)(*(void *)&a1[*v5] + v39);
              *(void *)&a1[v38] = v40;
              if (v41 < 0)
              {
                unsigned int v42 = v15++;
                if (v42 <= 8) {
                  continue;
                }
              }
              goto LABEL_98;
            }
LABEL_97:
            a1[*v4] = 1;
          }
LABEL_98:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_130;
          }
          break;
        case 8u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceCardModuleIsValid(a1)) {
            goto LABEL_132;
          }
          goto LABEL_69;
        case 9u:
          if (v15 == 2 && PBReaderPlaceMark() && GEORevealedPlaceCardModuleIsValid(a1)) {
            goto LABEL_69;
          }
          goto LABEL_132;
        case 0xAu:
          if (v15 == 2) {
            goto LABEL_71;
          }
          goto LABEL_132;
        case 0xBu:
          if ((v8 & 7) != 0) {
            goto LABEL_132;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_97;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v32 = v43++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_98;
          }
        case 0xCu:
          if ((v8 & 7) != 0) {
            goto LABEL_132;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_97;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v32 = v48++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_98;
          }
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_132;
          }
          unsigned int v53 = 0;
          while (1)
          {
            uint64_t v54 = *v2;
            uint64_t v55 = *(void *)&a1[v54];
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
              goto LABEL_97;
            }
            int v57 = *(char *)(*(void *)&a1[*v5] + v55);
            *(void *)&a1[v54] = v56;
            if (v57 < 0)
            {
              BOOL v32 = v53++ > 8;
              if (!v32) {
                continue;
              }
            }
            goto LABEL_98;
          }
        default:
LABEL_71:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_132;
          }
          goto LABEL_98;
      }
    }
  }
LABEL_130:
  BOOL v73 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v73;
}

BOOL GEOLogMsgStateRouteIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORouteDetailsIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateMapsServerIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOMapsServerMetadataIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateTileSetIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTileSetInfoIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStatePlaceRequestIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPDPlaceRequestIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateNavigationIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_37;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v24 = 0;
          break;
        case 3u:
          if (v16 != 1) {
            goto LABEL_50;
          }
          uint64_t v29 = *v2;
          unint64_t v30 = *(void *)&a1[v29];
          if (v30 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_41;
          }
          unint64_t v31 = v30 + 8;
          if (v31 > *(void *)&a1[*v3]) {
            goto LABEL_41;
          }
          *(void *)&a1[v29] = v31;
          continue;
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEONavCameraStateIsValid(a1)) {
            goto LABEL_50;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v25 = *v2;
        uint64_t v26 = *(void *)&a1[v25];
        unint64_t v27 = v26 + 1;
        if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
          break;
        }
        int v28 = *(char *)(*(void *)&a1[*v5] + v26);
        *(void *)&a1[v25] = v27;
        if (v28 < 0)
        {
          BOOL v23 = v24++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_37:
      uint64_t v14 = *v4;
LABEL_41:
      a1[v14] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

BOOL GEOLogMsgStateMapRestoreIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOTargetLayoutIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateSuggestionsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_54;
          }
          goto LABEL_20;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOAutoCompleteResultInfoIsValid(a1)) {
            goto LABEL_54;
          }
          PBReaderRecallMark();
          continue;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_50;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_50:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateOfflineIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_73:
          BOOL v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v21 = v42++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgStateSummaryLookAroundLogIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_69;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_70;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_73;
          }
          unsigned int v42 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_73:
          BOOL v47 = 0;
          goto LABEL_72;
      }
      while (1)
      {
        uint64_t v43 = *v2;
        uint64_t v44 = *(void *)&a1[v43];
        unint64_t v45 = v44 + 1;
        if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
          break;
        }
        int v46 = *(char *)(*(void *)&a1[*v5] + v44);
        *(void *)&a1[v43] = v45;
        if (v46 < 0)
        {
          BOOL v21 = v42++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_70;
      }
LABEL_69:
      a1[*v4] = 1;
LABEL_70:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v47 = a1[*v4] == 0;
LABEL_72:
  PBReaderRecallMark();
  return v47;
}

BOOL GEOLogMsgStateDetailLookAroundLogIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 1) {
            goto LABEL_42;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_38;
          }
          unint64_t v20 = v19 + 8;
          if (v20 > *(void *)&a1[*v3]) {
            goto LABEL_38;
          }
          *(void *)&a1[v18] = v20;
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_42;
          }
          unsigned int v21 = 0;
          break;
        case 3u:
        case 4u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLogMsgStateDetailLookAroundLogRecordIsValid(a1)) {
            goto LABEL_42;
          }
          PBReaderRecallMark();
          continue;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_42:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v22 = *v2;
        uint64_t v23 = *(void *)&a1[v22];
        unint64_t v24 = v23 + 1;
        if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
          break;
        }
        int v25 = *(char *)(*(void *)&a1[*v5] + v23);
        *(void *)&a1[v22] = v24;
        if (v25 < 0 && v21++ <= 8) {
          continue;
        }
        goto LABEL_39;
      }
      uint64_t v14 = *v4;
LABEL_38:
      a1[v14] = 1;
LABEL_39:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateLookAroundViewIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOLocationIsValid(a1)) {
            goto LABEL_58;
          }
          PBReaderRecallMark();
          continue;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_55;
          }
        case 3u:
          if (v16 != 1) {
            goto LABEL_58;
          }
          uint64_t v24 = *v2;
          unint64_t v25 = *(void *)&a1[v24];
          if (v25 > 0xFFFFFFFFFFFFFFF7) {
            goto LABEL_54;
          }
          unint64_t v26 = v25 + 8;
          if (v26 > *(void *)&a1[*v3]) {
            goto LABEL_54;
          }
          *(void *)&a1[v24] = v26;
          continue;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v23 = v27++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_55;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_58;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_58:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v23 = v32++ > 8;
          if (!v23) {
            continue;
          }
        }
        goto LABEL_55;
      }
LABEL_53:
      uint64_t v14 = *v4;
LABEL_54:
      a1[v14] = 1;
LABEL_55:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgStateMuninResourceIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

BOOL GEOLogMsgStateMapLaunchIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_56;
          }
          goto LABEL_34;
        case 2u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_56;
        case 3u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_56;
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_52;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 5u:
          if (v15 == 2) {
            goto LABEL_34;
          }
          goto LABEL_56;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_52;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_53;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_56;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_34:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_56:
          BOOL v33 = 0;
          goto LABEL_55;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_53;
      }
LABEL_52:
      a1[*v4] = 1;
LABEL_53:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_55:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateCuratedCollectionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOPublisherDetailsIsValid(a1)) {
            goto LABEL_28;
          }
          goto LABEL_108;
        case 2u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOCollectionDetailsIsValid(a1)) {
            goto LABEL_28;
          }
          goto LABEL_108;
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_108;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_83;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_84;
          }
        case 4u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_108;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                goto LABEL_83;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                unsigned int v27 = v15++;
                if (v27 <= 8) {
                  continue;
                }
              }
              goto LABEL_84;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_108;
          }
LABEL_87:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v53 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v54 = *v2;
              uint64_t v55 = *(void *)&a1[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
                break;
              }
              int v57 = *(char *)(*(void *)&a1[*v5] + v55);
              *(void *)&a1[v54] = v56;
              if (v57 < 0)
              {
                BOOL v13 = v53++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_87;
            }
            a1[*v4] = 1;
          }
          goto LABEL_28;
        case 5u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_108:
              PBReaderRecallMark();
              return 0;
            }
LABEL_97:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v58 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v59 = *v2;
                uint64_t v60 = *(void *)&a1[v59];
                unint64_t v61 = v60 + 1;
                if (v60 == -1 || v61 > *(void *)&a1[*v3]) {
                  break;
                }
                int v62 = *(char *)(*(void *)&a1[*v5] + v60);
                *(void *)&a1[v59] = v61;
                if (v62 < 0)
                {
                  BOOL v13 = v58++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_97;
              }
              a1[*v4] = 1;
            }
LABEL_28:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_108;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                unsigned int v32 = v15++;
                if (v32 <= 8) {
                  continue;
                }
              }
              goto LABEL_84;
            }
LABEL_83:
            a1[*v4] = 1;
          }
LABEL_84:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_106;
          }
          break;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_108;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_83;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_84;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_108;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_83;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_84;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_108;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_83;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_84;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_108;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_83;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_84;
          }
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_108;
          }
          goto LABEL_84;
      }
    }
  }
LABEL_106:
  BOOL v63 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v63;
}

BOOL GEOLogMsgStateUGCPhotoIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              break;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateDirectionsDetailIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateMarketIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_26:
          BOOL v17 = 0;
          goto LABEL_25;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_26;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
LABEL_25:
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStateARPPhotoSubmissionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_66;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_62;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_63;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_66;
          }
          unsigned int v38 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_66:
          BOOL v43 = 0;
          goto LABEL_65;
      }
      while (1)
      {
        uint64_t v39 = *v2;
        uint64_t v40 = *(void *)&a1[v39];
        unint64_t v41 = v40 + 1;
        if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
          break;
        }
        int v42 = *(char *)(*(void *)&a1[*v5] + v40);
        *(void *)&a1[v39] = v41;
        if (v42 < 0)
        {
          BOOL v22 = v38++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_63;
      }
LABEL_62:
      a1[*v4] = 1;
LABEL_63:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v43 = a1[*v4] == 0;
LABEL_65:
  PBReaderRecallMark();
  return v43;
}

BOOL GEOLogMsgStateARPRatingSubmissionIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_54;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_51;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_54;
          }
          unsigned int v28 = 0;
          break;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEOARPRatingIsValid(a1)) {
            goto LABEL_54;
          }
          PBReaderRecallMark();
          continue;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_54:
          PBReaderRecallMark();
          return 0;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_51;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_51:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateARPRatingPhotoSubmissionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_50;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_46;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_47;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_50;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_50:
          BOOL v33 = 0;
          goto LABEL_49;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_47;
      }
LABEL_46:
      a1[*v4] = 1;
LABEL_47:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateMapsPlaceIdsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOPlaceIdDetailsIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEOLogMsgStatePlaceCardRapIsValid(unsigned __int8 *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  id v5 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    int v6 = a1[*v4];
    if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
      break;
    }
    if (a1[*v4])
    {
      int v6 = 1;
      break;
    }
    char v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *v2;
      uint64_t v11 = *(void *)&a1[v10];
      unint64_t v12 = v11 + 1;
      if (v11 == -1 || v12 > *(void *)&a1[*v3]) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)&a1[*v5] + v11);
      *(void *)&a1[v10] = v12;
      v9 |= (unint64_t)(v13 & 0x7F) << v7;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v7 += 7;
      if (v8++ >= 9)
      {
        LOBYTE(v9) = 0;
        int v6 = a1[*v4];
        goto LABEL_14;
      }
    }
    a1[*v4] = 1;
LABEL_12:
    int v6 = a1[*v4];
    if (a1[*v4]) {
      LOBYTE(v9) = 0;
    }
LABEL_14:
    if (v6) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = (v9 & 7) == 4;
    }
    if (v15) {
      break;
    }
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
      BOOL v16 = 0;
      goto LABEL_22;
    }
  }
  BOOL v16 = v6 == 0;
LABEL_22:
  PBReaderRecallMark();
  return v16;
}

BOOL GEOLogMsgStateOfflineDownloadIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  char v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    id v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 != 2) {
            goto LABEL_90;
          }
          goto LABEL_20;
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v22 = v28++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v33 = 0;
          while (1)
          {
            uint64_t v34 = *v2;
            uint64_t v35 = *(void *)&a1[v34];
            unint64_t v36 = v35 + 1;
            if (v35 == -1 || v36 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v37 = *(char *)(*(void *)&a1[*v5] + v35);
            *(void *)&a1[v34] = v36;
            if (v37 < 0)
            {
              BOOL v22 = v33++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v38 = 0;
          while (1)
          {
            uint64_t v39 = *v2;
            uint64_t v40 = *(void *)&a1[v39];
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v42 = *(char *)(*(void *)&a1[*v5] + v40);
            *(void *)&a1[v39] = v41;
            if (v42 < 0)
            {
              BOOL v22 = v38++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v43 = 0;
          while (1)
          {
            uint64_t v44 = *v2;
            uint64_t v45 = *(void *)&a1[v44];
            unint64_t v46 = v45 + 1;
            if (v45 == -1 || v46 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v47 = *(char *)(*(void *)&a1[*v5] + v45);
            *(void *)&a1[v44] = v46;
            if (v47 < 0)
            {
              BOOL v22 = v43++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              goto LABEL_86;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v22 = v48++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v53 = 0;
          break;
        default:
LABEL_20:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_90:
          BOOL v58 = 0;
          goto LABEL_89;
      }
      while (1)
      {
        uint64_t v54 = *v2;
        uint64_t v55 = *(void *)&a1[v54];
        unint64_t v56 = v55 + 1;
        if (v55 == -1 || v56 > *(void *)&a1[*v3]) {
          break;
        }
        int v57 = *(char *)(*(void *)&a1[*v5] + v55);
        *(void *)&a1[v54] = v56;
        if (v57 < 0)
        {
          BOOL v22 = v53++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_87;
      }
LABEL_86:
      a1[*v4] = 1;
LABEL_87:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v58 = a1[*v4] == 0;
LABEL_89:
  PBReaderRecallMark();
  return v58;
}

uint64_t _GEOLogMsgStateIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 480));
  unint64_t v2 = *(void *)(a1 + 488);
  if ((v2 & 0x401000000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x200000000000000) != 0)
  {
    if (GEOLogMsgStateUserIsDirty(*(void *)(a1 + 464))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 2) != 0) {
    return 1;
  }
  if ((v2 & 0x80000000000) != 0)
  {
    if (GEOLogMsgStateRAPIsDirty(*(void *)(a1 + 352))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x40000000000) != 0)
  {
    if (GEOLogMsgStatePlaceSummaryLayoutIsDirty(*(void *)(a1 + 344))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x20000800000000) != 0) {
    return 1;
  }
  if ((v2 & 0x800000000000) != 0)
  {
    if (GEOLogMsgStateSearchResultsIsDirty(*(void *)(a1 + 384))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x10000) != 0)
  {
    if (GEOLogMsgStateElementImpressionIsDirty(*(void *)(a1 + 136))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x8200000080004) != 0) {
    return 1;
  }
  if ((v2 & 0x1000) != 0)
  {
    if (GEOLogMsgStateDeviceIdentifierIsDirty(*(void *)(a1 + 104))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 8) != 0)
  {
    if (GEOLogMsgStateApplicationIdentifierIsDirty(*(void *)(a1 + 32))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x400) != 0) {
    return 1;
  }
  if ((v2 & 0x2000) != 0)
  {
    if (GEOLogMsgStateDeviceLocaleIsDirty(*(void *)(a1 + 112))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x800) != 0)
  {
    if (GEOLogMsgStateDeviceConnectionIsDirty(*(void *)(a1 + 96))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x14000400F844080) != 0) {
    return 1;
  }
  if ((v2 & 0x20000) != 0)
  {
    if (GEOLogMsgStateExperimentsIsDirty(*(os_unfair_lock_s **)(a1 + 144))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x10000000000) != 0)
  {
    if (GEOLogMsgStatePlaceCardIsDirty(*(os_unfair_lock_s **)(a1 + 328))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x10120440400000) != 0) {
    return 1;
  }
  if ((v2 & 0x2000000000000) != 0)
  {
    if (GEOLogMsgStateSuggestionsIsDirty(*(void *)(a1 + 400))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x4002000000000) != 0) {
    return 1;
  }
  if ((v2 & 0x200) != 0)
  {
    if (GEOLogMsgStateDetailLookAroundLogIsDirty(*(void *)(a1 + 80))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x200100000) != 0) {
    return 1;
  }
  if ((v2 & 0x200000) != 0)
  {
    if (GEOLogMsgStateMapLaunchIsDirty(*(void *)(a1 + 176))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x100) != 0)
  {
    if (GEOLogMsgStateCuratedCollectionIsDirty(*(os_unfair_lock_s **)(a1 + 72))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x80000100008000) != 0) {
    return 1;
  }
  if ((v2 & 0x400000000000) != 0)
  {
    if (GEOLogMsgStateRoutingSettingsIsDirty(*(void *)(a1 + 376))) {
      return 1;
    }
    unint64_t v2 = *(void *)(a1 + 488);
  }
  if ((v2 & 0x90000010) != 0) {
    return 1;
  }
  if ((v2 & 0x40) == 0) {
    goto LABEL_64;
  }
  if (GEOLogMsgStateARPRatingSubmissionIsDirty(*(void *)(a1 + 56))) {
    return 1;
  }
  unint64_t v2 = *(void *)(a1 + 488);
LABEL_64:
  if ((v2 & 0x8020000020) != 0) {
    return 1;
  }
  return (v2 >> 36) & 1;
}

os_unfair_lock_s *GEOLogMsgStateIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    uint64_t v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgStateIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 120);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void GEOLogMsgStatePlaceRequestClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasPlaceDataRequest]
    && ([a1 placeDataRequest],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOPDPlaceRequestHasSensitiveFields(v5, a2),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 placeDataRequest];
    id v8 = (id)[v7 copy];

    GEOPDPlaceRequestClearSensitiveFields(v8, a2, 0);
    [a1 setPlaceDataRequest:v8];
  }
  else
  {
    id v8 = [a1 placeDataRequest];
    [v8 clearSensitiveFields:a2];
  }
}

void GEOLogMsgStateLookAroundViewClearSensitiveFields(void *a1, uint64_t a2, int a3)
{
  if (a3
    && [a1 hasLocation]
    && ([a1 location],
        id v5 = objc_claimAutoreleasedReturnValue(),
        int HasSensitiveFields = GEOLocationHasSensitiveFields((uint64_t)v5),
        v5,
        HasSensitiveFields))
  {
    unsigned int v7 = [a1 location];
    id v8 = (_DWORD *)[v7 copy];

    GEOLocationClearSensitiveFields(v8);
    [a1 setLocation:v8];
  }
  else
  {
    id v8 = [a1 location];
    [v8 clearSensitiveFields:a2];
  }
}

BOOL GEOLogMsgStateARPPhotoSubmissionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            uint64_t v19 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v18;

            continue;
          case 2u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 28) |= 8u;
            while (1)
            {
              uint64_t v23 = *v4;
              uint64_t v24 = *(void *)&v3[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_59;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_61;
              }
            }
            v3[*v6] = 1;
LABEL_59:
            if (v3[*v6]) {
              uint64_t v22 = 0;
            }
LABEL_61:
            BOOL v54 = v22 != 0;
            uint64_t v55 = 25;
            goto LABEL_70;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 28) |= 4u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_65;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v29 = 0;
            }
LABEL_65:
            BOOL v54 = v29 != 0;
            uint64_t v55 = 24;
            goto LABEL_70;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 28) |= 0x10u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
                *(void *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_69;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v36 = 0;
            }
LABEL_69:
            BOOL v54 = v36 != 0;
            uint64_t v55 = 26;
LABEL_70:
            *(unsigned char *)(a1 + v55) = v54;
            continue;
          case 5u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            *(unsigned char *)(a1 + 28) |= 2u;
            while (2)
            {
              uint64_t v44 = *v4;
              uint64_t v45 = *(void *)&v3[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v3[*v7] + v45);
                *(void *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  BOOL v15 = v42++ >= 9;
                  if (v15)
                  {
                    LODWORD(v43) = 0;
                    goto LABEL_74;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v43) = 0;
            }
LABEL_74:
            uint64_t v56 = 20;
            goto LABEL_79;
          case 6u:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v43 = 0;
            *(unsigned char *)(a1 + 28) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_82;
            }
            continue;
        }
        while (1)
        {
          uint64_t v50 = *v4;
          uint64_t v51 = *(void *)&v3[v50];
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)&v3[*v5]) {
            break;
          }
          char v53 = *(unsigned char *)(*(void *)&v3[*v7] + v51);
          *(void *)&v3[v50] = v52;
          v43 |= (unint64_t)(v53 & 0x7F) << v48;
          if ((v53 & 0x80) == 0) {
            goto LABEL_76;
          }
          v48 += 7;
          BOOL v15 = v49++ >= 9;
          if (v15)
          {
            LODWORD(v43) = 0;
            goto LABEL_78;
          }
        }
        v3[*v6] = 1;
LABEL_76:
        if (v3[*v6]) {
          LODWORD(v43) = 0;
        }
LABEL_78:
        uint64_t v56 = 16;
LABEL_79:
        *(_DWORD *)(a1 + v56) = v43;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v57 = v3[*v6] == 0;
  }
  else
  {
LABEL_82:
    BOOL v57 = 0;
  }
  objc_sync_exit(v3);

  return v57;
}

void sub_18A2D7974(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPPhotoSubmissionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateARPPhotoSubmissionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2D79F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    id v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            uint64_t v19 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v18;

            continue;
          case 2u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 20) |= 2u;
            while (1)
            {
              uint64_t v23 = *v4;
              uint64_t v24 = *(void *)&v3[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_45;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_47;
              }
            }
            v3[*v6] = 1;
LABEL_45:
            if (v3[*v6]) {
              uint64_t v22 = 0;
            }
LABEL_47:
            BOOL v41 = v22 != 0;
            uint64_t v42 = 17;
            goto LABEL_56;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 20) |= 1u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_51;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v29 = 0;
            }
LABEL_51:
            BOOL v41 = v29 != 0;
            uint64_t v42 = 16;
            goto LABEL_56;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 20) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_59;
            }
            continue;
        }
        while (1)
        {
          uint64_t v37 = *v4;
          uint64_t v38 = *(void *)&v3[v37];
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)&v3[*v5]) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
          *(void *)&v3[v37] = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_53;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            uint64_t v36 = 0;
            goto LABEL_55;
          }
        }
        v3[*v6] = 1;
LABEL_53:
        if (v3[*v6]) {
          uint64_t v36 = 0;
        }
LABEL_55:
        BOOL v41 = v36 != 0;
        uint64_t v42 = 18;
LABEL_56:
        *(unsigned char *)(a1 + v42) = v41;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v43 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v43 = 0;
  }
  objc_sync_exit(v3);

  return v43;
}

void sub_18A2D8B1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPRatingPhotoSubmissionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateARPRatingPhotoSubmissionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2D8B90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2D92CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateARPRatingSubmissionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 4) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v71 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  uint64_t v19 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_97;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_27;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_29:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_97:
      if (v13)
      {
        char v65 = 1;
        goto LABEL_108;
      }
      if (!v14) {
        goto LABEL_109;
      }
      while (1)
      {
        int v67 = *v14++;
        int v66 = v67;
        if (v67 == 1) {
          break;
        }
        if (v66 == 5)
        {
          char v68 = 16;
LABEL_106:
          *(unsigned char *)(a1 + v19[427]) |= v68;
        }
        else if (!v66)
        {
          goto LABEL_109;
        }
      }
      char v68 = 8;
      goto LABEL_106;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v13;
    if (!v71)
    {
      unint64_t v32 = v14;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + v19[427]) & 8) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = *(void **)(a1 + 16);
          *(void *)(a1 + 16) = v36;

          --v8;
          goto LABEL_92;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_114;
        }
        v8 += *(unsigned __int8 *)(a1 + v19[427]) << 28 >> 31;
        goto LABEL_92;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + v19[427]) |= 2u;
        while (2)
        {
          uint64_t v42 = *v16;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v27 = v40++ >= 9;
              if (v27)
              {
                uint64_t v41 = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v41 = 0;
        }
LABEL_80:
        BOOL v62 = v41 != 0;
        uint64_t v63 = 45;
        goto LABEL_89;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + v19[427]) |= 1u;
        while (2)
        {
          uint64_t v49 = *v16;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v27 = v47++ >= 9;
              if (v27)
              {
                uint64_t v48 = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v48 = 0;
        }
LABEL_84:
        BOOL v62 = v48 != 0;
        uint64_t v63 = 44;
        goto LABEL_89;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + v19[427]) |= 4u;
        while (2)
        {
          uint64_t v56 = *v16;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v18) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if (v59 < 0)
            {
              v53 += 7;
              BOOL v27 = v54++ >= 9;
              if (v27)
              {
                uint64_t v55 = 0;
                goto LABEL_88;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v55 = 0;
        }
LABEL_88:
        BOOL v62 = v55 != 0;
        uint64_t v63 = 46;
LABEL_89:
        *(unsigned char *)(a1 + v63) = v62;
        goto LABEL_93;
      case 5:
        if (!v31 || (*(unsigned char *)(a1 + v19[427]) & 0x10) != 0)
        {
LABEL_75:
          char v61 = PBReaderSkipValueWithTag();
          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v61 & 1) == 0)
          {
LABEL_107:
            char v65 = 0;
            goto LABEL_108;
          }
LABEL_93:
          if (v8) {
            char v64 = 1;
          }
          else {
            char v64 = v13;
          }
          if ((v64 & 1) == 0) {
            goto LABEL_97;
          }
          continue;
        }
        if (PBReaderPlaceMark())
        {
          uint64_t v60 = objc_alloc_init(GEOARPRating);
          if (!GEOARPRatingReadAllFrom((uint64_t)v60, (void *)v3))
          {

            char v65 = 0;
            uint64_t v19 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
            goto LABEL_116;
          }
          PBReaderRecallMark();
          -[GEOLogMsgStateARPRatingSubmission _addNoFlagsRatings:](a1, v60);

          uint64_t v19 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_92:
          unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_93;
        }
LABEL_114:
        char v65 = 0;
LABEL_116:
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        *(unsigned char *)(a1 + v19[427]) |= 8u;
        *(unsigned char *)(a1 + v19[427]) |= 0x10u;
        if (v65)
        {
LABEL_109:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_110;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_110:
            uint64_t v69 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unsigned int v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_107;
        }
        goto LABEL_93;
    }
  }
}

void sub_18A2D9C04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2DA6B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStateARPRatingSubmissionCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgStateARPRatingSubmissionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateARPRatingSubmissionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgStateARPRatingSubmissionReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgStateARPRatingSubmissionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateARPRatingSubmissionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStateARPRatingSubmissionCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A2DA944(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateARPRatingSubmissionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateARPRatingSubmissionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2DA9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2DAC4C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateARPRatingSubmissionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A2DB118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "18A2E5294: too complex function (funcsize=7824)"

#error "18A2F41A4: too complex function (funcsize=7948)"

BOOL GEOLogMsgStateAccountReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_59;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v26 = 0;
              unsigned int v27 = 0;
              uint64_t v28 = 0;
              while (1)
              {
                uint64_t v29 = *v4;
                uint64_t v30 = *(void *)&v3[v29];
                unint64_t v31 = v30 + 1;
                if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
                  break;
                }
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v28 |= (unint64_t)(v32 & 0x7F) << v26;
                if (v32 < 0)
                {
                  v26 += 7;
                  BOOL v15 = v27++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_40;
              }
              v3[*v6] = 1;
LABEL_40:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            while (1)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5]) {
                break;
              }
              char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
              *(void *)&v3[v36] = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if (v39 < 0)
              {
                v33 += 7;
                BOOL v15 = v34++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_56;
            }
            v3[*v6] = 1;
LABEL_56:
            PBRepeatedInt32Add();
          }
        }
        else if ((v10 >> 3) == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_44;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              uint64_t v21 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v21 = 0;
          }
LABEL_46:
          *(unsigned char *)(a1 + 32) = v21 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_59;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A2FD608(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateAccountReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateAccountReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2FD670(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateActionButtonDetailsReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    long long v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v20 = objc_alloc_init(GEOActionButtonDetail);
          if (!GEOActionButtonDetailReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addActionButtonDetails:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18A2FE1B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateActionButtonDetailsReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateActionButtonDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2FE214(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateApplicationIdentifierReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 68)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFBFFFCFFFEFFFDLL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  uint64_t v14 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
  char v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_90;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_90:
      if (v12)
      {
        char v53 = 1;
        goto LABEL_101;
      }
      if (v13)
      {
        while (1)
        {
          int v55 = *v13++;
          char v54 = 4;
          switch(v55)
          {
            case 0:
              goto LABEL_102;
            case 1:
              goto LABEL_97;
            case 2:
              char v54 = 8;
              goto LABEL_97;
            case 3:
              char v54 = 16;
              goto LABEL_97;
            case 5:
              char v54 = 32;
LABEL_97:
              *(unsigned char *)(a1 + 68) |= v54;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_102;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 68) & 4) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 16;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v52 = 32 * *(unsigned char *)(a1 + 68);
        goto LABEL_87;
      case 2:
        if (!v28) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 68) & 8) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v52 = 16 * *(unsigned char *)(a1 + 68);
        goto LABEL_87;
      case 3:
        if (!v28) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x10) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 32;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_100;
        }
        char v52 = 8 * *(unsigned char *)(a1 + 68);
        goto LABEL_87;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_69;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v39 = *v14;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(v3 + *v16) + v40);
            *(void *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v24 = v37++ >= 9;
              if (v24)
              {
                uint64_t v38 = 0;
                goto LABEL_74;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v38 = 0;
        }
LABEL_74:
        *(unsigned char *)(a1 + 64) = v38 != 0;
        goto LABEL_89;
      case 5:
        if (!v28) {
          goto LABEL_69;
        }
        if ((*(unsigned char *)(a1 + 68) & 0x20) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 40;
LABEL_60:
          uint64_t v43 = *(void **)(a1 + v34);
          *(void *)(a1 + v34) = v33;

          --v8;
          goto LABEL_88;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v52 = 4 * *(unsigned char *)(a1 + 68);
LABEL_87:
          v8 += v52 >> 7;
LABEL_88:
          unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_90;
          }
          continue;
        }
LABEL_100:
        char v53 = 0;
        unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_101:
        *(unsigned char *)(a1 + 68) |= 4u;
        *(unsigned char *)(a1 + 68) |= 8u;
        *(unsigned char *)(a1 + 68) |= 0x10u;
        *(unsigned char *)(a1 + 68) |= 0x20u;
        if (v53)
        {
LABEL_102:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_103;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_103:
            uint64_t v56 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if (v7)
        {
          char v44 = 0;
          unsigned int v45 = 0;
          uint64_t v46 = 0;
          *(unsigned char *)(a1 + 68) |= 1u;
          while (1)
          {
            uint64_t v47 = *v14;
            uint64_t v48 = *(void *)(v3 + v47);
            unint64_t v49 = v48 + 1;
            if (v48 == -1 || v49 > *(void *)(v3 + *v6)) {
              break;
            }
            char v50 = *(unsigned char *)(*(void *)(v3 + *v16) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if ((v50 & 0x80) == 0) {
              goto LABEL_76;
            }
            v44 += 7;
            BOOL v24 = v45++ >= 9;
            if (v24)
            {
              LODWORD(v46) = 0;
              goto LABEL_78;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_76:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v46) = 0;
          }
LABEL_78:
          *(_DWORD *)(a1 + 60) = v46;
        }
        else
        {
LABEL_69:
          char v51 = PBReaderSkipValueWithTag();
          unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v51 & 1) == 0)
          {
LABEL_99:
            char v53 = 0;
            goto LABEL_101;
          }
        }
        goto LABEL_89;
      default:
        int v35 = PBReaderSkipValueWithTag();
        unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v35) {
          goto LABEL_99;
        }
        goto LABEL_89;
    }
  }
}

void sub_18A2FEF1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2FF08C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A2FF274(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateApplicationIdentifierReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateApplicationIdentifierReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgStateApplicationIdentifierReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgStateApplicationIdentifierReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateApplicationIdentifierReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A2FFCB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateApplicationIdentifierReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateApplicationIdentifierReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A2FFD14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateApplicationIdentifierIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0x7C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A3000E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateCarPlayReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    id v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      char v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unint64_t v27 = objc_alloc_init(GEOCarInfo);
          if (!GEOCarInfoReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          BOOL v28 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              uint64_t v22 = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8]) {
            uint64_t v22 = 0;
          }
LABEL_36:
          *(unsigned char *)(a1 + 16) = v22 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v29 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    BOOL v29 = 0;
  }
  objc_sync_exit(v5);

  return v29;
}

void sub_18A300AEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateCarPlayReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateCarPlayReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A300B50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A301064(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateCuratedCollectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (const __int16 *)(a1 + 112);
  uint16x4_t v12 = (uint16x4_t)vld1_dup_s16(v11);
  int16x4_t v13 = (int16x4_t)vand_s8((int8x8_t)vshl_u16(v12, (uint16x4_t)0xFFFBFFFAFFF8FFF9), (int8x8_t)0x1000100010001);
  v13.i16[0] = vaddv_s16(v13);
  unsigned int v14 = v13.i32[0];
  while (2)
  {
    uint64_t v15 = 1;
    uint64_t v16 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v15 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v17 = v14 > 2;
        char v18 = v10 | v17;
        if (((v10 | v17) | v8)) {
          unint64_t v19 = 0;
        }
        else {
          unint64_t v19 = a3;
        }
        char v20 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_168;
        }
        char v114 = (v19 == 0) | v18;
        uint64_t v22 = (int *)MEMORY[0x1E4F940B8];
        char v113 = v10 | v17;
        break;
      default:
        ++v14;
LABEL_6:
        uint64_t v15 = v9;
        uint64_t v16 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v15;
        uint64_t v10 = v16;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v21)) {
      goto LABEL_168;
    }
    char v23 = 0;
    unsigned int v24 = 0;
    unint64_t v25 = 0;
    while (1)
    {
      uint64_t v26 = *v20;
      uint64_t v27 = *(void *)(v3 + v26);
      unint64_t v28 = v27 + 1;
      if (v27 == -1 || v28 > *(void *)(v3 + *v6)) {
        break;
      }
      char v29 = *(unsigned char *)(*(void *)(v3 + *v22) + v27);
      *(void *)(v3 + v26) = v28;
      v25 |= (unint64_t)(v29 & 0x7F) << v23;
      if ((v29 & 0x80) == 0) {
        goto LABEL_23;
      }
      v23 += 7;
      BOOL v30 = v24++ >= 9;
      if (v30)
      {
        unint64_t v25 = 0;
        int v31 = *(unsigned __int8 *)(v3 + *v21);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v21) = 1;
LABEL_23:
    int v31 = *(unsigned __int8 *)(v3 + *v21);
    if (*(unsigned char *)(v3 + *v21)) {
      unint64_t v25 = 0;
    }
LABEL_25:
    int v32 = v25 & 7;
    if (v31 || v32 == 4)
    {
LABEL_168:
      if (v18)
      {
        char v107 = 1;
        goto LABEL_170;
      }
      if (v19)
      {
        while (1)
        {
          int v109 = *v19++;
          __int16 v108 = 256;
          switch(v109)
          {
            case 0:
              goto LABEL_180;
            case 1:
              goto LABEL_178;
            case 2:
              __int16 v108 = 128;
              goto LABEL_178;
            case 4:
              __int16 v108 = 64;
              goto LABEL_178;
            case 5:
              __int16 v108 = 32;
LABEL_178:
              *(_WORD *)(a1 + 112) |= v108;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_180;
    }
    unint64_t v34 = v25 >> 3;
    BOOL v35 = v18;
    if ((v114 & 1) == 0)
    {
      char v36 = v19;
      do
      {
        int v38 = *v36++;
        int v37 = v38;
        BOOL v35 = v38 != 0;
        if (v38) {
          BOOL v39 = v37 == v34;
        }
        else {
          BOOL v39 = 1;
        }
      }
      while (!v39);
    }
    switch((int)v34)
    {
      case 1:
        if (!v35) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 112) & 0x100) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_185;
          }
          uint64_t v112 = objc_alloc_init(GEOPublisherDetails);
          if (GEOPublisherDetailsReadAllFrom((uint64_t)v112, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v40 = 72;
            goto LABEL_49;
          }
          goto LABEL_184;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_185;
        }
        __int16 v92 = *(_WORD *)(a1 + 112) << 7;
        goto LABEL_147;
      case 2:
        if (!v35) {
          goto LABEL_120;
        }
        if ((*(_WORD *)(a1 + 112) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_185;
          }
          __int16 v92 = *(_WORD *)(a1 + 112) << 8;
LABEL_147:
          v7 += v92 >> 15;
          goto LABEL_165;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_185;
        }
        uint64_t v112 = objc_alloc_init(GEOCollectionDetails);
        if (GEOCollectionDetailsReadAllFrom((uint64_t)v112, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v40 = 64;
LABEL_49:
          char v42 = *(void **)(a1 + v40);
          *(void *)(a1 + v40) = v112;

          --v7;
LABEL_165:
          char v18 = v113;
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_166:
          if (!(v18 & 1 | (v7 != 0)) || *(void *)(v3 + *v20) >= *(void *)(v3 + *v6)) {
            goto LABEL_168;
          }
          continue;
        }
LABEL_184:

LABEL_185:
        char v107 = 0;
        char v18 = v113;
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
LABEL_170:
        *(_WORD *)(a1 + 112) |= 0x100u;
        *(_WORD *)(a1 + 112) |= 0x80u;
        *(_WORD *)(a1 + 112) |= 0x40u;
        *(_WORD *)(a1 + 112) |= 0x20u;
        if (v107)
        {
LABEL_180:
          unint64_t v3 = *(unsigned char *)(v3 + *v21) == 0;
          if (v18) {
            goto LABEL_181;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v18 & 1) == 0) {
          return v3;
        }
LABEL_181:
        unsigned int v110 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 112) |= 4u;
        while (2)
        {
          uint64_t v46 = *v20;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v22) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v30 = v44++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v45) = 0;
        }
LABEL_125:
        uint64_t v91 = 100;
        goto LABEL_142;
      case 4:
        if (!v35 || (*(_WORD *)(a1 + 112) & 0x40) != 0) {
          goto LABEL_120;
        }
        if (v32 != 2)
        {
          char v93 = 0;
          unsigned int v94 = 0;
          uint64_t v95 = 0;
          while (1)
          {
            uint64_t v96 = *v20;
            uint64_t v97 = *(void *)(v3 + v96);
            unint64_t v98 = v97 + 1;
            if (v97 == -1 || v98 > *(void *)(v3 + *v6)) {
              goto LABEL_163;
            }
            char v99 = *(unsigned char *)(*(void *)(v3 + *v22) + v97);
            *(void *)(v3 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if (v99 < 0)
            {
              v93 += 7;
              BOOL v30 = v94++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_164;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_185;
        }
        while (1)
        {
          char v50 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_148;
          }
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (1)
          {
            uint64_t v54 = *v20;
            uint64_t v55 = *(void *)(v3 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(v3 + *v6)) {
              break;
            }
            char v57 = *(unsigned char *)(*(void *)(v3 + *v22) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v30 = v52++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_72;
          }
          *(unsigned char *)(v3 + *v50) = 1;
LABEL_72:
          PBRepeatedInt32Add();
        }
      case 5:
        if (!v35 || (*(_WORD *)(a1 + 112) & 0x20) != 0) {
          goto LABEL_120;
        }
        if (v32 != 2)
        {
          char v100 = 0;
          unsigned int v101 = 0;
          uint64_t v102 = 0;
          while (1)
          {
            uint64_t v103 = *v20;
            uint64_t v104 = *(void *)(v3 + v103);
            unint64_t v105 = v104 + 1;
            if (v104 == -1 || v105 > *(void *)(v3 + *v6)) {
              break;
            }
            char v106 = *(unsigned char *)(*(void *)(v3 + *v22) + v104);
            *(void *)(v3 + v103) = v105;
            v102 |= (unint64_t)(v106 & 0x7F) << v100;
            if (v106 < 0)
            {
              v100 += 7;
              BOOL v30 = v101++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_164;
          }
LABEL_163:
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_164:
          PBRepeatedInt32Add();
          goto LABEL_165;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_185;
        }
        while (1)
        {
          unint64_t v58 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v20) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v59 = 0;
          unsigned int v60 = 0;
          uint64_t v61 = 0;
          while (1)
          {
            uint64_t v62 = *v20;
            uint64_t v63 = *(void *)(v3 + v62);
            unint64_t v64 = v63 + 1;
            if (v63 == -1 || v64 > *(void *)(v3 + *v6)) {
              break;
            }
            char v65 = *(unsigned char *)(*(void *)(v3 + *v22) + v63);
            *(void *)(v3 + v62) = v64;
            v61 |= (unint64_t)(v65 & 0x7F) << v59;
            if (v65 < 0)
            {
              v59 += 7;
              BOOL v30 = v60++ >= 9;
              if (!v30) {
                continue;
              }
            }
            goto LABEL_87;
          }
          *(unsigned char *)(v3 + *v58) = 1;
LABEL_87:
          PBRepeatedInt32Add();
        }
LABEL_148:
        PBReaderRecallMark();
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v113;
        goto LABEL_166;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v66 = 0;
        unsigned int v67 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 112) |= 0x10u;
        while (2)
        {
          uint64_t v68 = *v20;
          uint64_t v69 = *(void *)(v3 + v68);
          unint64_t v70 = v69 + 1;
          if (v69 == -1 || v70 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v71 = *(unsigned char *)(*(void *)(v3 + *v22) + v69);
            *(void *)(v3 + v68) = v70;
            v45 |= (unint64_t)(v71 & 0x7F) << v66;
            if (v71 < 0)
            {
              v66 += 7;
              BOOL v30 = v67++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v45) = 0;
        }
LABEL_129:
        uint64_t v91 = 108;
        goto LABEL_142;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v72 = 0;
        unsigned int v73 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 112) |= 1u;
        while (2)
        {
          uint64_t v74 = *v20;
          uint64_t v75 = *(void *)(v3 + v74);
          unint64_t v76 = v75 + 1;
          if (v75 == -1 || v76 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v77 = *(unsigned char *)(*(void *)(v3 + *v22) + v75);
            *(void *)(v3 + v74) = v76;
            v45 |= (unint64_t)(v77 & 0x7F) << v72;
            if (v77 < 0)
            {
              v72 += 7;
              BOOL v30 = v73++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v45) = 0;
        }
LABEL_133:
        uint64_t v91 = 92;
        goto LABEL_142;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_120;
        }
        char v78 = 0;
        unsigned int v79 = 0;
        uint64_t v45 = 0;
        *(_WORD *)(a1 + 112) |= 2u;
        while (2)
        {
          uint64_t v80 = *v20;
          uint64_t v81 = *(void *)(v3 + v80);
          unint64_t v82 = v81 + 1;
          if (v81 == -1 || v82 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v21) = 1;
          }
          else
          {
            char v83 = *(unsigned char *)(*(void *)(v3 + *v22) + v81);
            *(void *)(v3 + v80) = v82;
            v45 |= (unint64_t)(v83 & 0x7F) << v78;
            if (v83 < 0)
            {
              v78 += 7;
              BOOL v30 = v79++ >= 9;
              if (v30)
              {
                LODWORD(v45) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v21)) {
          LODWORD(v45) = 0;
        }
LABEL_137:
        uint64_t v91 = 96;
        goto LABEL_142;
      case 9:
        if (v8)
        {
          char v84 = 0;
          unsigned int v85 = 0;
          uint64_t v45 = 0;
          *(_WORD *)(a1 + 112) |= 8u;
          while (1)
          {
            uint64_t v86 = *v20;
            uint64_t v87 = *(void *)(v3 + v86);
            unint64_t v88 = v87 + 1;
            if (v87 == -1 || v88 > *(void *)(v3 + *v6)) {
              break;
            }
            char v89 = *(unsigned char *)(*(void *)(v3 + *v22) + v87);
            *(void *)(v3 + v86) = v88;
            v45 |= (unint64_t)(v89 & 0x7F) << v84;
            if ((v89 & 0x80) == 0) {
              goto LABEL_139;
            }
            v84 += 7;
            BOOL v30 = v85++ >= 9;
            if (v30)
            {
              LODWORD(v45) = 0;
              goto LABEL_141;
            }
          }
          *(unsigned char *)(v3 + *v21) = 1;
LABEL_139:
          if (*(unsigned char *)(v3 + *v21)) {
            LODWORD(v45) = 0;
          }
LABEL_141:
          uint64_t v91 = 104;
LABEL_142:
          *(_DWORD *)(a1 + v91) = v45;
        }
        else
        {
LABEL_120:
          char v90 = PBReaderSkipValueWithTag();
          unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
          char v18 = v113;
          if ((v90 & 1) == 0)
          {
LABEL_183:
            char v107 = 0;
            goto LABEL_170;
          }
        }
        goto LABEL_166;
      default:
        int v41 = PBReaderSkipValueWithTag();
        unsigned int v21 = (int *)MEMORY[0x1E4F940C8];
        char v18 = v113;
        if (!v41) {
          goto LABEL_183;
        }
        goto LABEL_166;
    }
  }
}

void sub_18A301DC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A30227C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A30C16C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "18A315FA8: too complex function (funcsize=7824)"

#error "18A322C7C: too big function (funcsize=0)"

void sub_18A3351F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateCuratedCollectionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateCuratedCollectionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStateCuratedCollectionReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStateCuratedCollectionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateCuratedCollectionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 72) readAll:1];
    [*(id *)(a1 + 64) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18A3353A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateCuratedCollectionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateCuratedCollectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A33540C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_50;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_50;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              break;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_49;
          }
LABEL_37:
          a1[*v4] = 1;
          goto LABEL_49;
        }
        if (!PBReaderPlaceMark())
        {
LABEL_52:
          PBReaderRecallMark();
          return 0;
        }
LABEL_39:
        while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
        {
          unsigned int v28 = a1[*v4];
          if (a1[*v4]) {
            break;
          }
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              break;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v13 = v28++ >= 9;
              if (!v13) {
                continue;
              }
            }
            goto LABEL_39;
          }
          a1[*v4] = 1;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_52;
      }
LABEL_49:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_50;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_52;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_37;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0 && v22++ <= 8) {
        continue;
      }
      goto LABEL_49;
    }
  }
LABEL_50:
  BOOL v33 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v33;
}

void sub_18A3359C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateCuratedCollectionIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  if ((v2 & 0x300) != 0) {
    return 1;
  }
  if ((v2 & 0x80) != 0)
  {
    if (GEOCollectionDetailsIsDirty(*(void *)(a1 + 64))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 112);
  }
  if ((v2 & 0x40) != 0) {
    return 1;
  }
  return (v2 >> 5) & 1;
}

os_unfair_lock_s *GEOLogMsgStateCuratedCollectionIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgStateCuratedCollectionIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 22);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A335F3C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A336720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDetailLookAroundLogReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 56) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v7 != 0;
  if (v12) {
    BOOL v13 = 1;
  }
  BOOL v53 = v13;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  uint64_t v15 = v12 != 0;
  BOOL v16 = v14 == 0;
  if (v12) {
    BOOL v16 = 1;
  }
  BOOL v54 = v16;
  uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_76;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_28;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_30;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_28:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_30:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_76:
      if (v15)
      {
        char v47 = 1;
        goto LABEL_87;
      }
      if (!v14) {
        goto LABEL_88;
      }
      while (1)
      {
        int v49 = *v14++;
        int v48 = v49;
        if (v49 == 3) {
          break;
        }
        if (v48 == 4)
        {
          char v50 = 8;
LABEL_85:
          *(unsigned char *)(a1 + 56) |= v50;
        }
        else if (!v48)
        {
          goto LABEL_88;
        }
      }
      char v50 = 4;
      goto LABEL_85;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!v54)
    {
      int v32 = v14;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_67;
        }
        *(unsigned char *)(a1 + 56) |= 1u;
        uint64_t v36 = *v17;
        unint64_t v37 = *(void *)(v3 + v36);
        if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v38 = *(void *)(*(void *)(v3 + *v19) + v37);
          *(void *)(v3 + v36) = v37 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v38 = 0;
        }
        *(void *)(a1 + 16) = v38;
        goto LABEL_68;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_67;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 56) |= 2u;
        while (2)
        {
          uint64_t v42 = *v17;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v19) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v27 = v40++ >= 9;
              if (v27)
              {
                LODWORD(v41) = 0;
                goto LABEL_73;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v41) = 0;
        }
LABEL_73:
        *(_DWORD *)(a1 + 52) = v41;
        goto LABEL_68;
      case 3:
        if (!v31 || (*(unsigned char *)(a1 + 56) & 4) != 0) {
          goto LABEL_67;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v46 = (GEOLogMsgStateDetailLookAroundLogRecord *)v15;
        uint64_t v15 = objc_alloc_init(GEOLogMsgStateDetailLookAroundLogRecord);
        if (!GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(v15, (void *)v3)) {
          goto LABEL_93;
        }
        PBReaderRecallMark();
        -[GEOLogMsgStateDetailLookAroundLog _addNoFlagsLookAroundPipRecords:](a1, (void *)v15);
        goto LABEL_66;
      case 4:
        if (!v31 || (*(unsigned char *)(a1 + 56) & 8) != 0)
        {
LABEL_67:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_86:
            char v47 = 0;
            goto LABEL_87;
          }
          goto LABEL_68;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_86;
        }
        uint64_t v46 = (GEOLogMsgStateDetailLookAroundLogRecord *)v15;
        uint64_t v15 = objc_alloc_init(GEOLogMsgStateDetailLookAroundLogRecord);
        if (GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(v15, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgStateDetailLookAroundLog _addNoFlagsLookAroundViewRecords:](a1, (void *)v15);
LABEL_66:

          uint64_t v15 = (uint64_t)v46;
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_68:
          if (!v53) {
            goto LABEL_76;
          }
          continue;
        }
LABEL_93:

        char v47 = 0;
        LODWORD(v15) = v46;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_87:
        *(unsigned char *)(a1 + 56) |= 4u;
        *(unsigned char *)(a1 + 56) |= 8u;
        if (v47)
        {
LABEL_88:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_89;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_89:
            char v51 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_86;
        }
        goto LABEL_68;
    }
  }
}

void sub_18A337050(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A337C08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStateDetailLookAroundLogCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 24);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 32);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOLogMsgStateDetailLookAroundLogReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateDetailLookAroundLogReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStateDetailLookAroundLogReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStateDetailLookAroundLogReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateDetailLookAroundLogReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStateDetailLookAroundLogCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A337F38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDetailLookAroundLogReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateDetailLookAroundLogReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A337F9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDetailLookAroundLogRecordIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3)
      {
        if (v16 != 1) {
          goto LABEL_48;
        }
        uint64_t v25 = *v2;
        unint64_t v26 = *(void *)&a1[v25];
        if (v26 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v27 = v26 + 8, v27 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v25] = v27;
        }
        else {
          a1[v14] = 1;
        }
      }
      else
      {
        if (v18 == 2)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v28 = 0;
          while (1)
          {
            uint64_t v29 = *v2;
            uint64_t v30 = *(void *)&a1[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
              goto LABEL_41;
            }
            int v32 = *(char *)(*(void *)&a1[*v5] + v30);
            *(void *)&a1[v29] = v31;
            if (v32 < 0)
            {
              BOOL v24 = v28++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_43;
          }
        }
        if (v18 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_48;
          }
          unsigned int v19 = 0;
          while (1)
          {
            uint64_t v20 = *v2;
            uint64_t v21 = *(void *)&a1[v20];
            unint64_t v22 = v21 + 1;
            if (v21 == -1 || v22 > *(void *)&a1[*v3]) {
              break;
            }
            int v23 = *(char *)(*(void *)&a1[*v5] + v21);
            *(void *)&a1[v20] = v22;
            if (v23 < 0)
            {
              BOOL v24 = v19++ > 8;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_43;
          }
LABEL_41:
          a1[*v4] = 1;
          continue;
        }
        if (!PBReaderSkipValueWithTag())
        {
LABEL_48:
          BOOL v33 = 0;
          goto LABEL_47;
        }
      }
LABEL_43:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_47:
  PBReaderRecallMark();
  return v33;
}

void sub_18A338514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDetailLookAroundLogIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A338A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v26 = *v4;
          unint64_t v27 = *(void *)&v3[v26];
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v27);
            *(void *)&v3[v26] = v27 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v28 = 0;
          }
          *(void *)(a1 + 8) = v28;
        }
        else
        {
          if (v18 == 2)
          {
            char v29 = 0;
            unsigned int v30 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v31 = *v4;
              uint64_t v32 = *(void *)&v3[v31];
              unint64_t v33 = v32 + 1;
              if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
                break;
              }
              char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v33;
              v21 |= (unint64_t)(v34 & 0x7F) << v29;
              if ((v34 & 0x80) == 0) {
                goto LABEL_46;
              }
              v29 += 7;
              BOOL v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_48:
            uint64_t v35 = 20;
          }
          else
          {
            if (v18 != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_54;
              }
              continue;
            }
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_42;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_44;
              }
            }
            v3[*v6] = 1;
LABEL_42:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_44:
            uint64_t v35 = 16;
          }
          *(_DWORD *)(a1 + v35) = v21;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_54:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18A34DA18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDetailLookAroundLogRecordReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateDetailLookAroundLogRecordReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A34DA7C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceBaseReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_50;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_52;
            }
          }
          v3[*v6] = 1;
LABEL_50:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_52:
          *(unsigned char *)(a1 + 16) = v28 != 0;
        }
        else
        {
          if (v18 == 2)
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 20) |= 1u;
            while (1)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5]) {
                break;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v21 |= (unint64_t)(v38 & 0x7F) << v33;
              if ((v38 & 0x80) == 0) {
                goto LABEL_54;
              }
              v33 += 7;
              BOOL v15 = v34++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_56;
              }
            }
            v3[*v6] = 1;
LABEL_54:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_56:
            uint64_t v39 = 8;
          }
          else
          {
            if (v18 != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_60;
              }
              continue;
            }
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 20) |= 2u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_46;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_48;
              }
            }
            v3[*v6] = 1;
LABEL_46:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_48:
            uint64_t v39 = 12;
          }
          *(_DWORD *)(a1 + v39) = v21;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_60:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A34EC1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceBaseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateDeviceBaseReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A34EC80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A34F420(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceConnectionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v62 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_86;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v16;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_86:
      if (v13)
      {
        char v56 = 1;
        goto LABEL_97;
      }
      if (!v14) {
        goto LABEL_98;
      }
      while (1)
      {
        int v58 = *v14++;
        int v57 = v58;
        if (v58 == 2) {
          break;
        }
        if (v57 == 3)
        {
          char v59 = 4;
LABEL_95:
          *(unsigned char *)(a1 + 52) |= v59;
        }
        else if (!v57)
        {
          goto LABEL_98;
        }
      }
      char v59 = 8;
      goto LABEL_95;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v62)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_66;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 52) |= 2u;
        while (1)
        {
          uint64_t v38 = *v16;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_69;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_71;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_69:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_71:
        uint64_t v53 = 48;
        goto LABEL_76;
      case 2:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 52) & 8) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 24;
          goto LABEL_57;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_103;
        }
        char v54 = 16 * *(unsigned char *)(a1 + 52);
        goto LABEL_81;
      case 3:
        if (!v30) {
          goto LABEL_66;
        }
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v43 = PBReaderReadString();
          uint64_t v44 = 16;
LABEL_57:
          char v45 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v43;

          long long v17 = (int *)MEMORY[0x1E4F940C8];
          --v9;
          goto LABEL_82;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v54 = 32 * *(unsigned char *)(a1 + 52);
LABEL_81:
          v9 += v54 >> 7;
          long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_82:
          if (v9) {
            char v55 = 1;
          }
          else {
            char v55 = v13;
          }
          if ((v55 & 1) == 0) {
            goto LABEL_86;
          }
          continue;
        }
LABEL_103:
        char v56 = 0;
        long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
        *(unsigned char *)(a1 + 52) |= 8u;
        *(unsigned char *)(a1 + 52) |= 4u;
        if (v56)
        {
LABEL_98:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_99;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_99:
            unsigned int v60 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (v8)
        {
          char v46 = 0;
          unsigned int v47 = 0;
          uint64_t v37 = 0;
          *(unsigned char *)(a1 + 52) |= 1u;
          while (1)
          {
            uint64_t v48 = *v16;
            uint64_t v49 = *(void *)(v3 + v48);
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
              break;
            }
            char v51 = *(unsigned char *)(*(void *)(v3 + *v18) + v49);
            *(void *)(v3 + v48) = v50;
            v37 |= (unint64_t)(v51 & 0x7F) << v46;
            if ((v51 & 0x80) == 0) {
              goto LABEL_73;
            }
            v46 += 7;
            BOOL v26 = v47++ >= 9;
            if (v26)
            {
              LODWORD(v37) = 0;
              goto LABEL_75;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_73:
          if (*(unsigned char *)(v3 + *v17)) {
            LODWORD(v37) = 0;
          }
LABEL_75:
          uint64_t v53 = 44;
LABEL_76:
          *(_DWORD *)(a1 + v53) = v37;
        }
        else
        {
LABEL_66:
          char v52 = PBReaderSkipValueWithTag();
          long long v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v52 & 1) == 0)
          {
LABEL_96:
            char v56 = 0;
            goto LABEL_97;
          }
        }
        goto LABEL_82;
      default:
        int v42 = PBReaderSkipValueWithTag();
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_96;
        }
        goto LABEL_82;
    }
  }
}

void sub_18A34FADC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceConnectionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateDeviceConnectionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A350074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceConnectionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0x1C) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A350424(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceIdentifierReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 48) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  if (v12) {
    BOOL v16 = 1;
  }
  else {
    BOOL v16 = v14 == 0;
  }
  BOOL v71 = v16;
  long long v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_99;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        char v65 = 1;
        goto LABEL_110;
      }
      if (!v14) {
        goto LABEL_111;
      }
      while (1)
      {
        int v67 = *v14++;
        int v66 = v67;
        if (v67 == 1) {
          break;
        }
        if (v66 == 2)
        {
          char v68 = 8;
LABEL_108:
          *(unsigned char *)(a1 + 48) |= v68;
        }
        else if (!v66)
        {
          goto LABEL_111;
        }
      }
      char v68 = 16;
      goto LABEL_108;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v71)
    {
      unint64_t v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 48) & 0x10) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 24;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_116;
        }
        char v63 = 8 * *(unsigned char *)(a1 + 48);
        goto LABEL_93;
      case 2:
        if (!v30) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 48) & 8) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          uint64_t v36 = 16;
LABEL_49:
          uint64_t v38 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v35;

          --v9;
          goto LABEL_94;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v63 = 16 * *(unsigned char *)(a1 + 48);
LABEL_93:
          v9 += v63 >> 7;
LABEL_94:
          long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (v9) {
            char v64 = 1;
          }
          else {
            char v64 = v13;
          }
          if ((v64 & 1) == 0) {
            goto LABEL_99;
          }
          continue;
        }
LABEL_116:
        char v65 = 0;
        long long v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        *(unsigned char *)(a1 + 48) |= 0x10u;
        *(unsigned char *)(a1 + 48) |= 8u;
        if (v65)
        {
LABEL_111:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_112:
            uint64_t v69 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v39 = 0;
        unsigned int v40 = 0;
        uint64_t v41 = 0;
        *(unsigned char *)(a1 + 48) |= 4u;
        while (2)
        {
          uint64_t v42 = *v15;
          uint64_t v43 = *(void *)(v3 + v42);
          unint64_t v44 = v43 + 1;
          if (v43 == -1 || v44 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
            *(void *)(v3 + v42) = v44;
            v41 |= (unint64_t)(v45 & 0x7F) << v39;
            if (v45 < 0)
            {
              v39 += 7;
              BOOL v26 = v40++ >= 9;
              if (v26)
              {
                uint64_t v41 = 0;
                goto LABEL_79;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v41 = 0;
        }
LABEL_79:
        BOOL v61 = v41 != 0;
        uint64_t v62 = 46;
        goto LABEL_88;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v46 = 0;
        unsigned int v47 = 0;
        uint64_t v48 = 0;
        *(unsigned char *)(a1 + 48) |= 2u;
        while (2)
        {
          uint64_t v49 = *v15;
          uint64_t v50 = *(void *)(v3 + v49);
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(v3 + *v18) + v50);
            *(void *)(v3 + v49) = v51;
            v48 |= (unint64_t)(v52 & 0x7F) << v46;
            if (v52 < 0)
            {
              v46 += 7;
              BOOL v26 = v47++ >= 9;
              if (v26)
              {
                uint64_t v48 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v48 = 0;
        }
LABEL_83:
        BOOL v61 = v48 != 0;
        uint64_t v62 = 45;
        goto LABEL_88;
      case 5:
        if (v8)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v55 = 0;
          *(unsigned char *)(a1 + 48) |= 1u;
          while (1)
          {
            uint64_t v56 = *v15;
            uint64_t v57 = *(void *)(v3 + v56);
            unint64_t v58 = v57 + 1;
            if (v57 == -1 || v58 > *(void *)(v3 + *v6)) {
              break;
            }
            char v59 = *(unsigned char *)(*(void *)(v3 + *v18) + v57);
            *(void *)(v3 + v56) = v58;
            v55 |= (unint64_t)(v59 & 0x7F) << v53;
            if ((v59 & 0x80) == 0) {
              goto LABEL_85;
            }
            v53 += 7;
            BOOL v26 = v54++ >= 9;
            if (v26)
            {
              uint64_t v55 = 0;
              goto LABEL_87;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_85:
          if (*(unsigned char *)(v3 + *v17)) {
            uint64_t v55 = 0;
          }
LABEL_87:
          BOOL v61 = v55 != 0;
          uint64_t v62 = 44;
LABEL_88:
          *(unsigned char *)(a1 + v62) = v61;
        }
        else
        {
LABEL_74:
          char v60 = PBReaderSkipValueWithTag();
          long long v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v60 & 1) == 0)
          {
LABEL_109:
            char v65 = 0;
            goto LABEL_110;
          }
        }
        goto LABEL_95;
      default:
        int v37 = PBReaderSkipValueWithTag();
        long long v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v37) {
          goto LABEL_109;
        }
        goto LABEL_95;
    }
  }
}

void sub_18A350BA4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceIdentifierReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateDeviceIdentifierReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStateDeviceIdentifierReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStateDeviceIdentifierReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateDeviceIdentifierReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A351398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceIdentifierReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateDeviceIdentifierReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3513FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceIdentifierIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A351A28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceLocaleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v7 | (v10 > 1);
  if (v7 & 1 | (v10 > 1) | v8 & 1) {
    BOOL v13 = 0;
  }
  else {
    BOOL v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  BOOL v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_63;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_63:
      if (v12)
      {
        char v39 = 1;
        goto LABEL_72;
      }
      if (v13)
      {
        while (1)
        {
          int v40 = *v13++;
          char v41 = 4;
          switch(v40)
          {
            case 0:
              goto LABEL_73;
            case 1:
              goto LABEL_69;
            case 2:
              char v41 = 1;
              goto LABEL_69;
            case 3:
              char v41 = 2;
LABEL_69:
              *(unsigned char *)(a1 + 52) |= v41;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_73;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      unint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    if (v27 == 3)
    {
      if (!v28) {
        goto LABEL_52;
      }
      if ((*(unsigned char *)(a1 + 52) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        char v38 = *(unsigned char *)(a1 + 52) << 6;
        goto LABEL_58;
      }
      uint64_t v33 = PBReaderReadString();
      uint64_t v34 = 24;
LABEL_49:
      uint64_t v35 = *(void **)(a1 + v34);
      *(void *)(a1 + v34) = v33;

      --v9;
      goto LABEL_61;
    }
    if (v27 != 2)
    {
      if (v27 != 1)
      {
        int v36 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v36) {
          goto LABEL_70;
        }
        goto LABEL_62;
      }
      if (v28)
      {
        if ((*(unsigned char *)(a1 + 52) & 4) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 32;
          goto LABEL_49;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_71;
        }
        char v38 = 32 * *(unsigned char *)(a1 + 52);
LABEL_58:
        v9 += v38 >> 7;
LABEL_61:
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_62:
        if (!(v12 & 1 | (v9 != 0))) {
          goto LABEL_63;
        }
        continue;
      }
LABEL_52:
      char v37 = PBReaderSkipValueWithTag();
      BOOL v15 = (int *)MEMORY[0x1E4F940C8];
      if ((v37 & 1) == 0)
      {
LABEL_70:
        char v39 = 0;
        goto LABEL_72;
      }
      goto LABEL_62;
    }
    break;
  }
  if (!v28) {
    goto LABEL_52;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    uint64_t v33 = PBReaderReadString();
    uint64_t v34 = 16;
    goto LABEL_49;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 -= *(unsigned char *)(a1 + 52) & 1;
    goto LABEL_61;
  }
LABEL_71:
  char v39 = 0;
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_72:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v39)
  {
LABEL_73:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0) {
      return v3;
    }
    goto LABEL_74;
  }
  unint64_t v3 = 0;
  if (v12)
  {
LABEL_74:
    uint64_t v42 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A351FD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A352118(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceLocaleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateDeviceLocaleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStateDeviceLocaleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStateDeviceLocaleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateDeviceLocaleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A352684(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateDeviceLocaleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateDeviceLocaleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3526E8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceLocaleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A3529D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceSettingsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 4)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 4u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__supportsAdvancedMap;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__supportsAdvancedMap;
              goto LABEL_51;
            }
          }
          unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__supportsAdvancedMap;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 2u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__isAltAccountPairedDevice;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__isAltAccountPairedDevice;
              goto LABEL_51;
            }
          }
          unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__isAltAccountPairedDevice;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__deviceDarkMode;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              uint64_t v21 = 0;
              unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__deviceDarkMode;
              goto LABEL_51;
            }
          }
          unint64_t v27 = &OBJC_IVAR___GEOLogMsgStateDeviceSettings__deviceDarkMode;
        }
LABEL_49:
        if (v3[*v6]) {
          uint64_t v21 = 0;
        }
LABEL_51:
        *(unsigned char *)(a1 + *v27) = v21 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A35341C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDeviceSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateDeviceSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A353480(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDirectionsDetailReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v25 = 0;
          unsigned int v26 = 0;
          uint64_t v27 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v28 = *v4;
            uint64_t v29 = *(void *)&v3[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
              break;
            }
            char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
            *(void *)&v3[v28] = v30;
            v27 |= (unint64_t)(v31 & 0x7F) << v25;
            if ((v31 & 0x80) == 0) {
              goto LABEL_42;
            }
            v25 += 7;
            BOOL v15 = v26++ >= 9;
            if (v15)
            {
              uint64_t v27 = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            uint64_t v27 = 0;
          }
LABEL_44:
          *(unsigned char *)(a1 + 12) = v27 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_38;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_40;
            }
          }
          v3[*v6] = 1;
LABEL_38:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_40:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v32 = v3[*v6] == 0;
  }
  else
  {
LABEL_47:
    BOOL v32 = 0;
  }
  objc_sync_exit(v3);

  return v32;
}

void sub_18A353FE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateDirectionsDetailReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateDirectionsDetailReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A354044(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A354590(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateElementImpressionReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 76) >> 4) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 5) & 1)
      + ((*(unsigned __int8 *)(a1 + 76) >> 6) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_114;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_114:
      if (v12)
      {
        char v67 = 1;
        goto LABEL_123;
      }
      if (v13)
      {
        while (1)
        {
          int v69 = *v13++;
          char v68 = 16;
          switch(v69)
          {
            case 0:
              goto LABEL_124;
            case 1:
              goto LABEL_120;
            case 2:
              char v68 = 32;
              goto LABEL_120;
            case 3:
              char v68 = 64;
LABEL_120:
              *(unsigned char *)(a1 + 76) |= v68;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_124;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28) {
          goto LABEL_86;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_122;
          }
          char v33 = objc_alloc_init(GEOElementDetails);
          if (GEOElementDetailsReadAllFrom((uint64_t)v33, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v34 = 16;
            goto LABEL_50;
          }
          goto LABEL_129;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_122;
        }
        char v66 = 8 * *(unsigned char *)(a1 + 76);
        goto LABEL_112;
      case 2:
        if (!v28) {
          goto LABEL_86;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_122;
          }
          char v66 = 4 * *(unsigned char *)(a1 + 76);
LABEL_112:
          v7 += v66 >> 7;
          goto LABEL_113;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_122;
        }
        char v33 = objc_alloc_init(GEOImpressionObjectId);
        if (GEOImpressionObjectIdReadAllFrom((uint64_t)v33, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v34 = 40;
LABEL_50:
          unsigned int v35 = *(void **)(a1 + v34);
          *(void *)(a1 + v34) = v33;

          --v7;
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_113:
          if (!(v12 & 1 | (v7 != 0))) {
            goto LABEL_114;
          }
          continue;
        }
LABEL_129:

        char v67 = 0;
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_123:
        *(unsigned char *)(a1 + 76) |= 0x10u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        *(unsigned char *)(a1 + 76) |= 0x40u;
        if (v67)
        {
LABEL_124:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_125;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_125:
            unint64_t v70 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if (!v28) {
          goto LABEL_86;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) == 0)
        {
          uint64_t v36 = PBReaderReadString();
          uint64_t v37 = *(void **)(a1 + 48);
          *(void *)(a1 + 48) = v36;

          --v7;
          goto LABEL_113;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_122:
          char v67 = 0;
          goto LABEL_123;
        }
        char v66 = 2 * *(unsigned char *)(a1 + 76);
        goto LABEL_112;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_86;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 76) |= 8u;
        while (2)
        {
          uint64_t v41 = *v14;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v16) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v24 = v39++ >= 9;
              if (v24)
              {
                LODWORD(v40) = 0;
                goto LABEL_91;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v40) = 0;
        }
LABEL_91:
        uint64_t v64 = 72;
        goto LABEL_105;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_86;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (2)
        {
          uint64_t v48 = *v14;
          uint64_t v49 = *(void *)(v3 + v48);
          unint64_t v50 = v49 + 1;
          if (v49 == -1 || v50 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v51 = *(unsigned char *)(*(void *)(v3 + *v16) + v49);
            *(void *)(v3 + v48) = v50;
            v47 |= (unint64_t)(v51 & 0x7F) << v45;
            if (v51 < 0)
            {
              v45 += 7;
              BOOL v24 = v46++ >= 9;
              if (v24)
              {
                uint64_t v47 = 0;
                goto LABEL_95;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v47 = 0;
        }
LABEL_95:
        uint64_t v65 = 32;
        goto LABEL_100;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_86;
        }
        char v52 = 0;
        unsigned int v53 = 0;
        uint64_t v47 = 0;
        *(unsigned char *)(a1 + 76) |= 1u;
        while (2)
        {
          uint64_t v54 = *v14;
          uint64_t v55 = *(void *)(v3 + v54);
          unint64_t v56 = v55 + 1;
          if (v55 == -1 || v56 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v57 = *(unsigned char *)(*(void *)(v3 + *v16) + v55);
            *(void *)(v3 + v54) = v56;
            v47 |= (unint64_t)(v57 & 0x7F) << v52;
            if (v57 < 0)
            {
              v52 += 7;
              BOOL v24 = v53++ >= 9;
              if (v24)
              {
                uint64_t v47 = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v47 = 0;
        }
LABEL_99:
        uint64_t v65 = 24;
LABEL_100:
        *(void *)(a1 + v65) = v47;
        goto LABEL_113;
      case 7:
        if (v8)
        {
          char v58 = 0;
          unsigned int v59 = 0;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 76) |= 4u;
          while (1)
          {
            uint64_t v60 = *v14;
            uint64_t v61 = *(void *)(v3 + v60);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(v3 + *v6)) {
              break;
            }
            char v63 = *(unsigned char *)(*(void *)(v3 + *v16) + v61);
            *(void *)(v3 + v60) = v62;
            v40 |= (unint64_t)(v63 & 0x7F) << v58;
            if ((v63 & 0x80) == 0) {
              goto LABEL_102;
            }
            v58 += 7;
            BOOL v24 = v59++ >= 9;
            if (v24)
            {
              LODWORD(v40) = 0;
              goto LABEL_104;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_102:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v40) = 0;
          }
LABEL_104:
          uint64_t v64 = 68;
LABEL_105:
          *(_DWORD *)(a1 + v64) = v40;
        }
        else
        {
LABEL_86:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_122;
          }
        }
        goto LABEL_113;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_122;
        }
        goto LABEL_113;
    }
  }
}

void sub_18A354F04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A355074(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A355DFC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateElementImpressionReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateElementImpressionReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgStateElementImpressionReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgStateElementImpressionReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateElementImpressionReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A355FB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateElementImpressionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateElementImpressionReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A35601C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A35625C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateElementImpressionIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 0xFu;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A356690(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A356C30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateExperimentsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = ((*(unsigned __int8 *)(a1 + 60) >> 1) & 1)
      + (*(unsigned char *)(a1 + 60) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 3) & 1)
      + ((*(unsigned __int8 *)(a1 + 60) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        unsigned __int8 v14 = v10 | (v11 > 2);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        BOOL v16 = v14;
        char v48 = (v15 == 0) | v14;
        char v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        BOOL v47 = v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_73;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      if (v21++ >= 9)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_73:
      if (v16)
      {
        char v42 = 1;
        goto LABEL_85;
      }
      if (v15)
      {
        while (1)
        {
          int v43 = *v15++;
          char v44 = 8;
          switch(v43)
          {
            case 0:
              goto LABEL_86;
            case 1:
              goto LABEL_80;
            case 2:
              char v44 = 2;
              goto LABEL_80;
            case 3:
              char v44 = 4;
              goto LABEL_80;
            case 4:
              char v44 = 1;
LABEL_80:
              *(unsigned char *)(a1 + 60) |= v44;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_86;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v16;
    if ((v48 & 1) == 0)
    {
      BOOL v32 = v15;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 60) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_82;
          }
          uint64_t v36 = objc_alloc_init(GEOABExperimentAssignment);
          if (GEOABExperimentAssignmentReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            uint64_t v37 = 40;
            goto LABEL_59;
          }
          goto LABEL_83;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_82;
        }
        char v41 = 16 * *(unsigned char *)(a1 + 60);
        goto LABEL_68;
      case 2:
        if (!v31) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 60) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          char v41 = *(unsigned char *)(a1 + 60) << 6;
          goto LABEL_68;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v36 = objc_alloc_init(GEOABClientConfig);
        if (!GEOABClientConfigReadAllFrom((uint64_t)v36, (void *)v3, v9 & 1)) {
          goto LABEL_83;
        }
        PBReaderRecallMark();
        uint64_t v37 = 24;
        goto LABEL_59;
      case 3:
        if (!v31) {
          goto LABEL_60;
        }
        if ((*(unsigned char *)(a1 + 60) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_82;
          }
          char v41 = 32 * *(unsigned char *)(a1 + 60);
LABEL_68:
          v7 += v41 >> 7;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v36 = objc_alloc_init(GEOPDDatasetABStatus);
        if (!GEOPDDatasetABStatusReadAllFrom((uint64_t)v36, (void *)v3)) {
          goto LABEL_83;
        }
        PBReaderRecallMark();
        uint64_t v37 = 32;
        goto LABEL_59;
      case 4:
        if (!v31)
        {
LABEL_60:
          char v40 = PBReaderSkipValueWithTag();
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v40 & 1) == 0)
          {
LABEL_81:
            char v42 = 0;
            goto LABEL_85;
          }
LABEL_72:
          if (!v16 && v7 == 0) {
            goto LABEL_73;
          }
          continue;
        }
        if (*(unsigned char *)(a1 + 60))
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_82:
            char v42 = 0;
            goto LABEL_84;
          }
          v7 -= *(unsigned char *)(a1 + 60) & 1;
          goto LABEL_71;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_82;
        }
        uint64_t v36 = objc_alloc_init(GEOAbAssignInfo);
        if (GEOAbAssignInfoReadAllFrom((uint64_t)v36, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v37 = 16;
LABEL_59:
          unsigned int v39 = *(void **)(a1 + v37);
          *(void *)(a1 + v37) = v36;

          --v7;
          BOOL v16 = v47;
LABEL_71:
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_72;
        }
LABEL_83:

        char v42 = 0;
        BOOL v16 = v47;
LABEL_84:
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_85:
        *(unsigned char *)(a1 + 60) |= 8u;
        *(unsigned char *)(a1 + 60) |= 2u;
        *(unsigned char *)(a1 + 60) |= 4u;
        *(unsigned char *)(a1 + 60) |= 1u;
        if (v42)
        {
LABEL_86:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_87;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v16)
          {
LABEL_87:
            char v45 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v38 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v38) {
          goto LABEL_81;
        }
        goto LABEL_72;
    }
  }
}

void sub_18A3573DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A357558(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateExperimentsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 24) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  BOOL v2 = *(void **)(a1 + 16);

  return [v2 readAll:1];
}

unint64_t GEOLogMsgStateExperimentsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateExperimentsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStateExperimentsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStateExperimentsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateExperimentsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStateExperimentsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A357CF0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateExperimentsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateExperimentsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A357D54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStateExperimentsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v2 = *(unsigned char *)(a1 + 60);
  if ((v2 & 0x10) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 60) & 8) != 0)
  {
    if (GEOABExperimentAssignmentIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 2) != 0)
  {
    if (GEOABClientConfigIsDirty(*(os_unfair_lock_s **)(a1 + 24))) {
      return 1;
    }
    char v2 = *(unsigned char *)(a1 + 60);
  }
  if ((v2 & 4) == 0) {
    return v2 & 1;
  }
  return 1;
}

os_unfair_lock_s *GEOLogMsgStateExperimentsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgStateExperimentsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 14);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A358100(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateExtensionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 12) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppInstalled;
                goto LABEL_54;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                uint64_t v20 = 0;
                char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppInstalled;
                goto LABEL_57;
              }
            }
            char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppInstalled;
            goto LABEL_55;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 12) |= 1u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppEnabled;
                goto LABEL_54;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppEnabled;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasRideBookingAppEnabled;
            goto LABEL_55;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 12) |= 8u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppInstalled;
                goto LABEL_54;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppInstalled;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppInstalled;
            goto LABEL_55;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 12) |= 4u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)&v3[v41];
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)&v3[*v5]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
          *(void *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppEnabled;
            goto LABEL_55;
          }
          v39 += 7;
          BOOL v25 = v40++ > 8;
          if (v25)
          {
            uint64_t v20 = 0;
            char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppEnabled;
            goto LABEL_57;
          }
        }
        char v26 = &OBJC_IVAR___GEOLogMsgStateExtension__hasTableBookingAppEnabled;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_57:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A358DD0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateExtensionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateExtensionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A358E44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateImpressionObjectReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v18 = objc_alloc_init(GEOImpressionObjectId);
          if (!GEOImpressionObjectIdReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          unsigned int v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A35989C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateImpressionObjectReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateImpressionObjectReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A359900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateLookAroundViewReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_67;
            }
            BOOL v20 = objc_alloc_init(GEOLocation);
            if (GEOLocationReadAllFrom((uint64_t)v20, v5, a3))
            {
              PBReaderRecallMark();
              uint64_t v21 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v20;

              continue;
            }

            goto LABEL_67;
          case 2u:
            char v22 = 0;
            unsigned int v23 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v25 = *v6;
              uint64_t v26 = *(void *)&v5[v25];
              unint64_t v27 = v26 + 1;
              if (v26 == -1 || v27 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v28 = *(unsigned char *)(*(void *)&v5[*v9] + v26);
                *(void *)&v5[v25] = v27;
                v24 |= (unint64_t)(v28 & 0x7F) << v22;
                if (v28 < 0)
                {
                  v22 += 7;
                  BOOL v17 = v23++ >= 9;
                  if (v17)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_52;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v24) = 0;
            }
LABEL_52:
            uint64_t v45 = 24;
            goto LABEL_57;
          case 3u:
            *(unsigned char *)(a1 + 36) |= 1u;
            uint64_t v29 = *v6;
            unint64_t v30 = *(void *)&v5[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&v5[*v7])
            {
              uint64_t v31 = *(void *)(*(void *)&v5[*v9] + v30);
              *(void *)&v5[v29] = v30 + 8;
            }
            else
            {
              v5[*v8] = 1;
              uint64_t v31 = 0;
            }
            *(void *)(a1 + 16) = v31;
            continue;
          case 4u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v24 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v34 = *v6;
              uint64_t v35 = *(void *)&v5[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v5[*v9] + v35);
                *(void *)&v5[v34] = v36;
                v24 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  BOOL v17 = v33++ >= 9;
                  if (v17)
                  {
                    LODWORD(v24) = 0;
                    goto LABEL_56;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              LODWORD(v24) = 0;
            }
LABEL_56:
            uint64_t v45 = 28;
LABEL_57:
            *(_DWORD *)(a1 + v45) = v24;
            continue;
          case 5u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_67;
            }
            continue;
        }
        while (1)
        {
          uint64_t v41 = *v6;
          uint64_t v42 = *(void *)&v5[v41];
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)&v5[*v7]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v5[*v9] + v42);
          *(void *)&v5[v41] = v43;
          v40 |= (unint64_t)(v44 & 0x7F) << v38;
          if ((v44 & 0x80) == 0) {
            goto LABEL_59;
          }
          v38 += 7;
          BOOL v17 = v39++ >= 9;
          if (v17)
          {
            uint64_t v40 = 0;
            goto LABEL_61;
          }
        }
        v5[*v8] = 1;
LABEL_59:
        if (v5[*v8]) {
          uint64_t v40 = 0;
        }
LABEL_61:
        *(unsigned char *)(a1 + 32) = v40 != 0;
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v46 = v5[*v8] == 0;
  }
  else
  {
LABEL_67:
    BOOL v46 = 0;
  }
  objc_sync_exit(v5);

  return v46;
}

void sub_18A35A704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateLookAroundViewReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateLookAroundViewReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A35A77C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A35B02C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateMapLaunchReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 72)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFAFFFCFFFBFFFDLL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1) {
    uint64_t v13 = 0;
  }
  else {
    uint64_t v13 = a3;
  }
  uint64_t v14 = (int *)MEMORY[0x1E4F940E8];
  unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
  char v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_103;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_103:
      if (v12)
      {
        char v60 = 1;
        goto LABEL_112;
      }
      if (v13)
      {
        while (1)
        {
          int v61 = *v13++;
          char v62 = 32;
          switch(v61)
          {
            case 0:
              goto LABEL_113;
            case 1:
              goto LABEL_110;
            case 2:
              char v62 = 8;
              goto LABEL_110;
            case 3:
              char v62 = 16;
              goto LABEL_110;
            case 5:
              char v62 = 64;
LABEL_110:
              *(unsigned char *)(a1 + 72) |= v62;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_113;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if (!v28) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x20) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 32;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        char v59 = 4 * *(unsigned char *)(a1 + 72);
        goto LABEL_100;
      case 2:
        if (!v28) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 16;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        char v59 = 16 * *(unsigned char *)(a1 + 72);
        goto LABEL_100;
      case 3:
        if (!v28) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x10) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 24;
          goto LABEL_60;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        char v59 = 8 * *(unsigned char *)(a1 + 72);
        goto LABEL_100;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_77;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 72) |= 4u;
        while (2)
        {
          uint64_t v39 = *v14;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v42 = *(unsigned char *)(*(void *)(v3 + *v16) + v40);
            *(void *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v24 = v37++ >= 9;
              if (v24)
              {
                uint64_t v38 = 0;
                goto LABEL_82;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          uint64_t v38 = 0;
        }
LABEL_82:
        *(unsigned char *)(a1 + 68) = v38 != 0;
        goto LABEL_102;
      case 5:
        if (!v28) {
          goto LABEL_77;
        }
        if ((*(unsigned char *)(a1 + 72) & 0x40) == 0)
        {
          uint64_t v33 = PBReaderReadString();
          uint64_t v34 = 40;
LABEL_60:
          unint64_t v43 = *(void **)(a1 + v34);
          *(void *)(a1 + v34) = v33;

          --v8;
          goto LABEL_101;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v59 = 2 * *(unsigned char *)(a1 + 72);
LABEL_100:
          v8 += v59 >> 7;
LABEL_101:
          unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_102:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_103;
          }
          continue;
        }
LABEL_118:
        char v60 = 0;
        unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_112:
        *(unsigned char *)(a1 + 72) |= 0x20u;
        *(unsigned char *)(a1 + 72) |= 8u;
        *(unsigned char *)(a1 + 72) |= 0x10u;
        *(unsigned char *)(a1 + 72) |= 0x40u;
        if (v60)
        {
LABEL_113:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_114;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_114:
            char v63 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_77;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v46 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v47 = *v14;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v16) + v48);
            *(void *)(v3 + v47) = v49;
            v46 |= (unint64_t)(v50 & 0x7F) << v44;
            if (v50 < 0)
            {
              v44 += 7;
              BOOL v24 = v45++ >= 9;
              if (v24)
              {
                LODWORD(v46) = 0;
                goto LABEL_86;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v46) = 0;
        }
LABEL_86:
        uint64_t v58 = 64;
        goto LABEL_91;
      case 7:
        if (v7)
        {
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v46 = 0;
          *(unsigned char *)(a1 + 72) |= 1u;
          while (1)
          {
            uint64_t v53 = *v14;
            uint64_t v54 = *(void *)(v3 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(v3 + *v6)) {
              break;
            }
            char v56 = *(unsigned char *)(*(void *)(v3 + *v16) + v54);
            *(void *)(v3 + v53) = v55;
            v46 |= (unint64_t)(v56 & 0x7F) << v51;
            if ((v56 & 0x80) == 0) {
              goto LABEL_88;
            }
            v51 += 7;
            BOOL v24 = v52++ >= 9;
            if (v24)
            {
              LODWORD(v46) = 0;
              goto LABEL_90;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_88:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v46) = 0;
          }
LABEL_90:
          uint64_t v58 = 60;
LABEL_91:
          *(_DWORD *)(a1 + v58) = v46;
        }
        else
        {
LABEL_77:
          char v57 = PBReaderSkipValueWithTag();
          unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v57 & 1) == 0)
          {
LABEL_111:
            char v60 = 0;
            goto LABEL_112;
          }
        }
        goto LABEL_102;
      default:
        int v35 = PBReaderSkipValueWithTag();
        unint64_t v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v35) {
          goto LABEL_111;
        }
        goto LABEL_102;
    }
  }
}

void sub_18A35B8E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A35BA50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A35BC38(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A35D968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateMapLaunchReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateMapLaunchReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgStateMapLaunchReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgStateMapLaunchReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateMapLaunchReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A35DAF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateMapLaunchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateMapLaunchReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A35DB5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A35DD88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapLaunchIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = *(unsigned __int8 *)(a1 + 72) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A35E190(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapRestoreReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v18 = objc_alloc_init(GEOTargetLayout);
          if (!GEOTargetLayoutReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addTargetLayout:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18A35ED20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapRestoreReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapRestoreReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A35ED84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTargetLayoutIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_48;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_48;
      }
      unint64_t v16 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v16 == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v28 = 0;
        while (1)
        {
          uint64_t v29 = *v2;
          uint64_t v30 = *(void *)&a1[v29];
          unint64_t v31 = v30 + 1;
          if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
            goto LABEL_45;
          }
          int v32 = *(char *)(*(void *)&a1[*v5] + v30);
          *(void *)&a1[v29] = v31;
          if (v32 < 0)
          {
            BOOL v22 = v28++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
      }
      if (v16 == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_50;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0)
          {
            BOOL v22 = v17++ > 8;
            if (!v22) {
              continue;
            }
          }
          goto LABEL_47;
        }
LABEL_45:
        a1[*v4] = 1;
        goto LABEL_47;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_50:
        BOOL v33 = 0;
        goto LABEL_49;
      }
LABEL_47:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_48;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_50;
    }
    unsigned int v23 = 0;
    while (1)
    {
      uint64_t v24 = *v2;
      uint64_t v25 = *(void *)&a1[v24];
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
        goto LABEL_45;
      }
      int v27 = *(char *)(*(void *)&a1[*v5] + v25);
      *(void *)&a1[v24] = v26;
      if (v27 < 0)
      {
        BOOL v22 = v23++ > 8;
        if (!v22) {
          continue;
        }
      }
      goto LABEL_47;
    }
  }
LABEL_48:
  BOOL v33 = a1[*v4] == 0;
LABEL_49:
  PBReaderRecallMark();
  return v33;
}

BOOL GEOLogMsgStateMapSettingsReadAllFrom(_DWORD *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            a1[15] |= 0x10u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_208;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_210;
              }
            }
            v3[*v6] = 1;
LABEL_208:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_210:
            uint64_t v196 = 8;
            goto LABEL_283;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            a1[15] |= 0x800u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_214;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_214:
            BOOL v197 = v27 != 0;
            uint64_t v198 = 45;
            goto LABEL_312;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            a1[15] |= 0x100u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_218;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_218:
            BOOL v197 = v34 != 0;
            uint64_t v198 = 42;
            goto LABEL_312;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            a1[15] |= 0x40000u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    uint64_t v41 = 0;
                    goto LABEL_222;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v41 = 0;
            }
LABEL_222:
            BOOL v197 = v41 != 0;
            uint64_t v198 = 52;
            goto LABEL_312;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            a1[15] |= 0x200000u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
                *(void *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  BOOL v15 = v47++ >= 9;
                  if (v15)
                  {
                    uint64_t v48 = 0;
                    goto LABEL_226;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v48 = 0;
            }
LABEL_226:
            BOOL v197 = v48 != 0;
            uint64_t v198 = 55;
            goto LABEL_312;
          case 6u:
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v20 = 0;
            a1[15] |= 8u;
            while (2)
            {
              uint64_t v55 = *v4;
              uint64_t v56 = *(void *)&v3[v55];
              unint64_t v57 = v56 + 1;
              if (v56 == -1 || v57 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v58 = *(unsigned char *)(*(void *)&v3[*v7] + v56);
                *(void *)&v3[v55] = v57;
                v20 |= (unint64_t)(v58 & 0x7F) << v53;
                if (v58 < 0)
                {
                  v53 += 7;
                  BOOL v15 = v54++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_230;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_230:
            uint64_t v196 = 7;
            goto LABEL_283;
          case 7u:
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            a1[15] |= 0x100000u;
            while (2)
            {
              uint64_t v62 = *v4;
              uint64_t v63 = *(void *)&v3[v62];
              unint64_t v64 = v63 + 1;
              if (v63 == -1 || v64 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v65 = *(unsigned char *)(*(void *)&v3[*v7] + v63);
                *(void *)&v3[v62] = v64;
                v61 |= (unint64_t)(v65 & 0x7F) << v59;
                if (v65 < 0)
                {
                  v59 += 7;
                  BOOL v15 = v60++ >= 9;
                  if (v15)
                  {
                    uint64_t v61 = 0;
                    goto LABEL_234;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v61 = 0;
            }
LABEL_234:
            BOOL v197 = v61 != 0;
            uint64_t v198 = 54;
            goto LABEL_312;
          case 8u:
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            a1[15] |= 0x20000u;
            while (2)
            {
              uint64_t v69 = *v4;
              uint64_t v70 = *(void *)&v3[v69];
              unint64_t v71 = v70 + 1;
              if (v70 == -1 || v71 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v72 = *(unsigned char *)(*(void *)&v3[*v7] + v70);
                *(void *)&v3[v69] = v71;
                v68 |= (unint64_t)(v72 & 0x7F) << v66;
                if (v72 < 0)
                {
                  v66 += 7;
                  BOOL v15 = v67++ >= 9;
                  if (v15)
                  {
                    uint64_t v68 = 0;
                    goto LABEL_238;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v68 = 0;
            }
LABEL_238:
            BOOL v197 = v68 != 0;
            uint64_t v198 = 51;
            goto LABEL_312;
          case 9u:
            char v73 = 0;
            unsigned int v74 = 0;
            uint64_t v75 = 0;
            a1[15] |= 0x400000u;
            while (2)
            {
              uint64_t v76 = *v4;
              uint64_t v77 = *(void *)&v3[v76];
              unint64_t v78 = v77 + 1;
              if (v77 == -1 || v78 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v79 = *(unsigned char *)(*(void *)&v3[*v7] + v77);
                *(void *)&v3[v76] = v78;
                v75 |= (unint64_t)(v79 & 0x7F) << v73;
                if (v79 < 0)
                {
                  v73 += 7;
                  BOOL v15 = v74++ >= 9;
                  if (v15)
                  {
                    uint64_t v75 = 0;
                    goto LABEL_242;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v75 = 0;
            }
LABEL_242:
            BOOL v197 = v75 != 0;
            uint64_t v198 = 56;
            goto LABEL_312;
          case 0xAu:
            char v80 = 0;
            unsigned int v81 = 0;
            uint64_t v82 = 0;
            a1[15] |= 0x80000u;
            while (2)
            {
              uint64_t v83 = *v4;
              uint64_t v84 = *(void *)&v3[v83];
              unint64_t v85 = v84 + 1;
              if (v84 == -1 || v85 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v86 = *(unsigned char *)(*(void *)&v3[*v7] + v84);
                *(void *)&v3[v83] = v85;
                v82 |= (unint64_t)(v86 & 0x7F) << v80;
                if (v86 < 0)
                {
                  v80 += 7;
                  BOOL v15 = v81++ >= 9;
                  if (v15)
                  {
                    uint64_t v82 = 0;
                    goto LABEL_246;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v82 = 0;
            }
LABEL_246:
            BOOL v197 = v82 != 0;
            uint64_t v198 = 53;
            goto LABEL_312;
          case 0xBu:
            char v87 = 0;
            unsigned int v88 = 0;
            uint64_t v89 = 0;
            a1[15] |= 0x200u;
            while (2)
            {
              uint64_t v90 = *v4;
              uint64_t v91 = *(void *)&v3[v90];
              unint64_t v92 = v91 + 1;
              if (v91 == -1 || v92 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v93 = *(unsigned char *)(*(void *)&v3[*v7] + v91);
                *(void *)&v3[v90] = v92;
                v89 |= (unint64_t)(v93 & 0x7F) << v87;
                if (v93 < 0)
                {
                  v87 += 7;
                  BOOL v15 = v88++ >= 9;
                  if (v15)
                  {
                    uint64_t v89 = 0;
                    goto LABEL_250;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v89 = 0;
            }
LABEL_250:
            BOOL v197 = v89 != 0;
            uint64_t v198 = 43;
            goto LABEL_312;
          case 0xCu:
            char v94 = 0;
            unsigned int v95 = 0;
            uint64_t v96 = 0;
            a1[15] |= 0x400u;
            while (2)
            {
              uint64_t v97 = *v4;
              uint64_t v98 = *(void *)&v3[v97];
              unint64_t v99 = v98 + 1;
              if (v98 == -1 || v99 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v100 = *(unsigned char *)(*(void *)&v3[*v7] + v98);
                *(void *)&v3[v97] = v99;
                v96 |= (unint64_t)(v100 & 0x7F) << v94;
                if (v100 < 0)
                {
                  v94 += 7;
                  BOOL v15 = v95++ >= 9;
                  if (v15)
                  {
                    uint64_t v96 = 0;
                    goto LABEL_254;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v96 = 0;
            }
LABEL_254:
            BOOL v197 = v96 != 0;
            uint64_t v198 = 44;
            goto LABEL_312;
          case 0xDu:
            char v101 = 0;
            unsigned int v102 = 0;
            uint64_t v103 = 0;
            a1[15] |= 0x80u;
            while (2)
            {
              uint64_t v104 = *v4;
              uint64_t v105 = *(void *)&v3[v104];
              unint64_t v106 = v105 + 1;
              if (v105 == -1 || v106 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v107 = *(unsigned char *)(*(void *)&v3[*v7] + v105);
                *(void *)&v3[v104] = v106;
                v103 |= (unint64_t)(v107 & 0x7F) << v101;
                if (v107 < 0)
                {
                  v101 += 7;
                  BOOL v15 = v102++ >= 9;
                  if (v15)
                  {
                    uint64_t v103 = 0;
                    goto LABEL_258;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v103 = 0;
            }
LABEL_258:
            BOOL v197 = v103 != 0;
            uint64_t v198 = 41;
            goto LABEL_312;
          case 0xEu:
            char v108 = 0;
            unsigned int v109 = 0;
            uint64_t v20 = 0;
            a1[15] |= 4u;
            while (2)
            {
              uint64_t v110 = *v4;
              uint64_t v111 = *(void *)&v3[v110];
              unint64_t v112 = v111 + 1;
              if (v111 == -1 || v112 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v113 = *(unsigned char *)(*(void *)&v3[*v7] + v111);
                *(void *)&v3[v110] = v112;
                v20 |= (unint64_t)(v113 & 0x7F) << v108;
                if (v113 < 0)
                {
                  v108 += 7;
                  BOOL v15 = v109++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_262;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_262:
            uint64_t v196 = 6;
            goto LABEL_283;
          case 0xFu:
            char v114 = 0;
            unsigned int v115 = 0;
            uint64_t v116 = 0;
            a1[15] |= 0x10000u;
            while (2)
            {
              uint64_t v117 = *v4;
              uint64_t v118 = *(void *)&v3[v117];
              unint64_t v119 = v118 + 1;
              if (v118 == -1 || v119 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v120 = *(unsigned char *)(*(void *)&v3[*v7] + v118);
                *(void *)&v3[v117] = v119;
                v116 |= (unint64_t)(v120 & 0x7F) << v114;
                if (v120 < 0)
                {
                  v114 += 7;
                  BOOL v15 = v115++ >= 9;
                  if (v15)
                  {
                    uint64_t v116 = 0;
                    goto LABEL_266;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v116 = 0;
            }
LABEL_266:
            BOOL v197 = v116 != 0;
            uint64_t v198 = 50;
            goto LABEL_312;
          case 0x10u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_316;
            }
            char v121 = objc_alloc_init(GEONavVoiceGuidanceSettings);
            if (!GEONavVoiceGuidanceSettingsReadAllFrom((uint64_t)v121, v3))
            {

              goto LABEL_316;
            }
            PBReaderRecallMark();
            objc_msgSend(a1, "addNavVoiceSettings:", v121, 0, 0);

LABEL_313:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_314;
            }
            break;
          case 0x11u:
            char v122 = 0;
            unsigned int v123 = 0;
            uint64_t v124 = 0;
            a1[15] |= 0x40u;
            while (2)
            {
              uint64_t v125 = *v4;
              uint64_t v126 = *(void *)&v3[v125];
              unint64_t v127 = v126 + 1;
              if (v126 == -1 || v127 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v128 = *(unsigned char *)(*(void *)&v3[*v7] + v126);
                *(void *)&v3[v125] = v127;
                v124 |= (unint64_t)(v128 & 0x7F) << v122;
                if (v128 < 0)
                {
                  v122 += 7;
                  BOOL v15 = v123++ >= 9;
                  if (v15)
                  {
                    uint64_t v124 = 0;
                    goto LABEL_270;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v124 = 0;
            }
LABEL_270:
            BOOL v197 = v124 != 0;
            uint64_t v198 = 40;
            goto LABEL_312;
          case 0x12u:
            char v129 = 0;
            unsigned int v130 = 0;
            uint64_t v20 = 0;
            a1[15] |= 2u;
            while (2)
            {
              uint64_t v131 = *v4;
              uint64_t v132 = *(void *)&v3[v131];
              unint64_t v133 = v132 + 1;
              if (v132 == -1 || v133 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v134 = *(unsigned char *)(*(void *)&v3[*v7] + v132);
                *(void *)&v3[v131] = v133;
                v20 |= (unint64_t)(v134 & 0x7F) << v129;
                if (v134 < 0)
                {
                  v129 += 7;
                  BOOL v15 = v130++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_274;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_274:
            uint64_t v196 = 5;
            goto LABEL_283;
          case 0x13u:
            char v135 = 0;
            unsigned int v136 = 0;
            uint64_t v20 = 0;
            a1[15] |= 0x20u;
            while (2)
            {
              uint64_t v137 = *v4;
              uint64_t v138 = *(void *)&v3[v137];
              unint64_t v139 = v138 + 1;
              if (v138 == -1 || v139 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v140 = *(unsigned char *)(*(void *)&v3[*v7] + v138);
                *(void *)&v3[v137] = v139;
                v20 |= (unint64_t)(v140 & 0x7F) << v135;
                if (v140 < 0)
                {
                  v135 += 7;
                  BOOL v15 = v136++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_278;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_278:
            uint64_t v196 = 9;
            goto LABEL_283;
          case 0x14u:
            char v141 = 0;
            unsigned int v142 = 0;
            uint64_t v20 = 0;
            a1[15] |= 1u;
            while (2)
            {
              uint64_t v143 = *v4;
              uint64_t v144 = *(void *)&v3[v143];
              unint64_t v145 = v144 + 1;
              if (v144 == -1 || v145 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v146 = *(unsigned char *)(*(void *)&v3[*v7] + v144);
                *(void *)&v3[v143] = v145;
                v20 |= (unint64_t)(v146 & 0x7F) << v141;
                if (v146 < 0)
                {
                  v141 += 7;
                  BOOL v15 = v142++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_282;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_282:
            uint64_t v196 = 4;
LABEL_283:
            a1[v196] = v20;
            goto LABEL_313;
          case 0x15u:
            char v147 = 0;
            unsigned int v148 = 0;
            uint64_t v149 = 0;
            a1[15] |= 0x1000000u;
            while (2)
            {
              uint64_t v150 = *v4;
              uint64_t v151 = *(void *)&v3[v150];
              unint64_t v152 = v151 + 1;
              if (v151 == -1 || v152 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v153 = *(unsigned char *)(*(void *)&v3[*v7] + v151);
                *(void *)&v3[v150] = v152;
                v149 |= (unint64_t)(v153 & 0x7F) << v147;
                if (v153 < 0)
                {
                  v147 += 7;
                  BOOL v15 = v148++ >= 9;
                  if (v15)
                  {
                    uint64_t v149 = 0;
                    goto LABEL_287;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v149 = 0;
            }
LABEL_287:
            BOOL v197 = v149 != 0;
            uint64_t v198 = 58;
            goto LABEL_312;
          case 0x16u:
            char v154 = 0;
            unsigned int v155 = 0;
            uint64_t v156 = 0;
            a1[15] |= 0x800000u;
            while (2)
            {
              uint64_t v157 = *v4;
              uint64_t v158 = *(void *)&v3[v157];
              unint64_t v159 = v158 + 1;
              if (v158 == -1 || v159 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v160 = *(unsigned char *)(*(void *)&v3[*v7] + v158);
                *(void *)&v3[v157] = v159;
                v156 |= (unint64_t)(v160 & 0x7F) << v154;
                if (v160 < 0)
                {
                  v154 += 7;
                  BOOL v15 = v155++ >= 9;
                  if (v15)
                  {
                    uint64_t v156 = 0;
                    goto LABEL_291;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v156 = 0;
            }
LABEL_291:
            BOOL v197 = v156 != 0;
            uint64_t v198 = 57;
            goto LABEL_312;
          case 0x17u:
            char v161 = 0;
            unsigned int v162 = 0;
            uint64_t v163 = 0;
            a1[15] |= 0x2000000u;
            while (2)
            {
              uint64_t v164 = *v4;
              uint64_t v165 = *(void *)&v3[v164];
              unint64_t v166 = v165 + 1;
              if (v165 == -1 || v166 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v167 = *(unsigned char *)(*(void *)&v3[*v7] + v165);
                *(void *)&v3[v164] = v166;
                v163 |= (unint64_t)(v167 & 0x7F) << v161;
                if (v167 < 0)
                {
                  v161 += 7;
                  BOOL v15 = v162++ >= 9;
                  if (v15)
                  {
                    uint64_t v163 = 0;
                    goto LABEL_295;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v163 = 0;
            }
LABEL_295:
            BOOL v197 = v163 != 0;
            uint64_t v198 = 59;
            goto LABEL_312;
          case 0x18u:
            char v168 = 0;
            unsigned int v169 = 0;
            uint64_t v170 = 0;
            a1[15] |= 0x2000u;
            while (2)
            {
              uint64_t v171 = *v4;
              uint64_t v172 = *(void *)&v3[v171];
              unint64_t v173 = v172 + 1;
              if (v172 == -1 || v173 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v174 = *(unsigned char *)(*(void *)&v3[*v7] + v172);
                *(void *)&v3[v171] = v173;
                v170 |= (unint64_t)(v174 & 0x7F) << v168;
                if (v174 < 0)
                {
                  v168 += 7;
                  BOOL v15 = v169++ >= 9;
                  if (v15)
                  {
                    uint64_t v170 = 0;
                    goto LABEL_299;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v170 = 0;
            }
LABEL_299:
            BOOL v197 = v170 != 0;
            uint64_t v198 = 47;
            goto LABEL_312;
          case 0x19u:
            char v175 = 0;
            unsigned int v176 = 0;
            uint64_t v177 = 0;
            a1[15] |= 0x4000u;
            while (2)
            {
              uint64_t v178 = *v4;
              uint64_t v179 = *(void *)&v3[v178];
              unint64_t v180 = v179 + 1;
              if (v179 == -1 || v180 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v181 = *(unsigned char *)(*(void *)&v3[*v7] + v179);
                *(void *)&v3[v178] = v180;
                v177 |= (unint64_t)(v181 & 0x7F) << v175;
                if (v181 < 0)
                {
                  v175 += 7;
                  BOOL v15 = v176++ >= 9;
                  if (v15)
                  {
                    uint64_t v177 = 0;
                    goto LABEL_303;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v177 = 0;
            }
LABEL_303:
            BOOL v197 = v177 != 0;
            uint64_t v198 = 48;
            goto LABEL_312;
          case 0x1Au:
            char v182 = 0;
            unsigned int v183 = 0;
            uint64_t v184 = 0;
            a1[15] |= 0x1000u;
            while (2)
            {
              uint64_t v185 = *v4;
              uint64_t v186 = *(void *)&v3[v185];
              unint64_t v187 = v186 + 1;
              if (v186 == -1 || v187 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v188 = *(unsigned char *)(*(void *)&v3[*v7] + v186);
                *(void *)&v3[v185] = v187;
                v184 |= (unint64_t)(v188 & 0x7F) << v182;
                if (v188 < 0)
                {
                  v182 += 7;
                  BOOL v15 = v183++ >= 9;
                  if (v15)
                  {
                    uint64_t v184 = 0;
                    goto LABEL_307;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v184 = 0;
            }
LABEL_307:
            BOOL v197 = v184 != 0;
            uint64_t v198 = 46;
            goto LABEL_312;
          case 0x1Bu:
            char v189 = 0;
            unsigned int v190 = 0;
            uint64_t v191 = 0;
            a1[15] |= 0x8000u;
            while (2)
            {
              uint64_t v192 = *v4;
              uint64_t v193 = *(void *)&v3[v192];
              unint64_t v194 = v193 + 1;
              if (v193 == -1 || v194 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v195 = *(unsigned char *)(*(void *)&v3[*v7] + v193);
                *(void *)&v3[v192] = v194;
                v191 |= (unint64_t)(v195 & 0x7F) << v189;
                if (v195 < 0)
                {
                  v189 += 7;
                  BOOL v15 = v190++ >= 9;
                  if (v15)
                  {
                    uint64_t v191 = 0;
                    goto LABEL_311;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v191 = 0;
            }
LABEL_311:
            BOOL v197 = v191 != 0;
            uint64_t v198 = 49;
LABEL_312:
            *((unsigned char *)a1 + v198) = v197;
            goto LABEL_313;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_316;
            }
            goto LABEL_313;
        }
      }
    }
LABEL_314:
    BOOL v199 = v3[*v6] == 0;
  }
  else
  {
LABEL_316:
    BOOL v199 = 0;
  }
  objc_sync_exit(v3);

  return v199;
}

void sub_18A3634DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapSettingsReadFrom(_DWORD *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3635AC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavVoiceGuidanceSettingsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateMapUIReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_61;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_63;
              }
            }
            v3[*v6] = 1;
LABEL_61:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_63:
            uint64_t v52 = 16;
            goto LABEL_80;
          case 2u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_84;
            }
            unint64_t v25 = objc_alloc_init(GEOMultiTabsState);
            if (!GEOMultiTabsStateReadAllFrom((uint64_t)v25, v3))
            {

              goto LABEL_84;
            }
            PBReaderRecallMark();
            int v26 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v25;

LABEL_81:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_82;
            }
            break;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
                *(void *)&v3[v29] = v31;
                v20 |= (unint64_t)(v32 & 0x7F) << v27;
                if (v32 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_67:
            uint64_t v52 = 20;
            goto LABEL_80;
          case 4u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            *(unsigned char *)(a1 + 36) |= 0x10u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
                *(void *)&v3[v36] = v38;
                v35 |= (unint64_t)(v39 & 0x7F) << v33;
                if (v39 < 0)
                {
                  v33 += 7;
                  BOOL v15 = v34++ >= 9;
                  if (v15)
                  {
                    uint64_t v35 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v35 = 0;
            }
LABEL_71:
            *(unsigned char *)(a1 + 32) = v35 != 0;
            goto LABEL_81;
          case 5u:
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v20 |= (unint64_t)(v45 & 0x7F) << v40;
                if (v45 < 0)
                {
                  v40 += 7;
                  BOOL v15 = v41++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_75:
            uint64_t v52 = 24;
            goto LABEL_80;
          case 6u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            while (2)
            {
              uint64_t v48 = *v4;
              uint64_t v49 = *(void *)&v3[v48];
              unint64_t v50 = v49 + 1;
              if (v49 == -1 || v50 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v51 = *(unsigned char *)(*(void *)&v3[*v7] + v49);
                *(void *)&v3[v48] = v50;
                v20 |= (unint64_t)(v51 & 0x7F) << v46;
                if (v51 < 0)
                {
                  v46 += 7;
                  BOOL v15 = v47++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_79:
            uint64_t v52 = 28;
LABEL_80:
            *(_DWORD *)(a1 + v52) = v20;
            goto LABEL_81;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_84;
            }
            goto LABEL_81;
        }
      }
    }
LABEL_82:
    BOOL v53 = v3[*v6] == 0;
  }
  else
  {
LABEL_84:
    BOOL v53 = 0;
  }
  objc_sync_exit(v3);

  return v53;
}

void sub_18A366364(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapUIReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL v4 = GEOLogMsgStateMapUIReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return v4;
}

void sub_18A3663E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMultiTabsStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateMapUIShownReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_58;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_60;
              }
            }
            v3[*v6] = 1;
LABEL_58:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_60:
            BOOL v53 = v20 != 0;
            uint64_t v54 = 12;
            goto LABEL_73;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 16) |= 0x10u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_64:
            BOOL v53 = v27 != 0;
            uint64_t v54 = 15;
            goto LABEL_73;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(unsigned char *)(a1 + 16) |= 8u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_68:
            BOOL v53 = v34 != 0;
            uint64_t v54 = 14;
            goto LABEL_73;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            *(unsigned char *)(a1 + 16) |= 4u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    uint64_t v41 = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v41 = 0;
            }
LABEL_72:
            BOOL v53 = v41 != 0;
            uint64_t v54 = 13;
LABEL_73:
            *(unsigned char *)(a1 + v54) = v53;
            continue;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 16) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_81;
            }
            continue;
        }
        while (1)
        {
          uint64_t v49 = *v4;
          uint64_t v50 = *(void *)&v3[v49];
          unint64_t v51 = v50 + 1;
          if (v50 == -1 || v51 > *(void *)&v3[*v5]) {
            break;
          }
          char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
          *(void *)&v3[v49] = v51;
          v48 |= (unint64_t)(v52 & 0x7F) << v46;
          if ((v52 & 0x80) == 0) {
            goto LABEL_77;
          }
          v46 += 7;
          BOOL v15 = v47++ >= 9;
          if (v15)
          {
            LODWORD(v48) = 0;
            goto LABEL_79;
          }
        }
        v3[*v6] = 1;
LABEL_77:
        if (v3[*v6]) {
          LODWORD(v48) = 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 8) = v48;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v55 = v3[*v6] == 0;
  }
  else
  {
LABEL_81:
    BOOL v55 = 0;
  }
  objc_sync_exit(v3);

  return v55;
}

void sub_18A367A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapUIShownReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapUIShownReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A367ACC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_101;
            }
            char v18 = objc_alloc_init(GEOMapRegion);
            if (GEOMapRegionReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              unsigned int v19 = *(void **)(a1 + 8);
              *(void *)(a1 + 8) = v18;

              continue;
            }

            goto LABEL_101;
          case 2u:
            *(unsigned char *)(a1 + 52) |= 4u;
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v64 = 32;
            goto LABEL_97;
          case 3u:
            char v23 = 0;
            unsigned int v24 = 0;
            uint64_t v25 = 0;
            *(unsigned char *)(a1 + 52) |= 8u;
            while (2)
            {
              uint64_t v26 = *v4;
              uint64_t v27 = *(void *)&v3[v26];
              unint64_t v28 = v27 + 1;
              if (v27 == -1 || v28 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v29 = *(unsigned char *)(*(void *)&v3[*v7] + v27);
                *(void *)&v3[v26] = v28;
                v25 |= (unint64_t)(v29 & 0x7F) << v23;
                if (v29 < 0)
                {
                  v23 += 7;
                  BOOL v15 = v24++ >= 9;
                  if (v15)
                  {
                    LODWORD(v25) = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v25) = 0;
            }
LABEL_72:
            uint64_t v61 = 40;
            goto LABEL_85;
          case 4u:
            *(unsigned char *)(a1 + 52) |= 2u;
            uint64_t v30 = *v4;
            unint64_t v31 = *(void *)&v3[v30];
            if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v31 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v64 = 24;
            goto LABEL_97;
          case 5u:
            *(unsigned char *)(a1 + 52) |= 1u;
            uint64_t v32 = *v4;
            unint64_t v33 = *(void *)&v3[v32];
            if (v33 <= 0xFFFFFFFFFFFFFFF7 && v33 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v33);
              *(void *)&v3[v32] = v33 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v64 = 16;
LABEL_97:
            *(void *)(a1 + v64) = v22;
            continue;
          case 6u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 52) |= 0x20u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
                *(void *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    uint64_t v36 = 0;
                    goto LABEL_76;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v36 = 0;
            }
LABEL_76:
            BOOL v62 = v36 != 0;
            uint64_t v63 = 48;
            goto LABEL_90;
          case 7u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            *(unsigned char *)(a1 + 52) |= 0x40u;
            while (2)
            {
              uint64_t v44 = *v4;
              uint64_t v45 = *(void *)&v3[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v3[*v7] + v45);
                *(void *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  BOOL v15 = v42++ >= 9;
                  if (v15)
                  {
                    uint64_t v43 = 0;
                    goto LABEL_80;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v43 = 0;
            }
LABEL_80:
            BOOL v62 = v43 != 0;
            uint64_t v63 = 49;
            goto LABEL_90;
          case 8u:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v25 = 0;
            *(unsigned char *)(a1 + 52) |= 0x10u;
            while (2)
            {
              uint64_t v50 = *v4;
              uint64_t v51 = *(void *)&v3[v50];
              unint64_t v52 = v51 + 1;
              if (v51 == -1 || v52 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v53 = *(unsigned char *)(*(void *)&v3[*v7] + v51);
                *(void *)&v3[v50] = v52;
                v25 |= (unint64_t)(v53 & 0x7F) << v48;
                if (v53 < 0)
                {
                  v48 += 7;
                  BOOL v15 = v49++ >= 9;
                  if (v15)
                  {
                    LODWORD(v25) = 0;
                    goto LABEL_84;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v25) = 0;
            }
LABEL_84:
            uint64_t v61 = 44;
LABEL_85:
            *(_DWORD *)(a1 + v61) = v25;
            continue;
          case 9u:
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v56 = 0;
            *(unsigned char *)(a1 + 52) |= 0x80u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_101;
            }
            continue;
        }
        while (1)
        {
          uint64_t v57 = *v4;
          uint64_t v58 = *(void *)&v3[v57];
          unint64_t v59 = v58 + 1;
          if (v58 == -1 || v59 > *(void *)&v3[*v5]) {
            break;
          }
          char v60 = *(unsigned char *)(*(void *)&v3[*v7] + v58);
          *(void *)&v3[v57] = v59;
          v56 |= (unint64_t)(v60 & 0x7F) << v54;
          if ((v60 & 0x80) == 0) {
            goto LABEL_87;
          }
          v54 += 7;
          BOOL v15 = v55++ >= 9;
          if (v15)
          {
            uint64_t v56 = 0;
            goto LABEL_89;
          }
        }
        v3[*v6] = 1;
LABEL_87:
        if (v3[*v6]) {
          uint64_t v56 = 0;
        }
LABEL_89:
        BOOL v62 = v56 != 0;
        uint64_t v63 = 50;
LABEL_90:
        *(unsigned char *)(a1 + v63) = v62;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v65 = v3[*v6] == 0;
  }
  else
  {
LABEL_101:
    BOOL v65 = 0;
  }
  objc_sync_exit(v3);

  return v65;
}

void sub_18A369668(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapViewReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3696F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewLocationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_52;
          }
          uint64_t v26 = objc_alloc_init(GEOTouristInfo);
          if (!GEOTouristInfoReadAllFrom((uint64_t)v26, v3))
          {

            goto LABEL_52;
          }
          PBReaderRecallMark();
          uint64_t v27 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v26;
        }
        else if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_46;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v30 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            uint64_t v30 = 0;
          }
LABEL_48:
          *(unsigned char *)(a1 + 20) = v30 != 0;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 24) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_52;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_52:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18A36AA9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapViewLocationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapViewLocationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A36AB00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsFeaturesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 52) |= 0x400u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_121;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_123;
              }
            }
            v3[*v6] = 1;
LABEL_121:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_123:
            BOOL v107 = v20 != 0;
            uint64_t v108 = 48;
            goto LABEL_160;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(_WORD *)(a1 + 52) |= 0x2000u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_127;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_127:
            BOOL v107 = v27 != 0;
            uint64_t v108 = 51;
            goto LABEL_160;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(_WORD *)(a1 + 52) |= 0x800u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_131;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_131:
            BOOL v107 = v34 != 0;
            uint64_t v108 = 49;
            goto LABEL_160;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 1u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_135;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_135:
            uint64_t v109 = 8;
            goto LABEL_177;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x40u;
            while (2)
            {
              uint64_t v48 = *v4;
              uint64_t v49 = *(void *)&v3[v48];
              unint64_t v50 = v49 + 1;
              if (v49 == -1 || v50 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v51 = *(unsigned char *)(*(void *)&v3[*v7] + v49);
                *(void *)&v3[v48] = v50;
                v41 |= (unint64_t)(v51 & 0x7F) << v46;
                if (v51 < 0)
                {
                  v46 += 7;
                  BOOL v15 = v47++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_139;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_139:
            uint64_t v109 = 32;
            goto LABEL_177;
          case 6u:
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x80u;
            while (2)
            {
              uint64_t v54 = *v4;
              uint64_t v55 = *(void *)&v3[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v57 = *(unsigned char *)(*(void *)&v3[*v7] + v55);
                *(void *)&v3[v54] = v56;
                v41 |= (unint64_t)(v57 & 0x7F) << v52;
                if (v57 < 0)
                {
                  v52 += 7;
                  BOOL v15 = v53++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_143;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_143:
            uint64_t v109 = 36;
            goto LABEL_177;
          case 7u:
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 2u;
            while (2)
            {
              uint64_t v60 = *v4;
              uint64_t v61 = *(void *)&v3[v60];
              unint64_t v62 = v61 + 1;
              if (v61 == -1 || v62 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v63 = *(unsigned char *)(*(void *)&v3[*v7] + v61);
                *(void *)&v3[v60] = v62;
                v41 |= (unint64_t)(v63 & 0x7F) << v58;
                if (v63 < 0)
                {
                  v58 += 7;
                  BOOL v15 = v59++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_147;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_147:
            uint64_t v109 = 12;
            goto LABEL_177;
          case 8u:
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x200u;
            while (2)
            {
              uint64_t v66 = *v4;
              uint64_t v67 = *(void *)&v3[v66];
              unint64_t v68 = v67 + 1;
              if (v67 == -1 || v68 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v69 = *(unsigned char *)(*(void *)&v3[*v7] + v67);
                *(void *)&v3[v66] = v68;
                v41 |= (unint64_t)(v69 & 0x7F) << v64;
                if (v69 < 0)
                {
                  v64 += 7;
                  BOOL v15 = v65++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_151;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_151:
            uint64_t v109 = 44;
            goto LABEL_177;
          case 9u:
            char v70 = 0;
            unsigned int v71 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x100u;
            while (2)
            {
              uint64_t v72 = *v4;
              uint64_t v73 = *(void *)&v3[v72];
              unint64_t v74 = v73 + 1;
              if (v73 == -1 || v74 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v75 = *(unsigned char *)(*(void *)&v3[*v7] + v73);
                *(void *)&v3[v72] = v74;
                v41 |= (unint64_t)(v75 & 0x7F) << v70;
                if (v75 < 0)
                {
                  v70 += 7;
                  BOOL v15 = v71++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_155;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_155:
            uint64_t v109 = 40;
            goto LABEL_177;
          case 0xAu:
            char v76 = 0;
            unsigned int v77 = 0;
            uint64_t v78 = 0;
            *(_WORD *)(a1 + 52) |= 0x1000u;
            while (2)
            {
              uint64_t v79 = *v4;
              uint64_t v80 = *(void *)&v3[v79];
              unint64_t v81 = v80 + 1;
              if (v80 == -1 || v81 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v82 = *(unsigned char *)(*(void *)&v3[*v7] + v80);
                *(void *)&v3[v79] = v81;
                v78 |= (unint64_t)(v82 & 0x7F) << v76;
                if (v82 < 0)
                {
                  v76 += 7;
                  BOOL v15 = v77++ >= 9;
                  if (v15)
                  {
                    uint64_t v78 = 0;
                    goto LABEL_159;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v78 = 0;
            }
LABEL_159:
            BOOL v107 = v78 != 0;
            uint64_t v108 = 50;
LABEL_160:
            *(unsigned char *)(a1 + v108) = v107;
            continue;
          case 0xBu:
            char v83 = 0;
            unsigned int v84 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x20u;
            while (2)
            {
              uint64_t v85 = *v4;
              uint64_t v86 = *(void *)&v3[v85];
              unint64_t v87 = v86 + 1;
              if (v86 == -1 || v87 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v88 = *(unsigned char *)(*(void *)&v3[*v7] + v86);
                *(void *)&v3[v85] = v87;
                v41 |= (unint64_t)(v88 & 0x7F) << v83;
                if (v88 < 0)
                {
                  v83 += 7;
                  BOOL v15 = v84++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_164;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_164:
            uint64_t v109 = 28;
            goto LABEL_177;
          case 0xCu:
            char v89 = 0;
            unsigned int v90 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 0x10u;
            while (2)
            {
              uint64_t v91 = *v4;
              uint64_t v92 = *(void *)&v3[v91];
              unint64_t v93 = v92 + 1;
              if (v92 == -1 || v93 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v94 = *(unsigned char *)(*(void *)&v3[*v7] + v92);
                *(void *)&v3[v91] = v93;
                v41 |= (unint64_t)(v94 & 0x7F) << v89;
                if (v94 < 0)
                {
                  v89 += 7;
                  BOOL v15 = v90++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_168;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_168:
            uint64_t v109 = 24;
            goto LABEL_177;
          case 0xDu:
            char v95 = 0;
            unsigned int v96 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 8u;
            while (2)
            {
              uint64_t v97 = *v4;
              uint64_t v98 = *(void *)&v3[v97];
              unint64_t v99 = v98 + 1;
              if (v98 == -1 || v99 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v100 = *(unsigned char *)(*(void *)&v3[*v7] + v98);
                *(void *)&v3[v97] = v99;
                v41 |= (unint64_t)(v100 & 0x7F) << v95;
                if (v100 < 0)
                {
                  v95 += 7;
                  BOOL v15 = v96++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_172;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_172:
            uint64_t v109 = 20;
            goto LABEL_177;
          case 0xEu:
            char v101 = 0;
            unsigned int v102 = 0;
            uint64_t v41 = 0;
            *(_WORD *)(a1 + 52) |= 4u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_180;
            }
            continue;
        }
        while (1)
        {
          uint64_t v103 = *v4;
          uint64_t v104 = *(void *)&v3[v103];
          unint64_t v105 = v104 + 1;
          if (v104 == -1 || v105 > *(void *)&v3[*v5]) {
            break;
          }
          char v106 = *(unsigned char *)(*(void *)&v3[*v7] + v104);
          *(void *)&v3[v103] = v105;
          v41 |= (unint64_t)(v106 & 0x7F) << v101;
          if ((v106 & 0x80) == 0) {
            goto LABEL_174;
          }
          v101 += 7;
          BOOL v15 = v102++ >= 9;
          if (v15)
          {
            LODWORD(v41) = 0;
            goto LABEL_176;
          }
        }
        v3[*v6] = 1;
LABEL_174:
        if (v3[*v6]) {
          LODWORD(v41) = 0;
        }
LABEL_176:
        uint64_t v109 = 16;
LABEL_177:
        *(_DWORD *)(a1 + v109) = v41;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v110 = v3[*v6] == 0;
  }
  else
  {
LABEL_180:
    BOOL v110 = 0;
  }
  objc_sync_exit(v3);

  return v110;
}

void sub_18A36CA48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsFeaturesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapsFeaturesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A36CAE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsPlaceIdsReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v18 = objc_alloc_init(GEOPlaceIdDetails);
          if (!GEOPlaceIdDetailsReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addPlaceIdDetails:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18A36E0C8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsPlaceIdsReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapsPlaceIdsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A36E12C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPlaceIdDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgStateMapsServerReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          int v20 = objc_alloc_init(GEOMapsServerMetadata);
          if (!GEOMapsServerMetadataReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          BOOL v21 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v22 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v22 = 0;
  }
  objc_sync_exit(v5);

  return v22;
}

void sub_18A36EDE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsServerReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapsServerReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A36EE44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsUserSettingsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_79;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_81;
              }
            }
            v3[*v6] = 1;
LABEL_79:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_81:
            uint64_t v73 = 12;
            goto LABEL_86;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_85;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_85:
            uint64_t v73 = 8;
LABEL_86:
            *(_DWORD *)(a1 + v73) = v20;
            continue;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            *(unsigned char *)(a1 + 24) |= 0x20u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v33 |= (unint64_t)(v37 & 0x7F) << v31;
                if (v37 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    uint64_t v33 = 0;
                    goto LABEL_90;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v33 = 0;
            }
LABEL_90:
            BOOL v74 = v33 != 0;
            uint64_t v75 = 19;
            goto LABEL_111;
          case 4u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v40 = 0;
            *(unsigned char *)(a1 + 24) |= 0x40u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
                *(void *)&v3[v41] = v43;
                v40 |= (unint64_t)(v44 & 0x7F) << v38;
                if (v44 < 0)
                {
                  v38 += 7;
                  BOOL v15 = v39++ >= 9;
                  if (v15)
                  {
                    uint64_t v40 = 0;
                    goto LABEL_94;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v40 = 0;
            }
LABEL_94:
            BOOL v74 = v40 != 0;
            uint64_t v75 = 20;
            goto LABEL_111;
          case 5u:
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v47 = 0;
            *(unsigned char *)(a1 + 24) |= 0x10u;
            while (2)
            {
              uint64_t v48 = *v4;
              uint64_t v49 = *(void *)&v3[v48];
              unint64_t v50 = v49 + 1;
              if (v49 == -1 || v50 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v51 = *(unsigned char *)(*(void *)&v3[*v7] + v49);
                *(void *)&v3[v48] = v50;
                v47 |= (unint64_t)(v51 & 0x7F) << v45;
                if (v51 < 0)
                {
                  v45 += 7;
                  BOOL v15 = v46++ >= 9;
                  if (v15)
                  {
                    uint64_t v47 = 0;
                    goto LABEL_98;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v47 = 0;
            }
LABEL_98:
            BOOL v74 = v47 != 0;
            uint64_t v75 = 18;
            goto LABEL_111;
          case 6u:
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v54 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (2)
            {
              uint64_t v55 = *v4;
              uint64_t v56 = *(void *)&v3[v55];
              unint64_t v57 = v56 + 1;
              if (v56 == -1 || v57 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v58 = *(unsigned char *)(*(void *)&v3[*v7] + v56);
                *(void *)&v3[v55] = v57;
                v54 |= (unint64_t)(v58 & 0x7F) << v52;
                if (v58 < 0)
                {
                  v52 += 7;
                  BOOL v15 = v53++ >= 9;
                  if (v15)
                  {
                    uint64_t v54 = 0;
                    goto LABEL_102;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v54 = 0;
            }
LABEL_102:
            BOOL v74 = v54 != 0;
            uint64_t v75 = 16;
            goto LABEL_111;
          case 7u:
            char v59 = 0;
            unsigned int v60 = 0;
            uint64_t v61 = 0;
            *(unsigned char *)(a1 + 24) |= 0x80u;
            while (2)
            {
              uint64_t v62 = *v4;
              uint64_t v63 = *(void *)&v3[v62];
              unint64_t v64 = v63 + 1;
              if (v63 == -1 || v64 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v65 = *(unsigned char *)(*(void *)&v3[*v7] + v63);
                *(void *)&v3[v62] = v64;
                v61 |= (unint64_t)(v65 & 0x7F) << v59;
                if (v65 < 0)
                {
                  v59 += 7;
                  BOOL v15 = v60++ >= 9;
                  if (v15)
                  {
                    uint64_t v61 = 0;
                    goto LABEL_106;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v61 = 0;
            }
LABEL_106:
            BOOL v74 = v61 != 0;
            uint64_t v75 = 21;
            goto LABEL_111;
          case 8u:
            char v66 = 0;
            unsigned int v67 = 0;
            uint64_t v68 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_114;
            }
            continue;
        }
        while (1)
        {
          uint64_t v69 = *v4;
          uint64_t v70 = *(void *)&v3[v69];
          unint64_t v71 = v70 + 1;
          if (v70 == -1 || v71 > *(void *)&v3[*v5]) {
            break;
          }
          char v72 = *(unsigned char *)(*(void *)&v3[*v7] + v70);
          *(void *)&v3[v69] = v71;
          v68 |= (unint64_t)(v72 & 0x7F) << v66;
          if ((v72 & 0x80) == 0) {
            goto LABEL_108;
          }
          v66 += 7;
          BOOL v15 = v67++ >= 9;
          if (v15)
          {
            uint64_t v68 = 0;
            goto LABEL_110;
          }
        }
        v3[*v6] = 1;
LABEL_108:
        if (v3[*v6]) {
          uint64_t v68 = 0;
        }
LABEL_110:
        BOOL v74 = v68 != 0;
        uint64_t v75 = 17;
LABEL_111:
        *(unsigned char *)(a1 + v75) = v74;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v76 = v3[*v6] == 0;
  }
  else
  {
LABEL_114:
    BOOL v76 = 0;
  }
  objc_sync_exit(v3);

  return v76;
}

void sub_18A3705F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMapsUserSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMapsUserSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A370674(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMarketReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unsigned int v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_24;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_24:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A371398(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMarketReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMarketReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3713FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMuninResourceReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_32;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          uint64_t v18 = PBReaderReadString();
          unsigned int v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A371C20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateMuninResourceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateMuninResourceReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A371C84(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateNavigationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_43;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_45;
              }
            }
            v3[*v6] = 1;
LABEL_43:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_45:
            uint64_t v36 = 24;
            goto LABEL_50;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_49;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_49:
            uint64_t v36 = 28;
LABEL_50:
            *(_DWORD *)(a1 + v36) = v20;
            goto LABEL_53;
          case 3u:
            *(unsigned char *)(a1 + 32) |= 1u;
            uint64_t v31 = *v4;
            unint64_t v32 = *(void *)&v3[v31];
            if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v33 = *(void *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v32 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v33 = 0;
            }
            *(void *)(a1 + 8) = v33;
            goto LABEL_53;
          case 4u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_56;
            }
            uint64_t v34 = objc_alloc_init(GEONavCameraState);
            if (!GEONavCameraStateReadAllFrom((uint64_t)v34, v3))
            {

              goto LABEL_56;
            }
            PBReaderRecallMark();
            uint64_t v35 = *(void **)(a1 + 16);
            *(void *)(a1 + 16) = v34;

LABEL_53:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_54;
            }
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_56;
            }
            goto LABEL_53;
        }
      }
    }
LABEL_54:
    BOOL v37 = v3[*v6] == 0;
  }
  else
  {
LABEL_56:
    BOOL v37 = 0;
  }
  objc_sync_exit(v3);

  return v37;
}

void sub_18A3733E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateNavigationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateNavigationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A373454(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavCameraStateIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgStateNearbyTransitReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unint64_t v25 = objc_alloc_init(GEONearbyTransitGroup);
          if (!GEONearbyTransitGroupReadAllFrom((uint64_t)v25, v3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addGroups:", v25, 0, 0);
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    BOOL v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_18A374640(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateNearbyTransitReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateNearbyTransitReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3746A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONearbyTransitGroupIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEOLogMsgStateOfflineReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_65;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_67;
              }
            }
            v3[*v6] = 1;
LABEL_65:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_67:
            BOOL v59 = v20 != 0;
            uint64_t v60 = 28;
            goto LABEL_76;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 32) |= 0x10u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_71;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_71:
            BOOL v59 = v27 != 0;
            uint64_t v60 = 29;
            goto LABEL_76;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(unsigned char *)(a1 + 32) |= 0x20u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_75:
            BOOL v59 = v34 != 0;
            uint64_t v60 = 30;
LABEL_76:
            *(unsigned char *)(a1 + v60) = v59;
            continue;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    LODWORD(v41) = 0;
                    goto LABEL_80;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v41) = 0;
            }
LABEL_80:
            *(_DWORD *)(a1 + 24) = v41;
            continue;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
                *(void *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  BOOL v15 = v47++ >= 9;
                  if (v15)
                  {
                    uint64_t v48 = 0;
                    goto LABEL_84;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v48 = 0;
            }
LABEL_84:
            uint64_t v61 = 16;
            goto LABEL_89;
          case 6u:
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_92;
            }
            continue;
        }
        while (1)
        {
          uint64_t v55 = *v4;
          uint64_t v56 = *(void *)&v3[v55];
          unint64_t v57 = v56 + 1;
          if (v56 == -1 || v57 > *(void *)&v3[*v5]) {
            break;
          }
          char v58 = *(unsigned char *)(*(void *)&v3[*v7] + v56);
          *(void *)&v3[v55] = v57;
          v48 |= (unint64_t)(v58 & 0x7F) << v53;
          if ((v58 & 0x80) == 0) {
            goto LABEL_86;
          }
          v53 += 7;
          BOOL v15 = v54++ >= 9;
          if (v15)
          {
            uint64_t v48 = 0;
            goto LABEL_88;
          }
        }
        v3[*v6] = 1;
LABEL_86:
        if (v3[*v6]) {
          uint64_t v48 = 0;
        }
LABEL_88:
        uint64_t v61 = 8;
LABEL_89:
        *(void *)(a1 + v61) = v48;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v62 = v3[*v6] == 0;
  }
  else
  {
LABEL_92:
    BOOL v62 = 0;
  }
  objc_sync_exit(v3);

  return v62;
}

void sub_18A375C8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateOfflineReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateOfflineReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A375D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateOfflineDownloadReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    BOOL v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            unsigned int v19 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v18;

            continue;
          case 2u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 36) |= 0x20u;
            while (1)
            {
              uint64_t v23 = *v4;
              uint64_t v24 = *(void *)&v3[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_80;
              }
              v20 += 7;
              BOOL v15 = v21++ >= 9;
              if (v15)
              {
                uint64_t v22 = 0;
                goto LABEL_82;
              }
            }
            v3[*v6] = 1;
LABEL_80:
            if (v3[*v6]) {
              uint64_t v22 = 0;
            }
LABEL_82:
            BOOL v74 = v22 != 0;
            uint64_t v75 = 30;
            goto LABEL_112;
          case 3u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 36) |= 0x80u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_86;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v29 = 0;
            }
LABEL_86:
            BOOL v74 = v29 != 0;
            uint64_t v75 = 32;
            goto LABEL_112;
          case 4u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 36) |= 2u;
            while (2)
            {
              uint64_t v37 = *v4;
              uint64_t v38 = *(void *)&v3[v37];
              unint64_t v39 = v38 + 1;
              if (v38 == -1 || v39 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
                *(void *)&v3[v37] = v39;
                v36 |= (unint64_t)(v40 & 0x7F) << v34;
                if (v40 < 0)
                {
                  v34 += 7;
                  BOOL v15 = v35++ >= 9;
                  if (v15)
                  {
                    LODWORD(v36) = 0;
                    goto LABEL_90;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v36) = 0;
            }
LABEL_90:
            uint64_t v76 = 20;
            goto LABEL_99;
          case 5u:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 36) |= 1u;
            while (2)
            {
              uint64_t v43 = *v4;
              uint64_t v44 = *(void *)&v3[v43];
              unint64_t v45 = v44 + 1;
              if (v44 == -1 || v45 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v46 = *(unsigned char *)(*(void *)&v3[*v7] + v44);
                *(void *)&v3[v43] = v45;
                v36 |= (unint64_t)(v46 & 0x7F) << v41;
                if (v46 < 0)
                {
                  v41 += 7;
                  BOOL v15 = v42++ >= 9;
                  if (v15)
                  {
                    LODWORD(v36) = 0;
                    goto LABEL_94;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v36) = 0;
            }
LABEL_94:
            uint64_t v76 = 16;
            goto LABEL_99;
          case 6u:
            char v47 = 0;
            unsigned int v48 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 36) |= 4u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
                *(void *)&v3[v49] = v51;
                v36 |= (unint64_t)(v52 & 0x7F) << v47;
                if (v52 < 0)
                {
                  v47 += 7;
                  BOOL v15 = v48++ >= 9;
                  if (v15)
                  {
                    LODWORD(v36) = 0;
                    goto LABEL_98;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v36) = 0;
            }
LABEL_98:
            uint64_t v76 = 24;
LABEL_99:
            *(_DWORD *)(a1 + v76) = v36;
            continue;
          case 7u:
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            *(unsigned char *)(a1 + 36) |= 0x10u;
            while (2)
            {
              uint64_t v56 = *v4;
              uint64_t v57 = *(void *)&v3[v56];
              unint64_t v58 = v57 + 1;
              if (v57 == -1 || v58 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v59 = *(unsigned char *)(*(void *)&v3[*v7] + v57);
                *(void *)&v3[v56] = v58;
                v55 |= (unint64_t)(v59 & 0x7F) << v53;
                if (v59 < 0)
                {
                  v53 += 7;
                  BOOL v15 = v54++ >= 9;
                  if (v15)
                  {
                    uint64_t v55 = 0;
                    goto LABEL_103;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v55 = 0;
            }
LABEL_103:
            BOOL v74 = v55 != 0;
            uint64_t v75 = 29;
            goto LABEL_112;
          case 8u:
            char v60 = 0;
            unsigned int v61 = 0;
            uint64_t v62 = 0;
            *(unsigned char *)(a1 + 36) |= 0x40u;
            while (2)
            {
              uint64_t v63 = *v4;
              uint64_t v64 = *(void *)&v3[v63];
              unint64_t v65 = v64 + 1;
              if (v64 == -1 || v65 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v66 = *(unsigned char *)(*(void *)&v3[*v7] + v64);
                *(void *)&v3[v63] = v65;
                v62 |= (unint64_t)(v66 & 0x7F) << v60;
                if (v66 < 0)
                {
                  v60 += 7;
                  BOOL v15 = v61++ >= 9;
                  if (v15)
                  {
                    uint64_t v62 = 0;
                    goto LABEL_107;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v62 = 0;
            }
LABEL_107:
            BOOL v74 = v62 != 0;
            uint64_t v75 = 31;
            goto LABEL_112;
          case 9u:
            char v67 = 0;
            unsigned int v68 = 0;
            uint64_t v69 = 0;
            *(unsigned char *)(a1 + 36) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_115;
            }
            continue;
        }
        while (1)
        {
          uint64_t v70 = *v4;
          uint64_t v71 = *(void *)&v3[v70];
          unint64_t v72 = v71 + 1;
          if (v71 == -1 || v72 > *(void *)&v3[*v5]) {
            break;
          }
          char v73 = *(unsigned char *)(*(void *)&v3[*v7] + v71);
          *(void *)&v3[v70] = v72;
          v69 |= (unint64_t)(v73 & 0x7F) << v67;
          if ((v73 & 0x80) == 0) {
            goto LABEL_109;
          }
          v67 += 7;
          BOOL v15 = v68++ >= 9;
          if (v15)
          {
            uint64_t v69 = 0;
            goto LABEL_111;
          }
        }
        v3[*v6] = 1;
LABEL_109:
        if (v3[*v6]) {
          uint64_t v69 = 0;
        }
LABEL_111:
        BOOL v74 = v69 != 0;
        uint64_t v75 = 28;
LABEL_112:
        *(unsigned char *)(a1 + v75) = v74;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v77 = v3[*v6] == 0;
  }
  else
  {
LABEL_115:
    BOOL v77 = 0;
  }
  objc_sync_exit(v3);

  return v77;
}

void sub_18A38553C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateOfflineDownloadReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateOfflineDownloadReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3855C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStatePairedDeviceReadAllFrom(uint64_t a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      while (!v5[*v8])
      {
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        switch((v12 >> 3))
        {
          case 1u:
            char v20 = 0;
            unsigned int v21 = 0;
            uint64_t v22 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (1)
            {
              uint64_t v23 = *v6;
              uint64_t v24 = *(void *)&v5[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
                break;
              }
              char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
              *(void *)&v5[v23] = v25;
              v22 |= (unint64_t)(v26 & 0x7F) << v20;
              if ((v26 & 0x80) == 0) {
                goto LABEL_47;
              }
              v20 += 7;
              BOOL v17 = v21++ >= 9;
              if (v17)
              {
                LODWORD(v22) = 0;
                goto LABEL_49;
              }
            }
            v5[*v8] = 1;
LABEL_47:
            if (v5[*v8]) {
              LODWORD(v22) = 0;
            }
LABEL_49:
            *(_DWORD *)(a1 + 16) = v22;
            goto LABEL_59;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (2)
            {
              uint64_t v30 = *v6;
              uint64_t v31 = *(void *)&v5[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v5[*v9] + v31);
                *(void *)&v5[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v17 = v28++ >= 9;
                  if (v17)
                  {
                    uint64_t v29 = 0;
                    goto LABEL_53;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              uint64_t v29 = 0;
            }
LABEL_53:
            BOOL v43 = v29 != 0;
            uint64_t v44 = 21;
            goto LABEL_58;
          case 3u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_62;
            }
            char v34 = objc_alloc_init(GEOLogMsgStateDeviceIdentifier);
            if (!GEOLogMsgStateDeviceIdentifierReadAllFrom((uint64_t)v34, v5, a3))
            {

              goto LABEL_62;
            }
            PBReaderRecallMark();
            unsigned int v35 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v34;

LABEL_59:
            if (*(void *)&v5[*v6] >= *(void *)&v5[*v7]) {
              goto LABEL_60;
            }
            break;
          case 4u:
            char v36 = 0;
            unsigned int v37 = 0;
            uint64_t v38 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (2)
            {
              uint64_t v39 = *v6;
              uint64_t v40 = *(void *)&v5[v39];
              unint64_t v41 = v40 + 1;
              if (v40 == -1 || v41 > *(void *)&v5[*v7])
              {
                v5[*v8] = 1;
              }
              else
              {
                char v42 = *(unsigned char *)(*(void *)&v5[*v9] + v40);
                *(void *)&v5[v39] = v41;
                v38 |= (unint64_t)(v42 & 0x7F) << v36;
                if (v42 < 0)
                {
                  v36 += 7;
                  BOOL v17 = v37++ >= 9;
                  if (v17)
                  {
                    uint64_t v38 = 0;
                    goto LABEL_57;
                  }
                  continue;
                }
              }
              break;
            }
            if (v5[*v8]) {
              uint64_t v38 = 0;
            }
LABEL_57:
            BOOL v43 = v38 != 0;
            uint64_t v44 = 20;
LABEL_58:
            *(unsigned char *)(a1 + v44) = v43;
            goto LABEL_59;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_62;
            }
            goto LABEL_59;
        }
      }
    }
LABEL_60:
    BOOL v45 = v5[*v8] == 0;
  }
  else
  {
LABEL_62:
    BOOL v45 = 0;
  }
  objc_sync_exit(v5);

  return v45;
}

void sub_18A386BB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStatePairedDeviceReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStatePairedDeviceReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A386C2C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3873C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStatePlaceCardReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 132);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 128)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (HIBYTE(*(unsigned __int16 *)(a1 + 148)) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 148)), (uint16x4_t)0xFFF5FFF9FFF6FFFALL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 148) >> 5) & 1)+ ((*(_WORD *)(a1 + 148) >> 9) & 1)+ ((*(_WORD *)(a1 + 148) >> 12) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 5;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          char v16 = 0;
        }
        else {
          char v16 = a3;
        }
        BOOL v17 = (int *)MEMORY[0x1E4F940E8];
        int v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_211;
        }
        char v133 = (v16 == 0) | v15;
        unsigned int v19 = (int *)MEMORY[0x1E4F940B8];
        char v132 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_211;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v29 = v22 & 7;
    if (v28 || v29 == 4)
    {
LABEL_211:
      if (v15)
      {
        char v126 = 1;
        goto LABEL_213;
      }
      if (v16)
      {
        while (1)
        {
          int v128 = *v16++;
          __int16 v127 = 1024;
          switch(v128)
          {
            case 0:
              goto LABEL_227;
            case 1:
              goto LABEL_225;
            case 2:
              __int16 v127 = 64;
              goto LABEL_225;
            case 3:
              __int16 v127 = 128;
              goto LABEL_225;
            case 4:
              __int16 v127 = 2048;
              goto LABEL_225;
            case 7:
              __int16 v127 = 32;
              goto LABEL_225;
            case 8:
              __int16 v127 = 512;
              goto LABEL_225;
            case 9:
              __int16 v127 = 4096;
              goto LABEL_225;
            case 10:
              __int16 v127 = 256;
LABEL_225:
              *(_WORD *)(a1 + 148) |= v127;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_227;
    }
    unint64_t v31 = v22 >> 3;
    BOOL v32 = v15;
    if ((v133 & 1) == 0)
    {
      char v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_154;
        }
        if ((*(_WORD *)(a1 + 148) & 0x400) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_232;
          }
          uint64_t v131 = objc_alloc_init(GEOPlaceActionDetails);
          if (GEOPlaceActionDetailsReadAllFrom((uint64_t)v131, (void *)v3, v9 & 1))
          {
            PBReaderRecallMark();
            unsigned int v37 = *(void **)(a1 + 104);
            *(void *)(a1 + 104) = v131;
            goto LABEL_77;
          }
          goto LABEL_231;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_232;
        }
        __int16 v104 = 32 * *(_WORD *)(a1 + 148);
        goto LABEL_182;
      case 2:
        if (!v32 || (*(_WORD *)(a1 + 148) & 0x40) != 0) {
          goto LABEL_154;
        }
        if (v29 != 2)
        {
          char v105 = 0;
          unsigned int v106 = 0;
          uint64_t v107 = 0;
          while (1)
          {
            uint64_t v108 = *v17;
            uint64_t v109 = *(void *)(v3 + v108);
            unint64_t v110 = v109 + 1;
            if (v109 == -1 || v110 > *(void *)(v3 + *v6)) {
              goto LABEL_197;
            }
            char v111 = *(unsigned char *)(*(void *)(v3 + *v19) + v109);
            *(void *)(v3 + v108) = v110;
            v107 |= (unint64_t)(v111 & 0x7F) << v105;
            if (v111 < 0)
            {
              v105 += 7;
              BOOL v27 = v106++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_198;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_232;
        }
        while (1)
        {
          uint64_t v39 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_156;
          }
          char v40 = 0;
          unsigned int v41 = 0;
          uint64_t v42 = 0;
          while (1)
          {
            uint64_t v43 = *v17;
            uint64_t v44 = *(void *)(v3 + v43);
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)(v3 + *v6)) {
              break;
            }
            char v46 = *(unsigned char *)(*(void *)(v3 + *v19) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v27 = v41++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_58;
          }
          *(unsigned char *)(v3 + *v39) = 1;
LABEL_58:
          PBRepeatedInt32Add();
        }
      case 3:
        if (!v32 || (*(_WORD *)(a1 + 148) & 0x80) != 0) {
          goto LABEL_154;
        }
        if (v29 != 2)
        {
          char v112 = 0;
          unsigned int v113 = 0;
          uint64_t v114 = 0;
          while (1)
          {
            uint64_t v115 = *v17;
            uint64_t v116 = *(void *)(v3 + v115);
            unint64_t v117 = v116 + 1;
            if (v116 == -1 || v117 > *(void *)(v3 + *v6)) {
              break;
            }
            char v118 = *(unsigned char *)(*(void *)(v3 + *v19) + v116);
            *(void *)(v3 + v115) = v117;
            v114 |= (unint64_t)(v118 & 0x7F) << v112;
            if (v118 < 0)
            {
              v112 += 7;
              BOOL v27 = v113++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_198;
          }
LABEL_197:
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_198:
          PBRepeatedInt32Add();
          goto LABEL_208;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_232;
        }
        while (1)
        {
          char v47 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            goto LABEL_156;
          }
          char v48 = 0;
          unsigned int v49 = 0;
          uint64_t v50 = 0;
          while (1)
          {
            uint64_t v51 = *v17;
            uint64_t v52 = *(void *)(v3 + v51);
            unint64_t v53 = v52 + 1;
            if (v52 == -1 || v53 > *(void *)(v3 + *v6)) {
              break;
            }
            char v54 = *(unsigned char *)(*(void *)(v3 + *v19) + v52);
            *(void *)(v3 + v51) = v53;
            v50 |= (unint64_t)(v54 & 0x7F) << v48;
            if (v54 < 0)
            {
              v48 += 7;
              BOOL v27 = v49++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_73;
          }
          *(unsigned char *)(v3 + *v47) = 1;
LABEL_73:
          PBRepeatedInt32Add();
        }
      case 4:
        if (!v32) {
          goto LABEL_154;
        }
        if ((*(_WORD *)(a1 + 148) & 0x800) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_232;
          }
          __int16 v104 = 16 * *(_WORD *)(a1 + 148);
LABEL_182:
          v7 += v104 >> 15;
        }
        else
        {
          uint64_t v55 = PBReaderReadString();
          unsigned int v37 = *(void **)(a1 + 112);
          *(void *)(a1 + 112) = v55;
LABEL_77:

          --v7;
        }
        goto LABEL_208;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_154;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_WORD *)(a1 + 148) |= 1u;
        while (2)
        {
          uint64_t v59 = *v17;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v19) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v27 = v57++ >= 9;
              if (v27)
              {
                LODWORD(v58) = 0;
                goto LABEL_160;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v58) = 0;
        }
LABEL_160:
        *(_DWORD *)(a1 + 140) = v58;
        goto LABEL_209;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_154;
        }
        char v63 = 0;
        unsigned int v64 = 0;
        uint64_t v65 = 0;
        *(_WORD *)(a1 + 148) |= 0x10u;
        while (2)
        {
          uint64_t v66 = *v17;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v19) + v67);
            *(void *)(v3 + v66) = v68;
            v65 |= (unint64_t)(v69 & 0x7F) << v63;
            if (v69 < 0)
            {
              v63 += 7;
              BOOL v27 = v64++ >= 9;
              if (v27)
              {
                uint64_t v65 = 0;
                goto LABEL_164;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v65 = 0;
        }
LABEL_164:
        BOOL v102 = v65 != 0;
        uint64_t v103 = 147;
        goto LABEL_177;
      case 7:
        if (!v32 || (*(_WORD *)(a1 + 148) & 0x20) != 0) {
          goto LABEL_154;
        }
        if (v29 != 2)
        {
          char v119 = 0;
          unsigned int v120 = 0;
          uint64_t v121 = 0;
          while (1)
          {
            uint64_t v122 = *v17;
            uint64_t v123 = *(void *)(v3 + v122);
            unint64_t v124 = v123 + 1;
            if (v123 == -1 || v124 > *(void *)(v3 + *v6)) {
              break;
            }
            char v125 = *(unsigned char *)(*(void *)(v3 + *v19) + v123);
            *(void *)(v3 + v122) = v124;
            v121 |= (unint64_t)(v125 & 0x7F) << v119;
            if (v125 < 0)
            {
              v119 += 7;
              BOOL v27 = v120++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_207;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_207:
          PBRepeatedUInt64Add();
          goto LABEL_208;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_232;
        }
        while (1)
        {
          uint64_t v70 = (int *)MEMORY[0x1E4F940C8];
          if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
            break;
          }
          char v71 = 0;
          unsigned int v72 = 0;
          uint64_t v73 = 0;
          while (1)
          {
            uint64_t v74 = *v17;
            uint64_t v75 = *(void *)(v3 + v74);
            unint64_t v76 = v75 + 1;
            if (v75 == -1 || v76 > *(void *)(v3 + *v6)) {
              break;
            }
            char v77 = *(unsigned char *)(*(void *)(v3 + *v19) + v75);
            *(void *)(v3 + v74) = v76;
            v73 |= (unint64_t)(v77 & 0x7F) << v71;
            if (v77 < 0)
            {
              v71 += 7;
              BOOL v27 = v72++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_108;
          }
          *(unsigned char *)(v3 + *v70) = 1;
LABEL_108:
          PBRepeatedUInt64Add();
        }
LABEL_156:
        PBReaderRecallMark();
        int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v132;
        goto LABEL_209;
      case 8:
        if (!v32 || (*(_WORD *)(a1 + 148) & 0x200) != 0) {
          goto LABEL_152;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        uint64_t v131 = objc_alloc_init(GEOPlaceCardModule);
        if (!GEOPlaceCardModuleReadAllFrom((uint64_t)v131, (void *)v3, v9 & 1)) {
          goto LABEL_231;
        }
        PBReaderRecallMark();
        -[GEOLogMsgStatePlaceCard _addNoFlagsModules:](a1, v131);
        goto LABEL_123;
      case 9:
        if (!v32 || (*(_WORD *)(a1 + 148) & 0x1000) != 0) {
          goto LABEL_152;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_232;
        }
        uint64_t v131 = objc_alloc_init(GEORevealedPlaceCardModule);
        if (GEORevealedPlaceCardModuleReadAllFrom((uint64_t)v131, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOLogMsgStatePlaceCard _addNoFlagsRevealedModules:](a1, v131);
LABEL_123:
          uint64_t v78 = v131;
LABEL_124:

LABEL_208:
          char v15 = v132;
          int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_209:
          if (!(v15 & 1 | (v7 != 0)) || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_211;
          }
          continue;
        }
LABEL_231:

LABEL_232:
        char v126 = 0;
        char v15 = v132;
        int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_213:
        *(_WORD *)(a1 + 148) |= 0x400u;
        *(_WORD *)(a1 + 148) |= 0x40u;
        *(_WORD *)(a1 + 148) |= 0x80u;
        *(_WORD *)(a1 + 148) |= 0x800u;
        *(_WORD *)(a1 + 148) |= 0x20u;
        *(_WORD *)(a1 + 148) |= 0x200u;
        *(_WORD *)(a1 + 148) |= 0x1000u;
        *(_WORD *)(a1 + 148) |= 0x100u;
        if (v126)
        {
LABEL_227:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_228;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_228:
        char v129 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 10:
        if (!v32 || (*(_WORD *)(a1 + 148) & 0x100) != 0)
        {
LABEL_152:
          char v100 = PBReaderSkipValueWithTag();
          char v15 = v132;
          int v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v100 & 1) == 0) {
            goto LABEL_230;
          }
          goto LABEL_209;
        }
        PBReaderReadString();
        uint64_t v78 = (GEOPlaceActionDetails *)objc_claimAutoreleasedReturnValue();
        if (!v78) {
          goto LABEL_124;
        }
        uint64_t v131 = v78;
        -[GEOLogMsgStatePlaceCard _addNoFlagsCommingledRichProviderIds:](a1, v78);
        goto LABEL_123;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_154;
        }
        char v79 = 0;
        unsigned int v80 = 0;
        uint64_t v81 = 0;
        *(_WORD *)(a1 + 148) |= 8u;
        while (2)
        {
          uint64_t v82 = *v17;
          uint64_t v83 = *(void *)(v3 + v82);
          unint64_t v84 = v83 + 1;
          if (v83 == -1 || v84 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v85 = *(unsigned char *)(*(void *)(v3 + *v19) + v83);
            *(void *)(v3 + v82) = v84;
            v81 |= (unint64_t)(v85 & 0x7F) << v79;
            if (v85 < 0)
            {
              v79 += 7;
              BOOL v27 = v80++ >= 9;
              if (v27)
              {
                uint64_t v81 = 0;
                goto LABEL_168;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v81 = 0;
        }
LABEL_168:
        BOOL v102 = v81 != 0;
        uint64_t v103 = 146;
        goto LABEL_177;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_154;
        }
        char v86 = 0;
        unsigned int v87 = 0;
        uint64_t v88 = 0;
        *(_WORD *)(a1 + 148) |= 2u;
        while (2)
        {
          uint64_t v89 = *v17;
          uint64_t v90 = *(void *)(v3 + v89);
          unint64_t v91 = v90 + 1;
          if (v90 == -1 || v91 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v92 = *(unsigned char *)(*(void *)(v3 + *v19) + v90);
            *(void *)(v3 + v89) = v91;
            v88 |= (unint64_t)(v92 & 0x7F) << v86;
            if (v92 < 0)
            {
              v86 += 7;
              BOOL v27 = v87++ >= 9;
              if (v27)
              {
                uint64_t v88 = 0;
                goto LABEL_172;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v88 = 0;
        }
LABEL_172:
        BOOL v102 = v88 != 0;
        uint64_t v103 = 144;
        goto LABEL_177;
      case 13:
        if (v8)
        {
          char v93 = 0;
          unsigned int v94 = 0;
          uint64_t v95 = 0;
          *(_WORD *)(a1 + 148) |= 4u;
          while (1)
          {
            uint64_t v96 = *v17;
            uint64_t v97 = *(void *)(v3 + v96);
            unint64_t v98 = v97 + 1;
            if (v97 == -1 || v98 > *(void *)(v3 + *v6)) {
              break;
            }
            char v99 = *(unsigned char *)(*(void *)(v3 + *v19) + v97);
            *(void *)(v3 + v96) = v98;
            v95 |= (unint64_t)(v99 & 0x7F) << v93;
            if ((v99 & 0x80) == 0) {
              goto LABEL_174;
            }
            v93 += 7;
            BOOL v27 = v94++ >= 9;
            if (v27)
            {
              uint64_t v95 = 0;
              goto LABEL_176;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_174:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v95 = 0;
          }
LABEL_176:
          BOOL v102 = v95 != 0;
          uint64_t v103 = 145;
LABEL_177:
          *(unsigned char *)(a1 + v103) = v102;
        }
        else
        {
LABEL_154:
          char v101 = PBReaderSkipValueWithTag();
          int v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v132;
          if ((v101 & 1) == 0)
          {
LABEL_230:
            char v126 = 0;
            goto LABEL_213;
          }
        }
        goto LABEL_209;
      default:
        int v38 = PBReaderSkipValueWithTag();
        int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v132;
        if (!v38) {
          goto LABEL_230;
        }
        goto LABEL_209;
    }
  }
}

void sub_18A38848C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A39237C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A39287C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A392DA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A393130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3934F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3938C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

#error "18A395BD0: too complex function (funcsize=8596)"

void sub_18A39F804(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStatePlaceCardCallReadAllRecursiveWithoutSynchronized(id *a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  [a1[13] readAll:1];
  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v2 = a1[12];
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = a1[15];
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOLogMsgStatePlaceCardReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 132))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStatePlaceCardReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 136));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 128) = [v8 position];
  *(_DWORD *)(a1 + 132) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStatePlaceCardReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStatePlaceCardReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStatePlaceCardReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStatePlaceCardCallReadAllRecursiveWithoutSynchronized((id *)a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 136));
  return Specified;
}

void sub_18A39FB44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStatePlaceCardReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStatePlaceCardReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A39FBA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPlaceCardModuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_53;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        goto LABEL_53;
      }
      unint64_t v17 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v17 != 2)
      {
        if (v17 == 1)
        {
          if ((v8 & 7) != 0) {
            goto LABEL_55;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              break;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0 && v18++ <= 8) {
              continue;
            }
            goto LABEL_52;
          }
LABEL_40:
          a1[*v4] = 1;
          goto LABEL_52;
        }
        goto LABEL_38;
      }
      if (v15 != 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_55;
        }
        while (1)
        {
          uint64_t v24 = *v2;
          uint64_t v25 = *(void *)&a1[v24];
          unint64_t v26 = v25 + 1;
          if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
            goto LABEL_40;
          }
          int v27 = *(char *)(*(void *)&a1[*v5] + v25);
          *(void *)&a1[v24] = v26;
          if (v27 < 0)
          {
            unsigned int v28 = v15++;
            if (v28 <= 8) {
              continue;
            }
          }
          goto LABEL_52;
        }
      }
      if (!PBReaderPlaceMark())
      {
LABEL_55:
        PBReaderRecallMark();
        return 0;
      }
LABEL_42:
      while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
      {
        unsigned int v29 = a1[*v4];
        if (a1[*v4]) {
          break;
        }
        while (1)
        {
          uint64_t v30 = *v2;
          uint64_t v31 = *(void *)&a1[v30];
          unint64_t v32 = v31 + 1;
          if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
            break;
          }
          int v33 = *(char *)(*(void *)&a1[*v5] + v31);
          *(void *)&a1[v30] = v32;
          if (v33 < 0)
          {
            BOOL v13 = v29++ >= 9;
            if (!v13) {
              continue;
            }
          }
          goto LABEL_42;
        }
        a1[*v4] = 1;
      }
      PBReaderRecallMark();
LABEL_52:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_53;
      }
    }
    if (v15 != 2) {
      goto LABEL_55;
    }
LABEL_38:
    if ((PBReaderSkipValueWithTag() & 1) == 0) {
      goto LABEL_55;
    }
    goto LABEL_52;
  }
LABEL_53:
  BOOL v34 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v34;
}

BOOL GEORevealedPlaceCardModuleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v17 = 0;
          do
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3])
            {
              a1[*v4] = 1;
              goto LABEL_53;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if ((v21 & 0x80000000) == 0) {
              break;
            }
          }
          while (v17++ <= 8);
          goto LABEL_53;
        case 2u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleTypeTitleIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 3u:
          if (v15 != 2
            || !PBReaderPlaceMark()
            || !GEORevealedPlaceCardModuleTypeUnifiedActionRowIsValid(a1))
          {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 4u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleTypePhotosIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 5u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleTypeShowcaseIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 6u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleTypeHoursIsValid(a1)) {
            goto LABEL_57;
          }
          goto LABEL_52;
        case 7u:
          if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleTypeInfosIsValid(a1)) {
            goto LABEL_57;
          }
LABEL_52:
          PBReaderRecallMark();
          goto LABEL_53;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_57:
            PBReaderRecallMark();
            return 0;
          }
LABEL_53:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_56;
          }
          break;
      }
    }
  }
LABEL_56:
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

void sub_18A3A06C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOLogMsgStatePlaceCardIsDirty(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 136));
  __int16 v2 = *(_WORD *)(a1 + 148);
  if ((v2 & 0x2000) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 148) & 0x400) == 0)
  {
LABEL_5:
    if ((v2 & 0x1BE0) != 0) {
      return 1;
    }
    if ((v2 & 0x200) != 0)
    {
      long long v18 = 0u;
      long long v19 = 0u;
      long long v16 = 0u;
      long long v17 = 0u;
      id v5 = *(id *)(a1 + 96);
      uint64_t v6 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = *(void *)v17;
LABEL_11:
        uint64_t v9 = 0;
        while (1)
        {
          if (*(void *)v17 != v8) {
            objc_enumerationMutation(v5);
          }
          if (GEOPlaceCardModuleIsDirty(*(void *)(*((void *)&v16 + 1) + 8 * v9))) {
            goto LABEL_29;
          }
          if (v7 == ++v9)
          {
            uint64_t v7 = [v5 countByEnumeratingWithState:&v16 objects:v21 count:16];
            if (v7) {
              goto LABEL_11;
            }
            break;
          }
        }
      }

      __int16 v2 = *(_WORD *)(a1 + 148);
    }
    if ((v2 & 0x1000) == 0) {
      return 0;
    }
    long long v14 = 0u;
    long long v15 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    id v5 = *(id *)(a1 + 120);
    uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
    if (!v3)
    {
LABEL_30:

      return v3;
    }
    uint64_t v10 = *(void *)v13;
LABEL_22:
    uint64_t v11 = 0;
    while (1)
    {
      if (*(void *)v13 != v10) {
        objc_enumerationMutation(v5);
      }
      if (GEORevealedPlaceCardModuleIsDirty(*(os_unfair_lock_s **)(*((void *)&v12 + 1) + 8 * v11))) {
        break;
      }
      if (v3 == ++v11)
      {
        uint64_t v3 = [v5 countByEnumeratingWithState:&v12 objects:v20 count:16];
        if (v3) {
          goto LABEL_22;
        }
        goto LABEL_30;
      }
    }
LABEL_29:
    uint64_t v3 = 1;
    goto LABEL_30;
  }
  if ((GEOPlaceActionDetailsIsDirty(*(os_unfair_lock_s **)(a1 + 104)) & 1) == 0)
  {
    __int16 v2 = *(_WORD *)(a1 + 148);
    goto LABEL_5;
  }
  return 1;
}

os_unfair_lock_s *GEOLogMsgStatePlaceCardIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOLogMsgStatePlaceCardIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 34);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A3A1184(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStatePlaceCardRapReadAllFrom(uint64_t a1, void *a2)
{
  __int16 v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    id v5 = (int *)MEMORY[0x1E4F940C8];
    uint64_t v6 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      int v7 = v2[*v5];
      if (*(void *)&v2[*v3] >= *(void *)&v2[*v4]) {
        break;
      }
      if (v2[*v5])
      {
        int v7 = 1;
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      uint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)&v2[v11];
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)&v2[*v4]) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)&v2[*v6] + v12);
        *(void *)&v2[v11] = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_13;
        }
        v8 += 7;
        if (v9++ >= 9)
        {
          LOBYTE(v10) = 0;
          int v7 = v2[*v5];
          goto LABEL_15;
        }
      }
      v2[*v5] = 1;
LABEL_13:
      int v7 = v2[*v5];
      if (v2[*v5]) {
        LOBYTE(v10) = 0;
      }
LABEL_15:
      if (v7) {
        BOOL v16 = 1;
      }
      else {
        BOOL v16 = (v10 & 7) == 4;
      }
      if (v16) {
        break;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_20;
      }
    }
    BOOL v17 = v7 == 0;
  }
  else
  {
LABEL_20:
    BOOL v17 = 0;
  }
  objc_sync_exit(v2);

  return v17;
}

void sub_18A3A1C64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStatePlaceCardRapReadFrom(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = objc_sync_enter(v2);
  BOOL AllFrom = GEOLogMsgStatePlaceCardRapReadAllFrom(v3, v2);
  objc_sync_exit(v2);

  return AllFrom;
}

void sub_18A3A1CC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStatePlaceRequestReadAllFrom(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    uint64_t v6 = (int *)MEMORY[0x1E4F940E8];
    int v7 = (int *)MEMORY[0x1E4F940E0];
    char v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          BOOL v17 = v11++ >= 9;
          if (v17)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 2)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          int v27 = objc_alloc_init(GEOPDPlaceRequest);
          if (!GEOPDPlaceRequestReadAllFrom((uint64_t)v27, v5, a3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          unsigned int v28 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v27;
        }
        else if ((v12 >> 3) == 1)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v6;
            uint64_t v24 = *(void *)&v5[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v5[*v7]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v5[*v9] + v24);
            *(void *)&v5[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v20 += 7;
            BOOL v17 = v21++ >= 9;
            if (v17)
            {
              LODWORD(v22) = 0;
              goto LABEL_36;
            }
          }
          v5[*v8] = 1;
LABEL_34:
          if (v5[*v8]) {
            LODWORD(v22) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v29 = v5[*v8] == 0;
  }
  else
  {
LABEL_40:
    BOOL v29 = 0;
  }
  objc_sync_exit(v5);

  return v29;
}

void sub_18A3A32C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStatePlaceRequestReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStatePlaceRequestReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3A3328(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStatePlaceSummaryLayoutReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  int v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1)
      + (*(unsigned char *)(a1 + 68) & 1)
      + ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      int v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = v10 > 1;
  int v13 = v9 | v12;
  if (((v9 | v12) | v8)) {
    uint64_t v14 = 0;
  }
  else {
    uint64_t v14 = a3;
  }
  unint64_t v15 = (int *)MEMORY[0x1E4F940E8];
  char v16 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(v3 + *v6))
  {
    uint64_t v17 = (v14 == 0) | v13;
    char v57 = (v7 != 0) | v13;
    int v18 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(v3 + *v16)) {
        break;
      }
      char v19 = 0;
      unsigned int v20 = 0;
      unint64_t v21 = 0;
      while (1)
      {
        uint64_t v22 = *v15;
        uint64_t v23 = *(void *)(v3 + v22);
        unint64_t v24 = v23 + 1;
        if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
          break;
        }
        char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
        *(void *)(v3 + v22) = v24;
        v21 |= (unint64_t)(v25 & 0x7F) << v19;
        if ((v25 & 0x80) == 0) {
          goto LABEL_24;
        }
        v19 += 7;
        BOOL v26 = v20++ >= 9;
        if (v26)
        {
          unint64_t v21 = 0;
          int v27 = *(unsigned __int8 *)(v3 + *v16);
          goto LABEL_26;
        }
      }
      *(unsigned char *)(v3 + *v16) = 1;
LABEL_24:
      int v27 = *(unsigned __int8 *)(v3 + *v16);
      if (*(unsigned char *)(v3 + *v16)) {
        unint64_t v21 = 0;
      }
LABEL_26:
      int v28 = v21 & 7;
      if (v27 || v28 == 4) {
        break;
      }
      unint64_t v30 = v21 >> 3;
      BOOL v31 = v13;
      if ((v17 & 1) == 0)
      {
        unint64_t v32 = v14;
        do
        {
          int v34 = *v32++;
          int v33 = v34;
          BOOL v31 = v34 != 0;
          if (v34) {
            BOOL v35 = v33 == v30;
          }
          else {
            BOOL v35 = 1;
          }
        }
        while (!v35);
      }
      switch(v30)
      {
        case 3:
          if (v31 && (*(unsigned char *)(a1 + 68) & 2) == 0)
          {
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_96;
            }
            uint64_t v43 = v17;
            uint64_t v44 = objc_alloc_init(GEODynamicContextHyperlinkDetails);
            if (!GEODynamicContextHyperlinkDetailsReadAllFrom((uint64_t)v44, (void *)v3)) {
              goto LABEL_97;
            }
            PBReaderRecallMark();
            -[GEOLogMsgStatePlaceSummaryLayout _addNoFlagsDynamicContextHyperlinkDetails:](a1, v44);
LABEL_65:

            uint64_t v17 = v43;
            char v16 = (int *)MEMORY[0x1E4F940C8];
            continue;
          }
          break;
        case 2:
          if (v31 && (*(unsigned char *)(a1 + 68) & 4) == 0)
          {
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_96;
            }
            uint64_t v43 = v17;
            uint64_t v44 = objc_alloc_init(GEOTrailingEntityActionDetails);
            if (!GEOTrailingEntityActionDetailsReadAllFrom((uint64_t)v44, (void *)v3))
            {
LABEL_97:

              char v52 = 0;
              char v16 = (int *)MEMORY[0x1E4F940C8];
              goto LABEL_84;
            }
            PBReaderRecallMark();
            -[GEOLogMsgStatePlaceSummaryLayout _addNoFlagsTrailingEntityActionDetails:](a1, v44);
            goto LABEL_65;
          }
          break;
        case 1:
          if (v31 && (*(unsigned char *)(a1 + 68) & 1) == 0)
          {
            if (v28 == 2)
            {
              if (!PBReaderPlaceMark()) {
                goto LABEL_96;
              }
              while (*(void *)(v3 + *v15) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v16))
              {
                char v36 = 0;
                unsigned int v37 = 0;
                uint64_t v38 = 0;
                while (1)
                {
                  uint64_t v39 = *v15;
                  uint64_t v40 = *(void *)(v3 + v39);
                  unint64_t v41 = v40 + 1;
                  if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
                    break;
                  }
                  char v42 = *(unsigned char *)(*(void *)(v3 + *v18) + v40);
                  *(void *)(v3 + v39) = v41;
                  v38 |= (unint64_t)(v42 & 0x7F) << v36;
                  if (v42 < 0)
                  {
                    v36 += 7;
                    BOOL v26 = v37++ >= 9;
                    if (!v26) {
                      continue;
                    }
                  }
                  goto LABEL_54;
                }
                *(unsigned char *)(v3 + *v16) = 1;
LABEL_54:
                PBRepeatedUInt64Add();
              }
              PBReaderRecallMark();
            }
            else
            {
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              while (1)
              {
                uint64_t v48 = *v15;
                uint64_t v49 = *(void *)(v3 + v48);
                unint64_t v50 = v49 + 1;
                if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v51 = *(unsigned char *)(*(void *)(v3 + *v18) + v49);
                *(void *)(v3 + v48) = v50;
                v47 |= (unint64_t)(v51 & 0x7F) << v45;
                if (v51 < 0)
                {
                  v45 += 7;
                  BOOL v26 = v46++ >= 9;
                  if (!v26) {
                    continue;
                  }
                }
                goto LABEL_81;
              }
              *(unsigned char *)(v3 + *v16) = 1;
LABEL_81:
              PBRepeatedUInt64Add();
            }
            continue;
          }
          break;
        default:
          if (!PBReaderSkipValueWithTag()) {
            goto LABEL_96;
          }
          continue;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_96:
        char v52 = 0;
        goto LABEL_84;
      }
    }
    while ((v57 & 1) != 0 && *(void *)(v3 + *v15) < *(void *)(v3 + *v6));
  }
  if ((v13 & 1) == 0)
  {
    if (v14)
    {
      while (1)
      {
        int v54 = *v14++;
        char v53 = 1;
        switch(v54)
        {
          case 0:
            goto LABEL_93;
          case 1:
            goto LABEL_91;
          case 2:
            char v53 = 4;
            goto LABEL_91;
          case 3:
            char v53 = 2;
LABEL_91:
            *(unsigned char *)(a1 + 68) |= v53;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_93;
  }
  char v52 = 1;
LABEL_84:
  *(unsigned char *)(a1 + 68) |= 1u;
  *(unsigned char *)(a1 + 68) |= 4u;
  *(unsigned char *)(a1 + 68) |= 2u;
  if (v52)
  {
LABEL_93:
    unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
    if (v13) {
      goto LABEL_94;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if ((v13 & 1) == 0) {
    return v3;
  }
LABEL_94:
  uint64_t v55 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_18A3A40F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3A44BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3A503C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStatePlaceSummaryLayoutCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 48);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 40);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOLogMsgStatePlaceSummaryLayoutReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStatePlaceSummaryLayoutReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStatePlaceSummaryLayoutReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStatePlaceSummaryLayoutReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStatePlaceSummaryLayoutReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStatePlaceSummaryLayoutCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A3A536C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStatePlaceSummaryLayoutReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStatePlaceSummaryLayoutReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3A53D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrailingEntityActionDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_37:
          BOOL v23 = 0;
          goto LABEL_36;
        }
      }
      else if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_34;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
        goto LABEL_37;
      }
LABEL_34:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
LABEL_36:
  PBReaderRecallMark();
  return v23;
}

void sub_18A3A58C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStatePlaceSummaryLayoutIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A3A5DBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3AE1F4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateRAPReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  unsigned int v10 = vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 76)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFBFFFDFFFALL) & 0xFF01FF01FF01FF01));
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v7 & 1) {
    long long v13 = 0;
  }
  else {
    long long v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  long long v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_97;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_97:
      if (v12)
      {
        char v57 = 1;
        goto LABEL_106;
      }
      if (v13)
      {
        while (1)
        {
          int v58 = *v13++;
          char v59 = 8;
          switch(v58)
          {
            case 0:
              goto LABEL_107;
            case 3:
              goto LABEL_104;
            case 4:
              char v59 = 64;
              goto LABEL_104;
            case 6:
              char v59 = 32;
              goto LABEL_104;
            case 7:
              char v59 = 16;
LABEL_104:
              *(unsigned char *)(a1 + 76) |= v59;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_107;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      BOOL v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    switch((int)v27)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v33 = 0;
        unsigned int v34 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 76) |= 2u;
        while (1)
        {
          uint64_t v36 = *v14;
          uint64_t v37 = *(void *)(v3 + v36);
          unint64_t v38 = v37 + 1;
          if (v37 == -1 || v38 > *(void *)(v3 + *v6)) {
            break;
          }
          char v39 = *(unsigned char *)(*(void *)(v3 + *v16) + v37);
          *(void *)(v3 + v36) = v38;
          v35 |= (unint64_t)(v39 & 0x7F) << v33;
          if ((v39 & 0x80) == 0) {
            goto LABEL_78;
          }
          v33 += 7;
          BOOL v24 = v34++ >= 9;
          if (v24)
          {
            LODWORD(v35) = 0;
            goto LABEL_80;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_78:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_80:
        uint64_t v55 = 68;
        goto LABEL_85;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v41 = 0;
        unsigned int v42 = 0;
        uint64_t v35 = 0;
        *(unsigned char *)(a1 + 76) |= 4u;
        while (2)
        {
          uint64_t v43 = *v14;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v16) + v44);
            *(void *)(v3 + v43) = v45;
            v35 |= (unint64_t)(v46 & 0x7F) << v41;
            if (v46 < 0)
            {
              v41 += 7;
              BOOL v24 = v42++ >= 9;
              if (v24)
              {
                LODWORD(v35) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v35) = 0;
        }
LABEL_84:
        uint64_t v55 = 72;
LABEL_85:
        *(_DWORD *)(a1 + v55) = v35;
        goto LABEL_96;
      case 3:
        if (!v28 || (*(unsigned char *)(a1 + 76) & 8) != 0) {
          goto LABEL_75;
        }
        uint64_t v47 = PBReaderReadString();
        if (v47)
        {
          char v62 = v47;
          -[GEOLogMsgStateRAP _addNoFlagsFeedbackFieldOptionKey:](a1, v47);
          uint64_t v47 = v62;
        }

        goto LABEL_93;
      case 4:
        if (!v28) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x40) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = 48;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v56 = 2 * *(unsigned char *)(a1 + 76);
        goto LABEL_92;
      case 5:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        *(unsigned char *)(a1 + 76) |= 1u;
        uint64_t v50 = *v14;
        unint64_t v51 = *(void *)(v3 + v50);
        if (v51 <= 0xFFFFFFFFFFFFFFF7 && v51 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v52 = *(void *)(*(void *)(v3 + *v16) + v51);
          *(void *)(v3 + v50) = v51 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          uint64_t v52 = 0;
        }
        *(void *)(a1 + 16) = v52;
        goto LABEL_96;
      case 6:
        if (!v28) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x20) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = 40;
          goto LABEL_74;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_112;
        }
        char v56 = 4 * *(unsigned char *)(a1 + 76);
        goto LABEL_92;
      case 7:
        if (!v28)
        {
LABEL_75:
          char v54 = PBReaderSkipValueWithTag();
          int v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v54 & 1) == 0)
          {
LABEL_105:
            char v57 = 0;
            goto LABEL_106;
          }
          goto LABEL_96;
        }
        if ((*(unsigned char *)(a1 + 76) & 0x10) == 0)
        {
          uint64_t v48 = PBReaderReadString();
          uint64_t v49 = 32;
LABEL_74:
          char v53 = *(void **)(a1 + v49);
          *(void *)(a1 + v49) = v48;

          --v8;
LABEL_93:
          int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_96:
          if (!(v12 & 1 | (v8 != 0))) {
            goto LABEL_97;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v56 = 8 * *(unsigned char *)(a1 + 76);
LABEL_92:
          v8 += v56 >> 7;
          goto LABEL_93;
        }
LABEL_112:
        char v57 = 0;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        *(unsigned char *)(a1 + 76) |= 8u;
        *(unsigned char *)(a1 + 76) |= 0x40u;
        *(unsigned char *)(a1 + 76) |= 0x20u;
        *(unsigned char *)(a1 + 76) |= 0x10u;
        if (v57)
        {
LABEL_107:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_108;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v12)
          {
LABEL_108:
            uint64_t v60 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v40 = PBReaderSkipValueWithTag();
        int v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_105;
        }
        goto LABEL_96;
    }
  }
}

void sub_18A3AECBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3AEE90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3AF000(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3B5D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateRAPReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateRAPReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgStateRAPReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgStateRAPReadAllFrom_initialTag;
  }
  unint64_t v6 = GEOLogMsgStateRAPReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v6;
}

void sub_18A3B5F28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateRAPReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t v4 = GEOLogMsgStateRAPReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return v4;
}

void sub_18A3B5F8C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3B625C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateRAPIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = *(unsigned __int8 *)(a1 + 76) > 7u;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A3B678C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateRouteReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    unint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unsigned int v18 = objc_alloc_init(GEORouteDetails);
          if (!GEORouteDetailsReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          unint64_t v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v20 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v20 = 0;
  }
  objc_sync_exit(v3);

  return v20;
}

void sub_18A3B7188(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateRouteReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateRouteReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3B71EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3B7614(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateRoutingSettingsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  unint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 44);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 40)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 52) >> 2) & 1)
      + (*(unsigned char *)(a1 + 52) & 1)
      + ((*(unsigned __int8 *)(a1 + 52) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 1);
  if (v9 & 1 | (v10 > 1) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  int v15 = (int *)MEMORY[0x1E4F940C8];
  int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v15)) {
      goto LABEL_68;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      if (v18++ >= 9)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    if (v25 || (v19 & 7) == 4)
    {
LABEL_68:
      if (v12)
      {
        char v37 = 1;
        goto LABEL_77;
      }
      if (v13)
      {
        while (1)
        {
          int v39 = *v13++;
          char v38 = 4;
          switch(v39)
          {
            case 0:
              goto LABEL_78;
            case 1:
              goto LABEL_74;
            case 2:
              char v38 = 1;
              goto LABEL_74;
            case 3:
              char v38 = 2;
LABEL_74:
              *(unsigned char *)(a1 + 52) |= v38;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_78;
    }
    unint64_t v27 = v19 >> 3;
    BOOL v28 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      BOOL v29 = v13;
      do
      {
        int v31 = *v29++;
        int v30 = v31;
        BOOL v28 = v31 != 0;
        if (v31) {
          BOOL v32 = v30 == v27;
        }
        else {
          BOOL v32 = 1;
        }
      }
      while (!v32);
    }
    if (v27 == 3)
    {
      if (v28)
      {
        if ((*(unsigned char *)(a1 + 52) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_76;
          }
          char v36 = *(unsigned char *)(a1 + 52) << 6;
          goto LABEL_64;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_76;
        }
        char v33 = objc_alloc_init(GEORoutingSettingsDrivingPrefs);
        if (!GEORoutingSettingsDrivingPrefsReadAllFrom((uint64_t)v33, (void *)v3)) {
          goto LABEL_83;
        }
        PBReaderRecallMark();
        uint64_t v34 = 24;
LABEL_55:
        uint64_t v35 = *(void **)(a1 + v34);
        *(void *)(a1 + v34) = v33;

        --v7;
        int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_67:
        if (!(v12 & 1 | (v7 != 0))) {
          goto LABEL_68;
        }
        continue;
      }
LABEL_58:
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_76;
      }
      goto LABEL_67;
    }
    break;
  }
  if (v27 != 2)
  {
    if (v27 != 1)
    {
      if (!PBReaderSkipValueWithTag()) {
        goto LABEL_76;
      }
      goto LABEL_67;
    }
    if (v28)
    {
      if ((*(unsigned char *)(a1 + 52) & 4) == 0)
      {
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_76;
        }
        char v33 = objc_alloc_init(GEORoutingSettingsVirtualGarageSetttings);
        if (!GEORoutingSettingsVirtualGarageSetttingsReadAllFrom((uint64_t)v33, (void *)v3)) {
          goto LABEL_83;
        }
        PBReaderRecallMark();
        uint64_t v34 = 32;
        goto LABEL_55;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0) {
        goto LABEL_76;
      }
      char v36 = 32 * *(unsigned char *)(a1 + 52);
LABEL_64:
      v7 += v36 >> 7;
      goto LABEL_67;
    }
    goto LABEL_58;
  }
  if (!v28) {
    goto LABEL_58;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_76:
      char v37 = 0;
      goto LABEL_77;
    }
    v7 -= *(unsigned char *)(a1 + 52) & 1;
    goto LABEL_67;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_76;
  }
  char v33 = objc_alloc_init(GEORoutingSettingsCyclingPrefs);
  if (GEORoutingSettingsCyclingPrefsReadAllFrom((uint64_t)v33, (void *)v3))
  {
    PBReaderRecallMark();
    uint64_t v34 = 16;
    goto LABEL_55;
  }
LABEL_83:

  char v37 = 0;
  int v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_77:
  *(unsigned char *)(a1 + 52) |= 4u;
  *(unsigned char *)(a1 + 52) |= 1u;
  *(unsigned char *)(a1 + 52) |= 2u;
  if (v37)
  {
LABEL_78:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if ((v12 & 1) == 0) {
      return v3;
    }
    goto LABEL_79;
  }
  unint64_t v3 = 0;
  if (v12)
  {
LABEL_79:
    int v40 = *(void **)(a1 + 8);
    *(void *)(a1 + 8) = 0;
  }
  return v3;
}

void sub_18A3B7C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3B7DF8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3B83A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateRoutingSettingsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 44))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateRoutingSettingsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 48));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 40) = [v8 position];
  *(_DWORD *)(a1 + 44) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOLogMsgStateRoutingSettingsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOLogMsgStateRoutingSettingsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateRoutingSettingsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 32) readAll:1];
    [*(id *)(a1 + 16) readAll:1];
    [*(id *)(a1 + 24) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return Specified;
}

void sub_18A3B8574(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateRoutingSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateRoutingSettingsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3B85D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingSettingsVirtualGarageSetttingsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_39;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        goto LABEL_39;
      }
      if ((v8 >> 3) == 2) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0)
          {
            BOOL v21 = v16++ > 8;
            if (!v21) {
              continue;
            }
          }
          goto LABEL_38;
        }
LABEL_36:
        a1[*v4] = 1;
        goto LABEL_38;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_41:
        BOOL v27 = 0;
        goto LABEL_40;
      }
LABEL_38:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_39;
      }
    }
    if ((v8 & 7) != 0) {
      goto LABEL_41;
    }
    unsigned int v22 = 0;
    while (1)
    {
      uint64_t v23 = *v2;
      uint64_t v24 = *(void *)&a1[v23];
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
        goto LABEL_36;
      }
      int v26 = *(char *)(*(void *)&a1[*v5] + v24);
      *(void *)&a1[v23] = v25;
      if (v26 < 0)
      {
        BOOL v21 = v22++ > 8;
        if (!v21) {
          continue;
        }
      }
      goto LABEL_38;
    }
  }
LABEL_39:
  BOOL v27 = a1[*v4] == 0;
LABEL_40:
  PBReaderRecallMark();
  return v27;
}

BOOL GEORoutingSettingsCyclingPrefsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

BOOL GEORoutingSettingsDrivingPrefsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  unint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

void sub_18A3B906C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateRoutingSettingsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 48));
  BOOL v2 = (*(unsigned char *)(a1 + 52) & 0xF) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 48));
  return v2;
}

void sub_18A3B9344(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateRoutingWaypointsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    unint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__finalWaypointId;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__finalWaypointId;
              goto LABEL_51;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__finalWaypointId;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__originalWaypointId;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__originalWaypointId;
              goto LABEL_51;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__originalWaypointId;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__originalNumberOfStops;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__originalNumberOfStops;
              goto LABEL_51;
            }
          }
          unsigned int v27 = &OBJC_IVAR___GEOLogMsgStateRoutingWaypoints__originalNumberOfStops;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A3B9E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateRoutingWaypointsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateRoutingWaypointsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3B9EC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3BA508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateSearchResultsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 48) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 48) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    char v14 = 0;
  }
  else {
    char v14 = a3;
  }
  if (v12) {
    BOOL v15 = 1;
  }
  else {
    BOOL v15 = v14 == 0;
  }
  BOOL v55 = v15;
  int v16 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  char v19 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
  while (2)
  {
    if (*(void *)(v3 + *v16) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_74;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v16;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v18) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_27;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v28 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v22 = 0;
    }
LABEL_29:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_74:
      if (v13)
      {
        char v49 = 1;
        goto LABEL_89;
      }
      if (!v14) {
        goto LABEL_90;
      }
      while (1)
      {
        int v52 = *v14++;
        int v51 = v52;
        if (v52 == 1) {
          break;
        }
        if (v51 == 3)
        {
          char v50 = 2;
LABEL_80:
          *(unsigned char *)(a1 + v19[440]) |= v50;
        }
        else if (!v51)
        {
          goto LABEL_90;
        }
      }
      char v50 = 4;
      goto LABEL_80;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v13;
    if (!v55)
    {
      unint64_t v32 = v14;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3)
    {
      if (!v31) {
        goto LABEL_61;
      }
      if ((*(unsigned char *)(a1 + v19[440]) & 2) != 0)
      {
        if ((PBReaderSkipValueWithTag() & 1) == 0)
        {
LABEL_86:
          char v49 = 0;
          goto LABEL_88;
        }
        v8 += *(unsigned __int8 *)(a1 + v19[440]) << 30 >> 31;
      }
      else
      {
        uint64_t v37 = PBReaderReadString();
        unint64_t v38 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v37;

        --v8;
      }
LABEL_69:
      uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
      goto LABEL_70;
    }
    if (v30 == 2)
    {
      if ((v7 & 1) == 0) {
        goto LABEL_61;
      }
      char v39 = 0;
      unsigned int v40 = 0;
      uint64_t v41 = 0;
      *(unsigned char *)(a1 + v19[440]) |= 1u;
      while (1)
      {
        uint64_t v42 = *v16;
        uint64_t v43 = *(void *)(v3 + v42);
        unint64_t v44 = v43 + 1;
        if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
          break;
        }
        char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
        *(void *)(v3 + v42) = v44;
        v41 |= (unint64_t)(v45 & 0x7F) << v39;
        if ((v45 & 0x80) == 0) {
          goto LABEL_64;
        }
        v39 += 7;
        BOOL v27 = v40++ >= 9;
        if (v27)
        {
          uint64_t v41 = 0;
          goto LABEL_66;
        }
      }
      *(unsigned char *)(v3 + *v17) = 1;
LABEL_64:
      if (*(unsigned char *)(v3 + *v17)) {
        uint64_t v41 = 0;
      }
LABEL_66:
      *(unsigned char *)(a1 + 44) = v41 != 0;
LABEL_70:
      if (v8) {
        char v48 = 1;
      }
      else {
        char v48 = v13;
      }
      if ((v48 & 1) == 0) {
        goto LABEL_74;
      }
      continue;
    }
    break;
  }
  if (v30 != 1)
  {
    int v46 = PBReaderSkipValueWithTag();
    uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
    if (!v46) {
      goto LABEL_85;
    }
    goto LABEL_70;
  }
  if (!v31 || (*(unsigned char *)(a1 + v19[440]) & 4) != 0)
  {
LABEL_61:
    char v47 = PBReaderSkipValueWithTag();
    uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
    if ((v47 & 1) == 0)
    {
LABEL_85:
      char v49 = 0;
      goto LABEL_89;
    }
    goto LABEL_70;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_86;
  }
  uint64_t v36 = objc_alloc_init(GEOSearchResult);
  if (GEOSearchResultReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    -[GEOLogMsgStateSearchResults _addNoFlagsSearchResults:](a1, v36);

    char v19 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
    goto LABEL_69;
  }

  char v49 = 0;
  char v19 = &OBJC_IVAR___GEOArrivalTimeAndDistanceInfo__distanceRemainingToEndOfRoute;
LABEL_88:
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_89:
  *(unsigned char *)(a1 + v19[440]) |= 4u;
  *(unsigned char *)(a1 + v19[440]) |= 2u;
  if (v49)
  {
LABEL_90:
    unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
    if (v13) {
      goto LABEL_91;
    }
  }
  else
  {
    unint64_t v3 = 0;
    if (v13)
    {
LABEL_91:
      char v53 = *(void **)(a1 + 8);
      *(void *)(a1 + 8) = 0;
    }
  }
  return v3;
}

void sub_18A3BAE10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3BB530(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStateSearchResultsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 24);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgStateSearchResultsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateSearchResultsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgStateSearchResultsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgStateSearchResultsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateSearchResultsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStateSearchResultsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A3BB7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateSearchResultsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateSearchResultsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3BB824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSearchResultIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_61;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_62;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_65;
          }
          unsigned int v37 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_65:
          BOOL v42 = 0;
          goto LABEL_64;
      }
      while (1)
      {
        uint64_t v38 = *v2;
        uint64_t v39 = *(void *)&a1[v38];
        unint64_t v40 = v39 + 1;
        if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
          break;
        }
        int v41 = *(char *)(*(void *)&a1[*v5] + v39);
        *(void *)&a1[v38] = v40;
        if (v41 < 0)
        {
          BOOL v21 = v37++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_62;
      }
LABEL_61:
      a1[*v4] = 1;
LABEL_62:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v42 = a1[*v4] == 0;
LABEL_64:
  PBReaderRecallMark();
  return v42;
}

void sub_18A3BBDD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateSearchResultsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 48) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A3BC204(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3BC6D0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateSuggestionsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 56) >> 4) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v9 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v7 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  if (v12) {
    BOOL v16 = 1;
  }
  else {
    BOOL v16 = v14 == 0;
  }
  BOOL v65 = v16;
  uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_97;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_97:
      if (v13)
      {
        char v59 = 1;
        goto LABEL_108;
      }
      if (!v14) {
        goto LABEL_109;
      }
      while (1)
      {
        int v61 = *v14++;
        int v60 = v61;
        if (v61 == 1) {
          break;
        }
        if (v60 == 2)
        {
          char v62 = 8;
LABEL_106:
          *(unsigned char *)(a1 + 56) |= v62;
        }
        else if (!v60)
        {
          goto LABEL_109;
        }
      }
      char v62 = 16;
      goto LABEL_106;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v65)
    {
      int v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if (!v30) {
          goto LABEL_75;
        }
        if ((*(unsigned char *)(a1 + 56) & 0x10) == 0)
        {
          uint64_t v35 = PBReaderReadString();
          int v36 = *(void **)(a1 + 24);
          *(void *)(a1 + 24) = v35;

          --v8;
          goto LABEL_90;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_107;
        }
        v8 += *(unsigned __int8 *)(a1 + 56) << 27 >> 31;
        goto LABEL_90;
      case 2:
        if (!v30 || (*(unsigned char *)(a1 + 56) & 8) != 0) {
          goto LABEL_75;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_107;
        }
        unsigned int v37 = objc_alloc_init(GEOAutoCompleteResultInfo);
        if (GEOAutoCompleteResultInfoReadAllFrom((uint64_t)v37, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOLogMsgStateSuggestions _addNoFlagsDisplayedResult:](a1, v37);

          uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_90:
          if (v8) {
            char v58 = 1;
          }
          else {
            char v58 = v13;
          }
          if ((v58 & 1) == 0) {
            goto LABEL_97;
          }
          continue;
        }

        char v59 = 0;
        uint64_t v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_108:
        *(unsigned char *)(a1 + 56) |= 0x10u;
        *(unsigned char *)(a1 + 56) |= 8u;
        if (v59)
        {
LABEL_109:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_110;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_110:
            char v63 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 56) |= 4u;
        while (2)
        {
          uint64_t v41 = *v15;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v18) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v26 = v39++ >= 9;
              if (v26)
              {
                LODWORD(v40) = 0;
                goto LABEL_80;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v40) = 0;
        }
LABEL_80:
        uint64_t v57 = 52;
        goto LABEL_89;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_75;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v40 = 0;
        *(unsigned char *)(a1 + 56) |= 2u;
        while (2)
        {
          uint64_t v47 = *v15;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v18) + v48);
            *(void *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v26 = v46++ >= 9;
              if (v26)
              {
                LODWORD(v40) = 0;
                goto LABEL_84;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v40) = 0;
        }
LABEL_84:
        uint64_t v57 = 48;
        goto LABEL_89;
      case 5:
        if (v7)
        {
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v40 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v53 = *v15;
            uint64_t v54 = *(void *)(v3 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(v3 + *v6)) {
              break;
            }
            char v56 = *(unsigned char *)(*(void *)(v3 + *v18) + v54);
            *(void *)(v3 + v53) = v55;
            v40 |= (unint64_t)(v56 & 0x7F) << v51;
            if ((v56 & 0x80) == 0) {
              goto LABEL_86;
            }
            v51 += 7;
            BOOL v26 = v52++ >= 9;
            if (v26)
            {
              LODWORD(v40) = 0;
              goto LABEL_88;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_86:
          if (*(unsigned char *)(v3 + *v17)) {
            LODWORD(v40) = 0;
          }
LABEL_88:
          uint64_t v57 = 44;
LABEL_89:
          *(_DWORD *)(a1 + v57) = v40;
        }
        else
        {
LABEL_75:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_107:
            char v59 = 0;
            goto LABEL_108;
          }
        }
        goto LABEL_90;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_107;
        }
        goto LABEL_90;
    }
  }
}

void sub_18A3BCE90(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3BDCDC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOLogMsgStateSuggestionsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEOLogMsgStateSuggestionsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateSuggestionsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOLogMsgStateSuggestionsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOLogMsgStateSuggestionsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOLogMsgStateSuggestionsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOLogMsgStateSuggestionsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A3BDF70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOLogMsgStateSuggestionsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOLogMsgStateSuggestionsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3BDFD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3BE26C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateSuggestionsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A3BE730(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateSummaryLookAroundLogReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 20) |= 1u;
            while (2)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
                *(void *)&v3[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  BOOL v15 = v19++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_67;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_67:
            *(_DWORD *)(a1 + 8) = v20;
            continue;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 20) |= 4u;
            while (1)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
              *(void *)&v3[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if ((v31 & 0x80) == 0) {
                goto LABEL_69;
              }
              v25 += 7;
              BOOL v15 = v26++ >= 9;
              if (v15)
              {
                uint64_t v27 = 0;
                goto LABEL_71;
              }
            }
            v3[*v6] = 1;
LABEL_69:
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_71:
            BOOL v60 = v27 != 0;
            uint64_t v61 = 13;
            goto LABEL_88;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v34 = 0;
            *(unsigned char *)(a1 + 20) |= 0x20u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
                *(void *)&v3[v35] = v37;
                v34 |= (unint64_t)(v38 & 0x7F) << v32;
                if (v38 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    uint64_t v34 = 0;
                    goto LABEL_75;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v34 = 0;
            }
LABEL_75:
            BOOL v60 = v34 != 0;
            uint64_t v61 = 16;
            goto LABEL_88;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            *(unsigned char *)(a1 + 20) |= 2u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
                *(void *)&v3[v42] = v44;
                v41 |= (unint64_t)(v45 & 0x7F) << v39;
                if (v45 < 0)
                {
                  v39 += 7;
                  BOOL v15 = v40++ >= 9;
                  if (v15)
                  {
                    uint64_t v41 = 0;
                    goto LABEL_79;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v41 = 0;
            }
LABEL_79:
            BOOL v60 = v41 != 0;
            uint64_t v61 = 12;
            goto LABEL_88;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v48 = 0;
            *(unsigned char *)(a1 + 20) |= 8u;
            while (2)
            {
              uint64_t v49 = *v4;
              uint64_t v50 = *(void *)&v3[v49];
              unint64_t v51 = v50 + 1;
              if (v50 == -1 || v51 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v52 = *(unsigned char *)(*(void *)&v3[*v7] + v50);
                *(void *)&v3[v49] = v51;
                v48 |= (unint64_t)(v52 & 0x7F) << v46;
                if (v52 < 0)
                {
                  v46 += 7;
                  BOOL v15 = v47++ >= 9;
                  if (v15)
                  {
                    uint64_t v48 = 0;
                    goto LABEL_83;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v48 = 0;
            }
LABEL_83:
            BOOL v60 = v48 != 0;
            uint64_t v61 = 14;
            goto LABEL_88;
          case 6u:
            char v53 = 0;
            unsigned int v54 = 0;
            uint64_t v55 = 0;
            *(unsigned char *)(a1 + 20) |= 0x10u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_91;
            }
            continue;
        }
        while (1)
        {
          uint64_t v56 = *v4;
          uint64_t v57 = *(void *)&v3[v56];
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)&v3[*v5]) {
            break;
          }
          char v59 = *(unsigned char *)(*(void *)&v3[*v7] + v57);
          *(void *)&v3[v56] = v58;
          v55 |= (unint64_t)(v59 & 0x7F) << v53;
          if ((v59 & 0x80) == 0) {
            goto LABEL_85;
          }
          v53 += 7;
          BOOL v15 = v54++ >= 9;
          if (v15)
          {
            uint64_t v55 = 0;
            goto LABEL_87;
          }
        }
        v3[*v6] = 1;
LABEL_85:
        if (v3[*v6]) {
          uint64_t v55 = 0;
        }
LABEL_87:
        BOOL v60 = v55 != 0;
        uint64_t v61 = 15;
LABEL_88:
        *(unsigned char *)(a1 + v61) = v60;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v62 = v3[*v6] == 0;
  }
  else
  {
LABEL_91:
    BOOL v62 = 0;
  }
  objc_sync_exit(v3);

  return v62;
}

void sub_18A3BF92C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateSummaryLookAroundLogReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateSummaryLookAroundLogReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3BF9A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateTapEventReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_34;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          char v18 = objc_alloc_init(GEOSearchResult);
          if (!GEOSearchResultReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          objc_msgSend((id)a1, "addSearchResults:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v26 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    BOOL v26 = 0;
  }
  objc_sync_exit(v3);

  return v26;
}

void sub_18A3C0C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateTapEventReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateTapEventReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C0C74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateTileSetReadAllFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          char v18 = objc_alloc_init(GEOTileSetInfo);
          if (!GEOTileSetInfoReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addTileSetInfo:", v18, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v19 = v3[*v6] == 0;
  }
  else
  {
LABEL_27:
    BOOL v19 = 0;
  }
  objc_sync_exit(v3);

  return v19;
}

void sub_18A3C19C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateTileSetReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateTileSetReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C1A24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTileSetInfoIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_53;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_54;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_57;
          }
          unsigned int v32 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_57:
          BOOL v37 = 0;
          goto LABEL_56;
      }
      while (1)
      {
        uint64_t v33 = *v2;
        uint64_t v34 = *(void *)&a1[v33];
        unint64_t v35 = v34 + 1;
        if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
          break;
        }
        int v36 = *(char *)(*(void *)&a1[*v5] + v34);
        *(void *)&a1[v33] = v35;
        if (v36 < 0)
        {
          BOOL v21 = v32++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_54;
      }
LABEL_53:
      a1[*v4] = 1;
LABEL_54:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v37 = a1[*v4] == 0;
LABEL_56:
  PBReaderRecallMark();
  return v37;
}

BOOL GEOLogMsgStateTransitReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_32:
          *(unsigned char *)(a1 + 8) = v20 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A3C2720(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateTransitReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateTransitReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C2784(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateTransitStepReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A3C2F0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateTransitStepReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateTransitStepReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C2F70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateUGCPhotoReadAllFrom(uint64_t a1, void *a2)
{
  BOOL v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v2[*MEMORY[0x1E4F940E8]] < *(void *)&v2[*MEMORY[0x1E4F940E0]])
    {
      char v6 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v2[*v5]) {
          break;
        }
        char v7 = 0;
        unsigned int v8 = 0;
        unint64_t v9 = 0;
        while (1)
        {
          uint64_t v10 = *v3;
          uint64_t v11 = *(void *)&v2[v10];
          unint64_t v12 = v11 + 1;
          if (v11 == -1 || v12 > *(void *)&v2[*v4]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v11);
          *(void *)&v2[v10] = v12;
          v9 |= (unint64_t)(v13 & 0x7F) << v7;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v7 += 7;
          BOOL v14 = v8++ >= 9;
          if (v14)
          {
            unint64_t v9 = 0;
            int v15 = v2[*v5];
            goto LABEL_15;
          }
        }
        v2[*v5] = 1;
LABEL_13:
        int v15 = v2[*v5];
        if (v2[*v5]) {
          unint64_t v9 = 0;
        }
LABEL_15:
        int v16 = v9 & 7;
        if (v15 || v16 == 4) {
          break;
        }
        if ((v9 >> 3) == 1)
        {
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_47;
            }
            while (*(void *)&v2[*v3] < *(void *)&v2[*v4] && !v2[*v5])
            {
              char v18 = 0;
              unsigned int v19 = 0;
              uint64_t v20 = 0;
              while (1)
              {
                uint64_t v21 = *v3;
                uint64_t v22 = *(void *)&v2[v21];
                unint64_t v23 = v22 + 1;
                if (v22 == -1 || v23 > *(void *)&v2[*v4]) {
                  break;
                }
                char v24 = *(unsigned char *)(*(void *)&v2[*v6] + v22);
                *(void *)&v2[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  BOOL v14 = v19++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v2[*v5] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            while (1)
            {
              uint64_t v28 = *v3;
              uint64_t v29 = *(void *)&v2[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v2[*v4]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v2[*v6] + v29);
              *(void *)&v2[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_44;
            }
            v2[*v5] = 1;
LABEL_44:
            PBRepeatedInt32Add();
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v2[*v3] < *(void *)&v2[*v4]);
    }
    BOOL v32 = v2[*v5] == 0;
  }
  else
  {
LABEL_47:
    BOOL v32 = 0;
  }
  objc_sync_exit(v2);

  return v32;
}

void sub_18A3C3BB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateUGCPhotoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateUGCPhotoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C3C20(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3C41E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgStateUserReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 92);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 88)];
  char v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = (HIBYTE(*(unsigned __int16 *)(a1 + 104)) & 1) + ((*(unsigned __int16 *)(a1 + 104) >> 9) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v8])
    {
      case -3:
        char v7 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        BOOL v15 = v14 != 0;
        if ((v14 != 0) | v7 & 1) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        if (v14) {
          BOOL v17 = 1;
        }
        else {
          BOOL v17 = v16 == 0;
        }
        BOOL v78 = v17;
        char v18 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v8;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v18) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_121;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v18;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_121:
      if (v15)
      {
        char v72 = 1;
        goto LABEL_123;
      }
      if (!v16) {
        goto LABEL_134;
      }
      while (1)
      {
        int v75 = *v16++;
        int v74 = v75;
        if (v75 == 5) {
          break;
        }
        if (v74 == 6)
        {
          __int16 v73 = 512;
LABEL_130:
          *(_WORD *)(a1 + 104) |= v73;
        }
        else if (!v74)
        {
          goto LABEL_134;
        }
      }
      __int16 v73 = 256;
      goto LABEL_130;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v15;
    if (!v78)
    {
      uint64_t v33 = v16;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_89;
        }
        *(_WORD *)(a1 + 104) |= 0x10u;
        uint64_t v37 = *v18;
        unint64_t v38 = *(void *)(v3 + v37);
        if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v38);
          *(void *)(v3 + v37) = v38 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v70 = 72;
        goto LABEL_116;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_89;
        }
        *(_WORD *)(a1 + 104) |= 0x20u;
        uint64_t v41 = *v18;
        unint64_t v42 = *(void *)(v3 + v41);
        if (v42 <= 0xFFFFFFFFFFFFFFF7 && v42 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v42);
          *(void *)(v3 + v41) = v42 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v70 = 80;
        goto LABEL_116;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_89;
        }
        *(_WORD *)(a1 + 104) |= 8u;
        uint64_t v43 = *v18;
        unint64_t v44 = *(void *)(v3 + v43);
        if (v44 <= 0xFFFFFFFFFFFFFFF7 && v44 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v44);
          *(void *)(v3 + v43) = v44 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v70 = 64;
        goto LABEL_116;
      case 4:
        if ((v7 & 1) == 0) {
          goto LABEL_89;
        }
        *(_WORD *)(a1 + 104) |= 4u;
        uint64_t v45 = *v18;
        unint64_t v46 = *(void *)(v3 + v45);
        if (v46 <= 0xFFFFFFFFFFFFFFF7 && v46 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v46);
          *(void *)(v3 + v45) = v46 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v19) = 1;
          uint64_t v39 = 0;
        }
        uint64_t v70 = 56;
        goto LABEL_116;
      case 5:
        if (!v32) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 104) & 0x100) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 40;
          goto LABEL_64;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_138;
        }
        __int16 v69 = *(_WORD *)(a1 + 104) << 7;
        goto LABEL_104;
      case 6:
        if (!v32) {
          goto LABEL_89;
        }
        if ((*(_WORD *)(a1 + 104) & 0x200) == 0)
        {
          uint64_t v47 = PBReaderReadString();
          uint64_t v48 = 48;
LABEL_64:
          uint64_t v49 = *(void **)(a1 + v48);
          *(void *)(a1 + v48) = v47;

          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          --v8;
LABEL_117:
          if (v8) {
            char v71 = 1;
          }
          else {
            char v71 = v15;
          }
          if ((v71 & 1) == 0) {
            goto LABEL_121;
          }
          continue;
        }
        if (PBReaderSkipValueWithTag())
        {
          __int16 v69 = *(_WORD *)(a1 + 104) << 6;
LABEL_104:
          v8 += v69 >> 15;
LABEL_105:
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_117;
        }
LABEL_138:
        char v72 = 0;
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_123:
        *(_WORD *)(a1 + 104) |= 0x100u;
        *(_WORD *)(a1 + 104) |= 0x200u;
        if (v72)
        {
LABEL_134:
          uint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v15) {
            goto LABEL_135;
          }
          return v3;
        }
        uint64_t v3 = 0;
        if (!v15) {
          return v3;
        }
LABEL_135:
        unint64_t v76 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_89;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v52 = 0;
        *(_WORD *)(a1 + 104) |= 0x80u;
        while (2)
        {
          uint64_t v53 = *v18;
          uint64_t v54 = *(void *)(v3 + v53);
          unint64_t v55 = v54 + 1;
          if (v54 == -1 || v55 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v56 = *(unsigned char *)(*(void *)(v3 + *v20) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v28 = v51++ >= 9;
              if (v28)
              {
                uint64_t v52 = 0;
                goto LABEL_94;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v52 = 0;
        }
LABEL_94:
        BOOL v67 = v52 != 0;
        uint64_t v68 = 101;
        goto LABEL_99;
      case 8:
        if ((v7 & 1) == 0) {
          goto LABEL_89;
        }
        if (!PBReaderPlaceMark() || (GEOSessionIDReadAllFrom((void *)(a1 + 16), v3) & 1) == 0) {
          goto LABEL_138;
        }
        PBReaderRecallMark();
        *(_WORD *)(a1 + 104) |= 1u;
        goto LABEL_105;
      case 9:
        if ((v7 & 1) == 0) {
          goto LABEL_89;
        }
        char v57 = 0;
        unsigned int v58 = 0;
        uint64_t v59 = 0;
        *(_WORD *)(a1 + 104) |= 0x40u;
        while (2)
        {
          uint64_t v60 = *v18;
          uint64_t v61 = *(void *)(v3 + v60);
          unint64_t v62 = v61 + 1;
          if (v61 == -1 || v62 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v63 = *(unsigned char *)(*(void *)(v3 + *v20) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v28 = v58++ >= 9;
              if (v28)
              {
                uint64_t v59 = 0;
                goto LABEL_98;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          uint64_t v59 = 0;
        }
LABEL_98:
        BOOL v67 = v59 != 0;
        uint64_t v68 = 100;
LABEL_99:
        *(unsigned char *)(a1 + v68) = v67;
        goto LABEL_117;
      case 10:
        if (v7)
        {
          *(_WORD *)(a1 + 104) |= 2u;
          uint64_t v64 = *v18;
          unint64_t v65 = *(void *)(v3 + v64);
          if (v65 <= 0xFFFFFFFFFFFFFFF7 && v65 + 8 <= *(void *)(v3 + *v6))
          {
            uint64_t v39 = *(void *)(*(void *)(v3 + *v20) + v65);
            *(void *)(v3 + v64) = v65 + 8;
          }
          else
          {
            *(unsigned char *)(v3 + *v19) = 1;
            uint64_t v39 = 0;
          }
          uint64_t v70 = 32;
LABEL_116:
          *(void *)(a1 + v70) = v39;
        }
        else
        {
LABEL_89:
          char v66 = PBReaderSkipValueWithTag();
          unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
          if ((v66 & 1) == 0)
          {
LABEL_137:
            char v72 = 0;
            goto LABEL_123;
          }
        }
        goto LABEL_117;
      default:
        int v40 = PBReaderSkipValueWithTag();
        unsigned int v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v40) {
          goto LABEL_137;
        }
        goto LABEL_117;
    }
  }
}

void sub_18A3C4BE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgStateUserReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 92))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOLogMsgStateUserReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 96));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 88) = [v8 position];
  *(_DWORD *)(a1 + 92) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOLogMsgStateUserReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOLogMsgStateUserReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOLogMsgStateUserReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return Specified;
}

void sub_18A3C57B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOLogMsgStateUserReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOLogMsgStateUserReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C5814(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateUserIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 96));
  BOOL v2 = (*(_WORD *)(a1 + 104) & 0x700) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 96));
  return v2;
}

BOOL GEOLogMsgStateUserSessionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      while (!v3[*v6])
      {
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if (!PBReaderPlaceMark()
              || (GEOSessionIDReadAllFrom((void *)(a1 + 72), (uint64_t)v3) & 1) == 0)
            {
              goto LABEL_122;
            }
            PBReaderRecallMark();
            __int16 v18 = *(_WORD *)(a1 + 148) | 0x10;
            goto LABEL_73;
          case 2u:
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(_WORD *)(a1 + 148) |= 0x400u;
            while (2)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (v15)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_91;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_91:
            uint64_t v64 = 136;
            goto LABEL_104;
          case 3u:
            *(_WORD *)(a1 + 148) |= 0x100u;
            uint64_t v26 = *v4;
            unint64_t v27 = *(void *)&v3[v26];
            if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v27);
              *(void *)&v3[v26] = v27 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v28 = 0;
            }
            uint64_t v67 = 120;
            goto LABEL_118;
          case 4u:
            if (!PBReaderPlaceMark()
              || (GEOSessionIDReadAllFrom((void *)(a1 + 40), (uint64_t)v3) & 1) == 0)
            {
              goto LABEL_122;
            }
            PBReaderRecallMark();
            __int16 v18 = *(_WORD *)(a1 + 148) | 4;
            goto LABEL_73;
          case 5u:
            *(_WORD *)(a1 + 148) |= 0x80u;
            uint64_t v29 = *v4;
            unint64_t v30 = *(void *)&v3[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v30 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v28 = 0;
            }
            uint64_t v67 = 112;
            goto LABEL_118;
          case 6u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_122;
            }
            unint64_t v31 = objc_alloc_init(GEOLocalTime);
            if (!GEOLocalTimeReadAllFrom((uint64_t)v31, v3))
            {

              goto LABEL_122;
            }
            PBReaderRecallMark();
            BOOL v32 = *(void **)(a1 + 96);
            *(void *)(a1 + 96) = v31;

LABEL_119:
            if (*(void *)&v3[*v4] >= *(void *)&v3[*v5]) {
              goto LABEL_120;
            }
            break;
          case 7u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            *(_WORD *)(a1 + 148) |= 0x200u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
                *(void *)&v3[v36] = v38;
                v35 |= (unint64_t)(v39 & 0x7F) << v33;
                if (v39 < 0)
                {
                  v33 += 7;
                  BOOL v15 = v34++ >= 9;
                  if (v15)
                  {
                    uint64_t v35 = 0;
                    goto LABEL_95;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v35 = 0;
            }
LABEL_95:
            *(void *)(a1 + 128) = v35;
            goto LABEL_119;
          case 8u:
            *(_WORD *)(a1 + 148) |= 0x20u;
            uint64_t v40 = *v4;
            unint64_t v41 = *(void *)&v3[v40];
            if (v41 <= 0xFFFFFFFFFFFFFFF7 && v41 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v41);
              *(void *)&v3[v40] = v41 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v28 = 0;
            }
            uint64_t v67 = 88;
            goto LABEL_118;
          case 9u:
            if (!PBReaderPlaceMark()
              || (GEOSessionIDReadAllFrom((void *)(a1 + 56), (uint64_t)v3) & 1) == 0)
            {
              goto LABEL_122;
            }
            PBReaderRecallMark();
            __int16 v18 = *(_WORD *)(a1 + 148) | 8;
            goto LABEL_73;
          case 0xAu:
            if (!PBReaderPlaceMark()
              || (GEOSessionIDReadAllFrom((void *)(a1 + 24), (uint64_t)v3) & 1) == 0)
            {
              goto LABEL_122;
            }
            PBReaderRecallMark();
            __int16 v18 = *(_WORD *)(a1 + 148) | 2;
            goto LABEL_73;
          case 0xBu:
            *(_WORD *)(a1 + 148) |= 0x40u;
            uint64_t v42 = *v4;
            unint64_t v43 = *(void *)&v3[v42];
            if (v43 <= 0xFFFFFFFFFFFFFFF7 && v43 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v28 = *(void *)(*(void *)&v3[*v7] + v43);
              *(void *)&v3[v42] = v43 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v28 = 0;
            }
            uint64_t v67 = 104;
LABEL_118:
            *(void *)(a1 + v67) = v28;
            goto LABEL_119;
          case 0xCu:
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            *(_WORD *)(a1 + 148) |= 0x1000u;
            while (2)
            {
              uint64_t v47 = *v4;
              uint64_t v48 = *(void *)&v3[v47];
              unint64_t v49 = v48 + 1;
              if (v48 == -1 || v49 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
                *(void *)&v3[v47] = v49;
                v46 |= (unint64_t)(v50 & 0x7F) << v44;
                if (v50 < 0)
                {
                  v44 += 7;
                  BOOL v15 = v45++ >= 9;
                  if (v15)
                  {
                    uint64_t v46 = 0;
                    goto LABEL_99;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v46 = 0;
            }
LABEL_99:
            BOOL v65 = v46 != 0;
            uint64_t v66 = 144;
            goto LABEL_109;
          case 0xDu:
            if (!PBReaderPlaceMark()
              || (GEOSessionIDReadAllFrom((void *)(a1 + 8), (uint64_t)v3) & 1) == 0)
            {
              goto LABEL_122;
            }
            PBReaderRecallMark();
            __int16 v18 = *(_WORD *)(a1 + 148) | 1;
LABEL_73:
            *(_WORD *)(a1 + 148) = v18;
            goto LABEL_119;
          case 0xEu:
            char v51 = 0;
            unsigned int v52 = 0;
            uint64_t v21 = 0;
            *(_WORD *)(a1 + 148) |= 0x800u;
            while (2)
            {
              uint64_t v53 = *v4;
              uint64_t v54 = *(void *)&v3[v53];
              unint64_t v55 = v54 + 1;
              if (v54 == -1 || v55 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v56 = *(unsigned char *)(*(void *)&v3[*v7] + v54);
                *(void *)&v3[v53] = v55;
                v21 |= (unint64_t)(v56 & 0x7F) << v51;
                if (v56 < 0)
                {
                  v51 += 7;
                  BOOL v15 = v52++ >= 9;
                  if (v15)
                  {
                    LODWORD(v21) = 0;
                    goto LABEL_103;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_103:
            uint64_t v64 = 140;
LABEL_104:
            *(_DWORD *)(a1 + v64) = v21;
            goto LABEL_119;
          case 0xFu:
            char v57 = 0;
            unsigned int v58 = 0;
            uint64_t v59 = 0;
            *(_WORD *)(a1 + 148) |= 0x2000u;
            while (2)
            {
              uint64_t v60 = *v4;
              uint64_t v61 = *(void *)&v3[v60];
              unint64_t v62 = v61 + 1;
              if (v61 == -1 || v62 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v63 = *(unsigned char *)(*(void *)&v3[*v7] + v61);
                *(void *)&v3[v60] = v62;
                v59 |= (unint64_t)(v63 & 0x7F) << v57;
                if (v63 < 0)
                {
                  v57 += 7;
                  BOOL v15 = v58++ >= 9;
                  if (v15)
                  {
                    uint64_t v59 = 0;
                    goto LABEL_108;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v59 = 0;
            }
LABEL_108:
            BOOL v65 = v59 != 0;
            uint64_t v66 = 145;
LABEL_109:
            *(unsigned char *)(a1 + v66) = v65;
            goto LABEL_119;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_122;
            }
            goto LABEL_119;
        }
      }
    }
LABEL_120:
    BOOL v68 = v3[*v6] == 0;
  }
  else
  {
LABEL_122:
    BOOL v68 = 0;
  }
  objc_sync_exit(v3);

  return v68;
}

void sub_18A3C7C68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOLogMsgStateUserSessionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOLogMsgStateUserSessionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C7D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapKitCountReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__countType;
                goto LABEL_54;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__countType;
                goto LABEL_57;
              }
            }
            uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__countType;
            goto LABEL_55;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__appType;
                goto LABEL_54;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__appType;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__appType;
            goto LABEL_55;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__useCount;
                goto LABEL_54;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__useCount;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__useCount;
            goto LABEL_55;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)&v3[v41];
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)&v3[*v5]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
          *(void *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__appCount;
            goto LABEL_55;
          }
          v39 += 7;
          BOOL v25 = v40++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__appCount;
            goto LABEL_57;
          }
        }
        uint64_t v26 = &OBJC_IVAR___GEOMapKitCount__appCount;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_57:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A3C9A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMapKitCountReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMapKitCountReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3C9AC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMarcoLiteUsageStateReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateType;
                goto LABEL_54;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateType;
                goto LABEL_57;
              }
            }
            uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateType;
            goto LABEL_55;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateValue;
                goto LABEL_54;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateValue;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateValue;
            goto LABEL_55;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateTime;
                goto LABEL_54;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateTime;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateTime;
            goto LABEL_55;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)&v3[v41];
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)&v3[*v5]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
          *(void *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateExitReason;
            goto LABEL_55;
          }
          v39 += 7;
          BOOL v25 = v40++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateExitReason;
            goto LABEL_57;
          }
        }
        uint64_t v26 = &OBJC_IVAR___GEOMarcoLiteUsageState__stateExitReason;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_57:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A3CB80C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMarcoLiteUsageStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMarcoLiteUsageStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3CB880(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMultiTabsStateReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              uint64_t v26 = &OBJC_IVAR___GEOMultiTabsState__currentTabIndex;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOMultiTabsState__currentTabIndex;
              goto LABEL_42;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOMultiTabsState__currentTabIndex;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              uint64_t v26 = &OBJC_IVAR___GEOMultiTabsState__numberOfTabsOpen;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              uint64_t v26 = &OBJC_IVAR___GEOMultiTabsState__numberOfTabsOpen;
              goto LABEL_42;
            }
          }
          uint64_t v26 = &OBJC_IVAR___GEOMultiTabsState__numberOfTabsOpen;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A3CC4DC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOMultiTabsStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOMultiTabsStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3CC540(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavCameraStateReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_51;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_53;
              }
            }
            v3[*v6] = 1;
LABEL_51:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_53:
            uint64_t v44 = 16;
            goto LABEL_66;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_57;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_57:
            uint64_t v44 = 8;
            goto LABEL_66;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v33 |= (unint64_t)(v37 & 0x7F) << v31;
                if (v37 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    uint64_t v33 = 0;
                    goto LABEL_61;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v33 = 0;
            }
LABEL_61:
            *(unsigned char *)(a1 + 20) = v33 != 0;
            continue;
          case 4u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_69;
            }
            continue;
        }
        while (1)
        {
          uint64_t v40 = *v4;
          uint64_t v41 = *(void *)&v3[v40];
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)&v3[*v5]) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
          *(void *)&v3[v40] = v42;
          v20 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_63;
          }
          v38 += 7;
          BOOL v15 = v39++ >= 9;
          if (v15)
          {
            LODWORD(v20) = 0;
            goto LABEL_65;
          }
        }
        v3[*v6] = 1;
LABEL_63:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_65:
        uint64_t v44 = 12;
LABEL_66:
        *(_DWORD *)(a1 + v44) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A3CF29C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavCameraStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONavCameraStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3CF310(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavVoiceGuidanceSettingsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              unsigned int v26 = &OBJC_IVAR___GEONavVoiceGuidanceSettings__transportMode;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unsigned int v26 = &OBJC_IVAR___GEONavVoiceGuidanceSettings__transportMode;
              goto LABEL_42;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEONavVoiceGuidanceSettings__transportMode;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unsigned int v26 = &OBJC_IVAR___GEONavVoiceGuidanceSettings__navVoiceGuidanceLevel;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unsigned int v26 = &OBJC_IVAR___GEONavVoiceGuidanceSettings__navVoiceGuidanceLevel;
              goto LABEL_42;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEONavVoiceGuidanceSettings__navVoiceGuidanceLevel;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A3D03A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONavVoiceGuidanceSettingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONavVoiceGuidanceSettingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3D0408(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONearbyTransitGroupReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              unsigned int v26 = &OBJC_IVAR___GEONearbyTransitGroup__linesShown;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unsigned int v26 = &OBJC_IVAR___GEONearbyTransitGroup__linesShown;
              goto LABEL_42;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEONearbyTransitGroup__linesShown;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 16) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unsigned int v26 = &OBJC_IVAR___GEONearbyTransitGroup__lines;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              LODWORD(v20) = 0;
              unsigned int v26 = &OBJC_IVAR___GEONearbyTransitGroup__lines;
              goto LABEL_42;
            }
          }
          unsigned int v26 = &OBJC_IVAR___GEONearbyTransitGroup__lines;
        }
LABEL_40:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_42:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A3D0E60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONearbyTransitGroupReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEONearbyTransitGroupReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3D0EC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONetEventAggregateStatsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 4u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__min;
                goto LABEL_94;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              uint64_t v25 = 0;
              v18 += 7;
              unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__min;
              BOOL v27 = v19++ > 8;
              if (v27) {
                goto LABEL_98;
              }
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__min;
            goto LABEL_95;
          case 2u:
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 2u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__max;
                goto LABEL_94;
              }
              char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v32;
              v20 |= (unint64_t)(v33 & 0x7F) << v28;
              if (v33 < 0)
              {
                uint64_t v25 = 0;
                v28 += 7;
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__max;
                BOOL v27 = v29++ > 8;
                if (v27) {
                  goto LABEL_98;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__max;
            goto LABEL_95;
          case 3u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 8u;
            while (2)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p10;
                goto LABEL_94;
              }
              char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
              *(void *)&v3[v36] = v38;
              v20 |= (unint64_t)(v39 & 0x7F) << v34;
              if (v39 < 0)
              {
                uint64_t v25 = 0;
                v34 += 7;
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p10;
                BOOL v27 = v35++ > 8;
                if (v27) {
                  goto LABEL_98;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p10;
            goto LABEL_95;
          case 4u:
            char v40 = 0;
            unsigned int v41 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 0x10u;
            while (2)
            {
              uint64_t v42 = *v4;
              uint64_t v43 = *(void *)&v3[v42];
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p25;
                goto LABEL_94;
              }
              char v45 = *(unsigned char *)(*(void *)&v3[*v7] + v43);
              *(void *)&v3[v42] = v44;
              v20 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                uint64_t v25 = 0;
                v40 += 7;
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p25;
                BOOL v27 = v41++ > 8;
                if (v27) {
                  goto LABEL_98;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p25;
            goto LABEL_95;
          case 5u:
            char v46 = 0;
            unsigned int v47 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 0x20u;
            while (2)
            {
              uint64_t v48 = *v4;
              uint64_t v49 = *(void *)&v3[v48];
              unint64_t v50 = v49 + 1;
              if (v49 == -1 || v50 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p50;
                goto LABEL_94;
              }
              char v51 = *(unsigned char *)(*(void *)&v3[*v7] + v49);
              *(void *)&v3[v48] = v50;
              v20 |= (unint64_t)(v51 & 0x7F) << v46;
              if (v51 < 0)
              {
                uint64_t v25 = 0;
                v46 += 7;
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p50;
                BOOL v27 = v47++ > 8;
                if (v27) {
                  goto LABEL_98;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p50;
            goto LABEL_95;
          case 6u:
            char v52 = 0;
            unsigned int v53 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 0x40u;
            while (2)
            {
              uint64_t v54 = *v4;
              uint64_t v55 = *(void *)&v3[v54];
              unint64_t v56 = v55 + 1;
              if (v55 == -1 || v56 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p75;
                goto LABEL_94;
              }
              char v57 = *(unsigned char *)(*(void *)&v3[*v7] + v55);
              *(void *)&v3[v54] = v56;
              v20 |= (unint64_t)(v57 & 0x7F) << v52;
              if (v57 < 0)
              {
                uint64_t v25 = 0;
                v52 += 7;
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p75;
                BOOL v27 = v53++ > 8;
                if (v27) {
                  goto LABEL_98;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p75;
            goto LABEL_95;
          case 7u:
            char v58 = 0;
            unsigned int v59 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 0x80u;
            while (2)
            {
              uint64_t v60 = *v4;
              uint64_t v61 = *(void *)&v3[v60];
              unint64_t v62 = v61 + 1;
              if (v61 == -1 || v62 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p90;
                goto LABEL_94;
              }
              char v63 = *(unsigned char *)(*(void *)&v3[*v7] + v61);
              *(void *)&v3[v60] = v62;
              v20 |= (unint64_t)(v63 & 0x7F) << v58;
              if (v63 < 0)
              {
                uint64_t v25 = 0;
                v58 += 7;
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p90;
                BOOL v27 = v59++ > 8;
                if (v27) {
                  goto LABEL_98;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p90;
            goto LABEL_95;
          case 8u:
            char v64 = 0;
            unsigned int v65 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 0x100u;
            while (2)
            {
              uint64_t v66 = *v4;
              uint64_t v67 = *(void *)&v3[v66];
              unint64_t v68 = v67 + 1;
              if (v67 == -1 || v68 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p99;
                goto LABEL_94;
              }
              char v69 = *(unsigned char *)(*(void *)&v3[*v7] + v67);
              *(void *)&v3[v66] = v68;
              v20 |= (unint64_t)(v69 & 0x7F) << v64;
              if (v69 < 0)
              {
                uint64_t v25 = 0;
                v64 += 7;
                unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p99;
                BOOL v27 = v65++ > 8;
                if (v27) {
                  goto LABEL_98;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__p99;
            goto LABEL_95;
          case 9u:
            char v70 = 0;
            unsigned int v71 = 0;
            uint64_t v20 = 0;
            *(_WORD *)(a1 + 80) |= 1u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_111;
            }
            continue;
        }
        while (1)
        {
          uint64_t v72 = *v4;
          uint64_t v73 = *(void *)&v3[v72];
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)&v3[*v5]) {
            break;
          }
          char v75 = *(unsigned char *)(*(void *)&v3[*v7] + v73);
          *(void *)&v3[v72] = v74;
          v20 |= (unint64_t)(v75 & 0x7F) << v70;
          if ((v75 & 0x80) == 0)
          {
            unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__algMean;
            goto LABEL_95;
          }
          uint64_t v25 = 0;
          v70 += 7;
          unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__algMean;
          BOOL v27 = v71++ > 8;
          if (v27) {
            goto LABEL_98;
          }
        }
        unsigned int v26 = &OBJC_IVAR___GEONetEventAggregateStats__algMean;
LABEL_94:
        v3[*v6] = 1;
LABEL_95:
        uint64_t v25 = v3[*v6] ? 0 : v20;
LABEL_98:
        *(void *)(a1 + *v26) = v25;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v76 = v3[*v6] == 0;
  }
  else
  {
LABEL_111:
    BOOL v76 = 0;
  }
  objc_sync_exit(v3);

  return v76;
}

void sub_18A3D2434(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONetEventAggregateStatsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v16 = 0;
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              BOOL v21 = v16++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v21 = v22++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v27 = 0;
          while (1)
          {
            uint64_t v28 = *v2;
            uint64_t v29 = *(void *)&a1[v28];
            unint64_t v30 = v29 + 1;
            if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v31 = *(char *)(*(void *)&a1[*v5] + v29);
            *(void *)&a1[v28] = v30;
            if (v31 < 0)
            {
              BOOL v21 = v27++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 4u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v32 = 0;
          while (1)
          {
            uint64_t v33 = *v2;
            uint64_t v34 = *(void *)&a1[v33];
            unint64_t v35 = v34 + 1;
            if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v36 = *(char *)(*(void *)&a1[*v5] + v34);
            *(void *)&a1[v33] = v35;
            if (v36 < 0)
            {
              BOOL v21 = v32++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v37 = 0;
          while (1)
          {
            uint64_t v38 = *v2;
            uint64_t v39 = *(void *)&a1[v38];
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v41 = *(char *)(*(void *)&a1[*v5] + v39);
            *(void *)&a1[v38] = v40;
            if (v41 < 0)
            {
              BOOL v21 = v37++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v42 = 0;
          while (1)
          {
            uint64_t v43 = *v2;
            uint64_t v44 = *(void *)&a1[v43];
            unint64_t v45 = v44 + 1;
            if (v44 == -1 || v45 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v46 = *(char *)(*(void *)&a1[*v5] + v44);
            *(void *)&a1[v43] = v45;
            if (v46 < 0)
            {
              BOOL v21 = v42++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v47 = 0;
          while (1)
          {
            uint64_t v48 = *v2;
            uint64_t v49 = *(void *)&a1[v48];
            unint64_t v50 = v49 + 1;
            if (v49 == -1 || v50 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v51 = *(char *)(*(void *)&a1[*v5] + v49);
            *(void *)&a1[v48] = v50;
            if (v51 < 0)
            {
              BOOL v21 = v47++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v52 = 0;
          while (1)
          {
            uint64_t v53 = *v2;
            uint64_t v54 = *(void *)&a1[v53];
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)&a1[*v3]) {
              goto LABEL_93;
            }
            int v56 = *(char *)(*(void *)&a1[*v5] + v54);
            *(void *)&a1[v53] = v55;
            if (v56 < 0)
            {
              BOOL v21 = v52++ > 8;
              if (!v21) {
                continue;
              }
            }
            goto LABEL_94;
          }
        case 9u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v57 = 0;
          break;
        default:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_97:
          BOOL v62 = 0;
          goto LABEL_96;
      }
      while (1)
      {
        uint64_t v58 = *v2;
        uint64_t v59 = *(void *)&a1[v58];
        unint64_t v60 = v59 + 1;
        if (v59 == -1 || v60 > *(void *)&a1[*v3]) {
          break;
        }
        int v61 = *(char *)(*(void *)&a1[*v5] + v59);
        *(void *)&a1[v58] = v60;
        if (v61 < 0)
        {
          BOOL v21 = v57++ > 8;
          if (!v21) {
            continue;
          }
        }
        goto LABEL_94;
      }
LABEL_93:
      a1[*v4] = 1;
LABEL_94:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v62 = a1[*v4] == 0;
LABEL_96:
  PBReaderRecallMark();
  return v62;
}

void sub_18A3D36A8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONetEventDimensionalGroupingReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 112));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 108);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 104)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = *(_DWORD *)(a1 + 156);
  uint32x4_t v11 = (uint32x4_t)vdupq_n_s32(v10);
  v12.i64[0] = 0x100000001;
  v12.i64[1] = 0x100000001;
  unsigned int v13 = vaddvq_s32(vaddq_s32((int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A641E30), v12), (int32x4_t)vandq_s8((int8x16_t)vshlq_u32(v11, (uint32x4_t)xmmword_18A641E40), v12)))+ ((v10 >> 20) & 1);
  while (1)
  {
    unsigned int v14 = a3[v7];
    if (v14 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v14 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v14)
  {
    ++v13;
    goto LABEL_9;
  }
  char v15 = v9 | (v13 > 6);
  if (v9 & 1 | (v13 > 6) | v8 & 1) {
    unsigned int v16 = 0;
  }
  else {
    unsigned int v16 = a3;
  }
  uint64_t v17 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
  unint64_t v19 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_270;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_24;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_24:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_26:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_270:
      if (v15)
      {
        char v136 = 1;
        goto LABEL_272;
      }
      if (v16)
      {
        while (1)
        {
          int v137 = *v16++;
          int v138 = 0x4000;
          switch(v137)
          {
            case 0:
              goto LABEL_286;
            case 5:
              goto LABEL_285;
            case 6:
              int v138 = 0x80000;
              goto LABEL_285;
            case 7:
              int v138 = 0x8000;
              goto LABEL_285;
            case 13:
              int v138 = 0x200000;
              goto LABEL_285;
            case 14:
              int v138 = 0x10000;
              goto LABEL_285;
            case 16:
              int v138 = 0x40000;
              goto LABEL_285;
            case 20:
              int v138 = 0x20000;
              goto LABEL_285;
            case 21:
              int v138 = 0x400000;
              goto LABEL_285;
            case 22:
              int v138 = 0x100000;
LABEL_285:
              *(_DWORD *)(a1 + 156) |= v138;
              break;
            default:
              continue;
          }
        }
      }
LABEL_286:
      unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
      if (v15) {
        goto LABEL_287;
      }
      return v3;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if (!((v16 == 0) | v15 & 1))
    {
      unsigned int v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 0x400u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_191;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_193;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_191:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_193:
        uint64_t v131 = 148;
        goto LABEL_234;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v44 = 0;
        unsigned int v45 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        while (2)
        {
          uint64_t v46 = *v17;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v19) + v47);
            *(void *)(v3 + v46) = v48;
            v38 |= (unint64_t)(v49 & 0x7F) << v44;
            if (v49 < 0)
            {
              v44 += 7;
              BOOL v27 = v45++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_197;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_197:
        uint64_t v131 = 128;
        goto LABEL_234;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v50 = 0;
        unsigned int v51 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 8u;
        while (2)
        {
          uint64_t v52 = *v17;
          uint64_t v53 = *(void *)(v3 + v52);
          unint64_t v54 = v53 + 1;
          if (v53 == -1 || v54 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v55 = *(unsigned char *)(*(void *)(v3 + *v19) + v53);
            *(void *)(v3 + v52) = v54;
            v38 |= (unint64_t)(v55 & 0x7F) << v50;
            if (v55 < 0)
            {
              v50 += 7;
              BOOL v27 = v51++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_201;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_201:
        uint64_t v131 = 120;
        goto LABEL_234;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v56 = 0;
        unsigned int v57 = 0;
        uint64_t v58 = 0;
        *(_DWORD *)(a1 + 156) |= 0x2000u;
        while (2)
        {
          uint64_t v59 = *v17;
          uint64_t v60 = *(void *)(v3 + v59);
          unint64_t v61 = v60 + 1;
          if (v60 == -1 || v61 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v62 = *(unsigned char *)(*(void *)(v3 + *v19) + v60);
            *(void *)(v3 + v59) = v61;
            v58 |= (unint64_t)(v62 & 0x7F) << v56;
            if (v62 < 0)
            {
              v56 += 7;
              BOOL v27 = v57++ >= 9;
              if (v27)
              {
                uint64_t v58 = 0;
                goto LABEL_205;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v58 = 0;
        }
LABEL_205:
        BOOL v132 = v58 != 0;
        uint64_t v133 = 154;
        goto LABEL_243;
      case 5:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 157) & 0x40) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 16;
          goto LABEL_138;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_291;
        }
        int v135 = (int)(*(_DWORD *)(a1 + 156) << 17) >> 31;
        goto LABEL_267;
      case 6:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 158) & 8) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 72;
          goto LABEL_138;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_291;
        }
        int v135 = (int)(*(_DWORD *)(a1 + 156) << 12) >> 31;
        goto LABEL_267;
      case 7:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 157) & 0x80) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 24;
          goto LABEL_138;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_291;
        }
        int v135 = (int)(*(_DWORD *)(a1 + 156) << 16) >> 31;
        goto LABEL_267;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v65 = 0;
        unsigned int v66 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        while (2)
        {
          uint64_t v67 = *v17;
          uint64_t v68 = *(void *)(v3 + v67);
          unint64_t v69 = v68 + 1;
          if (v68 == -1 || v69 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v70 = *(unsigned char *)(*(void *)(v3 + *v19) + v68);
            *(void *)(v3 + v67) = v69;
            v38 |= (unint64_t)(v70 & 0x7F) << v65;
            if (v70 < 0)
            {
              v65 += 7;
              BOOL v27 = v66++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_209;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_209:
        uint64_t v131 = 132;
        goto LABEL_234;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v71 = 0;
        unsigned int v72 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 0x80u;
        while (2)
        {
          uint64_t v73 = *v17;
          uint64_t v74 = *(void *)(v3 + v73);
          unint64_t v75 = v74 + 1;
          if (v74 == -1 || v75 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v76 = *(unsigned char *)(*(void *)(v3 + *v19) + v74);
            *(void *)(v3 + v73) = v75;
            v38 |= (unint64_t)(v76 & 0x7F) << v71;
            if (v76 < 0)
            {
              v71 += 7;
              BOOL v27 = v72++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_213;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_213:
        uint64_t v131 = 136;
        goto LABEL_234;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v77 = 0;
        unsigned int v78 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 0x100u;
        while (2)
        {
          uint64_t v79 = *v17;
          uint64_t v80 = *(void *)(v3 + v79);
          unint64_t v81 = v80 + 1;
          if (v80 == -1 || v81 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v82 = *(unsigned char *)(*(void *)(v3 + *v19) + v80);
            *(void *)(v3 + v79) = v81;
            v38 |= (unint64_t)(v82 & 0x7F) << v77;
            if (v82 < 0)
            {
              v77 += 7;
              BOOL v27 = v78++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_217;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_217:
        uint64_t v131 = 140;
        goto LABEL_234;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v83 = 0;
        unsigned int v84 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 4u;
        while (2)
        {
          uint64_t v85 = *v17;
          uint64_t v86 = *(void *)(v3 + v85);
          unint64_t v87 = v86 + 1;
          if (v86 == -1 || v87 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v88 = *(unsigned char *)(*(void *)(v3 + *v19) + v86);
            *(void *)(v3 + v85) = v87;
            v38 |= (unint64_t)(v88 & 0x7F) << v83;
            if (v88 < 0)
            {
              v83 += 7;
              BOOL v27 = v84++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_221;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_221:
        uint64_t v131 = 116;
        goto LABEL_234;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v89 = 0;
        unsigned int v90 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 0x200u;
        while (2)
        {
          uint64_t v91 = *v17;
          uint64_t v92 = *(void *)(v3 + v91);
          unint64_t v93 = v92 + 1;
          if (v92 == -1 || v93 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v94 = *(unsigned char *)(*(void *)(v3 + *v19) + v92);
            *(void *)(v3 + v91) = v93;
            v38 |= (unint64_t)(v94 & 0x7F) << v89;
            if (v94 < 0)
            {
              v89 += 7;
              BOOL v27 = v90++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_225;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_225:
        uint64_t v131 = 144;
        goto LABEL_234;
      case 13:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 158) & 0x20) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 88;
          goto LABEL_138;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_291;
        }
        int v135 = (int)(*(_DWORD *)(a1 + 156) << 10) >> 31;
        goto LABEL_267;
      case 14:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 158) & 1) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 40;
          goto LABEL_138;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_291;
        }
        int v135 = (int)(*(_DWORD *)(a1 + 156) << 15) >> 31;
        goto LABEL_267;
      case 15:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v95 = 0;
        unsigned int v96 = 0;
        uint64_t v97 = 0;
        *(_DWORD *)(a1 + 156) |= 1u;
        while (2)
        {
          uint64_t v98 = *v17;
          uint64_t v99 = *(void *)(v3 + v98);
          unint64_t v100 = v99 + 1;
          if (v99 == -1 || v100 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v101 = *(unsigned char *)(*(void *)(v3 + *v19) + v99);
            *(void *)(v3 + v98) = v100;
            v97 |= (unint64_t)(v101 & 0x7F) << v95;
            if (v101 < 0)
            {
              v95 += 7;
              BOOL v27 = v96++ >= 9;
              if (v27)
              {
                uint64_t v97 = 0;
                goto LABEL_229;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v97 = 0;
        }
LABEL_229:
        uint64_t v134 = 32;
        goto LABEL_248;
      case 16:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 158) & 4) == 0)
        {
          uint64_t v63 = PBReaderReadString();
          uint64_t v64 = 64;
LABEL_138:
          BOOL v102 = *(void **)(a1 + v64);
          *(void *)(a1 + v64) = v63;
          goto LABEL_179;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_291;
        }
        int v135 = (int)(*(_DWORD *)(a1 + 156) << 13) >> 31;
        goto LABEL_267;
      case 17:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v103 = 0;
        unsigned int v104 = 0;
        uint64_t v38 = 0;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        while (2)
        {
          uint64_t v105 = *v17;
          uint64_t v106 = *(void *)(v3 + v105);
          unint64_t v107 = v106 + 1;
          if (v106 == -1 || v107 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v108 = *(unsigned char *)(*(void *)(v3 + *v19) + v106);
            *(void *)(v3 + v105) = v107;
            v38 |= (unint64_t)(v108 & 0x7F) << v103;
            if (v108 < 0)
            {
              v103 += 7;
              BOOL v27 = v104++ >= 9;
              if (v27)
              {
                LODWORD(v38) = 0;
                goto LABEL_233;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_233:
        uint64_t v131 = 124;
LABEL_234:
        *(_DWORD *)(a1 + v131) = v38;
        goto LABEL_269;
      case 18:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v109 = 0;
        unsigned int v110 = 0;
        uint64_t v111 = 0;
        *(_DWORD *)(a1 + 156) |= 0x1000u;
        while (2)
        {
          uint64_t v112 = *v17;
          uint64_t v113 = *(void *)(v3 + v112);
          unint64_t v114 = v113 + 1;
          if (v113 == -1 || v114 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v115 = *(unsigned char *)(*(void *)(v3 + *v19) + v113);
            *(void *)(v3 + v112) = v114;
            v111 |= (unint64_t)(v115 & 0x7F) << v109;
            if (v115 < 0)
            {
              v109 += 7;
              BOOL v27 = v110++ >= 9;
              if (v27)
              {
                uint64_t v111 = 0;
                goto LABEL_238;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v111 = 0;
        }
LABEL_238:
        BOOL v132 = v111 != 0;
        uint64_t v133 = 153;
        goto LABEL_243;
      case 19:
        if ((v8 & 1) == 0) {
          goto LABEL_188;
        }
        char v116 = 0;
        unsigned int v117 = 0;
        uint64_t v118 = 0;
        *(_DWORD *)(a1 + 156) |= 0x800u;
        while (2)
        {
          uint64_t v119 = *v17;
          uint64_t v120 = *(void *)(v3 + v119);
          unint64_t v121 = v120 + 1;
          if (v120 == -1 || v121 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v122 = *(unsigned char *)(*(void *)(v3 + *v19) + v120);
            *(void *)(v3 + v119) = v121;
            v118 |= (unint64_t)(v122 & 0x7F) << v116;
            if (v122 < 0)
            {
              v116 += 7;
              BOOL v27 = v117++ >= 9;
              if (v27)
              {
                uint64_t v118 = 0;
                goto LABEL_242;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          uint64_t v118 = 0;
        }
LABEL_242:
        BOOL v132 = v118 != 0;
        uint64_t v133 = 152;
LABEL_243:
        *(unsigned char *)(a1 + v133) = v132;
        goto LABEL_269;
      case 20:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 158) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_291;
          }
          int v135 = (int)(*(_DWORD *)(a1 + 156) << 14) >> 31;
          goto LABEL_267;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_291;
        }
        char v141 = objc_alloc_init(GEONetEventAggregateStats);
        if (!GEONetEventAggregateStatsReadAllFrom((uint64_t)v141, (void *)v3)) {
          goto LABEL_290;
        }
        PBReaderRecallMark();
        uint64_t v123 = 56;
        goto LABEL_178;
      case 21:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 158) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_291;
          }
          int v135 = (int)(*(_DWORD *)(a1 + 156) << 9) >> 31;
          goto LABEL_267;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_291;
        }
        char v141 = objc_alloc_init(GEONetEventAggregateStats);
        if (!GEONetEventAggregateStatsReadAllFrom((uint64_t)v141, (void *)v3)) {
          goto LABEL_290;
        }
        PBReaderRecallMark();
        uint64_t v123 = 96;
        goto LABEL_178;
      case 22:
        if (!v31) {
          goto LABEL_188;
        }
        if ((*(unsigned char *)(a1 + 158) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_291;
          }
          int v135 = (int)(*(_DWORD *)(a1 + 156) << 11) >> 31;
LABEL_267:
          v7 += v135;
          goto LABEL_268;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_291;
        }
        char v141 = objc_alloc_init(GEONetEventAggregateStats);
        if (GEONetEventAggregateStatsReadAllFrom((uint64_t)v141, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v123 = 80;
LABEL_178:
          BOOL v102 = *(void **)(a1 + v123);
          *(void *)(a1 + v123) = v141;
LABEL_179:

          --v7;
LABEL_268:
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_269:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_270;
          }
          continue;
        }
LABEL_290:

LABEL_291:
        char v136 = 0;
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_272:
        *(_DWORD *)(a1 + 156) |= 0x4000u;
        *(_DWORD *)(a1 + 156) |= 0x80000u;
        *(_DWORD *)(a1 + 156) |= 0x8000u;
        *(_DWORD *)(a1 + 156) |= 0x200000u;
        *(_DWORD *)(a1 + 156) |= 0x10000u;
        *(_DWORD *)(a1 + 156) |= 0x40000u;
        *(_DWORD *)(a1 + 156) |= 0x20000u;
        *(_DWORD *)(a1 + 156) |= 0x400000u;
        *(_DWORD *)(a1 + 156) |= 0x100000u;
        if (v136) {
          goto LABEL_286;
        }
        unint64_t v3 = 0;
        if ((v15 & 1) == 0) {
          return v3;
        }
LABEL_287:
        unint64_t v139 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 23:
        if (v8)
        {
          char v124 = 0;
          unsigned int v125 = 0;
          uint64_t v97 = 0;
          *(_DWORD *)(a1 + 156) |= 2u;
          while (1)
          {
            uint64_t v126 = *v17;
            uint64_t v127 = *(void *)(v3 + v126);
            unint64_t v128 = v127 + 1;
            if (v127 == -1 || v128 > *(void *)(v3 + *v6)) {
              break;
            }
            char v129 = *(unsigned char *)(*(void *)(v3 + *v19) + v127);
            *(void *)(v3 + v126) = v128;
            v97 |= (unint64_t)(v129 & 0x7F) << v124;
            if ((v129 & 0x80) == 0) {
              goto LABEL_245;
            }
            v124 += 7;
            BOOL v27 = v125++ >= 9;
            if (v27)
            {
              uint64_t v97 = 0;
              goto LABEL_247;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_245:
          if (*(unsigned char *)(v3 + *v18)) {
            uint64_t v97 = 0;
          }
LABEL_247:
          uint64_t v134 = 48;
LABEL_248:
          *(void *)(a1 + v134) = v97;
        }
        else
        {
LABEL_188:
          char v130 = PBReaderSkipValueWithTag();
          uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v130 & 1) == 0)
          {
LABEL_289:
            char v136 = 0;
            goto LABEL_272;
          }
        }
        goto LABEL_269;
      default:
        int v43 = PBReaderSkipValueWithTag();
        uint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v43) {
          goto LABEL_289;
        }
        goto LABEL_269;
    }
  }
}

void sub_18A3D4A9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D4C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D6948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D6ABC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D6CA0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D6F9C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D7110(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D7280(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D84BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONetEventDimensionalGroupingReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 108))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEONetEventDimensionalGroupingReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 112));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 104) = [v8 position];
  *(_DWORD *)(a1 + 108) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEONetEventDimensionalGroupingReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEONetEventDimensionalGroupingReadAllFrom_initialTag;
  }
  unint64_t Specified = GEONetEventDimensionalGroupingReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3)
  {
    [*(id *)(a1 + 56) readAll:1];
    [*(id *)(a1 + 96) readAll:1];
    [*(id *)(a1 + 80) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 112));
  return Specified;
}

void sub_18A3D8688(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEONetEventDimensionalGroupingReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEONetEventDimensionalGroupingReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3D86EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D8B34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3D8FB0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEONetworkSessionTaskTransactionMetricsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            *(_WORD *)(a1 + 108) |= 0x10u;
            uint64_t v18 = *v4;
            unint64_t v19 = *(void *)&v3[v18];
            if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
              *(void *)&v3[v18] = v19 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 40;
            goto LABEL_123;
          case 2u:
            *(_WORD *)(a1 + 108) |= 8u;
            uint64_t v21 = *v4;
            unint64_t v22 = *(void *)&v3[v21];
            if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v22 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 32;
            goto LABEL_123;
          case 3u:
            *(_WORD *)(a1 + 108) |= 4u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 24;
            goto LABEL_123;
          case 4u:
            *(_WORD *)(a1 + 108) |= 2u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 16;
            goto LABEL_123;
          case 5u:
            *(_WORD *)(a1 + 108) |= 0x400u;
            uint64_t v27 = *v4;
            unint64_t v28 = *(void *)&v3[v27];
            if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v28);
              *(void *)&v3[v27] = v28 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 88;
            goto LABEL_123;
          case 6u:
            *(_WORD *)(a1 + 108) |= 0x200u;
            uint64_t v29 = *v4;
            unint64_t v30 = *(void *)&v3[v29];
            if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v30 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 80;
            goto LABEL_123;
          case 7u:
            *(_WORD *)(a1 + 108) |= 1u;
            uint64_t v31 = *v4;
            unint64_t v32 = *(void *)&v3[v31];
            if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v32);
              *(void *)&v3[v31] = v32 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 8;
            goto LABEL_123;
          case 8u:
            *(_WORD *)(a1 + 108) |= 0x40u;
            uint64_t v33 = *v4;
            unint64_t v34 = *(void *)&v3[v33];
            if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v34);
              *(void *)&v3[v33] = v34 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 56;
            goto LABEL_123;
          case 9u:
            *(_WORD *)(a1 + 108) |= 0x20u;
            uint64_t v35 = *v4;
            unint64_t v36 = *(void *)&v3[v35];
            if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v36 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 48;
            goto LABEL_123;
          case 0xAu:
            *(_WORD *)(a1 + 108) |= 0x100u;
            uint64_t v37 = *v4;
            unint64_t v38 = *(void *)&v3[v37];
            if (v38 <= 0xFFFFFFFFFFFFFFF7 && v38 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v38);
              *(void *)&v3[v37] = v38 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 72;
            goto LABEL_123;
          case 0xBu:
            *(_WORD *)(a1 + 108) |= 0x80u;
            uint64_t v39 = *v4;
            unint64_t v40 = *(void *)&v3[v39];
            if (v40 <= 0xFFFFFFFFFFFFFFF7 && v40 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v40);
              *(void *)&v3[v39] = v40 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v20 = 0;
            }
            uint64_t v71 = 64;
LABEL_123:
            *(void *)(a1 + v71) = v20;
            continue;
          case 0xCu:
            char v41 = 0;
            unsigned int v42 = 0;
            uint64_t v43 = 0;
            *(_WORD *)(a1 + 108) |= 0x800u;
            while (2)
            {
              uint64_t v44 = *v4;
              uint64_t v45 = *(void *)&v3[v44];
              unint64_t v46 = v45 + 1;
              if (v45 == -1 || v46 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v47 = *(unsigned char *)(*(void *)&v3[*v7] + v45);
                *(void *)&v3[v44] = v46;
                v43 |= (unint64_t)(v47 & 0x7F) << v41;
                if (v47 < 0)
                {
                  v41 += 7;
                  BOOL v15 = v42++ >= 9;
                  if (v15)
                  {
                    LODWORD(v43) = 0;
                    goto LABEL_86;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v43) = 0;
            }
LABEL_86:
            uint64_t v68 = 96;
            goto LABEL_100;
          case 0xDu:
            char v48 = 0;
            unsigned int v49 = 0;
            uint64_t v50 = 0;
            *(_WORD *)(a1 + 108) |= 0x2000u;
            while (2)
            {
              uint64_t v51 = *v4;
              uint64_t v52 = *(void *)&v3[v51];
              unint64_t v53 = v52 + 1;
              if (v52 == -1 || v53 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v54 = *(unsigned char *)(*(void *)&v3[*v7] + v52);
                *(void *)&v3[v51] = v53;
                v50 |= (unint64_t)(v54 & 0x7F) << v48;
                if (v54 < 0)
                {
                  v48 += 7;
                  BOOL v15 = v49++ >= 9;
                  if (v15)
                  {
                    uint64_t v50 = 0;
                    goto LABEL_90;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v50 = 0;
            }
LABEL_90:
            BOOL v69 = v50 != 0;
            uint64_t v70 = 104;
            goto LABEL_95;
          case 0xEu:
            char v55 = 0;
            unsigned int v56 = 0;
            uint64_t v57 = 0;
            *(_WORD *)(a1 + 108) |= 0x4000u;
            while (2)
            {
              uint64_t v58 = *v4;
              uint64_t v59 = *(void *)&v3[v58];
              unint64_t v60 = v59 + 1;
              if (v59 == -1 || v60 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v61 = *(unsigned char *)(*(void *)&v3[*v7] + v59);
                *(void *)&v3[v58] = v60;
                v57 |= (unint64_t)(v61 & 0x7F) << v55;
                if (v61 < 0)
                {
                  v55 += 7;
                  BOOL v15 = v56++ >= 9;
                  if (v15)
                  {
                    uint64_t v57 = 0;
                    goto LABEL_94;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v57 = 0;
            }
LABEL_94:
            BOOL v69 = v57 != 0;
            uint64_t v70 = 105;
LABEL_95:
            *(unsigned char *)(a1 + v70) = v69;
            continue;
          case 0xFu:
            char v62 = 0;
            unsigned int v63 = 0;
            uint64_t v43 = 0;
            *(_WORD *)(a1 + 108) |= 0x1000u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_126;
            }
            continue;
        }
        while (1)
        {
          uint64_t v64 = *v4;
          uint64_t v65 = *(void *)&v3[v64];
          unint64_t v66 = v65 + 1;
          if (v65 == -1 || v66 > *(void *)&v3[*v5]) {
            break;
          }
          char v67 = *(unsigned char *)(*(void *)&v3[*v7] + v65);
          *(void *)&v3[v64] = v66;
          v43 |= (unint64_t)(v67 & 0x7F) << v62;
          if ((v67 & 0x80) == 0) {
            goto LABEL_97;
          }
          v62 += 7;
          BOOL v15 = v63++ >= 9;
          if (v15)
          {
            LODWORD(v43) = 0;
            goto LABEL_99;
          }
        }
        v3[*v6] = 1;
LABEL_97:
        if (v3[*v6]) {
          LODWORD(v43) = 0;
        }
LABEL_99:
        uint64_t v68 = 100;
LABEL_100:
        *(_DWORD *)(a1 + v68) = v43;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v72 = v3[*v6] == 0;
  }
  else
  {
LABEL_126:
    BOOL v72 = 0;
  }
  objc_sync_exit(v3);

  return v72;
}

void sub_18A3DADE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceCardModuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 52);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 48)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 64) >> 1) & 1) + ((*(unsigned __int8 *)(a1 + 64) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v7 & 1 | v10) != 0;
  if (((v7 & 1 | v10) != 0) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_95:
    if (v12)
    {
      char v62 = 1;
      goto LABEL_97;
    }
    if (!v13) {
      goto LABEL_107;
    }
    while (1)
    {
      int v64 = *v13++;
      int v63 = v64;
      if (v64 == 2) {
        goto LABEL_106;
      }
      if (v63 == 3)
      {
        LOBYTE(v63) = 4;
LABEL_106:
        *(unsigned char *)(a1 + 64) |= v63;
      }
      else if (!v63)
      {
        goto LABEL_107;
      }
    }
  }
  if (v13) {
    BOOL v16 = (v7 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  BOOL v67 = v16;
  uint64_t v17 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_95;
    }
    char v18 = 0;
    unsigned int v19 = 0;
    unint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = *v14;
      uint64_t v22 = *(void *)(v3 + v21);
      unint64_t v23 = v22 + 1;
      if (v22 == -1 || v23 > *(void *)(v3 + *v6)) {
        break;
      }
      char v24 = *(unsigned char *)(*(void *)(v3 + *v17) + v22);
      *(void *)(v3 + v21) = v23;
      v20 |= (unint64_t)(v24 & 0x7F) << v18;
      if ((v24 & 0x80) == 0) {
        goto LABEL_27;
      }
      v18 += 7;
      BOOL v25 = v19++ >= 9;
      if (v25)
      {
        unint64_t v20 = 0;
        int v26 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_27:
    int v26 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v20 = 0;
    }
LABEL_29:
    int v27 = v20 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_95;
    }
    unint64_t v29 = v20 >> 3;
    BOOL v30 = v12;
    if (!v67)
    {
      uint64_t v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    if (v29 != 3)
    {
      if (v29 == 2)
      {
        if (v30 && (*(unsigned char *)(a1 + 64) & 2) == 0)
        {
          if (v27 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_111;
            }
            while (1)
            {
              uint64_t v44 = (int *)MEMORY[0x1E4F940C8];
              if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
                break;
              }
              char v45 = 0;
              unsigned int v46 = 0;
              uint64_t v47 = 0;
              while (1)
              {
                uint64_t v48 = *v14;
                uint64_t v49 = *(void *)(v3 + v48);
                unint64_t v50 = v49 + 1;
                if (v49 == -1 || v50 > *(void *)(v3 + *v6)) {
                  break;
                }
                char v51 = *(unsigned char *)(*(void *)(v3 + *v17) + v49);
                *(void *)(v3 + v48) = v50;
                v47 |= (unint64_t)(v51 & 0x7F) << v45;
                if (v51 < 0)
                {
                  v45 += 7;
                  BOOL v25 = v46++ >= 9;
                  if (!v25) {
                    continue;
                  }
                }
                goto LABEL_68;
              }
              *(unsigned char *)(v3 + *v44) = 1;
LABEL_68:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v54 = 0;
            unsigned int v55 = 0;
            uint64_t v56 = 0;
            while (1)
            {
              uint64_t v57 = *v14;
              uint64_t v58 = *(void *)(v3 + v57);
              unint64_t v59 = v58 + 1;
              if (v58 == -1 || v59 > *(void *)(v3 + *v6)) {
                break;
              }
              char v60 = *(unsigned char *)(*(void *)(v3 + *v17) + v58);
              *(void *)(v3 + v57) = v59;
              v56 |= (unint64_t)(v60 & 0x7F) << v54;
              if (v60 < 0)
              {
                v54 += 7;
                BOOL v25 = v55++ >= 9;
                if (!v25) {
                  continue;
                }
              }
              goto LABEL_88;
            }
            *(unsigned char *)(v3 + *v15) = 1;
LABEL_88:
            PBRepeatedInt32Add();
          }
          goto LABEL_89;
        }
      }
      else
      {
        if (v29 != 1)
        {
          int v52 = PBReaderSkipValueWithTag();
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          if (!v52) {
            goto LABEL_110;
          }
          goto LABEL_90;
        }
        if (v8)
        {
          char v35 = 0;
          unsigned int v36 = 0;
          uint64_t v37 = 0;
          *(unsigned char *)(a1 + 64) |= 1u;
          while (1)
          {
            uint64_t v38 = *v14;
            uint64_t v39 = *(void *)(v3 + v38);
            unint64_t v40 = v39 + 1;
            if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
              break;
            }
            char v41 = *(unsigned char *)(*(void *)(v3 + *v17) + v39);
            *(void *)(v3 + v38) = v40;
            v37 |= (unint64_t)(v41 & 0x7F) << v35;
            if ((v41 & 0x80) == 0) {
              goto LABEL_74;
            }
            v35 += 7;
            BOOL v25 = v36++ >= 9;
            if (v25)
            {
              LODWORD(v37) = 0;
              goto LABEL_76;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_74:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v37) = 0;
          }
LABEL_76:
          *(_DWORD *)(a1 + 60) = v37;
          goto LABEL_90;
        }
      }
      goto LABEL_71;
    }
    if (v30) {
      break;
    }
LABEL_71:
    char v53 = PBReaderSkipValueWithTag();
    BOOL v15 = (int *)MEMORY[0x1E4F940C8];
    if ((v53 & 1) == 0)
    {
LABEL_110:
      char v62 = 0;
      goto LABEL_97;
    }
LABEL_90:
    if (v9) {
      int v61 = 1;
    }
    else {
      int v61 = v12;
    }
    if (v61 != 1 || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
      goto LABEL_95;
    }
  }
  if ((*(unsigned char *)(a1 + 64) & 4) == 0)
  {
    uint64_t v42 = PBReaderReadString();
    uint64_t v43 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v42;

    BOOL v15 = (int *)MEMORY[0x1E4F940C8];
    --v9;
    goto LABEL_90;
  }
  if (PBReaderSkipValueWithTag())
  {
    v9 += *(unsigned __int8 *)(a1 + 64) << 29 >> 31;
LABEL_89:
    BOOL v15 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_90;
  }
LABEL_111:
  char v62 = 0;
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_97:
  *(unsigned char *)(a1 + 64) |= 2u;
  *(unsigned char *)(a1 + 64) |= 4u;
  if (v62)
  {
LABEL_107:
    unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
    if (v12) {
      goto LABEL_108;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v12) {
    return v3;
  }
LABEL_108:
  uint64_t v65 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_18A3DCF80(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3DD384(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceCardModuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 52))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOPlaceCardModuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 56));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 48) = [v8 position];
  *(_DWORD *)(a1 + 52) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOPlaceCardModuleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOPlaceCardModuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOPlaceCardModuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return Specified;
}

void sub_18A3DD514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOPlaceCardModuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOPlaceCardModuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3DD578(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3DD754(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPlaceCardModuleIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 56));
  BOOL v2 = (*(unsigned char *)(a1 + 64) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 56));
  return v2;
}

void sub_18A3DDA94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPlaceIdDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_51;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                uint64_t v20 = 0;
                goto LABEL_53;
              }
            }
            v3[*v6] = 1;
LABEL_51:
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_53:
            uint64_t v44 = 16;
            goto LABEL_58;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v27 = *v4;
              uint64_t v28 = *(void *)&v3[v27];
              unint64_t v29 = v28 + 1;
              if (v28 == -1 || v29 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v30 = *(unsigned char *)(*(void *)&v3[*v7] + v28);
                *(void *)&v3[v27] = v29;
                v20 |= (unint64_t)(v30 & 0x7F) << v25;
                if (v30 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v20 = 0;
                    goto LABEL_57;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v20 = 0;
            }
LABEL_57:
            uint64_t v44 = 8;
LABEL_58:
            *(void *)(a1 + v44) = v20;
            continue;
          case 3u:
            char v31 = 0;
            unsigned int v32 = 0;
            uint64_t v33 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v33 |= (unint64_t)(v37 & 0x7F) << v31;
                if (v37 < 0)
                {
                  v31 += 7;
                  BOOL v15 = v32++ >= 9;
                  if (v15)
                  {
                    LODWORD(v33) = 0;
                    goto LABEL_62;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v33) = 0;
            }
LABEL_62:
            uint64_t v45 = 24;
            goto LABEL_67;
          case 4u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v33 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_70;
            }
            continue;
        }
        while (1)
        {
          uint64_t v40 = *v4;
          uint64_t v41 = *(void *)&v3[v40];
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)&v3[*v5]) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
          *(void *)&v3[v40] = v42;
          v33 |= (unint64_t)(v43 & 0x7F) << v38;
          if ((v43 & 0x80) == 0) {
            goto LABEL_64;
          }
          v38 += 7;
          BOOL v15 = v39++ >= 9;
          if (v15)
          {
            LODWORD(v33) = 0;
            goto LABEL_66;
          }
        }
        v3[*v6] = 1;
LABEL_64:
        if (v3[*v6]) {
          LODWORD(v33) = 0;
        }
LABEL_66:
        uint64_t v45 = 28;
LABEL_67:
        *(_DWORD *)(a1 + v45) = v33;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v46 = v3[*v6] == 0;
  }
  else
  {
LABEL_70:
    BOOL v46 = 0;
  }
  objc_sync_exit(v3);

  return v46;
}

void sub_18A3DE770(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPlaceIdDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPlaceIdDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3DE7E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPredictedCommuteDestinationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 24) |= 4u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_46;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_48;
            }
          }
          v3[*v6] = 1;
LABEL_46:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_48:
          *(unsigned char *)(a1 + 20) = v28 != 0;
        }
        else if (v18 == 2)
        {
          *(unsigned char *)(a1 + 24) |= 1u;
          uint64_t v33 = *v4;
          unint64_t v34 = *(void *)&v3[v33];
          if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v35 = *(void *)(*(void *)&v3[*v7] + v34);
            *(void *)&v3[v33] = v34 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v35 = 0;
          }
          *(void *)(a1 + 8) = v35;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 24) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_42;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_44;
            }
          }
          v3[*v6] = 1;
LABEL_42:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_44:
          *(_DWORD *)(a1 + 16) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_53;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v36 = v3[*v6] == 0;
  }
  else
  {
LABEL_53:
    BOOL v36 = 0;
  }
  objc_sync_exit(v3);

  return v36;
}

void sub_18A3DF7C0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPredictedCommuteDestinationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPredictedCommuteDestinationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3DF824(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        int v17 = v10 & 7;
        if (v16 || v17 == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v26 = 0;
          unsigned int v27 = 0;
          uint64_t v28 = 0;
          *(unsigned char *)(a1 + 36) |= 1u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v28 |= (unint64_t)(v32 & 0x7F) << v26;
            if ((v32 & 0x80) == 0) {
              goto LABEL_44;
            }
            v26 += 7;
            BOOL v15 = v27++ >= 9;
            if (v15)
            {
              uint64_t v28 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v28 = 0;
          }
LABEL_46:
          *(unsigned char *)(a1 + 32) = v28 != 0;
        }
        else if ((v10 >> 3) == 1)
        {
          if (v17 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_59;
            }
            while (*(void *)&v3[*v4] < *(void *)&v3[*v5] && !v3[*v6])
            {
              char v19 = 0;
              unsigned int v20 = 0;
              uint64_t v21 = 0;
              while (1)
              {
                uint64_t v22 = *v4;
                uint64_t v23 = *(void *)&v3[v22];
                unint64_t v24 = v23 + 1;
                if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                  break;
                }
                char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
                *(void *)&v3[v22] = v24;
                v21 |= (unint64_t)(v25 & 0x7F) << v19;
                if (v25 < 0)
                {
                  v19 += 7;
                  BOOL v15 = v20++ >= 9;
                  if (!v15) {
                    continue;
                  }
                }
                goto LABEL_33;
              }
              v3[*v6] = 1;
LABEL_33:
              PBRepeatedUInt64Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v35 = 0;
            while (1)
            {
              uint64_t v36 = *v4;
              uint64_t v37 = *(void *)&v3[v36];
              unint64_t v38 = v37 + 1;
              if (v37 == -1 || v38 > *(void *)&v3[*v5]) {
                break;
              }
              char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
              *(void *)&v3[v36] = v38;
              v35 |= (unint64_t)(v39 & 0x7F) << v33;
              if (v39 < 0)
              {
                v33 += 7;
                BOOL v15 = v34++ >= 9;
                if (!v15) {
                  continue;
                }
              }
              goto LABEL_56;
            }
            v3[*v6] = 1;
LABEL_56:
            PBRepeatedUInt64Add();
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_59;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_59:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A3E06B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOPublisherDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOPublisherDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3E0718(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E1320(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORevealedPlaceCardModuleReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)(*(void *)&vdup_n_s16(*(unsigned __int8 *)(a1 + 80)) & 0xFF00FF00FF00FFLL), (uint16x4_t)0xFFFCFFFDFFFBFFFALL) & 0xFF01FF01FF01FF01))+ ((*(unsigned char *)(a1 + 80) & 2) != 0)+ ((*(unsigned char *)(a1 + 80) & 4) != 0));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v55 = (v16 == 0) | v15;
        int v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v19 = (int *)MEMORY[0x1E4F940B8];
        char v54 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_99;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_99:
      if (v15)
      {
        char v48 = 1;
        goto LABEL_113;
      }
      if (v16)
      {
        while (1)
        {
          int v50 = *v16++;
          char v49 = 32;
          switch(v50)
          {
            case 0:
              goto LABEL_114;
            case 2:
              goto LABEL_108;
            case 3:
              char v49 = 64;
              goto LABEL_108;
            case 4:
              char v49 = 8;
              goto LABEL_108;
            case 5:
              char v49 = 16;
              goto LABEL_108;
            case 6:
              char v49 = 2;
              goto LABEL_108;
            case 7:
              char v49 = 4;
LABEL_108:
              *(unsigned char *)(a1 + 80) |= v49;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_114;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v55 & 1) == 0)
    {
      char v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_78;
        }
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 80) |= 1u;
        while (1)
        {
          uint64_t v39 = *v17;
          uint64_t v40 = *(void *)(v3 + v39);
          unint64_t v41 = v40 + 1;
          if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
            break;
          }
          char v42 = *(unsigned char *)(*(void *)(v3 + *v19) + v40);
          *(void *)(v3 + v39) = v41;
          v38 |= (unint64_t)(v42 & 0x7F) << v36;
          if ((v42 & 0x80) == 0) {
            goto LABEL_81;
          }
          v36 += 7;
          BOOL v27 = v37++ >= 9;
          if (v27)
          {
            LODWORD(v38) = 0;
            goto LABEL_83;
          }
        }
        *(unsigned char *)(v3 + *v18) = 1;
LABEL_81:
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v38) = 0;
        }
LABEL_83:
        *(_DWORD *)(a1 + 76) = v38;
        goto LABEL_98;
      case 2:
        if (!v31) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v47 = 4 * *(unsigned char *)(a1 + 80);
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v53 = objc_alloc_init(GEORevealedPlaceCardModuleTypeTitle);
        if (!GEORevealedPlaceCardModuleTypeTitleReadAllFrom((uint64_t)v53, (void *)v3)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        uint64_t v44 = 48;
        goto LABEL_77;
      case 3:
        if (!v31) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v47 = 2 * *(unsigned char *)(a1 + 80);
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v53 = objc_alloc_init(GEORevealedPlaceCardModuleTypeUnifiedActionRow);
        if (!GEORevealedPlaceCardModuleTypeUnifiedActionRowReadAllFrom(v53, (void *)v3, v9 & 1)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        uint64_t v44 = 56;
        goto LABEL_77;
      case 4:
        if (!v31) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 80) & 8) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v47 = 16 * *(unsigned char *)(a1 + 80);
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v53 = objc_alloc_init(GEORevealedPlaceCardModuleTypePhotos);
        if (!GEORevealedPlaceCardModuleTypePhotosReadAllFrom((uint64_t)v53, (void *)v3)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        uint64_t v44 = 32;
        goto LABEL_77;
      case 5:
        if (!v31) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 80) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v47 = 8 * *(unsigned char *)(a1 + 80);
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v53 = objc_alloc_init(GEORevealedPlaceCardModuleTypeShowcase);
        if (!GEORevealedPlaceCardModuleTypeShowcaseReadAllFrom((uint64_t)v53, (void *)v3, v9 & 1)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        uint64_t v44 = 40;
        goto LABEL_77;
      case 6:
        if (!v31) {
          goto LABEL_78;
        }
        if ((*(unsigned char *)(a1 + 80) & 2) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v47 = *(unsigned char *)(a1 + 80) << 6;
          goto LABEL_96;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v53 = objc_alloc_init(GEORevealedPlaceCardModuleTypeHours);
        if (!GEORevealedPlaceCardModuleTypeHoursReadAllFrom(v53, (void *)v3, v9 & 1)) {
          goto LABEL_111;
        }
        PBReaderRecallMark();
        uint64_t v44 = 16;
        goto LABEL_77;
      case 7:
        if (!v31)
        {
LABEL_78:
          char v46 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          char v15 = v54;
          if ((v46 & 1) == 0)
          {
LABEL_110:
            char v48 = 0;
            goto LABEL_113;
          }
LABEL_98:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_99;
          }
          continue;
        }
        if ((*(unsigned char *)(a1 + 80) & 4) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_112;
          }
          char v47 = 32 * *(unsigned char *)(a1 + 80);
LABEL_96:
          v7 += v47 >> 7;
LABEL_97:
          char v15 = v54;
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_98;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_112;
        }
        char v53 = objc_alloc_init(GEORevealedPlaceCardModuleTypeInfos);
        if (GEORevealedPlaceCardModuleTypeInfosReadAllFrom(v53, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          uint64_t v44 = 24;
LABEL_77:
          uint64_t v45 = *(void **)(a1 + v44);
          *(void *)(a1 + v44) = v53;

          --v7;
          goto LABEL_97;
        }
LABEL_111:

LABEL_112:
        char v48 = 0;
        char v15 = v54;
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_113:
        *(unsigned char *)(a1 + 80) |= 0x20u;
        *(unsigned char *)(a1 + 80) |= 0x40u;
        *(unsigned char *)(a1 + 80) |= 8u;
        *(unsigned char *)(a1 + 80) |= 0x10u;
        *(unsigned char *)(a1 + 80) |= 2u;
        *(unsigned char *)(a1 + 80) |= 4u;
        if (v48)
        {
LABEL_114:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_115;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v15)
          {
LABEL_115:
            char v51 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      default:
        int v43 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v54;
        if (!v43) {
          goto LABEL_110;
        }
        goto LABEL_98;
    }
  }
}

void sub_18A3E1CF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E1E5C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E1FC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E2130(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E229C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E3010(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORevealedPlaceCardModuleCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 48) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 32) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 16) readAll:1];
  BOOL v2 = *(void **)(a1 + 24);

  return [v2 readAll:1];
}

unint64_t GEORevealedPlaceCardModuleReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORevealedPlaceCardModuleReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORevealedPlaceCardModuleReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORevealedPlaceCardModuleReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORevealedPlaceCardModuleReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORevealedPlaceCardModuleCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A3E3240(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORevealedPlaceCardModuleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORevealedPlaceCardModuleReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3E32A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeTitleIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_43:
            PBReaderRecallMark();
            return 0;
          }
LABEL_29:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v22 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v23 = *v2;
              uint64_t v24 = *(void *)&a1[v23];
              unint64_t v25 = v24 + 1;
              if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
                break;
              }
              int v26 = *(char *)(*(void *)&a1[*v5] + v24);
              *(void *)&a1[v23] = v25;
              if (v26 < 0)
              {
                BOOL v13 = v22++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_29;
            }
            a1[*v4] = 1;
          }
          PBReaderRecallMark();
        }
        else
        {
          if ((v8 & 7) != 0) {
            goto LABEL_43;
          }
          while (1)
          {
            uint64_t v17 = *v2;
            uint64_t v18 = *(void *)&a1[v17];
            unint64_t v19 = v18 + 1;
            if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
              break;
            }
            int v20 = *(char *)(*(void *)&a1[*v5] + v18);
            *(void *)&a1[v17] = v19;
            if (v20 < 0)
            {
              unsigned int v21 = v15++;
              if (v21 <= 8) {
                continue;
              }
            }
            goto LABEL_40;
          }
          a1[*v4] = 1;
        }
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_43;
      }
LABEL_40:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v27 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v27;
}

BOOL GEORevealedPlaceCardModuleTypeUnifiedActionRowIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleButtonIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORevealedPlaceCardModuleTypePhotosIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

BOOL GEORevealedPlaceCardModuleTypeShowcaseIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleButtonIsValid(a1)) {
          goto LABEL_29;
        }
        PBReaderRecallMark();
      }
      else if ((v8 >> 3) == 1 && v15 != 2 || (PBReaderSkipValueWithTag() & 1) == 0)
      {
LABEL_29:
        PBReaderRecallMark();
        return 0;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORevealedPlaceCardModuleTypeHoursIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleButtonIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

BOOL GEORevealedPlaceCardModuleTypeInfosIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEORevealedPlaceCardModuleButtonIsValid(a1))
        {
LABEL_27:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_27;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v17 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v17;
}

void sub_18A3E4064(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORevealedPlaceCardModuleIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  if ((v2 & 0xE8) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEORevealedPlaceCardModuleTypeShowcaseIsDirty(*(os_unfair_lock_s **)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int8 *)(a1 + 80);
  }
  if ((v2 & 2) != 0) {
    return 1;
  }
  return (v2 >> 2) & 1;
}

os_unfair_lock_s *GEORevealedPlaceCardModuleIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORevealedPlaceCardModuleIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 18);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A3E44CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E5144(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORevealedPlaceCardModuleButtonReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 36);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 32)];
  char v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 56) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 56) >> 4) & 1);
  while (1)
  {
    unsigned int v11 = a3[v9];
    if (v11 >= 0xFFFFFFFE)
    {
      char v7 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v9;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  int v12 = v7 & 1 | v10;
  BOOL v13 = v12 != 0;
  if ((v12 != 0) | v8 & 1) {
    int v14 = 0;
  }
  else {
    int v14 = a3;
  }
  int v15 = (int *)MEMORY[0x1E4F940E8];
  if (v12) {
    BOOL v16 = 1;
  }
  else {
    BOOL v16 = v14 == 0;
  }
  BOOL v69 = v16;
  BOOL v17 = (int *)MEMORY[0x1E4F940C8];
  uint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v17)) {
      goto LABEL_99;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v17);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v17) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v17);
    if (*(unsigned char *)(v3 + *v17)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    if (v27 || (v21 & 7) == 4)
    {
LABEL_99:
      if (v13)
      {
        char v63 = 1;
        goto LABEL_110;
      }
      if (!v14) {
        goto LABEL_111;
      }
      while (1)
      {
        int v65 = *v14++;
        int v64 = v65;
        if (v65 == 3) {
          break;
        }
        if (v64 == 4)
        {
          char v66 = 16;
LABEL_108:
          *(unsigned char *)(a1 + 56) |= v66;
        }
        else if (!v64)
        {
          goto LABEL_111;
        }
      }
      char v66 = 8;
      goto LABEL_108;
    }
    unint64_t v29 = v21 >> 3;
    BOOL v30 = v13;
    if (!v69)
    {
      BOOL v31 = v14;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(unsigned char *)(a1 + 56) |= 2u;
        while (1)
        {
          uint64_t v38 = *v15;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v18) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_77;
          }
          v35 += 7;
          BOOL v26 = v36++ >= 9;
          if (v26)
          {
            LODWORD(v37) = 0;
            goto LABEL_79;
          }
        }
        *(unsigned char *)(v3 + *v17) = 1;
LABEL_77:
        if (*(unsigned char *)(v3 + *v17)) {
          LODWORD(v37) = 0;
        }
LABEL_79:
        uint64_t v60 = 48;
        goto LABEL_88;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_74;
        }
        char v43 = 0;
        unsigned int v44 = 0;
        uint64_t v45 = 0;
        *(unsigned char *)(a1 + 56) |= 4u;
        while (2)
        {
          uint64_t v46 = *v15;
          uint64_t v47 = *(void *)(v3 + v46);
          unint64_t v48 = v47 + 1;
          if (v47 == -1 || v48 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v17) = 1;
          }
          else
          {
            char v49 = *(unsigned char *)(*(void *)(v3 + *v18) + v47);
            *(void *)(v3 + v46) = v48;
            v45 |= (unint64_t)(v49 & 0x7F) << v43;
            if (v49 < 0)
            {
              v43 += 7;
              BOOL v26 = v44++ >= 9;
              if (v26)
              {
                uint64_t v45 = 0;
                goto LABEL_83;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v17)) {
          uint64_t v45 = 0;
        }
LABEL_83:
        *(unsigned char *)(a1 + 52) = v45 != 0;
        goto LABEL_95;
      case 3:
        if (!v30) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 56) & 8) == 0)
        {
          uint64_t v50 = PBReaderReadString();
          uint64_t v51 = 16;
          goto LABEL_65;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_116;
        }
        char v61 = 16 * *(unsigned char *)(a1 + 56);
        goto LABEL_93;
      case 4:
        if (!v30) {
          goto LABEL_74;
        }
        if ((*(unsigned char *)(a1 + 56) & 0x10) == 0)
        {
          uint64_t v50 = PBReaderReadString();
          uint64_t v51 = 24;
LABEL_65:
          int v52 = *(void **)(a1 + v51);
          *(void *)(a1 + v51) = v50;

          --v9;
          goto LABEL_94;
        }
        if (PBReaderSkipValueWithTag())
        {
          char v61 = 8 * *(unsigned char *)(a1 + 56);
LABEL_93:
          v9 += v61 >> 7;
LABEL_94:
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_95:
          if (v9) {
            char v62 = 1;
          }
          else {
            char v62 = v13;
          }
          if ((v62 & 1) == 0) {
            goto LABEL_99;
          }
          continue;
        }
LABEL_116:
        char v63 = 0;
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
LABEL_110:
        *(unsigned char *)(a1 + 56) |= 8u;
        *(unsigned char *)(a1 + 56) |= 0x10u;
        if (v63)
        {
LABEL_111:
          unint64_t v3 = *(unsigned char *)(v3 + *v17) == 0;
          if (v13) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v3 = 0;
          if (v13)
          {
LABEL_112:
            BOOL v67 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 5:
        if (v8)
        {
          char v53 = 0;
          unsigned int v54 = 0;
          uint64_t v37 = 0;
          *(unsigned char *)(a1 + 56) |= 1u;
          while (1)
          {
            uint64_t v55 = *v15;
            uint64_t v56 = *(void *)(v3 + v55);
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)(v3 + *v6)) {
              break;
            }
            char v58 = *(unsigned char *)(*(void *)(v3 + *v18) + v56);
            *(void *)(v3 + v55) = v57;
            v37 |= (unint64_t)(v58 & 0x7F) << v53;
            if ((v58 & 0x80) == 0) {
              goto LABEL_85;
            }
            v53 += 7;
            BOOL v26 = v54++ >= 9;
            if (v26)
            {
              LODWORD(v37) = 0;
              goto LABEL_87;
            }
          }
          *(unsigned char *)(v3 + *v17) = 1;
LABEL_85:
          if (*(unsigned char *)(v3 + *v17)) {
            LODWORD(v37) = 0;
          }
LABEL_87:
          uint64_t v60 = 44;
LABEL_88:
          *(_DWORD *)(a1 + v60) = v37;
        }
        else
        {
LABEL_74:
          char v59 = PBReaderSkipValueWithTag();
          BOOL v17 = (int *)MEMORY[0x1E4F940C8];
          if ((v59 & 1) == 0)
          {
LABEL_109:
            char v63 = 0;
            goto LABEL_110;
          }
        }
        goto LABEL_95;
      default:
        int v42 = PBReaderSkipValueWithTag();
        BOOL v17 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_109;
        }
        goto LABEL_95;
    }
  }
}

void sub_18A3E58E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E6548(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORevealedPlaceCardModuleButtonReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORevealedPlaceCardModuleButtonReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEORevealedPlaceCardModuleButtonReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEORevealedPlaceCardModuleButtonReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORevealedPlaceCardModuleButtonReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A3E66D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORevealedPlaceCardModuleButtonReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORevealedPlaceCardModuleButtonReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3E673C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleButtonIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  unsigned int v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v17 = 0;
          while (1)
          {
            uint64_t v18 = *v2;
            uint64_t v19 = *(void *)&a1[v18];
            unint64_t v20 = v19 + 1;
            if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v21 = *(char *)(*(void *)&a1[*v5] + v19);
            *(void *)&a1[v18] = v20;
            if (v21 < 0)
            {
              BOOL v22 = v17++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v23 = 0;
          while (1)
          {
            uint64_t v24 = *v2;
            uint64_t v25 = *(void *)&a1[v24];
            unint64_t v26 = v25 + 1;
            if (v25 == -1 || v26 > *(void *)&a1[*v3]) {
              goto LABEL_48;
            }
            int v27 = *(char *)(*(void *)&a1[*v5] + v25);
            *(void *)&a1[v24] = v26;
            if (v27 < 0)
            {
              BOOL v22 = v23++ > 8;
              if (!v22) {
                continue;
              }
            }
            goto LABEL_49;
          }
        case 3u:
          if (v15 == 2) {
            goto LABEL_38;
          }
          goto LABEL_52;
        case 4u:
          if (v15 == 2) {
            goto LABEL_38;
          }
          goto LABEL_52;
        case 5u:
          if ((v8 & 7) != 0) {
            goto LABEL_52;
          }
          unsigned int v28 = 0;
          break;
        default:
LABEL_38:
          if (PBReaderSkipValueWithTag()) {
            continue;
          }
LABEL_52:
          BOOL v33 = 0;
          goto LABEL_51;
      }
      while (1)
      {
        uint64_t v29 = *v2;
        uint64_t v30 = *(void *)&a1[v29];
        unint64_t v31 = v30 + 1;
        if (v30 == -1 || v31 > *(void *)&a1[*v3]) {
          break;
        }
        int v32 = *(char *)(*(void *)&a1[*v5] + v30);
        *(void *)&a1[v29] = v31;
        if (v32 < 0)
        {
          BOOL v22 = v28++ > 8;
          if (!v22) {
            continue;
          }
        }
        goto LABEL_49;
      }
LABEL_48:
      a1[*v4] = 1;
LABEL_49:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v33 = a1[*v4] == 0;
LABEL_51:
  PBReaderRecallMark();
  return v33;
}

void sub_18A3E6C10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleButtonIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  BOOL v2 = (*(unsigned char *)(a1 + 56) & 0x38) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return v2;
}

void sub_18A3E6FB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeHoursReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v20 = objc_alloc_init(GEORevealedPlaceCardModuleButton);
          if (!GEORevealedPlaceCardModuleButtonReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addButtons:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18A3E7A68(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeHoursReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORevealedPlaceCardModuleTypeHoursReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3E7ACC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeInfosReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    char v6 = (int *)MEMORY[0x1E4F940E8];
    unsigned int v7 = (int *)MEMORY[0x1E4F940E0];
    unint64_t v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      uint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          unint64_t v20 = objc_alloc_init(GEORevealedPlaceCardModuleButton);
          if (!GEORevealedPlaceCardModuleButtonReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addButtons:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18A3E8550(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeInfosReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORevealedPlaceCardModuleTypeInfosReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3E85B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypePhotosReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_32:
          *(unsigned char *)(a1 + 8) = v20 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A3E8FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypePhotosReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORevealedPlaceCardModuleTypePhotosReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3E9010(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E9440(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3E9D98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEORevealedPlaceCardModuleTypeShowcaseCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v1 = *(id *)(a1 + 16);
  uint64_t v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        objc_msgSend(*(id *)(*((void *)&v6 + 1) + 8 * v5++), "readAll:", 1, (void)v6);
      }
      while (v3 != v5);
      uint64_t v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

unint64_t GEORevealedPlaceCardModuleTypeShowcaseReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 36))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEORevealedPlaceCardModuleTypeShowcaseReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 40));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 32) = [v8 position];
  *(_DWORD *)(a1 + 36) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEORevealedPlaceCardModuleTypeShowcaseReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEORevealedPlaceCardModuleTypeShowcaseReadAllFrom_initialTag;
  }
  unint64_t Specified = GEORevealedPlaceCardModuleTypeShowcaseReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEORevealedPlaceCardModuleTypeShowcaseCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 40));
  return Specified;
}

void sub_18A3EA028(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEORevealedPlaceCardModuleTypeShowcaseReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEORevealedPlaceCardModuleTypeShowcaseReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3EA08C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A3EA2B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEORevealedPlaceCardModuleTypeShowcaseIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 40));
  if ((*(unsigned char *)(a1 + 44) & 7) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 16);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEORevealedPlaceCardModuleButtonIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEORevealedPlaceCardModuleTypeShowcaseIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEORevealedPlaceCardModuleTypeShowcaseIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 10);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A3EA79C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeTitleReadAllFrom(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  objc_sync_enter(v2);
  if (v2)
  {
    id v3 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v5 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v2[*MEMORY[0x1E4F940E8]] < *(void *)&v2[*MEMORY[0x1E4F940E0]])
    {
      long long v6 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v2[*v5]) {
          break;
        }
        char v7 = 0;
        unsigned int v8 = 0;
        unint64_t v9 = 0;
        while (1)
        {
          uint64_t v10 = *v3;
          uint64_t v11 = *(void *)&v2[v10];
          unint64_t v12 = v11 + 1;
          if (v11 == -1 || v12 > *(void *)&v2[*v4]) {
            break;
          }
          char v13 = *(unsigned char *)(*(void *)&v2[*v6] + v11);
          *(void *)&v2[v10] = v12;
          v9 |= (unint64_t)(v13 & 0x7F) << v7;
          if ((v13 & 0x80) == 0) {
            goto LABEL_13;
          }
          v7 += 7;
          BOOL v14 = v8++ >= 9;
          if (v14)
          {
            unint64_t v9 = 0;
            int v15 = v2[*v5];
            goto LABEL_15;
          }
        }
        v2[*v5] = 1;
LABEL_13:
        int v15 = v2[*v5];
        if (v2[*v5]) {
          unint64_t v9 = 0;
        }
LABEL_15:
        int v16 = v9 & 7;
        if (v15 || v16 == 4) {
          break;
        }
        if ((v9 >> 3) == 1)
        {
          if (v16 == 2)
          {
            if (!PBReaderPlaceMark()) {
              goto LABEL_47;
            }
            while (*(void *)&v2[*v3] < *(void *)&v2[*v4] && !v2[*v5])
            {
              char v18 = 0;
              unsigned int v19 = 0;
              uint64_t v20 = 0;
              while (1)
              {
                uint64_t v21 = *v3;
                uint64_t v22 = *(void *)&v2[v21];
                unint64_t v23 = v22 + 1;
                if (v22 == -1 || v23 > *(void *)&v2[*v4]) {
                  break;
                }
                char v24 = *(unsigned char *)(*(void *)&v2[*v6] + v22);
                *(void *)&v2[v21] = v23;
                v20 |= (unint64_t)(v24 & 0x7F) << v18;
                if (v24 < 0)
                {
                  v18 += 7;
                  BOOL v14 = v19++ >= 9;
                  if (!v14) {
                    continue;
                  }
                }
                goto LABEL_32;
              }
              v2[*v5] = 1;
LABEL_32:
              PBRepeatedInt32Add();
            }
            PBReaderRecallMark();
          }
          else
          {
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            while (1)
            {
              uint64_t v28 = *v3;
              uint64_t v29 = *(void *)&v2[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v2[*v4]) {
                break;
              }
              char v31 = *(unsigned char *)(*(void *)&v2[*v6] + v29);
              *(void *)&v2[v28] = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                BOOL v14 = v26++ >= 9;
                if (!v14) {
                  continue;
                }
              }
              goto LABEL_44;
            }
            v2[*v5] = 1;
LABEL_44:
            PBRepeatedInt32Add();
          }
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_47;
        }
      }
      while (*(void *)&v2[*v3] < *(void *)&v2[*v4]);
    }
    BOOL v32 = v2[*v5] == 0;
  }
  else
  {
LABEL_47:
    BOOL v32 = 0;
  }
  objc_sync_exit(v2);

  return v32;
}

void sub_18A3EB428(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeTitleReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORevealedPlaceCardModuleTypeTitleReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3EB490(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeUnifiedActionRowReadAllFrom(void *a1, void *a2, int a3)
{
  uint64_t v5 = a2;
  objc_sync_enter(v5);
  if (v5)
  {
    long long v6 = (int *)MEMORY[0x1E4F940E8];
    char v7 = (int *)MEMORY[0x1E4F940E0];
    unsigned int v8 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v5[*MEMORY[0x1E4F940E8]] < *(void *)&v5[*MEMORY[0x1E4F940E0]])
    {
      unint64_t v9 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v5[*v8]) {
          break;
        }
        char v10 = 0;
        unsigned int v11 = 0;
        unint64_t v12 = 0;
        while (1)
        {
          uint64_t v13 = *v6;
          uint64_t v14 = *(void *)&v5[v13];
          unint64_t v15 = v14 + 1;
          if (v14 == -1 || v15 > *(void *)&v5[*v7]) {
            break;
          }
          char v16 = *(unsigned char *)(*(void *)&v5[*v9] + v14);
          *(void *)&v5[v13] = v15;
          v12 |= (unint64_t)(v16 & 0x7F) << v10;
          if ((v16 & 0x80) == 0) {
            goto LABEL_13;
          }
          v10 += 7;
          if (v11++ >= 9)
          {
            unint64_t v12 = 0;
            int v18 = v5[*v8];
            goto LABEL_15;
          }
        }
        v5[*v8] = 1;
LABEL_13:
        int v18 = v5[*v8];
        if (v5[*v8]) {
          unint64_t v12 = 0;
        }
LABEL_15:
        if (v18 || (v12 & 7) == 4) {
          break;
        }
        if ((v12 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_27;
          }
          uint64_t v20 = objc_alloc_init(GEORevealedPlaceCardModuleButton);
          if (!GEORevealedPlaceCardModuleButtonReadAllFrom((uint64_t)v20, v5, a3))
          {

            goto LABEL_27;
          }
          PBReaderRecallMark();
          objc_msgSend(a1, "addButtons:", v20, 0, 0);
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_27;
        }
      }
      while (*(void *)&v5[*v6] < *(void *)&v5[*v7]);
    }
    BOOL v21 = v5[*v8] == 0;
  }
  else
  {
LABEL_27:
    BOOL v21 = 0;
  }
  objc_sync_exit(v5);

  return v21;
}

void sub_18A3EBCC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORevealedPlaceCardModuleTypeUnifiedActionRowReadFrom(void *a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORevealedPlaceCardModuleTypeUnifiedActionRowReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3EBD24(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingSettingsCyclingPrefsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidStairs;
                goto LABEL_62;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                uint64_t v20 = 0;
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidStairs;
                goto LABEL_65;
              }
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidStairs;
            goto LABEL_63;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 4u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidHills;
                goto LABEL_62;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidHills;
                  goto LABEL_65;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidHills;
            goto LABEL_63;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 2u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidBusyRoads;
                goto LABEL_62;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidBusyRoads;
                  goto LABEL_65;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__avoidBusyRoads;
            goto LABEL_63;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 0x10u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__eBike;
                goto LABEL_62;
              }
              char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
              *(void *)&v3[v41] = v43;
              v20 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v25 = v40++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__eBike;
                  goto LABEL_65;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__eBike;
            goto LABEL_63;
          case 5u:
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 1u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_74;
            }
            continue;
        }
        while (1)
        {
          uint64_t v47 = *v4;
          uint64_t v48 = *(void *)&v3[v47];
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)&v3[*v5]) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
          *(void *)&v3[v47] = v49;
          v20 |= (unint64_t)(v50 & 0x7F) << v45;
          if ((v50 & 0x80) == 0)
          {
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__autoRecordWorkout;
            goto LABEL_63;
          }
          v45 += 7;
          BOOL v25 = v46++ > 8;
          if (v25)
          {
            uint64_t v20 = 0;
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__autoRecordWorkout;
            goto LABEL_65;
          }
        }
        unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsCyclingPrefs__autoRecordWorkout;
LABEL_62:
        v3[*v6] = 1;
LABEL_63:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_65:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v51 = v3[*v6] == 0;
  }
  else
  {
LABEL_74:
    BOOL v51 = 0;
  }
  objc_sync_exit(v3);

  return v51;
}

void sub_18A3ECE34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingSettingsCyclingPrefsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoutingSettingsCyclingPrefsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3ECEAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingSettingsDrivingPrefsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 1u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__avoidHighways;
                goto LABEL_62;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                uint64_t v20 = 0;
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__avoidHighways;
                goto LABEL_65;
              }
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__avoidHighways;
            goto LABEL_63;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 2u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__avoidTolls;
                goto LABEL_62;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__avoidTolls;
                  goto LABEL_65;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__avoidTolls;
            goto LABEL_63;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 4u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__speedLimitEnabled;
                goto LABEL_62;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__speedLimitEnabled;
                  goto LABEL_65;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__speedLimitEnabled;
            goto LABEL_63;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 8u;
            while (2)
            {
              uint64_t v41 = *v4;
              uint64_t v42 = *(void *)&v3[v41];
              unint64_t v43 = v42 + 1;
              if (v42 == -1 || v43 > *(void *)&v3[*v5])
              {
                unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__trafficEnabled;
                goto LABEL_62;
              }
              char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
              *(void *)&v3[v41] = v43;
              v20 |= (unint64_t)(v44 & 0x7F) << v39;
              if (v44 < 0)
              {
                v39 += 7;
                BOOL v25 = v40++ > 8;
                if (v25)
                {
                  uint64_t v20 = 0;
                  unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__trafficEnabled;
                  goto LABEL_65;
                }
                continue;
              }
              break;
            }
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__trafficEnabled;
            goto LABEL_63;
          case 5u:
            char v45 = 0;
            unsigned int v46 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 16) |= 0x10u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_74;
            }
            continue;
        }
        while (1)
        {
          uint64_t v47 = *v4;
          uint64_t v48 = *(void *)&v3[v47];
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)&v3[*v5]) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
          *(void *)&v3[v47] = v49;
          v20 |= (unint64_t)(v50 & 0x7F) << v45;
          if ((v50 & 0x80) == 0)
          {
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__voiceNavEnabled;
            goto LABEL_63;
          }
          v45 += 7;
          BOOL v25 = v46++ > 8;
          if (v25)
          {
            uint64_t v20 = 0;
            unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__voiceNavEnabled;
            goto LABEL_65;
          }
        }
        unsigned int v26 = &OBJC_IVAR___GEORoutingSettingsDrivingPrefs__voiceNavEnabled;
LABEL_62:
        v3[*v6] = 1;
LABEL_63:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_65:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v51 = v3[*v6] == 0;
  }
  else
  {
LABEL_74:
    BOOL v51 = 0;
  }
  objc_sync_exit(v3);

  return v51;
}

void sub_18A3EE154(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingSettingsDrivingPrefsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoutingSettingsDrivingPrefsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3EE1CC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEORoutingSettingsVirtualGarageSetttingsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEORoutingSettingsVirtualGarageSetttingsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3EEB98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSearchResultReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 8u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
                break;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                goto LABEL_58;
              }
              v18 += 7;
              BOOL v15 = v19++ >= 9;
              if (v15)
              {
                LODWORD(v20) = 0;
                goto LABEL_60;
              }
            }
            v3[*v6] = 1;
LABEL_58:
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_60:
            uint64_t v51 = 24;
            goto LABEL_73;
          case 2u:
            char v25 = 0;
            unsigned int v26 = 0;
            uint64_t v27 = 0;
            *(unsigned char *)(a1 + 32) |= 1u;
            while (2)
            {
              uint64_t v28 = *v4;
              uint64_t v29 = *(void *)&v3[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v31 = *(unsigned char *)(*(void *)&v3[*v7] + v29);
                *(void *)&v3[v28] = v30;
                v27 |= (unint64_t)(v31 & 0x7F) << v25;
                if (v31 < 0)
                {
                  v25 += 7;
                  BOOL v15 = v26++ >= 9;
                  if (v15)
                  {
                    uint64_t v27 = 0;
                    goto LABEL_64;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              uint64_t v27 = 0;
            }
LABEL_64:
            *(void *)(a1 + 8) = v27;
            continue;
          case 3u:
            char v32 = 0;
            unsigned int v33 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 2u;
            while (2)
            {
              uint64_t v34 = *v4;
              uint64_t v35 = *(void *)&v3[v34];
              unint64_t v36 = v35 + 1;
              if (v35 == -1 || v36 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v37 = *(unsigned char *)(*(void *)&v3[*v7] + v35);
                *(void *)&v3[v34] = v36;
                v20 |= (unint64_t)(v37 & 0x7F) << v32;
                if (v37 < 0)
                {
                  v32 += 7;
                  BOOL v15 = v33++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_68;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_68:
            uint64_t v51 = 16;
            goto LABEL_73;
          case 4u:
            char v38 = 0;
            unsigned int v39 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 32) |= 4u;
            while (2)
            {
              uint64_t v40 = *v4;
              uint64_t v41 = *(void *)&v3[v40];
              unint64_t v42 = v41 + 1;
              if (v41 == -1 || v42 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v43 = *(unsigned char *)(*(void *)&v3[*v7] + v41);
                *(void *)&v3[v40] = v42;
                v20 |= (unint64_t)(v43 & 0x7F) << v38;
                if (v43 < 0)
                {
                  v38 += 7;
                  BOOL v15 = v39++ >= 9;
                  if (v15)
                  {
                    LODWORD(v20) = 0;
                    goto LABEL_72;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v20) = 0;
            }
LABEL_72:
            uint64_t v51 = 20;
LABEL_73:
            *(_DWORD *)(a1 + v51) = v20;
            continue;
          case 5u:
            char v44 = 0;
            unsigned int v45 = 0;
            uint64_t v46 = 0;
            *(unsigned char *)(a1 + 32) |= 0x10u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_80;
            }
            continue;
        }
        while (1)
        {
          uint64_t v47 = *v4;
          uint64_t v48 = *(void *)&v3[v47];
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)&v3[*v5]) {
            break;
          }
          char v50 = *(unsigned char *)(*(void *)&v3[*v7] + v48);
          *(void *)&v3[v47] = v49;
          v46 |= (unint64_t)(v50 & 0x7F) << v44;
          if ((v50 & 0x80) == 0) {
            goto LABEL_75;
          }
          v44 += 7;
          BOOL v15 = v45++ >= 9;
          if (v15)
          {
            uint64_t v46 = 0;
            goto LABEL_77;
          }
        }
        v3[*v6] = 1;
LABEL_75:
        if (v3[*v6]) {
          uint64_t v46 = 0;
        }
LABEL_77:
        *(unsigned char *)(a1 + 28) = v46 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v52 = v3[*v6] == 0;
  }
  else
  {
LABEL_80:
    BOOL v52 = 0;
  }
  objc_sync_exit(v3);

  return v52;
}

void sub_18A3EFC60(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOSearchResultReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOSearchResultReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3EFCD8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopAddedDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A3F09F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOStopAddedDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOStopAddedDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3F0A54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTargetLayoutReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__layoutStyle;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__layoutStyle;
              goto LABEL_51;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__layoutStyle;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__layoutInfo;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__layoutInfo;
              goto LABEL_51;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__layoutInfo;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__uiTarget;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__uiTarget;
              goto LABEL_51;
            }
          }
          uint64_t v27 = &OBJC_IVAR___GEOTargetLayout__uiTarget;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A3FBC50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTargetLayoutReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTargetLayoutReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A3FBCB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTelemetricEntityReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          uint64_t v26 = PBReaderReadString();
          uint64_t v27 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v26;
        }
        else if (v18 == 2)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v30 = 0;
          *(unsigned char *)(a1 + 28) |= 1u;
          while (1)
          {
            uint64_t v31 = *v4;
            uint64_t v32 = *(void *)&v3[v31];
            unint64_t v33 = v32 + 1;
            if (v32 == -1 || v33 > *(void *)&v3[*v5]) {
              break;
            }
            char v34 = *(unsigned char *)(*(void *)&v3[*v7] + v32);
            *(void *)&v3[v31] = v33;
            v30 |= (unint64_t)(v34 & 0x7F) << v28;
            if ((v34 & 0x80) == 0) {
              goto LABEL_44;
            }
            v28 += 7;
            BOOL v15 = v29++ >= 9;
            if (v15)
            {
              uint64_t v30 = 0;
              goto LABEL_46;
            }
          }
          v3[*v6] = 1;
LABEL_44:
          if (v3[*v6]) {
            uint64_t v30 = 0;
          }
LABEL_46:
          *(void *)(a1 + 16) = v30;
        }
        else if (v18 == 1)
        {
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 28) |= 2u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
              break;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              goto LABEL_40;
            }
            v19 += 7;
            BOOL v15 = v20++ >= 9;
            if (v15)
            {
              LODWORD(v21) = 0;
              goto LABEL_42;
            }
          }
          v3[*v6] = 1;
LABEL_40:
          if (v3[*v6]) {
            LODWORD(v21) = 0;
          }
LABEL_42:
          *(_DWORD *)(a1 + 24) = v21;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_49;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_49:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18A401C88(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTelemetricEntityReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTelemetricEntityReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A401CEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTileSetInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            char v18 = 0;
            unsigned int v19 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v21 = *v4;
              uint64_t v22 = *(void *)&v3[v21];
              unint64_t v23 = v22 + 1;
              if (v22 == -1 || v23 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__style;
                goto LABEL_54;
              }
              char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
              *(void *)&v3[v21] = v23;
              v20 |= (unint64_t)(v24 & 0x7F) << v18;
              if ((v24 & 0x80) == 0) {
                break;
              }
              v18 += 7;
              BOOL v25 = v19++ > 8;
              if (v25)
              {
                LODWORD(v20) = 0;
                uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__style;
                goto LABEL_57;
              }
            }
            uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__style;
            goto LABEL_55;
          case 2u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (2)
            {
              uint64_t v29 = *v4;
              uint64_t v30 = *(void *)&v3[v29];
              unint64_t v31 = v30 + 1;
              if (v30 == -1 || v31 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__count;
                goto LABEL_54;
              }
              char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
              *(void *)&v3[v29] = v31;
              v20 |= (unint64_t)(v32 & 0x7F) << v27;
              if (v32 < 0)
              {
                v27 += 7;
                BOOL v25 = v28++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__count;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__count;
            goto LABEL_55;
          case 3u:
            char v33 = 0;
            unsigned int v34 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 8u;
            while (2)
            {
              uint64_t v35 = *v4;
              uint64_t v36 = *(void *)&v3[v35];
              unint64_t v37 = v36 + 1;
              if (v36 == -1 || v37 > *(void *)&v3[*v5])
              {
                uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__zoom;
                goto LABEL_54;
              }
              char v38 = *(unsigned char *)(*(void *)&v3[*v7] + v36);
              *(void *)&v3[v35] = v37;
              v20 |= (unint64_t)(v38 & 0x7F) << v33;
              if (v38 < 0)
              {
                v33 += 7;
                BOOL v25 = v34++ > 8;
                if (v25)
                {
                  LODWORD(v20) = 0;
                  uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__zoom;
                  goto LABEL_57;
                }
                continue;
              }
              break;
            }
            uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__zoom;
            goto LABEL_55;
          case 4u:
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v20 = 0;
            *(unsigned char *)(a1 + 24) |= 4u;
            break;
          default:
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_65;
            }
            continue;
        }
        while (1)
        {
          uint64_t v41 = *v4;
          uint64_t v42 = *(void *)&v3[v41];
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)&v3[*v5]) {
            break;
          }
          char v44 = *(unsigned char *)(*(void *)&v3[*v7] + v42);
          *(void *)&v3[v41] = v43;
          v20 |= (unint64_t)(v44 & 0x7F) << v39;
          if ((v44 & 0x80) == 0)
          {
            uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__uncertainty;
            goto LABEL_55;
          }
          v39 += 7;
          BOOL v25 = v40++ > 8;
          if (v25)
          {
            LODWORD(v20) = 0;
            uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__uncertainty;
            goto LABEL_57;
          }
        }
        uint64_t v26 = &OBJC_IVAR___GEOTileSetInfo__uncertainty;
LABEL_54:
        v3[*v6] = 1;
LABEL_55:
        if (v3[*v6]) {
          LODWORD(v20) = 0;
        }
LABEL_57:
        *(_DWORD *)(a1 + *v26) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v45 = v3[*v6] == 0;
  }
  else
  {
LABEL_65:
    BOOL v45 = 0;
  }
  objc_sync_exit(v3);

  return v45;
}

void sub_18A405948(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTileSetInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTileSetInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A4059BC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeToLeaveMapLaunchReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          *(unsigned char *)(a1 + 16) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && v19 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v20 = *(void *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v20 = 0;
          }
          *(void *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_29;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v21 = v3[*v6] == 0;
  }
  else
  {
LABEL_29:
    BOOL v21 = 0;
  }
  objc_sync_exit(v3);

  return v21;
}

void sub_18A4063F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTimeToLeaveMapLaunchReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTimeToLeaveMapLaunchReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A40645C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTouristInfoReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v25 = *v4;
          unint64_t v26 = *(void *)&v3[v25];
          if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v27 = *(void *)(*(void *)&v3[*v7] + v26);
            *(void *)&v3[v25] = v26 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v27 = 0;
          }
          *(void *)(a1 + 8) = v27;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_34;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              uint64_t v20 = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            uint64_t v20 = 0;
          }
LABEL_36:
          *(unsigned char *)(a1 + 16) = v20 != 0;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_41;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_18A406C14(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTouristInfoReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTouristInfoReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A406C78(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrailingEntityActionDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          uint64_t v25 = PBReaderReadString();
          unint64_t v26 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v25;
        }
        else if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_32;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_34;
            }
          }
          v3[*v6] = 1;
LABEL_32:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_34:
          *(_DWORD *)(a1 + 16) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_37;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_37:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A407A30(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOTrailingEntityActionDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOTrailingEntityActionDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A407A94(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFARFailureTypesReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v27 = 0;
          unsigned int v28 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 2u;
          while (1)
          {
            uint64_t v29 = *v4;
            uint64_t v30 = *(void *)&v3[v29];
            unint64_t v31 = v30 + 1;
            if (v30 == -1 || v31 > *(void *)&v3[*v5]) {
              break;
            }
            char v32 = *(unsigned char *)(*(void *)&v3[*v7] + v30);
            *(void *)&v3[v29] = v31;
            v20 |= (unint64_t)(v32 & 0x7F) << v27;
            if ((v32 & 0x80) == 0)
            {
              unint64_t v26 = &OBJC_IVAR___GEOVLFARFailureTypes__arWalkingUndulationFailure;
              goto LABEL_40;
            }
            v27 += 7;
            BOOL v25 = v28++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unint64_t v26 = &OBJC_IVAR___GEOVLFARFailureTypes__arWalkingUndulationFailure;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOVLFARFailureTypes__arWalkingUndulationFailure;
LABEL_39:
          v3[*v6] = 1;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_48;
            }
            continue;
          }
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5])
            {
              unint64_t v26 = &OBJC_IVAR___GEOVLFARFailureTypes__arWalkingNoLabels;
              goto LABEL_39;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              break;
            }
            v18 += 7;
            BOOL v25 = v19++ > 8;
            if (v25)
            {
              uint64_t v20 = 0;
              unint64_t v26 = &OBJC_IVAR___GEOVLFARFailureTypes__arWalkingNoLabels;
              goto LABEL_42;
            }
          }
          unint64_t v26 = &OBJC_IVAR___GEOVLFARFailureTypes__arWalkingNoLabels;
        }
LABEL_40:
        if (v3[*v6]) {
          uint64_t v20 = 0;
        }
LABEL_42:
        *(unsigned char *)(a1 + *v26) = v20 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v33 = v3[*v6] == 0;
  }
  else
  {
LABEL_48:
    BOOL v33 = 0;
  }
  objc_sync_exit(v3);

  return v33;
}

void sub_18A408508(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFARFailureTypesReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFARFailureTypesReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A40856C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFARStateReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEOVLFARState__geoTrackingStateReason;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOVLFARState__geoTrackingStateReason;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOVLFARState__geoTrackingStateReason;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOVLFARState__geoTrackingState;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOVLFARState__geoTrackingState;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOVLFARState__geoTrackingState;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOVLFARState__relativeTimestampMs;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOVLFARState__relativeTimestampMs;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOVLFARState__relativeTimestampMs;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A409704(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFARStateReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFARStateReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A409768(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFCorrectionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    long long v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          char v28 = 0;
          unsigned int v29 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v30 = *v4;
            uint64_t v31 = *(void *)&v3[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
              break;
            }
            char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
            *(void *)&v3[v30] = v32;
            v21 |= (unint64_t)(v33 & 0x7F) << v28;
            if ((v33 & 0x80) == 0)
            {
              char v27 = &OBJC_IVAR___GEOVLFCorrection__altitudeCorrectionMagnitude;
              goto LABEL_49;
            }
            v28 += 7;
            BOOL v26 = v29++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOVLFCorrection__altitudeCorrectionMagnitude;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOVLFCorrection__altitudeCorrectionMagnitude;
LABEL_48:
          v3[*v6] = 1;
        }
        else if (v18 == 2)
        {
          char v34 = 0;
          unsigned int v35 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 2u;
          while (1)
          {
            uint64_t v36 = *v4;
            uint64_t v37 = *(void *)&v3[v36];
            unint64_t v38 = v37 + 1;
            if (v37 == -1 || v38 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOVLFCorrection__headingCorrectionMagnitude;
              goto LABEL_48;
            }
            char v39 = *(unsigned char *)(*(void *)&v3[*v7] + v37);
            *(void *)&v3[v36] = v38;
            v21 |= (unint64_t)(v39 & 0x7F) << v34;
            if ((v39 & 0x80) == 0) {
              break;
            }
            v34 += 7;
            BOOL v26 = v35++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOVLFCorrection__headingCorrectionMagnitude;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOVLFCorrection__headingCorrectionMagnitude;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_58;
            }
            continue;
          }
          char v19 = 0;
          unsigned int v20 = 0;
          uint64_t v21 = 0;
          *(unsigned char *)(a1 + 20) |= 4u;
          while (1)
          {
            uint64_t v22 = *v4;
            uint64_t v23 = *(void *)&v3[v22];
            unint64_t v24 = v23 + 1;
            if (v23 == -1 || v24 > *(void *)&v3[*v5])
            {
              char v27 = &OBJC_IVAR___GEOVLFCorrection__locationCorrectionMagnitude;
              goto LABEL_48;
            }
            char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v24;
            v21 |= (unint64_t)(v25 & 0x7F) << v19;
            if ((v25 & 0x80) == 0) {
              break;
            }
            v19 += 7;
            BOOL v26 = v20++ > 8;
            if (v26)
            {
              LODWORD(v21) = 0;
              char v27 = &OBJC_IVAR___GEOVLFCorrection__locationCorrectionMagnitude;
              goto LABEL_51;
            }
          }
          char v27 = &OBJC_IVAR___GEOVLFCorrection__locationCorrectionMagnitude;
        }
LABEL_49:
        if (v3[*v6]) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + *v27) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v40 = v3[*v6] == 0;
  }
  else
  {
LABEL_58:
    BOOL v40 = 0;
  }
  objc_sync_exit(v3);

  return v40;
}

void sub_18A40A4B0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFCorrectionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFCorrectionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A40A514(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40ABF4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFCrowdsourcingDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 208));
  long long v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 204);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 200)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (HIBYTE(*(unsigned __int16 *)(a1 + 216)) & 1)
      + (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 216)), (uint16x4_t)0xFFF6FFF5FFF7FFF9), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 216) >> 6) & 1)+ ((*(_WORD *)(a1 + 216) >> 5) & 1)+ ((*(_WORD *)(a1 + 216) >> 4) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 | (v11 > 5);
        if ((v14 | v8)) {
          BOOL v15 = 0;
        }
        else {
          BOOL v15 = a3;
        }
        LODWORD(v16) = v14;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6)) {
          goto LABEL_187;
        }
        char v100 = (v7 != 0) | v14;
        char v101 = (v15 == 0) | v14;
        char v19 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(unsigned char *)(v3 + *v18)) {
      goto LABEL_187;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        uint64_t v28 = *v18;
        int v29 = *(unsigned __int8 *)(v3 + v28);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    uint64_t v28 = *v18;
    int v29 = *(unsigned __int8 *)(v3 + v28);
    if (*(unsigned char *)(v3 + v28)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    int v30 = v22 & 7;
    if (v29 || v30 == 4)
    {
LABEL_187:
      if (v16)
      {
        char v94 = 1;
        goto LABEL_189;
      }
      if (v15)
      {
        while (1)
        {
          int v95 = *v15++;
          __int16 v96 = 512;
          switch(v95)
          {
            case 0:
              goto LABEL_202;
            case 1:
              goto LABEL_201;
            case 2:
              __int16 v96 = 128;
              goto LABEL_201;
            case 3:
              __int16 v96 = 2048;
              goto LABEL_201;
            case 4:
              __int16 v96 = 1024;
              goto LABEL_201;
            case 5:
              __int16 v96 = 64;
              goto LABEL_201;
            case 9:
              __int16 v96 = 32;
              goto LABEL_201;
            case 10:
              __int16 v96 = 16;
              goto LABEL_201;
            case 11:
              __int16 v96 = 256;
LABEL_201:
              *(_WORD *)(a1 + 216) |= v96;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_202;
    }
    unint64_t v32 = v22 >> 3;
    BOOL v33 = (char)v16;
    if ((v101 & 1) == 0)
    {
      char v34 = v15;
      do
      {
        int v36 = *v34++;
        int v35 = v36;
        BOOL v33 = v36 != 0;
        if (v36) {
          BOOL v37 = v35 == v32;
        }
        else {
          BOOL v37 = 1;
        }
      }
      while (!v37);
    }
    switch((int)v32)
    {
      case 1:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x200) != 0) {
          goto LABEL_149;
        }
        if (v30 != 2) {
          goto LABEL_165;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_206;
        }
        while (1)
        {
          unint64_t v38 = (unint64_t *)(v3 + *v17);
          unint64_t v39 = *v38;
          unint64_t v40 = *(void *)(v3 + *v6);
          if (*v38 >= v40) {
            break;
          }
          uint64_t v41 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v41)) {
            break;
          }
          if (v39 > 0xFFFFFFFFFFFFFFF7 || v39 + 8 > v40) {
            *(unsigned char *)(v3 + v41) = 1;
          }
          else {
            *unint64_t v38 = v39 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_148;
      case 2:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x80) != 0) {
          goto LABEL_149;
        }
        if (v30 != 2) {
          goto LABEL_165;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_206;
        }
        while (1)
        {
          unint64_t v43 = (unint64_t *)(v3 + *v17);
          unint64_t v44 = *v43;
          unint64_t v45 = *(void *)(v3 + *v6);
          if (*v43 >= v45) {
            break;
          }
          uint64_t v46 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v46)) {
            break;
          }
          if (v44 > 0xFFFFFFFFFFFFFFF7 || v44 + 8 > v45) {
            *(unsigned char *)(v3 + v46) = 1;
          }
          else {
            *unint64_t v43 = v44 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_148;
      case 3:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x800) != 0) {
          goto LABEL_149;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_206;
        }
        int v99 = (int)v16;
        int v16 = objc_alloc_init(GEOVLFSLAMTrack);
        if (!GEOVLFSLAMTrackReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1)) {
          goto LABEL_207;
        }
        PBReaderRecallMark();
        -[GEOVLFCrowdsourcingDetails _addNoFlagsSlamTracks:](a1, v16);
        goto LABEL_71;
      case 4:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x400) != 0) {
          goto LABEL_149;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_206;
        }
        int v99 = (int)v16;
        int v16 = objc_alloc_init(GEOVLFFrameDetails);
        if (GEOVLFFrameDetailsReadAllFrom((uint64_t)v16, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOVLFCrowdsourcingDetails _addNoFlagsFrameDetails:](a1, v16);
LABEL_71:

          LODWORD(v16) = v99;
LABEL_184:
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_185:
          if ((v100 & 1) == 0 || *(void *)(v3 + *v17) >= *(void *)(v3 + *v6)) {
            goto LABEL_187;
          }
          continue;
        }
LABEL_207:

        char v94 = 0;
        LOBYTE(v16) = v99;
LABEL_208:
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_189:
        *(_WORD *)(a1 + 216) |= 0x200u;
        *(_WORD *)(a1 + 216) |= 0x80u;
        *(_WORD *)(a1 + 216) |= 0x800u;
        *(_WORD *)(a1 + 216) |= 0x400u;
        *(_WORD *)(a1 + 216) |= 0x40u;
        *(_WORD *)(a1 + 216) |= 0x20u;
        *(_WORD *)(a1 + 216) |= 0x10u;
        *(_WORD *)(a1 + 216) |= 0x100u;
        if (v94)
        {
LABEL_202:
          unint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v16) {
            goto LABEL_203;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v16 & 1) == 0) {
          return v3;
        }
LABEL_203:
        uint64_t v97 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 5:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x40) != 0) {
          goto LABEL_149;
        }
        if (v30 != 2) {
          goto LABEL_165;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_206;
        }
        while (1)
        {
          uint64_t v47 = (unint64_t *)(v3 + *v17);
          unint64_t v48 = *v47;
          unint64_t v49 = *(void *)(v3 + *v6);
          if (*v47 >= v49) {
            break;
          }
          uint64_t v50 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v50)) {
            break;
          }
          if (v48 > 0xFFFFFFFFFFFFFFF7 || v48 + 8 > v49) {
            *(unsigned char *)(v3 + v50) = 1;
          }
          else {
            *uint64_t v47 = v48 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_148;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        *(_WORD *)(a1 + 216) |= 1u;
        uint64_t v51 = *v17;
        unint64_t v52 = *(void *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFF7 && v52 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v53 = *(void *)(*(void *)(v3 + *v19) + v52);
          *(void *)(v3 + v51) = v52 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v53 = 0;
        }
        uint64_t v82 = 168;
        goto LABEL_164;
      case 7:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        *(_WORD *)(a1 + 216) |= 2u;
        uint64_t v54 = *v17;
        unint64_t v55 = *(void *)(v3 + v54);
        if (v55 <= 0xFFFFFFFFFFFFFFF7 && v55 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v53 = *(void *)(*(void *)(v3 + *v19) + v55);
          *(void *)(v3 + v54) = v55 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v53 = 0;
        }
        uint64_t v82 = 176;
        goto LABEL_164;
      case 8:
        if ((v8 & 1) == 0) {
          goto LABEL_149;
        }
        *(_WORD *)(a1 + 216) |= 4u;
        uint64_t v56 = *v17;
        unint64_t v57 = *(void *)(v3 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v53 = *(void *)(*(void *)(v3 + *v19) + v57);
          *(void *)(v3 + v56) = v57 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v53 = 0;
        }
        uint64_t v82 = 184;
LABEL_164:
        *(void *)(a1 + v82) = v53;
        goto LABEL_185;
      case 9:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x20) != 0) {
          goto LABEL_149;
        }
        if (v30 != 2)
        {
LABEL_165:
          uint64_t v83 = *v17;
          unint64_t v84 = *(void *)(v3 + v83);
          if (v84 <= 0xFFFFFFFFFFFFFFF7 && v84 + 8 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v83) = v84 + 8;
          }
          else {
            *(unsigned char *)(v3 + v28) = 1;
          }
          PBRepeatedDoubleAdd();
          goto LABEL_184;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_206;
        }
        while (1)
        {
          char v58 = (unint64_t *)(v3 + *v17);
          unint64_t v59 = *v58;
          unint64_t v60 = *(void *)(v3 + *v6);
          if (*v58 >= v60) {
            break;
          }
          uint64_t v61 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v61)) {
            break;
          }
          if (v59 > 0xFFFFFFFFFFFFFFF7 || v59 + 8 > v60) {
            *(unsigned char *)(v3 + v61) = 1;
          }
          else {
            *char v58 = v59 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_148;
      case 10:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x10) != 0) {
          goto LABEL_149;
        }
        if (v30 != 2)
        {
          uint64_t v85 = *v17;
          unint64_t v86 = *(void *)(v3 + v85);
          if (v86 <= 0xFFFFFFFFFFFFFFFBLL && v86 + 4 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v85) = v86 + 4;
          }
          else {
            *(unsigned char *)(v3 + v28) = 1;
          }
          PBRepeatedFloatAdd();
          goto LABEL_184;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_206;
        }
        while (1)
        {
          char v62 = (unint64_t *)(v3 + *v17);
          unint64_t v63 = *v62;
          unint64_t v64 = *(void *)(v3 + *v6);
          if (*v62 >= v64) {
            break;
          }
          uint64_t v65 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v65)) {
            break;
          }
          if (v63 > 0xFFFFFFFFFFFFFFFBLL || v63 + 4 > v64) {
            *(unsigned char *)(v3 + v65) = 1;
          }
          else {
            *char v62 = v63 + 4;
          }
          PBRepeatedFloatAdd();
        }
        goto LABEL_148;
      case 11:
        if (!v33 || (*(_WORD *)(a1 + 216) & 0x100) != 0) {
          goto LABEL_149;
        }
        if (v30 == 2)
        {
          if (!PBReaderPlaceMark())
          {
LABEL_206:
            char v94 = 0;
            goto LABEL_208;
          }
          while (1)
          {
            char v66 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v67 = 0;
            unsigned int v68 = 0;
            uint64_t v69 = 0;
            while (1)
            {
              uint64_t v70 = *v17;
              uint64_t v71 = *(void *)(v3 + v70);
              unint64_t v72 = v71 + 1;
              if (v71 == -1 || v72 > *(void *)(v3 + *v6)) {
                break;
              }
              char v73 = *(unsigned char *)(*(void *)(v3 + *v19) + v71);
              *(void *)(v3 + v70) = v72;
              v69 |= (unint64_t)(v73 & 0x7F) << v67;
              if (v73 < 0)
              {
                v67 += 7;
                BOOL v27 = v68++ >= 9;
                if (!v27) {
                  continue;
                }
              }
              goto LABEL_131;
            }
            *(unsigned char *)(v3 + *v66) = 1;
LABEL_131:
            PBRepeatedUInt32Add();
          }
LABEL_148:
          PBReaderRecallMark();
        }
        else
        {
          char v87 = 0;
          unsigned int v88 = 0;
          uint64_t v89 = 0;
          while (1)
          {
            uint64_t v90 = *v17;
            uint64_t v91 = *(void *)(v3 + v90);
            unint64_t v92 = v91 + 1;
            if (v91 == -1 || v92 > *(void *)(v3 + *v6)) {
              break;
            }
            char v93 = *(unsigned char *)(*(void *)(v3 + *v19) + v91);
            *(void *)(v3 + v90) = v92;
            v89 |= (unint64_t)(v93 & 0x7F) << v87;
            if (v93 < 0)
            {
              v87 += 7;
              BOOL v27 = v88++ >= 9;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_181;
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_181:
          PBRepeatedUInt32Add();
        }
        goto LABEL_184;
      case 12:
        if (v8)
        {
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v76 = 0;
          *(_WORD *)(a1 + 216) |= 8u;
          while (1)
          {
            uint64_t v77 = *v17;
            uint64_t v78 = *(void *)(v3 + v77);
            unint64_t v79 = v78 + 1;
            if (v78 == -1 || v79 > *(void *)(v3 + *v6)) {
              break;
            }
            char v80 = *(unsigned char *)(*(void *)(v3 + *v19) + v78);
            *(void *)(v3 + v77) = v79;
            v76 |= (unint64_t)(v80 & 0x7F) << v74;
            if ((v80 & 0x80) == 0) {
              goto LABEL_152;
            }
            v74 += 7;
            BOOL v27 = v75++ >= 9;
            if (v27)
            {
              LODWORD(v76) = 0;
              goto LABEL_154;
            }
          }
          *(unsigned char *)(v3 + *v18) = 1;
LABEL_152:
          if (*(unsigned char *)(v3 + *v18)) {
            LODWORD(v76) = 0;
          }
LABEL_154:
          *(_DWORD *)(a1 + 212) = v76;
        }
        else
        {
LABEL_149:
          char v81 = PBReaderSkipValueWithTag();
          unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
          if ((v81 & 1) == 0)
          {
LABEL_205:
            char v94 = 0;
            goto LABEL_189;
          }
        }
        goto LABEL_185;
      default:
        int v42 = PBReaderSkipValueWithTag();
        unint64_t v18 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_205;
        }
        goto LABEL_185;
    }
  }
}

void sub_18A40BD44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40C0D8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40C49C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40C860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40CD50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40D0E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40D478(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A40E934(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOVLFCrowdsourcingDetailsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v2 = *(id *)(a1 + 192);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v17;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v17 != v5) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v16 + 1) + 8 * v6++) readAll:1];
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v16 objects:v21 count:16];
    }
    while (v4);
  }

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v7 = *(id *)(a1 + 160);
  uint64_t v8 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v13;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v13 != v10) {
          objc_enumerationMutation(v7);
        }
        objc_msgSend(*(id *)(*((void *)&v12 + 1) + 8 * v11++), "readAll:", 1, (void)v12);
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v12 objects:v20 count:16];
    }
    while (v9);
  }
}

unint64_t GEOVLFCrowdsourcingDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 204))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVLFCrowdsourcingDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 208));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 200) = [v8 position];
  *(_DWORD *)(a1 + 204) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOVLFCrowdsourcingDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOVLFCrowdsourcingDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOVLFCrowdsourcingDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOVLFCrowdsourcingDetailsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 208));
  return Specified;
}

void sub_18A40EC64(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFCrowdsourcingDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVLFCrowdsourcingDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A40ECC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFSLAMTrackIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFPoint3DIsValid(a1)) {
            goto LABEL_42;
          }
          goto LABEL_68;
        case 2u:
          if (v15 != 2)
          {
            if ((v8 & 7) != 0) {
              goto LABEL_68;
            }
            while (1)
            {
              uint64_t v17 = *v2;
              uint64_t v18 = *(void *)&a1[v17];
              unint64_t v19 = v18 + 1;
              if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
                goto LABEL_45;
              }
              int v20 = *(char *)(*(void *)&a1[*v5] + v18);
              *(void *)&a1[v17] = v19;
              if (v20 < 0)
              {
                unsigned int v21 = v15++;
                if (v21 <= 8) {
                  continue;
                }
              }
              goto LABEL_43;
            }
          }
          if (!PBReaderPlaceMark()) {
            goto LABEL_68;
          }
LABEL_47:
          while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
          {
            unsigned int v27 = a1[*v4];
            if (a1[*v4]) {
              break;
            }
            while (1)
            {
              uint64_t v28 = *v2;
              uint64_t v29 = *(void *)&a1[v28];
              unint64_t v30 = v29 + 1;
              if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
                break;
              }
              int v31 = *(char *)(*(void *)&a1[*v5] + v29);
              *(void *)&a1[v28] = v30;
              if (v31 < 0)
              {
                BOOL v13 = v27++ >= 9;
                if (!v13) {
                  continue;
                }
              }
              goto LABEL_47;
            }
            a1[*v4] = 1;
          }
          goto LABEL_42;
        case 3u:
          if (v15 == 2)
          {
            if (!PBReaderPlaceMark())
            {
LABEL_68:
              PBReaderRecallMark();
              return 0;
            }
LABEL_57:
            while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
            {
              unsigned int v32 = a1[*v4];
              if (a1[*v4]) {
                break;
              }
              while (1)
              {
                uint64_t v33 = *v2;
                uint64_t v34 = *(void *)&a1[v33];
                unint64_t v35 = v34 + 1;
                if (v34 == -1 || v35 > *(void *)&a1[*v3]) {
                  break;
                }
                int v36 = *(char *)(*(void *)&a1[*v5] + v34);
                *(void *)&a1[v33] = v35;
                if (v36 < 0)
                {
                  BOOL v13 = v32++ >= 9;
                  if (!v13) {
                    continue;
                  }
                }
                goto LABEL_57;
              }
              a1[*v4] = 1;
            }
LABEL_42:
            PBReaderRecallMark();
          }
          else
          {
            if ((v8 & 7) != 0) {
              goto LABEL_68;
            }
            while (1)
            {
              uint64_t v22 = *v2;
              uint64_t v23 = *(void *)&a1[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&a1[*v3]) {
                break;
              }
              int v25 = *(char *)(*(void *)&a1[*v5] + v23);
              *(void *)&a1[v22] = v24;
              if (v25 < 0)
              {
                unsigned int v26 = v15++;
                if (v26 <= 8) {
                  continue;
                }
              }
              goto LABEL_43;
            }
LABEL_45:
            a1[*v4] = 1;
          }
LABEL_43:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_66;
          }
          break;
        case 4u:
          if (v15 == 2 && PBReaderPlaceMark() && GEOVLFImagePositionIsValid(a1)) {
            goto LABEL_42;
          }
          goto LABEL_68;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_68;
          }
          goto LABEL_43;
      }
    }
  }
LABEL_66:
  BOOL v37 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v37;
}

BOOL GEOVLFFrameDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  id v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v22 = 0;
          while (1)
          {
            uint64_t v23 = *v2;
            uint64_t v24 = *(void *)&a1[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&a1[*v3]) {
              goto LABEL_85;
            }
            int v26 = *(char *)(*(void *)&a1[*v5] + v24);
            *(void *)&a1[v23] = v25;
            if (v26 < 0)
            {
              BOOL v27 = v22++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_87;
          }
        case 2u:
          if (v16 == 5) {
            goto LABEL_23;
          }
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_90;
          }
          while (1)
          {
            uint64_t v28 = (unint64_t *)&a1[*v2];
            unint64_t v29 = *v28;
            unint64_t v30 = *(void *)&a1[*v3];
            if (*v28 >= v30) {
              break;
            }
            uint64_t v31 = *v4;
            if (a1[v31]) {
              break;
            }
            if (v29 > 0xFFFFFFFFFFFFFFFBLL || (unint64_t v32 = v29 + 4, v32 > v30)) {
              a1[v31] = 1;
            }
            else {
              *uint64_t v28 = v32;
            }
          }
          goto LABEL_67;
        case 3u:
          if (v16 == 5) {
            goto LABEL_23;
          }
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_90;
          }
          while (1)
          {
            uint64_t v33 = (unint64_t *)&a1[*v2];
            unint64_t v34 = *v33;
            unint64_t v35 = *(void *)&a1[*v3];
            if (*v33 >= v35) {
              break;
            }
            uint64_t v36 = *v4;
            if (a1[v36]) {
              break;
            }
            if (v34 > 0xFFFFFFFFFFFFFFFBLL || (unint64_t v37 = v34 + 4, v37 > v35)) {
              a1[v36] = 1;
            }
            else {
              *uint64_t v33 = v37;
            }
          }
          goto LABEL_67;
        case 4u:
        case 5u:
          if (v16 == 5) {
            goto LABEL_23;
          }
          goto LABEL_90;
        case 6u:
        case 0xAu:
        case 0xBu:
        case 0xCu:
          if (v16 == 1) {
            goto LABEL_20;
          }
          goto LABEL_90;
        case 7u:
          if (v16 != 5)
          {
            if (v16 != 2 || !PBReaderPlaceMark()) {
              goto LABEL_90;
            }
            while (1)
            {
              unint64_t v38 = (unint64_t *)&a1[*v2];
              unint64_t v39 = *v38;
              unint64_t v40 = *(void *)&a1[*v3];
              if (*v38 >= v40) {
                break;
              }
              uint64_t v41 = *v4;
              if (a1[v41]) {
                break;
              }
              if (v39 > 0xFFFFFFFFFFFFFFFBLL || (unint64_t v42 = v39 + 4, v42 > v40)) {
                a1[v41] = 1;
              }
              else {
                *unint64_t v38 = v42;
              }
            }
            goto LABEL_67;
          }
LABEL_23:
          uint64_t v18 = *v2;
          unint64_t v21 = *(void *)&a1[v18];
          if (v21 > 0xFFFFFFFFFFFFFFFBLL) {
            goto LABEL_86;
          }
          unint64_t v20 = v21 + 4;
          goto LABEL_25;
        case 8u:
          if (v16 == 2 && PBReaderPlaceMark() && GEOVLFUsageTileIDIsValid(a1)) {
            goto LABEL_67;
          }
          goto LABEL_90;
        case 9u:
          if (v16 == 1)
          {
LABEL_20:
            uint64_t v18 = *v2;
            unint64_t v19 = *(void *)&a1[v18];
            if (v19 > 0xFFFFFFFFFFFFFFF7) {
              goto LABEL_86;
            }
            unint64_t v20 = v19 + 8;
LABEL_25:
            if (v20 > *(void *)&a1[*v3]) {
LABEL_86:
            }
              a1[v14] = 1;
            else {
              *(void *)&a1[v18] = v20;
            }
          }
          else
          {
            if (v16 != 2 || !PBReaderPlaceMark())
            {
LABEL_90:
              PBReaderRecallMark();
              return 0;
            }
            while (1)
            {
              unint64_t v43 = (unint64_t *)&a1[*v2];
              unint64_t v44 = *v43;
              unint64_t v45 = *(void *)&a1[*v3];
              if (*v43 >= v45) {
                break;
              }
              uint64_t v46 = *v4;
              if (a1[v46]) {
                break;
              }
              if (v44 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v47 = v44 + 8, v47 > v45)) {
                a1[v46] = 1;
              }
              else {
                *unint64_t v43 = v47;
              }
            }
LABEL_67:
            PBReaderRecallMark();
          }
LABEL_87:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_88;
          }
          break;
        case 0xDu:
          if ((v8 & 7) != 0) {
            goto LABEL_90;
          }
          unsigned int v48 = 0;
          while (1)
          {
            uint64_t v49 = *v2;
            uint64_t v50 = *(void *)&a1[v49];
            unint64_t v51 = v50 + 1;
            if (v50 == -1 || v51 > *(void *)&a1[*v3]) {
              break;
            }
            int v52 = *(char *)(*(void *)&a1[*v5] + v50);
            *(void *)&a1[v49] = v51;
            if (v52 < 0)
            {
              BOOL v27 = v48++ > 8;
              if (!v27) {
                continue;
              }
            }
            goto LABEL_87;
          }
LABEL_85:
          uint64_t v14 = *v4;
          goto LABEL_86;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_90;
          }
          goto LABEL_87;
      }
    }
  }
LABEL_88:
  BOOL v53 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v53;
}

void sub_18A40FA34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVLFCrowdsourcingDetailsIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 208));
  if ((*(_WORD *)(a1 + 216) & 0x1FF0) != 0) {
    return 1;
  }
  if ((*(_WORD *)(a1 + 216) & 0x400) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 160);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOVLFFrameDetailsIsDirty(*(void *)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOVLFCrowdsourcingDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOVLFCrowdsourcingDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 52);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A410370(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFDeviceOrientationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFDeviceOrientationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A411250(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFEntryPointReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A411D08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFEntryPointReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFEntryPointReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A411D6C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFFailureDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 1)
        {
          char v18 = 0;
          unsigned int v19 = 0;
          uint64_t v20 = 0;
          *(unsigned char *)(a1 + 12) |= 1u;
          while (1)
          {
            uint64_t v21 = *v4;
            uint64_t v22 = *(void *)&v3[v21];
            unint64_t v23 = v22 + 1;
            if (v22 == -1 || v23 > *(void *)&v3[*v5]) {
              break;
            }
            char v24 = *(unsigned char *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v23;
            v20 |= (unint64_t)(v24 & 0x7F) << v18;
            if ((v24 & 0x80) == 0) {
              goto LABEL_30;
            }
            v18 += 7;
            BOOL v15 = v19++ >= 9;
            if (v15)
            {
              LODWORD(v20) = 0;
              goto LABEL_32;
            }
          }
          v3[*v6] = 1;
LABEL_30:
          if (v3[*v6]) {
            LODWORD(v20) = 0;
          }
LABEL_32:
          *(_DWORD *)(a1 + 8) = v20;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_35;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v25 = v3[*v6] == 0;
  }
  else
  {
LABEL_35:
    BOOL v25 = 0;
  }
  objc_sync_exit(v3);

  return v25;
}

void sub_18A4129E4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFFailureDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFFailureDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A412A48(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFFailureDetailsIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      if (v14 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 >> 3) == 1)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v16 = 0;
        while (1)
        {
          uint64_t v17 = *v2;
          uint64_t v18 = *(void *)&a1[v17];
          unint64_t v19 = v18 + 1;
          if (v18 == -1 || v19 > *(void *)&a1[*v3]) {
            break;
          }
          int v20 = *(char *)(*(void *)&a1[*v5] + v18);
          *(void *)&a1[v17] = v19;
          if (v20 < 0 && v16++ <= 8) {
            continue;
          }
          goto LABEL_30;
        }
        a1[*v4] = 1;
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_33:
        BOOL v22 = 0;
        goto LABEL_32;
      }
LABEL_30:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_32:
  PBReaderRecallMark();
  return v22;
}

void sub_18A413148(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFFrameDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 156);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 152)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = (unsigned __int16)(vaddv_s16((int16x4_t)(*(void *)&vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 180)), (uint16x4_t)0xFFF4FFF6FFF5FFF8) & 0xFF01FF01FF01FF01))+ ((*(_WORD *)(a1 + 180) >> 9) & 1));
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 3);
  if (v9 & 1 | (v10 > 3) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  int v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_172:
    if (v12)
    {
      char v88 = 1;
      goto LABEL_174;
    }
    if (v13)
    {
      while (1)
      {
        int v89 = *v13++;
        __int16 v90 = 2048;
        switch(v89)
        {
          case 0:
            goto LABEL_184;
          case 2:
            goto LABEL_183;
          case 3:
            __int16 v90 = 256;
            goto LABEL_183;
          case 7:
            __int16 v90 = 1024;
            goto LABEL_183;
          case 8:
            __int16 v90 = 4096;
            goto LABEL_183;
          case 9:
            __int16 v90 = 512;
LABEL_183:
            *(_WORD *)(a1 + 180) |= v90;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_184;
  }
  unsigned int v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_172;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        uint64_t v25 = *v15;
        int v26 = *(unsigned __int8 *)(v3 + v25);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    uint64_t v25 = *v15;
    int v26 = *(unsigned __int8 *)(v3 + v25);
    if (*(unsigned char *)(v3 + v25)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    int v27 = v19 & 7;
    if (v26 || v27 == 4) {
      goto LABEL_172;
    }
    unint64_t v29 = v19 >> 3;
    BOOL v30 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v31 = v13;
      do
      {
        int v33 = *v31++;
        int v32 = v33;
        BOOL v30 = v33 != 0;
        if (v33) {
          BOOL v34 = v32 == v29;
        }
        else {
          BOOL v34 = 1;
        }
      }
      while (!v34);
    }
    switch((int)v29)
    {
      case 1:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        char v35 = 0;
        unsigned int v36 = 0;
        uint64_t v37 = 0;
        *(_WORD *)(a1 + 180) |= 0x80u;
        while (1)
        {
          uint64_t v38 = *v14;
          uint64_t v39 = *(void *)(v3 + v38);
          unint64_t v40 = v39 + 1;
          if (v39 == -1 || v40 > *(void *)(v3 + *v6)) {
            break;
          }
          char v41 = *(unsigned char *)(*(void *)(v3 + *v16) + v39);
          *(void *)(v3 + v38) = v40;
          v37 |= (unint64_t)(v41 & 0x7F) << v35;
          if ((v41 & 0x80) == 0) {
            goto LABEL_133;
          }
          v35 += 7;
          BOOL v24 = v36++ >= 9;
          if (v24)
          {
            LODWORD(v37) = 0;
            goto LABEL_135;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_133:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v37) = 0;
        }
LABEL_135:
        uint64_t v81 = 176;
        goto LABEL_140;
      case 2:
        if (!v30 || (*(_WORD *)(a1 + 180) & 0x800) != 0) {
          goto LABEL_129;
        }
        if (v27 != 2) {
          goto LABEL_152;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_189;
        }
        while (1)
        {
          unint64_t v43 = (unint64_t *)(v3 + *v14);
          unint64_t v44 = *v43;
          unint64_t v45 = *(void *)(v3 + *v6);
          if (*v43 >= v45) {
            break;
          }
          uint64_t v46 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v46)) {
            break;
          }
          if (v44 > 0xFFFFFFFFFFFFFFFBLL || v44 + 4 > v45) {
            *(unsigned char *)(v3 + v46) = 1;
          }
          else {
            *unint64_t v43 = v44 + 4;
          }
          PBRepeatedFloatAdd();
        }
        goto LABEL_131;
      case 3:
        if (!v30 || (*(_WORD *)(a1 + 180) & 0x100) != 0) {
          goto LABEL_129;
        }
        if (v27 != 2) {
          goto LABEL_152;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_189;
        }
        while (1)
        {
          unint64_t v47 = (unint64_t *)(v3 + *v14);
          unint64_t v48 = *v47;
          unint64_t v49 = *(void *)(v3 + *v6);
          if (*v47 >= v49) {
            break;
          }
          uint64_t v50 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v50)) {
            break;
          }
          if (v48 > 0xFFFFFFFFFFFFFFFBLL || v48 + 4 > v49) {
            *(unsigned char *)(v3 + v50) = 1;
          }
          else {
            *unint64_t v47 = v48 + 4;
          }
          PBRepeatedFloatAdd();
        }
        goto LABEL_131;
      case 4:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        *(_WORD *)(a1 + 180) |= 0x10u;
        uint64_t v51 = *v14;
        unint64_t v52 = *(void *)(v3 + v51);
        if (v52 <= 0xFFFFFFFFFFFFFFFBLL && v52 + 4 <= *(void *)(v3 + *v6))
        {
          int v53 = *(_DWORD *)(*(void *)(v3 + *v16) + v52);
          *(void *)(v3 + v51) = v52 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          int v53 = 0;
        }
        uint64_t v82 = 164;
        goto LABEL_149;
      case 5:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        *(_WORD *)(a1 + 180) |= 0x20u;
        uint64_t v54 = *v14;
        unint64_t v55 = *(void *)(v3 + v54);
        if (v55 <= 0xFFFFFFFFFFFFFFFBLL && v55 + 4 <= *(void *)(v3 + *v6))
        {
          int v53 = *(_DWORD *)(*(void *)(v3 + *v16) + v55);
          *(void *)(v3 + v54) = v55 + 4;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          int v53 = 0;
        }
        uint64_t v82 = 168;
LABEL_149:
        *(_DWORD *)(a1 + v82) = v53;
        goto LABEL_170;
      case 6:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        *(_WORD *)(a1 + 180) |= 8u;
        uint64_t v56 = *v14;
        unint64_t v57 = *(void *)(v3 + v56);
        if (v57 <= 0xFFFFFFFFFFFFFFF7 && v57 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v58 = *(void *)(*(void *)(v3 + *v16) + v57);
          *(void *)(v3 + v56) = v57 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          uint64_t v58 = 0;
        }
        uint64_t v83 = 144;
        goto LABEL_164;
      case 7:
        if (!v30 || (*(_WORD *)(a1 + 180) & 0x400) != 0) {
          goto LABEL_129;
        }
        if (v27 != 2)
        {
LABEL_152:
          uint64_t v84 = *v14;
          unint64_t v85 = *(void *)(v3 + v84);
          if (v85 <= 0xFFFFFFFFFFFFFFFBLL && v85 + 4 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v84) = v85 + 4;
          }
          else {
            *(unsigned char *)(v3 + v25) = 1;
          }
          PBRepeatedFloatAdd();
          goto LABEL_169;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_189;
        }
        while (1)
        {
          unint64_t v59 = (unint64_t *)(v3 + *v14);
          unint64_t v60 = *v59;
          unint64_t v61 = *(void *)(v3 + *v6);
          if (*v59 >= v61) {
            break;
          }
          uint64_t v62 = (int)*MEMORY[0x1E4F940C8];
          if (*(unsigned char *)(v3 + v62)) {
            break;
          }
          if (v60 > 0xFFFFFFFFFFFFFFFBLL || v60 + 4 > v61) {
            *(unsigned char *)(v3 + v62) = 1;
          }
          else {
            *unint64_t v59 = v60 + 4;
          }
          PBRepeatedFloatAdd();
        }
        goto LABEL_131;
      case 8:
        if (!v30) {
          goto LABEL_129;
        }
        if ((*(_WORD *)(a1 + 180) & 0x1000) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_189;
          }
          v7 += *(unsigned __int16 *)(a1 + 180) << 19 >> 31;
          goto LABEL_169;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_189;
        }
        char v93 = objc_alloc_init(GEOVLFUsageTileID);
        if (GEOVLFUsageTileIDReadAllFrom((uint64_t)v93, (void *)v3))
        {
          PBReaderRecallMark();
          unint64_t v63 = *(void **)(a1 + 136);
          *(void *)(a1 + 136) = v93;

          --v7;
LABEL_169:
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_170:
          if (!(v12 & 1 | (v7 != 0)) || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
            goto LABEL_172;
          }
          continue;
        }

LABEL_189:
        char v88 = 0;
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_174:
        *(_WORD *)(a1 + 180) |= 0x800u;
        *(_WORD *)(a1 + 180) |= 0x100u;
        *(_WORD *)(a1 + 180) |= 0x400u;
        *(_WORD *)(a1 + 180) |= 0x1000u;
        *(_WORD *)(a1 + 180) |= 0x200u;
        if (v88)
        {
LABEL_184:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_185;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v12 & 1) == 0) {
          return v3;
        }
LABEL_185:
        uint64_t v91 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      case 9:
        if (!v30 || (*(_WORD *)(a1 + 180) & 0x200) != 0) {
          goto LABEL_129;
        }
        if (v27 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_189;
          }
          while (1)
          {
            unint64_t v64 = (unint64_t *)(v3 + *v14);
            unint64_t v65 = *v64;
            unint64_t v66 = *(void *)(v3 + *v6);
            if (*v64 >= v66) {
              break;
            }
            uint64_t v67 = (int)*MEMORY[0x1E4F940C8];
            if (*(unsigned char *)(v3 + v67)) {
              break;
            }
            if (v65 > 0xFFFFFFFFFFFFFFF7 || v65 + 8 > v66) {
              *(unsigned char *)(v3 + v67) = 1;
            }
            else {
              *unint64_t v64 = v65 + 8;
            }
            PBRepeatedDoubleAdd();
          }
LABEL_131:
          PBReaderRecallMark();
        }
        else
        {
          uint64_t v86 = *v14;
          unint64_t v87 = *(void *)(v3 + v86);
          if (v87 <= 0xFFFFFFFFFFFFFFF7 && v87 + 8 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v86) = v87 + 8;
          }
          else {
            *(unsigned char *)(v3 + v25) = 1;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_169;
      case 10:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        *(_WORD *)(a1 + 180) |= 1u;
        uint64_t v68 = *v14;
        unint64_t v69 = *(void *)(v3 + v68);
        if (v69 <= 0xFFFFFFFFFFFFFFF7 && v69 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v58 = *(void *)(*(void *)(v3 + *v16) + v69);
          *(void *)(v3 + v68) = v69 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          uint64_t v58 = 0;
        }
        uint64_t v83 = 112;
        goto LABEL_164;
      case 11:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        *(_WORD *)(a1 + 180) |= 2u;
        uint64_t v70 = *v14;
        unint64_t v71 = *(void *)(v3 + v70);
        if (v71 <= 0xFFFFFFFFFFFFFFF7 && v71 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v58 = *(void *)(*(void *)(v3 + *v16) + v71);
          *(void *)(v3 + v70) = v71 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          uint64_t v58 = 0;
        }
        uint64_t v83 = 120;
        goto LABEL_164;
      case 12:
        if ((v8 & 1) == 0) {
          goto LABEL_129;
        }
        *(_WORD *)(a1 + 180) |= 4u;
        uint64_t v72 = *v14;
        unint64_t v73 = *(void *)(v3 + v72);
        if (v73 <= 0xFFFFFFFFFFFFFFF7 && v73 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v58 = *(void *)(*(void *)(v3 + *v16) + v73);
          *(void *)(v3 + v72) = v73 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v15) = 1;
          uint64_t v58 = 0;
        }
        uint64_t v83 = 128;
LABEL_164:
        *(void *)(a1 + v83) = v58;
        goto LABEL_170;
      case 13:
        if (v8)
        {
          char v74 = 0;
          unsigned int v75 = 0;
          uint64_t v37 = 0;
          *(_WORD *)(a1 + 180) |= 0x40u;
          while (1)
          {
            uint64_t v76 = *v14;
            uint64_t v77 = *(void *)(v3 + v76);
            unint64_t v78 = v77 + 1;
            if (v77 == -1 || v78 > *(void *)(v3 + *v6)) {
              break;
            }
            char v79 = *(unsigned char *)(*(void *)(v3 + *v16) + v77);
            *(void *)(v3 + v76) = v78;
            v37 |= (unint64_t)(v79 & 0x7F) << v74;
            if ((v79 & 0x80) == 0) {
              goto LABEL_137;
            }
            v74 += 7;
            BOOL v24 = v75++ >= 9;
            if (v24)
            {
              LODWORD(v37) = 0;
              goto LABEL_139;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_137:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v37) = 0;
          }
LABEL_139:
          uint64_t v81 = 172;
LABEL_140:
          *(_DWORD *)(a1 + v81) = v37;
        }
        else
        {
LABEL_129:
          char v80 = PBReaderSkipValueWithTag();
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          if ((v80 & 1) == 0)
          {
LABEL_187:
            char v88 = 0;
            goto LABEL_174;
          }
        }
        goto LABEL_170;
      default:
        int v42 = PBReaderSkipValueWithTag();
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
        if (!v42) {
          goto LABEL_187;
        }
        goto LABEL_170;
    }
  }
}

void sub_18A414160(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A414658(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A4149EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A414B58(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A415DC8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFFrameDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 156))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVLFFrameDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)unsigned int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 160));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 152) = [v8 position];
  *(_DWORD *)(a1 + 156) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOVLFFrameDetailsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOVLFFrameDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOVLFFrameDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 136) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return Specified;
}

void sub_18A415F70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFFrameDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVLFFrameDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A415FD4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFUsageTileIDIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if (v16 == 2 && (PBReaderSkipValueWithTag() & 1) != 0) {
            goto LABEL_29;
          }
          goto LABEL_32;
        case 2u:
        case 3u:
        case 4u:
          if (v16 != 1) {
            goto LABEL_32;
          }
          uint64_t v18 = *v2;
          unint64_t v19 = *(void *)&a1[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v20 = v19 + 8, v20 <= *(void *)&a1[*v3])) {
            *(void *)&a1[v18] = v20;
          }
          else {
            a1[v14] = 1;
          }
          goto LABEL_29;
        default:
          if (!PBReaderSkipValueWithTag())
          {
LABEL_32:
            BOOL v21 = 0;
            goto LABEL_31;
          }
LABEL_29:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_30;
          }
          break;
      }
    }
  }
LABEL_30:
  BOOL v21 = a1[*v4] == 0;
LABEL_31:
  PBReaderRecallMark();
  return v21;
}

void sub_18A416598(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFFrameDetailsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 160));
  BOOL v2 = (*(_WORD *)(a1 + 180) & 0x3F00) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 160));
  return v2;
}

void sub_18A416C1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFGravityVectorReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(unsigned char *)(a1 + 32) |= 4u;
          uint64_t v22 = *v4;
          unint64_t v23 = *(void *)&v3[v22];
          if (v23 <= 0xFFFFFFFFFFFFFFF7 && v23 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v21 = *(void *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v21 = 0;
          }
          int v26 = &OBJC_IVAR___GEOVLFGravityVector__z;
        }
        else if (v18 == 2)
        {
          *(unsigned char *)(a1 + 32) |= 2u;
          uint64_t v24 = *v4;
          unint64_t v25 = *(void *)&v3[v24];
          if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v21 = *(void *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v25 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v21 = 0;
          }
          int v26 = &OBJC_IVAR___GEOVLFGravityVector__y;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_42;
            }
            continue;
          }
          *(unsigned char *)(a1 + 32) |= 1u;
          uint64_t v19 = *v4;
          unint64_t v20 = *(void *)&v3[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFF7 && v20 + 8 <= *(void *)&v3[*v5])
          {
            uint64_t v21 = *(void *)(*(void *)&v3[*v7] + v20);
            *(void *)&v3[v19] = v20 + 8;
          }
          else
          {
            v3[*v6] = 1;
            uint64_t v21 = 0;
          }
          int v26 = &OBJC_IVAR___GEOVLFGravityVector__x;
        }
        *(void *)(a1 + *v26) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A417CC4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFGravityVectorReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFGravityVectorReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A417D28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFGravityVectorIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || v18 == 2 || v18 == 1)
      {
        if (v16 != 1) {
          goto LABEL_31;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFF7 && (unint64_t v21 = v20 + 8, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_31:
        BOOL v22 = 0;
        goto LABEL_30;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_30:
  PBReaderRecallMark();
  return v22;
}

BOOL GEOVLFImagePositionReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          *(unsigned char *)(a1 + 16) |= 2u;
          uint64_t v21 = *v4;
          unint64_t v22 = *(void *)&v3[v21];
          if (v22 <= 0xFFFFFFFFFFFFFFFBLL && v22 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v22);
            *(void *)&v3[v21] = v22 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          unint64_t v23 = &OBJC_IVAR___GEOVLFImagePosition__y;
        }
        else
        {
          if ((v10 >> 3) != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_36;
            }
            continue;
          }
          *(unsigned char *)(a1 + 16) |= 1u;
          uint64_t v18 = *v4;
          unint64_t v19 = *(void *)&v3[v18];
          if (v19 <= 0xFFFFFFFFFFFFFFFBLL && v19 + 4 <= *(void *)&v3[*v5])
          {
            int v20 = *(_DWORD *)(*(void *)&v3[*v7] + v19);
            *(void *)&v3[v18] = v19 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v20 = 0;
          }
          unint64_t v23 = &OBJC_IVAR___GEOVLFImagePosition__x;
        }
        *(_DWORD *)(a1 + *v23) = v20;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v24 = v3[*v6] == 0;
  }
  else
  {
LABEL_36:
    BOOL v24 = 0;
  }
  objc_sync_exit(v3);

  return v24;
}

void sub_18A418AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFImagePositionReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFImagePositionReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A418B0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFImagePositionIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      if ((v8 >> 3) == 2 || (v8 >> 3) == 1)
      {
        if (v16 != 5) {
          goto LABEL_30;
        }
        uint64_t v18 = *v2;
        unint64_t v19 = *(void *)&a1[v18];
        if (v19 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v20 = v19 + 4, v20 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v18] = v20;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_30:
        BOOL v21 = 0;
        goto LABEL_29;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v21 = a1[*v4] == 0;
LABEL_29:
  PBReaderRecallMark();
  return v21;
}

BOOL GEOVLFInitializationFailureDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    char v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      unsigned int v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          uint64_t v26 = PBReaderReadString();
          BOOL v27 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v26;
        }
        else
        {
          if (v18 == 2)
          {
            char v28 = 0;
            unsigned int v29 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 2u;
            while (1)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5]) {
                break;
              }
              char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
              *(void *)&v3[v30] = v32;
              v21 |= (unint64_t)(v33 & 0x7F) << v28;
              if ((v33 & 0x80) == 0) {
                goto LABEL_44;
              }
              v28 += 7;
              BOOL v15 = v29++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_46;
              }
            }
            v3[*v6] = 1;
LABEL_44:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_46:
            uint64_t v34 = 20;
          }
          else
          {
            if (v18 != 1)
            {
              if (!PBReaderSkipValueWithTag()) {
                goto LABEL_50;
              }
              continue;
            }
            char v19 = 0;
            unsigned int v20 = 0;
            uint64_t v21 = 0;
            *(unsigned char *)(a1 + 24) |= 1u;
            while (1)
            {
              uint64_t v22 = *v4;
              uint64_t v23 = *(void *)&v3[v22];
              unint64_t v24 = v23 + 1;
              if (v23 == -1 || v24 > *(void *)&v3[*v5]) {
                break;
              }
              char v25 = *(unsigned char *)(*(void *)&v3[*v7] + v23);
              *(void *)&v3[v22] = v24;
              v21 |= (unint64_t)(v25 & 0x7F) << v19;
              if ((v25 & 0x80) == 0) {
                goto LABEL_40;
              }
              v19 += 7;
              BOOL v15 = v20++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_42;
              }
            }
            v3[*v6] = 1;
LABEL_40:
            if (v3[*v6]) {
              LODWORD(v21) = 0;
            }
LABEL_42:
            uint64_t v34 = 16;
          }
          *(_DWORD *)(a1 + v34) = v21;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v35 = v3[*v6] == 0;
  }
  else
  {
LABEL_50:
    BOOL v35 = 0;
  }
  objc_sync_exit(v3);

  return v35;
}

void sub_18A419904(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFInitializationFailureDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFInitializationFailureDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A419968(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41A134(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFLocalizationAlgorithmDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 68);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 64)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int16 *)(a1 + 100) >> 7) & 1) + ((*(unsigned __int16 *)(a1 + 100) >> 6) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v9 & 1 | v10) != 0;
  if (((v9 & 1 | v10) != 0) | v7 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_153:
    if (v12)
    {
      char v85 = 1;
      goto LABEL_155;
    }
    if (!v13) {
      goto LABEL_166;
    }
    while (1)
    {
      int v87 = *v13++;
      int v86 = v87;
      if (v87 == 4) {
        break;
      }
      if (v86 == 5)
      {
        __int16 v88 = 64;
LABEL_165:
        *(_WORD *)(a1 + 100) |= v88;
      }
      else if (!v86)
      {
        goto LABEL_166;
      }
    }
    __int16 v88 = 128;
    goto LABEL_165;
  }
  if (v13) {
    BOOL v16 = (v9 & 1 | v10) != 0;
  }
  else {
    BOOL v16 = 1;
  }
  if (v8) {
    int v17 = 1;
  }
  else {
    int v17 = v12;
  }
  int v91 = v17;
  BOOL v92 = v16;
  unint64_t v18 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_153;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v14;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_30;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        uint64_t v27 = *v15;
        int v28 = *(unsigned __int8 *)(v3 + v27);
        goto LABEL_32;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_30:
    uint64_t v27 = *v15;
    int v28 = *(unsigned __int8 *)(v3 + v27);
    if (*(unsigned char *)(v3 + v27)) {
      unint64_t v21 = 0;
    }
LABEL_32:
    int v29 = v21 & 7;
    if (v28 || v29 == 4) {
      goto LABEL_153;
    }
    unint64_t v31 = v21 >> 3;
    BOOL v32 = v12;
    if (!v92)
    {
      char v33 = v13;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if ((v7 & 1) == 0) {
          goto LABEL_116;
        }
        char v37 = 0;
        unsigned int v38 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 100) |= 2u;
        while (1)
        {
          uint64_t v40 = *v14;
          uint64_t v41 = *(void *)(v3 + v40);
          unint64_t v42 = v41 + 1;
          if (v41 == -1 || v42 > *(void *)(v3 + *v6)) {
            break;
          }
          char v43 = *(unsigned char *)(*(void *)(v3 + *v18) + v41);
          *(void *)(v3 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0) {
            goto LABEL_119;
          }
          v37 += 7;
          BOOL v26 = v38++ >= 9;
          if (v26)
          {
            LODWORD(v39) = 0;
            goto LABEL_121;
          }
        }
        *(unsigned char *)(v3 + *v15) = 1;
LABEL_119:
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v39) = 0;
        }
LABEL_121:
        uint64_t v82 = 80;
        goto LABEL_142;
      case 2:
        if ((v7 & 1) == 0) {
          goto LABEL_116;
        }
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 100) |= 4u;
        while (2)
        {
          uint64_t v50 = *v14;
          uint64_t v51 = *(void *)(v3 + v50);
          unint64_t v52 = v51 + 1;
          if (v51 == -1 || v52 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v53 = *(unsigned char *)(*(void *)(v3 + *v18) + v51);
            *(void *)(v3 + v50) = v52;
            v39 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              BOOL v26 = v49++ >= 9;
              if (v26)
              {
                LODWORD(v39) = 0;
                goto LABEL_125;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v39) = 0;
        }
LABEL_125:
        uint64_t v82 = 84;
        goto LABEL_142;
      case 3:
        if ((v7 & 1) == 0) {
          goto LABEL_116;
        }
        char v54 = 0;
        unsigned int v55 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 100) |= 1u;
        while (2)
        {
          uint64_t v56 = *v14;
          uint64_t v57 = *(void *)(v3 + v56);
          unint64_t v58 = v57 + 1;
          if (v57 == -1 || v58 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v59 = *(unsigned char *)(*(void *)(v3 + *v18) + v57);
            *(void *)(v3 + v56) = v58;
            v39 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              BOOL v26 = v55++ >= 9;
              if (v26)
              {
                LODWORD(v39) = 0;
                goto LABEL_129;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v39) = 0;
        }
LABEL_129:
        uint64_t v82 = 76;
        goto LABEL_142;
      case 4:
        if (!v32 || (*(_WORD *)(a1 + 100) & 0x80) != 0) {
          goto LABEL_116;
        }
        if (v29 != 2) {
          goto LABEL_148;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_169;
        }
        while (1)
        {
          unint64_t v60 = (unint64_t *)(v3 + *v14);
          unint64_t v61 = *v60;
          unint64_t v62 = *(void *)(v3 + *v6);
          if (*v60 >= v62) {
            break;
          }
          uint64_t v63 = *v15;
          if (*(unsigned char *)(v3 + v63)) {
            break;
          }
          if (v61 > 0xFFFFFFFFFFFFFFF7 || v61 + 8 > v62) {
            *(unsigned char *)(v3 + v63) = 1;
          }
          else {
            *unint64_t v60 = v61 + 8;
          }
          PBRepeatedDoubleAdd();
        }
        goto LABEL_146;
      case 5:
        if (!v32 || (*(_WORD *)(a1 + 100) & 0x40) != 0) {
          goto LABEL_116;
        }
        if (v29 != 2)
        {
LABEL_148:
          uint64_t v83 = *v14;
          unint64_t v84 = *(void *)(v3 + v83);
          if (v84 <= 0xFFFFFFFFFFFFFFF7 && v84 + 8 <= *(void *)(v3 + *v6)) {
            *(void *)(v3 + v83) = v84 + 8;
          }
          else {
            *(unsigned char *)(v3 + v27) = 1;
          }
          PBRepeatedDoubleAdd();
          goto LABEL_143;
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_169;
        }
        while (1)
        {
          unint64_t v44 = (unint64_t *)(v3 + *v14);
          unint64_t v45 = *v44;
          unint64_t v46 = *(void *)(v3 + *v6);
          if (*v44 >= v46) {
            break;
          }
          uint64_t v47 = *v15;
          if (*(unsigned char *)(v3 + v47)) {
            break;
          }
          if (v45 > 0xFFFFFFFFFFFFFFF7 || v45 + 8 > v46) {
            *(unsigned char *)(v3 + v47) = 1;
          }
          else {
            *unint64_t v44 = v45 + 8;
          }
          PBRepeatedDoubleAdd();
        }
LABEL_146:
        PBReaderRecallMark();
        if ((v91 & 1) == 0) {
          goto LABEL_153;
        }
        goto LABEL_144;
      case 6:
        if ((v7 & 1) == 0) {
          goto LABEL_116;
        }
        char v64 = 0;
        unsigned int v65 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 100) |= 8u;
        while (2)
        {
          uint64_t v66 = *v14;
          uint64_t v67 = *(void *)(v3 + v66);
          unint64_t v68 = v67 + 1;
          if (v67 == -1 || v68 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v69 = *(unsigned char *)(*(void *)(v3 + *v18) + v67);
            *(void *)(v3 + v66) = v68;
            v39 |= (unint64_t)(v69 & 0x7F) << v64;
            if (v69 < 0)
            {
              v64 += 7;
              BOOL v26 = v65++ >= 9;
              if (v26)
              {
                LODWORD(v39) = 0;
                goto LABEL_133;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v39) = 0;
        }
LABEL_133:
        uint64_t v82 = 88;
        goto LABEL_142;
      case 7:
        if ((v7 & 1) == 0) {
          goto LABEL_116;
        }
        char v70 = 0;
        unsigned int v71 = 0;
        uint64_t v39 = 0;
        *(_WORD *)(a1 + 100) |= 0x10u;
        while (2)
        {
          uint64_t v72 = *v14;
          uint64_t v73 = *(void *)(v3 + v72);
          unint64_t v74 = v73 + 1;
          if (v73 == -1 || v74 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v15) = 1;
          }
          else
          {
            char v75 = *(unsigned char *)(*(void *)(v3 + *v18) + v73);
            *(void *)(v3 + v72) = v74;
            v39 |= (unint64_t)(v75 & 0x7F) << v70;
            if (v75 < 0)
            {
              v70 += 7;
              BOOL v26 = v71++ >= 9;
              if (v26)
              {
                LODWORD(v39) = 0;
                goto LABEL_137;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v15)) {
          LODWORD(v39) = 0;
        }
LABEL_137:
        uint64_t v82 = 92;
        goto LABEL_142;
      case 8:
        if (v7)
        {
          char v76 = 0;
          unsigned int v77 = 0;
          uint64_t v39 = 0;
          *(_WORD *)(a1 + 100) |= 0x20u;
          while (1)
          {
            uint64_t v78 = *v14;
            uint64_t v79 = *(void *)(v3 + v78);
            unint64_t v80 = v79 + 1;
            if (v79 == -1 || v80 > *(void *)(v3 + *v6)) {
              break;
            }
            char v81 = *(unsigned char *)(*(void *)(v3 + *v18) + v79);
            *(void *)(v3 + v78) = v80;
            v39 |= (unint64_t)(v81 & 0x7F) << v76;
            if ((v81 & 0x80) == 0) {
              goto LABEL_139;
            }
            v76 += 7;
            BOOL v26 = v77++ >= 9;
            if (v26)
            {
              LODWORD(v39) = 0;
              goto LABEL_141;
            }
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_139:
          if (*(unsigned char *)(v3 + *v15)) {
            LODWORD(v39) = 0;
          }
LABEL_141:
          uint64_t v82 = 96;
LABEL_142:
          *(_DWORD *)(a1 + v82) = v39;
LABEL_143:
          if (!v91) {
            goto LABEL_153;
          }
LABEL_144:
          if (*(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
            goto LABEL_153;
          }
          continue;
        }
LABEL_116:
        if (PBReaderSkipValueWithTag()) {
          goto LABEL_143;
        }
LABEL_169:
        char v85 = 0;
LABEL_155:
        *(_WORD *)(a1 + 100) |= 0x80u;
        *(_WORD *)(a1 + 100) |= 0x40u;
        if (v85)
        {
LABEL_166:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_167;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if (!v12) {
          return v3;
        }
LABEL_167:
        int v89 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_169;
        }
        goto LABEL_143;
    }
  }
}

void sub_18A41AE04(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41BB50(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFLocalizationAlgorithmDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 68))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVLFLocalizationAlgorithmDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 72));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 64) = [v8 position];
  *(_DWORD *)(a1 + 68) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOVLFLocalizationAlgorithmDetailsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOVLFLocalizationAlgorithmDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOVLFLocalizationAlgorithmDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return Specified;
}

void sub_18A41BCE0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFLocalizationAlgorithmDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVLFLocalizationAlgorithmDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A41BD44(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFLocalizationAlgorithmDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (!a1[*v4])
    {
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      switch((v8 >> 3))
      {
        case 1u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v18 = 0;
          while (1)
          {
            uint64_t v19 = *v2;
            uint64_t v20 = *(void *)&a1[v19];
            unint64_t v21 = v20 + 1;
            if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
              goto LABEL_87;
            }
            int v22 = *(char *)(*(void *)&a1[*v5] + v20);
            *(void *)&a1[v19] = v21;
            if (v22 < 0)
            {
              BOOL v23 = v18++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 2u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v24 = 0;
          while (1)
          {
            uint64_t v25 = *v2;
            uint64_t v26 = *(void *)&a1[v25];
            unint64_t v27 = v26 + 1;
            if (v26 == -1 || v27 > *(void *)&a1[*v3]) {
              goto LABEL_87;
            }
            int v28 = *(char *)(*(void *)&a1[*v5] + v26);
            *(void *)&a1[v25] = v27;
            if (v28 < 0)
            {
              BOOL v23 = v24++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 3u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v29 = 0;
          while (1)
          {
            uint64_t v30 = *v2;
            uint64_t v31 = *(void *)&a1[v30];
            unint64_t v32 = v31 + 1;
            if (v31 == -1 || v32 > *(void *)&a1[*v3]) {
              goto LABEL_87;
            }
            int v33 = *(char *)(*(void *)&a1[*v5] + v31);
            *(void *)&a1[v30] = v32;
            if (v33 < 0)
            {
              BOOL v23 = v29++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 4u:
          if (v16 == 1) {
            goto LABEL_91;
          }
          if (v16 != 2 || !PBReaderPlaceMark()) {
            goto LABEL_97;
          }
          while (1)
          {
            int v34 = (unint64_t *)&a1[*v2];
            unint64_t v35 = *v34;
            unint64_t v36 = *(void *)&a1[*v3];
            if (*v34 >= v36) {
              break;
            }
            uint64_t v37 = *v4;
            if (a1[v37]) {
              break;
            }
            if (v35 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v38 = v35 + 8, v38 > v36)) {
              a1[v37] = 1;
            }
            else {
              *int v34 = v38;
            }
          }
          goto LABEL_94;
        case 5u:
          if (v16 == 1)
          {
LABEL_91:
            uint64_t v59 = *v2;
            unint64_t v60 = *(void *)&a1[v59];
            if (v60 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v61 = v60 + 8, v61 > *(void *)&a1[*v3])) {
LABEL_88:
            }
              a1[v14] = 1;
            else {
              *(void *)&a1[v59] = v61;
            }
          }
          else
          {
            if (v16 != 2 || !PBReaderPlaceMark())
            {
LABEL_97:
              PBReaderRecallMark();
              return 0;
            }
            while (1)
            {
              uint64_t v39 = (unint64_t *)&a1[*v2];
              unint64_t v40 = *v39;
              unint64_t v41 = *(void *)&a1[*v3];
              if (*v39 >= v41) {
                break;
              }
              uint64_t v42 = *v4;
              if (a1[v42]) {
                break;
              }
              if (v40 > 0xFFFFFFFFFFFFFFF7 || (unint64_t v43 = v40 + 8, v43 > v41)) {
                a1[v42] = 1;
              }
              else {
                *uint64_t v39 = v43;
              }
            }
LABEL_94:
            PBReaderRecallMark();
          }
LABEL_89:
          if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
            goto LABEL_95;
          }
          break;
        case 6u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v44 = 0;
          while (1)
          {
            uint64_t v45 = *v2;
            uint64_t v46 = *(void *)&a1[v45];
            unint64_t v47 = v46 + 1;
            if (v46 == -1 || v47 > *(void *)&a1[*v3]) {
              goto LABEL_87;
            }
            int v48 = *(char *)(*(void *)&a1[*v5] + v46);
            *(void *)&a1[v45] = v47;
            if (v48 < 0)
            {
              BOOL v23 = v44++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 7u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v49 = 0;
          while (1)
          {
            uint64_t v50 = *v2;
            uint64_t v51 = *(void *)&a1[v50];
            unint64_t v52 = v51 + 1;
            if (v51 == -1 || v52 > *(void *)&a1[*v3]) {
              goto LABEL_87;
            }
            int v53 = *(char *)(*(void *)&a1[*v5] + v51);
            *(void *)&a1[v50] = v52;
            if (v53 < 0)
            {
              BOOL v23 = v49++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_89;
          }
        case 8u:
          if ((v8 & 7) != 0) {
            goto LABEL_97;
          }
          unsigned int v54 = 0;
          while (1)
          {
            uint64_t v55 = *v2;
            uint64_t v56 = *(void *)&a1[v55];
            unint64_t v57 = v56 + 1;
            if (v56 == -1 || v57 > *(void *)&a1[*v3]) {
              break;
            }
            int v58 = *(char *)(*(void *)&a1[*v5] + v56);
            *(void *)&a1[v55] = v57;
            if (v58 < 0)
            {
              BOOL v23 = v54++ > 8;
              if (!v23) {
                continue;
              }
            }
            goto LABEL_89;
          }
LABEL_87:
          uint64_t v14 = *v4;
          goto LABEL_88;
        default:
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_97;
          }
          goto LABEL_89;
      }
    }
  }
LABEL_95:
  BOOL v62 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v62;
}

void sub_18A41C4E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFLocalizationAlgorithmDetailsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 72));
  BOOL v2 = (*(_WORD *)(a1 + 100) & 0x1C0) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 72));
  return v2;
}

void sub_18A41C9D4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41D01C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOVLFLocalizationDetailsReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 100);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 96)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unsigned int v11 = (unsigned __int16)(vaddv_s16((int16x4_t)vand_s8((int8x8_t)vshl_u16((uint16x4_t)vdup_n_s16(*(unsigned __int16 *)(a1 + 116)), (uint16x4_t)0xFFFBFFF8FFF7FFFCLL), (int8x8_t)0x1000100010001))+ ((*(_WORD *)(a1 + 116) >> 6) & 1)+ ((*(_WORD *)(a1 + 116) >> 7) & 1));
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        BOOL v14 = v11 > 3;
        char v15 = v10 | v14;
        if (((v10 | v14) | v8)) {
          int v16 = 0;
        }
        else {
          int v16 = a3;
        }
        char v65 = (v16 == 0) | v15;
        int v17 = (int *)MEMORY[0x1E4F940E8];
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v19 = (int *)MEMORY[0x1E4F940B8];
        char v64 = v10 | v14;
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v18)) {
      goto LABEL_123;
    }
    char v20 = 0;
    unsigned int v21 = 0;
    unint64_t v22 = 0;
    while (1)
    {
      uint64_t v23 = *v17;
      uint64_t v24 = *(void *)(v3 + v23);
      unint64_t v25 = v24 + 1;
      if (v24 == -1 || v25 > *(void *)(v3 + *v6)) {
        break;
      }
      char v26 = *(unsigned char *)(*(void *)(v3 + *v19) + v24);
      *(void *)(v3 + v23) = v25;
      v22 |= (unint64_t)(v26 & 0x7F) << v20;
      if ((v26 & 0x80) == 0) {
        goto LABEL_23;
      }
      v20 += 7;
      BOOL v27 = v21++ >= 9;
      if (v27)
      {
        unint64_t v22 = 0;
        int v28 = *(unsigned __int8 *)(v3 + *v18);
        goto LABEL_25;
      }
    }
    *(unsigned char *)(v3 + *v18) = 1;
LABEL_23:
    int v28 = *(unsigned __int8 *)(v3 + *v18);
    if (*(unsigned char *)(v3 + *v18)) {
      unint64_t v22 = 0;
    }
LABEL_25:
    if (v28 || (v22 & 7) == 4)
    {
LABEL_123:
      if (v15)
      {
        char v58 = 1;
        goto LABEL_136;
      }
      if (v16)
      {
        while (1)
        {
          int v59 = *v16++;
          __int16 v60 = 512;
          switch(v59)
          {
            case 0:
              goto LABEL_137;
            case 1:
              goto LABEL_132;
            case 4:
              __int16 v60 = 16;
              goto LABEL_132;
            case 5:
              __int16 v60 = 256;
              goto LABEL_132;
            case 6:
              __int16 v60 = 32;
              goto LABEL_132;
            case 7:
              __int16 v60 = 64;
              goto LABEL_132;
            case 8:
              __int16 v60 = 128;
LABEL_132:
              *(_WORD *)(a1 + 116) |= v60;
              break;
            default:
              continue;
          }
        }
      }
      goto LABEL_137;
    }
    unint64_t v30 = v22 >> 3;
    BOOL v31 = v15;
    if ((v65 & 1) == 0)
    {
      unint64_t v32 = v16;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    switch((int)v30)
    {
      case 1:
        if (!v31) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 116) & 0x200) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_135;
          }
          uint64_t v63 = objc_alloc_init(GEOVLFTileDetails);
          if (GEOVLFTileDetailsReadAllFrom((uint64_t)v63, (void *)v3))
          {
            PBReaderRecallMark();
            uint64_t v36 = 88;
            goto LABEL_85;
          }
          goto LABEL_134;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_135;
        }
        __int16 v57 = *(_WORD *)(a1 + 116) << 6;
        goto LABEL_117;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_94;
        }
        char v38 = 0;
        unsigned int v39 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 116) |= 4u;
        while (2)
        {
          uint64_t v41 = *v17;
          uint64_t v42 = *(void *)(v3 + v41);
          unint64_t v43 = v42 + 1;
          if (v42 == -1 || v43 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v44 = *(unsigned char *)(*(void *)(v3 + *v19) + v42);
            *(void *)(v3 + v41) = v43;
            v40 |= (unint64_t)(v44 & 0x7F) << v38;
            if (v44 < 0)
            {
              v38 += 7;
              BOOL v27 = v39++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_99;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_99:
        uint64_t v56 = 108;
        goto LABEL_104;
      case 3:
        if ((v8 & 1) == 0) {
          goto LABEL_94;
        }
        char v45 = 0;
        unsigned int v46 = 0;
        uint64_t v40 = 0;
        *(_WORD *)(a1 + 116) |= 8u;
        while (2)
        {
          uint64_t v47 = *v17;
          uint64_t v48 = *(void *)(v3 + v47);
          unint64_t v49 = v48 + 1;
          if (v48 == -1 || v49 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v18) = 1;
          }
          else
          {
            char v50 = *(unsigned char *)(*(void *)(v3 + *v19) + v48);
            *(void *)(v3 + v47) = v49;
            v40 |= (unint64_t)(v50 & 0x7F) << v45;
            if (v50 < 0)
            {
              v45 += 7;
              BOOL v27 = v46++ >= 9;
              if (v27)
              {
                LODWORD(v40) = 0;
                goto LABEL_103;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v18)) {
          LODWORD(v40) = 0;
        }
LABEL_103:
        uint64_t v56 = 112;
LABEL_104:
        *(_DWORD *)(a1 + v56) = v40;
        goto LABEL_119;
      case 4:
        if (!v31) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 116) & 0x10) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_135;
          }
          __int16 v57 = *(_WORD *)(a1 + 116) << 11;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_135;
        }
        uint64_t v63 = objc_alloc_init(GEOVLFLocalizationAlgorithmDetails);
        if (!GEOVLFLocalizationAlgorithmDetailsReadAllFrom((uint64_t)v63, (void *)v3, v9 & 1)) {
          goto LABEL_134;
        }
        PBReaderRecallMark();
        uint64_t v36 = 40;
        goto LABEL_85;
      case 5:
        if (!v31) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 116) & 0x100) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_135;
          }
          __int16 v57 = *(_WORD *)(a1 + 116) << 7;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_135;
        }
        uint64_t v63 = objc_alloc_init(GEOVLFSuccessDetails);
        if (!GEOVLFSuccessDetailsReadAllFrom((uint64_t)v63, (void *)v3, v9 & 1)) {
          goto LABEL_134;
        }
        PBReaderRecallMark();
        uint64_t v36 = 80;
        goto LABEL_85;
      case 6:
        if (!v31) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 116) & 0x20) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_135;
          }
          __int16 v57 = *(_WORD *)(a1 + 116) << 10;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_135;
        }
        uint64_t v63 = objc_alloc_init(GEOVLFFailureDetails);
        if (!GEOVLFFailureDetailsReadAllFrom((uint64_t)v63, (void *)v3)) {
          goto LABEL_134;
        }
        PBReaderRecallMark();
        uint64_t v36 = 56;
        goto LABEL_85;
      case 7:
        if (!v31) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 116) & 0x40) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_135;
          }
          __int16 v57 = *(_WORD *)(a1 + 116) << 9;
          goto LABEL_117;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_135;
        }
        uint64_t v63 = objc_alloc_init(GEOVLFGravityVector);
        if (!GEOVLFGravityVectorReadAllFrom((uint64_t)v63, (void *)v3)) {
          goto LABEL_134;
        }
        PBReaderRecallMark();
        uint64_t v36 = 64;
        goto LABEL_85;
      case 8:
        if (!v31) {
          goto LABEL_94;
        }
        if ((*(_WORD *)(a1 + 116) & 0x80) != 0)
        {
          if ((PBReaderSkipValueWithTag() & 1) == 0) {
            goto LABEL_135;
          }
          __int16 v57 = *(_WORD *)(a1 + 116) << 8;
LABEL_117:
          v7 += v57 >> 15;
LABEL_118:
          char v15 = v64;
          unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_119:
          if (!(v15 & 1 | (v7 != 0))) {
            goto LABEL_123;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_135;
        }
        uint64_t v63 = objc_alloc_init(GEOVLFLocation);
        if (GEOVLFLocationReadAllFrom((uint64_t)v63, (void *)v3))
        {
          PBReaderRecallMark();
          uint64_t v36 = 72;
LABEL_85:
          uint64_t v51 = *(void **)(a1 + v36);
          *(void *)(a1 + v36) = v63;

          --v7;
          goto LABEL_118;
        }
LABEL_134:

LABEL_135:
        char v58 = 0;
        char v15 = v64;
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
LABEL_136:
        *(_WORD *)(a1 + 116) |= 0x200u;
        *(_WORD *)(a1 + 116) |= 0x10u;
        *(_WORD *)(a1 + 116) |= 0x100u;
        *(_WORD *)(a1 + 116) |= 0x20u;
        *(_WORD *)(a1 + 116) |= 0x40u;
        *(_WORD *)(a1 + 116) |= 0x80u;
        if (v58)
        {
LABEL_137:
          uint64_t v3 = *(unsigned char *)(v3 + *v18) == 0;
          if (v15) {
            goto LABEL_138;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v15)
          {
LABEL_138:
            unint64_t v61 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 9:
        if ((v8 & 1) == 0) {
          goto LABEL_94;
        }
        *(_WORD *)(a1 + 116) |= 2u;
        uint64_t v52 = *v17;
        unint64_t v53 = *(void *)(v3 + v52);
        if (v53 <= 0xFFFFFFFFFFFFFFF7 && v53 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v54 = *(void *)(*(void *)(v3 + *v19) + v53);
          *(void *)(v3 + v52) = v53 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v18) = 1;
          uint64_t v54 = 0;
        }
        *(void *)(a1 + 48) = v54;
        goto LABEL_119;
      case 10:
        if (v8)
        {
          if (!PBReaderPlaceMark()
            || (GEOVLFPositionContextClassificationReadAllFrom(a1 + 16, v3) & 1) == 0)
          {
            goto LABEL_135;
          }
          PBReaderRecallMark();
          *(_WORD *)(a1 + 116) |= 1u;
          goto LABEL_118;
        }
LABEL_94:
        char v55 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v64;
        if ((v55 & 1) == 0)
        {
LABEL_133:
          char v58 = 0;
          goto LABEL_136;
        }
        goto LABEL_119;
      default:
        int v37 = PBReaderSkipValueWithTag();
        unsigned int v18 = (int *)MEMORY[0x1E4F940C8];
        char v15 = v64;
        if (!v37) {
          goto LABEL_133;
        }
        goto LABEL_119;
    }
  }
}

void sub_18A41DC74(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41DDE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41DF54(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41E0C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41E234(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A41EDB8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVLFLocalizationDetailsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  [*(id *)(a1 + 88) readAll:1];
  [*(id *)(a1 + 40) readAll:1];
  [*(id *)(a1 + 80) readAll:1];
  [*(id *)(a1 + 56) readAll:1];
  [*(id *)(a1 + 64) readAll:1];
  BOOL v2 = *(void **)(a1 + 72);

  return [v2 readAll:1];
}

uint64_t GEOVLFLocalizationDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 100))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVLFLocalizationDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)uint64_t v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 104));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 96) = [v8 position];
  *(_DWORD *)(a1 + 100) = [v8 length];
  if (a3) {
    uint64_t v9 = (int *)&GEOVLFLocalizationDetailsReadAllFrom_recursiveTag;
  }
  else {
    uint64_t v9 = (int *)&GEOVLFLocalizationDetailsReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOVLFLocalizationDetailsReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOVLFLocalizationDetailsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 104));
  return Specified;
}

void sub_18A41EFE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOVLFLocalizationDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOVLFLocalizationDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A41F04C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFTileDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          int v14 = a1[*v4];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      int v14 = a1[*v4];
      if (a1[*v4]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v15 = v8 & 7;
      if (v14 || v15 == 4) {
        break;
      }
      if ((v8 >> 3) == 2)
      {
        if ((v8 & 7) != 0) {
          goto LABEL_38;
        }
        unsigned int v17 = 0;
        while (1)
        {
          uint64_t v18 = *v2;
          uint64_t v19 = *(void *)&a1[v18];
          unint64_t v20 = v19 + 1;
          if (v19 == -1 || v20 > *(void *)&a1[*v3]) {
            break;
          }
          int v21 = *(char *)(*(void *)&a1[*v5] + v19);
          *(void *)&a1[v18] = v20;
          if (v21 < 0 && v17++ <= 8) {
            continue;
          }
          goto LABEL_35;
        }
        a1[*v4] = 1;
      }
      else if ((v8 >> 3) == 1)
      {
        if (v15 != 2 || !PBReaderPlaceMark() || !GEOVLFUsageTileIDIsValid(a1))
        {
LABEL_38:
          PBReaderRecallMark();
          return 0;
        }
        PBReaderRecallMark();
      }
      else if ((PBReaderSkipValueWithTag() & 1) == 0)
      {
        goto LABEL_38;
      }
LABEL_35:
      ;
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v23 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v23;
}

BOOL GEOVLFSuccessDetailsIsValid(char *a1)
{
  [a1 position];
  [a1 length];
  BOOL v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  uint64_t v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    while (1)
    {
      if (a1[*v4]) {
        goto LABEL_51;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        BOOL v13 = v7++ >= 9;
        if (v13)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        goto LABEL_51;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3) {
        break;
      }
      if (v18 == 2)
      {
        if (v16 != 1) {
          goto LABEL_53;
        }
        uint64_t v24 = *v2;
        unint64_t v25 = *(void *)&a1[v24];
        if (v25 > 0xFFFFFFFFFFFFFFF7) {
          goto LABEL_49;
        }
        unint64_t v26 = v25 + 8;
        if (v26 > *(void *)&a1[*v3]) {
          goto LABEL_49;
        }
        *(void *)&a1[v24] = v26;
      }
      else
      {
        if (v18 == 1)
        {
          if (v16 != 2 || !PBReaderPlaceMark() || !GEOVLFCorrectionIsValid(a1))
          {
LABEL_53:
            PBReaderRecallMark();
            return 0;
          }
LABEL_24:
          PBReaderRecallMark();
          goto LABEL_50;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_53;
        }
      }
LABEL_50:
      if (*(void *)&a1[*v2] >= *(void *)&a1[*v3]) {
        goto LABEL_51;
      }
    }
    if (v16 != 2)
    {
      if ((v8 & 7) != 0) {
        goto LABEL_53;
      }
      while (1)
      {
        uint64_t v19 = *v2;
        uint64_t v20 = *(void *)&a1[v19];
        unint64_t v21 = v20 + 1;
        if (v20 == -1 || v21 > *(void *)&a1[*v3]) {
          break;
        }
        int v22 = *(char *)(*(void *)&a1[*v5] + v20);
        *(void *)&a1[v19] = v21;
        if (v22 < 0)
        {
          unsigned int v23 = v16++;
          if (v23 <= 8) {
            continue;
          }
        }
        goto LABEL_50;
      }
      uint64_t v14 = *v4;
LABEL_49:
      a1[v14] = 1;
      goto LABEL_50;
    }
    if (!PBReaderPlaceMark()) {
      goto LABEL_53;
    }
LABEL_39:
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3])
    {
      unsigned int v27 = a1[*v4];
      if (a1[*v4]) {
        break;
      }
      while (1)
      {
        uint64_t v28 = *v2;
        uint64_t v29 = *(void *)&a1[v28];
        unint64_t v30 = v29 + 1;
        if (v29 == -1 || v30 > *(void *)&a1[*v3]) {
          break;
        }
        int v31 = *(char *)(*(void *)&a1[*v5] + v29);
        *(void *)&a1[v28] = v30;
        if (v31 < 0)
        {
          BOOL v13 = v27++ >= 9;
          if (!v13) {
            continue;
          }
        }
        goto LABEL_39;
      }
      a1[*v4] = 1;
    }
    goto LABEL_24;
  }
LABEL_51:
  BOOL v32 = a1[*v4] == 0;
  PBReaderRecallMark();
  return v32;
}

void sub_18A41F7FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVLFLocalizationDetailsIsDirty(uint64_t a1)
{
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 104));
  unsigned int v2 = *(unsigned __int16 *)(a1 + 116);
  if ((v2 & 0x600) != 0) {
    return 1;
  }
  if ((v2 & 0x10) != 0)
  {
    if (GEOVLFLocalizationAlgorithmDetailsIsDirty(*(void *)(a1 + 40))) {
      return 1;
    }
    unsigned int v2 = *(unsigned __int16 *)(a1 + 116);
  }
  if ((v2 & 0x100) == 0) {
    goto LABEL_9;
  }
  if (GEOVLFSuccessDetailsIsDirty(*(void *)(a1 + 80))) {
    return 1;
  }
  unsigned int v2 = *(unsigned __int16 *)(a1 + 116);
LABEL_9:
  if ((v2 & 0x60) != 0) {
    return 1;
  }
  return (v2 >> 7) & 1;
}

os_unfair_lock_s *GEOVLFLocalizationDetailsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOVLFLocalizationDetailsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 26);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A41FDC0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A4205F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOVLFLocalizationResultsReadSpecified(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  char v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  uint64_t v7 = 0;
  char v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = ((*(unsigned __int8 *)(a1 + 72) >> 3) & 1) + ((*(unsigned __int8 *)(a1 + 72) >> 2) & 1);
  while (2)
  {
    uint64_t v12 = 1;
    uint64_t v13 = 1;
    switch(a3[v7])
    {
      case -3:
        char v8 = 1;
        goto LABEL_6;
      case -2:
        uint64_t v12 = v9;
        goto LABEL_8;
      case -1:
        goto LABEL_8;
      case 0:
        int v14 = v10 & 1 | v11;
        if ((v14 != 0) | v8 & 1) {
          int v15 = 0;
        }
        else {
          int v15 = a3;
        }
        BOOL v16 = v14 != 0;
        unsigned int v17 = (int *)MEMORY[0x1E4F940E8];
        if (v14) {
          BOOL v18 = 1;
        }
        else {
          BOOL v18 = v15 == 0;
        }
        BOOL v56 = v18;
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        uint64_t v20 = (int *)MEMORY[0x1E4F940B8];
        break;
      default:
        ++v11;
LABEL_6:
        uint64_t v12 = v9;
        uint64_t v13 = v10;
LABEL_8:
        ++v7;
        uint64_t v9 = v12;
        uint64_t v10 = v13;
        continue;
    }
    break;
  }
  while (2)
  {
    if (*(void *)(v3 + *v17) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + *v19)) {
      goto LABEL_78;
    }
    char v21 = 0;
    unsigned int v22 = 0;
    unint64_t v23 = 0;
    while (1)
    {
      uint64_t v24 = *v17;
      uint64_t v25 = *(void *)(v3 + v24);
      unint64_t v26 = v25 + 1;
      if (v25 == -1 || v26 > *(void *)(v3 + *v6)) {
        break;
      }
      char v27 = *(unsigned char *)(*(void *)(v3 + *v20) + v25);
      *(void *)(v3 + v24) = v26;
      v23 |= (unint64_t)(v27 & 0x7F) << v21;
      if ((v27 & 0x80) == 0) {
        goto LABEL_26;
      }
      v21 += 7;
      BOOL v28 = v22++ >= 9;
      if (v28)
      {
        unint64_t v23 = 0;
        int v29 = *(unsigned __int8 *)(v3 + *v19);
        goto LABEL_28;
      }
    }
    *(unsigned char *)(v3 + *v19) = 1;
LABEL_26:
    int v29 = *(unsigned __int8 *)(v3 + *v19);
    if (*(unsigned char *)(v3 + *v19)) {
      unint64_t v23 = 0;
    }
LABEL_28:
    if (v29 || (v23 & 7) == 4)
    {
LABEL_78:
      if (v16)
      {
        char v49 = 1;
        goto LABEL_93;
      }
      if (!v15) {
        goto LABEL_94;
      }
      while (1)
      {
        int v52 = *v15++;
        int v51 = v52;
        if (v52 == 1) {
          break;
        }
        if (v51 == 3)
        {
          char v50 = 4;
LABEL_84:
          *(unsigned char *)(a1 + 72) |= v50;
        }
        else if (!v51)
        {
          goto LABEL_94;
        }
      }
      char v50 = 8;
      goto LABEL_84;
    }
    unint64_t v31 = v23 >> 3;
    BOOL v32 = v16;
    if (!v56)
    {
      int v33 = v15;
      do
      {
        int v35 = *v33++;
        int v34 = v35;
        BOOL v32 = v35 != 0;
        if (v35) {
          BOOL v36 = v34 == v31;
        }
        else {
          BOOL v36 = 1;
        }
      }
      while (!v36);
    }
    switch((int)v31)
    {
      case 1:
        if (!v32) {
          goto LABEL_65;
        }
        if ((*(unsigned char *)(a1 + 72) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_90;
          }
          BOOL v55 = v16;
          int v37 = objc_alloc_init(GEOVLFCorrection);
          if (GEOVLFCorrectionReadAllFrom((uint64_t)v37, (void *)v3))
          {
            PBReaderRecallMark();
            char v38 = *(void **)(a1 + 48);
            *(void *)(a1 + 48) = v37;

            --v7;
            goto LABEL_60;
          }
          goto LABEL_91;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_90;
        }
        v7 += *(unsigned __int8 *)(a1 + 72) << 28 >> 31;
        goto LABEL_73;
      case 2:
        if ((v8 & 1) == 0) {
          goto LABEL_65;
        }
        char v40 = 0;
        unsigned int v41 = 0;
        uint64_t v42 = 0;
        *(unsigned char *)(a1 + 72) |= 2u;
        while (2)
        {
          uint64_t v43 = *v17;
          uint64_t v44 = *(void *)(v3 + v43);
          unint64_t v45 = v44 + 1;
          if (v44 == -1 || v45 > *(void *)(v3 + *v6))
          {
            *(unsigned char *)(v3 + *v19) = 1;
          }
          else
          {
            char v46 = *(unsigned char *)(*(void *)(v3 + *v20) + v44);
            *(void *)(v3 + v43) = v45;
            v42 |= (unint64_t)(v46 & 0x7F) << v40;
            if (v46 < 0)
            {
              v40 += 7;
              BOOL v28 = v41++ >= 9;
              if (v28)
              {
                LODWORD(v42) = 0;
                goto LABEL_70;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(v3 + *v19)) {
          LODWORD(v42) = 0;
        }
LABEL_70:
        *(_DWORD *)(a1 + 68) = v42;
        goto LABEL_74;
      case 3:
        if (!v32 || (*(unsigned char *)(a1 + 72) & 4) != 0) {
          goto LABEL_65;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_90;
        }
        BOOL v55 = v16;
        int v37 = objc_alloc_init(GEOVLFLocalizationDetails);
        if (GEOVLFLocalizationDetailsReadAllFrom((uint64_t)v37, (void *)v3, v9 & 1))
        {
          PBReaderRecallMark();
          -[GEOVLFLocalizationResults _addNoFlagsLocalizationDetails:](a1, v37);

LABEL_60:
          BOOL v16 = v55;
LABEL_73:
          uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_74:
          if (v7) {
            char v48 = 1;
          }
          else {
            char v48 = v16;
          }
          if ((v48 & 1) == 0) {
            goto LABEL_78;
          }
          continue;
        }
LABEL_91:

        char v49 = 0;
        BOOL v16 = v55;
LABEL_92:
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
        *(unsigned char *)(a1 + 72) |= 8u;
        *(unsigned char *)(a1 + 72) |= 4u;
        if (v49)
        {
LABEL_94:
          uint64_t v3 = *(unsigned char *)(v3 + *v19) == 0;
          if (v16) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v3 = 0;
          if (v16)
          {
LABEL_95:
            unint64_t v53 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = 0;
          }
        }
        return v3;
      case 4:
        if (v8)
        {
          if (!PBReaderPlaceMark()
            || (GEOVLFPositionContextClassificationReadAllFrom(a1 + 16, v3) & 1) == 0)
          {
LABEL_90:
            char v49 = 0;
            goto LABEL_92;
          }
          PBReaderRecallMark();
          *(unsigned char *)(a1 + 72) |= 1u;
          goto LABEL_73;
        }
LABEL_65:
        char v47 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if ((v47 & 1) == 0)
        {
LABEL_89:
          char v49 = 0;
          goto LABEL_93;
        }
        goto LABEL_74;
      default:
        int v39 = PBReaderSkipValueWithTag();
        uint64_t v19 = (int *)MEMORY[0x1E4F940C8];
        if (!v39) {
          goto LABEL_89;
        }
        goto LABEL_74;
    }
  }
}

void sub_18A420F34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A421B00(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOVLFLocalizationResultsCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 48) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 40);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

uint64_t GEOVLFLocalizationResultsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVLFLocalizationResultsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOVLFLocalizationResultsReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOVLFLocalizationResultsReadAllFrom_initialTag;
  }
  uint64_t Specified = GEOVLFLocalizationResultsReadSpecified(a1, (uint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOVLFLocalizationResultsCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A421DAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t GEOVLFLocalizationResultsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  uint64_t AllFrom = GEOVLFLocalizationResultsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A421E10(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A422098(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _GEOVLFLocalizationResultsIsDirty(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  if ((*(unsigned char *)(a1 + 72) & 0x1C) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 72) & 4) == 0) {
    return 0;
  }
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v3 = *(id *)(a1 + 40);
  uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v2)
  {
    uint64_t v4 = *(void *)v8;
    while (2)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        if (*(void *)v8 != v4) {
          objc_enumerationMutation(v3);
        }
        if (GEOVLFLocalizationDetailsIsDirty(*(os_unfair_lock_s **)(*((void *)&v7 + 1) + 8 * i)))
        {
          uint64_t v2 = 1;
          goto LABEL_15;
        }
      }
      uint64_t v2 = [v3 countByEnumeratingWithState:&v7 objects:v11 count:16];
      if (v2) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return v2;
}

os_unfair_lock_s *GEOVLFLocalizationResultsIsDirty(os_unfair_lock_s *result)
{
  if (result)
  {
    id v1 = result;
    os_unfair_lock_lock_with_options();
    uint64_t IsDirty = _GEOVLFLocalizationResultsIsDirty((uint64_t)v1);
    os_unfair_lock_unlock(v1 + 16);
    return (os_unfair_lock_s *)IsDirty;
  }
  return result;
}

void sub_18A422778(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFLocationReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            if ((PBReaderPlaceMark() & 1) == 0) {
              goto LABEL_69;
            }
            BOOL v18 = objc_alloc_init(GEOLatLng);
            if (GEOLatLngReadAllFrom((uint64_t)v18, v3))
            {
              PBReaderRecallMark();
              uint64_t v19 = *(void **)(a1 + 56);
              *(void *)(a1 + 56) = v18;

              continue;
            }

            goto LABEL_69;
          case 2u:
            if (!PBReaderPlaceMark() || (GEOECEFCoordinateReadAllFrom(a1 + 8, (uint64_t)v3) & 1) == 0) {
              goto LABEL_69;
            }
            PBReaderRecallMark();
            *(unsigned char *)(a1 + 80) |= 1u;
            continue;
          case 3u:
            *(unsigned char *)(a1 + 80) |= 4u;
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v41 = 48;
            goto LABEL_65;
          case 4u:
            *(unsigned char *)(a1 + 80) |= 8u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v41 = 64;
            goto LABEL_65;
          case 5u:
            *(unsigned char *)(a1 + 80) |= 2u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v41 = 40;
LABEL_65:
            *(void *)(a1 + v41) = v22;
            continue;
          case 6u:
            char v27 = 0;
            unsigned int v28 = 0;
            uint64_t v29 = 0;
            *(unsigned char *)(a1 + 80) |= 0x10u;
            while (2)
            {
              uint64_t v30 = *v4;
              uint64_t v31 = *(void *)&v3[v30];
              unint64_t v32 = v31 + 1;
              if (v31 == -1 || v32 > *(void *)&v3[*v5])
              {
                v3[*v6] = 1;
              }
              else
              {
                char v33 = *(unsigned char *)(*(void *)&v3[*v7] + v31);
                *(void *)&v3[v30] = v32;
                v29 |= (unint64_t)(v33 & 0x7F) << v27;
                if (v33 < 0)
                {
                  v27 += 7;
                  BOOL v15 = v28++ >= 9;
                  if (v15)
                  {
                    LODWORD(v29) = 0;
                    goto LABEL_54;
                  }
                  continue;
                }
              }
              break;
            }
            if (v3[*v6]) {
              LODWORD(v29) = 0;
            }
LABEL_54:
            *(_DWORD *)(a1 + 72) = v29;
            continue;
          case 7u:
            char v34 = 0;
            unsigned int v35 = 0;
            uint64_t v36 = 0;
            *(unsigned char *)(a1 + 80) |= 0x20u;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_69;
            }
            continue;
        }
        while (1)
        {
          uint64_t v37 = *v4;
          uint64_t v38 = *(void *)&v3[v37];
          unint64_t v39 = v38 + 1;
          if (v38 == -1 || v39 > *(void *)&v3[*v5]) {
            break;
          }
          char v40 = *(unsigned char *)(*(void *)&v3[*v7] + v38);
          *(void *)&v3[v37] = v39;
          v36 |= (unint64_t)(v40 & 0x7F) << v34;
          if ((v40 & 0x80) == 0) {
            goto LABEL_56;
          }
          v34 += 7;
          BOOL v15 = v35++ >= 9;
          if (v15)
          {
            uint64_t v36 = 0;
            goto LABEL_58;
          }
        }
        v3[*v6] = 1;
LABEL_56:
        if (v3[*v6]) {
          uint64_t v36 = 0;
        }
LABEL_58:
        *(unsigned char *)(a1 + 76) = v36 != 0;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v42 = v3[*v6] == 0;
  }
  else
  {
LABEL_69:
    BOOL v42 = 0;
  }
  objc_sync_exit(v3);

  return v42;
}

void sub_18A423B18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFLocationReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFLocationReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A423B98(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFPoint3DReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      long long v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        unint64_t v18 = v10 >> 3;
        if ((v10 >> 3) == 3)
        {
          *(unsigned char *)(a1 + 20) |= 4u;
          uint64_t v22 = *v4;
          unint64_t v23 = *(void *)&v3[v22];
          if (v23 <= 0xFFFFFFFFFFFFFFFBLL && v23 + 4 <= *(void *)&v3[*v5])
          {
            int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v23);
            *(void *)&v3[v22] = v23 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v21 = 0;
          }
          unint64_t v26 = &OBJC_IVAR___GEOVLFPoint3D__z;
        }
        else if (v18 == 2)
        {
          *(unsigned char *)(a1 + 20) |= 2u;
          uint64_t v24 = *v4;
          unint64_t v25 = *(void *)&v3[v24];
          if (v25 <= 0xFFFFFFFFFFFFFFFBLL && v25 + 4 <= *(void *)&v3[*v5])
          {
            int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v25);
            *(void *)&v3[v24] = v25 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v21 = 0;
          }
          unint64_t v26 = &OBJC_IVAR___GEOVLFPoint3D__y;
        }
        else
        {
          if (v18 != 1)
          {
            if ((PBReaderSkipValueWithTag() & 1) == 0) {
              goto LABEL_42;
            }
            continue;
          }
          *(unsigned char *)(a1 + 20) |= 1u;
          uint64_t v19 = *v4;
          unint64_t v20 = *(void *)&v3[v19];
          if (v20 <= 0xFFFFFFFFFFFFFFFBLL && v20 + 4 <= *(void *)&v3[*v5])
          {
            int v21 = *(_DWORD *)(*(void *)&v3[*v7] + v20);
            *(void *)&v3[v19] = v20 + 4;
          }
          else
          {
            v3[*v6] = 1;
            int v21 = 0;
          }
          unint64_t v26 = &OBJC_IVAR___GEOVLFPoint3D__x;
        }
        *(_DWORD *)(a1 + *v26) = v21;
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_42:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A424CB4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFPoint3DReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL v4 = GEOVLFPoint3DReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return v4;
}

void sub_18A424D18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFPoint3DIsValid(char *a1)
{
  objc_msgSend(a1, "length", objc_msgSend(a1, "position"));
  uint64_t v2 = (int *)MEMORY[0x1E4F940E8];
  id v3 = (int *)MEMORY[0x1E4F940E0];
  BOOL v4 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)&a1[*MEMORY[0x1E4F940E8]] < *(void *)&a1[*MEMORY[0x1E4F940E0]])
  {
    uint64_t v5 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (a1[*v4]) {
        break;
      }
      char v6 = 0;
      unsigned int v7 = 0;
      unint64_t v8 = 0;
      while (1)
      {
        uint64_t v9 = *v2;
        uint64_t v10 = *(void *)&a1[v9];
        unint64_t v11 = v10 + 1;
        if (v10 == -1 || v11 > *(void *)&a1[*v3]) {
          break;
        }
        char v12 = *(unsigned char *)(*(void *)&a1[*v5] + v10);
        *(void *)&a1[v9] = v11;
        v8 |= (unint64_t)(v12 & 0x7F) << v6;
        if ((v12 & 0x80) == 0) {
          goto LABEL_12;
        }
        v6 += 7;
        if (v7++ >= 9)
        {
          unint64_t v8 = 0;
          uint64_t v14 = *v4;
          int v15 = a1[v14];
          goto LABEL_14;
        }
      }
      a1[*v4] = 1;
LABEL_12:
      uint64_t v14 = *v4;
      int v15 = a1[v14];
      if (a1[v14]) {
        unint64_t v8 = 0;
      }
LABEL_14:
      int v16 = v8 & 7;
      if (v15 || v16 == 4) {
        break;
      }
      unint64_t v18 = v8 >> 3;
      if ((v8 >> 3) == 3 || v18 == 2 || v18 == 1)
      {
        if (v16 != 5) {
          goto LABEL_31;
        }
        uint64_t v19 = *v2;
        unint64_t v20 = *(void *)&a1[v19];
        if (v20 <= 0xFFFFFFFFFFFFFFFBLL && (unint64_t v21 = v20 + 4, v21 <= *(void *)&a1[*v3])) {
          *(void *)&a1[v19] = v21;
        }
        else {
          a1[v14] = 1;
        }
      }
      else if (!PBReaderSkipValueWithTag())
      {
LABEL_31:
        BOOL v22 = 0;
        goto LABEL_30;
      }
    }
    while (*(void *)&a1[*v2] < *(void *)&a1[*v3]);
  }
  BOOL v22 = a1[*v4] == 0;
LABEL_30:
  PBReaderRecallMark();
  return v22;
}

id GEOVLFPositionContextClassificationDescription(uint64_t a1)
{
  uint64_t v2 = NSString;
  id v3 = _GEOVLFPositionContextClassificationDictionaryRepresentation(a1);
  BOOL v4 = [v2 stringWithFormat:@"GEOVLFPositionContextClassification<%p> %@", a1, v3];

  return v4;
}

id _GEOVLFPositionContextClassificationDictionaryRepresentation(uint64_t a1)
{
  uint64_t v2 = [MEMORY[0x1E4F1CA60] dictionary];
  char v3 = *(unsigned char *)(a1 + 20);
  if ((v3 & 1) == 0)
  {
    if ((*(unsigned char *)(a1 + 20) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v5 = [NSNumber numberWithDouble:*(double *)(a1 + 8)];
    [v2 setObject:v5 forKey:@"outdoorProbability"];

    if ((*(unsigned char *)(a1 + 20) & 4) == 0) {
      goto LABEL_11;
    }
LABEL_7:
    uint64_t v6 = *(int *)(a1 + 16);
    if (v6 >= 3)
    {
      objc_msgSend(NSString, "stringWithFormat:", @"(unknown: %i)", *(int *)(a1 + 16));
      unsigned int v7 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      unsigned int v7 = off_1E53F8E48[v6];
    }
    [v2 setObject:v7 forKey:@"type"];

    goto LABEL_11;
  }
  BOOL v4 = [NSNumber numberWithDouble:*(double *)a1];
  [v2 setObject:v4 forKey:@"indoorProbability"];

  char v3 = *(unsigned char *)(a1 + 20);
  if ((v3 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v3 & 4) != 0) {
    goto LABEL_7;
  }
LABEL_11:

  return v2;
}

void _GEOVLFPositionContextClassificationFromDictionaryRepresentation(void *a1, uint64_t a2)
{
  id v10 = a1;
  char v3 = [v10 objectForKeyedSubscript:@"type"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 4u;
    id v4 = v3;
    if ([v4 isEqualToString:@"VLFPositionContextType_UNKNOWN"])
    {
      int v5 = 0;
    }
    else if ([v4 isEqualToString:@"VLFPositionContextType_OUTDOOR"])
    {
      int v5 = 1;
    }
    else if ([v4 isEqualToString:@"VLFPositionContextType_INDOOR"])
    {
      int v5 = 2;
    }
    else
    {
      int v5 = 0;
    }
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0) {
      goto LABEL_13;
    }
    int v5 = [v3 intValue];
  }
  *(_DWORD *)(a2 + 16) = v5;
LABEL_13:

  uint64_t v6 = [v10 objectForKeyedSubscript:@"indoorProbability"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 1u;
    [v6 doubleValue];
    *(void *)a2 = v7;
  }

  unint64_t v8 = [v10 objectForKeyedSubscript:@"outdoorProbability"];
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    *(unsigned char *)(a2 + 20) |= 2u;
    [v8 doubleValue];
    *(void *)(a2 + 8) = v9;
  }
}

uint64_t GEOVLFPositionContextClassificationReadFrom(uint64_t a1, uint64_t a2)
{
  return GEOVLFPositionContextClassificationReadAllFrom(a1, a2);
}

uint64_t GEOVLFPositionContextClassificationReadAllFrom(uint64_t a1, uint64_t a2)
{
  char v3 = (int *)MEMORY[0x1E4F940E8];
  id v4 = (int *)MEMORY[0x1E4F940E0];
  int v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        uint64_t v12 = *(void *)(a2 + v11);
        unint64_t v13 = v12 + 1;
        if (v12 == -1 || v13 > *(void *)(a2 + *v4)) {
          break;
        }
        char v14 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v15 = v9++ >= 9;
        if (v15)
        {
          unint64_t v10 = 0;
          uint64_t v16 = *v5;
          int v17 = *(unsigned __int8 *)(a2 + v16);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      uint64_t v16 = *v5;
      int v17 = *(unsigned __int8 *)(a2 + v16);
      if (*(unsigned char *)(a2 + v16)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v17 || (v10 & 7) == 4) {
        break;
      }
      unint64_t v19 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        *(unsigned char *)(a1 + 20) |= 2u;
        uint64_t v27 = *v3;
        unint64_t v28 = *(void *)(a2 + v27);
        if (v28 <= 0xFFFFFFFFFFFFFFF7 && v28 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v29 = *(void *)(*(void *)(a2 + *v7) + v28);
          *(void *)(a2 + v27) = v28 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v29 = 0;
        }
        *(void *)(a1 + 8) = v29;
      }
      else if (v19 == 2)
      {
        *(unsigned char *)(a1 + 20) |= 1u;
        uint64_t v30 = *v3;
        unint64_t v31 = *(void *)(a2 + v30);
        if (v31 <= 0xFFFFFFFFFFFFFFF7 && v31 + 8 <= *(void *)(a2 + *v4))
        {
          uint64_t v32 = *(void *)(*(void *)(a2 + *v7) + v31);
          *(void *)(a2 + v30) = v31 + 8;
        }
        else
        {
          *(unsigned char *)(a2 + v16) = 1;
          uint64_t v32 = 0;
        }
        *(void *)a1 = v32;
      }
      else if (v19 == 1)
      {
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 20) |= 4u;
        while (1)
        {
          uint64_t v23 = *v3;
          uint64_t v24 = *(void *)(a2 + v23);
          unint64_t v25 = v24 + 1;
          if (v24 == -1 || v25 > *(void *)(a2 + *v4)) {
            break;
          }
          char v26 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
          *(void *)(a2 + v23) = v25;
          v22 |= (unint64_t)(v26 & 0x7F) << v20;
          if ((v26 & 0x80) == 0) {
            goto LABEL_37;
          }
          v20 += 7;
          BOOL v15 = v21++ >= 9;
          if (v15)
          {
            LODWORD(v22) = 0;
            goto LABEL_39;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_37:
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_39:
        *(_DWORD *)(a1 + 16) = v22;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t GEOVLFPositionContextClassificationHash()
{
  return PBHashBytes();
}

void sub_18A425CCC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFSLAMTrackReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 84);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 80)];
  uint64_t v7 = 0;
  char v8 = 0;
  char v9 = 0;
  unsigned int v10 = ((*(unsigned __int8 *)(a1 + 92) >> 3) & 1)
      + (*(unsigned char *)(a1 + 92) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 1) & 1)
      + ((*(unsigned __int8 *)(a1 + 92) >> 2) & 1);
  while (1)
  {
    unsigned int v11 = a3[v7];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v8 = 1;
LABEL_9:
    ++v7;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  char v12 = v9 | (v10 > 2);
  if (v9 & 1 | (v10 > 2) | v8 & 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  char v14 = (int *)MEMORY[0x1E4F940E8];
  BOOL v15 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_104:
    if (v12)
    {
      char v64 = 1;
      goto LABEL_106;
    }
    if (v13)
    {
      while (1)
      {
        int v65 = *v13++;
        char v66 = 8;
        switch(v65)
        {
          case 0:
            goto LABEL_115;
          case 1:
            goto LABEL_114;
          case 2:
            char v66 = 1;
            goto LABEL_114;
          case 3:
            char v66 = 2;
            goto LABEL_114;
          case 4:
            char v66 = 4;
LABEL_114:
            *(unsigned char *)(a1 + 92) |= v66;
            break;
          default:
            continue;
        }
      }
    }
    goto LABEL_115;
  }
  uint64_t v16 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(v3 + *v15)) {
      goto LABEL_104;
    }
    char v17 = 0;
    unsigned int v18 = 0;
    unint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = *v14;
      uint64_t v21 = *(void *)(v3 + v20);
      unint64_t v22 = v21 + 1;
      if (v21 == -1 || v22 > *(void *)(v3 + *v6)) {
        break;
      }
      char v23 = *(unsigned char *)(*(void *)(v3 + *v16) + v21);
      *(void *)(v3 + v20) = v22;
      v19 |= (unint64_t)(v23 & 0x7F) << v17;
      if ((v23 & 0x80) == 0) {
        goto LABEL_24;
      }
      v17 += 7;
      BOOL v24 = v18++ >= 9;
      if (v24)
      {
        unint64_t v19 = 0;
        int v25 = *(unsigned __int8 *)(v3 + *v15);
        goto LABEL_26;
      }
    }
    *(unsigned char *)(v3 + *v15) = 1;
LABEL_24:
    int v25 = *(unsigned __int8 *)(v3 + *v15);
    if (*(unsigned char *)(v3 + *v15)) {
      unint64_t v19 = 0;
    }
LABEL_26:
    int v26 = v19 & 7;
    if (v25 || v26 == 4) {
      goto LABEL_104;
    }
    unint64_t v28 = v19 >> 3;
    BOOL v29 = v12;
    if (!((v13 == 0) | v12 & 1))
    {
      uint64_t v30 = v13;
      do
      {
        int v32 = *v30++;
        int v31 = v32;
        BOOL v29 = v32 != 0;
        if (v32) {
          BOOL v33 = v31 == v28;
        }
        else {
          BOOL v33 = 1;
        }
      }
      while (!v33);
    }
    switch((int)v28)
    {
      case 1:
        if (!v29) {
          goto LABEL_81;
        }
        if ((*(unsigned char *)(a1 + 92) & 8) == 0)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_118;
          }
          char v34 = objc_alloc_init(GEOVLFPoint3D);
          if (GEOVLFPoint3DReadAllFrom((uint64_t)v34, (void *)v3))
          {
            PBReaderRecallMark();
            unsigned int v35 = *(void **)(a1 + 72);
            *(void *)(a1 + 72) = v34;

            --v7;
            goto LABEL_80;
          }
          goto LABEL_119;
        }
        if ((PBReaderSkipValueWithTag() & 1) == 0) {
          goto LABEL_118;
        }
        v7 += *(unsigned __int8 *)(a1 + 92) << 28 >> 31;
        goto LABEL_82;
      case 2:
        if (!v29 || (*(unsigned char *)(a1 + 92) & 1) != 0) {
          goto LABEL_81;
        }
        if (v26 != 2)
        {
          char v50 = 0;
          unsigned int v51 = 0;
          uint64_t v52 = 0;
          while (1)
          {
            uint64_t v53 = *v14;
            uint64_t v54 = *(void *)(v3 + v53);
            unint64_t v55 = v54 + 1;
            if (v54 == -1 || v55 > *(void *)(v3 + *v6)) {
              goto LABEL_102;
            }
            char v56 = *(unsigned char *)(*(void *)(v3 + *v16) + v54);
            *(void *)(v3 + v53) = v55;
            v52 |= (unint64_t)(v56 & 0x7F) << v50;
            if (v56 < 0)
            {
              v50 += 7;
              BOOL v24 = v51++ >= 9;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_103;
          }
        }
        if (!PBReaderPlaceMark()) {
          goto LABEL_118;
        }
        while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
        {
          char v36 = 0;
          unsigned int v37 = 0;
          uint64_t v38 = 0;
          while (1)
          {
            uint64_t v39 = *v14;
            uint64_t v40 = *(void *)(v3 + v39);
            unint64_t v41 = v40 + 1;
            if (v40 == -1 || v41 > *(void *)(v3 + *v6)) {
              break;
            }
            char v42 = *(unsigned char *)(*(void *)(v3 + *v16) + v40);
            *(void *)(v3 + v39) = v41;
            v38 |= (unint64_t)(v42 & 0x7F) << v36;
            if (v42 < 0)
            {
              v36 += 7;
              BOOL v24 = v37++ >= 9;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_59;
          }
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_59:
          PBRepeatedUInt32Add();
        }
        goto LABEL_87;
      case 3:
        if (!v29 || (*(unsigned char *)(a1 + 92) & 2) != 0) {
          goto LABEL_81;
        }
        if (v26 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_118;
          }
          while (*(void *)(v3 + *v14) < *(void *)(v3 + *v6) && !*(unsigned char *)(v3 + *v15))
          {
            char v43 = 0;
            unsigned int v44 = 0;
            uint64_t v45 = 0;
            while (1)
            {
              uint64_t v46 = *v14;
              uint64_t v47 = *(void *)(v3 + v46);
              unint64_t v48 = v47 + 1;
              if (v47 == -1 || v48 > *(void *)(v3 + *v6)) {
                break;
              }
              char v49 = *(unsigned char *)(*(void *)(v3 + *v16) + v47);
              *(void *)(v3 + v46) = v48;
              v45 |= (unint64_t)(v49 & 0x7F) << v43;
              if (v49 < 0)
              {
                v43 += 7;
                BOOL v24 = v44++ >= 9;
                if (!v24) {
                  continue;
                }
              }
              goto LABEL_74;
            }
            *(unsigned char *)(v3 + *v15) = 1;
LABEL_74:
            PBRepeatedUInt32Add();
          }
LABEL_87:
          PBReaderRecallMark();
        }
        else
        {
          char v57 = 0;
          unsigned int v58 = 0;
          uint64_t v59 = 0;
          while (1)
          {
            uint64_t v60 = *v14;
            uint64_t v61 = *(void *)(v3 + v60);
            unint64_t v62 = v61 + 1;
            if (v61 == -1 || v62 > *(void *)(v3 + *v6)) {
              break;
            }
            char v63 = *(unsigned char *)(*(void *)(v3 + *v16) + v61);
            *(void *)(v3 + v60) = v62;
            v59 |= (unint64_t)(v63 & 0x7F) << v57;
            if (v63 < 0)
            {
              v57 += 7;
              BOOL v24 = v58++ >= 9;
              if (!v24) {
                continue;
              }
            }
            goto LABEL_103;
          }
LABEL_102:
          *(unsigned char *)(v3 + *v15) = 1;
LABEL_103:
          PBRepeatedUInt32Add();
        }
        goto LABEL_82;
      case 4:
        if (!v29 || (*(unsigned char *)(a1 + 92) & 4) != 0)
        {
LABEL_81:
          if ((PBReaderSkipValueWithTag() & 1) == 0)
          {
LABEL_118:
            char v64 = 0;
            goto LABEL_106;
          }
LABEL_82:
          if (!(v12 & 1 | (v7 != 0)) || *(void *)(v3 + *v14) >= *(void *)(v3 + *v6)) {
            goto LABEL_104;
          }
          continue;
        }
        if ((PBReaderPlaceMark() & 1) == 0) {
          goto LABEL_118;
        }
        char v34 = objc_alloc_init(GEOVLFImagePosition);
        if (GEOVLFImagePositionReadAllFrom((uint64_t)v34, (void *)v3))
        {
          PBReaderRecallMark();
          -[GEOVLFSLAMTrack _addNoFlagsImagePositions:](a1, v34);

LABEL_80:
          BOOL v15 = (int *)MEMORY[0x1E4F940C8];
          goto LABEL_82;
        }
LABEL_119:

        char v64 = 0;
        BOOL v15 = (int *)MEMORY[0x1E4F940C8];
LABEL_106:
        *(unsigned char *)(a1 + 92) |= 8u;
        *(unsigned char *)(a1 + 92) |= 1u;
        *(unsigned char *)(a1 + 92) |= 2u;
        *(unsigned char *)(a1 + 92) |= 4u;
        if (v64)
        {
LABEL_115:
          unint64_t v3 = *(unsigned char *)(v3 + *v15) == 0;
          if (v12) {
            goto LABEL_116;
          }
          return v3;
        }
        unint64_t v3 = 0;
        if ((v12 & 1) == 0) {
          return v3;
        }
LABEL_116:
        uint64_t v67 = *(void **)(a1 + 8);
        *(void *)(a1 + 8) = 0;

        return v3;
      default:
        if (!PBReaderSkipValueWithTag()) {
          goto LABEL_118;
        }
        goto LABEL_82;
    }
  }
}

void sub_18A426600(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A42698C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A426D18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A427860(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void _GEOVLFSLAMTrackCallReadAllRecursiveWithoutSynchronized(uint64_t a1)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  [*(id *)(a1 + 72) readAll:1];
  long long v9 = 0u;
  long long v10 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  id v2 = *(id *)(a1 + 64);
  uint64_t v3 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = *(void *)v8;
    do
    {
      uint64_t v6 = 0;
      do
      {
        if (*(void *)v8 != v5) {
          objc_enumerationMutation(v2);
        }
        objc_msgSend(*(id *)(*((void *)&v7 + 1) + 8 * v6++), "readAll:", 1, (void)v7);
      }
      while (v4 != v6);
      uint64_t v4 = [v2 countByEnumeratingWithState:&v7 objects:v11 count:16];
    }
    while (v4);
  }
}

unint64_t GEOVLFSLAMTrackReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 84))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVLFSLAMTrackReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)long long v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 88));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 80) = [v8 position];
  *(_DWORD *)(a1 + 84) = [v8 length];
  if (a3) {
    long long v9 = (int *)&GEOVLFSLAMTrackReadAllFrom_recursiveTag;
  }
  else {
    long long v9 = (int *)&GEOVLFSLAMTrackReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOVLFSLAMTrackReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    _GEOVLFSLAMTrackCallReadAllRecursiveWithoutSynchronized(a1);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return Specified;
}

void sub_18A427B0C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFSLAMTrackReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVLFSLAMTrackReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A427B70(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A427E1C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFSLAMTrackIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 88));
  BOOL v2 = (*(unsigned char *)(a1 + 92) & 0x1F) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 88));
  return v2;
}

void sub_18A428294(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A4287F8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFSuccessDetailsReadSpecified(uint64_t a1, unint64_t a2, int *a3)
{
  unint64_t v3 = a2;
  if (!a2) {
    return v3;
  }
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  uint64_t v6 = (int *)MEMORY[0x1E4F940E0];
  *(void *)(v3 + (int)*MEMORY[0x1E4F940E0]) = *(unsigned int *)(a1 + 60);
  [(id)v3 seekToOffset:*(unsigned int *)(a1 + 56)];
  char v7 = 0;
  uint64_t v8 = 0;
  char v9 = 0;
  int v10 = ((*(unsigned __int8 *)(a1 + 68) >> 2) & 1) + ((*(unsigned __int8 *)(a1 + 68) >> 1) & 1);
  while (1)
  {
    unsigned int v11 = a3[v8];
    if (v11 >= 0xFFFFFFFE)
    {
      char v9 = 1;
      goto LABEL_9;
    }
    if (v11 != -3) {
      break;
    }
    char v7 = 1;
LABEL_9:
    ++v8;
  }
  if (v11)
  {
    ++v10;
    goto LABEL_9;
  }
  BOOL v12 = (v9 & 1 | v10) != 0;
  if ((v12 | v7)) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = a3;
  }
  BOOL v14 = v12;
  BOOL v15 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v16 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(v3 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(v3 + *v6))
  {
LABEL_91:
    if (v14)
    {
      char v59 = 1;
      goto LABEL_93;
    }
    if (!v13) {
      goto LABEL_104;
    }
    while (1)
    {
      int v61 = *v13++;
      int v60 = v61;
      if (v61 == 1) {
        break;
      }
      if (v60 == 3)
      {
        char v62 = 2;
LABEL_103:
        *(unsigned char *)(a1 + 68) |= v62;
      }
      else if (!v60)
      {
        goto LABEL_104;
      }
    }
    char v62 = 4;
    goto LABEL_103;
  }
  if (v13) {
    char v17 = v12;
  }
  else {
    char v17 = 1;
  }
  char v66 = v17;
  unsigned int v18 = (int *)MEMORY[0x1E4F940B8];
  while (1)
  {
    if (*(unsigned char *)(v3 + *v16)) {
      goto LABEL_91;
    }
    char v19 = 0;
    unsigned int v20 = 0;
    unint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = *v15;
      uint64_t v23 = *(void *)(v3 + v22);
      unint64_t v24 = v23 + 1;
      if (v23 == -1 || v24 > *(void *)(v3 + *v6)) {
        break;
      }
      char v25 = *(unsigned char *)(*(void *)(v3 + *v18) + v23);
      *(void *)(v3 + v22) = v24;
      v21 |= (unint64_t)(v25 & 0x7F) << v19;
      if ((v25 & 0x80) == 0) {
        goto LABEL_27;
      }
      v19 += 7;
      BOOL v26 = v20++ >= 9;
      if (v26)
      {
        unint64_t v21 = 0;
        int v27 = *(unsigned __int8 *)(v3 + *v16);
        goto LABEL_29;
      }
    }
    *(unsigned char *)(v3 + *v16) = 1;
LABEL_27:
    int v27 = *(unsigned __int8 *)(v3 + *v16);
    if (*(unsigned char *)(v3 + *v16)) {
      unint64_t v21 = 0;
    }
LABEL_29:
    int v28 = v21 & 7;
    if (v27 || v28 == 4) {
      goto LABEL_91;
    }
    unint64_t v30 = v21 >> 3;
    BOOL v31 = v14;
    if ((v66 & 1) == 0)
    {
      int v32 = v13;
      do
      {
        int v34 = *v32++;
        int v33 = v34;
        BOOL v31 = v34 != 0;
        if (v34) {
          BOOL v35 = v33 == v30;
        }
        else {
          BOOL v35 = 1;
        }
      }
      while (!v35);
    }
    if (v30 == 3)
    {
      if (v31 && (*(unsigned char *)(a1 + 68) & 2) == 0)
      {
        if (v28 == 2)
        {
          if (!PBReaderPlaceMark()) {
            goto LABEL_108;
          }
          while (1)
          {
            uint64_t v38 = (int *)MEMORY[0x1E4F940C8];
            if (*(void *)(v3 + *v15) >= *(void *)(v3 + *v6) || *(unsigned char *)(v3 + (int)*MEMORY[0x1E4F940C8])) {
              break;
            }
            char v39 = 0;
            unsigned int v40 = 0;
            uint64_t v41 = 0;
            while (1)
            {
              uint64_t v42 = *v15;
              uint64_t v43 = *(void *)(v3 + v42);
              unint64_t v44 = v43 + 1;
              if (v43 == -1 || v44 > *(void *)(v3 + *v6)) {
                break;
              }
              char v45 = *(unsigned char *)(*(void *)(v3 + *v18) + v43);
              *(void *)(v3 + v42) = v44;
              v41 |= (unint64_t)(v45 & 0x7F) << v39;
              if (v45 < 0)
              {
                v39 += 7;
                BOOL v26 = v40++ >= 9;
                if (!v26) {
                  continue;
                }
              }
              goto LABEL_62;
            }
            *(unsigned char *)(v3 + *v38) = 1;
LABEL_62:
            PBRepeatedUInt32Add();
          }
          PBReaderRecallMark();
        }
        else
        {
          char v51 = 0;
          unsigned int v52 = 0;
          uint64_t v53 = 0;
          while (1)
          {
            uint64_t v54 = *v15;
            uint64_t v55 = *(void *)(v3 + v54);
            unint64_t v56 = v55 + 1;
            if (v55 == -1 || v56 > *(void *)(v3 + *v6)) {
              break;
            }
            char v57 = *(unsigned char *)(*(void *)(v3 + *v18) + v55);
            *(void *)(v3 + v54) = v56;
            v53 |= (unint64_t)(v57 & 0x7F) << v51;
            if (v57 < 0)
            {
              v51 += 7;
              BOOL v26 = v52++ >= 9;
              if (!v26) {
                continue;
              }
            }
            goto LABEL_84;
          }
          *(unsigned char *)(v3 + *v16) = 1;
LABEL_84:
          PBRepeatedUInt32Add();
        }
        goto LABEL_85;
      }
      goto LABEL_69;
    }
    if (v30 == 2)
    {
      if (v7)
      {
        *(unsigned char *)(a1 + 68) |= 1u;
        uint64_t v46 = *v15;
        unint64_t v47 = *(void *)(v3 + v46);
        if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(void *)(v3 + *v6))
        {
          uint64_t v48 = *(void *)(*(void *)(v3 + *v18) + v47);
          *(void *)(v3 + v46) = v47 + 8;
        }
        else
        {
          *(unsigned char *)(v3 + *v16) = 1;
          uint64_t v48 = 0;
        }
        *(void *)(a1 + 48) = v48;
        goto LABEL_86;
      }
      goto LABEL_69;
    }
    if (v30 != 1)
    {
      int v49 = PBReaderSkipValueWithTag();
      uint64_t v16 = (int *)MEMORY[0x1E4F940C8];
      if (!v49) {
        goto LABEL_107;
      }
      goto LABEL_86;
    }
    if (v31) {
      break;
    }
LABEL_69:
    char v50 = PBReaderSkipValueWithTag();
    uint64_t v16 = (int *)MEMORY[0x1E4F940C8];
    if ((v50 & 1) == 0)
    {
LABEL_107:
      char v59 = 0;
      goto LABEL_93;
    }
LABEL_86:
    if (v8) {
      int v58 = 1;
    }
    else {
      int v58 = v14;
    }
    if (v58 != 1 || *(void *)(v3 + *v15) >= *(void *)(v3 + *v6)) {
      goto LABEL_91;
    }
  }
  if ((*(unsigned char *)(a1 + 68) & 4) != 0)
  {
    if ((PBReaderSkipValueWithTag() & 1) == 0)
    {
LABEL_108:
      char v59 = 0;
      goto LABEL_110;
    }
    v8 += *(unsigned __int8 *)(a1 + 68) << 29 >> 31;
    goto LABEL_85;
  }
  if ((PBReaderPlaceMark() & 1) == 0) {
    goto LABEL_108;
  }
  BOOL v65 = v14;
  char v36 = objc_alloc_init(GEOVLFCorrection);
  if (GEOVLFCorrectionReadAllFrom((uint64_t)v36, (void *)v3))
  {
    PBReaderRecallMark();
    unsigned int v37 = *(void **)(a1 + 40);
    *(void *)(a1 + 40) = v36;

    --v8;
    BOOL v14 = v65;
LABEL_85:
    uint64_t v16 = (int *)MEMORY[0x1E4F940C8];
    goto LABEL_86;
  }

  char v59 = 0;
  BOOL v14 = v65;
LABEL_110:
  uint64_t v16 = (int *)MEMORY[0x1E4F940C8];
LABEL_93:
  *(unsigned char *)(a1 + 68) |= 4u;
  *(unsigned char *)(a1 + 68) |= 2u;
  if (v59)
  {
LABEL_104:
    unint64_t v3 = *(unsigned char *)(v3 + *v16) == 0;
    if (v14) {
      goto LABEL_105;
    }
    return v3;
  }
  unint64_t v3 = 0;
  if (!v14) {
    return v3;
  }
LABEL_105:
  char v63 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;

  return v3;
}

void sub_18A428FE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A4297FC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFSuccessDetailsReadAllFrom(uint64_t a1, void *a2, int a3)
{
  if (*(_DWORD *)(a1 + 60))
  {
    [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8] format:@"GEOVLFSuccessDetailsReadAllFrom can only be called once per object"];
    return 0;
  }
  if ((unint64_t)[a2 position] >> 32 || (unint64_t)objc_msgSend(a2, "length") >> 32)
  {
    if (os_log_type_enabled(MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)int v10 = 0;
      _os_log_fault_impl(&dword_188D96000, MEMORY[0x1E4F14500], OS_LOG_TYPE_FAULT, "Cannot decode data with position/length > UINT32_MAX", v10, 2u);
    }
    return 0;
  }
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 64));
  id v8 = a2;
  objc_sync_enter(v8);
  objc_storeStrong((id *)(a1 + 8), a2);
  *(_DWORD *)(a1 + 56) = [v8 position];
  *(_DWORD *)(a1 + 60) = [v8 length];
  if (a3) {
    char v9 = (int *)&GEOVLFSuccessDetailsReadAllFrom_recursiveTag;
  }
  else {
    char v9 = (int *)&GEOVLFSuccessDetailsReadAllFrom_initialTag;
  }
  unint64_t Specified = GEOVLFSuccessDetailsReadSpecified(a1, (unint64_t)v8, v9);
  objc_sync_exit(v8);

  if (a3) {
    [*(id *)(a1 + 40) readAll:1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return Specified;
}

void sub_18A4299A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOVLFSuccessDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  unint64_t AllFrom = GEOVLFSuccessDetailsReadAllFrom(a1, v3, 0);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A429A08(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18A429BE8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFSuccessDetailsIsDirty(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  os_unfair_lock_lock_with_options();
  os_unfair_lock_assert_owner((const os_unfair_lock *)(a1 + 64));
  BOOL v2 = (*(unsigned char *)(a1 + 68) & 0xE) != 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(a1 + 64));
  return v2;
}

void sub_18A429F28(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFTileDetailsReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          BOOL v15 = v9++ >= 9;
          if (v15)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        if ((v10 >> 3) == 2)
        {
          char v20 = 0;
          unsigned int v21 = 0;
          uint64_t v22 = 0;
          *(unsigned char *)(a1 + 20) |= 1u;
          while (1)
          {
            uint64_t v23 = *v4;
            uint64_t v24 = *(void *)&v3[v23];
            unint64_t v25 = v24 + 1;
            if (v24 == -1 || v25 > *(void *)&v3[*v5]) {
              break;
            }
            char v26 = *(unsigned char *)(*(void *)&v3[*v7] + v24);
            *(void *)&v3[v23] = v25;
            v22 |= (unint64_t)(v26 & 0x7F) << v20;
            if ((v26 & 0x80) == 0) {
              goto LABEL_34;
            }
            v20 += 7;
            BOOL v15 = v21++ >= 9;
            if (v15)
            {
              LODWORD(v22) = 0;
              goto LABEL_36;
            }
          }
          v3[*v6] = 1;
LABEL_34:
          if (v3[*v6]) {
            LODWORD(v22) = 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 16) = v22;
        }
        else if ((v10 >> 3) == 1)
        {
          if ((PBReaderPlaceMark() & 1) == 0) {
            goto LABEL_40;
          }
          unsigned int v18 = objc_alloc_init(GEOVLFUsageTileID);
          if (!GEOVLFUsageTileIDReadAllFrom((uint64_t)v18, v3))
          {

            goto LABEL_40;
          }
          PBReaderRecallMark();
          char v19 = *(void **)(a1 + 8);
          *(void *)(a1 + 8) = v18;
        }
        else if (!PBReaderSkipValueWithTag())
        {
          goto LABEL_40;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v27 = v3[*v6] == 0;
  }
  else
  {
LABEL_40:
    BOOL v27 = 0;
  }
  objc_sync_exit(v3);

  return v27;
}

void sub_18A42A89C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFTileDetailsReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL AllFrom = GEOVLFTileDetailsReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return AllFrom;
}

void sub_18A42A900(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFUsageTileIDReadAllFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  if (v3)
  {
    uint64_t v4 = (int *)MEMORY[0x1E4F940E8];
    uint64_t v5 = (int *)MEMORY[0x1E4F940E0];
    uint64_t v6 = (int *)MEMORY[0x1E4F940C8];
    if (*(void *)&v3[*MEMORY[0x1E4F940E8]] < *(void *)&v3[*MEMORY[0x1E4F940E0]])
    {
      char v7 = (int *)MEMORY[0x1E4F940B8];
      do
      {
        if (v3[*v6]) {
          break;
        }
        char v8 = 0;
        unsigned int v9 = 0;
        unint64_t v10 = 0;
        while (1)
        {
          uint64_t v11 = *v4;
          uint64_t v12 = *(void *)&v3[v11];
          unint64_t v13 = v12 + 1;
          if (v12 == -1 || v13 > *(void *)&v3[*v5]) {
            break;
          }
          char v14 = *(unsigned char *)(*(void *)&v3[*v7] + v12);
          *(void *)&v3[v11] = v13;
          v10 |= (unint64_t)(v14 & 0x7F) << v8;
          if ((v14 & 0x80) == 0) {
            goto LABEL_13;
          }
          v8 += 7;
          if (v9++ >= 9)
          {
            unint64_t v10 = 0;
            int v16 = v3[*v6];
            goto LABEL_15;
          }
        }
        v3[*v6] = 1;
LABEL_13:
        int v16 = v3[*v6];
        if (v3[*v6]) {
          unint64_t v10 = 0;
        }
LABEL_15:
        if (v16 || (v10 & 7) == 4) {
          break;
        }
        switch((v10 >> 3))
        {
          case 1u:
            uint64_t v18 = PBReaderReadString();
            char v19 = *(void **)(a1 + 8);
            *(void *)(a1 + 8) = v18;

            break;
          case 2u:
            *(unsigned char *)(a1 + 40) |= 2u;
            uint64_t v20 = *v4;
            unint64_t v21 = *(void *)&v3[v20];
            if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v21);
              *(void *)&v3[v20] = v21 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v27 = 24;
            goto LABEL_38;
          case 3u:
            *(unsigned char *)(a1 + 40) |= 4u;
            uint64_t v23 = *v4;
            unint64_t v24 = *(void *)&v3[v23];
            if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v24);
              *(void *)&v3[v23] = v24 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v27 = 32;
            goto LABEL_38;
          case 4u:
            *(unsigned char *)(a1 + 40) |= 1u;
            uint64_t v25 = *v4;
            unint64_t v26 = *(void *)&v3[v25];
            if (v26 <= 0xFFFFFFFFFFFFFFF7 && v26 + 8 <= *(void *)&v3[*v5])
            {
              uint64_t v22 = *(void *)(*(void *)&v3[*v7] + v26);
              *(void *)&v3[v25] = v26 + 8;
            }
            else
            {
              v3[*v6] = 1;
              uint64_t v22 = 0;
            }
            uint64_t v27 = 16;
LABEL_38:
            *(void *)(a1 + v27) = v22;
            break;
          default:
            if (!PBReaderSkipValueWithTag()) {
              goto LABEL_41;
            }
            break;
        }
      }
      while (*(void *)&v3[*v4] < *(void *)&v3[*v5]);
    }
    BOOL v28 = v3[*v6] == 0;
  }
  else
  {
LABEL_41:
    BOOL v28 = 0;
  }
  objc_sync_exit(v3);

  return v28;
}

void sub_18A42B578(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL GEOVLFUsageTileIDReadFrom(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_sync_enter(v3);
  BOOL v4 = GEOVLFUsageTileIDReadAllFrom(a1, v3);
  objc_sync_exit(v3);

  return v4;
}

void sub_18A42B5EC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

unint64_t GEOMakeGEOAPBatchIDForReqRespMetadata(unsigned int a1)
{
  return a1 | ((unint64_t)(unsigned __int16)geo_userActionAndMetadataSessionType << 32) | ((unint64_t)geo_userActionAndMetadataUploadType << 48);
}

BOOL GEOMightHaveCorrespondingReqRespMetadata(unint64_t a1)
{
  return geo_userActionAndMetadataSessionType == WORD2(a1) && geo_userActionAndMetadataUploadType == HIWORD(a1);
}

void sub_18A42C150(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

Class __getPNRPhoneNumberResolverClass_block_invoke(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  v4[0] = 0;
  if (!qword_1EB2A0930)
  {
    v4[1] = MEMORY[0x1E4F143A8];
    v4[2] = 3221225472;
    v4[3] = __PhoneNumberResolverLibraryCore_block_invoke;
    v4[4] = &__block_descriptor_40_e5_v8__0l;
    void v4[5] = v4;
    long long v5 = xmmword_1E53F8EC0;
    uint64_t v6 = 0;
    qword_1EB2A0930 = _sl_dlopen();
    BOOL v2 = (void *)v4[0];
    if (!qword_1EB2A0930)
    {
      abort_report_np();
      goto LABEL_7;
    }
    if (v4[0]) {
      goto LABEL_8;
    }
  }
  while (1)
  {
    Class result = objc_getClass("PNRPhoneNumberResolver");
    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
    if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)) {
      break;
    }
LABEL_7:
    BOOL v2 = (void *)abort_report_np();
LABEL_8:
    free(v2);
  }
  qword_1EB2A0928 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __PhoneNumberResolverLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  qword_1EB2A0930 = result;
  return result;
}

void sub_18A42EF34(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *GEOTransitPaymentMethodTypeAsString(unsigned int a1)
{
  if (a1 > 4) {
    return @"PAYMENT_METHOD_TYPE_UNKNOWN";
  }
  else {
    return off_1E53F8EF8[a1];
  }
}

unint64_t gcl::ArithmeticEncoder::stop(gcl::ArithmeticEncoder *this)
{
  uint64_t v1 = *((void *)this + 2);
  uint64_t v2 = *((int *)this + 11);
  if (v1 + v2 + 3 <= (unint64_t)*((unsigned int *)this + 1))
  {
    int v4 = *((_DWORD *)this + 10);
    int v5 = *((_DWORD *)this + 6);
    unsigned int v6 = *((_DWORD *)this + 7) - 1;
    if ((v5 | 1u) <= v6)
    {
      if ((v5 | 3u) <= v6)
      {
        if ((v5 | 7u) <= v6)
        {
          if ((v5 | 0xFu) <= v6)
          {
            if ((v5 | 0x1Fu) <= v6)
            {
              if ((v5 | 0x3Fu) <= v6)
              {
                if ((v5 | 0x7Fu) <= v6)
                {
                  if ((v5 | 0xFFu) <= v6)
                  {
                    if ((v5 | 0x1FFu) <= v6)
                    {
                      if ((v5 | 0x3FFu) <= v6)
                      {
                        if ((v5 | 0x7FFu) <= v6)
                        {
                          if ((v5 | 0xFFFu) <= v6)
                          {
                            if ((v5 | 0x1FFFu) <= v6)
                            {
                              if ((v5 | 0x3FFFu) <= v6)
                              {
                                if ((v5 | 0x7FFFu) <= v6)
                                {
                                  if ((v5 | 0xFFFFu) > v6) {
                                    char v7 = 15;
                                  }
                                  else {
                                    char v7 = 16;
                                  }
                                }
                                else
                                {
                                  char v7 = 14;
                                }
                              }
                              else
                              {
                                char v7 = 13;
                              }
                            }
                            else
                            {
                              char v7 = 12;
                            }
                          }
                          else
                          {
                            char v7 = 11;
                          }
                        }
                        else
                        {
                          char v7 = 10;
                        }
                      }
                      else
                      {
                        char v7 = 9;
                      }
                    }
                    else
                    {
                      char v7 = 8;
                    }
                  }
                  else
                  {
                    char v7 = 7;
                  }
                }
                else
                {
                  char v7 = 6;
                }
              }
              else
              {
                char v7 = 5;
              }
            }
            else
            {
              char v7 = 4;
            }
          }
          else
          {
            char v7 = 3;
          }
        }
        else
        {
          char v7 = 2;
        }
      }
      else
      {
        char v7 = 1;
      }
    }
    else
    {
      char v7 = 0;
    }
    unsigned int v8 = v5 | ~(-1 << v7);
    *((_DWORD *)this + 6) = v8;
    if (v4 <= 7)
    {
      int v9 = v4 - 8;
      do
        unsigned int v8 = (2 * v8) | 1;
      while (!__CFADD__(v9++, 1));
      *((_DWORD *)this + 6) = v8;
      *((_DWORD *)this + 10) = 8;
    }
    if (HIBYTE(v8))
    {
      ++*(unsigned char *)(v1 + *((void *)this + 1) - 1);
      uint64_t v1 = *((void *)this + 2);
      if (*((_DWORD *)this + 11))
      {
        do
        {
          *(unsigned char *)(*((void *)this + 1) + v1) = 0;
          int v11 = *((_DWORD *)this + 11);
          uint64_t v1 = *((void *)this + 2) + 1;
          *((void *)this + 2) = v1;
          *((_DWORD *)this + 11) = --v11;
        }
        while (v11);
      }
    }
    else if (v2)
    {
      do
      {
        *(unsigned char *)(*((void *)this + 1) + v1) = -1;
        int v12 = *((_DWORD *)this + 11);
        uint64_t v1 = *((void *)this + 2) + 1;
        *((void *)this + 2) = v1;
        *((_DWORD *)this + 11) = --v12;
      }
      while (v12);
    }
    *(unsigned char *)(*((void *)this + 1) + v1) = *((_WORD *)this + 13);
    uint64_t v13 = *((void *)this + 1);
    uint64_t v14 = *((void *)this + 2) + 1;
    *((void *)this + 2) = v14;
    *(unsigned char *)(v13 + v14) = BYTE1(*((_DWORD *)this + 6));
    unint64_t v15 = *((void *)this + 2) + 1;
    *((void *)this + 2) = v15;
    if (v4 >= 1)
    {
      *(unsigned char *)(*((void *)this + 1) + v15) = *((_DWORD *)this + 6);
      unint64_t v15 = *((void *)this + 2) + 1;
      *((void *)this + 2) = v15;
    }
    if (v15 >= 2)
    {
      uint64_t v16 = *((void *)this + 1) - 1;
      while (*(unsigned __int8 *)(v16 + v15) == 255)
      {
        *((void *)this + 2) = --v15;
        if (v15 <= 1) {
          return 1;
        }
      }
    }
    return v15;
  }
  else
  {
    *(_DWORD *)this = 1;
    return 0;
  }
}

void gcl::polyline::ACContext::~ACContext(gcl::polyline::ACContext *this)
{
  uint64_t v2 = (void *)*((void *)this + 12);
  if (v2)
  {
    *((void *)this + 13) = v2;
    operator delete(v2);
  }
  id v3 = (void *)*((void *)this + 9);
  if (v3)
  {
    *((void *)this + 10) = v3;
    operator delete(v3);
  }
  int v4 = (void *)*((void *)this + 6);
  if (v4)
  {
    *((void *)this + 7) = v4;
    operator delete(v4);
  }
  int v5 = (void *)*((void *)this + 3);
  if (v5)
  {
    *((void *)this + 4) = v5;
    operator delete(v5);
  }
  unsigned int v6 = *(void **)this;
  if (*(void *)this)
  {
    *((void *)this + 1) = v6;
    operator delete(v6);
  }
}

uint64_t gcl::polyline::EncoderImpl::estimateBitsAccurate(int *a1, int a2, int a3, unsigned __int16 **a4)
{
  if (a3 != 1)
  {
    if (a3 == 2)
    {
      if (a2 >= 1)
      {
        LODWORD(v4) = 0;
        int v5 = a4[3];
        unsigned int v6 = a4[12];
        uint64_t v7 = a2;
        while (1)
        {
          int v12 = *a1++;
          int v11 = v12;
          if (v12 >= 1)
          {
            unint64_t v8 = 67584 - *v5;
          }
          else
          {
            if ((v11 & 0x80000000) == 0) {
              goto LABEL_7;
            }
            unint64_t v8 = *v5 + 2048;
          }
          LODWORD(v4) = *(_DWORD *)((char *)&unk_18A643010 + ((v8 >> 10) & 0x3FFFFFFFFFFFFCLL)) + v4;
LABEL_7:
          int v10 = *(_DWORD *)v6;
          v6 += 2;
          int v9 = v10;
          if (v11 < 0) {
            int v11 = -v11;
          }
          uint64_t v4 = v4 + 66560 + (v9 << 10) - (__clz((v11 >> v9) + 1) << 11);
          ++v5;
          if (!--v7) {
            return v4;
          }
        }
      }
      return 0;
    }
    return 0;
  }
  if (a2 >= 1)
  {
    uint64_t v13 = 0;
    LODWORD(v4) = 0;
    uint64_t v14 = *a4;
    unint64_t v15 = a4[3];
    uint64_t v16 = a4[6];
    char v17 = a4[12];
    do
    {
      int v19 = *a1++;
      int v18 = v19;
      unsigned int v21 = *v14++;
      uint64_t v20 = v21;
      if (v18)
      {
        int v22 = *(_DWORD *)((char *)&unk_18A643010 + (((unint64_t)(67584 - v20) >> 10) & 0x3FFFFFFFFFFFFCLL)) + v4;
        if (v18 >= 0) {
          unsigned int v23 = v18;
        }
        else {
          unsigned int v23 = -v18;
        }
        if (v18 >= 0) {
          int v24 = 0x10000 - *v15;
        }
        else {
          int v24 = *v15;
        }
        int v25 = v22 + *(_DWORD *)((char *)&unk_18A643010 + (((v24 + 2048) >> 10) & 0xFCLL));
        unint64_t v26 = &v16[(int)v13];
        if (v23 > 0x3F)
        {
          int v39 = *(_DWORD *)v17;
          uint64_t v4 = v25
             + 66560
             + *(_DWORD *)((char *)&unk_18A643010 + (((67584 - (unint64_t)*v26) >> 10) & 0x3FFFFFFFFFFFFCLL))
             + *(_DWORD *)((char *)&unk_18A643010 + (((67584 - (unint64_t)v26[2]) >> 10) & 0x3FFFFFFFFFFFFCLL))
             + *(_DWORD *)((char *)&unk_18A643010 + (((67584 - (unint64_t)v26[6]) >> 10) & 0x3FFFFFFFFFFFFCLL))
             + *(_DWORD *)((char *)&unk_18A643010 + (((67584 - (unint64_t)v26[14]) >> 10) & 0x3FFFFFFFFFFFFCLL))
             + *(_DWORD *)((char *)&unk_18A643010 + (((67584 - (unint64_t)v26[30]) >> 10) & 0x3FFFFFFFFFFFFCLL))
             + *(_DWORD *)((char *)&unk_18A643010 + (((67584 - (unint64_t)v26[62]) >> 10) & 0x3FFFFFFFFFFFFCLL))
             + (v39 << 10)
             - (__clz(((v23 - 64) >> v39) + 1) << 11);
        }
        else
        {
          unsigned int v27 = v23 - 1;
          int v28 = *v26;
          if ((v27 & 0x20) != 0) {
            int v28 = 0x10000 - v28;
          }
          int v29 = *(_DWORD *)((char *)&unk_18A643010 + (((v28 + 2048) >> 10) & 0xFCLL));
          int v30 = v26[(v27 >> 5) + 1];
          if ((v27 & 0x10) != 0) {
            int v30 = 0x10000 - v30;
          }
          int v31 = *(_DWORD *)((char *)&unk_18A643010 + (((v30 + 2048) >> 10) & 0xFCLL));
          int v32 = v26[(v27 >> 4) + 3];
          if ((v27 & 8) != 0) {
            int v32 = 0x10000 - v32;
          }
          int v33 = *(_DWORD *)((char *)&unk_18A643010 + (((v32 + 2048) >> 10) & 0xFCLL));
          int v34 = v26[(v27 >> 3) + 7];
          if ((v27 & 4) != 0) {
            int v34 = 0x10000 - v34;
          }
          int v35 = *(_DWORD *)((char *)&unk_18A643010 + (((v34 + 2048) >> 10) & 0xFCLL));
          int v36 = v26[(v27 >> 2) + 15];
          if ((v27 & 2) != 0) {
            int v36 = 0x10000 - v36;
          }
          int v37 = *(_DWORD *)((char *)&unk_18A643010 + (((v36 + 2048) >> 10) & 0xFCLL));
          int v38 = v26[(v27 >> 1) + 31];
          if (v27) {
            int v38 = 0x10000 - v38;
          }
          uint64_t v4 = (v29
                            + v25
                            + v31
                            + v33
                            + v35
                            + v37
                            + *(_DWORD *)((char *)&unk_18A643010 + (((v38 + 2048) >> 10) & 0xFCLL)));
        }
      }
      else
      {
        uint64_t v4 = (*(_DWORD *)((char *)&unk_18A643010 + (((v20 + 2048) >> 10) & 0x7CLL)) + v4);
      }
      v13 += 64;
      v17 += 2;
      ++v15;
    }
    while ((unint64_t)a2 << 6 != v13);
    return v4;
  }
  return 0;
}

uint64_t gcl::ArithmeticEncoder::encode(uint64_t result, int a2, _WORD *a3)
{
  unint64_t v3 = (unsigned __int16)*a3;
  int v4 = *(_DWORD *)(result + 28);
  unsigned int v5 = (v4 * v3) >> 16;
  if (!a2)
  {
    __int16 v8 = *(_WORD *)(result + (~(*a3 >> 7) & 0x1FE) + 48) + *a3;
    *(_DWORD *)(result + 28) = v5;
    *a3 = v8;
    if (v5 > 0x4000) {
      return result;
    }
    goto LABEL_5;
  }
  unsigned int v6 = *(_DWORD *)(result + 24) + v5;
  unsigned int v5 = v4 - v5;
  __int16 v7 = v3 - *(_WORD *)(result + ((v3 >> 7) & 0x1FE) + 48);
  *(_DWORD *)(result + 24) = v6;
  *(_DWORD *)(result + 28) = v5;
  *a3 = v7;
  if (v5 <= 0x4000)
  {
LABEL_5:
    unsigned int v9 = *(_DWORD *)(result + 24);
    int v10 = *(_DWORD *)(result + 40);
    do
    {
      v9 *= 2;
      v5 *= 2;
      *(_DWORD *)(result + 24) = v9;
      *(_DWORD *)(result + 28) = v5;
      *(_DWORD *)(result + 40) = ++v10;
      if (v10 != 8) {
        continue;
      }
      uint64_t v11 = *(void *)(result + 16);
      uint64_t v12 = *(int *)(result + 44);
      if (v11 + v12 + 1 > (unint64_t)*(unsigned int *)(result + 4)) {
        return result;
      }
      if (HIBYTE(v9))
      {
        ++*(unsigned char *)(v11 + *(void *)(result + 8) - 1);
        uint64_t v11 = *(void *)(result + 16);
        if (*(_DWORD *)(result + 44))
        {
          do
          {
            *(unsigned char *)(*(void *)(result + 8) + v11) = 0;
            int v13 = *(_DWORD *)(result + 44);
            uint64_t v11 = *(void *)(result + 16) + 1;
            *(void *)(result + 16) = v11;
            *(_DWORD *)(result + 44) = --v13;
          }
          while (v13);
        }
      }
      else
      {
        if ((v5 + v9) >> 24)
        {
          *(_DWORD *)(result + 44) = v12 + 1;
          goto LABEL_7;
        }
        if (v12)
        {
          do
          {
            *(unsigned char *)(*(void *)(result + 8) + v11) = -1;
            int v14 = *(_DWORD *)(result + 44);
            uint64_t v11 = *(void *)(result + 16) + 1;
            *(void *)(result + 16) = v11;
            *(_DWORD *)(result + 44) = --v14;
          }
          while (v14);
        }
      }
      *(unsigned char *)(*(void *)(result + 8) + v11) = *(_WORD *)(result + 26);
      ++*(void *)(result + 16);
      LOWORD(v9) = *(_WORD *)(result + 24);
      unsigned int v5 = *(_DWORD *)(result + 28);
LABEL_7:
      int v10 = 0;
      unsigned int v9 = (unsigned __int16)v9;
      *(_DWORD *)(result + 24) = (unsigned __int16)v9;
      *(_DWORD *)(result + 40) = 0;
    }
    while (v5 <= 0x4000);
  }
  return result;
}

unint64_t gcl::polyline::EncoderImpl::encodeResidual(unint64_t result, uint64_t a2, uint64_t a3, int a4, char a5, void *a6)
{
  uint64_t v6 = a3;
  uint64_t v7 = result;
  if (a5 == 2)
  {
    if (a4 < 1) {
      return result;
    }
    uint64_t v20 = 0;
    uint64_t v66 = a4;
    while (1)
    {
      int v22 = *(_DWORD *)(v6 + 4 * v20);
      int v68 = *(_DWORD *)(a2 + 4 * v20);
      uint64_t v23 = a6[12];
      int v24 = *(_DWORD *)(v23 + 4 * v20);
      uint64_t v67 = a6[3];
      int v25 = (unsigned __int16 *)(a6[9] + 2 * v20);
      if (v68 - v22 >= 0) {
        unsigned int v26 = v68 - v22;
      }
      else {
        unsigned int v26 = v22 - v68;
      }
      int v27 = 1 << v24;
      if (1 << v24 <= v26)
      {
        unsigned int v40 = *(_DWORD *)(v7 + 24);
        unsigned int v39 = *(_DWORD *)(v7 + 28);
        unsigned int v28 = v26;
        while (1)
        {
          unsigned int v41 = (v39 * *v25) >> 16;
          v40 += v41;
          v39 -= v41;
          unsigned __int16 v42 = *v25 - *(_WORD *)(v7 + (((unint64_t)*v25 >> 7) & 0x1FE) + 48);
          *(_DWORD *)(v7 + 24) = v40;
          *(_DWORD *)(v7 + 28) = v39;
          *int v25 = v42;
          if (v39 <= 0x4000) {
            break;
          }
LABEL_68:
          ++v24;
          v28 -= v27;
          int v27 = 1 << v24;
          if (v28 < 1 << v24) {
            goto LABEL_39;
          }
        }
        int v43 = *(_DWORD *)(v7 + 40);
        while (2)
        {
          v40 *= 2;
          v39 *= 2;
          *(_DWORD *)(v7 + 24) = v40;
          *(_DWORD *)(v7 + 28) = v39;
          *(_DWORD *)(v7 + 40) = ++v43;
          if (v43 != 8) {
            goto LABEL_73;
          }
          uint64_t v44 = *(void *)(v7 + 16);
          uint64_t v45 = *(int *)(v7 + 44);
          if (v44 + v45 + 1 > (unint64_t)*(unsigned int *)(v7 + 4)) {
            goto LABEL_68;
          }
          if (HIBYTE(v40))
          {
            ++*(unsigned char *)(v44 + *(void *)(v7 + 8) - 1);
            uint64_t v44 = *(void *)(v7 + 16);
            if (*(_DWORD *)(v7 + 44))
            {
              do
              {
                *(unsigned char *)(*(void *)(v7 + 8) + v44) = 0;
                int v46 = *(_DWORD *)(v7 + 44);
                uint64_t v44 = *(void *)(v7 + 16) + 1;
                *(void *)(v7 + 16) = v44;
                *(_DWORD *)(v7 + 44) = --v46;
              }
              while (v46);
            }
          }
          else
          {
            if ((v39 + v40) >> 24)
            {
              *(_DWORD *)(v7 + 44) = v45 + 1;
LABEL_72:
              int v43 = 0;
              unsigned int v40 = (unsigned __int16)v40;
              *(_DWORD *)(v7 + 24) = (unsigned __int16)v40;
              *(_DWORD *)(v7 + 40) = 0;
LABEL_73:
              if (v39 > 0x4000) {
                goto LABEL_68;
              }
              continue;
            }
            if (v45)
            {
              do
              {
                *(unsigned char *)(*(void *)(v7 + 8) + v44) = -1;
                int v47 = *(_DWORD *)(v7 + 44);
                uint64_t v44 = *(void *)(v7 + 16) + 1;
                *(void *)(v7 + 16) = v44;
                *(_DWORD *)(v7 + 44) = --v47;
              }
              while (v47);
            }
          }
          break;
        }
        *(unsigned char *)(*(void *)(v7 + 8) + v44) = *(_WORD *)(v7 + 26);
        ++*(void *)(v7 + 16);
        LOWORD(v40) = *(_WORD *)(v7 + 24);
        unsigned int v39 = *(_DWORD *)(v7 + 28);
        goto LABEL_72;
      }
      unsigned int v28 = v26;
LABEL_39:
      uint64_t result = gcl::ArithmeticEncoder::encode(v7, 0, v25);
      if (v24)
      {
        unsigned int v29 = *(_DWORD *)(v7 + 28);
        while (1)
        {
          --v24;
          unsigned int v30 = (unsigned __int16)(v29 >> 1);
          if (((v28 >> v24) & 1) == 0) {
            break;
          }
          v29 -= v30;
          *(_DWORD *)(v7 + 24) += v30;
          *(_DWORD *)(v7 + 28) = v29;
          if (v29 <= 0x4000) {
            goto LABEL_46;
          }
LABEL_41:
          if (!v24) {
            goto LABEL_61;
          }
        }
        unsigned int v29 = (unsigned __int16)(v29 >> 1);
        *(_DWORD *)(v7 + 28) = v30;
        if (v30 > 0x4000) {
          goto LABEL_41;
        }
LABEL_46:
        unsigned int v31 = *(_DWORD *)(v7 + 24);
        int v32 = *(_DWORD *)(v7 + 40);
        while (2)
        {
          v31 *= 2;
          v29 *= 2;
          *(_DWORD *)(v7 + 24) = v31;
          *(_DWORD *)(v7 + 28) = v29;
          *(_DWORD *)(v7 + 40) = ++v32;
          if (v32 != 8) {
            goto LABEL_49;
          }
          uint64_t v33 = *(void *)(v7 + 16);
          uint64_t v34 = *(int *)(v7 + 44);
          if (v33 + v34 + 1 > (unint64_t)*(unsigned int *)(v7 + 4)) {
            goto LABEL_41;
          }
          if (HIBYTE(v31))
          {
            ++*(unsigned char *)(v33 + *(void *)(v7 + 8) - 1);
            uint64_t v33 = *(void *)(v7 + 16);
            if (*(_DWORD *)(v7 + 44))
            {
              do
              {
                *(unsigned char *)(*(void *)(v7 + 8) + v33) = 0;
                int v35 = *(_DWORD *)(v7 + 44);
                uint64_t v33 = *(void *)(v7 + 16) + 1;
                *(void *)(v7 + 16) = v33;
                *(_DWORD *)(v7 + 44) = --v35;
              }
              while (v35);
            }
          }
          else
          {
            if ((v29 + v31) >> 24)
            {
              *(_DWORD *)(v7 + 44) = v34 + 1;
LABEL_48:
              int v32 = 0;
              unsigned int v31 = (unsigned __int16)v31;
              *(_DWORD *)(v7 + 24) = (unsigned __int16)v31;
              *(_DWORD *)(v7 + 40) = 0;
LABEL_49:
              if (v29 > 0x4000) {
                goto LABEL_41;
              }
              continue;
            }
            if (v34)
            {
              do
              {
                *(unsigned char *)(*(void *)(v7 + 8) + v33) = -1;
                int v36 = *(_DWORD *)(v7 + 44);
                uint64_t v33 = *(void *)(v7 + 16) + 1;
                *(void *)(v7 + 16) = v33;
                *(_DWORD *)(v7 + 44) = --v36;
              }
              while (v36);
            }
          }
          break;
        }
        *(unsigned char *)(*(void *)(v7 + 8) + v33) = *(_WORD *)(v7 + 26);
        ++*(void *)(v7 + 16);
        LOWORD(v31) = *(_WORD *)(v7 + 24);
        unsigned int v29 = *(_DWORD *)(v7 + 28);
        goto LABEL_48;
      }
LABEL_61:
      if (v68 != v22) {
        uint64_t result = gcl::ArithmeticEncoder::encode(v7, v68 - v22 >= 0, (_WORD *)(v67 + 2 * v20));
      }
      int v37 = *(_DWORD *)(v23 + 4 * v20);
      unsigned int v38 = v26 >> v37;
      if (v37 && !v38)
      {
        int v21 = -1;
      }
      else
      {
        if (v38 < 2) {
          goto LABEL_33;
        }
        int v21 = 1;
      }
      *(_DWORD *)(v23 + 4 * v20) = v21 + v37;
LABEL_33:
      if (++v20 == v66) {
        return result;
      }
    }
  }
  if (a5 == 1)
  {
    if (a4 < 1) {
      return result;
    }
    uint64_t v48 = 0;
    uint64_t v69 = a4;
    while (1)
    {
      int v49 = *(_DWORD *)(a2 + 4 * v48);
      int v50 = *(_DWORD *)(v6 + 4 * v48);
      char v51 = (_WORD *)(*a6 + 2 * v48);
      unsigned int v52 = v49 - v50;
      if (v49 == v50)
      {
        uint64_t result = gcl::ArithmeticEncoder::encode(v7, 0, v51);
      }
      else
      {
        gcl::ArithmeticEncoder::encode(v7, 1, v51);
        uint64_t v53 = (_WORD *)(a6[3] + 2 * v48);
        if ((v52 & 0x80000000) != 0)
        {
          gcl::ArithmeticEncoder::encode(v7, 0, v53);
          unsigned int v52 = -v52;
          unsigned int v54 = v52 - 1;
          uint64_t v55 = (_WORD *)(a6[6] + 2 * (int)(v48 << 6));
          if (v52 > 0x3F)
          {
LABEL_94:
            gcl::ArithmeticEncoder::encode(v7, 1, v55);
            gcl::ArithmeticEncoder::encode(v7, 1, v55 + 2);
            gcl::ArithmeticEncoder::encode(v7, 1, v55 + 6);
            gcl::ArithmeticEncoder::encode(v7, 1, v55 + 14);
            gcl::ArithmeticEncoder::encode(v7, 1, v55 + 30);
            gcl::ArithmeticEncoder::encode(v7, 1, v55 + 62);
            uint64_t v56 = a6[12];
            unsigned int v57 = v52 - 64;
            int v58 = *(_DWORD *)(v56 + 4 * v48);
            char v59 = (_WORD *)(a6[9] + 2 * v48);
            for (int i = 1 << v58; v57 >= 1 << v58; int i = 1 << v58)
            {
              gcl::ArithmeticEncoder::encode(v7, 1, v59);
              ++v58;
              v57 -= i;
            }
            uint64_t result = gcl::ArithmeticEncoder::encode(v7, 0, v59);
            if (v58)
            {
              int v61 = v58 - 1;
              do
              {
                __int16 v72 = 0x8000;
                uint64_t result = gcl::ArithmeticEncoder::encode(v7, (v57 >> v61--) & 1, &v72);
              }
              while (v61 != -1);
            }
            int v62 = *(_DWORD *)(v56 + 4 * v48);
            int v63 = v54 >> v62;
            if (v62) {
              BOOL v64 = v63 == 0;
            }
            else {
              BOOL v64 = 0;
            }
            if (v64)
            {
              *(_DWORD *)(v56 + 4 * v48) = v62 - 1;
              uint64_t v6 = a3;
            }
            else
            {
              uint64_t v6 = a3;
              if (v63 >= 2) {
                *(_DWORD *)(v56 + 4 * v48) = v62 + 1;
              }
            }
            goto LABEL_88;
          }
        }
        else
        {
          gcl::ArithmeticEncoder::encode(v7, 1, v53);
          unsigned int v54 = v52 - 1;
          uint64_t v55 = (_WORD *)(a6[6] + 2 * (int)(v48 << 6));
          if (v52 > 0x3F) {
            goto LABEL_94;
          }
        }
        gcl::ArithmeticEncoder::encode(v7, (v54 >> 5) & 1, v55);
        gcl::ArithmeticEncoder::encode(v7, (v54 >> 4) & 1, &v55[(v54 >> 5) + 1]);
        gcl::ArithmeticEncoder::encode(v7, (v54 >> 3) & 1, &v55[(v54 >> 4) + 3]);
        gcl::ArithmeticEncoder::encode(v7, (v54 >> 2) & 1, &v55[(v54 >> 3) + 7]);
        gcl::ArithmeticEncoder::encode(v7, (v54 >> 1) & 1, &v55[(v54 >> 2) + 15]);
        uint64_t result = gcl::ArithmeticEncoder::encode(v7, v54 & 1, &v55[(v54 >> 1) + 31]);
        uint64_t v6 = a3;
      }
LABEL_88:
      if (++v48 == v69) {
        return result;
      }
    }
  }
  if (!a5 && a4 >= 1)
  {
    uint64_t v8 = 0;
    while (1)
    {
      int v9 = *(_DWORD *)(*(void *)(v7 + 1072) + 4 * v8);
      if (v9 >= 1) {
        break;
      }
LABEL_6:
      if (++v8 == a4) {
        return result;
      }
    }
    int v10 = 0;
    unsigned int v11 = *(_DWORD *)(a2 + 4 * v8) - *(_DWORD *)(a3 + 4 * v8);
    unsigned int v12 = *(_DWORD *)(v7 + 28);
    while (1)
    {
      unsigned int v13 = (unsigned __int16)(v12 >> 1);
      if (((v11 >> v10) & 1) == 0) {
        break;
      }
      v12 -= v13;
      *(_DWORD *)(v7 + 24) += v13;
      *(_DWORD *)(v7 + 28) = v12;
      if (v12 <= 0x4000) {
        goto LABEL_14;
      }
LABEL_9:
      if (++v10 == v9) {
        goto LABEL_6;
      }
    }
    unsigned int v12 = (unsigned __int16)(v12 >> 1);
    *(_DWORD *)(v7 + 28) = v13;
    if (v13 > 0x4000) {
      goto LABEL_9;
    }
LABEL_14:
    unsigned int v14 = *(_DWORD *)(v7 + 24);
    int v15 = *(_DWORD *)(v7 + 40);
    while (1)
    {
      v14 *= 2;
      v12 *= 2;
      *(_DWORD *)(v7 + 24) = v14;
      *(_DWORD *)(v7 + 28) = v12;
      *(_DWORD *)(v7 + 40) = ++v15;
      if (v15 != 8) {
        goto LABEL_17;
      }
      uint64_t v16 = *(void *)(v7 + 16);
      uint64_t v17 = *(int *)(v7 + 44);
      uint64_t result = v16 + v17 + 1;
      if (result > *(unsigned int *)(v7 + 4)) {
        goto LABEL_9;
      }
      uint64_t result = HIBYTE(v14);
      if (result)
      {
        ++*(unsigned char *)(v16 + *(void *)(v7 + 8) - 1);
        uint64_t v16 = *(void *)(v7 + 16);
        if (*(_DWORD *)(v7 + 44))
        {
          do
          {
            *(unsigned char *)(*(void *)(v7 + 8) + v16) = 0;
            int v18 = *(_DWORD *)(v7 + 44);
            uint64_t v16 = *(void *)(v7 + 16) + 1;
            *(void *)(v7 + 16) = v16;
            *(_DWORD *)(v7 + 44) = --v18;
          }
          while (v18);
        }
      }
      else
      {
        uint64_t result = (v12 + v14) >> 24;
        if (result)
        {
          *(_DWORD *)(v7 + 44) = v17 + 1;
          goto LABEL_16;
        }
        if (v17)
        {
          do
          {
            *(unsigned char *)(*(void *)(v7 + 8) + v16) = -1;
            int v19 = *(_DWORD *)(v7 + 44);
            uint64_t v16 = *(void *)(v7 + 16) + 1;
            *(void *)(v7 + 16) = v16;
            *(_DWORD *)(v7 + 44) = --v19;
          }
          while (v19);
        }
      }
      *(unsigned char *)(*(void *)(v7 + 8) + v16) = *(_WORD *)(v7 + 26);
      ++*(void *)(v7 + 16);
      LOWORD(v14) = *(_WORD *)(v7 + 24);
      unsigned int v12 = *(_DWORD *)(v7 + 28);
LABEL_16:
      int v15 = 0;
      unsigned int v14 = (unsigned __int16)v14;
      *(_DWORD *)(v7 + 24) = (unsigned __int16)v14;
      *(_DWORD *)(v7 + 40) = 0;
LABEL_17:
      if (v12 > 0x4000) {
        goto LABEL_9;
      }
    }
  }
  return result;
}