uint64_t sub_14E24D0(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t vars8;

  v1 = result;
  v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  result = sub_12C9C18(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result = sub_12C8DDC(*(void *)(v1 + 40));
LABEL_6:
  v4 = *(unsigned char *)(v1 + 8);
  v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_14E257C(uint64_t a1, char *a2, int32x2_t *a3)
{
  v642 = a2;
  char v5 = sub_11947B8((uint64_t)a3, &v642, a3[11].i32[1]);
  result = v642;
  if (v5) {
    return result;
  }
  v634 = (uint64_t *)(a1 + 8);
  v7 = (unsigned int *)(a1 + 608);
  v8 = (unsigned int *)(a1 + 576);
  v9 = (unsigned int *)(a1 + 544);
  v10 = (unsigned int *)(a1 + 512);
  v627 = (uint64_t *)(a1 + 488);
  v633 = (uint64_t *)(a1 + 464);
  v635 = (unsigned int *)(a1 + 432);
  v631 = (uint64_t *)(a1 + 352);
  v632 = (uint64_t *)(a1 + 376);
  v629 = (uint64_t *)(a1 + 304);
  v630 = (uint64_t *)(a1 + 328);
  v628 = (uint64_t *)(a1 + 280);
  v638 = (uint64_t **)(a1 + 232);
  v639 = (uint64_t **)(a1 + 256);
  v636 = (uint64_t **)(a1 + 160);
  v637 = (uint64_t **)(a1 + 184);
  v640 = (uint64_t **)(a1 + 136);
  v641 = (uint64_t **)(a1 + 208);
  v625 = (uint64_t *)(a1 + 40);
  v626 = (uint64_t *)(a1 + 96);
  while (2)
  {
    v11 = result + 1;
    unsigned int v12 = *result;
    if (*result < 0)
    {
      int v13 = *v11;
      unsigned int v14 = v12 + (v13 << 7);
      unsigned int v12 = v14 - 128;
      if (v13 < 0)
      {
        v11 = (char *)sub_188C180((uint64_t)result, v14 - 128);
        unsigned int v12 = v15;
      }
      else
      {
        v11 = result + 2;
      }
    }
    v642 = v11;
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_1314;
        }
        result = v11 - 1;
        while (1)
        {
          v16 = (unsigned __int8 *)(result + 1);
          v642 = result + 1;
          v17 = *(_DWORD **)(a1 + 56);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 48), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 48) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            v20 = sub_1513A54(*v625);
            uint64_t v19 = sub_188CDC8((uint64_t)v625, (uint64_t)v20);
            v16 = (unsigned __int8 *)v642;
          }
          result = sub_14E7888(a3, v19, v16);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 10) {
            goto LABEL_1071;
          }
        }
      case 2u:
        if (v12 != 18) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000000u;
        uint64_t v24 = *(void *)(a1 + 864);
        if (v24) {
          goto LABEL_367;
        }
        v25 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v25 = (void *)*v25;
        }
        uint64_t v24 = sub_12CCB50((uint64_t)v25);
        *(void *)(a1 + 864) = v24;
        goto LABEL_828;
      case 3u:
        if (v12 == 24)
        {
          result = v11 - 1;
          while (1)
          {
            v642 = result + 1;
            uint64_t v26 = result[1];
            if (result[1] < 0)
            {
              int v27 = v26 + (result[2] << 7);
              uint64_t v26 = (v27 - 128);
              if (result[2] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 1), (v27 - 128));
                uint64_t v26 = v28;
              }
              else
              {
                result += 3;
              }
            }
            else
            {
              result += 2;
            }
            v642 = result;
            uint64_t v29 = *(unsigned int *)(a1 + 64);
            if (v29 == *(_DWORD *)(a1 + 68))
            {
              int v30 = v29 + 1;
              v31 = (_DWORD *)(a1 + 64);
              sub_188CA54((unsigned int *)(a1 + 64), v29 + 1);
              *(void *)(*(void *)(a1 + 72) + 8 * v29) = v26;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 72) + 8 * v29) = v26;
              int v30 = v29 + 1;
              v31 = (_DWORD *)(a1 + 64);
            }
            _DWORD *v31 = v30;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 24) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 26) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 64);
        goto LABEL_1313;
      case 6u:
        if (v12 != 50) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v373 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v373 & 0xFFFFFFFFFFFFFFFCLL);
        if (v373) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 672);
        goto LABEL_1069;
      case 7u:
        if (v12 != 56) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x100000u;
        v527 = v11 + 1;
        uint64_t v528 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1101;
        }
        int v529 = *v527;
        uint64_t v528 = v528 + (v529 << 7) - 128;
        if (v529 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v528);
          v642 = result;
          *(unsigned char *)(a1 + 1088) = v617 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v527 = v11 + 2;
LABEL_1101:
          v642 = v527;
          *(unsigned char *)(a1 + 1088) = v528 != 0;
        }
        goto LABEL_1071;
      case 8u:
        if (v12 != 64) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x200000u;
        v374 = v11 + 1;
        uint64_t v375 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_769;
        }
        int v376 = *v374;
        uint64_t v375 = v375 + (v376 << 7) - 128;
        if (v376 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v375);
          v642 = result;
          *(unsigned char *)(a1 + 1089) = v587 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v374 = v11 + 2;
LABEL_769:
          v642 = v374;
          *(unsigned char *)(a1 + 1089) = v375 != 0;
        }
        goto LABEL_1071;
      case 9u:
        if (v12 == 72)
        {
          result = v11 - 1;
          while (1)
          {
            v642 = result + 1;
            uint64_t v32 = result[1];
            if (result[1] < 0)
            {
              int v33 = v32 + (result[2] << 7);
              uint64_t v32 = (v33 - 128);
              if (result[2] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 1), (v33 - 128));
                uint64_t v32 = v34;
              }
              else
              {
                result += 3;
              }
            }
            else
            {
              result += 2;
            }
            v642 = result;
            uint64_t v35 = *(unsigned int *)(a1 + 80);
            if (v35 == *(_DWORD *)(a1 + 84))
            {
              int v36 = v35 + 1;
              v37 = (_DWORD *)(a1 + 80);
              sub_188CA54((unsigned int *)(a1 + 80), v35 + 1);
              *(void *)(*(void *)(a1 + 88) + 8 * v35) = v32;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 88) + 8 * v35) = v32;
              int v36 = v35 + 1;
              v37 = (_DWORD *)(a1 + 80);
            }
            _DWORD *v37 = v36;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *result != 72) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 74) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 80);
        goto LABEL_1313;
      case 0xAu:
        if (v12 != 82) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v38 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 680);
        goto LABEL_1069;
      case 0xCu:
        if (v12 != 96) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x400000u;
        v41 = v11 + 1;
        uint64_t v42 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v42);
          v642 = result;
          *(unsigned char *)(a1 + 1090) = v536 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v41 = v11 + 2;
LABEL_65:
          v642 = v41;
          *(unsigned char *)(a1 + 1090) = v42 != 0;
        }
        goto LABEL_1071;
      case 0xDu:
        if (v12 != 106) {
          goto LABEL_1314;
        }
        result = v11 - 1;
        while (1)
        {
          v530 = (unsigned __int8 *)(result + 1);
          v642 = result + 1;
          v531 = *(_DWORD **)(a1 + 112);
          if (v531 && (uint64_t v532 = *(int *)(a1 + 104), (int)v532 < *v531))
          {
            *(_DWORD *)(a1 + 104) = v532 + 1;
            uint64_t v533 = *(void *)&v531[2 * v532 + 2];
          }
          else
          {
            v534 = sub_14A23B8(*v626);
            uint64_t v533 = sub_188CDC8((uint64_t)v626, (uint64_t)v534);
            v530 = (unsigned __int8 *)v642;
          }
          result = (char *)sub_11EAAEC(a3, v533, v530);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 106) {
            goto LABEL_1071;
          }
        }
      case 0xFu:
        if (v12 != 120) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x800000u;
        v44 = v11 + 1;
        uint64_t v45 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v46 = *v44;
        uint64_t v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v45);
          v642 = result;
          *(unsigned char *)(a1 + 1091) = v537 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v44 = v11 + 2;
LABEL_70:
          v642 = v44;
          *(unsigned char *)(a1 + 1091) = v45 != 0;
        }
        goto LABEL_1071;
      case 0x10u:
        if (v12 == 128)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v47 = result[2];
            if (result[2] < 0)
            {
              int v48 = v47 + (result[3] << 7);
              uint64_t v47 = (v48 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v48 - 128));
                uint64_t v47 = v49;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v50 = *(unsigned int *)(a1 + 120);
            if (v50 == *(_DWORD *)(a1 + 124))
            {
              int v51 = v50 + 1;
              v52 = (_DWORD *)(a1 + 120);
              sub_188CA54((unsigned int *)(a1 + 120), v50 + 1);
              *(void *)(*(void *)(a1 + 128) + 8 * v50) = v47;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 128) + 8 * v50) = v47;
              int v51 = v50 + 1;
              v52 = (_DWORD *)(a1 + 120);
            }
            _DWORD *v52 = v51;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 384) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 130) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 120);
        goto LABEL_1313;
      case 0x11u:
        if (v12 != 138) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v53 = result + 2;
          v642 = result + 2;
          v54 = *(_DWORD **)(a1 + 152);
          if (v54 && (uint64_t v55 = *(int *)(a1 + 144), (int)v55 < *v54))
          {
            *(_DWORD *)(a1 + 144) = v55 + 1;
            v56 = *(std::string **)&v54[2 * v55 + 2];
          }
          else
          {
            if (!*v640) {
              operator new();
            }
            void *v58 = v57;
            v58[1] = sub_3A6EDC;
            void *v57 = 0;
            v57[1] = 0;
            v57[2] = 0;
            v56 = (std::string *)sub_188CDC8((uint64_t)v640, (uint64_t)v57);
            v53 = v642;
          }
          result = (char *)sub_188C244(v56, v53, (uint64_t)a3);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 394) {
            goto LABEL_1071;
          }
        }
      case 0x12u:
        if (v12 != 146) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v377 = result + 2;
          v642 = result + 2;
          v378 = *(_DWORD **)(a1 + 176);
          if (v378 && (uint64_t v379 = *(int *)(a1 + 168), (int)v379 < *v378))
          {
            *(_DWORD *)(a1 + 168) = v379 + 1;
            v380 = *(std::string **)&v378[2 * v379 + 2];
          }
          else
          {
            if (!*v636) {
              operator new();
            }
            void *v382 = v381;
            v382[1] = sub_3A6EDC;
            void *v381 = 0;
            v381[1] = 0;
            v381[2] = 0;
            v380 = (std::string *)sub_188CDC8((uint64_t)v636, (uint64_t)v381);
            v377 = v642;
          }
          result = (char *)sub_188C244(v380, v377, (uint64_t)a3);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 402) {
            goto LABEL_1071;
          }
        }
      case 0x13u:
        if (v12 != 152) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x2000000u;
        v59 = v11 + 1;
        uint64_t v60 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_101;
        }
        int v61 = *v59;
        uint64_t v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v60);
          v642 = result;
          *(unsigned char *)(a1 + 1096) = v538 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v59 = v11 + 2;
LABEL_101:
          v642 = v59;
          *(unsigned char *)(a1 + 1096) = v60 != 0;
        }
        goto LABEL_1071;
      case 0x14u:
        if (v12 != 162) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000000u;
        v62 = *(void **)(a1 + 872);
        if (!v62)
        {
          v63 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v63 = (void *)*v63;
          }
          v62 = sub_15C2014((uint64_t)v63);
          *(void *)(a1 + 872) = v62;
          v11 = v642;
        }
        result = sub_11EAA5C(a3, (uint64_t)v62, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x15u:
        if (v12 != 168) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x4000000u;
        v64 = v11 + 1;
        uint64_t v65 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_112;
        }
        int v66 = *v64;
        uint64_t v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v65);
          v642 = result;
          *(unsigned char *)(a1 + 1097) = v539 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v64 = v11 + 2;
LABEL_112:
          v642 = v64;
          *(unsigned char *)(a1 + 1097) = v65 != 0;
        }
        goto LABEL_1071;
      case 0x16u:
        if (v12 != 176) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x8000000u;
        v67 = v11 + 1;
        uint64_t v68 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_117;
        }
        int v69 = *v67;
        uint64_t v68 = v68 + (v69 << 7) - 128;
        if (v69 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v68);
          v642 = result;
          *(unsigned char *)(a1 + 1098) = v540 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v67 = v11 + 2;
LABEL_117:
          v642 = v67;
          *(unsigned char *)(a1 + 1098) = v68 != 0;
        }
        goto LABEL_1071;
      case 0x17u:
        if (v12 != 184) {
          goto LABEL_1314;
        }
        v70 = v11 + 1;
        unint64_t v71 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_122;
        }
        int v72 = *v70;
        int v73 = v71 + (v72 << 7);
        unint64_t v71 = (v73 - 128);
        if (v72 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, (v73 - 128));
          v642 = result;
          if (!result) {
            return result;
          }
          unint64_t v71 = v541;
        }
        else
        {
          v70 = v11 + 2;
LABEL_122:
          v642 = v70;
        }
        if (v71 <= 2)
        {
          *(_DWORD *)(a1 + 20) |= 0x1000000u;
          *(_DWORD *)(a1 + 1092) = v71;
          goto LABEL_1071;
        }
        if (*v634) {
          v622 = (std::string *)((*v634 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v622 = (std::string *)sub_188DBD8(v634);
        }
        int v623 = 23;
        goto LABEL_1328;
      case 0x18u:
        if (v12 != 194) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v74 = result + 2;
          v642 = result + 2;
          v75 = *(_DWORD **)(a1 + 200);
          if (v75 && (uint64_t v76 = *(int *)(a1 + 192), (int)v76 < *v75))
          {
            *(_DWORD *)(a1 + 192) = v76 + 1;
            v77 = *(std::string **)&v75[2 * v76 + 2];
          }
          else
          {
            if (!*v637) {
              operator new();
            }
            void *v79 = v78;
            v79[1] = sub_3A6EDC;
            void *v78 = 0;
            v78[1] = 0;
            v78[2] = 0;
            v77 = (std::string *)sub_188CDC8((uint64_t)v637, (uint64_t)v78);
            v74 = v642;
          }
          result = (char *)sub_188C244(v77, v74, (uint64_t)a3);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 450) {
            goto LABEL_1071;
          }
        }
      case 0x19u:
        if (v12 != 202) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v80 = result + 2;
          v642 = result + 2;
          v81 = *(_DWORD **)(a1 + 224);
          if (v81 && (uint64_t v82 = *(int *)(a1 + 216), (int)v82 < *v81))
          {
            *(_DWORD *)(a1 + 216) = v82 + 1;
            v83 = *(std::string **)&v81[2 * v82 + 2];
          }
          else
          {
            if (!*v641) {
              operator new();
            }
            void *v85 = v84;
            v85[1] = sub_3A6EDC;
            void *v84 = 0;
            v84[1] = 0;
            v84[2] = 0;
            v83 = (std::string *)sub_188CDC8((uint64_t)v641, (uint64_t)v84);
            v80 = v642;
          }
          result = (char *)sub_188C244(v83, v80, (uint64_t)a3);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 458) {
            goto LABEL_1071;
          }
        }
      case 0x1Au:
        if (v12 != 210) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000000u;
        uint64_t v383 = *(void *)(a1 + 880);
        if (!v383)
        {
          v384 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v384 = (void *)*v384;
          }
          uint64_t v383 = sub_15C1CB4((uint64_t)v384);
          *(void *)(a1 + 880) = v383;
          v11 = v642;
        }
        result = sub_11B3E48(a3, v383, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x1Bu:
        if (v12 != 218) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v385 = result + 2;
          v642 = result + 2;
          v386 = *(_DWORD **)(a1 + 248);
          if (v386 && (uint64_t v387 = *(int *)(a1 + 240), (int)v387 < *v386))
          {
            *(_DWORD *)(a1 + 240) = v387 + 1;
            v388 = *(std::string **)&v386[2 * v387 + 2];
          }
          else
          {
            if (!*v638) {
              operator new();
            }
            void *v390 = v389;
            v390[1] = sub_3A6EDC;
            void *v389 = 0;
            v389[1] = 0;
            v389[2] = 0;
            v388 = (std::string *)sub_188CDC8((uint64_t)v638, (uint64_t)v389);
            v385 = v642;
          }
          result = (char *)sub_188C244(v388, v385, (uint64_t)a3);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 474) {
            goto LABEL_1071;
          }
        }
      case 0x1Cu:
        if (v12 != 226) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v391 = result + 2;
          v642 = result + 2;
          v392 = *(_DWORD **)(a1 + 272);
          if (v392 && (uint64_t v393 = *(int *)(a1 + 264), (int)v393 < *v392))
          {
            *(_DWORD *)(a1 + 264) = v393 + 1;
            v394 = *(std::string **)&v392[2 * v393 + 2];
          }
          else
          {
            if (!*v639) {
              operator new();
            }
            void *v396 = v395;
            v396[1] = sub_3A6EDC;
            void *v395 = 0;
            v395[1] = 0;
            v395[2] = 0;
            v394 = (std::string *)sub_188CDC8((uint64_t)v639, (uint64_t)v395);
            v391 = v642;
          }
          result = (char *)sub_188C244(v394, v391, (uint64_t)a3);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 482) {
            goto LABEL_1071;
          }
        }
      case 0x1Du:
        if (v12 != 234) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v86 = (unsigned __int8 *)(result + 2);
          v642 = result + 2;
          v87 = *(_DWORD **)(a1 + 296);
          if (v87 && (uint64_t v88 = *(int *)(a1 + 288), (int)v88 < *v87))
          {
            *(_DWORD *)(a1 + 288) = v88 + 1;
            uint64_t v89 = *(void *)&v87[2 * v88 + 2];
          }
          else
          {
            v90 = sub_14A25EC(*v628);
            uint64_t v89 = sub_188CDC8((uint64_t)v628, (uint64_t)v90);
            v86 = (unsigned __int8 *)v642;
          }
          result = (char *)sub_14A129C(a3, v89, v86);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 490) {
            goto LABEL_1071;
          }
        }
      case 0x1Eu:
        if (v12 != 242) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000000u;
        uint64_t v397 = *(void *)(a1 + 888);
        if (!v397)
        {
          v398 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v398 = (void *)*v398;
          }
          sub_1478F54((uint64_t)v398);
          uint64_t v397 = v399;
          *(void *)(a1 + 888) = v399;
          v11 = v642;
        }
        result = (char *)sub_11793D8(a3, v397, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x1Fu:
        if (v12 != 248) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x10000000u;
        v400 = v11 + 1;
        uint64_t v401 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_822;
        }
        int v402 = *v400;
        uint64_t v401 = v401 + (v402 << 7) - 128;
        if (v402 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v401);
          v642 = result;
          *(unsigned char *)(a1 + 1099) = v588 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v400 = v11 + 2;
LABEL_822:
          v642 = v400;
          *(unsigned char *)(a1 + 1099) = v401 != 0;
        }
        goto LABEL_1071;
      case 0x21u:
        if (v12 != 10) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000000u;
        uint64_t v24 = *(void *)(a1 + 896);
        if (!v24)
        {
          v403 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v403 = (void *)*v403;
          }
          uint64_t v24 = sub_12CCB50((uint64_t)v403);
          *(void *)(a1 + 896) = v24;
LABEL_828:
          v11 = v642;
        }
        goto LABEL_367;
      case 0x22u:
        if (v12 != 16) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x20000000u;
        v91 = v11 + 1;
        uint64_t v92 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_163;
        }
        int v93 = *v91;
        uint64_t v92 = v92 + (v93 << 7) - 128;
        if (v93 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v92);
          v642 = result;
          *(unsigned char *)(a1 + 1100) = v542 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v91 = v11 + 2;
LABEL_163:
          v642 = v91;
          *(unsigned char *)(a1 + 1100) = v92 != 0;
        }
        goto LABEL_1071;
      case 0x23u:
        if (v12 != 24) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x40000000u;
        v94 = v11 + 1;
        uint64_t v95 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_168;
        }
        int v96 = *v94;
        uint64_t v95 = v95 + (v96 << 7) - 128;
        if (v96 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v95);
          v642 = result;
          *(unsigned char *)(a1 + 1101) = v543 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v94 = v11 + 2;
LABEL_168:
          v642 = v94;
          *(unsigned char *)(a1 + 1101) = v95 != 0;
        }
        goto LABEL_1071;
      case 0x25u:
        if (v12 != 42) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v97 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
        if (v97) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 688);
        goto LABEL_1069;
      case 0x26u:
        if (v12 != 48) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x80000000;
        v404 = v11 + 1;
        uint64_t v405 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_834;
        }
        int v406 = *v404;
        uint64_t v405 = v405 + (v406 << 7) - 128;
        if (v406 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v405);
          v642 = result;
          *(unsigned char *)(a1 + 1102) = v589 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v404 = v11 + 2;
LABEL_834:
          v642 = v404;
          *(unsigned char *)(a1 + 1102) = v405 != 0;
        }
        goto LABEL_1071;
      case 0x27u:
        if (v12 != 58) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v98 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
        if (v98) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 696);
        goto LABEL_1069;
      case 0x28u:
        if (v12 != 64) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 1u;
        v407 = v11 + 1;
        uint64_t v408 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_839;
        }
        int v409 = *v407;
        uint64_t v408 = v408 + (v409 << 7) - 128;
        if (v409 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v408);
          v642 = result;
          *(unsigned char *)(a1 + 1103) = v590 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v407 = v11 + 2;
LABEL_839:
          v642 = v407;
          *(unsigned char *)(a1 + 1103) = v408 != 0;
        }
        goto LABEL_1071;
      case 0x29u:
        if (v12 != 72) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 2u;
        v410 = v11 + 1;
        uint64_t v411 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_844;
        }
        int v412 = *v410;
        uint64_t v411 = v411 + (v412 << 7) - 128;
        if (v412 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v411);
          v642 = result;
          *(unsigned char *)(a1 + 1104) = v591 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v410 = v11 + 2;
LABEL_844:
          v642 = v410;
          *(unsigned char *)(a1 + 1104) = v411 != 0;
        }
        goto LABEL_1071;
      case 0x2Bu:
        if (v12 != 88) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 4u;
        v99 = v11 + 1;
        uint64_t v100 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_181;
        }
        int v101 = *v99;
        uint64_t v100 = v100 + (v101 << 7) - 128;
        if (v101 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v100);
          v642 = result;
          *(unsigned char *)(a1 + 1105) = v544 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v99 = v11 + 2;
LABEL_181:
          v642 = v99;
          *(unsigned char *)(a1 + 1105) = v100 != 0;
        }
        goto LABEL_1071;
      case 0x2Cu:
        if (v12 != 96) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 8u;
        v21 = v11 + 1;
        uint64_t v22 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v22);
          v642 = result;
          *(unsigned char *)(a1 + 1106) = v535 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v21 = v11 + 2;
LABEL_23:
          v642 = v21;
          *(unsigned char *)(a1 + 1106) = v22 != 0;
        }
        goto LABEL_1071;
      case 0x2Du:
        if (v12 != 104) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x10u;
        v102 = v11 + 1;
        uint64_t v103 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_186;
        }
        int v104 = *v102;
        uint64_t v103 = v103 + (v104 << 7) - 128;
        if (v104 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v103);
          v642 = result;
          *(unsigned char *)(a1 + 1107) = v545 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v102 = v11 + 2;
LABEL_186:
          v642 = v102;
          *(unsigned char *)(a1 + 1107) = v103 != 0;
        }
        goto LABEL_1071;
      case 0x2Eu:
        if (v12 != 112) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x20u;
        v105 = v11 + 1;
        uint64_t v106 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_191;
        }
        int v107 = *v105;
        uint64_t v106 = v106 + (v107 << 7) - 128;
        if (v107 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v106);
          v642 = result;
          *(unsigned char *)(a1 + 1108) = v546 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v105 = v11 + 2;
LABEL_191:
          v642 = v105;
          *(unsigned char *)(a1 + 1108) = v106 != 0;
        }
        goto LABEL_1071;
      case 0x2Fu:
        if (v12 != 120) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x40u;
        v413 = v11 + 1;
        uint64_t v414 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_849;
        }
        int v415 = *v413;
        uint64_t v414 = v414 + (v415 << 7) - 128;
        if (v415 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v414);
          v642 = result;
          *(unsigned char *)(a1 + 1109) = v592 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v413 = v11 + 2;
LABEL_849:
          v642 = v413;
          *(unsigned char *)(a1 + 1109) = v414 != 0;
        }
        goto LABEL_1071;
      case 0x30u:
        if (v12 != 130) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v108 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v108 & 0xFFFFFFFFFFFFFFFCLL);
        if (v108) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 704);
        goto LABEL_1069;
      case 0x31u:
        if (v12 != 136) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x80u;
        v416 = v11 + 1;
        uint64_t v417 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_854;
        }
        int v418 = *v416;
        uint64_t v417 = v417 + (v418 << 7) - 128;
        if (v418 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v417);
          v642 = result;
          *(unsigned char *)(a1 + 1110) = v593 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v416 = v11 + 2;
LABEL_854:
          v642 = v416;
          *(unsigned char *)(a1 + 1110) = v417 != 0;
        }
        goto LABEL_1071;
      case 0x32u:
        if (v12 != 144) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x100u;
        v109 = v11 + 1;
        uint64_t v110 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_200;
        }
        int v111 = *v109;
        uint64_t v110 = v110 + (v111 << 7) - 128;
        if (v111 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v110);
          v642 = result;
          *(unsigned char *)(a1 + 1111) = v547 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v109 = v11 + 2;
LABEL_200:
          v642 = v109;
          *(unsigned char *)(a1 + 1111) = v110 != 0;
        }
        goto LABEL_1071;
      case 0x33u:
        if (v12 != 154) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v419 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v419 & 0xFFFFFFFFFFFFFFFCLL);
        if (v419) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 712);
        goto LABEL_1069;
      case 0x34u:
        if (v12 != 160) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x200u;
        v112 = v11 + 1;
        uint64_t v113 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_205;
        }
        int v114 = *v112;
        uint64_t v113 = v113 + (v114 << 7) - 128;
        if (v114 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v113);
          v642 = result;
          *(unsigned char *)(a1 + 1112) = v548 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v112 = v11 + 2;
LABEL_205:
          v642 = v112;
          *(unsigned char *)(a1 + 1112) = v113 != 0;
        }
        goto LABEL_1071;
      case 0x35u:
        if (v12 != 168) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x400u;
        v115 = v11 + 1;
        uint64_t v116 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_210;
        }
        int v117 = *v115;
        uint64_t v116 = v116 + (v117 << 7) - 128;
        if (v117 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v116);
          v642 = result;
          *(unsigned char *)(a1 + 1113) = v549 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v115 = v11 + 2;
LABEL_210:
          v642 = v115;
          *(unsigned char *)(a1 + 1113) = v116 != 0;
        }
        goto LABEL_1071;
      case 0x36u:
        if (v12 != 176) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x800u;
        v118 = v11 + 1;
        uint64_t v119 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_215;
        }
        int v120 = *v118;
        uint64_t v119 = v119 + (v120 << 7) - 128;
        if (v120 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v119);
          v642 = result;
          *(unsigned char *)(a1 + 1114) = v550 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v118 = v11 + 2;
LABEL_215:
          v642 = v118;
          *(unsigned char *)(a1 + 1114) = v119 != 0;
        }
        goto LABEL_1071;
      case 0x37u:
        if (v12 != 184) {
          goto LABEL_1314;
        }
        v121 = v11 + 1;
        unint64_t v71 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_220;
        }
        int v122 = *v121;
        int v123 = v71 + (v122 << 7);
        unint64_t v71 = (v123 - 128);
        if (v122 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, (v123 - 128));
          v642 = result;
          if (!result) {
            return result;
          }
          unint64_t v71 = v551;
        }
        else
        {
          v121 = v11 + 2;
LABEL_220:
          v642 = v121;
        }
        if (sub_119BBA8(v71))
        {
          *(_DWORD *)(a1 + 24) |= 0x2000u;
          *(_DWORD *)(a1 + 1116) = v71;
        }
        else
        {
          if (*v634) {
            v622 = (std::string *)((*v634 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v622 = (std::string *)sub_188DBD8(v634);
          }
          int v623 = 55;
LABEL_1328:
          sub_188C020(v623, v71, v622);
          v8 = (unsigned int *)(a1 + 576);
          v7 = (unsigned int *)(a1 + 608);
          v10 = (unsigned int *)(a1 + 512);
          v9 = (unsigned int *)(a1 + 544);
        }
        goto LABEL_1071;
      case 0x38u:
        if (v12 != 192) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x4000u;
        v420 = v11 + 1;
        int v421 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_863;
        }
        int v422 = *v420;
        int v421 = v421 + (v422 << 7) - 128;
        if (v422 < 0)
        {
          result = (char *)sub_188C0D0((uint64_t)v11, v421);
          v642 = result;
          *(_DWORD *)(a1 + 1120) = v594;
          if (!result) {
            return result;
          }
        }
        else
        {
          v420 = v11 + 2;
LABEL_863:
          v642 = v420;
          *(_DWORD *)(a1 + 1120) = v421;
        }
        goto LABEL_1071;
      case 0x39u:
        if (v12 != 200) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x1000u;
        v423 = v11 + 1;
        uint64_t v424 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_868;
        }
        int v425 = *v423;
        uint64_t v424 = v424 + (v425 << 7) - 128;
        if (v425 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v424);
          v642 = result;
          *(unsigned char *)(a1 + 1115) = v595 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v423 = v11 + 2;
LABEL_868:
          v642 = v423;
          *(unsigned char *)(a1 + 1115) = v424 != 0;
        }
        goto LABEL_1071;
      case 0x3Au:
        if (v12 != 208) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x8000u;
        v124 = v11 + 1;
        uint64_t v125 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_227;
        }
        int v126 = *v124;
        uint64_t v125 = v125 + (v126 << 7) - 128;
        if (v126 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v125);
          v642 = result;
          *(unsigned char *)(a1 + 1124) = v552 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v124 = v11 + 2;
LABEL_227:
          v642 = v124;
          *(unsigned char *)(a1 + 1124) = v125 != 0;
        }
        goto LABEL_1071;
      case 0x3Bu:
        if (v12 != 216) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x10000u;
        v426 = v11 + 1;
        uint64_t v427 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_873;
        }
        int v428 = *v426;
        uint64_t v427 = v427 + (v428 << 7) - 128;
        if (v428 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v427);
          v642 = result;
          *(unsigned char *)(a1 + 1125) = v596 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v426 = v11 + 2;
LABEL_873:
          v642 = v426;
          *(unsigned char *)(a1 + 1125) = v427 != 0;
        }
        goto LABEL_1071;
      case 0x3Cu:
        if (v12 != 226) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000000u;
        v429 = *(void **)(a1 + 904);
        if (!v429)
        {
          v430 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v430 = (void *)*v430;
          }
          v429 = sub_14FB818((uint64_t)v430);
          *(void *)(a1 + 904) = v429;
          v11 = v642;
        }
        result = (char *)sub_14E7918(a3, (uint64_t)v429, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x3Du:
        if (v12 != 232) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x20000u;
        v127 = v11 + 1;
        uint64_t v128 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_232;
        }
        int v129 = *v127;
        uint64_t v128 = v128 + (v129 << 7) - 128;
        if (v129 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v128);
          v642 = result;
          *(unsigned char *)(a1 + 1126) = v553 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v127 = v11 + 2;
LABEL_232:
          v642 = v127;
          *(unsigned char *)(a1 + 1126) = v128 != 0;
        }
        goto LABEL_1071;
      case 0x3Eu:
        if (v12 != 242) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000000u;
        uint64_t v130 = *(void *)(a1 + 912);
        if (!v130)
        {
          v131 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v131 = (void *)*v131;
          }
          uint64_t v130 = sub_12CD40C((uint64_t)v131);
          *(void *)(a1 + 912) = v130;
          v11 = v642;
        }
        result = (char *)sub_12C8B8C(a3, v130, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x3Fu:
        if (v12 != 248) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x80000u;
        v431 = v11 + 1;
        int v432 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_884;
        }
        int v433 = *v431;
        int v432 = v432 + (v433 << 7) - 128;
        if (v433 < 0)
        {
          result = (char *)sub_188C0D0((uint64_t)v11, v432);
          v642 = result;
          *(_DWORD *)(a1 + 1128) = v597;
          if (!result) {
            return result;
          }
        }
        else
        {
          v431 = v11 + 2;
LABEL_884:
          v642 = v431;
          *(_DWORD *)(a1 + 1128) = v432;
        }
        goto LABEL_1071;
      case 0x41u:
        if (v12 != 8) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x40000u;
        v434 = v11 + 1;
        uint64_t v435 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_889;
        }
        int v436 = *v434;
        uint64_t v435 = v435 + (v436 << 7) - 128;
        if (v436 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v435);
          v642 = result;
          *(unsigned char *)(a1 + 1127) = v598 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v434 = v11 + 2;
LABEL_889:
          v642 = v434;
          *(unsigned char *)(a1 + 1127) = v435 != 0;
        }
        goto LABEL_1071;
      case 0x42u:
        if (v12 != 18) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v132 = (unsigned __int8 *)(result + 2);
          v642 = result + 2;
          v133 = *(_DWORD **)(a1 + 320);
          if (v133 && (uint64_t v134 = *(int *)(a1 + 312), (int)v134 < *v133))
          {
            *(_DWORD *)(a1 + 312) = v134 + 1;
            uint64_t v135 = *(void *)&v133[2 * v134 + 2];
          }
          else
          {
            v136 = sub_12D28C8(*v629);
            uint64_t v135 = sub_188CDC8((uint64_t)v629, (uint64_t)v136);
            v132 = (unsigned __int8 *)v642;
          }
          result = (char *)sub_14E79A8(a3, v135, v132);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1170) {
            goto LABEL_1071;
          }
        }
      case 0x43u:
        if (v12 != 26) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v137 = (unsigned __int8 *)(result + 2);
          v642 = result + 2;
          v138 = *(_DWORD **)(a1 + 344);
          if (v138 && (uint64_t v139 = *(int *)(a1 + 336), (int)v139 < *v138))
          {
            *(_DWORD *)(a1 + 336) = v139 + 1;
            uint64_t v140 = *(void *)&v138[2 * v139 + 2];
          }
          else
          {
            v141 = sub_14A23B8(*v630);
            uint64_t v140 = sub_188CDC8((uint64_t)v630, (uint64_t)v141);
            v137 = (unsigned __int8 *)v642;
          }
          result = (char *)sub_11EAAEC(a3, v140, v137);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1178) {
            goto LABEL_1071;
          }
        }
      case 0x44u:
        if (v12 != 34) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v142 = (unsigned __int8 *)(result + 2);
          v642 = result + 2;
          v143 = *(_DWORD **)(a1 + 368);
          if (v143 && (uint64_t v144 = *(int *)(a1 + 360), (int)v144 < *v143))
          {
            *(_DWORD *)(a1 + 360) = v144 + 1;
            uint64_t v145 = *(void *)&v143[2 * v144 + 2];
          }
          else
          {
            v146 = sub_14A23B8(*v631);
            uint64_t v145 = sub_188CDC8((uint64_t)v631, (uint64_t)v146);
            v142 = (unsigned __int8 *)v642;
          }
          result = (char *)sub_11EAAEC(a3, v145, v142);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1186) {
            goto LABEL_1071;
          }
        }
      case 0x45u:
        if (v12 != 42) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000000;
        v147 = *(void **)(a1 + 920);
        if (!v147)
        {
          v148 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v148 = (void *)*v148;
          }
          v147 = sub_12CCA5C((uint64_t)v148);
          *(void *)(a1 + 920) = v147;
          v11 = v642;
        }
        goto LABEL_274;
      case 0x46u:
        if (v12 != 50) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v149 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v149 & 0xFFFFFFFFFFFFFFFCLL);
        if (v149) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 720);
        goto LABEL_1069;
      case 0x47u:
        if (v12 != 58) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 1u;
        uint64_t v150 = *(void *)(a1 + 928);
        if (v150) {
          goto LABEL_467;
        }
        v151 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v151 = (void *)*v151;
        }
        sub_12CCD04((uint64_t)v151);
        uint64_t v150 = v152;
        *(void *)(a1 + 928) = v152;
        goto LABEL_900;
      case 0x48u:
        if (v12 != 64) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x100000u;
        v437 = v11 + 1;
        uint64_t v438 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_894;
        }
        int v439 = *v437;
        uint64_t v438 = v438 + (v439 << 7) - 128;
        if (v439 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v438);
          v642 = result;
          *(unsigned char *)(a1 + 1132) = v599 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v437 = v11 + 2;
LABEL_894:
          v642 = v437;
          *(unsigned char *)(a1 + 1132) = v438 != 0;
        }
        goto LABEL_1071;
      case 0x49u:
        if (v12 != 74) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 2u;
        uint64_t v150 = *(void *)(a1 + 936);
        if (v150) {
          goto LABEL_467;
        }
        v440 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v440 = (void *)*v440;
        }
        sub_12CCD04((uint64_t)v440);
        uint64_t v150 = v441;
        *(void *)(a1 + 936) = v441;
LABEL_900:
        v11 = v642;
        goto LABEL_467;
      case 0x4Au:
        if (v12 != 80) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x200000u;
        v153 = v11 + 1;
        uint64_t v154 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_288;
        }
        int v155 = *v153;
        uint64_t v154 = v154 + (v155 << 7) - 128;
        if (v155 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v154);
          v642 = result;
          *(unsigned char *)(a1 + 1133) = v554 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v153 = v11 + 2;
LABEL_288:
          v642 = v153;
          *(unsigned char *)(a1 + 1133) = v154 != 0;
        }
        goto LABEL_1071;
      case 0x4Bu:
        if (v12 != 88) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x400000u;
        v442 = v11 + 1;
        uint64_t v443 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_906;
        }
        int v444 = *v442;
        uint64_t v443 = v443 + (v444 << 7) - 128;
        if (v444 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v443);
          v642 = result;
          *(unsigned char *)(a1 + 1134) = v600 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v442 = v11 + 2;
LABEL_906:
          v642 = v442;
          *(unsigned char *)(a1 + 1134) = v443 != 0;
        }
        goto LABEL_1071;
      case 0x4Cu:
        if (v12 != 98) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 4u;
        uint64_t v445 = *(void *)(a1 + 944);
        if (v445) {
          goto LABEL_948;
        }
        v446 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v446 = (void *)*v446;
        }
        uint64_t v445 = sub_14FB700((uint64_t)v446);
        *(void *)(a1 + 944) = v445;
        goto LABEL_947;
      case 0x4Du:
        if (v12 != 104) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x800000u;
        v447 = v11 + 1;
        uint64_t v448 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_916;
        }
        int v449 = *v447;
        uint64_t v448 = v448 + (v449 << 7) - 128;
        if (v449 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v448);
          v642 = result;
          *(unsigned char *)(a1 + 1135) = v601 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v447 = v11 + 2;
LABEL_916:
          v642 = v447;
          *(unsigned char *)(a1 + 1135) = v448 != 0;
        }
        goto LABEL_1071;
      case 0x4Eu:
        if (v12 != 112) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x2000000u;
        v156 = v11 + 1;
        uint64_t v157 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_293;
        }
        int v158 = *v156;
        uint64_t v157 = v157 + (v158 << 7) - 128;
        if (v158 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v157);
          v642 = result;
          *(unsigned char *)(a1 + 1144) = v555 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v156 = v11 + 2;
LABEL_293:
          v642 = v156;
          *(unsigned char *)(a1 + 1144) = v157 != 0;
        }
        goto LABEL_1071;
      case 0x4Fu:
        if (v12 != 120) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x4000000u;
        v450 = v11 + 1;
        uint64_t v451 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_921;
        }
        int v452 = *v450;
        uint64_t v451 = v451 + (v452 << 7) - 128;
        if (v452 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v451);
          v642 = result;
          *(unsigned char *)(a1 + 1145) = v602 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v450 = v11 + 2;
LABEL_921:
          v642 = v450;
          *(unsigned char *)(a1 + 1145) = v451 != 0;
        }
        goto LABEL_1071;
      case 0x50u:
        if (v12 != 130) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v159 = (unsigned __int8 *)(result + 2);
          v642 = result + 2;
          v160 = *(_DWORD **)(a1 + 392);
          if (v160 && (uint64_t v161 = *(int *)(a1 + 384), (int)v161 < *v160))
          {
            *(_DWORD *)(a1 + 384) = v161 + 1;
            uint64_t v162 = *(void *)&v160[2 * v161 + 2];
          }
          else
          {
            uint64_t v163 = sub_12CE0C8(*v632);
            uint64_t v162 = sub_188CDC8((uint64_t)v632, v163);
            v159 = (unsigned __int8 *)v642;
          }
          result = (char *)sub_12CDA20(a3, v162, v159);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1410) {
            goto LABEL_1071;
          }
        }
      case 0x51u:
        if (v12 != 136) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x8000000u;
        v453 = v11 + 1;
        uint64_t v454 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_926;
        }
        int v455 = *v453;
        uint64_t v454 = v454 + (v455 << 7) - 128;
        if (v455 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v454);
          v642 = result;
          *(unsigned char *)(a1 + 1146) = v603 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v453 = v11 + 2;
LABEL_926:
          v642 = v453;
          *(unsigned char *)(a1 + 1146) = v454 != 0;
        }
        goto LABEL_1071;
      case 0x56u:
        if (v12 != 176) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x10000000u;
        v164 = v11 + 1;
        uint64_t v165 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_308;
        }
        int v166 = *v164;
        uint64_t v165 = v165 + (v166 << 7) - 128;
        if (v166 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v165);
          v642 = result;
          *(unsigned char *)(a1 + 1147) = v556 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v164 = v11 + 2;
LABEL_308:
          v642 = v164;
          *(unsigned char *)(a1 + 1147) = v165 != 0;
        }
        goto LABEL_1071;
      case 0x57u:
        if (v12 != 184) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x1000000u;
        v167 = v11 + 1;
        uint64_t v168 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_313;
        }
        int v169 = *v167;
        uint64_t v168 = v168 + (v169 << 7) - 128;
        if (v169 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v168);
          v642 = result;
          *(void *)(a1 + 1136) = v557;
          if (!result) {
            return result;
          }
        }
        else
        {
          v167 = v11 + 2;
LABEL_313:
          v642 = v167;
          *(void *)(a1 + 1136) = v168;
        }
        goto LABEL_1071;
      case 0x58u:
        if (v12 != 192) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 2u;
        v170 = v11 + 1;
        uint64_t v171 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_318;
        }
        int v172 = *v170;
        uint64_t v171 = v171 + (v172 << 7) - 128;
        if (v172 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v171);
          v642 = result;
          *(void *)(a1 + 1152) = v558;
          if (!result) {
            return result;
          }
        }
        else
        {
          v170 = v11 + 2;
LABEL_318:
          v642 = v170;
          *(void *)(a1 + 1152) = v171;
        }
        goto LABEL_1071;
      case 0x59u:
        if (v12 != 202) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 8u;
        uint64_t v173 = *(void *)(a1 + 952);
        if (!v173)
        {
          v174 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v174 = (void *)*v174;
          }
          sub_12CCBF0((uint64_t)v174);
          uint64_t v173 = v175;
          *(void *)(a1 + 952) = v175;
          v11 = v642;
        }
        goto LABEL_324;
      case 0x5Au:
        if (v12 != 208) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x20000000u;
        v456 = v11 + 1;
        uint64_t v457 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_931;
        }
        int v458 = *v456;
        uint64_t v457 = v457 + (v458 << 7) - 128;
        if (v458 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v457);
          v642 = result;
          *(unsigned char *)(a1 + 1148) = v604 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v456 = v11 + 2;
LABEL_931:
          v642 = v456;
          *(unsigned char *)(a1 + 1148) = v457 != 0;
        }
        goto LABEL_1071;
      case 0x5Bu:
        if (v12 != 216) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x40000000u;
        v459 = v11 + 1;
        uint64_t v460 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_936;
        }
        int v461 = *v459;
        uint64_t v460 = v460 + (v461 << 7) - 128;
        if (v461 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v460);
          v642 = result;
          *(unsigned char *)(a1 + 1149) = v605 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v459 = v11 + 2;
LABEL_936:
          v642 = v459;
          *(unsigned char *)(a1 + 1149) = v460 != 0;
        }
        goto LABEL_1071;
      case 0x5Du:
        if (v12 != 234) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v176 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v176 & 0xFFFFFFFFFFFFFFFCLL);
        if (v176) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 728);
        goto LABEL_1069;
      case 0x5Eu:
        if (v12 != 240) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 24) |= 0x80000000;
        v462 = v11 + 1;
        uint64_t v463 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_941;
        }
        int v464 = *v462;
        uint64_t v463 = v463 + (v464 << 7) - 128;
        if (v464 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v463);
          v642 = result;
          *(unsigned char *)(a1 + 1150) = v606 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v462 = v11 + 2;
LABEL_941:
          v642 = v462;
          *(unsigned char *)(a1 + 1150) = v463 != 0;
        }
        goto LABEL_1071;
      case 0x5Fu:
        if (v12 != 250) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x10u;
        uint64_t v445 = *(void *)(a1 + 960);
        if (v445) {
          goto LABEL_948;
        }
        v465 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v465 = (void *)*v465;
        }
        uint64_t v445 = sub_14FB700((uint64_t)v465);
        *(void *)(a1 + 960) = v445;
LABEL_947:
        v11 = v642;
LABEL_948:
        result = (char *)sub_14E7AC8(a3, v445, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x60u:
        if (v12 != 2) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v466 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v466 & 0xFFFFFFFFFFFFFFFCLL);
        if (v466) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 736);
        goto LABEL_1069;
      case 0x61u:
        if (v12 != 10) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x20u;
        v177 = *(void **)(a1 + 968);
        if (!v177)
        {
          v178 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v178 = (void *)*v178;
          }
          v177 = sub_12CCAD4((uint64_t)v178);
          *(void *)(a1 + 968) = v177;
          v11 = v642;
        }
        result = sub_12C9E34(a3, (uint64_t)v177, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x62u:
        if (v12 != 16) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 1u;
        v179 = v11 + 1;
        uint64_t v180 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_339;
        }
        int v181 = *v179;
        uint64_t v180 = v180 + (v181 << 7) - 128;
        if (v181 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v180);
          v642 = result;
          *(unsigned char *)(a1 + 1151) = v559 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v179 = v11 + 2;
LABEL_339:
          v642 = v179;
          *(unsigned char *)(a1 + 1151) = v180 != 0;
        }
        goto LABEL_1071;
      case 0x63u:
        if (v12 != 26) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x40u;
        v147 = *(void **)(a1 + 976);
        if (v147) {
          goto LABEL_274;
        }
        v182 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v182 = (void *)*v182;
        }
        v147 = sub_12CCA5C((uint64_t)v182);
        *(void *)(a1 + 976) = v147;
        goto LABEL_996;
      case 0x65u:
        if (v12 != 42) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x80u;
        uint64_t v173 = *(void *)(a1 + 984);
        if (v173) {
          goto LABEL_324;
        }
        v183 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v183 = (void *)*v183;
        }
        sub_12CCBF0((uint64_t)v183);
        uint64_t v173 = v184;
        *(void *)(a1 + 984) = v184;
        goto LABEL_355;
      case 0x66u:
        if (v12 != 50) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x100u;
        uint64_t v173 = *(void *)(a1 + 992);
        if (v173) {
          goto LABEL_324;
        }
        v185 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v185 = (void *)*v185;
        }
        sub_12CCBF0((uint64_t)v185);
        uint64_t v173 = v186;
        *(void *)(a1 + 992) = v186;
LABEL_355:
        v11 = v642;
LABEL_324:
        result = sub_123AEE4(a3, v173, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x68u:
        if (v12 != 64) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x10u;
        v187 = v11 + 1;
        uint64_t v188 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_361;
        }
        int v189 = *v187;
        uint64_t v188 = v188 + (v189 << 7) - 128;
        if (v189 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v188);
          v642 = result;
          *(unsigned char *)(a1 + 1172) = v560 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v187 = v11 + 2;
LABEL_361:
          v642 = v187;
          *(unsigned char *)(a1 + 1172) = v188 != 0;
        }
        goto LABEL_1071;
      case 0x69u:
        if (v12 != 72) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 4u;
        v467 = v11 + 1;
        uint64_t v468 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_957;
        }
        int v469 = *v467;
        uint64_t v468 = v468 + (v469 << 7) - 128;
        if (v469 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v468);
          v642 = result;
          *(void *)(a1 + 1160) = v607;
          if (!result) {
            return result;
          }
        }
        else
        {
          v467 = v11 + 2;
LABEL_957:
          v642 = v467;
          *(void *)(a1 + 1160) = v468;
        }
        goto LABEL_1071;
      case 0x6Au:
        if (v12 != 82) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x200u;
        uint64_t v24 = *(void *)(a1 + 1000);
        if (!v24)
        {
          v190 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v190 = (void *)*v190;
          }
          uint64_t v24 = sub_12CCB50((uint64_t)v190);
          *(void *)(a1 + 1000) = v24;
          v11 = v642;
        }
LABEL_367:
        result = sub_14E1114(a3, v24, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x6Bu:
        if (v12 != 90) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v191 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v191 & 0xFFFFFFFFFFFFFFFCLL);
        if (v191) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 744);
        goto LABEL_1069;
      case 0x6Cu:
        if (v12 != 98) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v192 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v192 & 0xFFFFFFFFFFFFFFFCLL);
        if (v192) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 752);
        goto LABEL_1069;
      case 0x6Du:
        if (v12 != 106) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v470 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v470 & 0xFFFFFFFFFFFFFFFCLL);
        if (v470) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 760);
        goto LABEL_1069;
      case 0x6Eu:
        if (v12 == 112)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v471 = result[2];
            if (result[2] < 0)
            {
              int v472 = v471 + (result[3] << 7);
              uint64_t v471 = (v472 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v472 - 128));
                uint64_t v471 = v473;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v474 = *(unsigned int *)(a1 + 400);
            if (v474 == *(_DWORD *)(a1 + 404))
            {
              int v475 = v474 + 1;
              v476 = (_DWORD *)(a1 + 400);
              sub_188CA54((unsigned int *)(a1 + 400), v474 + 1);
              *(void *)(*(void *)(a1 + 408) + 8 * v474) = v471;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 408) + 8 * v474) = v471;
              int v475 = v474 + 1;
              v476 = (_DWORD *)(a1 + 400);
            }
            _DWORD *v476 = v475;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1776) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 114) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 400);
        goto LABEL_1313;
      case 0x6Fu:
        if (v12 != 120) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 8u;
        v478 = v11 + 1;
        LODWORD(v477) = *v11;
        if ((v477 & 0x80) == 0) {
          goto LABEL_980;
        }
        int v479 = *v478;
        uint64_t v477 = v477 + (v479 << 7) - 128;
        if (v479 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v477);
          v642 = result;
          *(_DWORD *)(a1 + 1168) = v608;
          if (!result) {
            return result;
          }
        }
        else
        {
          v478 = v11 + 2;
LABEL_980:
          v642 = v478;
          *(_DWORD *)(a1 + 1168) = v477;
        }
        goto LABEL_1071;
      case 0x70u:
        if (v12 != 128) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x20u;
        v193 = v11 + 1;
        uint64_t v194 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_380;
        }
        int v195 = *v193;
        uint64_t v194 = v194 + (v195 << 7) - 128;
        if (v195 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v194);
          v642 = result;
          *(unsigned char *)(a1 + 1173) = v561 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v193 = v11 + 2;
LABEL_380:
          v642 = v193;
          *(unsigned char *)(a1 + 1173) = v194 != 0;
        }
        goto LABEL_1071;
      case 0x71u:
        if (v12 == 136)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v196 = result[2];
            if (result[2] < 0)
            {
              int v197 = v196 + (result[3] << 7);
              uint64_t v196 = (v197 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v197 - 128));
                uint64_t v196 = v198;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v199 = *(unsigned int *)(a1 + 416);
            if (v199 == *(_DWORD *)(a1 + 420))
            {
              int v200 = v199 + 1;
              v201 = (_DWORD *)(a1 + 416);
              sub_188CA54((unsigned int *)(a1 + 416), v199 + 1);
              *(void *)(*(void *)(a1 + 424) + 8 * v199) = v196;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 424) + 8 * v199) = v196;
              int v200 = v199 + 1;
              v201 = (_DWORD *)(a1 + 416);
            }
            _DWORD *v201 = v200;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1928) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 138) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 416);
        goto LABEL_1313;
      case 0x72u:
        if (v12 != 144) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x40u;
        v202 = v11 + 1;
        uint64_t v203 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_399;
        }
        int v204 = *v202;
        uint64_t v203 = v203 + (v204 << 7) - 128;
        if (v204 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v203);
          v642 = result;
          *(unsigned char *)(a1 + 1174) = v562 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v202 = v11 + 2;
LABEL_399:
          v642 = v202;
          *(unsigned char *)(a1 + 1174) = v203 != 0;
        }
        goto LABEL_1071;
      case 0x73u:
        if (v12 != 154) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v480 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v480 & 0xFFFFFFFFFFFFFFFCLL);
        if (v480) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 768);
        goto LABEL_1069;
      case 0x74u:
        if (v12 != 162) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x400u;
        uint64_t v205 = *(void *)(a1 + 1008);
        if (!v205)
        {
          v206 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v206 = (void *)*v206;
          }
          uint64_t v205 = sub_158C0D0((uint64_t)v206);
          *(void *)(a1 + 1008) = v205;
          v11 = v642;
        }
        result = sub_14E7B58(a3, v205, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x75u:
        if (v12 != 168) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x80u;
        v207 = v11 + 1;
        uint64_t v208 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_410;
        }
        int v209 = *v207;
        uint64_t v208 = v208 + (v209 << 7) - 128;
        if (v209 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v208);
          v642 = result;
          *(unsigned char *)(a1 + 1175) = v563 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v207 = v11 + 2;
LABEL_410:
          v642 = v207;
          *(unsigned char *)(a1 + 1175) = v208 != 0;
        }
        goto LABEL_1071;
      case 0x76u:
        if (v12 != 176) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x100u;
        v210 = v11 + 1;
        uint64_t v211 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_415;
        }
        int v212 = *v210;
        uint64_t v211 = v211 + (v212 << 7) - 128;
        if (v212 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v211);
          v642 = result;
          *(unsigned char *)(a1 + 1176) = v564 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v210 = v11 + 2;
LABEL_415:
          v642 = v210;
          *(unsigned char *)(a1 + 1176) = v211 != 0;
        }
        goto LABEL_1071;
      case 0x77u:
        if (v12 == 184)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            int v213 = result[2];
            if (result[2] < 0)
            {
              int v214 = v213 + (result[3] << 7);
              int v213 = v214 - 128;
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v214 - 128));
                int v213 = v215;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v216 = *(unsigned int *)(a1 + 432);
            if (v216 == *(_DWORD *)(a1 + 436))
            {
              int v217 = v216 + 1;
              v218 = (_DWORD *)(a1 + 432);
              sub_188C80C(v635, v216 + 1);
              *(_DWORD *)(*(void *)(a1 + 440) + 4 * v216) = v213;
              result = v642;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 440) + 4 * v216) = v213;
              int v217 = v216 + 1;
              v218 = (_DWORD *)(a1 + 432);
            }
            _DWORD *v218 = v217;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1976) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 186) {
          goto LABEL_1314;
        }
        result = (char *)sub_188C2BC(v635, (unsigned __int8 *)v11, (uint64_t)a3);
        goto LABEL_1070;
      case 0x78u:
        if (v12 != 192) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x200u;
        v219 = v11 + 1;
        uint64_t v220 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_434;
        }
        int v221 = *v219;
        uint64_t v220 = v220 + (v221 << 7) - 128;
        if (v221 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v220);
          v642 = result;
          *(unsigned char *)(a1 + 1177) = v565 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v219 = v11 + 2;
LABEL_434:
          v642 = v219;
          *(unsigned char *)(a1 + 1177) = v220 != 0;
        }
        goto LABEL_1071;
      case 0x79u:
        if (v12 != 202) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v222 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v222 & 0xFFFFFFFFFFFFFFFCLL);
        if (v222) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 776);
        goto LABEL_1069;
      case 0x7Au:
        if (v12 != 208) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x400u;
        v223 = v11 + 1;
        uint64_t v224 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_443;
        }
        int v225 = *v223;
        uint64_t v224 = v224 + (v225 << 7) - 128;
        if (v225 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v224);
          v642 = result;
          *(unsigned char *)(a1 + 1178) = v566 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v223 = v11 + 2;
LABEL_443:
          v642 = v223;
          *(unsigned char *)(a1 + 1178) = v224 != 0;
        }
        goto LABEL_1071;
      case 0x7Bu:
        if (v12 != 218) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v226 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v226 & 0xFFFFFFFFFFFFFFFCLL);
        if (v226) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 784);
        goto LABEL_1069;
      case 0x7Cu:
        if (v12 != 226) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x800u;
        v481 = *(void **)(a1 + 1016);
        if (!v481)
        {
          v482 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v482 = (void *)*v482;
          }
          v481 = sub_12D294C((uint64_t)v482);
          *(void *)(a1 + 1016) = v481;
          v11 = v642;
        }
        result = (char *)sub_14E7BE8(a3, (uint64_t)v481, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x7Du:
        if (v12 == 232)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v227 = result[2];
            if (result[2] < 0)
            {
              int v228 = v227 + (result[3] << 7);
              uint64_t v227 = (v228 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v228 - 128));
                uint64_t v227 = v229;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v230 = *(unsigned int *)(a1 + 448);
            if (v230 == *(_DWORD *)(a1 + 452))
            {
              int v231 = v230 + 1;
              v232 = (_DWORD *)(a1 + 448);
              sub_188CA54((unsigned int *)(a1 + 448), v230 + 1);
              *(void *)(*(void *)(a1 + 456) + 8 * v230) = v227;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 456) + 8 * v230) = v227;
              int v231 = v230 + 1;
              v232 = (_DWORD *)(a1 + 448);
            }
            _DWORD *v232 = v231;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2024) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 234) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 448);
        goto LABEL_1313;
      case 0x7Eu:
        if (v12 != 242) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x1000u;
        v147 = *(void **)(a1 + 1024);
        if (!v147)
        {
          v483 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v483 = (void *)*v483;
          }
          v147 = sub_12CCA5C((uint64_t)v483);
          *(void *)(a1 + 1024) = v147;
LABEL_996:
          v11 = v642;
        }
LABEL_274:
        result = sub_12C8E00(a3, (uint64_t)v147, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x7Fu:
        if (v12 != 250) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x2000u;
        uint64_t v150 = *(void *)(a1 + 1032);
        if (!v150)
        {
          v233 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v233 = (void *)*v233;
          }
          sub_12CCD04((uint64_t)v233);
          uint64_t v150 = v234;
          *(void *)(a1 + 1032) = v234;
          v11 = v642;
        }
LABEL_467:
        result = sub_14E7A38(a3, v150, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x80u:
        if ((_BYTE)v12) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x800u;
        v484 = v11 + 1;
        uint64_t v485 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1002;
        }
        int v486 = *v484;
        uint64_t v485 = v485 + (v486 << 7) - 128;
        if (v486 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v485);
          v642 = result;
          *(unsigned char *)(a1 + 1179) = v609 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v484 = v11 + 2;
LABEL_1002:
          v642 = v484;
          *(unsigned char *)(a1 + 1179) = v485 != 0;
        }
        goto LABEL_1071;
      case 0x81u:
        if (v12 != 8) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x1000u;
        v487 = v11 + 1;
        uint64_t v488 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1007;
        }
        int v489 = *v487;
        uint64_t v488 = v488 + (v489 << 7) - 128;
        if (v489 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v488);
          v642 = result;
          *(unsigned char *)(a1 + 1180) = v610 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v487 = v11 + 2;
LABEL_1007:
          v642 = v487;
          *(unsigned char *)(a1 + 1180) = v488 != 0;
        }
        goto LABEL_1071;
      case 0x82u:
        if (v12 != 18) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v235 = (unsigned __int8 *)(result + 2);
          v642 = result + 2;
          v236 = *(_DWORD **)(a1 + 480);
          if (v236 && (uint64_t v237 = *(int *)(a1 + 472), (int)v237 < *v236))
          {
            *(_DWORD *)(a1 + 472) = v237 + 1;
            uint64_t v238 = *(void *)&v236[2 * v237 + 2];
          }
          else
          {
            v239 = sub_14A2670(*v633);
            uint64_t v238 = sub_188CDC8((uint64_t)v633, (uint64_t)v239);
            v235 = (unsigned __int8 *)v642;
          }
          result = sub_14A17F4(a3, v238, v235);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2194) {
            goto LABEL_1071;
          }
        }
      case 0x83u:
        if (v12 != 24) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x2000u;
        v490 = v11 + 1;
        uint64_t v491 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1012;
        }
        int v492 = *v490;
        uint64_t v491 = v491 + (v492 << 7) - 128;
        if (v492 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v491);
          v642 = result;
          *(unsigned char *)(a1 + 1181) = v611 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v490 = v11 + 2;
LABEL_1012:
          v642 = v490;
          *(unsigned char *)(a1 + 1181) = v491 != 0;
        }
        goto LABEL_1071;
      case 0x84u:
        if (v12 != 32) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x4000u;
        v493 = v11 + 1;
        uint64_t v494 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1017;
        }
        int v495 = *v493;
        uint64_t v494 = v494 + (v495 << 7) - 128;
        if (v495 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v494);
          v642 = result;
          *(unsigned char *)(a1 + 1182) = v612 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v493 = v11 + 2;
LABEL_1017:
          v642 = v493;
          *(unsigned char *)(a1 + 1182) = v494 != 0;
        }
        goto LABEL_1071;
      case 0x85u:
        if (v12 != 40) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x8000u;
        v240 = v11 + 1;
        uint64_t v241 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_482;
        }
        int v242 = *v240;
        uint64_t v241 = v241 + (v242 << 7) - 128;
        if (v242 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v241);
          v642 = result;
          *(unsigned char *)(a1 + 1183) = v567 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v240 = v11 + 2;
LABEL_482:
          v642 = v240;
          *(unsigned char *)(a1 + 1183) = v241 != 0;
        }
        goto LABEL_1071;
      case 0x86u:
        if (v12 != 49) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x10000u;
        *(void *)(a1 + 1184) = *(void *)v11;
        v642 = v11 + 8;
        goto LABEL_1071;
      case 0x87u:
        if (v12 != 56) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x20000u;
        v243 = v11 + 1;
        uint64_t v244 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_489;
        }
        int v245 = *v243;
        uint64_t v244 = v244 + (v245 << 7) - 128;
        if (v245 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v244);
          v642 = result;
          *(unsigned char *)(a1 + 1192) = v568 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v243 = v11 + 2;
LABEL_489:
          v642 = v243;
          *(unsigned char *)(a1 + 1192) = v244 != 0;
        }
        goto LABEL_1071;
      case 0x88u:
        if (v12 != 64) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x40000u;
        v246 = v11 + 1;
        uint64_t v247 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_494;
        }
        int v248 = *v246;
        uint64_t v247 = v247 + (v248 << 7) - 128;
        if (v248 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v247);
          v642 = result;
          *(unsigned char *)(a1 + 1193) = v569 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v246 = v11 + 2;
LABEL_494:
          v642 = v246;
          *(unsigned char *)(a1 + 1193) = v247 != 0;
        }
        goto LABEL_1071;
      case 0x89u:
        if (v12 != 74) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x4000u;
        uint64_t v496 = *(void *)(a1 + 1040);
        if (!v496)
        {
          v497 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v497 = (void *)*v497;
          }
          uint64_t v496 = sub_123239C((uint64_t)v497);
          *(void *)(a1 + 1040) = v496;
          v11 = v642;
        }
        result = (char *)sub_14E7C78(a3, v496, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x8Au:
        if (v12 != 82) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x8000u;
        uint64_t v498 = *(void *)(a1 + 1048);
        if (!v498)
        {
          v499 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v499 = (void *)*v499;
          }
          uint64_t v498 = sub_12324D4((uint64_t)v499);
          *(void *)(a1 + 1048) = v498;
          v11 = v642;
        }
        result = (char *)sub_14E7D08(a3, v498, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x8Bu:
        if (v12 != 88) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x80000u;
        v249 = v11 + 1;
        uint64_t v250 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_499;
        }
        int v251 = *v249;
        uint64_t v250 = v250 + (v251 << 7) - 128;
        if (v251 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v250);
          v642 = result;
          *(unsigned char *)(a1 + 1194) = v570 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v249 = v11 + 2;
LABEL_499:
          v642 = v249;
          *(unsigned char *)(a1 + 1194) = v250 != 0;
        }
        goto LABEL_1071;
      case 0x8Cu:
        if (v12 != 96) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x100000u;
        v252 = v11 + 1;
        uint64_t v253 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_504;
        }
        int v254 = *v252;
        uint64_t v253 = v253 + (v254 << 7) - 128;
        if (v254 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v253);
          v642 = result;
          *(unsigned char *)(a1 + 1195) = v571 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v252 = v11 + 2;
LABEL_504:
          v642 = v252;
          *(unsigned char *)(a1 + 1195) = v253 != 0;
        }
        goto LABEL_1071;
      case 0x8Du:
        if (v12 != 104) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x200000u;
        v500 = v11 + 1;
        uint64_t v501 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1034;
        }
        int v502 = *v500;
        uint64_t v501 = v501 + (v502 << 7) - 128;
        if (v502 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v501);
          v642 = result;
          *(unsigned char *)(a1 + 1196) = v613 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v500 = v11 + 2;
LABEL_1034:
          v642 = v500;
          *(unsigned char *)(a1 + 1196) = v501 != 0;
        }
        goto LABEL_1071;
      case 0x8Eu:
        if (v12 != 114) {
          goto LABEL_1314;
        }
        result = v11 - 2;
        while (1)
        {
          v255 = (unsigned __int8 *)(result + 2);
          v642 = result + 2;
          v256 = *(_DWORD **)(a1 + 504);
          if (v256 && (uint64_t v257 = *(int *)(a1 + 496), (int)v257 < *v256))
          {
            *(_DWORD *)(a1 + 496) = v257 + 1;
            uint64_t v258 = *(void *)&v256[2 * v257 + 2];
          }
          else
          {
            uint64_t v259 = sub_15C2114(*v627);
            uint64_t v258 = sub_188CDC8((uint64_t)v627, v259);
            v255 = (unsigned __int8 *)v642;
          }
          result = (char *)sub_11A058C(a3, v258, v255);
          v642 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2290) {
            goto LABEL_1071;
          }
        }
      case 0x8Fu:
        if (v12 != 120) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x400000u;
        v260 = v11 + 1;
        uint64_t v261 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_519;
        }
        int v262 = *v260;
        uint64_t v261 = v261 + (v262 << 7) - 128;
        if (v262 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v261);
          v642 = result;
          *(unsigned char *)(a1 + 1197) = v572 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v260 = v11 + 2;
LABEL_519:
          v642 = v260;
          *(unsigned char *)(a1 + 1197) = v261 != 0;
        }
        goto LABEL_1071;
      case 0x90u:
        if (v12 != 130) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v503 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v503 & 0xFFFFFFFFFFFFFFFCLL);
        if (v503) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 792);
        goto LABEL_1069;
      case 0x91u:
        if (v12 != 138) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x10000u;
        uint64_t v504 = *(void *)(a1 + 1056);
        if (!v504)
        {
          v505 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v505 = (void *)*v505;
          }
          uint64_t v504 = sub_1478B8C((uint64_t)v505);
          *(void *)(a1 + 1056) = v504;
          v11 = v642;
        }
        result = (char *)sub_1466AD0(a3, v504, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0x92u:
        if (v12 != 144) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x800000u;
        v263 = v11 + 1;
        uint64_t v264 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_524;
        }
        int v265 = *v263;
        uint64_t v264 = v264 + (v265 << 7) - 128;
        if (v265 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v264);
          v642 = result;
          *(unsigned char *)(a1 + 1198) = v573 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v263 = v11 + 2;
LABEL_524:
          v642 = v263;
          *(unsigned char *)(a1 + 1198) = v264 != 0;
        }
        goto LABEL_1071;
      case 0x93u:
        if (v12 != 152) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x1000000u;
        v266 = v11 + 1;
        uint64_t v267 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_529;
        }
        int v268 = *v266;
        uint64_t v267 = v267 + (v268 << 7) - 128;
        if (v268 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v267);
          v642 = result;
          *(unsigned char *)(a1 + 1199) = v574 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v266 = v11 + 2;
LABEL_529:
          v642 = v266;
          *(unsigned char *)(a1 + 1199) = v267 != 0;
        }
        goto LABEL_1071;
      case 0x94u:
        if (v12 != 160) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x2000000u;
        v269 = v11 + 1;
        uint64_t v270 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_534;
        }
        int v271 = *v269;
        uint64_t v270 = v270 + (v271 << 7) - 128;
        if (v271 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v270);
          v642 = result;
          *(unsigned char *)(a1 + 1200) = v575 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v269 = v11 + 2;
LABEL_534:
          v642 = v269;
          *(unsigned char *)(a1 + 1200) = v270 != 0;
        }
        goto LABEL_1071;
      case 0x95u:
        if (v12 != 168) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x4000000u;
        v272 = v11 + 1;
        uint64_t v273 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_539;
        }
        int v274 = *v272;
        uint64_t v273 = v273 + (v274 << 7) - 128;
        if (v274 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v273);
          v642 = result;
          *(unsigned char *)(a1 + 1201) = v576 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v272 = v11 + 2;
LABEL_539:
          v642 = v272;
          *(unsigned char *)(a1 + 1201) = v273 != 0;
        }
        goto LABEL_1071;
      case 0x96u:
        if (v12 != 176) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x8000000u;
        v275 = v11 + 1;
        uint64_t v276 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_544;
        }
        int v277 = *v275;
        uint64_t v276 = v276 + (v277 << 7) - 128;
        if (v277 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v276);
          v642 = result;
          *(unsigned char *)(a1 + 1202) = v577 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v275 = v11 + 2;
LABEL_544:
          v642 = v275;
          *(unsigned char *)(a1 + 1202) = v276 != 0;
        }
        goto LABEL_1071;
      case 0x97u:
        if (v12 != 186) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x20000u;
        uint64_t v330 = *(void *)(a1 + 1064);
        if (v330) {
          goto LABEL_1051;
        }
        v506 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v506 = (void *)*v506;
        }
        uint64_t v330 = sub_15A5754((uint64_t)v506);
        *(void *)(a1 + 1064) = v330;
        goto LABEL_1050;
      case 0x98u:
        if (v12 != 192) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x10000000u;
        v278 = v11 + 1;
        uint64_t v279 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_549;
        }
        int v280 = *v278;
        uint64_t v279 = v279 + (v280 << 7) - 128;
        if (v280 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v279);
          v642 = result;
          *(unsigned char *)(a1 + 1203) = v578 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v278 = v11 + 2;
LABEL_549:
          v642 = v278;
          *(unsigned char *)(a1 + 1203) = v279 != 0;
        }
        goto LABEL_1071;
      case 0x99u:
        if (v12 != 202) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v507 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v507 & 0xFFFFFFFFFFFFFFFCLL);
        if (v507) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 800);
        goto LABEL_1069;
      case 0x9Au:
        if (v12 != 210) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        uint64_t v508 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v508 & 0xFFFFFFFFFFFFFFFCLL);
        if (v508) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 808);
        goto LABEL_1069;
      case 0x9Bu:
        if (v12 != 216) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x20000000u;
        v509 = v11 + 1;
        uint64_t v510 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1064;
        }
        int v511 = *v509;
        uint64_t v510 = v510 + (v511 << 7) - 128;
        if (v511 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v510);
          v642 = result;
          *(unsigned char *)(a1 + 1204) = v614 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v509 = v11 + 2;
LABEL_1064:
          v642 = v509;
          *(unsigned char *)(a1 + 1204) = v510 != 0;
        }
        goto LABEL_1071;
      case 0x9Cu:
        if (v12 != 226) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000u;
        uint64_t v281 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v281 & 0xFFFFFFFFFFFFFFFCLL);
        if (v281) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 816);
        goto LABEL_1069;
      case 0x9Du:
        if (v12 != 234) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000u;
        uint64_t v512 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v512 & 0xFFFFFFFFFFFFFFFCLL);
        if (v512) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 824);
        goto LABEL_1069;
      case 0x9Eu:
        if (v12 != 242) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x100000u;
        uint64_t v282 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v282 & 0xFFFFFFFFFFFFFFFCLL);
        if (v282) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 832);
        goto LABEL_1069;
      case 0x9Fu:
        if (v12 != 250) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x200000u;
        uint64_t v283 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v283 & 0xFFFFFFFFFFFFFFFCLL);
        if (v283) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 840);
        goto LABEL_1069;
      case 0xA0u:
        if ((_BYTE)v12) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x40000000u;
        v515 = v11 + 1;
        uint64_t v516 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1077;
        }
        int v517 = *v515;
        uint64_t v516 = v516 + (v517 << 7) - 128;
        if (v517 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v516);
          v642 = result;
          *(unsigned char *)(a1 + 1205) = v615 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v515 = v11 + 2;
LABEL_1077:
          v642 = v515;
          *(unsigned char *)(a1 + 1205) = v516 != 0;
        }
        goto LABEL_1071;
      case 0xA1u:
        if (v12 != 8) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 28) |= 0x80000000;
        v518 = v11 + 1;
        uint64_t v519 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_1082;
        }
        int v520 = *v518;
        uint64_t v519 = v519 + (v520 << 7) - 128;
        if (v520 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v519);
          v642 = result;
          *(unsigned char *)(a1 + 1206) = v616 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v518 = v11 + 2;
LABEL_1082:
          v642 = v518;
          *(unsigned char *)(a1 + 1206) = v519 != 0;
        }
        goto LABEL_1071;
      case 0xA2u:
        if (v12 != 16) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 32) |= 1u;
        v284 = v11 + 1;
        uint64_t v285 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_566;
        }
        int v286 = *v284;
        uint64_t v285 = v285 + (v286 << 7) - 128;
        if (v286 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v285);
          v642 = result;
          *(unsigned char *)(a1 + 1207) = v579 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v284 = v11 + 2;
LABEL_566:
          v642 = v284;
          *(unsigned char *)(a1 + 1207) = v285 != 0;
        }
        goto LABEL_1071;
      case 0xA3u:
        if (v12 == 24)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v287 = result[2];
            if (result[2] < 0)
            {
              int v288 = v287 + (result[3] << 7);
              uint64_t v287 = (v288 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v288 - 128));
                uint64_t v287 = v289;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v290 = *(unsigned int *)(a1 + 512);
            if (v290 == *(_DWORD *)(a1 + 516))
            {
              unsigned int v291 = v290 + 1;
              sub_188CA54(v10, v290 + 1);
              *(void *)(*(void *)(a1 + 520) + 8 * v290) = v287;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 520) + 8 * v290) = v287;
              unsigned int v291 = v290 + 1;
            }
            unsigned int *v10 = v291;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2712) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 26) {
          goto LABEL_1314;
        }
        v618 = v10;
        goto LABEL_1313;
      case 0xA4u:
        if (v12 == 32)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v521 = result[2];
            if (result[2] < 0)
            {
              int v522 = v521 + (result[3] << 7);
              uint64_t v521 = (v522 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v522 - 128));
                uint64_t v521 = v523;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v524 = *(unsigned int *)(a1 + 528);
            if (v524 == *(_DWORD *)(a1 + 532))
            {
              int v525 = v524 + 1;
              v526 = (_DWORD *)(a1 + 528);
              sub_188CA54((unsigned int *)(a1 + 528), v524 + 1);
              *(void *)(*(void *)(a1 + 536) + 8 * v524) = v521;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 536) + 8 * v524) = v521;
              int v525 = v524 + 1;
              v526 = (_DWORD *)(a1 + 528);
            }
            _DWORD *v526 = v525;
            if (!result) {
              return result;
            }
            v10 = (unsigned int *)(a1 + 512);
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2720) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 34) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 528);
        goto LABEL_1313;
      case 0xA5u:
        if (v12 == 40)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v292 = result[2];
            if (result[2] < 0)
            {
              int v293 = v292 + (result[3] << 7);
              uint64_t v292 = (v293 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v293 - 128));
                uint64_t v292 = v294;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v295 = *(unsigned int *)(a1 + 544);
            if (v295 == *(_DWORD *)(a1 + 548))
            {
              unsigned int v296 = v295 + 1;
              sub_188CA54(v9, v295 + 1);
              *(void *)(*(void *)(a1 + 552) + 8 * v295) = v292;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 552) + 8 * v295) = v292;
              unsigned int v296 = v295 + 1;
            }
            unsigned int *v9 = v296;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2728) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 42) {
          goto LABEL_1314;
        }
        v618 = v9;
        goto LABEL_1313;
      case 0xA6u:
        if (v12 == 48)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v297 = result[2];
            if (result[2] < 0)
            {
              int v298 = v297 + (result[3] << 7);
              uint64_t v297 = (v298 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v298 - 128));
                uint64_t v297 = v299;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v300 = *(unsigned int *)(a1 + 560);
            if (v300 == *(_DWORD *)(a1 + 564))
            {
              int v301 = v300 + 1;
              v302 = (_DWORD *)(a1 + 560);
              sub_188CA54((unsigned int *)(a1 + 560), v300 + 1);
              *(void *)(*(void *)(a1 + 568) + 8 * v300) = v297;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 568) + 8 * v300) = v297;
              int v301 = v300 + 1;
              v302 = (_DWORD *)(a1 + 560);
            }
            _DWORD *v302 = v301;
            if (!result) {
              return result;
            }
            v9 = (unsigned int *)(a1 + 544);
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2736) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 50) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 560);
        goto LABEL_1313;
      case 0xA7u:
        if (v12 == 56)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v303 = result[2];
            if (result[2] < 0)
            {
              int v304 = v303 + (result[3] << 7);
              uint64_t v303 = (v304 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v304 - 128));
                uint64_t v303 = v305;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v306 = *(unsigned int *)(a1 + 576);
            if (v306 == *(_DWORD *)(a1 + 580))
            {
              unsigned int v307 = v306 + 1;
              sub_188CA54(v8, v306 + 1);
              *(void *)(*(void *)(a1 + 584) + 8 * v306) = v303;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 584) + 8 * v306) = v303;
              unsigned int v307 = v306 + 1;
            }
            unsigned int *v8 = v307;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2744) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 58) {
          goto LABEL_1314;
        }
        v618 = v8;
        goto LABEL_1313;
      case 0xA8u:
        if (v12 == 64)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v308 = result[2];
            if (result[2] < 0)
            {
              int v309 = v308 + (result[3] << 7);
              uint64_t v308 = (v309 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v309 - 128));
                uint64_t v308 = v310;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v311 = *(unsigned int *)(a1 + 592);
            if (v311 == *(_DWORD *)(a1 + 596))
            {
              int v312 = v311 + 1;
              v313 = (_DWORD *)(a1 + 592);
              sub_188CA54((unsigned int *)(a1 + 592), v311 + 1);
              *(void *)(*(void *)(a1 + 600) + 8 * v311) = v308;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 600) + 8 * v311) = v308;
              int v312 = v311 + 1;
              v313 = (_DWORD *)(a1 + 592);
            }
            _DWORD *v313 = v312;
            if (!result) {
              return result;
            }
            v8 = (unsigned int *)(a1 + 576);
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2752) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 66) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 592);
        goto LABEL_1313;
      case 0xA9u:
        if (v12 == 72)
        {
          v314 = v11 - 2;
          while (1)
          {
            v642 = v314 + 2;
            unint64_t v315 = v314[2];
            v316 = v314 + 3;
            if (v314[2] < 0)
            {
              int v317 = *v316;
              int v318 = v315 + (v317 << 7);
              unint64_t v315 = (v318 - 128);
              if (v317 < 0)
              {
                result = (char *)sub_188C138((uint64_t)(v314 + 2), (v318 - 128));
                v642 = result;
                if (!result) {
                  return result;
                }
                unint64_t v315 = v321;
                goto LABEL_643;
              }
              v316 = v314 + 4;
            }
            v642 = v316;
LABEL_643:
            if (sub_1520678(v315))
            {
              uint64_t v319 = *(unsigned int *)(a1 + 608);
              if (v319 == *(_DWORD *)(a1 + 612))
              {
                unsigned int v320 = v319 + 1;
                sub_188C80C(v7, v319 + 1);
                *(_DWORD *)(*(void *)(a1 + 616) + 4 * v319) = v315;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 616) + 4 * v319) = v315;
                unsigned int v320 = v319 + 1;
              }
              unsigned int *v7 = v320;
            }
            else
            {
              if (*v634) {
                v322 = (std::string *)((*v634 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v322 = (std::string *)sub_188DBD8(v634);
              }
              sub_188C020(169, v315, v322);
            }
            v314 = v642;
            if (*(void *)a3 <= (unint64_t)v642 || *(_WORD *)v642 != 2760) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 74) {
          goto LABEL_1314;
        }
        *(void *)&long long v643 = v7;
        *((void *)&v643 + 1) = sub_1520678;
        uint64_t v644 = a1 + 8;
        int v619 = 169;
        goto LABEL_1306;
      case 0xAAu:
        if (v12 != 82) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x400000u;
        uint64_t v323 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v323 & 0xFFFFFFFFFFFFFFFCLL);
        if (v323) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 848);
        goto LABEL_1069;
      case 0xABu:
        if (v12 == 88)
        {
          result = v11 - 2;
          while (1)
          {
            v642 = result + 2;
            uint64_t v324 = result[2];
            if (result[2] < 0)
            {
              int v325 = v324 + (result[3] << 7);
              uint64_t v324 = (v325 - 128);
              if (result[3] < 0)
              {
                result = (char *)sub_188C138((uint64_t)(result + 2), (v325 - 128));
                uint64_t v324 = v326;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            v642 = result;
            uint64_t v327 = *(unsigned int *)(a1 + 624);
            if (v327 == *(_DWORD *)(a1 + 628))
            {
              int v328 = v327 + 1;
              v329 = (_DWORD *)(a1 + 624);
              sub_188CA54((unsigned int *)(a1 + 624), v327 + 1);
              *(void *)(*(void *)(a1 + 632) + 8 * v327) = v324;
              result = v642;
            }
            else
            {
              *(void *)(*(void *)(a1 + 632) + 8 * v327) = v324;
              int v328 = v327 + 1;
              v329 = (_DWORD *)(a1 + 624);
            }
            _DWORD *v329 = v328;
            if (!result) {
              return result;
            }
            v7 = (unsigned int *)(a1 + 608);
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2776) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 90) {
          goto LABEL_1314;
        }
        v618 = (unsigned int *)(a1 + 624);
        goto LABEL_1313;
      case 0xACu:
        if (v12 != 98) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x40000u;
        uint64_t v330 = *(void *)(a1 + 1072);
        if (v330) {
          goto LABEL_1051;
        }
        v331 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v634) {
          v331 = (void *)*v331;
        }
        uint64_t v330 = sub_15A5754((uint64_t)v331);
        *(void *)(a1 + 1072) = v330;
LABEL_1050:
        v11 = v642;
LABEL_1051:
        result = sub_14E7D98(a3, v330, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0xADu:
        if (v12 != 104) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 32) |= 8u;
        v332 = v11 + 1;
        uint64_t v333 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_684;
        }
        int v334 = *v332;
        uint64_t v333 = v333 + (v334 << 7) - 128;
        if (v334 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v333);
          v642 = result;
          *(unsigned char *)(a1 + 1210) = v580 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v332 = v11 + 2;
LABEL_684:
          v642 = v332;
          *(unsigned char *)(a1 + 1210) = v333 != 0;
        }
        goto LABEL_1071;
      case 0xAEu:
        if (v12 != 114) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 20) |= 0x80000u;
        uint64_t v335 = *(void *)(a1 + 1080);
        if (!v335)
        {
          v336 = (void *)(*v634 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v634) {
            v336 = (void *)*v336;
          }
          uint64_t v335 = sub_15C1918((uint64_t)v336);
          *(void *)(a1 + 1080) = v335;
          v11 = v642;
        }
        result = sub_1198F14(a3, v335, (unsigned __int8 *)v11);
        goto LABEL_1070;
      case 0xAFu:
        if (v12 == 120)
        {
          v337 = v11 - 2;
          while (1)
          {
            v642 = v337 + 2;
            unint64_t v338 = v337[2];
            v339 = v337 + 3;
            if (v337[2] < 0)
            {
              int v340 = *v339;
              int v341 = v338 + (v340 << 7);
              unint64_t v338 = (v341 - 128);
              if (v340 < 0)
              {
                result = (char *)sub_188C138((uint64_t)(v337 + 2), (v341 - 128));
                v642 = result;
                if (!result) {
                  return result;
                }
                unint64_t v338 = v345;
                goto LABEL_697;
              }
              v339 = v337 + 4;
            }
            v642 = v339;
LABEL_697:
            if (sub_140B640(v338))
            {
              uint64_t v342 = *(unsigned int *)(a1 + 640);
              if (v342 == *(_DWORD *)(a1 + 644))
              {
                int v343 = v342 + 1;
                v344 = (_DWORD *)(a1 + 640);
                sub_188C80C((unsigned int *)(a1 + 640), v342 + 1);
                *(_DWORD *)(*(void *)(a1 + 648) + 4 * v342) = v338;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 648) + 4 * v342) = v338;
                int v343 = v342 + 1;
                v344 = (_DWORD *)(a1 + 640);
              }
              _DWORD *v344 = v343;
            }
            else
            {
              if (*v634) {
                v346 = (std::string *)((*v634 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                v346 = (std::string *)sub_188DBD8(v634);
              }
              sub_188C020(175, v338, v346);
            }
            v337 = v642;
            if (*(void *)a3 <= (unint64_t)v642 || *(_WORD *)v642 != 2808) {
              goto LABEL_1071;
            }
          }
        }
        if (v12 != 122) {
          goto LABEL_1314;
        }
        *(void *)&long long v643 = a1 + 640;
        *((void *)&v643 + 1) = sub_140B640;
        uint64_t v644 = a1 + 8;
        int v619 = 175;
LABEL_1306:
        int v645 = v619;
        result = sub_1112E88((uint64_t)a3, v11, &v643);
        goto LABEL_1070;
      case 0xB0u:
        if (v12 != 128) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 32) |= 0x10u;
        v347 = v11 + 1;
        uint64_t v348 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_715;
        }
        int v349 = *v347;
        uint64_t v348 = v348 + (v349 << 7) - 128;
        if (v349 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v348);
          v642 = result;
          *(unsigned char *)(a1 + 1211) = v581 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v347 = v11 + 2;
LABEL_715:
          v642 = v347;
          *(unsigned char *)(a1 + 1211) = v348 != 0;
        }
        goto LABEL_1071;
      case 0xB1u:
        if (v12 != 136) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 32) |= 0x20u;
        v350 = v11 + 1;
        uint64_t v351 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_720;
        }
        int v352 = *v350;
        uint64_t v351 = v351 + (v352 << 7) - 128;
        if (v352 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v351);
          v642 = result;
          *(unsigned char *)(a1 + 1212) = v582 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v350 = v11 + 2;
LABEL_720:
          v642 = v350;
          *(unsigned char *)(a1 + 1212) = v351 != 0;
        }
        goto LABEL_1071;
      case 0xB2u:
        if (v12 != 144)
        {
          if (v12 == 146)
          {
            v618 = (unsigned int *)(a1 + 656);
LABEL_1313:
            result = (char *)sub_188C2EC(v618, (unsigned __int8 *)v11, (uint64_t)a3);
          }
          else
          {
LABEL_1314:
            if (v12) {
              BOOL v620 = (v12 & 7) == 4;
            }
            else {
              BOOL v620 = 1;
            }
            if (v620)
            {
              if (!v11) {
                return 0;
              }
              a3[10].i32[0] = v12 - 1;
              return v11;
            }
            if (*v634)
            {
              v621 = (std::string *)((*v634 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v621 = (std::string *)sub_188DBD8(v634);
              v11 = v642;
            }
            result = (char *)sub_1885AC0(v12, v621, v11, a3);
          }
LABEL_1070:
          v642 = result;
          if (!result) {
            return result;
          }
LABEL_1071:
          int v514 = sub_11947B8((uint64_t)a3, &v642, a3[11].i32[1]);
          result = v642;
          if (v514) {
            return result;
          }
          continue;
        }
        result = v11 - 2;
        while (1)
        {
          v642 = result + 2;
          uint64_t v353 = result[2];
          if (result[2] < 0)
          {
            int v354 = v353 + (result[3] << 7);
            uint64_t v353 = (v354 - 128);
            if (result[3] < 0)
            {
              result = (char *)sub_188C138((uint64_t)(result + 2), (v354 - 128));
              uint64_t v353 = v355;
            }
            else
            {
              result += 4;
            }
          }
          else
          {
            result += 3;
          }
          v642 = result;
          uint64_t v356 = *(unsigned int *)(a1 + 656);
          if (v356 == *(_DWORD *)(a1 + 660))
          {
            int v357 = v356 + 1;
            v358 = (_DWORD *)(a1 + 656);
            sub_188CA54((unsigned int *)(a1 + 656), v356 + 1);
            *(void *)(*(void *)(a1 + 664) + 8 * v356) = v353;
            result = v642;
          }
          else
          {
            *(void *)(*(void *)(a1 + 664) + 8 * v356) = v353;
            int v357 = v356 + 1;
            v358 = (_DWORD *)(a1 + 656);
          }
          _DWORD *v358 = v357;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 2960) {
            goto LABEL_1071;
          }
        }
      case 0xB3u:
        if (v12 != 154) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 16) |= 0x800000u;
        uint64_t v359 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v359 & 0xFFFFFFFFFFFFFFFCLL);
        if (v359) {
          v39 = (uint64_t *)*v39;
        }
        v40 = (void *)(a1 + 856);
LABEL_1069:
        v513 = (std::string *)sub_1880F84(v40, v39);
        result = (char *)sub_188C244(v513, v642, (uint64_t)a3);
        goto LABEL_1070;
      case 0xB4u:
        if (v12 != 160) {
          goto LABEL_1314;
        }
        v360 = v11 + 1;
        unint64_t v361 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_743;
        }
        int v362 = *v360;
        int v363 = v361 + (v362 << 7);
        unint64_t v361 = (v363 - 128);
        if (v362 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, (v363 - 128));
          v642 = result;
          if (!result) {
            return result;
          }
          unint64_t v361 = v583;
        }
        else
        {
          v360 = v11 + 2;
LABEL_743:
          v642 = v360;
        }
        if (sub_1369B8C(v361))
        {
          *(_DWORD *)(a1 + 32) |= 0x80u;
          *(_DWORD *)(a1 + 1216) = v361;
        }
        else
        {
          if (*v634) {
            v624 = (std::string *)((*v634 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v624 = (std::string *)sub_188DBD8(v634);
          }
          sub_188C020(180, v361, v624);
          v8 = (unsigned int *)(a1 + 576);
          v7 = (unsigned int *)(a1 + 608);
          v10 = (unsigned int *)(a1 + 512);
          v9 = (unsigned int *)(a1 + 544);
        }
        goto LABEL_1071;
      case 0xB5u:
        if (v12 != 168) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 32) |= 0x40u;
        v364 = v11 + 1;
        uint64_t v365 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_750;
        }
        int v366 = *v364;
        uint64_t v365 = v365 + (v366 << 7) - 128;
        if (v366 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v365);
          v642 = result;
          *(unsigned char *)(a1 + 1213) = v584 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v364 = v11 + 2;
LABEL_750:
          v642 = v364;
          *(unsigned char *)(a1 + 1213) = v365 != 0;
        }
        goto LABEL_1071;
      case 0xB6u:
        if (v12 != 176) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 32) |= 2u;
        v367 = v11 + 1;
        uint64_t v368 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_755;
        }
        int v369 = *v367;
        uint64_t v368 = v368 + (v369 << 7) - 128;
        if (v369 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v368);
          v642 = result;
          *(unsigned char *)(a1 + 1208) = v585 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v367 = v11 + 2;
LABEL_755:
          v642 = v367;
          *(unsigned char *)(a1 + 1208) = v368 != 0;
        }
        goto LABEL_1071;
      case 0xB7u:
        if (v12 != 184) {
          goto LABEL_1314;
        }
        *(_DWORD *)(a1 + 32) |= 4u;
        v370 = v11 + 1;
        uint64_t v371 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_760;
        }
        int v372 = *v370;
        uint64_t v371 = v371 + (v372 << 7) - 128;
        if (v372 < 0)
        {
          result = (char *)sub_188C138((uint64_t)v11, v371);
          v642 = result;
          *(unsigned char *)(a1 + 1209) = v586 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v370 = v11 + 2;
LABEL_760:
          v642 = v370;
          *(unsigned char *)(a1 + 1209) = v371 != 0;
        }
        goto LABEL_1071;
      default:
        goto LABEL_1314;
    }
  }
}

char *sub_14E7888(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    result = sub_15130B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14E7918(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14EF4E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14E79A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D1EE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14E7A38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CC19C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14E7AC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14E0414(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14E7B58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_158B668(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14E7BE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D23F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14E7C78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12308FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14E7D08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1231C14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14E7D98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15A5208(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14E7E28(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        v10 = __dst + 2;
      }
      __dst = sub_1513498(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 864);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 40);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      unsigned int v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      unsigned int v14 = __dst + 2;
    }
    __dst = sub_12C9EC4(v12, v14, a3);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 64);
  if ((int)v15 >= 1)
  {
    for (uint64_t j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v17 = *(void *)(*(void *)(a1 + 72) + 8 * j);
      *__dst = 24;
      __dst[1] = v17;
      if (v17 > 0x7F)
      {
        __dst[1] = v17 | 0x80;
        unint64_t v18 = v17 >> 7;
        __dst[2] = v17 >> 7;
        __dst += 3;
        if (v17 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v19 = v18 >> 14;
            v18 >>= 7;
            *__dst++ = v18;
          }
          while (v19);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 672) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v20 = *(_DWORD *)(a1 + 20);
  if ((v20 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v21 = *(unsigned char *)(a1 + 1088);
    *__dst = 56;
    __dst[1] = v21;
    __dst += 2;
  }
  if ((v20 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v22 = *(unsigned char *)(a1 + 1089);
    *__dst = 64;
    __dst[1] = v22;
    __dst += 2;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 80);
  if ((int)v23 >= 1)
  {
    for (uint64_t k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v25 = *(void *)(*(void *)(a1 + 88) + 8 * k);
      *__dst = 72;
      __dst[1] = v25;
      if (v25 > 0x7F)
      {
        __dst[1] = v25 | 0x80;
        unint64_t v26 = v25 >> 7;
        __dst[2] = v25 >> 7;
        __dst += 3;
        if (v25 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v27 = v26 >> 14;
            v26 >>= 7;
            *__dst++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) != 0) {
    __dst = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 680) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v28 = *(_DWORD *)(a1 + 20);
  if ((v28 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v29 = *(unsigned char *)(a1 + 1090);
    *__dst = 96;
    __dst[1] = v29;
    __dst += 2;
  }
  int v30 = *(_DWORD *)(a1 + 104);
  if (v30)
  {
    for (int m = 0; m != v30; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *__dst = 106;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      __dst[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, __dst + 1);
      }
      else {
        uint64_t v34 = __dst + 2;
      }
      __dst = sub_149FD00(v32, v34, a3);
    }
  }
  if ((v28 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v35 = *(unsigned char *)(a1 + 1091);
    *__dst = 120;
    __dst[1] = v35;
    __dst += 2;
  }
  uint64_t v36 = *(unsigned int *)(a1 + 120);
  if ((int)v36 >= 1)
  {
    for (uint64_t n = 0; n != v36; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v38 = *(void *)(*(void *)(a1 + 128) + 8 * n);
      *(_WORD *)__dst = 384;
      __dst[2] = v38;
      if (v38 > 0x7F)
      {
        __dst[2] = v38 | 0x80;
        unint64_t v39 = v38 >> 7;
        __dst[3] = v38 >> 7;
        __dst += 4;
        if (v38 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v40 = v39 >> 14;
            v39 >>= 7;
            *__dst++ = v39;
          }
          while (v40);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v41 = *(unsigned int *)(a1 + 144);
  if ((int)v41 >= 1)
  {
    uint64_t v42 = 0;
    uint64_t v43 = 8 * v41;
    do
    {
      v44 = *(void **)(*(void *)(a1 + 152) + v42 + 8);
      if (*((char *)v44 + 23) < 0)
      {
        int64_t v45 = v44[1];
        if (v45 > 127) {
          goto LABEL_82;
        }
      }
      else
      {
        int64_t v45 = *((unsigned __int8 *)v44 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v45)
      {
        *(_WORD *)__dst = 394;
        __dst[2] = v45;
        if (*((char *)v44 + 23) < 0) {
          v44 = (void *)*v44;
        }
        int v46 = __dst + 3;
        memcpy(v46, v44, v45);
        __dst = &v46[v45];
        goto LABEL_80;
      }
LABEL_82:
      __dst = (char *)sub_188A868(a3, 17, (uint64_t)v44, __dst);
LABEL_80:
      v42 += 8;
    }
    while (v43 != v42);
  }
  uint64_t v47 = *(unsigned int *)(a1 + 168);
  if ((int)v47 >= 1)
  {
    uint64_t v48 = 0;
    uint64_t v49 = 8 * v47;
    do
    {
      uint64_t v50 = *(void **)(*(void *)(a1 + 176) + v48 + 8);
      if (*((char *)v50 + 23) < 0)
      {
        int64_t v51 = v50[1];
        if (v51 > 127) {
          goto LABEL_94;
        }
      }
      else
      {
        int64_t v51 = *((unsigned __int8 *)v50 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v51)
      {
        *(_WORD *)__dst = 402;
        __dst[2] = v51;
        if (*((char *)v50 + 23) < 0) {
          uint64_t v50 = (void *)*v50;
        }
        v52 = __dst + 3;
        memcpy(v52, v50, v51);
        __dst = &v52[v51];
        goto LABEL_92;
      }
LABEL_94:
      __dst = (char *)sub_188A868(a3, 18, (uint64_t)v50, __dst);
LABEL_92:
      v48 += 8;
    }
    while (v49 != v48);
  }
  if ((v28 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v53 = *(unsigned char *)(a1 + 1096);
    *(_WORD *)__dst = 408;
    __dst[2] = v53;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 19) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v54 = *(void *)(a1 + 872);
    *(_WORD *)__dst = 418;
    unsigned int v55 = *(_DWORD *)(v54 + 20);
    __dst[2] = v55;
    if (v55 > 0x7F) {
      v56 = sub_188A9CC(v55, __dst + 2);
    }
    else {
      v56 = __dst + 3;
    }
    __dst = sub_15BA180(v54, (unint64_t)v56, a3);
  }
  int v57 = *(_DWORD *)(a1 + 20);
  if ((v57 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v58 = *(unsigned char *)(a1 + 1097);
    *(_WORD *)__dst = 424;
    __dst[2] = v58;
    __dst += 3;
    if ((v57 & 0x8000000) == 0)
    {
LABEL_108:
      if ((v57 & 0x1000000) == 0) {
        goto LABEL_122;
      }
      goto LABEL_116;
    }
  }
  else if ((v57 & 0x8000000) == 0)
  {
    goto LABEL_108;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v59 = *(unsigned char *)(a1 + 1098);
  *(_WORD *)__dst = 432;
  __dst[2] = v59;
  __dst += 3;
  if ((v57 & 0x1000000) != 0)
  {
LABEL_116:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v60 = *(int *)(a1 + 1092);
    *(_WORD *)__dst = 440;
    __dst[2] = v60;
    if (v60 > 0x7F)
    {
      __dst[2] = v60 | 0x80;
      unint64_t v61 = v60 >> 7;
      __dst[3] = v60 >> 7;
      __dst += 4;
      if (v60 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v62 = v61 >> 14;
          v61 >>= 7;
          *__dst++ = v61;
        }
        while (v62);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_122:
  uint64_t v63 = *(unsigned int *)(a1 + 192);
  if ((int)v63 >= 1)
  {
    uint64_t v64 = 0;
    uint64_t v65 = 8 * v63;
    do
    {
      int v66 = *(void **)(*(void *)(a1 + 200) + v64 + 8);
      if (*((char *)v66 + 23) < 0)
      {
        int64_t v67 = v66[1];
        if (v67 > 127) {
          goto LABEL_133;
        }
      }
      else
      {
        int64_t v67 = *((unsigned __int8 *)v66 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v67)
      {
        *(_WORD *)__dst = 450;
        __dst[2] = v67;
        if (*((char *)v66 + 23) < 0) {
          int v66 = (void *)*v66;
        }
        uint64_t v68 = __dst + 3;
        memcpy(v68, v66, v67);
        __dst = &v68[v67];
        goto LABEL_131;
      }
LABEL_133:
      __dst = (char *)sub_188A868(a3, 24, (uint64_t)v66, __dst);
LABEL_131:
      v64 += 8;
    }
    while (v65 != v64);
  }
  uint64_t v69 = *(unsigned int *)(a1 + 216);
  if ((int)v69 >= 1)
  {
    uint64_t v70 = 0;
    uint64_t v71 = 8 * v69;
    do
    {
      int v72 = *(void **)(*(void *)(a1 + 224) + v70 + 8);
      if (*((char *)v72 + 23) < 0)
      {
        int64_t v73 = v72[1];
        if (v73 > 127) {
          goto LABEL_145;
        }
      }
      else
      {
        int64_t v73 = *((unsigned __int8 *)v72 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v73)
      {
        *(_WORD *)__dst = 458;
        __dst[2] = v73;
        if (*((char *)v72 + 23) < 0) {
          int v72 = (void *)*v72;
        }
        v74 = __dst + 3;
        memcpy(v74, v72, v73);
        __dst = &v74[v73];
        goto LABEL_143;
      }
LABEL_145:
      __dst = (char *)sub_188A868(a3, 25, (uint64_t)v72, __dst);
LABEL_143:
      v70 += 8;
    }
    while (v71 != v70);
  }
  int v75 = *(_DWORD *)(a1 + 16);
  if ((v75 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v76 = *(void *)(a1 + 880);
    *(_WORD *)__dst = 466;
    unsigned int v77 = *(_DWORD *)(v76 + 44);
    __dst[2] = v77;
    if (v77 > 0x7F) {
      v78 = sub_188A9CC(v77, __dst + 2);
    }
    else {
      v78 = __dst + 3;
    }
    __dst = sub_15B43E4(v76, v78, a3);
  }
  uint64_t v79 = *(unsigned int *)(a1 + 240);
  if ((int)v79 >= 1)
  {
    uint64_t v80 = 0;
    uint64_t v81 = 8 * v79;
    do
    {
      uint64_t v82 = *(void **)(*(void *)(a1 + 248) + v80 + 8);
      if (*((char *)v82 + 23) < 0)
      {
        int64_t v83 = v82[1];
        if (v83 > 127) {
          goto LABEL_164;
        }
      }
      else
      {
        int64_t v83 = *((unsigned __int8 *)v82 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v83)
      {
        *(_WORD *)__dst = 474;
        __dst[2] = v83;
        if (*((char *)v82 + 23) < 0) {
          uint64_t v82 = (void *)*v82;
        }
        v84 = __dst + 3;
        memcpy(v84, v82, v83);
        __dst = &v84[v83];
        goto LABEL_162;
      }
LABEL_164:
      __dst = (char *)sub_188A868(a3, 27, (uint64_t)v82, __dst);
LABEL_162:
      v80 += 8;
    }
    while (v81 != v80);
  }
  uint64_t v85 = *(unsigned int *)(a1 + 264);
  if ((int)v85 >= 1)
  {
    uint64_t v86 = 0;
    uint64_t v87 = 8 * v85;
    do
    {
      uint64_t v88 = *(void **)(*(void *)(a1 + 272) + v86 + 8);
      if (*((char *)v88 + 23) < 0)
      {
        int64_t v89 = v88[1];
        if (v89 > 127) {
          goto LABEL_176;
        }
      }
      else
      {
        int64_t v89 = *((unsigned __int8 *)v88 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 13) >= v89)
      {
        *(_WORD *)__dst = 482;
        __dst[2] = v89;
        if (*((char *)v88 + 23) < 0) {
          uint64_t v88 = (void *)*v88;
        }
        v90 = __dst + 3;
        memcpy(v90, v88, v89);
        __dst = &v90[v89];
        goto LABEL_174;
      }
LABEL_176:
      __dst = (char *)sub_188A868(a3, 28, (uint64_t)v88, __dst);
LABEL_174:
      v86 += 8;
    }
    while (v87 != v86);
  }
  int v91 = *(_DWORD *)(a1 + 288);
  if (v91)
  {
    for (iint i = 0; ii != v91; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v93 = *(void *)(*(void *)(a1 + 296) + 8 * ii + 8);
      *(_WORD *)__dst = 490;
      unsigned int v94 = *(_DWORD *)(v93 + 20);
      __dst[2] = v94;
      if (v94 > 0x7F) {
        uint64_t v95 = sub_188A9CC(v94, __dst + 2);
      }
      else {
        uint64_t v95 = __dst + 3;
      }
      __dst = sub_14A10E0(v93, v95, a3);
    }
  }
  if ((v75 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v96 = *(void *)(a1 + 888);
    *(_WORD *)__dst = 498;
    unsigned int v97 = *(_DWORD *)(v96 + 28);
    __dst[2] = v97;
    if (v97 > 0x7F) {
      uint64_t v98 = sub_188A9CC(v97, __dst + 2);
    }
    else {
      uint64_t v98 = __dst + 3;
    }
    __dst = sub_1466BF0(v96, v98, a3);
  }
  if ((*(unsigned char *)(a1 + 23) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v99 = *(unsigned char *)(a1 + 1099);
    *(_WORD *)__dst = 504;
    __dst[2] = v99;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 19) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v100 = *(void *)(a1 + 896);
    *(_WORD *)__dst = 650;
    unsigned int v101 = *(_DWORD *)(v100 + 40);
    __dst[2] = v101;
    if (v101 > 0x7F) {
      v102 = sub_188A9CC(v101, __dst + 2);
    }
    else {
      v102 = __dst + 3;
    }
    __dst = sub_12C9EC4(v100, v102, a3);
  }
  int v103 = *(_DWORD *)(a1 + 20);
  if ((v103 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v104 = *(unsigned char *)(a1 + 1100);
    *(_WORD *)__dst = 656;
    __dst[2] = v104;
    __dst += 3;
  }
  if ((v103 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v105 = *(unsigned char *)(a1 + 1101);
    *(_WORD *)__dst = 664;
    __dst[2] = v105;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 16) & 4) != 0) {
    __dst = sub_117A0AC(a3, 37, (const void **)(*(void *)(a1 + 688) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((*(_DWORD *)(a1 + 20) & 0x80000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v106 = *(unsigned char *)(a1 + 1102);
    *(_WORD *)__dst = 688;
    __dst[2] = v106;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 16) & 8) != 0) {
    __dst = sub_117A0AC(a3, 39, (const void **)(*(void *)(a1 + 696) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v107 = *(_DWORD *)(a1 + 24);
  if (v107)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v108 = *(unsigned char *)(a1 + 1103);
    *(_WORD *)__dst = 704;
    __dst[2] = v108;
    __dst += 3;
    if ((v107 & 2) == 0)
    {
LABEL_221:
      if ((v107 & 4) == 0) {
        goto LABEL_222;
      }
      goto LABEL_233;
    }
  }
  else if ((v107 & 2) == 0)
  {
    goto LABEL_221;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v109 = *(unsigned char *)(a1 + 1104);
  *(_WORD *)__dst = 712;
  __dst[2] = v109;
  __dst += 3;
  if ((v107 & 4) == 0)
  {
LABEL_222:
    if ((v107 & 8) == 0) {
      goto LABEL_223;
    }
    goto LABEL_236;
  }
LABEL_233:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v110 = *(unsigned char *)(a1 + 1105);
  *(_WORD *)__dst = 728;
  __dst[2] = v110;
  __dst += 3;
  if ((v107 & 8) == 0)
  {
LABEL_223:
    if ((v107 & 0x10) == 0) {
      goto LABEL_224;
    }
    goto LABEL_239;
  }
LABEL_236:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v111 = *(unsigned char *)(a1 + 1106);
  *(_WORD *)__dst = 736;
  __dst[2] = v111;
  __dst += 3;
  if ((v107 & 0x10) == 0)
  {
LABEL_224:
    if ((v107 & 0x20) == 0) {
      goto LABEL_225;
    }
    goto LABEL_242;
  }
LABEL_239:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v112 = *(unsigned char *)(a1 + 1107);
  *(_WORD *)__dst = 744;
  __dst[2] = v112;
  __dst += 3;
  if ((v107 & 0x20) == 0)
  {
LABEL_225:
    if ((v107 & 0x40) == 0) {
      goto LABEL_248;
    }
    goto LABEL_245;
  }
LABEL_242:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v113 = *(unsigned char *)(a1 + 1108);
  *(_WORD *)__dst = 752;
  __dst[2] = v113;
  __dst += 3;
  if ((v107 & 0x40) != 0)
  {
LABEL_245:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v114 = *(unsigned char *)(a1 + 1109);
    *(_WORD *)__dst = 760;
    __dst[2] = v114;
    __dst += 3;
  }
LABEL_248:
  if ((*(unsigned char *)(a1 + 16) & 0x10) != 0) {
    __dst = sub_117A0AC(a3, 48, (const void **)(*(void *)(a1 + 704) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v115 = *(_DWORD *)(a1 + 24);
  if ((v115 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v116 = *(unsigned char *)(a1 + 1110);
    *(_WORD *)__dst = 904;
    __dst[2] = v116;
    __dst += 3;
  }
  if ((v115 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v117 = *(unsigned char *)(a1 + 1111);
    *(_WORD *)__dst = 912;
    __dst[2] = v117;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 16) & 0x20) != 0) {
    __dst = sub_117A0AC(a3, 51, (const void **)(*(void *)(a1 + 712) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v118 = *(_DWORD *)(a1 + 24);
  if ((v118 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v119 = *(unsigned char *)(a1 + 1112);
    *(_WORD *)__dst = 928;
    __dst[2] = v119;
    __dst += 3;
    if ((v118 & 0x400) == 0)
    {
LABEL_262:
      if ((v118 & 0x800) == 0) {
        goto LABEL_263;
      }
      goto LABEL_271;
    }
  }
  else if ((v118 & 0x400) == 0)
  {
    goto LABEL_262;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v120 = *(unsigned char *)(a1 + 1113);
  *(_WORD *)__dst = 936;
  __dst[2] = v120;
  __dst += 3;
  if ((v118 & 0x800) == 0)
  {
LABEL_263:
    if ((v118 & 0x2000) == 0) {
      goto LABEL_280;
    }
    goto LABEL_274;
  }
LABEL_271:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v121 = *(unsigned char *)(a1 + 1114);
  *(_WORD *)__dst = 944;
  __dst[2] = v121;
  __dst += 3;
  if ((v118 & 0x2000) != 0)
  {
LABEL_274:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v122 = *(int *)(a1 + 1116);
    *(_WORD *)__dst = 952;
    __dst[2] = v122;
    if (v122 > 0x7F)
    {
      __dst[2] = v122 | 0x80;
      unint64_t v123 = v122 >> 7;
      __dst[3] = v122 >> 7;
      __dst += 4;
      if (v122 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v124 = v123 >> 14;
          v123 >>= 7;
          *__dst++ = v123;
        }
        while (v124);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_280:
  if ((v118 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v125 = *(_DWORD *)(a1 + 1120);
    *(_WORD *)__dst = 960;
    __dst[2] = v125;
    if (v125 > 0x7F)
    {
      __dst[2] = v125 | 0x80;
      unsigned int v126 = v125 >> 7;
      __dst[3] = v125 >> 7;
      __dst += 4;
      if (v125 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v127 = v126 >> 14;
          v126 >>= 7;
          *__dst++ = v126;
        }
        while (v127);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v118 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v128 = *(unsigned char *)(a1 + 1115);
    *(_WORD *)__dst = 968;
    __dst[2] = v128;
    __dst += 3;
    if ((v118 & 0x8000) == 0)
    {
LABEL_289:
      if ((v118 & 0x10000) == 0) {
        goto LABEL_300;
      }
      goto LABEL_297;
    }
  }
  else if ((v118 & 0x8000) == 0)
  {
    goto LABEL_289;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v129 = *(unsigned char *)(a1 + 1124);
  *(_WORD *)__dst = 976;
  __dst[2] = v129;
  __dst += 3;
  if ((v118 & 0x10000) != 0)
  {
LABEL_297:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v130 = *(unsigned char *)(a1 + 1125);
    *(_WORD *)__dst = 984;
    __dst[2] = v130;
    __dst += 3;
  }
LABEL_300:
  if ((*(unsigned char *)(a1 + 19) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v131 = *(void *)(a1 + 904);
    *(_WORD *)__dst = 994;
    unsigned int v132 = *(_DWORD *)(v131 + 20);
    __dst[2] = v132;
    if (v132 > 0x7F) {
      v133 = sub_188A9CC(v132, __dst + 2);
    }
    else {
      v133 = __dst + 3;
    }
    __dst = sub_14EF6F8(v131, v133, a3);
  }
  if ((*(unsigned char *)(a1 + 26) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v134 = *(unsigned char *)(a1 + 1126);
    *(_WORD *)__dst = 1000;
    __dst[2] = v134;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 19) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v135 = *(void *)(a1 + 912);
    *(_WORD *)__dst = 1010;
    unsigned int v136 = *(_DWORD *)(v135 + 20);
    __dst[2] = v136;
    if (v136 > 0x7F) {
      v137 = sub_188A9CC(v136, __dst + 2);
    }
    else {
      v137 = __dst + 3;
    }
    __dst = sub_12CD10C(v135, v137, a3);
  }
  int v138 = *(_DWORD *)(a1 + 24);
  if ((v138 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v139 = *(_DWORD *)(a1 + 1128);
    *(_WORD *)__dst = 1016;
    __dst[2] = v139;
    if (v139 > 0x7F)
    {
      __dst[2] = v139 | 0x80;
      unsigned int v140 = v139 >> 7;
      __dst[3] = v139 >> 7;
      __dst += 4;
      if (v139 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v141 = v140 >> 14;
          v140 >>= 7;
          *__dst++ = v140;
        }
        while (v141);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v138 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v142 = *(unsigned char *)(a1 + 1127);
    *(_WORD *)__dst = 1160;
    __dst[2] = v142;
    __dst += 3;
  }
  int v143 = *(_DWORD *)(a1 + 312);
  if (v143)
  {
    for (juint64_t j = 0; jj != v143; ++jj)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v145 = *(void *)(*(void *)(a1 + 320) + 8 * jj + 8);
      *(_WORD *)__dst = 1170;
      unsigned int v146 = *(_DWORD *)(v145 + 20);
      __dst[2] = v146;
      if (v146 > 0x7F) {
        v147 = sub_188A9CC(v146, __dst + 2);
      }
      else {
        v147 = __dst + 3;
      }
      __dst = sub_12D207C(v145, v147, a3);
    }
  }
  int v148 = *(_DWORD *)(a1 + 336);
  if (v148)
  {
    for (kuint64_t k = 0; kk != v148; ++kk)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v150 = *(void *)(*(void *)(a1 + 344) + 8 * kk + 8);
      *(_WORD *)__dst = 1178;
      unsigned int v151 = *(_DWORD *)(v150 + 20);
      __dst[2] = v151;
      if (v151 > 0x7F) {
        uint64_t v152 = sub_188A9CC(v151, __dst + 2);
      }
      else {
        uint64_t v152 = __dst + 3;
      }
      __dst = sub_149FD00(v150, v152, a3);
    }
  }
  int v153 = *(_DWORD *)(a1 + 360);
  if (v153)
  {
    for (mint m = 0; mm != v153; ++mm)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v155 = *(void *)(*(void *)(a1 + 368) + 8 * mm + 8);
      *(_WORD *)__dst = 1186;
      unsigned int v156 = *(_DWORD *)(v155 + 20);
      __dst[2] = v156;
      if (v156 > 0x7F) {
        uint64_t v157 = sub_188A9CC(v156, __dst + 2);
      }
      else {
        uint64_t v157 = __dst + 3;
      }
      __dst = sub_149FD00(v155, v157, a3);
    }
  }
  int v158 = *(_DWORD *)(a1 + 16);
  if ((v158 & 0x80000000) == 0)
  {
    if ((v158 & 0x40) == 0) {
      goto LABEL_356;
    }
    goto LABEL_355;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v162 = *(void *)(a1 + 920);
  *(_WORD *)__dst = 1194;
  unsigned int v163 = *(_DWORD *)(v162 + 20);
  __dst[2] = v163;
  if (v163 > 0x7F) {
    v164 = sub_188A9CC(v163, __dst + 2);
  }
  else {
    v164 = __dst + 3;
  }
  __dst = sub_12C9140(v162, (unint64_t)v164, a3);
  if ((v158 & 0x40) != 0) {
LABEL_355:
  }
    __dst = sub_117A0AC(a3, 70, (const void **)(*(void *)(a1 + 720) & 0xFFFFFFFFFFFFFFFELL), __dst);
LABEL_356:
  if (*(unsigned char *)(a1 + 20))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v159 = *(void *)(a1 + 928);
    *(_WORD *)__dst = 1210;
    unsigned int v160 = *(_DWORD *)(v159 + 20);
    __dst[2] = v160;
    if (v160 > 0x7F) {
      uint64_t v161 = sub_188A9CC(v160, __dst + 2);
    }
    else {
      uint64_t v161 = __dst + 3;
    }
    __dst = sub_12CC4BC(v159, (unint64_t)v161, a3);
  }
  if ((*(unsigned char *)(a1 + 26) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v165 = *(unsigned char *)(a1 + 1132);
    *(_WORD *)__dst = 1216;
    __dst[2] = v165;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 20) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v166 = *(void *)(a1 + 936);
    *(_WORD *)__dst = 1226;
    unsigned int v167 = *(_DWORD *)(v166 + 20);
    __dst[2] = v167;
    if (v167 > 0x7F) {
      uint64_t v168 = sub_188A9CC(v167, __dst + 2);
    }
    else {
      uint64_t v168 = __dst + 3;
    }
    __dst = sub_12CC4BC(v166, (unint64_t)v168, a3);
  }
  int v169 = *(_DWORD *)(a1 + 24);
  if ((v169 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v170 = *(unsigned char *)(a1 + 1133);
    *(_WORD *)__dst = 1232;
    __dst[2] = v170;
    __dst += 3;
  }
  if ((v169 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v171 = *(unsigned char *)(a1 + 1134);
    *(_WORD *)__dst = 1240;
    __dst[2] = v171;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 20) & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v172 = *(void *)(a1 + 944);
    *(_WORD *)__dst = 1250;
    unsigned int v173 = *(_DWORD *)(v172 + 20);
    __dst[2] = v173;
    if (v173 > 0x7F) {
      v174 = sub_188A9CC(v173, __dst + 2);
    }
    else {
      v174 = __dst + 3;
    }
    __dst = sub_14E0980(v172, v174, a3);
  }
  int v175 = *(_DWORD *)(a1 + 24);
  if ((v175 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v176 = *(unsigned char *)(a1 + 1135);
    *(_WORD *)__dst = 1256;
    __dst[2] = v176;
    __dst += 3;
    if ((v175 & 0x2000000) == 0)
    {
LABEL_395:
      if ((v175 & 0x4000000) == 0) {
        goto LABEL_406;
      }
      goto LABEL_403;
    }
  }
  else if ((v175 & 0x2000000) == 0)
  {
    goto LABEL_395;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v177 = *(unsigned char *)(a1 + 1144);
  *(_WORD *)__dst = 1264;
  __dst[2] = v177;
  __dst += 3;
  if ((v175 & 0x4000000) != 0)
  {
LABEL_403:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v178 = *(unsigned char *)(a1 + 1145);
    *(_WORD *)__dst = 1272;
    __dst[2] = v178;
    __dst += 3;
  }
LABEL_406:
  int v179 = *(_DWORD *)(a1 + 384);
  if (v179)
  {
    for (nuint64_t n = 0; nn != v179; ++nn)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v181 = *(void *)(*(void *)(a1 + 392) + 8 * nn + 8);
      *(_WORD *)__dst = 1410;
      unsigned int v182 = *(_DWORD *)(v181 + 20);
      __dst[2] = v182;
      if (v182 > 0x7F) {
        v183 = sub_188A9CC(v182, __dst + 2);
      }
      else {
        v183 = __dst + 3;
      }
      __dst = (char *)sub_12CDAB0(v181, v183, a3);
    }
  }
  if ((v175 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v184 = *(unsigned char *)(a1 + 1146);
    *(_WORD *)__dst = 1416;
    __dst[2] = v184;
    __dst += 3;
    if ((v175 & 0x10000000) == 0)
    {
LABEL_416:
      if ((v175 & 0x1000000) == 0) {
        goto LABEL_430;
      }
      goto LABEL_424;
    }
  }
  else if ((v175 & 0x10000000) == 0)
  {
    goto LABEL_416;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v185 = *(unsigned char *)(a1 + 1147);
  *(_WORD *)__dst = 1456;
  __dst[2] = v185;
  __dst += 3;
  if ((v175 & 0x1000000) != 0)
  {
LABEL_424:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v186 = *(void *)(a1 + 1136);
    *(_WORD *)__dst = 1464;
    __dst[2] = v186;
    if (v186 > 0x7F)
    {
      __dst[2] = v186 | 0x80;
      unint64_t v187 = v186 >> 7;
      __dst[3] = v186 >> 7;
      __dst += 4;
      if (v186 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v188 = v187 >> 14;
          v187 >>= 7;
          *__dst++ = v187;
        }
        while (v188);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_430:
  if ((*(unsigned char *)(a1 + 28) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v189 = *(void *)(a1 + 1152);
    *(_WORD *)__dst = 1472;
    __dst[2] = v189;
    if (v189 > 0x7F)
    {
      __dst[2] = v189 | 0x80;
      unint64_t v190 = v189 >> 7;
      __dst[3] = v189 >> 7;
      __dst += 4;
      if (v189 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v191 = v190 >> 14;
          v190 >>= 7;
          *__dst++ = v190;
        }
        while (v191);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 20) & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v192 = *(void *)(a1 + 952);
    *(_WORD *)__dst = 1482;
    unsigned int v193 = *(_DWORD *)(v192 + 20);
    __dst[2] = v193;
    if (v193 > 0x7F) {
      uint64_t v194 = sub_188A9CC(v193, __dst + 2);
    }
    else {
      uint64_t v194 = __dst + 3;
    }
    __dst = sub_12CA928(v192, (unint64_t)v194, a3);
  }
  int v195 = *(_DWORD *)(a1 + 24);
  if ((v195 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v196 = *(unsigned char *)(a1 + 1148);
    *(_WORD *)__dst = 1488;
    __dst[2] = v196;
    __dst += 3;
  }
  if ((v195 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v197 = *(unsigned char *)(a1 + 1149);
    *(_WORD *)__dst = 1496;
    __dst[2] = v197;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 16) & 0x80) != 0) {
    __dst = sub_117A0AC(a3, 93, (const void **)(*(void *)(a1 + 728) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((*(_DWORD *)(a1 + 24) & 0x80000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v198 = *(unsigned char *)(a1 + 1150);
    *(_WORD *)__dst = 1520;
    __dst[2] = v198;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 20) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v199 = *(void *)(a1 + 960);
    *(_WORD *)__dst = 1530;
    unsigned int v200 = *(_DWORD *)(v199 + 20);
    __dst[2] = v200;
    if (v200 > 0x7F) {
      v201 = sub_188A9CC(v200, __dst + 2);
    }
    else {
      v201 = __dst + 3;
    }
    __dst = sub_14E0980(v199, v201, a3);
  }
  if (*(unsigned char *)(a1 + 17)) {
    __dst = sub_117A0AC(a3, 96, (const void **)(*(void *)(a1 + 736) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((*(unsigned char *)(a1 + 20) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v202 = *(void *)(a1 + 968);
    *(_WORD *)__dst = 1674;
    unsigned int v203 = *(_DWORD *)(v202 + 20);
    __dst[2] = v203;
    if (v203 > 0x7F) {
      int v204 = sub_188A9CC(v203, __dst + 2);
    }
    else {
      int v204 = __dst + 3;
    }
    __dst = sub_12C9728(v202, (unint64_t)v204, a3);
  }
  if (*(unsigned char *)(a1 + 28))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v205 = *(unsigned char *)(a1 + 1151);
    *(_WORD *)__dst = 1680;
    __dst[2] = v205;
    __dst += 3;
  }
  int v206 = *(_DWORD *)(a1 + 20);
  if ((v206 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v207 = *(void *)(a1 + 976);
    *(_WORD *)__dst = 1690;
    unsigned int v208 = *(_DWORD *)(v207 + 20);
    __dst[2] = v208;
    if (v208 > 0x7F) {
      int v209 = sub_188A9CC(v208, __dst + 2);
    }
    else {
      int v209 = __dst + 3;
    }
    __dst = sub_12C9140(v207, (unint64_t)v209, a3);
    if ((v206 & 0x80) == 0)
    {
LABEL_480:
      if ((v206 & 0x100) == 0) {
        goto LABEL_500;
      }
      goto LABEL_494;
    }
  }
  else if ((v206 & 0x80) == 0)
  {
    goto LABEL_480;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v210 = *(void *)(a1 + 984);
  *(_WORD *)__dst = 1706;
  unsigned int v211 = *(_DWORD *)(v210 + 20);
  __dst[2] = v211;
  if (v211 > 0x7F) {
    int v212 = sub_188A9CC(v211, __dst + 2);
  }
  else {
    int v212 = __dst + 3;
  }
  __dst = sub_12CA928(v210, (unint64_t)v212, a3);
  if ((v206 & 0x100) != 0)
  {
LABEL_494:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v213 = *(void *)(a1 + 992);
    *(_WORD *)__dst = 1714;
    unsigned int v214 = *(_DWORD *)(v213 + 20);
    __dst[2] = v214;
    if (v214 > 0x7F) {
      int v215 = sub_188A9CC(v214, __dst + 2);
    }
    else {
      int v215 = __dst + 3;
    }
    __dst = sub_12CA928(v213, (unint64_t)v215, a3);
  }
LABEL_500:
  int v216 = *(_DWORD *)(a1 + 28);
  if ((v216 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v217 = *(unsigned char *)(a1 + 1172);
    *(_WORD *)__dst = 1728;
    __dst[2] = v217;
    __dst += 3;
  }
  if ((v216 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v218 = *(void *)(a1 + 1160);
    *(_WORD *)__dst = 1736;
    __dst[2] = v218;
    if (v218 > 0x7F)
    {
      __dst[2] = v218 | 0x80;
      unint64_t v219 = v218 >> 7;
      __dst[3] = v218 >> 7;
      __dst += 4;
      if (v218 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v220 = v219 >> 14;
          v219 >>= 7;
          *__dst++ = v219;
        }
        while (v220);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 21) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v221 = *(void *)(a1 + 1000);
    *(_WORD *)__dst = 1746;
    unsigned int v222 = *(_DWORD *)(v221 + 40);
    __dst[2] = v222;
    if (v222 > 0x7F) {
      v223 = sub_188A9CC(v222, __dst + 2);
    }
    else {
      v223 = __dst + 3;
    }
    __dst = sub_12C9EC4(v221, v223, a3);
  }
  int v224 = *(_DWORD *)(a1 + 16);
  if ((v224 & 0x200) != 0)
  {
    __dst = sub_117A0AC(a3, 107, (const void **)(*(void *)(a1 + 744) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v224 & 0x400) == 0)
    {
LABEL_520:
      if ((v224 & 0x800) == 0) {
        goto LABEL_522;
      }
      goto LABEL_521;
    }
  }
  else if ((v224 & 0x400) == 0)
  {
    goto LABEL_520;
  }
  __dst = sub_117A0AC(a3, 108, (const void **)(*(void *)(a1 + 752) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v224 & 0x800) != 0) {
LABEL_521:
  }
    __dst = sub_117A0AC(a3, 109, (const void **)(*(void *)(a1 + 760) & 0xFFFFFFFFFFFFFFFELL), __dst);
LABEL_522:
  uint64_t v225 = *(unsigned int *)(a1 + 400);
  if ((int)v225 >= 1)
  {
    for (uint64_t i1 = 0; i1 != v225; ++i1)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v227 = *(void *)(*(void *)(a1 + 408) + 8 * i1);
      *(_WORD *)__dst = 1776;
      __dst[2] = v227;
      if (v227 > 0x7F)
      {
        __dst[2] = v227 | 0x80;
        unint64_t v228 = v227 >> 7;
        __dst[3] = v227 >> 7;
        __dst += 4;
        if (v227 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v229 = v228 >> 14;
            v228 >>= 7;
            *__dst++ = v228;
          }
          while (v229);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  int v230 = *(_DWORD *)(a1 + 28);
  if ((v230 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v231 = *(int *)(a1 + 1168);
    *(_WORD *)__dst = 1784;
    __dst[2] = v231;
    if (v231 > 0x7F)
    {
      __dst[2] = v231 | 0x80;
      unint64_t v232 = v231 >> 7;
      __dst[3] = v231 >> 7;
      __dst += 4;
      if (v231 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v233 = v232 >> 14;
          v232 >>= 7;
          *__dst++ = v232;
        }
        while (v233);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v230 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v234 = *(unsigned char *)(a1 + 1173);
    *(_WORD *)__dst = 1920;
    __dst[2] = v234;
    __dst += 3;
  }
  uint64_t v235 = *(unsigned int *)(a1 + 416);
  if ((int)v235 >= 1)
  {
    for (uint64_t i2 = 0; i2 != v235; ++i2)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v237 = *(void *)(*(void *)(a1 + 424) + 8 * i2);
      *(_WORD *)__dst = 1928;
      __dst[2] = v237;
      if (v237 > 0x7F)
      {
        __dst[2] = v237 | 0x80;
        unint64_t v238 = v237 >> 7;
        __dst[3] = v237 >> 7;
        __dst += 4;
        if (v237 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v239 = v238 >> 14;
            v238 >>= 7;
            *__dst++ = v238;
          }
          while (v239);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((v230 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v240 = *(unsigned char *)(a1 + 1174);
    *(_WORD *)__dst = 1936;
    __dst[2] = v240;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 17) & 0x10) != 0) {
    __dst = sub_117A0AC(a3, 115, (const void **)(*(void *)(a1 + 768) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((*(unsigned char *)(a1 + 21) & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v241 = *(void *)(a1 + 1008);
    *(_WORD *)__dst = 1954;
    unsigned int v242 = *(_DWORD *)(v241 + 20);
    __dst[2] = v242;
    if (v242 > 0x7F) {
      v243 = sub_188A9CC(v242, __dst + 2);
    }
    else {
      v243 = __dst + 3;
    }
    __dst = sub_158B9D0(v241, (unint64_t)v243, a3);
  }
  int v244 = *(_DWORD *)(a1 + 28);
  if ((v244 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v245 = *(unsigned char *)(a1 + 1175);
    *(_WORD *)__dst = 1960;
    __dst[2] = v245;
    __dst += 3;
  }
  if ((v244 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v246 = *(unsigned char *)(a1 + 1176);
    *(_WORD *)__dst = 1968;
    __dst[2] = v246;
    __dst += 3;
  }
  uint64_t v247 = *(unsigned int *)(a1 + 432);
  if ((int)v247 >= 1)
  {
    for (uint64_t i3 = 0; i3 != v247; ++i3)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v249 = *(int *)(*(void *)(a1 + 440) + 4 * i3);
      *(_WORD *)__dst = 1976;
      __dst[2] = v249;
      if (v249 > 0x7F)
      {
        __dst[2] = v249 | 0x80;
        unint64_t v250 = v249 >> 7;
        __dst[3] = v249 >> 7;
        __dst += 4;
        if (v249 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v251 = v250 >> 14;
            v250 >>= 7;
            *__dst++ = v250;
          }
          while (v251);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((v244 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v252 = *(unsigned char *)(a1 + 1177);
    *(_WORD *)__dst = 1984;
    __dst[2] = v252;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 17) & 0x20) != 0) {
    __dst = sub_117A0AC(a3, 121, (const void **)(*(void *)(a1 + 776) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((*(unsigned char *)(a1 + 29) & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v253 = *(unsigned char *)(a1 + 1178);
    *(_WORD *)__dst = 2000;
    __dst[2] = v253;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 17) & 0x40) != 0) {
    __dst = sub_117A0AC(a3, 123, (const void **)(*(void *)(a1 + 784) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v254 = *(_DWORD *)(a1 + 20);
  if ((v254 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v255 = *(void *)(a1 + 1016);
    *(_WORD *)__dst = 2018;
    unsigned int v256 = *(_DWORD *)(v255 + 20);
    __dst[2] = v256;
    if (v256 > 0x7F) {
      uint64_t v257 = sub_188A9CC(v256, __dst + 2);
    }
    else {
      uint64_t v257 = __dst + 3;
    }
    __dst = sub_12D25E4(v255, v257, a3);
  }
  uint64_t v258 = *(unsigned int *)(a1 + 448);
  if ((int)v258 >= 1)
  {
    for (uint64_t i4 = 0; i4 != v258; ++i4)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v260 = *(void *)(*(void *)(a1 + 456) + 8 * i4);
      *(_WORD *)__dst = 2024;
      __dst[2] = v260;
      if (v260 > 0x7F)
      {
        __dst[2] = v260 | 0x80;
        unint64_t v261 = v260 >> 7;
        __dst[3] = v260 >> 7;
        __dst += 4;
        if (v260 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v262 = v261 >> 14;
            v261 >>= 7;
            *__dst++ = v261;
          }
          while (v262);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((v254 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v263 = *(void *)(a1 + 1024);
    *(_WORD *)__dst = 2034;
    unsigned int v264 = *(_DWORD *)(v263 + 20);
    __dst[2] = v264;
    if (v264 > 0x7F) {
      int v265 = sub_188A9CC(v264, __dst + 2);
    }
    else {
      int v265 = __dst + 3;
    }
    __dst = sub_12C9140(v263, (unint64_t)v265, a3);
  }
  if ((v254 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v266 = *(void *)(a1 + 1032);
    *(_WORD *)__dst = 2042;
    unsigned int v267 = *(_DWORD *)(v266 + 20);
    __dst[2] = v267;
    if (v267 > 0x7F) {
      int v268 = sub_188A9CC(v267, __dst + 2);
    }
    else {
      int v268 = __dst + 3;
    }
    __dst = sub_12CC4BC(v266, (unint64_t)v268, a3);
  }
  int v269 = *(_DWORD *)(a1 + 28);
  if ((v269 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v270 = *(unsigned char *)(a1 + 1179);
    *(_WORD *)__dst = 2176;
    __dst[2] = v270;
    __dst += 3;
  }
  if ((v269 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v271 = *(unsigned char *)(a1 + 1180);
    *(_WORD *)__dst = 2184;
    __dst[2] = v271;
    __dst += 3;
  }
  int v272 = *(_DWORD *)(a1 + 472);
  if (v272)
  {
    for (int i5 = 0; i5 != v272; ++i5)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v274 = *(void *)(*(void *)(a1 + 480) + 8 * i5 + 8);
      *(_WORD *)__dst = 2194;
      unsigned int v275 = *(_DWORD *)(v274 + 20);
      __dst[2] = v275;
      if (v275 > 0x7F) {
        uint64_t v276 = sub_188A9CC(v275, __dst + 2);
      }
      else {
        uint64_t v276 = __dst + 3;
      }
      __dst = sub_14A15AC(v274, (unint64_t)v276, a3);
    }
  }
  if ((v269 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v277 = *(unsigned char *)(a1 + 1181);
    *(_WORD *)__dst = 2200;
    __dst[2] = v277;
    __dst += 3;
    if ((v269 & 0x4000) == 0)
    {
LABEL_644:
      if ((v269 & 0x8000) == 0) {
        goto LABEL_645;
      }
      goto LABEL_655;
    }
  }
  else if ((v269 & 0x4000) == 0)
  {
    goto LABEL_644;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v278 = *(unsigned char *)(a1 + 1182);
  *(_WORD *)__dst = 2208;
  __dst[2] = v278;
  __dst += 3;
  if ((v269 & 0x8000) == 0)
  {
LABEL_645:
    if ((v269 & 0x10000) == 0) {
      goto LABEL_646;
    }
    goto LABEL_658;
  }
LABEL_655:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v279 = *(unsigned char *)(a1 + 1183);
  *(_WORD *)__dst = 2216;
  __dst[2] = v279;
  __dst += 3;
  if ((v269 & 0x10000) == 0)
  {
LABEL_646:
    if ((v269 & 0x20000) == 0) {
      goto LABEL_647;
    }
    goto LABEL_661;
  }
LABEL_658:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v280 = *(void *)(a1 + 1184);
  *(_WORD *)__dst = 2225;
  *(void *)(__dst + 2) = v280;
  __dst += 10;
  if ((v269 & 0x20000) == 0)
  {
LABEL_647:
    if ((v269 & 0x40000) == 0) {
      goto LABEL_667;
    }
    goto LABEL_664;
  }
LABEL_661:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v281 = *(unsigned char *)(a1 + 1192);
  *(_WORD *)__dst = 2232;
  __dst[2] = v281;
  __dst += 3;
  if ((v269 & 0x40000) != 0)
  {
LABEL_664:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v282 = *(unsigned char *)(a1 + 1193);
    *(_WORD *)__dst = 2240;
    __dst[2] = v282;
    __dst += 3;
  }
LABEL_667:
  int v283 = *(_DWORD *)(a1 + 20);
  if ((v283 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v284 = *(void *)(a1 + 1040);
    *(_WORD *)__dst = 2250;
    unsigned int v285 = *(_DWORD *)(v284 + 20);
    __dst[2] = v285;
    if (v285 > 0x7F) {
      int v286 = sub_188A9CC(v285, __dst + 2);
    }
    else {
      int v286 = __dst + 3;
    }
    __dst = sub_1230C9C(v284, v286, a3);
  }
  if ((v283 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v287 = *(void *)(a1 + 1048);
    *(_WORD *)__dst = 2258;
    unsigned int v288 = *(_DWORD *)(v287 + 20);
    __dst[2] = v288;
    if (v288 > 0x7F) {
      uint64_t v289 = sub_188A9CC(v288, __dst + 2);
    }
    else {
      uint64_t v289 = __dst + 3;
    }
    __dst = sub_1231F20(v287, v289, a3);
  }
  int v290 = *(_DWORD *)(a1 + 28);
  if ((v290 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v291 = *(unsigned char *)(a1 + 1194);
    *(_WORD *)__dst = 2264;
    __dst[2] = v291;
    __dst += 3;
    if ((v290 & 0x100000) == 0)
    {
LABEL_683:
      if ((v290 & 0x200000) == 0) {
        goto LABEL_694;
      }
      goto LABEL_691;
    }
  }
  else if ((v290 & 0x100000) == 0)
  {
    goto LABEL_683;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v292 = *(unsigned char *)(a1 + 1195);
  *(_WORD *)__dst = 2272;
  __dst[2] = v292;
  __dst += 3;
  if ((v290 & 0x200000) != 0)
  {
LABEL_691:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v293 = *(unsigned char *)(a1 + 1196);
    *(_WORD *)__dst = 2280;
    __dst[2] = v293;
    __dst += 3;
  }
LABEL_694:
  int v294 = *(_DWORD *)(a1 + 496);
  if (v294)
  {
    for (int i6 = 0; i6 != v294; ++i6)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v296 = *(void *)(*(void *)(a1 + 504) + 8 * i6 + 8);
      *(_WORD *)__dst = 2290;
      unsigned int v297 = *(_DWORD *)(v296 + 20);
      __dst[2] = v297;
      if (v297 > 0x7F) {
        int v298 = sub_188A9CC(v297, __dst + 2);
      }
      else {
        int v298 = __dst + 3;
      }
      __dst = sub_15BAD4C(v296, (unint64_t)v298, a3);
    }
  }
  if ((v290 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v299 = *(unsigned char *)(a1 + 1197);
    *(_WORD *)__dst = 2296;
    __dst[2] = v299;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 17) & 0x80) != 0) {
    __dst = sub_117A0AC(a3, 144, (const void **)(*(void *)(a1 + 792) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if (*(unsigned char *)(a1 + 22))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v300 = *(void *)(a1 + 1056);
    *(_WORD *)__dst = 2442;
    unsigned int v301 = *(_DWORD *)(v300 + 44);
    __dst[2] = v301;
    if (v301 > 0x7F) {
      v302 = sub_188A9CC(v301, __dst + 2);
    }
    else {
      v302 = __dst + 3;
    }
    __dst = sub_145F0B4(v300, v302, a3);
  }
  int v303 = *(_DWORD *)(a1 + 28);
  if ((v303 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v304 = *(unsigned char *)(a1 + 1198);
    *(_WORD *)__dst = 2448;
    __dst[2] = v304;
    __dst += 3;
    if ((v303 & 0x1000000) == 0)
    {
LABEL_717:
      if ((v303 & 0x2000000) == 0) {
        goto LABEL_718;
      }
      goto LABEL_727;
    }
  }
  else if ((v303 & 0x1000000) == 0)
  {
    goto LABEL_717;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v305 = *(unsigned char *)(a1 + 1199);
  *(_WORD *)__dst = 2456;
  __dst[2] = v305;
  __dst += 3;
  if ((v303 & 0x2000000) == 0)
  {
LABEL_718:
    if ((v303 & 0x4000000) == 0) {
      goto LABEL_719;
    }
    goto LABEL_730;
  }
LABEL_727:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v306 = *(unsigned char *)(a1 + 1200);
  *(_WORD *)__dst = 2464;
  __dst[2] = v306;
  __dst += 3;
  if ((v303 & 0x4000000) == 0)
  {
LABEL_719:
    if ((v303 & 0x8000000) == 0) {
      goto LABEL_736;
    }
    goto LABEL_733;
  }
LABEL_730:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v307 = *(unsigned char *)(a1 + 1201);
  *(_WORD *)__dst = 2472;
  __dst[2] = v307;
  __dst += 3;
  if ((v303 & 0x8000000) != 0)
  {
LABEL_733:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v308 = *(unsigned char *)(a1 + 1202);
    *(_WORD *)__dst = 2480;
    __dst[2] = v308;
    __dst += 3;
  }
LABEL_736:
  if ((*(unsigned char *)(a1 + 22) & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v309 = *(void *)(a1 + 1064);
    *(_WORD *)__dst = 2490;
    unsigned int v310 = *(_DWORD *)(v309 + 40);
    __dst[2] = v310;
    if (v310 > 0x7F) {
      uint64_t v311 = sub_188A9CC(v310, __dst + 2);
    }
    else {
      uint64_t v311 = __dst + 3;
    }
    __dst = sub_15A5438(v309, v311, a3);
  }
  if ((*(unsigned char *)(a1 + 31) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v312 = *(unsigned char *)(a1 + 1203);
    *(_WORD *)__dst = 2496;
    __dst[2] = v312;
    __dst += 3;
  }
  int v313 = *(_DWORD *)(a1 + 16);
  if ((v313 & 0x10000) != 0) {
    __dst = sub_117A0AC(a3, 153, (const void **)(*(void *)(a1 + 800) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v313 & 0x20000) != 0) {
    __dst = sub_117A0AC(a3, 154, (const void **)(*(void *)(a1 + 808) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((*(unsigned char *)(a1 + 31) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v314 = *(unsigned char *)(a1 + 1204);
    *(_WORD *)__dst = 2520;
    __dst[2] = v314;
    __dst += 3;
  }
  int v315 = *(_DWORD *)(a1 + 16);
  if ((v315 & 0x40000) != 0)
  {
    __dst = sub_117A0AC(a3, 156, (const void **)(*(void *)(a1 + 816) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v315 & 0x80000) == 0)
    {
LABEL_757:
      if ((v315 & 0x100000) == 0) {
        goto LABEL_758;
      }
      goto LABEL_853;
    }
  }
  else if ((v315 & 0x80000) == 0)
  {
    goto LABEL_757;
  }
  __dst = sub_117A0AC(a3, 157, (const void **)(*(void *)(a1 + 824) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v315 & 0x100000) == 0)
  {
LABEL_758:
    if ((v315 & 0x200000) == 0) {
      goto LABEL_760;
    }
    goto LABEL_759;
  }
LABEL_853:
  __dst = sub_117A0AC(a3, 158, (const void **)(*(void *)(a1 + 832) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v315 & 0x200000) != 0) {
LABEL_759:
  }
    __dst = sub_117A0AC(a3, 159, (const void **)(*(void *)(a1 + 840) & 0xFFFFFFFFFFFFFFFELL), __dst);
LABEL_760:
  int v316 = *(_DWORD *)(a1 + 28);
  if ((v316 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v317 = *(unsigned char *)(a1 + 1205);
    *(_WORD *)__dst = 2688;
    __dst[2] = v317;
    __dst += 3;
  }
  if (v316 < 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v318 = *(unsigned char *)(a1 + 1206);
    *(_WORD *)__dst = 2696;
    __dst[2] = v318;
    __dst += 3;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v319 = *(unsigned char *)(a1 + 1207);
    *(_WORD *)__dst = 2704;
    __dst[2] = v319;
    __dst += 3;
  }
  uint64_t v320 = *(unsigned int *)(a1 + 512);
  if ((int)v320 >= 1)
  {
    for (uint64_t i7 = 0; i7 != v320; ++i7)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v322 = *(void *)(*(void *)(a1 + 520) + 8 * i7);
      *(_WORD *)__dst = 2712;
      __dst[2] = v322;
      if (v322 > 0x7F)
      {
        __dst[2] = v322 | 0x80;
        unint64_t v323 = v322 >> 7;
        __dst[3] = v322 >> 7;
        __dst += 4;
        if (v322 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v324 = v323 >> 14;
            v323 >>= 7;
            *__dst++ = v323;
          }
          while (v324);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v325 = *(unsigned int *)(a1 + 528);
  if ((int)v325 >= 1)
  {
    for (uint64_t i8 = 0; i8 != v325; ++i8)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v327 = *(void *)(*(void *)(a1 + 536) + 8 * i8);
      *(_WORD *)__dst = 2720;
      __dst[2] = v327;
      if (v327 > 0x7F)
      {
        __dst[2] = v327 | 0x80;
        unint64_t v328 = v327 >> 7;
        __dst[3] = v327 >> 7;
        __dst += 4;
        if (v327 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v329 = v328 >> 14;
            v328 >>= 7;
            *__dst++ = v328;
          }
          while (v329);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v330 = *(unsigned int *)(a1 + 544);
  if ((int)v330 >= 1)
  {
    for (uint64_t i9 = 0; i9 != v330; ++i9)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v332 = *(void *)(*(void *)(a1 + 552) + 8 * i9);
      *(_WORD *)__dst = 2728;
      __dst[2] = v332;
      if (v332 > 0x7F)
      {
        __dst[2] = v332 | 0x80;
        unint64_t v333 = v332 >> 7;
        __dst[3] = v332 >> 7;
        __dst += 4;
        if (v332 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v334 = v333 >> 14;
            v333 >>= 7;
            *__dst++ = v333;
          }
          while (v334);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v335 = *(unsigned int *)(a1 + 560);
  if ((int)v335 >= 1)
  {
    for (uint64_t i10 = 0; i10 != v335; ++i10)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v337 = *(void *)(*(void *)(a1 + 568) + 8 * i10);
      *(_WORD *)__dst = 2736;
      __dst[2] = v337;
      if (v337 > 0x7F)
      {
        __dst[2] = v337 | 0x80;
        unint64_t v338 = v337 >> 7;
        __dst[3] = v337 >> 7;
        __dst += 4;
        if (v337 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v339 = v338 >> 14;
            v338 >>= 7;
            *__dst++ = v338;
          }
          while (v339);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v340 = *(unsigned int *)(a1 + 576);
  if ((int)v340 >= 1)
  {
    for (uint64_t i11 = 0; i11 != v340; ++i11)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v342 = *(void *)(*(void *)(a1 + 584) + 8 * i11);
      *(_WORD *)__dst = 2744;
      __dst[2] = v342;
      if (v342 > 0x7F)
      {
        __dst[2] = v342 | 0x80;
        unint64_t v343 = v342 >> 7;
        __dst[3] = v342 >> 7;
        __dst += 4;
        if (v342 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v344 = v343 >> 14;
            v343 >>= 7;
            *__dst++ = v343;
          }
          while (v344);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v345 = *(unsigned int *)(a1 + 592);
  if ((int)v345 >= 1)
  {
    for (uint64_t i12 = 0; i12 != v345; ++i12)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v347 = *(void *)(*(void *)(a1 + 600) + 8 * i12);
      *(_WORD *)__dst = 2752;
      __dst[2] = v347;
      if (v347 > 0x7F)
      {
        __dst[2] = v347 | 0x80;
        unint64_t v348 = v347 >> 7;
        __dst[3] = v347 >> 7;
        __dst += 4;
        if (v347 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v349 = v348 >> 14;
            v348 >>= 7;
            *__dst++ = v348;
          }
          while (v349);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v350 = *(unsigned int *)(a1 + 608);
  if ((int)v350 >= 1)
  {
    for (uint64_t i13 = 0; i13 != v350; ++i13)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v352 = *(int *)(*(void *)(a1 + 616) + 4 * i13);
      *(_WORD *)__dst = 2760;
      __dst[2] = v352;
      if (v352 > 0x7F)
      {
        __dst[2] = v352 | 0x80;
        unint64_t v353 = v352 >> 7;
        __dst[3] = v352 >> 7;
        __dst += 4;
        if (v352 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v354 = v353 >> 14;
            v353 >>= 7;
            *__dst++ = v353;
          }
          while (v354);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 18) & 0x40) != 0) {
    __dst = sub_117A0AC(a3, 170, (const void **)(*(void *)(a1 + 848) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v355 = *(unsigned int *)(a1 + 624);
  if ((int)v355 >= 1)
  {
    for (uint64_t i14 = 0; i14 != v355; ++i14)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v357 = *(void *)(*(void *)(a1 + 632) + 8 * i14);
      *(_WORD *)__dst = 2776;
      __dst[2] = v357;
      if (v357 > 0x7F)
      {
        __dst[2] = v357 | 0x80;
        unint64_t v358 = v357 >> 7;
        __dst[3] = v357 >> 7;
        __dst += 4;
        if (v357 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v359 = v358 >> 14;
            v358 >>= 7;
            *__dst++ = v358;
          }
          while (v359);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 22) & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v360 = *(void *)(a1 + 1072);
    *(_WORD *)__dst = 2786;
    unsigned int v361 = *(_DWORD *)(v360 + 40);
    __dst[2] = v361;
    if (v361 > 0x7F) {
      int v362 = sub_188A9CC(v361, __dst + 2);
    }
    else {
      int v362 = __dst + 3;
    }
    __dst = sub_15A5438(v360, v362, a3);
  }
  if ((*(unsigned char *)(a1 + 32) & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v363 = *(unsigned char *)(a1 + 1210);
    *(_WORD *)__dst = 2792;
    __dst[2] = v363;
    __dst += 3;
  }
  if ((*(unsigned char *)(a1 + 22) & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v364 = *(void *)(a1 + 1080);
    *(_WORD *)__dst = 2802;
    unsigned int v365 = *(_DWORD *)(v364 + 44);
    __dst[2] = v365;
    if (v365 > 0x7F) {
      int v366 = sub_188A9CC(v365, __dst + 2);
    }
    else {
      int v366 = __dst + 3;
    }
    __dst = sub_15B0C0C(v364, v366, a3);
  }
  uint64_t v367 = *(unsigned int *)(a1 + 640);
  if ((int)v367 >= 1)
  {
    for (uint64_t i15 = 0; i15 != v367; ++i15)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v369 = *(int *)(*(void *)(a1 + 648) + 4 * i15);
      *(_WORD *)__dst = 2808;
      __dst[2] = v369;
      if (v369 > 0x7F)
      {
        __dst[2] = v369 | 0x80;
        unint64_t v370 = v369 >> 7;
        __dst[3] = v369 >> 7;
        __dst += 4;
        if (v369 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v371 = v370 >> 14;
            v370 >>= 7;
            *__dst++ = v370;
          }
          while (v371);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  int v372 = *(_DWORD *)(a1 + 32);
  if ((v372 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v373 = *(unsigned char *)(a1 + 1211);
    *(_WORD *)__dst = 2944;
    __dst[2] = v373;
    __dst += 3;
  }
  if ((v372 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v374 = *(unsigned char *)(a1 + 1212);
    *(_WORD *)__dst = 2952;
    __dst[2] = v374;
    __dst += 3;
  }
  uint64_t v375 = *(unsigned int *)(a1 + 656);
  if ((int)v375 >= 1)
  {
    for (uint64_t i16 = 0; i16 != v375; ++i16)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v377 = *(void *)(*(void *)(a1 + 664) + 8 * i16);
      *(_WORD *)__dst = 2960;
      __dst[2] = v377;
      if (v377 > 0x7F)
      {
        __dst[2] = v377 | 0x80;
        unint64_t v378 = v377 >> 7;
        __dst[3] = v377 >> 7;
        __dst += 4;
        if (v377 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v379 = v378 >> 14;
            v378 >>= 7;
            *__dst++ = v378;
          }
          while (v379);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 18) & 0x80) != 0) {
    __dst = sub_117A0AC(a3, 179, (const void **)(*(void *)(a1 + 856) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v380 = *(_DWORD *)(a1 + 32);
  if ((v380 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v381 = *(int *)(a1 + 1216);
    *(_WORD *)__dst = 2976;
    __dst[2] = v381;
    if (v381 > 0x7F)
    {
      __dst[2] = v381 | 0x80;
      unint64_t v382 = v381 >> 7;
      __dst[3] = v381 >> 7;
      __dst += 4;
      if (v381 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v383 = v382 >> 14;
          v382 >>= 7;
          *__dst++ = v382;
        }
        while (v383);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v380 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v384 = *(unsigned char *)(a1 + 1213);
    *(_WORD *)__dst = 2984;
    __dst[2] = v384;
    __dst += 3;
    if ((v380 & 2) == 0)
    {
LABEL_905:
      if ((v380 & 4) == 0) {
        goto LABEL_916;
      }
      goto LABEL_913;
    }
  }
  else if ((v380 & 2) == 0)
  {
    goto LABEL_905;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v385 = *(unsigned char *)(a1 + 1208);
  *(_WORD *)__dst = 2992;
  __dst[2] = v385;
  __dst += 3;
  if ((v380 & 4) != 0)
  {
LABEL_913:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v386 = *(unsigned char *)(a1 + 1209);
    *(_WORD *)__dst = 3000;
    __dst[2] = v386;
    __dst += 3;
  }
LABEL_916:
  uint64_t v387 = *(void *)(a1 + 8);
  if ((v387 & 1) == 0) {
    return __dst;
  }
  unint64_t v389 = v387 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v389 + 31) < 0)
  {
    v390 = *(void **)(v389 + 8);
    uint64_t v391 = *(void *)(v389 + 16);
  }
  else
  {
    v390 = (void *)(v389 + 8);
    LODWORD(v391) = *(unsigned __int8 *)(v389 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v391)
  {
    uint64_t v392 = (int)v391;
    memcpy(__dst, v390, (int)v391);
    __dst += v392;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v390, v391, __dst);
}

uint64_t sub_14EB674(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  if (v3) {
    v4 = (uint64_t *)(v3 + 8);
  }
  else {
    v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15136F8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = sub_188D5A8((unsigned int *)(a1 + 64));
  uint64_t v9 = *(unsigned int *)(a1 + 64);
  uint64_t v10 = sub_188D5A8((unsigned int *)(a1 + 80));
  uint64_t v11 = *(int *)(a1 + 104);
  uint64_t v12 = v8 + v2 + v10 + v9 + *(unsigned int *)(a1 + 80) + v11;
  uint64_t v13 = *(void *)(a1 + 112);
  if (v13) {
    unsigned int v14 = (uint64_t *)(v13 + 8);
  }
  else {
    unsigned int v14 = 0;
  }
  if (v11)
  {
    uint64_t v15 = 8 * v11;
    do
    {
      uint64_t v16 = *v14++;
      uint64_t v17 = sub_149FDEC(v16);
      v12 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6);
      v15 -= 8;
    }
    while (v15);
  }
  uint64_t v18 = sub_188D5A8((unsigned int *)(a1 + 120));
  uint64_t v19 = *(unsigned int *)(a1 + 144);
  uint64_t v20 = v18 + v12 + 2 * (v19 + *(unsigned int *)(a1 + 120));
  if ((int)v19 >= 1)
  {
    char v21 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v22 = *v21++;
      uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
      uint64_t v24 = *(void *)(v22 + 8);
      if ((v23 & 0x80u) == 0) {
        uint64_t v24 = v23;
      }
      v20 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6);
      --v19;
    }
    while (v19);
  }
  uint64_t v25 = *(unsigned int *)(a1 + 168);
  uint64_t v26 = v20 + 2 * v25;
  if ((int)v25 >= 1)
  {
    unint64_t v27 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v28 = *v27++;
      uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
      uint64_t v30 = *(void *)(v28 + 8);
      if ((v29 & 0x80u) == 0) {
        uint64_t v30 = v29;
      }
      v26 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      --v25;
    }
    while (v25);
  }
  uint64_t v31 = *(unsigned int *)(a1 + 192);
  uint64_t v32 = v26 + 2 * v31;
  if ((int)v31 >= 1)
  {
    unsigned int v33 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v34 = *v33++;
      uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
      uint64_t v36 = *(void *)(v34 + 8);
      if ((v35 & 0x80u) == 0) {
        uint64_t v36 = v35;
      }
      v32 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      --v31;
    }
    while (v31);
  }
  uint64_t v37 = *(unsigned int *)(a1 + 216);
  uint64_t v38 = v32 + 2 * v37;
  if ((int)v37 >= 1)
  {
    unint64_t v39 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v40 = *v39++;
      uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
      uint64_t v42 = *(void *)(v40 + 8);
      if ((v41 & 0x80u) == 0) {
        uint64_t v42 = v41;
      }
      v38 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      --v37;
    }
    while (v37);
  }
  uint64_t v43 = *(unsigned int *)(a1 + 240);
  uint64_t v44 = v38 + 2 * v43;
  if ((int)v43 >= 1)
  {
    int64_t v45 = (uint64_t *)(*(void *)(a1 + 248) + 8);
    do
    {
      uint64_t v46 = *v45++;
      uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
      uint64_t v48 = *(void *)(v46 + 8);
      if ((v47 & 0x80u) == 0) {
        uint64_t v48 = v47;
      }
      v44 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6);
      --v43;
    }
    while (v43);
  }
  uint64_t v49 = *(unsigned int *)(a1 + 264);
  uint64_t v50 = v44 + 2 * v49;
  if ((int)v49 >= 1)
  {
    int64_t v51 = (uint64_t *)(*(void *)(a1 + 272) + 8);
    do
    {
      uint64_t v52 = *v51++;
      uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
      uint64_t v54 = *(void *)(v52 + 8);
      if ((v53 & 0x80u) == 0) {
        uint64_t v54 = v53;
      }
      v50 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6);
      --v49;
    }
    while (v49);
  }
  uint64_t v55 = *(int *)(a1 + 288);
  uint64_t v56 = v50 + 2 * v55;
  uint64_t v57 = *(void *)(a1 + 296);
  if (v57) {
    char v58 = (uint64_t *)(v57 + 8);
  }
  else {
    char v58 = 0;
  }
  if (v55)
  {
    uint64_t v59 = 8 * v55;
    do
    {
      uint64_t v60 = *v58++;
      uint64_t v61 = sub_14A11E4(v60);
      v56 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6);
      v59 -= 8;
    }
    while (v59);
  }
  uint64_t v62 = *(int *)(a1 + 312);
  uint64_t v63 = v56 + 2 * v62;
  uint64_t v64 = *(void *)(a1 + 320);
  if (v64) {
    uint64_t v65 = (uint64_t *)(v64 + 8);
  }
  else {
    uint64_t v65 = 0;
  }
  if (v62)
  {
    uint64_t v66 = 8 * v62;
    do
    {
      uint64_t v67 = *v65++;
      uint64_t v68 = sub_12D2180(v67);
      v63 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6);
      v66 -= 8;
    }
    while (v66);
  }
  uint64_t v69 = *(int *)(a1 + 336);
  uint64_t v70 = v63 + 2 * v69;
  uint64_t v71 = *(void *)(a1 + 344);
  if (v71) {
    int v72 = (uint64_t *)(v71 + 8);
  }
  else {
    int v72 = 0;
  }
  if (v69)
  {
    uint64_t v73 = 8 * v69;
    do
    {
      uint64_t v74 = *v72++;
      uint64_t v75 = sub_149FDEC(v74);
      v70 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6);
      v73 -= 8;
    }
    while (v73);
  }
  uint64_t v76 = *(int *)(a1 + 360);
  uint64_t v77 = v70 + 2 * v76;
  uint64_t v78 = *(void *)(a1 + 368);
  if (v78) {
    uint64_t v79 = (uint64_t *)(v78 + 8);
  }
  else {
    uint64_t v79 = 0;
  }
  if (v76)
  {
    uint64_t v80 = 8 * v76;
    do
    {
      uint64_t v81 = *v79++;
      uint64_t v82 = sub_149FDEC(v81);
      v77 += v82 + ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6);
      v80 -= 8;
    }
    while (v80);
  }
  uint64_t v83 = *(int *)(a1 + 384);
  uint64_t v84 = v77 + 2 * v83;
  uint64_t v85 = *(void *)(a1 + 392);
  if (v85) {
    uint64_t v86 = (uint64_t *)(v85 + 8);
  }
  else {
    uint64_t v86 = 0;
  }
  if (v83)
  {
    uint64_t v87 = 8 * v83;
    do
    {
      uint64_t v88 = *v86++;
      uint64_t v89 = sub_12CDCD4(v88);
      v84 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6);
      v87 -= 8;
    }
    while (v87);
  }
  uint64_t v90 = sub_188D5A8((unsigned int *)(a1 + 400));
  uint64_t v91 = *(unsigned int *)(a1 + 400);
  uint64_t v92 = sub_188D5A8((unsigned int *)(a1 + 416));
  uint64_t v93 = *(unsigned int *)(a1 + 416);
  uint64_t v94 = sub_188D498((unsigned int *)(a1 + 432));
  uint64_t v95 = *(unsigned int *)(a1 + 432);
  uint64_t v96 = sub_188D5A8((unsigned int *)(a1 + 448));
  uint64_t v97 = *(int *)(a1 + 472);
  uint64_t v98 = v90 + v94 + v96 + v84 + v92 + 2 * (v93 + v91 + v95 + *(unsigned int *)(a1 + 448) + v97);
  uint64_t v99 = *(void *)(a1 + 480);
  if (v99) {
    uint64_t v100 = (uint64_t *)(v99 + 8);
  }
  else {
    uint64_t v100 = 0;
  }
  if (v97)
  {
    uint64_t v101 = 8 * v97;
    do
    {
      uint64_t v102 = *v100++;
      unint64_t v103 = sub_14A170C(v102);
      v98 += v103 + ((9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6);
      v101 -= 8;
    }
    while (v101);
  }
  uint64_t v104 = *(int *)(a1 + 496);
  uint64_t v105 = v98 + 2 * v104;
  uint64_t v106 = *(void *)(a1 + 504);
  if (v106) {
    int v107 = (uint64_t *)(v106 + 8);
  }
  else {
    int v107 = 0;
  }
  if (v104)
  {
    uint64_t v108 = 8 * v104;
    do
    {
      uint64_t v109 = *v107++;
      uint64_t v110 = sub_15BAE94(v109);
      v105 += v110 + ((9 * (__clz(v110 | 1) ^ 0x1F) + 73) >> 6);
      v108 -= 8;
    }
    while (v108);
  }
  uint64_t v263 = sub_188D5A8((unsigned int *)(a1 + 512));
  uint64_t v261 = *(unsigned int *)(a1 + 512);
  uint64_t v262 = sub_188D5A8((unsigned int *)(a1 + 528));
  uint64_t v259 = *(unsigned int *)(a1 + 528);
  uint64_t v260 = sub_188D5A8((unsigned int *)(a1 + 544));
  uint64_t v257 = *(unsigned int *)(a1 + 544);
  uint64_t v258 = sub_188D5A8((unsigned int *)(a1 + 560));
  uint64_t v255 = *(unsigned int *)(a1 + 560);
  uint64_t v256 = sub_188D5A8((unsigned int *)(a1 + 576));
  uint64_t v111 = *(unsigned int *)(a1 + 576);
  uint64_t v254 = sub_188D5A8((unsigned int *)(a1 + 592));
  uint64_t v112 = *(unsigned int *)(a1 + 592);
  uint64_t v113 = *(unsigned int *)(a1 + 608);
  if (v113)
  {
    int v114 = 0;
    uint64_t v115 = 0;
    do
    {
      int v116 = *(_DWORD *)(*(void *)(a1 + 616) + 4 * v114);
      if (v116 < 0) {
        uint64_t v117 = 10;
      }
      else {
        uint64_t v117 = (9 * (__clz(v116 | 1) ^ 0x1F) + 73) >> 6;
      }
      v115 += v117;
      ++v114;
    }
    while (v113 != v114);
  }
  else
  {
    uint64_t v115 = 0;
  }
  uint64_t v118 = sub_188D5A8((unsigned int *)(a1 + 624));
  uint64_t v120 = *(unsigned int *)(a1 + 640);
  if (v120)
  {
    int v121 = 0;
    uint64_t v122 = 0;
    do
    {
      int v123 = *(_DWORD *)(*(void *)(a1 + 648) + 4 * v121);
      if (v123 < 0) {
        uint64_t v124 = 10;
      }
      else {
        uint64_t v124 = (9 * (__clz(v123 | 1) ^ 0x1F) + 73) >> 6;
      }
      v122 += v124;
      ++v121;
    }
    while (v120 != v121);
  }
  else
  {
    uint64_t v122 = 0;
  }
  uint64_t v119 = *(unsigned int *)(a1 + 624);
  uint64_t v125 = v263
       + v105
       + v262
       + v260
       + v258
       + v256
       + v254
       + v115
       + v118
       + v122
       + sub_188D5A8((unsigned int *)(a1 + 656))
       + 2 * (v259 + v261 + v257 + v255 + v111 + v112 + v113 + v119 + v120 + *(unsigned int *)(a1 + 656));
  unsigned int v126 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v126) {
    goto LABEL_115;
  }
  if (v126)
  {
    unint64_t v150 = *(void *)(a1 + 672) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v151 = *(unsigned __int8 *)(v150 + 23);
    uint64_t v152 = *(void *)(v150 + 8);
    if ((v151 & 0x80u) == 0) {
      uint64_t v152 = v151;
    }
    v125 += v152 + ((9 * (__clz(v152 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v126 & 2) == 0)
    {
LABEL_106:
      if ((v126 & 4) == 0) {
        goto LABEL_107;
      }
      goto LABEL_242;
    }
  }
  else if ((v126 & 2) == 0)
  {
    goto LABEL_106;
  }
  unint64_t v153 = *(void *)(a1 + 680) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v154 = *(unsigned __int8 *)(v153 + 23);
  uint64_t v155 = *(void *)(v153 + 8);
  if ((v154 & 0x80u) == 0) {
    uint64_t v155 = v154;
  }
  v125 += v155 + ((9 * (__clz(v155 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v126 & 4) == 0)
  {
LABEL_107:
    if ((v126 & 8) == 0) {
      goto LABEL_108;
    }
    goto LABEL_245;
  }
LABEL_242:
  unint64_t v156 = *(void *)(a1 + 688) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v157 = *(unsigned __int8 *)(v156 + 23);
  uint64_t v158 = *(void *)(v156 + 8);
  if ((v157 & 0x80u) == 0) {
    uint64_t v158 = v157;
  }
  v125 += v158 + ((9 * (__clz(v158 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 8) == 0)
  {
LABEL_108:
    if ((v126 & 0x10) == 0) {
      goto LABEL_109;
    }
    goto LABEL_248;
  }
LABEL_245:
  unint64_t v159 = *(void *)(a1 + 696) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v160 = *(unsigned __int8 *)(v159 + 23);
  uint64_t v161 = *(void *)(v159 + 8);
  if ((v160 & 0x80u) == 0) {
    uint64_t v161 = v160;
  }
  v125 += v161 + ((9 * (__clz(v161 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x10) == 0)
  {
LABEL_109:
    if ((v126 & 0x20) == 0) {
      goto LABEL_110;
    }
LABEL_251:
    unint64_t v165 = *(void *)(a1 + 712) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v166 = *(unsigned __int8 *)(v165 + 23);
    uint64_t v167 = *(void *)(v165 + 8);
    if ((v166 & 0x80u) == 0) {
      uint64_t v167 = v166;
    }
    v125 += v167 + ((9 * (__clz(v167 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v126 & 0x40) == 0)
    {
LABEL_111:
      if ((v126 & 0x80) == 0) {
        goto LABEL_115;
      }
      goto LABEL_112;
    }
    goto LABEL_254;
  }
LABEL_248:
  unint64_t v162 = *(void *)(a1 + 704) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v163 = *(unsigned __int8 *)(v162 + 23);
  uint64_t v164 = *(void *)(v162 + 8);
  if ((v163 & 0x80u) == 0) {
    uint64_t v164 = v163;
  }
  v125 += v164 + ((9 * (__clz(v164 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x20) != 0) {
    goto LABEL_251;
  }
LABEL_110:
  if ((v126 & 0x40) == 0) {
    goto LABEL_111;
  }
LABEL_254:
  unint64_t v168 = *(void *)(a1 + 720) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v169 = *(unsigned __int8 *)(v168 + 23);
  uint64_t v170 = *(void *)(v168 + 8);
  if ((v169 & 0x80u) == 0) {
    uint64_t v170 = v169;
  }
  v125 += v170 + ((9 * (__clz(v170 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x80) != 0)
  {
LABEL_112:
    unint64_t v127 = *(void *)(a1 + 728) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v128 = *(unsigned __int8 *)(v127 + 23);
    uint64_t v129 = *(void *)(v127 + 8);
    if ((v128 & 0x80u) == 0) {
      uint64_t v129 = v128;
    }
    v125 += v129 + ((9 * (__clz(v129 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_115:
  if ((v126 & 0xFF00) == 0) {
    goto LABEL_127;
  }
  if ((v126 & 0x100) != 0)
  {
    unint64_t v171 = *(void *)(a1 + 736) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v172 = *(unsigned __int8 *)(v171 + 23);
    uint64_t v173 = *(void *)(v171 + 8);
    if ((v172 & 0x80u) == 0) {
      uint64_t v173 = v172;
    }
    v125 += v173 + ((9 * (__clz(v173 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v126 & 0x200) == 0)
    {
LABEL_118:
      if ((v126 & 0x400) == 0) {
        goto LABEL_119;
      }
      goto LABEL_264;
    }
  }
  else if ((v126 & 0x200) == 0)
  {
    goto LABEL_118;
  }
  unint64_t v174 = *(void *)(a1 + 744) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v175 = *(unsigned __int8 *)(v174 + 23);
  uint64_t v176 = *(void *)(v174 + 8);
  if ((v175 & 0x80u) == 0) {
    uint64_t v176 = v175;
  }
  v125 += v176 + ((9 * (__clz(v176 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x400) == 0)
  {
LABEL_119:
    if ((v126 & 0x800) == 0) {
      goto LABEL_120;
    }
    goto LABEL_267;
  }
LABEL_264:
  unint64_t v177 = *(void *)(a1 + 752) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v178 = *(unsigned __int8 *)(v177 + 23);
  uint64_t v179 = *(void *)(v177 + 8);
  if ((v178 & 0x80u) == 0) {
    uint64_t v179 = v178;
  }
  v125 += v179 + ((9 * (__clz(v179 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x800) == 0)
  {
LABEL_120:
    if ((v126 & 0x1000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_270;
  }
LABEL_267:
  unint64_t v180 = *(void *)(a1 + 760) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v181 = *(unsigned __int8 *)(v180 + 23);
  uint64_t v182 = *(void *)(v180 + 8);
  if ((v181 & 0x80u) == 0) {
    uint64_t v182 = v181;
  }
  v125 += v182 + ((9 * (__clz(v182 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x1000) == 0)
  {
LABEL_121:
    if ((v126 & 0x2000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_273;
  }
LABEL_270:
  unint64_t v183 = *(void *)(a1 + 768) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v184 = *(unsigned __int8 *)(v183 + 23);
  uint64_t v185 = *(void *)(v183 + 8);
  if ((v184 & 0x80u) == 0) {
    uint64_t v185 = v184;
  }
  v125 += v185 + ((9 * (__clz(v185 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x2000) == 0)
  {
LABEL_122:
    if ((v126 & 0x4000) == 0) {
      goto LABEL_123;
    }
    goto LABEL_276;
  }
LABEL_273:
  unint64_t v186 = *(void *)(a1 + 776) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v187 = *(unsigned __int8 *)(v186 + 23);
  uint64_t v188 = *(void *)(v186 + 8);
  if ((v187 & 0x80u) == 0) {
    uint64_t v188 = v187;
  }
  v125 += v188 + ((9 * (__clz(v188 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x4000) == 0)
  {
LABEL_123:
    if ((v126 & 0x8000) == 0) {
      goto LABEL_127;
    }
    goto LABEL_124;
  }
LABEL_276:
  unint64_t v189 = *(void *)(a1 + 784) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v190 = *(unsigned __int8 *)(v189 + 23);
  uint64_t v191 = *(void *)(v189 + 8);
  if ((v190 & 0x80u) == 0) {
    uint64_t v191 = v190;
  }
  v125 += v191 + ((9 * (__clz(v191 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x8000) != 0)
  {
LABEL_124:
    unint64_t v130 = *(void *)(a1 + 792) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v131 = *(unsigned __int8 *)(v130 + 23);
    uint64_t v132 = *(void *)(v130 + 8);
    if ((v131 & 0x80u) == 0) {
      uint64_t v132 = v131;
    }
    v125 += v132 + ((9 * (__clz(v132 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_127:
  if ((v126 & 0xFF0000) == 0) {
    goto LABEL_139;
  }
  if ((v126 & 0x10000) != 0)
  {
    unint64_t v192 = *(void *)(a1 + 800) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v193 = *(unsigned __int8 *)(v192 + 23);
    uint64_t v194 = *(void *)(v192 + 8);
    if ((v193 & 0x80u) == 0) {
      uint64_t v194 = v193;
    }
    v125 += v194 + ((9 * (__clz(v194 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v126 & 0x20000) == 0)
    {
LABEL_130:
      if ((v126 & 0x40000) == 0) {
        goto LABEL_131;
      }
      goto LABEL_286;
    }
  }
  else if ((v126 & 0x20000) == 0)
  {
    goto LABEL_130;
  }
  unint64_t v195 = *(void *)(a1 + 808) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v196 = *(unsigned __int8 *)(v195 + 23);
  uint64_t v197 = *(void *)(v195 + 8);
  if ((v196 & 0x80u) == 0) {
    uint64_t v197 = v196;
  }
  v125 += v197 + ((9 * (__clz(v197 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x40000) == 0)
  {
LABEL_131:
    if ((v126 & 0x80000) == 0) {
      goto LABEL_132;
    }
    goto LABEL_289;
  }
LABEL_286:
  unint64_t v198 = *(void *)(a1 + 816) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v199 = *(unsigned __int8 *)(v198 + 23);
  uint64_t v200 = *(void *)(v198 + 8);
  if ((v199 & 0x80u) == 0) {
    uint64_t v200 = v199;
  }
  v125 += v200 + ((9 * (__clz(v200 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x80000) == 0)
  {
LABEL_132:
    if ((v126 & 0x100000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_292;
  }
LABEL_289:
  unint64_t v201 = *(void *)(a1 + 824) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v202 = *(unsigned __int8 *)(v201 + 23);
  uint64_t v203 = *(void *)(v201 + 8);
  if ((v202 & 0x80u) == 0) {
    uint64_t v203 = v202;
  }
  v125 += v203 + ((9 * (__clz(v203 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x100000) == 0)
  {
LABEL_133:
    if ((v126 & 0x200000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_295;
  }
LABEL_292:
  unint64_t v204 = *(void *)(a1 + 832) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v205 = *(unsigned __int8 *)(v204 + 23);
  uint64_t v206 = *(void *)(v204 + 8);
  if ((v205 & 0x80u) == 0) {
    uint64_t v206 = v205;
  }
  v125 += v206 + ((9 * (__clz(v206 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x200000) == 0)
  {
LABEL_134:
    if ((v126 & 0x400000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_298;
  }
LABEL_295:
  unint64_t v207 = *(void *)(a1 + 840) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v208 = *(unsigned __int8 *)(v207 + 23);
  uint64_t v209 = *(void *)(v207 + 8);
  if ((v208 & 0x80u) == 0) {
    uint64_t v209 = v208;
  }
  v125 += v209 + ((9 * (__clz(v209 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x400000) == 0)
  {
LABEL_135:
    if ((v126 & 0x800000) == 0) {
      goto LABEL_139;
    }
    goto LABEL_136;
  }
LABEL_298:
  unint64_t v210 = *(void *)(a1 + 848) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v211 = *(unsigned __int8 *)(v210 + 23);
  uint64_t v212 = *(void *)(v210 + 8);
  if ((v211 & 0x80u) == 0) {
    uint64_t v212 = v211;
  }
  v125 += v212 + ((9 * (__clz(v212 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x800000) != 0)
  {
LABEL_136:
    unint64_t v133 = *(void *)(a1 + 856) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v134 = *(unsigned __int8 *)(v133 + 23);
    uint64_t v135 = *(void *)(v133 + 8);
    if ((v134 & 0x80u) == 0) {
      uint64_t v135 = v134;
    }
    v125 += v135 + ((9 * (__clz(v135 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_139:
  if (!HIBYTE(v126)) {
    goto LABEL_148;
  }
  if ((v126 & 0x1000000) != 0)
  {
    uint64_t v230 = sub_12CA008(*(void *)(a1 + 864));
    v125 += v230 + ((9 * (__clz(v230 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v126 & 0x2000000) == 0)
    {
LABEL_142:
      if ((v126 & 0x4000000) == 0) {
        goto LABEL_143;
      }
      goto LABEL_324;
    }
  }
  else if ((v126 & 0x2000000) == 0)
  {
    goto LABEL_142;
  }
  unint64_t v231 = sub_15BA324(*(void *)(a1 + 872));
  v125 += v231 + ((9 * (__clz(v231 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x4000000) == 0)
  {
LABEL_143:
    if ((v126 & 0x8000000) == 0) {
      goto LABEL_144;
    }
    goto LABEL_325;
  }
LABEL_324:
  uint64_t v232 = sub_15B4924(*(void *)(a1 + 880));
  v125 += v232 + ((9 * (__clz(v232 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x8000000) == 0)
  {
LABEL_144:
    if ((v126 & 0x10000000) == 0) {
      goto LABEL_145;
    }
    goto LABEL_326;
  }
LABEL_325:
  uint64_t v233 = sub_1468738(*(void *)(a1 + 888));
  v125 += v233 + ((9 * (__clz(v233 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x10000000) == 0)
  {
LABEL_145:
    if ((v126 & 0x20000000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_327;
  }
LABEL_326:
  uint64_t v234 = sub_12CA008(*(void *)(a1 + 896));
  v125 += v234 + ((9 * (__clz(v234 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x20000000) == 0)
  {
LABEL_146:
    if ((v126 & 0x40000000) == 0) {
      goto LABEL_147;
    }
LABEL_328:
    uint64_t v236 = sub_12CD2A4(*(void *)(a1 + 912));
    v125 += v236 + ((9 * (__clz(v236 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v126 & 0x80000000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_329;
  }
LABEL_327:
  uint64_t v235 = sub_14EF8A4(*(void *)(a1 + 904));
  v125 += v235 + ((9 * (__clz(v235 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v126 & 0x40000000) != 0) {
    goto LABEL_328;
  }
LABEL_147:
  if ((v126 & 0x80000000) == 0) {
    goto LABEL_148;
  }
LABEL_329:
  uint64_t v237 = sub_12C9348(*(void *)(a1 + 920));
  v125 += v237 + ((9 * (__clz(v237 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_148:
  int v136 = *(_DWORD *)(a1 + 20);
  if (!(_BYTE)v136) {
    goto LABEL_158;
  }
  if (v136)
  {
    uint64_t v213 = sub_12CC714(*(void *)(a1 + 928));
    v125 += v213 + ((9 * (__clz(v213 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v136 & 2) == 0)
    {
LABEL_151:
      if ((v136 & 4) == 0) {
        goto LABEL_152;
      }
      goto LABEL_304;
    }
  }
  else if ((v136 & 2) == 0)
  {
    goto LABEL_151;
  }
  uint64_t v214 = sub_12CC714(*(void *)(a1 + 936));
  v125 += v214 + ((9 * (__clz(v214 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 4) == 0)
  {
LABEL_152:
    if ((v136 & 8) == 0) {
      goto LABEL_153;
    }
    goto LABEL_305;
  }
LABEL_304:
  uint64_t v215 = sub_14E0CE0(*(void *)(a1 + 944));
  v125 += v215 + ((9 * (__clz(v215 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 8) == 0)
  {
LABEL_153:
    if ((v136 & 0x10) == 0) {
      goto LABEL_154;
    }
    goto LABEL_306;
  }
LABEL_305:
  unint64_t v216 = sub_12CB020(*(void *)(a1 + 952));
  v125 += v216 + ((9 * (__clz(v216 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x10) == 0)
  {
LABEL_154:
    if ((v136 & 0x20) == 0) {
      goto LABEL_155;
    }
    goto LABEL_307;
  }
LABEL_306:
  uint64_t v217 = sub_14E0CE0(*(void *)(a1 + 960));
  v125 += v217 + ((9 * (__clz(v217 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x20) == 0)
  {
LABEL_155:
    if ((v136 & 0x40) == 0) {
      goto LABEL_156;
    }
    goto LABEL_308;
  }
LABEL_307:
  uint64_t v218 = sub_12C993C(*(void *)(a1 + 968));
  v125 += v218 + ((9 * (__clz(v218 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x40) == 0)
  {
LABEL_156:
    if ((v136 & 0x80) == 0) {
      goto LABEL_158;
    }
    goto LABEL_157;
  }
LABEL_308:
  uint64_t v219 = sub_12C9348(*(void *)(a1 + 976));
  v125 += v219 + ((9 * (__clz(v219 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x80) != 0)
  {
LABEL_157:
    unint64_t v137 = sub_12CB020(*(void *)(a1 + 984));
    v125 += v137 + ((9 * (__clz(v137 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_158:
  if ((v136 & 0xFF00) == 0) {
    goto LABEL_168;
  }
  if ((v136 & 0x100) != 0)
  {
    unint64_t v220 = sub_12CB020(*(void *)(a1 + 992));
    v125 += v220 + ((9 * (__clz(v220 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v136 & 0x200) == 0)
    {
LABEL_161:
      if ((v136 & 0x400) == 0) {
        goto LABEL_162;
      }
      goto LABEL_312;
    }
  }
  else if ((v136 & 0x200) == 0)
  {
    goto LABEL_161;
  }
  uint64_t v221 = sub_12CA008(*(void *)(a1 + 1000));
  v125 += v221 + ((9 * (__clz(v221 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x400) == 0)
  {
LABEL_162:
    if ((v136 & 0x800) == 0) {
      goto LABEL_163;
    }
    goto LABEL_313;
  }
LABEL_312:
  uint64_t v222 = sub_158BC44(*(void *)(a1 + 1008));
  v125 += v222 + ((9 * (__clz(v222 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x800) == 0)
  {
LABEL_163:
    if ((v136 & 0x1000) == 0) {
      goto LABEL_164;
    }
    goto LABEL_314;
  }
LABEL_313:
  uint64_t v223 = sub_12D26FC(*(void *)(a1 + 1016));
  v125 += v223 + ((9 * (__clz(v223 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x1000) == 0)
  {
LABEL_164:
    if ((v136 & 0x2000) == 0) {
      goto LABEL_165;
    }
    goto LABEL_315;
  }
LABEL_314:
  uint64_t v224 = sub_12C9348(*(void *)(a1 + 1024));
  v125 += v224 + ((9 * (__clz(v224 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x2000) == 0)
  {
LABEL_165:
    if ((v136 & 0x4000) == 0) {
      goto LABEL_166;
    }
    goto LABEL_316;
  }
LABEL_315:
  uint64_t v225 = sub_12CC714(*(void *)(a1 + 1032));
  v125 += v225 + ((9 * (__clz(v225 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x4000) == 0)
  {
LABEL_166:
    if ((v136 & 0x8000) == 0) {
      goto LABEL_168;
    }
    goto LABEL_167;
  }
LABEL_316:
  uint64_t v226 = sub_1230EB8(*(void *)(a1 + 1040));
  v125 += v226 + ((9 * (__clz(v226 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x8000) != 0)
  {
LABEL_167:
    uint64_t v138 = sub_1232104(*(void *)(a1 + 1048));
    v125 += v138 + ((9 * (__clz(v138 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_168:
  if ((v136 & 0xFF0000) == 0) {
    goto LABEL_183;
  }
  if ((v136 & 0x10000) != 0)
  {
    uint64_t v227 = sub_145F378(*(void *)(a1 + 1056));
    v125 += v227 + ((9 * (__clz(v227 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v136 & 0x20000) == 0)
    {
LABEL_171:
      if ((v136 & 0x40000) == 0) {
        goto LABEL_172;
      }
LABEL_320:
      uint64_t v229 = sub_15A557C(*(void *)(a1 + 1072));
      v125 += v229 + ((9 * (__clz(v229 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if ((v136 & 0x80000) == 0) {
        goto LABEL_174;
      }
      goto LABEL_173;
    }
  }
  else if ((v136 & 0x20000) == 0)
  {
    goto LABEL_171;
  }
  uint64_t v228 = sub_15A557C(*(void *)(a1 + 1064));
  v125 += v228 + ((9 * (__clz(v228 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v136 & 0x40000) != 0) {
    goto LABEL_320;
  }
LABEL_172:
  if ((v136 & 0x80000) != 0)
  {
LABEL_173:
    uint64_t v139 = sub_15B0D90(*(void *)(a1 + 1080));
    v125 += v139 + ((9 * (__clz(v139 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_174:
  uint64_t v140 = v125 + 2;
  if ((v136 & 0x100000) == 0) {
    uint64_t v140 = v125;
  }
  if ((v136 & 0x200000) != 0) {
    v140 += 2;
  }
  if ((v136 & 0x400000) != 0) {
    v140 += 2;
  }
  if ((v136 & 0x800000) != 0) {
    uint64_t v125 = v140 + 2;
  }
  else {
    uint64_t v125 = v140;
  }
LABEL_183:
  if (HIBYTE(v136))
  {
    if ((v136 & 0x1000000) != 0)
    {
      int v141 = *(_DWORD *)(a1 + 1092);
      uint64_t v142 = (9 * (__clz(v141 | 1) ^ 0x1F) + 73) >> 6;
      if (v141 >= 0) {
        uint64_t v143 = v142;
      }
      else {
        uint64_t v143 = 10;
      }
      v125 += v143 + 2;
    }
    uint64_t v144 = v125 + 3;
    if ((v136 & 0x2000000) == 0) {
      uint64_t v144 = v125;
    }
    if ((v136 & 0x4000000) != 0) {
      v144 += 3;
    }
    if ((v136 & 0x8000000) != 0) {
      v144 += 3;
    }
    if ((v136 & 0x10000000) != 0) {
      v144 += 3;
    }
    if ((v136 & 0x20000000) != 0) {
      v144 += 3;
    }
    if ((v136 & 0x40000000) != 0) {
      v144 += 3;
    }
    if (v136 >= 0) {
      uint64_t v125 = v144;
    }
    else {
      uint64_t v125 = v144 + 3;
    }
  }
  int v145 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v145)
  {
    uint64_t v146 = v125 + 3;
    if ((v145 & 1) == 0) {
      uint64_t v146 = v125;
    }
    if ((v145 & 2) != 0) {
      v146 += 3;
    }
    if ((v145 & 4) != 0) {
      v146 += 3;
    }
    if ((v145 & 8) != 0) {
      v146 += 3;
    }
    if ((v145 & 0x10) != 0) {
      v146 += 3;
    }
    if ((v145 & 0x20) != 0) {
      v146 += 3;
    }
    if ((v145 & 0x40) != 0) {
      v146 += 3;
    }
    if ((v145 & 0x80) != 0) {
      uint64_t v125 = v146 + 3;
    }
    else {
      uint64_t v125 = v146;
    }
  }
  if ((v145 & 0xFF00) != 0)
  {
    uint64_t v147 = v125 + 3;
    if ((v145 & 0x100) == 0) {
      uint64_t v147 = v125;
    }
    if ((v145 & 0x200) != 0) {
      v147 += 3;
    }
    if ((v145 & 0x400) != 0) {
      v147 += 3;
    }
    if ((v145 & 0x800) != 0) {
      v147 += 3;
    }
    if ((v145 & 0x1000) != 0) {
      v147 += 3;
    }
    if ((v145 & 0x2000) != 0)
    {
      int v148 = *(_DWORD *)(a1 + 1116);
      if (v148 < 0) {
        uint64_t v149 = 10;
      }
      else {
        uint64_t v149 = (9 * (__clz(v148 | 1) ^ 0x1F) + 73) >> 6;
      }
      v147 += v149 + 2;
    }
    if ((v145 & 0x4000) != 0) {
      v147 += ((9 * (__clz(*(_DWORD *)(a1 + 1120) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v145 & 0x8000) != 0) {
      uint64_t v125 = v147 + 3;
    }
    else {
      uint64_t v125 = v147;
    }
  }
  if ((v145 & 0xFF0000) != 0)
  {
    uint64_t v238 = v125 + 3;
    if ((v145 & 0x10000) == 0) {
      uint64_t v238 = v125;
    }
    if ((v145 & 0x20000) != 0) {
      v238 += 3;
    }
    if ((v145 & 0x40000) != 0) {
      v238 += 3;
    }
    if ((v145 & 0x80000) != 0) {
      v238 += ((9 * (__clz(*(_DWORD *)(a1 + 1128) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v145 & 0x100000) != 0) {
      v238 += 3;
    }
    if ((v145 & 0x200000) != 0) {
      v238 += 3;
    }
    if ((v145 & 0x400000) != 0) {
      v238 += 3;
    }
    if ((v145 & 0x800000) != 0) {
      uint64_t v125 = v238 + 3;
    }
    else {
      uint64_t v125 = v238;
    }
  }
  if (HIBYTE(v145))
  {
    if ((v145 & 0x1000000) != 0) {
      v125 += ((9 * (__clz(*(void *)(a1 + 1136) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    uint64_t v239 = v125 + 3;
    if ((v145 & 0x2000000) == 0) {
      uint64_t v239 = v125;
    }
    if ((v145 & 0x4000000) != 0) {
      v239 += 3;
    }
    if ((v145 & 0x8000000) != 0) {
      v239 += 3;
    }
    if ((v145 & 0x10000000) != 0) {
      v239 += 3;
    }
    if ((v145 & 0x20000000) != 0) {
      v239 += 3;
    }
    if ((v145 & 0x40000000) != 0) {
      v239 += 3;
    }
    if (v145 >= 0) {
      uint64_t v125 = v239;
    }
    else {
      uint64_t v125 = v239 + 3;
    }
  }
  int v240 = *(_DWORD *)(a1 + 28);
  if ((_BYTE)v240)
  {
    uint64_t v241 = v125 + 3;
    if ((v240 & 1) == 0) {
      uint64_t v241 = v125;
    }
    if ((v240 & 2) != 0)
    {
      v241 += ((9 * (__clz(*(void *)(a1 + 1152) | 1) ^ 0x3F) + 73) >> 6) + 2;
      if ((v240 & 4) == 0)
      {
LABEL_378:
        if ((v240 & 8) == 0) {
          goto LABEL_386;
        }
        goto LABEL_382;
      }
    }
    else if ((v240 & 4) == 0)
    {
      goto LABEL_378;
    }
    v241 += ((9 * (__clz(*(void *)(a1 + 1160) | 1) ^ 0x3F) + 73) >> 6) + 2;
    if ((v240 & 8) == 0)
    {
LABEL_386:
      if ((v240 & 0x10) != 0) {
        v241 += 3;
      }
      if ((v240 & 0x20) != 0) {
        v241 += 3;
      }
      if ((v240 & 0x40) != 0) {
        v241 += 3;
      }
      if ((v240 & 0x80) != 0) {
        uint64_t v125 = v241 + 3;
      }
      else {
        uint64_t v125 = v241;
      }
      goto LABEL_395;
    }
LABEL_382:
    int v242 = *(_DWORD *)(a1 + 1168);
    if (v242 < 0) {
      uint64_t v243 = 12;
    }
    else {
      uint64_t v243 = ((9 * (__clz(v242 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v241 += v243;
    goto LABEL_386;
  }
LABEL_395:
  if ((v240 & 0xFF00) != 0)
  {
    uint64_t v244 = v125 + 3;
    if ((v240 & 0x100) == 0) {
      uint64_t v244 = v125;
    }
    if ((v240 & 0x200) != 0) {
      v244 += 3;
    }
    if ((v240 & 0x400) != 0) {
      v244 += 3;
    }
    if ((v240 & 0x800) != 0) {
      v244 += 3;
    }
    if ((v240 & 0x1000) != 0) {
      v244 += 3;
    }
    if ((v240 & 0x2000) != 0) {
      v244 += 3;
    }
    if ((v240 & 0x4000) != 0) {
      v244 += 3;
    }
    if ((v240 & 0x8000) != 0) {
      uint64_t v125 = v244 + 3;
    }
    else {
      uint64_t v125 = v244;
    }
  }
  if ((v240 & 0xFF0000) != 0)
  {
    uint64_t v245 = v125 + 10;
    if ((v240 & 0x10000) == 0) {
      uint64_t v245 = v125;
    }
    if ((v240 & 0x20000) != 0) {
      v245 += 3;
    }
    if ((v240 & 0x40000) != 0) {
      v245 += 3;
    }
    if ((v240 & 0x80000) != 0) {
      v245 += 3;
    }
    if ((v240 & 0x100000) != 0) {
      v245 += 3;
    }
    if ((v240 & 0x200000) != 0) {
      v245 += 3;
    }
    if ((v240 & 0x400000) != 0) {
      v245 += 3;
    }
    if ((v240 & 0x800000) != 0) {
      uint64_t v125 = v245 + 3;
    }
    else {
      uint64_t v125 = v245;
    }
  }
  if (HIBYTE(v240))
  {
    uint64_t v246 = v125 + 3;
    if ((v240 & 0x1000000) == 0) {
      uint64_t v246 = v125;
    }
    if ((v240 & 0x2000000) != 0) {
      v246 += 3;
    }
    if ((v240 & 0x4000000) != 0) {
      v246 += 3;
    }
    if ((v240 & 0x8000000) != 0) {
      v246 += 3;
    }
    if ((v240 & 0x10000000) != 0) {
      v246 += 3;
    }
    if ((v240 & 0x20000000) != 0) {
      v246 += 3;
    }
    if ((v240 & 0x40000000) != 0) {
      v246 += 3;
    }
    if (v240 >= 0) {
      uint64_t v125 = v246;
    }
    else {
      uint64_t v125 = v246 + 3;
    }
  }
  if (*(unsigned char *)(a1 + 32))
  {
    uint64_t v247 = v125 + 3;
    if ((*(unsigned char *)(a1 + 32) & 1) == 0) {
      uint64_t v247 = v125;
    }
    if ((*(unsigned char *)(a1 + 32) & 2) != 0) {
      v247 += 3;
    }
    if ((*(unsigned char *)(a1 + 32) & 4) != 0) {
      v247 += 3;
    }
    if ((*(unsigned char *)(a1 + 32) & 8) != 0) {
      v247 += 3;
    }
    if ((*(unsigned char *)(a1 + 32) & 0x10) != 0) {
      v247 += 3;
    }
    if ((*(unsigned char *)(a1 + 32) & 0x20) != 0) {
      v247 += 3;
    }
    if ((*(unsigned char *)(a1 + 32) & 0x40) != 0) {
      uint64_t v125 = v247 + 3;
    }
    else {
      uint64_t v125 = v247;
    }
    if ((*(unsigned char *)(a1 + 32) & 0x80) != 0)
    {
      int v248 = *(_DWORD *)(a1 + 1216);
      if (v248 < 0) {
        uint64_t v249 = 12;
      }
      else {
        uint64_t v249 = ((9 * (__clz(v248 | 1) ^ 0x1F) + 73) >> 6) + 2;
      }
      v125 += v249;
    }
  }
  uint64_t v250 = *(void *)(a1 + 8);
  if (v250)
  {
    unint64_t v252 = v250 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v252 + 31) < 0) {
      uint64_t v253 = *(void *)(v252 + 16);
    }
    else {
      uint64_t v253 = *(unsigned __int8 *)(v252 + 31);
    }
    v125 += v253;
  }
  *(_DWORD *)(a1 + 36) = v125;
  return v125;
}

void sub_14ED03C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_15151F8((std::string *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 64);
    sub_188CA54((unsigned int *)(a1 + 64), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v11 + 8 * v10), *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(int *)(a1 + 80);
    sub_188CA54((unsigned int *)(a1 + 80), v13 + v12);
    uint64_t v14 = *(void *)(a1 + 88);
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
    memcpy((void *)(v14 + 8 * v13), *(const void **)(a2 + 88), 8 * *(int *)(a2 + 80));
  }
  int v15 = *(_DWORD *)(a2 + 104);
  if (v15)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v17 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122BB8C((std::string *)(a1 + 96), v17, v16, v15, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v18 = *(_DWORD *)(a1 + 104) + v15;
    *(_DWORD *)(a1 + 104) = v18;
    uint64_t v19 = *(int **)(a1 + 112);
    if (*v19 < v18) {
      *uint64_t v19 = v18;
    }
  }
  int v20 = *(_DWORD *)(a2 + 120);
  if (v20)
  {
    uint64_t v21 = *(int *)(a1 + 120);
    sub_188CA54((unsigned int *)(a1 + 120), v21 + v20);
    uint64_t v22 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v22 + 8 * v21), *(const void **)(a2 + 128), 8 * *(int *)(a2 + 120));
  }
  int v23 = *(_DWORD *)(a2 + 144);
  if (v23)
  {
    uint64_t v24 = (const std::string **)(*(void *)(a2 + 152) + 8);
    uint64_t v25 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_188FB98(a1 + 136, v25, v24, v23, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v26 = *(_DWORD *)(a1 + 144) + v23;
    *(_DWORD *)(a1 + 144) = v26;
    unint64_t v27 = *(int **)(a1 + 152);
    if (*v27 < v26) {
      *unint64_t v27 = v26;
    }
  }
  int v28 = *(_DWORD *)(a2 + 168);
  if (v28)
  {
    uint64_t v29 = (const std::string **)(*(void *)(a2 + 176) + 8);
    uint64_t v30 = (std::string **)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_188FB98(a1 + 160, v30, v29, v28, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v31 = *(_DWORD *)(a1 + 168) + v28;
    *(_DWORD *)(a1 + 168) = v31;
    uint64_t v32 = *(int **)(a1 + 176);
    if (*v32 < v31) {
      *uint64_t v32 = v31;
    }
  }
  int v33 = *(_DWORD *)(a2 + 192);
  if (v33)
  {
    uint64_t v34 = (const std::string **)(*(void *)(a2 + 200) + 8);
    uint64_t v35 = (std::string **)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_188FB98(a1 + 184, v35, v34, v33, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v36 = *(_DWORD *)(a1 + 192) + v33;
    *(_DWORD *)(a1 + 192) = v36;
    uint64_t v37 = *(int **)(a1 + 200);
    if (*v37 < v36) {
      int *v37 = v36;
    }
  }
  int v38 = *(_DWORD *)(a2 + 216);
  if (v38)
  {
    unint64_t v39 = (const std::string **)(*(void *)(a2 + 224) + 8);
    uint64_t v40 = (std::string **)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_188FB98(a1 + 208, v40, v39, v38, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v41 = *(_DWORD *)(a1 + 216) + v38;
    *(_DWORD *)(a1 + 216) = v41;
    uint64_t v42 = *(int **)(a1 + 224);
    if (*v42 < v41) {
      *uint64_t v42 = v41;
    }
  }
  int v43 = *(_DWORD *)(a2 + 240);
  if (v43)
  {
    uint64_t v44 = (const std::string **)(*(void *)(a2 + 248) + 8);
    int64_t v45 = (std::string **)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_188FB98(a1 + 232, v45, v44, v43, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v46 = *(_DWORD *)(a1 + 240) + v43;
    *(_DWORD *)(a1 + 240) = v46;
    uint64_t v47 = *(int **)(a1 + 248);
    if (*v47 < v46) {
      *uint64_t v47 = v46;
    }
  }
  int v48 = *(_DWORD *)(a2 + 264);
  if (v48)
  {
    uint64_t v49 = (const std::string **)(*(void *)(a2 + 272) + 8);
    uint64_t v50 = (std::string **)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_188FB98(a1 + 256, v50, v49, v48, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v51 = *(_DWORD *)(a1 + 264) + v48;
    *(_DWORD *)(a1 + 264) = v51;
    uint64_t v52 = *(int **)(a1 + 272);
    if (*v52 < v51) {
      int *v52 = v51;
    }
  }
  int v53 = *(_DWORD *)(a2 + 288);
  if (v53)
  {
    uint64_t v54 = (uint64_t *)(*(void *)(a2 + 296) + 8);
    uint64_t v55 = (std::string **)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_14DD9EC((std::string *)(a1 + 280), v55, v54, v53, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v56 = *(_DWORD *)(a1 + 288) + v53;
    *(_DWORD *)(a1 + 288) = v56;
    uint64_t v57 = *(int **)(a1 + 296);
    if (*v57 < v56) {
      int *v57 = v56;
    }
  }
  int v58 = *(_DWORD *)(a2 + 312);
  if (v58)
  {
    uint64_t v59 = (uint64_t *)(*(void *)(a2 + 320) + 8);
    uint64_t v60 = (std::string **)sub_188CCE4(a1 + 304, *(_DWORD *)(a2 + 312));
    sub_1515284((std::string *)(a1 + 304), v60, v59, v58, **(_DWORD **)(a1 + 320) - *(_DWORD *)(a1 + 312));
    int v61 = *(_DWORD *)(a1 + 312) + v58;
    *(_DWORD *)(a1 + 312) = v61;
    uint64_t v62 = *(int **)(a1 + 320);
    if (*v62 < v61) {
      int *v62 = v61;
    }
  }
  int v63 = *(_DWORD *)(a2 + 336);
  if (v63)
  {
    uint64_t v64 = (uint64_t *)(*(void *)(a2 + 344) + 8);
    uint64_t v65 = (std::string **)sub_188CCE4(a1 + 328, *(_DWORD *)(a2 + 336));
    sub_122BB8C((std::string *)(a1 + 328), v65, v64, v63, **(_DWORD **)(a1 + 344) - *(_DWORD *)(a1 + 336));
    int v66 = *(_DWORD *)(a1 + 336) + v63;
    *(_DWORD *)(a1 + 336) = v66;
    uint64_t v67 = *(int **)(a1 + 344);
    if (*v67 < v66) {
      int *v67 = v66;
    }
  }
  int v68 = *(_DWORD *)(a2 + 360);
  if (v68)
  {
    uint64_t v69 = (uint64_t *)(*(void *)(a2 + 368) + 8);
    uint64_t v70 = (std::string **)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_122BB8C((std::string *)(a1 + 352), v70, v69, v68, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v71 = *(_DWORD *)(a1 + 360) + v68;
    *(_DWORD *)(a1 + 360) = v71;
    int v72 = *(int **)(a1 + 368);
    if (*v72 < v71) {
      *int v72 = v71;
    }
  }
  int v73 = *(_DWORD *)(a2 + 384);
  if (v73)
  {
    uint64_t v74 = (uint64_t *)(*(void *)(a2 + 392) + 8);
    uint64_t v75 = (std::string **)sub_188CCE4(a1 + 376, *(_DWORD *)(a2 + 384));
    sub_12D37F4((uint64_t *)(a1 + 376), v75, v74, v73, **(_DWORD **)(a1 + 392) - *(_DWORD *)(a1 + 384));
    int v76 = *(_DWORD *)(a1 + 384) + v73;
    *(_DWORD *)(a1 + 384) = v76;
    uint64_t v77 = *(int **)(a1 + 392);
    if (*v77 < v76) {
      int *v77 = v76;
    }
  }
  int v78 = *(_DWORD *)(a2 + 400);
  if (v78)
  {
    uint64_t v79 = *(int *)(a1 + 400);
    sub_188CA54((unsigned int *)(a1 + 400), v79 + v78);
    uint64_t v80 = *(void *)(a1 + 408);
    *(_DWORD *)(a1 + 400) += *(_DWORD *)(a2 + 400);
    memcpy((void *)(v80 + 8 * v79), *(const void **)(a2 + 408), 8 * *(int *)(a2 + 400));
  }
  int v81 = *(_DWORD *)(a2 + 416);
  if (v81)
  {
    uint64_t v82 = *(int *)(a1 + 416);
    sub_188CA54((unsigned int *)(a1 + 416), v82 + v81);
    uint64_t v83 = *(void *)(a1 + 424);
    *(_DWORD *)(a1 + 416) += *(_DWORD *)(a2 + 416);
    memcpy((void *)(v83 + 8 * v82), *(const void **)(a2 + 424), 8 * *(int *)(a2 + 416));
  }
  int v84 = *(_DWORD *)(a2 + 432);
  if (v84)
  {
    uint64_t v85 = *(int *)(a1 + 432);
    sub_188C80C((unsigned int *)(a1 + 432), v85 + v84);
    uint64_t v86 = *(void *)(a1 + 440);
    *(_DWORD *)(a1 + 432) += *(_DWORD *)(a2 + 432);
    memcpy((void *)(v86 + 4 * v85), *(const void **)(a2 + 440), 4 * *(int *)(a2 + 432));
  }
  int v87 = *(_DWORD *)(a2 + 448);
  if (v87)
  {
    uint64_t v88 = *(int *)(a1 + 448);
    sub_188CA54((unsigned int *)(a1 + 448), v88 + v87);
    uint64_t v89 = *(void *)(a1 + 456);
    *(_DWORD *)(a1 + 448) += *(_DWORD *)(a2 + 448);
    memcpy((void *)(v89 + 8 * v88), *(const void **)(a2 + 456), 8 * *(int *)(a2 + 448));
  }
  int v90 = *(_DWORD *)(a2 + 472);
  if (v90)
  {
    uint64_t v91 = (uint64_t *)(*(void *)(a2 + 480) + 8);
    uint64_t v92 = (std::string **)sub_188CCE4(a1 + 464, *(_DWORD *)(a2 + 472));
    sub_14DDA68((std::string *)(a1 + 464), v92, v91, v90, **(_DWORD **)(a1 + 480) - *(_DWORD *)(a1 + 472));
    int v93 = *(_DWORD *)(a1 + 472) + v90;
    *(_DWORD *)(a1 + 472) = v93;
    uint64_t v94 = *(int **)(a1 + 480);
    if (*v94 < v93) {
      int *v94 = v93;
    }
  }
  int v95 = *(_DWORD *)(a2 + 496);
  if (v95)
  {
    uint64_t v96 = (uint64_t *)(*(void *)(a2 + 504) + 8);
    uint64_t v97 = (std::string **)sub_188CCE4(a1 + 488, *(_DWORD *)(a2 + 496));
    sub_11DB348((uint64_t *)(a1 + 488), v97, v96, v95, **(_DWORD **)(a1 + 504) - *(_DWORD *)(a1 + 496));
    int v98 = *(_DWORD *)(a1 + 496) + v95;
    *(_DWORD *)(a1 + 496) = v98;
    uint64_t v99 = *(int **)(a1 + 504);
    if (*v99 < v98) {
      int *v99 = v98;
    }
  }
  int v100 = *(_DWORD *)(a2 + 512);
  if (v100)
  {
    uint64_t v101 = *(int *)(a1 + 512);
    sub_188CA54((unsigned int *)(a1 + 512), v101 + v100);
    uint64_t v102 = *(void *)(a1 + 520);
    *(_DWORD *)(a1 + 512) += *(_DWORD *)(a2 + 512);
    memcpy((void *)(v102 + 8 * v101), *(const void **)(a2 + 520), 8 * *(int *)(a2 + 512));
  }
  int v103 = *(_DWORD *)(a2 + 528);
  if (v103)
  {
    uint64_t v104 = *(int *)(a1 + 528);
    sub_188CA54((unsigned int *)(a1 + 528), v104 + v103);
    uint64_t v105 = *(void *)(a1 + 536);
    *(_DWORD *)(a1 + 528) += *(_DWORD *)(a2 + 528);
    memcpy((void *)(v105 + 8 * v104), *(const void **)(a2 + 536), 8 * *(int *)(a2 + 528));
  }
  int v106 = *(_DWORD *)(a2 + 544);
  if (v106)
  {
    uint64_t v107 = *(int *)(a1 + 544);
    sub_188CA54((unsigned int *)(a1 + 544), v107 + v106);
    uint64_t v108 = *(void *)(a1 + 552);
    *(_DWORD *)(a1 + 544) += *(_DWORD *)(a2 + 544);
    memcpy((void *)(v108 + 8 * v107), *(const void **)(a2 + 552), 8 * *(int *)(a2 + 544));
  }
  int v109 = *(_DWORD *)(a2 + 560);
  if (v109)
  {
    uint64_t v110 = *(int *)(a1 + 560);
    sub_188CA54((unsigned int *)(a1 + 560), v110 + v109);
    uint64_t v111 = *(void *)(a1 + 568);
    *(_DWORD *)(a1 + 560) += *(_DWORD *)(a2 + 560);
    memcpy((void *)(v111 + 8 * v110), *(const void **)(a2 + 568), 8 * *(int *)(a2 + 560));
  }
  int v112 = *(_DWORD *)(a2 + 576);
  if (v112)
  {
    uint64_t v113 = *(int *)(a1 + 576);
    sub_188CA54((unsigned int *)(a1 + 576), v113 + v112);
    uint64_t v114 = *(void *)(a1 + 584);
    *(_DWORD *)(a1 + 576) += *(_DWORD *)(a2 + 576);
    memcpy((void *)(v114 + 8 * v113), *(const void **)(a2 + 584), 8 * *(int *)(a2 + 576));
  }
  int v115 = *(_DWORD *)(a2 + 592);
  if (v115)
  {
    uint64_t v116 = *(int *)(a1 + 592);
    sub_188CA54((unsigned int *)(a1 + 592), v116 + v115);
    uint64_t v117 = *(void *)(a1 + 600);
    *(_DWORD *)(a1 + 592) += *(_DWORD *)(a2 + 592);
    memcpy((void *)(v117 + 8 * v116), *(const void **)(a2 + 600), 8 * *(int *)(a2 + 592));
  }
  int v118 = *(_DWORD *)(a2 + 608);
  if (v118)
  {
    uint64_t v119 = *(int *)(a1 + 608);
    sub_188C80C((unsigned int *)(a1 + 608), v119 + v118);
    uint64_t v120 = *(void *)(a1 + 616);
    *(_DWORD *)(a1 + 608) += *(_DWORD *)(a2 + 608);
    memcpy((void *)(v120 + 4 * v119), *(const void **)(a2 + 616), 4 * *(int *)(a2 + 608));
  }
  int v121 = *(_DWORD *)(a2 + 624);
  if (v121)
  {
    uint64_t v122 = *(int *)(a1 + 624);
    sub_188CA54((unsigned int *)(a1 + 624), v122 + v121);
    uint64_t v123 = *(void *)(a1 + 632);
    *(_DWORD *)(a1 + 624) += *(_DWORD *)(a2 + 624);
    memcpy((void *)(v123 + 8 * v122), *(const void **)(a2 + 632), 8 * *(int *)(a2 + 624));
  }
  int v124 = *(_DWORD *)(a2 + 640);
  if (v124)
  {
    uint64_t v125 = *(int *)(a1 + 640);
    sub_188C80C((unsigned int *)(a1 + 640), v125 + v124);
    uint64_t v126 = *(void *)(a1 + 648);
    *(_DWORD *)(a1 + 640) += *(_DWORD *)(a2 + 640);
    memcpy((void *)(v126 + 4 * v125), *(const void **)(a2 + 648), 4 * *(int *)(a2 + 640));
  }
  int v127 = *(_DWORD *)(a2 + 656);
  if (v127)
  {
    uint64_t v128 = *(int *)(a1 + 656);
    sub_188CA54((unsigned int *)(a1 + 656), v128 + v127);
    uint64_t v129 = *(void *)(a1 + 664);
    *(_DWORD *)(a1 + 656) += *(_DWORD *)(a2 + 656);
    memcpy((void *)(v129 + 8 * v128), *(const void **)(a2 + 664), 8 * *(int *)(a2 + 656));
  }
  unsigned int v130 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v130) {
    goto LABEL_114;
  }
  if (v130)
  {
    uint64_t v131 = (long long *)(*(void *)(a2 + 672) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v132 = *(void *)(a1 + 8);
    unint64_t v133 = (uint64_t *)(v132 & 0xFFFFFFFFFFFFFFFCLL);
    if (v132) {
      unint64_t v133 = (uint64_t *)*v133;
    }
    sub_1881DF4((std::string **)(a1 + 672), v131, v133);
    if ((v130 & 2) == 0)
    {
LABEL_83:
      if ((v130 & 4) == 0) {
        goto LABEL_84;
      }
      goto LABEL_96;
    }
  }
  else if ((v130 & 2) == 0)
  {
    goto LABEL_83;
  }
  uint64_t v134 = (long long *)(*(void *)(a2 + 680) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v135 = *(void *)(a1 + 8);
  int v136 = (uint64_t *)(v135 & 0xFFFFFFFFFFFFFFFCLL);
  if (v135) {
    int v136 = (uint64_t *)*v136;
  }
  sub_1881DF4((std::string **)(a1 + 680), v134, v136);
  if ((v130 & 4) == 0)
  {
LABEL_84:
    if ((v130 & 8) == 0) {
      goto LABEL_85;
    }
    goto LABEL_99;
  }
LABEL_96:
  unint64_t v137 = (long long *)(*(void *)(a2 + 688) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v138 = *(void *)(a1 + 8);
  uint64_t v139 = (uint64_t *)(v138 & 0xFFFFFFFFFFFFFFFCLL);
  if (v138) {
    uint64_t v139 = (uint64_t *)*v139;
  }
  sub_1881DF4((std::string **)(a1 + 688), v137, v139);
  if ((v130 & 8) == 0)
  {
LABEL_85:
    if ((v130 & 0x10) == 0) {
      goto LABEL_86;
    }
    goto LABEL_102;
  }
LABEL_99:
  uint64_t v140 = (long long *)(*(void *)(a2 + 696) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v141 = *(void *)(a1 + 8);
  uint64_t v142 = (uint64_t *)(v141 & 0xFFFFFFFFFFFFFFFCLL);
  if (v141) {
    uint64_t v142 = (uint64_t *)*v142;
  }
  sub_1881DF4((std::string **)(a1 + 696), v140, v142);
  if ((v130 & 0x10) == 0)
  {
LABEL_86:
    if ((v130 & 0x20) == 0) {
      goto LABEL_87;
    }
LABEL_105:
    uint64_t v146 = (long long *)(*(void *)(a2 + 712) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v147 = *(void *)(a1 + 8);
    int v148 = (uint64_t *)(v147 & 0xFFFFFFFFFFFFFFFCLL);
    if (v147) {
      int v148 = (uint64_t *)*v148;
    }
    sub_1881DF4((std::string **)(a1 + 712), v146, v148);
    if ((v130 & 0x40) == 0)
    {
LABEL_88:
      if ((v130 & 0x80) == 0) {
        goto LABEL_114;
      }
      goto LABEL_111;
    }
    goto LABEL_108;
  }
LABEL_102:
  uint64_t v143 = (long long *)(*(void *)(a2 + 704) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v144 = *(void *)(a1 + 8);
  int v145 = (uint64_t *)(v144 & 0xFFFFFFFFFFFFFFFCLL);
  if (v144) {
    int v145 = (uint64_t *)*v145;
  }
  sub_1881DF4((std::string **)(a1 + 704), v143, v145);
  if ((v130 & 0x20) != 0) {
    goto LABEL_105;
  }
LABEL_87:
  if ((v130 & 0x40) == 0) {
    goto LABEL_88;
  }
LABEL_108:
  uint64_t v149 = (long long *)(*(void *)(a2 + 720) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v150 = *(void *)(a1 + 8);
  uint64_t v151 = (uint64_t *)(v150 & 0xFFFFFFFFFFFFFFFCLL);
  if (v150) {
    uint64_t v151 = (uint64_t *)*v151;
  }
  sub_1881DF4((std::string **)(a1 + 720), v149, v151);
  if ((v130 & 0x80) != 0)
  {
LABEL_111:
    uint64_t v152 = (long long *)(*(void *)(a2 + 728) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v153 = *(void *)(a1 + 8);
    uint64_t v154 = (uint64_t *)(v153 & 0xFFFFFFFFFFFFFFFCLL);
    if (v153) {
      uint64_t v154 = (uint64_t *)*v154;
    }
    sub_1881DF4((std::string **)(a1 + 728), v152, v154);
  }
LABEL_114:
  if ((v130 & 0xFF00) == 0) {
    goto LABEL_148;
  }
  if ((v130 & 0x100) != 0)
  {
    uint64_t v155 = (long long *)(*(void *)(a2 + 736) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v156 = *(void *)(a1 + 8);
    uint64_t v157 = (uint64_t *)(v156 & 0xFFFFFFFFFFFFFFFCLL);
    if (v156) {
      uint64_t v157 = (uint64_t *)*v157;
    }
    sub_1881DF4((std::string **)(a1 + 736), v155, v157);
    if ((v130 & 0x200) == 0)
    {
LABEL_117:
      if ((v130 & 0x400) == 0) {
        goto LABEL_118;
      }
      goto LABEL_130;
    }
  }
  else if ((v130 & 0x200) == 0)
  {
    goto LABEL_117;
  }
  uint64_t v158 = (long long *)(*(void *)(a2 + 744) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v159 = *(void *)(a1 + 8);
  uint64_t v160 = (uint64_t *)(v159 & 0xFFFFFFFFFFFFFFFCLL);
  if (v159) {
    uint64_t v160 = (uint64_t *)*v160;
  }
  sub_1881DF4((std::string **)(a1 + 744), v158, v160);
  if ((v130 & 0x400) == 0)
  {
LABEL_118:
    if ((v130 & 0x800) == 0) {
      goto LABEL_119;
    }
    goto LABEL_133;
  }
LABEL_130:
  uint64_t v161 = (long long *)(*(void *)(a2 + 752) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v162 = *(void *)(a1 + 8);
  uint64_t v163 = (uint64_t *)(v162 & 0xFFFFFFFFFFFFFFFCLL);
  if (v162) {
    uint64_t v163 = (uint64_t *)*v163;
  }
  sub_1881DF4((std::string **)(a1 + 752), v161, v163);
  if ((v130 & 0x800) == 0)
  {
LABEL_119:
    if ((v130 & 0x1000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_136;
  }
LABEL_133:
  uint64_t v164 = (long long *)(*(void *)(a2 + 760) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v165 = *(void *)(a1 + 8);
  uint64_t v166 = (uint64_t *)(v165 & 0xFFFFFFFFFFFFFFFCLL);
  if (v165) {
    uint64_t v166 = (uint64_t *)*v166;
  }
  sub_1881DF4((std::string **)(a1 + 760), v164, v166);
  if ((v130 & 0x1000) == 0)
  {
LABEL_120:
    if ((v130 & 0x2000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_139;
  }
LABEL_136:
  uint64_t v167 = (long long *)(*(void *)(a2 + 768) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v168 = *(void *)(a1 + 8);
  uint64_t v169 = (uint64_t *)(v168 & 0xFFFFFFFFFFFFFFFCLL);
  if (v168) {
    uint64_t v169 = (uint64_t *)*v169;
  }
  sub_1881DF4((std::string **)(a1 + 768), v167, v169);
  if ((v130 & 0x2000) == 0)
  {
LABEL_121:
    if ((v130 & 0x4000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_142;
  }
LABEL_139:
  uint64_t v170 = (long long *)(*(void *)(a2 + 776) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v171 = *(void *)(a1 + 8);
  uint64_t v172 = (uint64_t *)(v171 & 0xFFFFFFFFFFFFFFFCLL);
  if (v171) {
    uint64_t v172 = (uint64_t *)*v172;
  }
  sub_1881DF4((std::string **)(a1 + 776), v170, v172);
  if ((v130 & 0x4000) == 0)
  {
LABEL_122:
    if ((v130 & 0x8000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_145;
  }
LABEL_142:
  uint64_t v173 = (long long *)(*(void *)(a2 + 784) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  uint64_t v174 = *(void *)(a1 + 8);
  uint64_t v175 = (uint64_t *)(v174 & 0xFFFFFFFFFFFFFFFCLL);
  if (v174) {
    uint64_t v175 = (uint64_t *)*v175;
  }
  sub_1881DF4((std::string **)(a1 + 784), v173, v175);
  if ((v130 & 0x8000) != 0)
  {
LABEL_145:
    uint64_t v176 = (long long *)(*(void *)(a2 + 792) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    uint64_t v177 = *(void *)(a1 + 8);
    uint64_t v178 = (uint64_t *)(v177 & 0xFFFFFFFFFFFFFFFCLL);
    if (v177) {
      uint64_t v178 = (uint64_t *)*v178;
    }
    sub_1881DF4((std::string **)(a1 + 792), v176, v178);
  }
LABEL_148:
  if ((v130 & 0xFF0000) == 0) {
    goto LABEL_182;
  }
  if ((v130 & 0x10000) != 0)
  {
    uint64_t v179 = (long long *)(*(void *)(a2 + 800) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v180 = *(void *)(a1 + 8);
    uint64_t v181 = (uint64_t *)(v180 & 0xFFFFFFFFFFFFFFFCLL);
    if (v180) {
      uint64_t v181 = (uint64_t *)*v181;
    }
    sub_1881DF4((std::string **)(a1 + 800), v179, v181);
    if ((v130 & 0x20000) == 0)
    {
LABEL_151:
      if ((v130 & 0x40000) == 0) {
        goto LABEL_152;
      }
      goto LABEL_164;
    }
  }
  else if ((v130 & 0x20000) == 0)
  {
    goto LABEL_151;
  }
  uint64_t v182 = (long long *)(*(void *)(a2 + 808) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x20000u;
  uint64_t v183 = *(void *)(a1 + 8);
  uint64_t v184 = (uint64_t *)(v183 & 0xFFFFFFFFFFFFFFFCLL);
  if (v183) {
    uint64_t v184 = (uint64_t *)*v184;
  }
  sub_1881DF4((std::string **)(a1 + 808), v182, v184);
  if ((v130 & 0x40000) == 0)
  {
LABEL_152:
    if ((v130 & 0x80000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_167;
  }
LABEL_164:
  uint64_t v185 = (long long *)(*(void *)(a2 + 816) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40000u;
  uint64_t v186 = *(void *)(a1 + 8);
  uint64_t v187 = (uint64_t *)(v186 & 0xFFFFFFFFFFFFFFFCLL);
  if (v186) {
    uint64_t v187 = (uint64_t *)*v187;
  }
  sub_1881DF4((std::string **)(a1 + 816), v185, v187);
  if ((v130 & 0x80000) == 0)
  {
LABEL_153:
    if ((v130 & 0x100000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_170;
  }
LABEL_167:
  uint64_t v188 = (long long *)(*(void *)(a2 + 824) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x80000u;
  uint64_t v189 = *(void *)(a1 + 8);
  uint64_t v190 = (uint64_t *)(v189 & 0xFFFFFFFFFFFFFFFCLL);
  if (v189) {
    uint64_t v190 = (uint64_t *)*v190;
  }
  sub_1881DF4((std::string **)(a1 + 824), v188, v190);
  if ((v130 & 0x100000) == 0)
  {
LABEL_154:
    if ((v130 & 0x200000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_173;
  }
LABEL_170:
  uint64_t v191 = (long long *)(*(void *)(a2 + 832) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x100000u;
  uint64_t v192 = *(void *)(a1 + 8);
  uint64_t v193 = (uint64_t *)(v192 & 0xFFFFFFFFFFFFFFFCLL);
  if (v192) {
    uint64_t v193 = (uint64_t *)*v193;
  }
  sub_1881DF4((std::string **)(a1 + 832), v191, v193);
  if ((v130 & 0x200000) == 0)
  {
LABEL_155:
    if ((v130 & 0x400000) == 0) {
      goto LABEL_156;
    }
    goto LABEL_176;
  }
LABEL_173:
  uint64_t v194 = (long long *)(*(void *)(a2 + 840) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x200000u;
  uint64_t v195 = *(void *)(a1 + 8);
  uint64_t v196 = (uint64_t *)(v195 & 0xFFFFFFFFFFFFFFFCLL);
  if (v195) {
    uint64_t v196 = (uint64_t *)*v196;
  }
  sub_1881DF4((std::string **)(a1 + 840), v194, v196);
  if ((v130 & 0x400000) == 0)
  {
LABEL_156:
    if ((v130 & 0x800000) == 0) {
      goto LABEL_182;
    }
    goto LABEL_179;
  }
LABEL_176:
  uint64_t v197 = (long long *)(*(void *)(a2 + 848) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x400000u;
  uint64_t v198 = *(void *)(a1 + 8);
  uint64_t v199 = (uint64_t *)(v198 & 0xFFFFFFFFFFFFFFFCLL);
  if (v198) {
    uint64_t v199 = (uint64_t *)*v199;
  }
  sub_1881DF4((std::string **)(a1 + 848), v197, v199);
  if ((v130 & 0x800000) != 0)
  {
LABEL_179:
    uint64_t v200 = (long long *)(*(void *)(a2 + 856) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x800000u;
    uint64_t v201 = *(void *)(a1 + 8);
    uint64_t v202 = (uint64_t *)(v201 & 0xFFFFFFFFFFFFFFFCLL);
    if (v201) {
      uint64_t v202 = (uint64_t *)*v202;
    }
    sub_1881DF4((std::string **)(a1 + 856), v200, v202);
  }
LABEL_182:
  if (!HIBYTE(v130)) {
    goto LABEL_256;
  }
  if ((v130 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x1000000u;
    uint64_t v203 = *(std::string **)(a1 + 864);
    if (!v203)
    {
      uint64_t v204 = *(void *)(a1 + 8);
      uint64_t v205 = (void *)(v204 & 0xFFFFFFFFFFFFFFFCLL);
      if (v204) {
        uint64_t v205 = (void *)*v205;
      }
      uint64_t v203 = (std::string *)sub_12CCB50((uint64_t)v205);
      *(void *)(a1 + 864) = v203;
    }
    if (*(void *)(a2 + 864)) {
      uint64_t v206 = *(void *(****)(void *))(a2 + 864);
    }
    else {
      uint64_t v206 = &off_25312D8;
    }
    sub_12CA0B8(v203, (uint64_t)v206);
    if ((v130 & 0x2000000) == 0)
    {
LABEL_185:
      if ((v130 & 0x4000000) == 0) {
        goto LABEL_186;
      }
      goto LABEL_208;
    }
  }
  else if ((v130 & 0x2000000) == 0)
  {
    goto LABEL_185;
  }
  *(_DWORD *)(a1 + 16) |= 0x2000000u;
  unint64_t v207 = *(std::string **)(a1 + 872);
  if (!v207)
  {
    uint64_t v208 = *(void *)(a1 + 8);
    uint64_t v209 = (void *)(v208 & 0xFFFFFFFFFFFFFFFCLL);
    if (v208) {
      uint64_t v209 = (void *)*v209;
    }
    unint64_t v207 = (std::string *)sub_15C2014((uint64_t)v209);
    *(void *)(a1 + 872) = v207;
  }
  if (*(void *)(a2 + 872)) {
    unint64_t v210 = *(uint64_t (****)())(a2 + 872);
  }
  else {
    unint64_t v210 = &off_253F530;
  }
  sub_1113E40(v207, (uint64_t)v210);
  if ((v130 & 0x4000000) == 0)
  {
LABEL_186:
    if ((v130 & 0x8000000) == 0) {
      goto LABEL_187;
    }
    goto LABEL_216;
  }
LABEL_208:
  *(_DWORD *)(a1 + 16) |= 0x4000000u;
  uint64_t v211 = *(void *)(a1 + 880);
  if (!v211)
  {
    uint64_t v212 = *(void *)(a1 + 8);
    uint64_t v213 = (void *)(v212 & 0xFFFFFFFFFFFFFFFCLL);
    if (v212) {
      uint64_t v213 = (void *)*v213;
    }
    uint64_t v211 = sub_15C1CB4((uint64_t)v213);
    *(void *)(a1 + 880) = v211;
  }
  if (*(void *)(a2 + 880)) {
    uint64_t v214 = *(uint64_t (****)())(a2 + 880);
  }
  else {
    uint64_t v214 = &off_253F2E8;
  }
  sub_15B04F0(v211, (uint64_t)v214);
  if ((v130 & 0x8000000) == 0)
  {
LABEL_187:
    if ((v130 & 0x10000000) == 0) {
      goto LABEL_188;
    }
    goto LABEL_224;
  }
LABEL_216:
  *(_DWORD *)(a1 + 16) |= 0x8000000u;
  uint64_t v215 = *(void *)(a1 + 888);
  if (!v215)
  {
    uint64_t v216 = *(void *)(a1 + 8);
    uint64_t v217 = (void *)(v216 & 0xFFFFFFFFFFFFFFFCLL);
    if (v216) {
      uint64_t v217 = (void *)*v217;
    }
    sub_1478F54((uint64_t)v217);
    *(void *)(a1 + 888) = v215;
  }
  if (*(void *)(a2 + 888)) {
    uint64_t v218 = *(uint64_t (****)())(a2 + 888);
  }
  else {
    uint64_t v218 = &off_2539528;
  }
  sub_146945C(v215, (uint64_t)v218);
  if ((v130 & 0x10000000) == 0)
  {
LABEL_188:
    if ((v130 & 0x20000000) == 0) {
      goto LABEL_189;
    }
    goto LABEL_232;
  }
LABEL_224:
  *(_DWORD *)(a1 + 16) |= 0x10000000u;
  uint64_t v219 = *(std::string **)(a1 + 896);
  if (!v219)
  {
    uint64_t v220 = *(void *)(a1 + 8);
    uint64_t v221 = (void *)(v220 & 0xFFFFFFFFFFFFFFFCLL);
    if (v220) {
      uint64_t v221 = (void *)*v221;
    }
    uint64_t v219 = (std::string *)sub_12CCB50((uint64_t)v221);
    *(void *)(a1 + 896) = v219;
  }
  if (*(void *)(a2 + 896)) {
    uint64_t v222 = *(void *(****)(void *))(a2 + 896);
  }
  else {
    uint64_t v222 = &off_25312D8;
  }
  sub_12CA0B8(v219, (uint64_t)v222);
  if ((v130 & 0x20000000) == 0)
  {
LABEL_189:
    if ((v130 & 0x40000000) == 0) {
      goto LABEL_190;
    }
    goto LABEL_240;
  }
LABEL_232:
  *(_DWORD *)(a1 + 16) |= 0x20000000u;
  uint64_t v223 = *(std::string **)(a1 + 904);
  if (!v223)
  {
    uint64_t v224 = *(void *)(a1 + 8);
    uint64_t v225 = (void *)(v224 & 0xFFFFFFFFFFFFFFFCLL);
    if (v224) {
      uint64_t v225 = (void *)*v225;
    }
    uint64_t v223 = (std::string *)sub_14FB818((uint64_t)v225);
    *(void *)(a1 + 904) = v223;
  }
  if (*(void *)(a2 + 904)) {
    uint64_t v226 = *(uint64_t (****)())(a2 + 904);
  }
  else {
    uint64_t v226 = &off_253BA60;
  }
  sub_14EEF28(v223, (uint64_t)v226);
  if ((v130 & 0x40000000) == 0)
  {
LABEL_190:
    if ((v130 & 0x80000000) == 0) {
      goto LABEL_256;
    }
    goto LABEL_248;
  }
LABEL_240:
  *(_DWORD *)(a1 + 16) |= 0x40000000u;
  uint64_t v227 = *(std::string **)(a1 + 912);
  if (!v227)
  {
    uint64_t v228 = *(void *)(a1 + 8);
    uint64_t v229 = (void *)(v228 & 0xFFFFFFFFFFFFFFFCLL);
    if (v228) {
      uint64_t v229 = (void *)*v229;
    }
    uint64_t v227 = (std::string *)sub_12CD40C((uint64_t)v229);
    *(void *)(a1 + 912) = v227;
  }
  if (*(void *)(a2 + 912)) {
    uint64_t v230 = *(uint64_t (****)(uint64_t))(a2 + 912);
  }
  else {
    uint64_t v230 = &off_2531408;
  }
  sub_12C8C1C(v227, (uint64_t)v230);
  if ((v130 & 0x80000000) != 0)
  {
LABEL_248:
    *(_DWORD *)(a1 + 16) |= 0x80000000;
    unint64_t v231 = *(std::string **)(a1 + 920);
    if (!v231)
    {
      uint64_t v232 = *(void *)(a1 + 8);
      uint64_t v233 = (void *)(v232 & 0xFFFFFFFFFFFFFFFCLL);
      if (v232) {
        uint64_t v233 = (void *)*v233;
      }
      unint64_t v231 = (std::string *)sub_12CCA5C((uint64_t)v233);
      *(void *)(a1 + 920) = v231;
    }
    if (*(void *)(a2 + 920)) {
      uint64_t v234 = *(void *(****)(void *))(a2 + 920);
    }
    else {
      uint64_t v234 = &off_2531290;
    }
    sub_117EF04(v231, (uint64_t)v234);
  }
LABEL_256:
  unsigned int v235 = *(_DWORD *)(a2 + 20);
  if (!(_BYTE)v235) {
    goto LABEL_330;
  }
  if (v235)
  {
    *(_DWORD *)(a1 + 20) |= 1u;
    uint64_t v236 = *(void *)(a1 + 928);
    if (!v236)
    {
      uint64_t v237 = *(void *)(a1 + 8);
      uint64_t v238 = (void *)(v237 & 0xFFFFFFFFFFFFFFFCLL);
      if (v237) {
        uint64_t v238 = (void *)*v238;
      }
      sub_12CCD04((uint64_t)v238);
      *(void *)(a1 + 928) = v236;
    }
    if (*(void *)(a2 + 928)) {
      uint64_t v239 = *(uint64_t (****)())(a2 + 928);
    }
    else {
      uint64_t v239 = &off_25313D0;
    }
    sub_12CC854(v236, (uint64_t)v239);
    if ((v235 & 2) == 0)
    {
LABEL_259:
      if ((v235 & 4) == 0) {
        goto LABEL_260;
      }
      goto LABEL_282;
    }
  }
  else if ((v235 & 2) == 0)
  {
    goto LABEL_259;
  }
  *(_DWORD *)(a1 + 20) |= 2u;
  uint64_t v240 = *(void *)(a1 + 936);
  if (!v240)
  {
    uint64_t v241 = *(void *)(a1 + 8);
    int v242 = (void *)(v241 & 0xFFFFFFFFFFFFFFFCLL);
    if (v241) {
      int v242 = (void *)*v242;
    }
    sub_12CCD04((uint64_t)v242);
    *(void *)(a1 + 936) = v240;
  }
  if (*(void *)(a2 + 936)) {
    uint64_t v243 = *(uint64_t (****)())(a2 + 936);
  }
  else {
    uint64_t v243 = &off_25313D0;
  }
  sub_12CC854(v240, (uint64_t)v243);
  if ((v235 & 4) == 0)
  {
LABEL_260:
    if ((v235 & 8) == 0) {
      goto LABEL_261;
    }
    goto LABEL_290;
  }
LABEL_282:
  *(_DWORD *)(a1 + 20) |= 4u;
  uint64_t v244 = *(std::string **)(a1 + 944);
  if (!v244)
  {
    uint64_t v245 = *(void *)(a1 + 8);
    uint64_t v246 = (void *)(v245 & 0xFFFFFFFFFFFFFFFCLL);
    if (v245) {
      uint64_t v246 = (void *)*v246;
    }
    uint64_t v244 = (std::string *)sub_14FB700((uint64_t)v246);
    *(void *)(a1 + 944) = v244;
  }
  if (*(void *)(a2 + 944)) {
    uint64_t v247 = *(uint64_t (****)(uint64_t))(a2 + 944);
  }
  else {
    uint64_t v247 = &off_253B530;
  }
  sub_14E0EE0(v244, (uint64_t)v247);
  if ((v235 & 8) == 0)
  {
LABEL_261:
    if ((v235 & 0x10) == 0) {
      goto LABEL_262;
    }
    goto LABEL_298;
  }
LABEL_290:
  *(_DWORD *)(a1 + 20) |= 8u;
  int v248 = *(std::string **)(a1 + 952);
  if (!v248)
  {
    uint64_t v249 = *(void *)(a1 + 8);
    uint64_t v250 = (void *)(v249 & 0xFFFFFFFFFFFFFFFCLL);
    if (v249) {
      uint64_t v250 = (void *)*v250;
    }
    sub_12CCBF0((uint64_t)v250);
    *(void *)(a1 + 952) = v248;
  }
  if (*(void *)(a2 + 952)) {
    unint64_t v251 = *(void *(****)(void *))(a2 + 952);
  }
  else {
    unint64_t v251 = &off_2531308;
  }
  sub_12CB280(v248, (uint64_t)v251);
  if ((v235 & 0x10) == 0)
  {
LABEL_262:
    if ((v235 & 0x20) == 0) {
      goto LABEL_263;
    }
    goto LABEL_306;
  }
LABEL_298:
  *(_DWORD *)(a1 + 20) |= 0x10u;
  unint64_t v252 = *(std::string **)(a1 + 960);
  if (!v252)
  {
    uint64_t v253 = *(void *)(a1 + 8);
    uint64_t v254 = (void *)(v253 & 0xFFFFFFFFFFFFFFFCLL);
    if (v253) {
      uint64_t v254 = (void *)*v254;
    }
    unint64_t v252 = (std::string *)sub_14FB700((uint64_t)v254);
    *(void *)(a1 + 960) = v252;
  }
  if (*(void *)(a2 + 960)) {
    uint64_t v255 = *(uint64_t (****)(uint64_t))(a2 + 960);
  }
  else {
    uint64_t v255 = &off_253B530;
  }
  sub_14E0EE0(v252, (uint64_t)v255);
  if ((v235 & 0x20) == 0)
  {
LABEL_263:
    if ((v235 & 0x40) == 0) {
      goto LABEL_264;
    }
    goto LABEL_314;
  }
LABEL_306:
  *(_DWORD *)(a1 + 20) |= 0x20u;
  uint64_t v256 = *(std::string **)(a1 + 968);
  if (!v256)
  {
    uint64_t v257 = *(void *)(a1 + 8);
    uint64_t v258 = (void *)(v257 & 0xFFFFFFFFFFFFFFFCLL);
    if (v257) {
      uint64_t v258 = (void *)*v258;
    }
    uint64_t v256 = (std::string *)sub_12CCAD4((uint64_t)v258);
    *(void *)(a1 + 968) = v256;
  }
  if (*(void *)(a2 + 968)) {
    uint64_t v259 = *(uint64_t (****)())(a2 + 968);
  }
  else {
    uint64_t v259 = &off_25312B0;
  }
  sub_12C9A04(v256, (uint64_t)v259);
  if ((v235 & 0x40) == 0)
  {
LABEL_264:
    if ((v235 & 0x80) == 0) {
      goto LABEL_330;
    }
    goto LABEL_322;
  }
LABEL_314:
  *(_DWORD *)(a1 + 20) |= 0x40u;
  uint64_t v260 = *(std::string **)(a1 + 976);
  if (!v260)
  {
    uint64_t v261 = *(void *)(a1 + 8);
    uint64_t v262 = (void *)(v261 & 0xFFFFFFFFFFFFFFFCLL);
    if (v261) {
      uint64_t v262 = (void *)*v262;
    }
    uint64_t v260 = (std::string *)sub_12CCA5C((uint64_t)v262);
    *(void *)(a1 + 976) = v260;
  }
  if (*(void *)(a2 + 976)) {
    uint64_t v263 = *(void *(****)(void *))(a2 + 976);
  }
  else {
    uint64_t v263 = &off_2531290;
  }
  sub_117EF04(v260, (uint64_t)v263);
  if ((v235 & 0x80) != 0)
  {
LABEL_322:
    *(_DWORD *)(a1 + 20) |= 0x80u;
    unsigned int v264 = *(std::string **)(a1 + 984);
    if (!v264)
    {
      uint64_t v265 = *(void *)(a1 + 8);
      uint64_t v266 = (void *)(v265 & 0xFFFFFFFFFFFFFFFCLL);
      if (v265) {
        uint64_t v266 = (void *)*v266;
      }
      sub_12CCBF0((uint64_t)v266);
      *(void *)(a1 + 984) = v264;
    }
    if (*(void *)(a2 + 984)) {
      unsigned int v267 = *(void *(****)(void *))(a2 + 984);
    }
    else {
      unsigned int v267 = &off_2531308;
    }
    sub_12CB280(v264, (uint64_t)v267);
  }
LABEL_330:
  if ((v235 & 0xFF00) == 0) {
    goto LABEL_404;
  }
  if ((v235 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 20) |= 0x100u;
    int v268 = *(std::string **)(a1 + 992);
    if (!v268)
    {
      uint64_t v269 = *(void *)(a1 + 8);
      char v270 = (void *)(v269 & 0xFFFFFFFFFFFFFFFCLL);
      if (v269) {
        char v270 = (void *)*v270;
      }
      sub_12CCBF0((uint64_t)v270);
      *(void *)(a1 + 992) = v268;
    }
    if (*(void *)(a2 + 992)) {
      char v271 = *(void *(****)(void *))(a2 + 992);
    }
    else {
      char v271 = &off_2531308;
    }
    sub_12CB280(v268, (uint64_t)v271);
    if ((v235 & 0x200) == 0)
    {
LABEL_333:
      if ((v235 & 0x400) == 0) {
        goto LABEL_334;
      }
      goto LABEL_356;
    }
  }
  else if ((v235 & 0x200) == 0)
  {
    goto LABEL_333;
  }
  *(_DWORD *)(a1 + 20) |= 0x200u;
  int v272 = *(std::string **)(a1 + 1000);
  if (!v272)
  {
    uint64_t v273 = *(void *)(a1 + 8);
    uint64_t v274 = (void *)(v273 & 0xFFFFFFFFFFFFFFFCLL);
    if (v273) {
      uint64_t v274 = (void *)*v274;
    }
    int v272 = (std::string *)sub_12CCB50((uint64_t)v274);
    *(void *)(a1 + 1000) = v272;
  }
  if (*(void *)(a2 + 1000)) {
    unsigned int v275 = *(void *(****)(void *))(a2 + 1000);
  }
  else {
    unsigned int v275 = &off_25312D8;
  }
  sub_12CA0B8(v272, (uint64_t)v275);
  if ((v235 & 0x400) == 0)
  {
LABEL_334:
    if ((v235 & 0x800) == 0) {
      goto LABEL_335;
    }
    goto LABEL_364;
  }
LABEL_356:
  *(_DWORD *)(a1 + 20) |= 0x400u;
  uint64_t v276 = *(std::string **)(a1 + 1008);
  if (!v276)
  {
    uint64_t v277 = *(void *)(a1 + 8);
    char v278 = (void *)(v277 & 0xFFFFFFFFFFFFFFFCLL);
    if (v277) {
      char v278 = (void *)*v278;
    }
    uint64_t v276 = (std::string *)sub_158C0D0((uint64_t)v278);
    *(void *)(a1 + 1008) = v276;
  }
  if (*(void *)(a2 + 1008)) {
    char v279 = *(uint64_t (****)())(a2 + 1008);
  }
  else {
    char v279 = &off_253E758;
  }
  sub_158BD9C(v276, (uint64_t)v279);
  if ((v235 & 0x800) == 0)
  {
LABEL_335:
    if ((v235 & 0x1000) == 0) {
      goto LABEL_336;
    }
    goto LABEL_372;
  }
LABEL_364:
  *(_DWORD *)(a1 + 20) |= 0x800u;
  uint64_t v280 = *(std::string **)(a1 + 1016);
  if (!v280)
  {
    uint64_t v281 = *(void *)(a1 + 8);
    char v282 = (void *)(v281 & 0xFFFFFFFFFFFFFFFCLL);
    if (v281) {
      char v282 = (void *)*v282;
    }
    uint64_t v280 = (std::string *)sub_12D294C((uint64_t)v282);
    *(void *)(a1 + 1016) = v280;
  }
  if (*(void *)(a2 + 1016)) {
    int v283 = *(uint64_t (****)(uint64_t))(a2 + 1016);
  }
  else {
    int v283 = &off_25315C8;
  }
  sub_11D2930(v280, (uint64_t)v283);
  if ((v235 & 0x1000) == 0)
  {
LABEL_336:
    if ((v235 & 0x2000) == 0) {
      goto LABEL_337;
    }
    goto LABEL_380;
  }
LABEL_372:
  *(_DWORD *)(a1 + 20) |= 0x1000u;
  uint64_t v284 = *(std::string **)(a1 + 1024);
  if (!v284)
  {
    uint64_t v285 = *(void *)(a1 + 8);
    int v286 = (void *)(v285 & 0xFFFFFFFFFFFFFFFCLL);
    if (v285) {
      int v286 = (void *)*v286;
    }
    uint64_t v284 = (std::string *)sub_12CCA5C((uint64_t)v286);
    *(void *)(a1 + 1024) = v284;
  }
  if (*(void *)(a2 + 1024)) {
    uint64_t v287 = *(void *(****)(void *))(a2 + 1024);
  }
  else {
    uint64_t v287 = &off_2531290;
  }
  sub_117EF04(v284, (uint64_t)v287);
  if ((v235 & 0x2000) == 0)
  {
LABEL_337:
    if ((v235 & 0x4000) == 0) {
      goto LABEL_338;
    }
    goto LABEL_388;
  }
LABEL_380:
  *(_DWORD *)(a1 + 20) |= 0x2000u;
  uint64_t v288 = *(void *)(a1 + 1032);
  if (!v288)
  {
    uint64_t v289 = *(void *)(a1 + 8);
    int v290 = (void *)(v289 & 0xFFFFFFFFFFFFFFFCLL);
    if (v289) {
      int v290 = (void *)*v290;
    }
    sub_12CCD04((uint64_t)v290);
    *(void *)(a1 + 1032) = v288;
  }
  if (*(void *)(a2 + 1032)) {
    char v291 = *(uint64_t (****)())(a2 + 1032);
  }
  else {
    char v291 = &off_25313D0;
  }
  sub_12CC854(v288, (uint64_t)v291);
  if ((v235 & 0x4000) == 0)
  {
LABEL_338:
    if ((v235 & 0x8000) == 0) {
      goto LABEL_404;
    }
    goto LABEL_396;
  }
LABEL_388:
  *(_DWORD *)(a1 + 20) |= 0x4000u;
  char v292 = *(std::string **)(a1 + 1040);
  if (!v292)
  {
    uint64_t v293 = *(void *)(a1 + 8);
    int v294 = (void *)(v293 & 0xFFFFFFFFFFFFFFFCLL);
    if (v293) {
      int v294 = (void *)*v294;
    }
    char v292 = (std::string *)sub_123239C((uint64_t)v294);
    *(void *)(a1 + 1040) = v292;
  }
  if (*(void *)(a2 + 1040)) {
    uint64_t v295 = *(uint64_t (****)())(a2 + 1040);
  }
  else {
    uint64_t v295 = &off_252E660;
  }
  sub_1230FEC(v292, (uint64_t)v295);
  if ((v235 & 0x8000) != 0)
  {
LABEL_396:
    *(_DWORD *)(a1 + 20) |= 0x8000u;
    uint64_t v296 = *(std::string **)(a1 + 1048);
    if (!v296)
    {
      uint64_t v297 = *(void *)(a1 + 8);
      int v298 = (void *)(v297 & 0xFFFFFFFFFFFFFFFCLL);
      if (v297) {
        int v298 = (void *)*v298;
      }
      uint64_t v296 = (std::string *)sub_12324D4((uint64_t)v298);
      *(void *)(a1 + 1048) = v296;
    }
    if (*(void *)(a2 + 1048)) {
      char v299 = *(uint64_t (****)(uint64_t))(a2 + 1048);
    }
    else {
      char v299 = &off_252E6A0;
    }
    sub_123222C(v296, (uint64_t)v299);
  }
LABEL_404:
  if ((v235 & 0xFF0000) == 0) {
    goto LABEL_415;
  }
  if ((v235 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 20) |= 0x10000u;
    uint64_t v304 = *(void *)(a1 + 1056);
    if (!v304)
    {
      uint64_t v305 = *(void *)(a1 + 8);
      char v306 = (void *)(v305 & 0xFFFFFFFFFFFFFFFCLL);
      if (v305) {
        char v306 = (void *)*v306;
      }
      uint64_t v304 = sub_1478B8C((uint64_t)v306);
      *(void *)(a1 + 1056) = v304;
    }
    if (*(void *)(a2 + 1056)) {
      char v307 = *(uint64_t (****)())(a2 + 1056);
    }
    else {
      char v307 = &off_25393B0;
    }
    sub_145F500(v304, (uint64_t)v307);
    if ((v235 & 0x20000) == 0)
    {
LABEL_407:
      if ((v235 & 0x40000) == 0) {
        goto LABEL_408;
      }
      goto LABEL_542;
    }
  }
  else if ((v235 & 0x20000) == 0)
  {
    goto LABEL_407;
  }
  *(_DWORD *)(a1 + 20) |= 0x20000u;
  char v308 = *(std::string **)(a1 + 1064);
  if (!v308)
  {
    uint64_t v309 = *(void *)(a1 + 8);
    unsigned int v310 = (void *)(v309 & 0xFFFFFFFFFFFFFFFCLL);
    if (v309) {
      unsigned int v310 = (void *)*v310;
    }
    char v308 = (std::string *)sub_15A5754((uint64_t)v310);
    *(void *)(a1 + 1064) = v308;
  }
  if (*(void *)(a2 + 1064)) {
    uint64_t v311 = *(uint64_t (****)())(a2 + 1064);
  }
  else {
    uint64_t v311 = &off_253F108;
  }
  sub_1598BE8(v308, (uint64_t)v311);
  if ((v235 & 0x40000) == 0)
  {
LABEL_408:
    if ((v235 & 0x80000) == 0) {
      goto LABEL_409;
    }
    goto LABEL_550;
  }
LABEL_542:
  *(_DWORD *)(a1 + 20) |= 0x40000u;
  char v312 = *(std::string **)(a1 + 1072);
  if (!v312)
  {
    uint64_t v313 = *(void *)(a1 + 8);
    char v314 = (void *)(v313 & 0xFFFFFFFFFFFFFFFCLL);
    if (v313) {
      char v314 = (void *)*v314;
    }
    char v312 = (std::string *)sub_15A5754((uint64_t)v314);
    *(void *)(a1 + 1072) = v312;
  }
  if (*(void *)(a2 + 1072)) {
    int v315 = *(uint64_t (****)())(a2 + 1072);
  }
  else {
    int v315 = &off_253F108;
  }
  sub_1598BE8(v312, (uint64_t)v315);
  if ((v235 & 0x80000) == 0)
  {
LABEL_409:
    if ((v235 & 0x100000) == 0) {
      goto LABEL_410;
    }
    goto LABEL_558;
  }
LABEL_550:
  *(_DWORD *)(a1 + 20) |= 0x80000u;
  uint64_t v316 = *(void *)(a1 + 1080);
  if (!v316)
  {
    uint64_t v317 = *(void *)(a1 + 8);
    char v318 = (void *)(v317 & 0xFFFFFFFFFFFFFFFCLL);
    if (v317) {
      char v318 = (void *)*v318;
    }
    uint64_t v316 = sub_15C1918((uint64_t)v318);
    *(void *)(a1 + 1080) = v316;
  }
  if (*(void *)(a2 + 1080)) {
    char v319 = *(uint64_t (****)())(a2 + 1080);
  }
  else {
    char v319 = &off_253F1A0;
  }
  sub_15B0E24(v316, (uint64_t)v319);
  if ((v235 & 0x100000) == 0)
  {
LABEL_410:
    if ((v235 & 0x200000) == 0) {
      goto LABEL_411;
    }
    goto LABEL_559;
  }
LABEL_558:
  *(unsigned char *)(a1 + 1088) = *(unsigned char *)(a2 + 1088);
  if ((v235 & 0x200000) == 0)
  {
LABEL_411:
    if ((v235 & 0x400000) == 0) {
      goto LABEL_412;
    }
LABEL_560:
    *(unsigned char *)(a1 + 1090) = *(unsigned char *)(a2 + 1090);
    if ((v235 & 0x800000) == 0) {
      goto LABEL_414;
    }
    goto LABEL_413;
  }
LABEL_559:
  *(unsigned char *)(a1 + 1089) = *(unsigned char *)(a2 + 1089);
  if ((v235 & 0x400000) != 0) {
    goto LABEL_560;
  }
LABEL_412:
  if ((v235 & 0x800000) != 0) {
LABEL_413:
  }
    *(unsigned char *)(a1 + 1091) = *(unsigned char *)(a2 + 1091);
LABEL_414:
  *(_DWORD *)(a1 + 20) |= v235;
LABEL_415:
  if (!HIBYTE(v235)) {
    goto LABEL_425;
  }
  if ((v235 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 1092) = *(_DWORD *)(a2 + 1092);
    if ((v235 & 0x2000000) == 0)
    {
LABEL_418:
      if ((v235 & 0x4000000) == 0) {
        goto LABEL_419;
      }
      goto LABEL_620;
    }
  }
  else if ((v235 & 0x2000000) == 0)
  {
    goto LABEL_418;
  }
  *(unsigned char *)(a1 + 1096) = *(unsigned char *)(a2 + 1096);
  if ((v235 & 0x4000000) == 0)
  {
LABEL_419:
    if ((v235 & 0x8000000) == 0) {
      goto LABEL_420;
    }
    goto LABEL_621;
  }
LABEL_620:
  *(unsigned char *)(a1 + 1097) = *(unsigned char *)(a2 + 1097);
  if ((v235 & 0x8000000) == 0)
  {
LABEL_420:
    if ((v235 & 0x10000000) == 0) {
      goto LABEL_421;
    }
    goto LABEL_622;
  }
LABEL_621:
  *(unsigned char *)(a1 + 1098) = *(unsigned char *)(a2 + 1098);
  if ((v235 & 0x10000000) == 0)
  {
LABEL_421:
    if ((v235 & 0x20000000) == 0) {
      goto LABEL_422;
    }
    goto LABEL_623;
  }
LABEL_622:
  *(unsigned char *)(a1 + 1099) = *(unsigned char *)(a2 + 1099);
  if ((v235 & 0x20000000) == 0)
  {
LABEL_422:
    if ((v235 & 0x40000000) == 0) {
      goto LABEL_423;
    }
LABEL_624:
    *(unsigned char *)(a1 + 1101) = *(unsigned char *)(a2 + 1101);
    if ((v235 & 0x80000000) == 0) {
      goto LABEL_424;
    }
LABEL_625:
    *(unsigned char *)(a1 + 1102) = *(unsigned char *)(a2 + 1102);
    goto LABEL_424;
  }
LABEL_623:
  *(unsigned char *)(a1 + 1100) = *(unsigned char *)(a2 + 1100);
  if ((v235 & 0x40000000) != 0) {
    goto LABEL_624;
  }
LABEL_423:
  if ((v235 & 0x80000000) != 0) {
    goto LABEL_625;
  }
LABEL_424:
  *(_DWORD *)(a1 + 20) |= v235;
LABEL_425:
  unsigned int v300 = *(_DWORD *)(a2 + 24);
  if (!(_BYTE)v300) {
    goto LABEL_436;
  }
  if (v300)
  {
    *(unsigned char *)(a1 + 1103) = *(unsigned char *)(a2 + 1103);
    if ((v300 & 2) == 0)
    {
LABEL_428:
      if ((v300 & 4) == 0) {
        goto LABEL_429;
      }
      goto LABEL_564;
    }
  }
  else if ((v300 & 2) == 0)
  {
    goto LABEL_428;
  }
  *(unsigned char *)(a1 + 1104) = *(unsigned char *)(a2 + 1104);
  if ((v300 & 4) == 0)
  {
LABEL_429:
    if ((v300 & 8) == 0) {
      goto LABEL_430;
    }
    goto LABEL_565;
  }
LABEL_564:
  *(unsigned char *)(a1 + 1105) = *(unsigned char *)(a2 + 1105);
  if ((v300 & 8) == 0)
  {
LABEL_430:
    if ((v300 & 0x10) == 0) {
      goto LABEL_431;
    }
    goto LABEL_566;
  }
LABEL_565:
  *(unsigned char *)(a1 + 1106) = *(unsigned char *)(a2 + 1106);
  if ((v300 & 0x10) == 0)
  {
LABEL_431:
    if ((v300 & 0x20) == 0) {
      goto LABEL_432;
    }
    goto LABEL_567;
  }
LABEL_566:
  *(unsigned char *)(a1 + 1107) = *(unsigned char *)(a2 + 1107);
  if ((v300 & 0x20) == 0)
  {
LABEL_432:
    if ((v300 & 0x40) == 0) {
      goto LABEL_433;
    }
LABEL_568:
    *(unsigned char *)(a1 + 1109) = *(unsigned char *)(a2 + 1109);
    if ((v300 & 0x80) == 0) {
      goto LABEL_435;
    }
    goto LABEL_434;
  }
LABEL_567:
  *(unsigned char *)(a1 + 1108) = *(unsigned char *)(a2 + 1108);
  if ((v300 & 0x40) != 0) {
    goto LABEL_568;
  }
LABEL_433:
  if ((v300 & 0x80) != 0) {
LABEL_434:
  }
    *(unsigned char *)(a1 + 1110) = *(unsigned char *)(a2 + 1110);
LABEL_435:
  *(_DWORD *)(a1 + 24) |= v300;
LABEL_436:
  if ((v300 & 0xFF00) == 0) {
    goto LABEL_447;
  }
  if ((v300 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 1111) = *(unsigned char *)(a2 + 1111);
    if ((v300 & 0x200) == 0)
    {
LABEL_439:
      if ((v300 & 0x400) == 0) {
        goto LABEL_440;
      }
      goto LABEL_572;
    }
  }
  else if ((v300 & 0x200) == 0)
  {
    goto LABEL_439;
  }
  *(unsigned char *)(a1 + 1112) = *(unsigned char *)(a2 + 1112);
  if ((v300 & 0x400) == 0)
  {
LABEL_440:
    if ((v300 & 0x800) == 0) {
      goto LABEL_441;
    }
    goto LABEL_573;
  }
LABEL_572:
  *(unsigned char *)(a1 + 1113) = *(unsigned char *)(a2 + 1113);
  if ((v300 & 0x800) == 0)
  {
LABEL_441:
    if ((v300 & 0x1000) == 0) {
      goto LABEL_442;
    }
    goto LABEL_574;
  }
LABEL_573:
  *(unsigned char *)(a1 + 1114) = *(unsigned char *)(a2 + 1114);
  if ((v300 & 0x1000) == 0)
  {
LABEL_442:
    if ((v300 & 0x2000) == 0) {
      goto LABEL_443;
    }
    goto LABEL_575;
  }
LABEL_574:
  *(unsigned char *)(a1 + 1115) = *(unsigned char *)(a2 + 1115);
  if ((v300 & 0x2000) == 0)
  {
LABEL_443:
    if ((v300 & 0x4000) == 0) {
      goto LABEL_444;
    }
LABEL_576:
    *(_DWORD *)(a1 + 1120) = *(_DWORD *)(a2 + 1120);
    if ((v300 & 0x8000) == 0) {
      goto LABEL_446;
    }
    goto LABEL_445;
  }
LABEL_575:
  *(_DWORD *)(a1 + 1116) = *(_DWORD *)(a2 + 1116);
  if ((v300 & 0x4000) != 0) {
    goto LABEL_576;
  }
LABEL_444:
  if ((v300 & 0x8000) != 0) {
LABEL_445:
  }
    *(unsigned char *)(a1 + 1124) = *(unsigned char *)(a2 + 1124);
LABEL_446:
  *(_DWORD *)(a1 + 24) |= v300;
LABEL_447:
  if ((v300 & 0xFF0000) == 0) {
    goto LABEL_458;
  }
  if ((v300 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 1125) = *(unsigned char *)(a2 + 1125);
    if ((v300 & 0x20000) == 0)
    {
LABEL_450:
      if ((v300 & 0x40000) == 0) {
        goto LABEL_451;
      }
      goto LABEL_580;
    }
  }
  else if ((v300 & 0x20000) == 0)
  {
    goto LABEL_450;
  }
  *(unsigned char *)(a1 + 1126) = *(unsigned char *)(a2 + 1126);
  if ((v300 & 0x40000) == 0)
  {
LABEL_451:
    if ((v300 & 0x80000) == 0) {
      goto LABEL_452;
    }
    goto LABEL_581;
  }
LABEL_580:
  *(unsigned char *)(a1 + 1127) = *(unsigned char *)(a2 + 1127);
  if ((v300 & 0x80000) == 0)
  {
LABEL_452:
    if ((v300 & 0x100000) == 0) {
      goto LABEL_453;
    }
    goto LABEL_582;
  }
LABEL_581:
  *(_DWORD *)(a1 + 1128) = *(_DWORD *)(a2 + 1128);
  if ((v300 & 0x100000) == 0)
  {
LABEL_453:
    if ((v300 & 0x200000) == 0) {
      goto LABEL_454;
    }
    goto LABEL_583;
  }
LABEL_582:
  *(unsigned char *)(a1 + 1132) = *(unsigned char *)(a2 + 1132);
  if ((v300 & 0x200000) == 0)
  {
LABEL_454:
    if ((v300 & 0x400000) == 0) {
      goto LABEL_455;
    }
LABEL_584:
    *(unsigned char *)(a1 + 1134) = *(unsigned char *)(a2 + 1134);
    if ((v300 & 0x800000) == 0) {
      goto LABEL_457;
    }
    goto LABEL_456;
  }
LABEL_583:
  *(unsigned char *)(a1 + 1133) = *(unsigned char *)(a2 + 1133);
  if ((v300 & 0x400000) != 0) {
    goto LABEL_584;
  }
LABEL_455:
  if ((v300 & 0x800000) != 0) {
LABEL_456:
  }
    *(unsigned char *)(a1 + 1135) = *(unsigned char *)(a2 + 1135);
LABEL_457:
  *(_DWORD *)(a1 + 24) |= v300;
LABEL_458:
  if (!HIBYTE(v300)) {
    goto LABEL_468;
  }
  if ((v300 & 0x1000000) != 0)
  {
    *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
    if ((v300 & 0x2000000) == 0)
    {
LABEL_461:
      if ((v300 & 0x4000000) == 0) {
        goto LABEL_462;
      }
      goto LABEL_628;
    }
  }
  else if ((v300 & 0x2000000) == 0)
  {
    goto LABEL_461;
  }
  *(unsigned char *)(a1 + 1144) = *(unsigned char *)(a2 + 1144);
  if ((v300 & 0x4000000) == 0)
  {
LABEL_462:
    if ((v300 & 0x8000000) == 0) {
      goto LABEL_463;
    }
    goto LABEL_629;
  }
LABEL_628:
  *(unsigned char *)(a1 + 1145) = *(unsigned char *)(a2 + 1145);
  if ((v300 & 0x8000000) == 0)
  {
LABEL_463:
    if ((v300 & 0x10000000) == 0) {
      goto LABEL_464;
    }
    goto LABEL_630;
  }
LABEL_629:
  *(unsigned char *)(a1 + 1146) = *(unsigned char *)(a2 + 1146);
  if ((v300 & 0x10000000) == 0)
  {
LABEL_464:
    if ((v300 & 0x20000000) == 0) {
      goto LABEL_465;
    }
    goto LABEL_631;
  }
LABEL_630:
  *(unsigned char *)(a1 + 1147) = *(unsigned char *)(a2 + 1147);
  if ((v300 & 0x20000000) == 0)
  {
LABEL_465:
    if ((v300 & 0x40000000) == 0) {
      goto LABEL_466;
    }
LABEL_632:
    *(unsigned char *)(a1 + 1149) = *(unsigned char *)(a2 + 1149);
    if ((v300 & 0x80000000) == 0) {
      goto LABEL_467;
    }
LABEL_633:
    *(unsigned char *)(a1 + 1150) = *(unsigned char *)(a2 + 1150);
    goto LABEL_467;
  }
LABEL_631:
  *(unsigned char *)(a1 + 1148) = *(unsigned char *)(a2 + 1148);
  if ((v300 & 0x40000000) != 0) {
    goto LABEL_632;
  }
LABEL_466:
  if ((v300 & 0x80000000) != 0) {
    goto LABEL_633;
  }
LABEL_467:
  *(_DWORD *)(a1 + 24) |= v300;
LABEL_468:
  unsigned int v301 = *(_DWORD *)(a2 + 28);
  if (!(_BYTE)v301) {
    goto LABEL_479;
  }
  if (v301)
  {
    *(unsigned char *)(a1 + 1151) = *(unsigned char *)(a2 + 1151);
    if ((v301 & 2) == 0)
    {
LABEL_471:
      if ((v301 & 4) == 0) {
        goto LABEL_472;
      }
      goto LABEL_588;
    }
  }
  else if ((v301 & 2) == 0)
  {
    goto LABEL_471;
  }
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  if ((v301 & 4) == 0)
  {
LABEL_472:
    if ((v301 & 8) == 0) {
      goto LABEL_473;
    }
    goto LABEL_589;
  }
LABEL_588:
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  if ((v301 & 8) == 0)
  {
LABEL_473:
    if ((v301 & 0x10) == 0) {
      goto LABEL_474;
    }
    goto LABEL_590;
  }
LABEL_589:
  *(_DWORD *)(a1 + 1168) = *(_DWORD *)(a2 + 1168);
  if ((v301 & 0x10) == 0)
  {
LABEL_474:
    if ((v301 & 0x20) == 0) {
      goto LABEL_475;
    }
    goto LABEL_591;
  }
LABEL_590:
  *(unsigned char *)(a1 + 1172) = *(unsigned char *)(a2 + 1172);
  if ((v301 & 0x20) == 0)
  {
LABEL_475:
    if ((v301 & 0x40) == 0) {
      goto LABEL_476;
    }
LABEL_592:
    *(unsigned char *)(a1 + 1174) = *(unsigned char *)(a2 + 1174);
    if ((v301 & 0x80) == 0) {
      goto LABEL_478;
    }
    goto LABEL_477;
  }
LABEL_591:
  *(unsigned char *)(a1 + 1173) = *(unsigned char *)(a2 + 1173);
  if ((v301 & 0x40) != 0) {
    goto LABEL_592;
  }
LABEL_476:
  if ((v301 & 0x80) != 0) {
LABEL_477:
  }
    *(unsigned char *)(a1 + 1175) = *(unsigned char *)(a2 + 1175);
LABEL_478:
  *(_DWORD *)(a1 + 28) |= v301;
LABEL_479:
  if ((v301 & 0xFF00) == 0) {
    goto LABEL_490;
  }
  if ((v301 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 1176) = *(unsigned char *)(a2 + 1176);
    if ((v301 & 0x200) == 0)
    {
LABEL_482:
      if ((v301 & 0x400) == 0) {
        goto LABEL_483;
      }
      goto LABEL_596;
    }
  }
  else if ((v301 & 0x200) == 0)
  {
    goto LABEL_482;
  }
  *(unsigned char *)(a1 + 1177) = *(unsigned char *)(a2 + 1177);
  if ((v301 & 0x400) == 0)
  {
LABEL_483:
    if ((v301 & 0x800) == 0) {
      goto LABEL_484;
    }
    goto LABEL_597;
  }
LABEL_596:
  *(unsigned char *)(a1 + 1178) = *(unsigned char *)(a2 + 1178);
  if ((v301 & 0x800) == 0)
  {
LABEL_484:
    if ((v301 & 0x1000) == 0) {
      goto LABEL_485;
    }
    goto LABEL_598;
  }
LABEL_597:
  *(unsigned char *)(a1 + 1179) = *(unsigned char *)(a2 + 1179);
  if ((v301 & 0x1000) == 0)
  {
LABEL_485:
    if ((v301 & 0x2000) == 0) {
      goto LABEL_486;
    }
    goto LABEL_599;
  }
LABEL_598:
  *(unsigned char *)(a1 + 1180) = *(unsigned char *)(a2 + 1180);
  if ((v301 & 0x2000) == 0)
  {
LABEL_486:
    if ((v301 & 0x4000) == 0) {
      goto LABEL_487;
    }
LABEL_600:
    *(unsigned char *)(a1 + 1182) = *(unsigned char *)(a2 + 1182);
    if ((v301 & 0x8000) == 0) {
      goto LABEL_489;
    }
    goto LABEL_488;
  }
LABEL_599:
  *(unsigned char *)(a1 + 1181) = *(unsigned char *)(a2 + 1181);
  if ((v301 & 0x4000) != 0) {
    goto LABEL_600;
  }
LABEL_487:
  if ((v301 & 0x8000) != 0) {
LABEL_488:
  }
    *(unsigned char *)(a1 + 1183) = *(unsigned char *)(a2 + 1183);
LABEL_489:
  *(_DWORD *)(a1 + 28) |= v301;
LABEL_490:
  if ((v301 & 0xFF0000) == 0) {
    goto LABEL_501;
  }
  if ((v301 & 0x10000) != 0)
  {
    *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
    if ((v301 & 0x20000) == 0)
    {
LABEL_493:
      if ((v301 & 0x40000) == 0) {
        goto LABEL_494;
      }
      goto LABEL_604;
    }
  }
  else if ((v301 & 0x20000) == 0)
  {
    goto LABEL_493;
  }
  *(unsigned char *)(a1 + 1192) = *(unsigned char *)(a2 + 1192);
  if ((v301 & 0x40000) == 0)
  {
LABEL_494:
    if ((v301 & 0x80000) == 0) {
      goto LABEL_495;
    }
    goto LABEL_605;
  }
LABEL_604:
  *(unsigned char *)(a1 + 1193) = *(unsigned char *)(a2 + 1193);
  if ((v301 & 0x80000) == 0)
  {
LABEL_495:
    if ((v301 & 0x100000) == 0) {
      goto LABEL_496;
    }
    goto LABEL_606;
  }
LABEL_605:
  *(unsigned char *)(a1 + 1194) = *(unsigned char *)(a2 + 1194);
  if ((v301 & 0x100000) == 0)
  {
LABEL_496:
    if ((v301 & 0x200000) == 0) {
      goto LABEL_497;
    }
    goto LABEL_607;
  }
LABEL_606:
  *(unsigned char *)(a1 + 1195) = *(unsigned char *)(a2 + 1195);
  if ((v301 & 0x200000) == 0)
  {
LABEL_497:
    if ((v301 & 0x400000) == 0) {
      goto LABEL_498;
    }
LABEL_608:
    *(unsigned char *)(a1 + 1197) = *(unsigned char *)(a2 + 1197);
    if ((v301 & 0x800000) == 0) {
      goto LABEL_500;
    }
    goto LABEL_499;
  }
LABEL_607:
  *(unsigned char *)(a1 + 1196) = *(unsigned char *)(a2 + 1196);
  if ((v301 & 0x400000) != 0) {
    goto LABEL_608;
  }
LABEL_498:
  if ((v301 & 0x800000) != 0) {
LABEL_499:
  }
    *(unsigned char *)(a1 + 1198) = *(unsigned char *)(a2 + 1198);
LABEL_500:
  *(_DWORD *)(a1 + 28) |= v301;
LABEL_501:
  if (!HIBYTE(v301)) {
    goto LABEL_511;
  }
  if ((v301 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 1199) = *(unsigned char *)(a2 + 1199);
    if ((v301 & 0x2000000) == 0)
    {
LABEL_504:
      if ((v301 & 0x4000000) == 0) {
        goto LABEL_505;
      }
      goto LABEL_636;
    }
  }
  else if ((v301 & 0x2000000) == 0)
  {
    goto LABEL_504;
  }
  *(unsigned char *)(a1 + 1200) = *(unsigned char *)(a2 + 1200);
  if ((v301 & 0x4000000) == 0)
  {
LABEL_505:
    if ((v301 & 0x8000000) == 0) {
      goto LABEL_506;
    }
    goto LABEL_637;
  }
LABEL_636:
  *(unsigned char *)(a1 + 1201) = *(unsigned char *)(a2 + 1201);
  if ((v301 & 0x8000000) == 0)
  {
LABEL_506:
    if ((v301 & 0x10000000) == 0) {
      goto LABEL_507;
    }
    goto LABEL_638;
  }
LABEL_637:
  *(unsigned char *)(a1 + 1202) = *(unsigned char *)(a2 + 1202);
  if ((v301 & 0x10000000) == 0)
  {
LABEL_507:
    if ((v301 & 0x20000000) == 0) {
      goto LABEL_508;
    }
    goto LABEL_639;
  }
LABEL_638:
  *(unsigned char *)(a1 + 1203) = *(unsigned char *)(a2 + 1203);
  if ((v301 & 0x20000000) == 0)
  {
LABEL_508:
    if ((v301 & 0x40000000) == 0) {
      goto LABEL_509;
    }
LABEL_640:
    *(unsigned char *)(a1 + 1205) = *(unsigned char *)(a2 + 1205);
    if ((v301 & 0x80000000) == 0) {
      goto LABEL_510;
    }
LABEL_641:
    *(unsigned char *)(a1 + 1206) = *(unsigned char *)(a2 + 1206);
    goto LABEL_510;
  }
LABEL_639:
  *(unsigned char *)(a1 + 1204) = *(unsigned char *)(a2 + 1204);
  if ((v301 & 0x40000000) != 0) {
    goto LABEL_640;
  }
LABEL_509:
  if ((v301 & 0x80000000) != 0) {
    goto LABEL_641;
  }
LABEL_510:
  *(_DWORD *)(a1 + 28) |= v301;
LABEL_511:
  int v302 = *(_DWORD *)(a2 + 32);
  if (!(_BYTE)v302) {
    goto LABEL_522;
  }
  if (v302)
  {
    *(unsigned char *)(a1 + 1207) = *(unsigned char *)(a2 + 1207);
    if ((v302 & 2) == 0)
    {
LABEL_514:
      if ((v302 & 4) == 0) {
        goto LABEL_515;
      }
      goto LABEL_612;
    }
  }
  else if ((v302 & 2) == 0)
  {
    goto LABEL_514;
  }
  *(unsigned char *)(a1 + 1208) = *(unsigned char *)(a2 + 1208);
  if ((v302 & 4) == 0)
  {
LABEL_515:
    if ((v302 & 8) == 0) {
      goto LABEL_516;
    }
    goto LABEL_613;
  }
LABEL_612:
  *(unsigned char *)(a1 + 1209) = *(unsigned char *)(a2 + 1209);
  if ((v302 & 8) == 0)
  {
LABEL_516:
    if ((v302 & 0x10) == 0) {
      goto LABEL_517;
    }
    goto LABEL_614;
  }
LABEL_613:
  *(unsigned char *)(a1 + 1210) = *(unsigned char *)(a2 + 1210);
  if ((v302 & 0x10) == 0)
  {
LABEL_517:
    if ((v302 & 0x20) == 0) {
      goto LABEL_518;
    }
    goto LABEL_615;
  }
LABEL_614:
  *(unsigned char *)(a1 + 1211) = *(unsigned char *)(a2 + 1211);
  if ((v302 & 0x20) == 0)
  {
LABEL_518:
    if ((v302 & 0x40) == 0) {
      goto LABEL_519;
    }
LABEL_616:
    *(unsigned char *)(a1 + 1213) = *(unsigned char *)(a2 + 1213);
    if ((v302 & 0x80) == 0) {
      goto LABEL_521;
    }
    goto LABEL_520;
  }
LABEL_615:
  *(unsigned char *)(a1 + 1212) = *(unsigned char *)(a2 + 1212);
  if ((v302 & 0x40) != 0) {
    goto LABEL_616;
  }
LABEL_519:
  if ((v302 & 0x80) != 0) {
LABEL_520:
  }
    *(_DWORD *)(a1 + 1216) = *(_DWORD *)(a2 + 1216);
LABEL_521:
  *(_DWORD *)(a1 + 32) |= v302;
LABEL_522:
  uint64_t v303 = *(void *)(a2 + 8);
  if (v303)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v303 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_14EEF28(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_25;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    int v9 = (std::string *)sub_12CCB50((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    int v12 = *(void *(****)(void *))(a2 + 32);
  }
  else {
    int v12 = &off_25312D8;
  }
  uint64_t result = sub_12CA0B8(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_17:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        int v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_12CCA5C((uint64_t)v15);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(void *(****)(void *))(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2531290;
    }
    uint64_t result = sub_117EF04(v13, (uint64_t)v16);
  }
LABEL_25:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14EF06C(uint64_t a1)
{
  uint64_t result = sub_14EF2F0(a1 + 40);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 384);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      BOOL v5 = sub_12CE040(*(void *)(*(void *)(a1 + 392) + 8 * v3));
      uint64_t v3 = v4;
      if (!v5) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 496);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_15BAF9C(*(void *)(*(void *)(a1 + 504) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 16);
    if ((v9 & 0x1000000) != 0)
    {
      uint64_t result = sub_12CA188(*(void *)(a1 + 864));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 16);
    }
    if ((v9 & 0x2000000) != 0)
    {
      uint64_t result = sub_15BA3C8(*(void *)(a1 + 872));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 16);
    }
    if ((v9 & 0x4000000) != 0)
    {
      uint64_t result = sub_15B06D8(*(void *)(a1 + 880));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 16);
    }
    if ((v9 & 0x8000000) != 0)
    {
      uint64_t result = sub_146A1C8(*(void *)(a1 + 888));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 16);
    }
    if ((v9 & 0x10000000) != 0)
    {
      uint64_t result = sub_12CA188(*(void *)(a1 + 896));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 16);
    }
    if ((v9 & 0x20000000) != 0)
    {
      uint64_t result = sub_14EF360(*(void *)(a1 + 904));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 16);
    }
    if ((v9 & 0x80000000) == 0 || (uint64_t result = sub_12C8E90(*(void *)(a1 + 920)), result))
    {
      int v10 = *(_DWORD *)(a1 + 20);
      if (v10)
      {
        uint64_t result = sub_12CCA00(*(void *)(a1 + 928));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 2) != 0)
      {
        uint64_t result = sub_12CCA00(*(void *)(a1 + 936));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 4) != 0)
      {
        uint64_t v11 = *(void *)(a1 + 944);
        uint64_t v12 = *(unsigned int *)(v11 + 32);
        uint64_t v13 = *(void *)(v11 + 40);
        while ((int)v12 >= 1)
        {
          uint64_t result = 0;
          uint64_t v14 = *(void *)(v13 + 8 * v12--);
          if ((~*(_DWORD *)(v14 + 16) & 5) != 0) {
            return result;
          }
        }
      }
      if ((v10 & 0x10) != 0)
      {
        uint64_t v15 = *(void *)(a1 + 960);
        uint64_t v16 = *(unsigned int *)(v15 + 32);
        uint64_t v17 = *(void *)(v15 + 40);
        while ((int)v16 >= 1)
        {
          uint64_t result = 0;
          uint64_t v18 = *(void *)(v17 + 8 * v16--);
          if ((~*(_DWORD *)(v18 + 16) & 5) != 0) {
            return result;
          }
        }
      }
      if ((v10 & 0x20) != 0)
      {
        uint64_t result = sub_12C9B00(*(void *)(a1 + 968));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x40) != 0)
      {
        uint64_t result = sub_12C8E90(*(void *)(a1 + 976));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x200) != 0)
      {
        uint64_t result = sub_12CA188(*(void *)(a1 + 1000));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x400) != 0)
      {
        uint64_t result = sub_158BF68(*(void *)(a1 + 1008));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x1000) != 0)
      {
        uint64_t result = sub_12C8E90(*(void *)(a1 + 1024));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x2000) != 0)
      {
        uint64_t result = sub_12CCA00(*(void *)(a1 + 1032));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x8000) != 0)
      {
        uint64_t result = sub_1232354(*(void *)(a1 + 1048));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x10000) != 0)
      {
        uint64_t result = sub_145F644(*(void *)(a1 + 1056));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x20000) != 0)
      {
        uint64_t result = sub_1599504(*(void *)(a1 + 1064));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x40000) != 0)
      {
        uint64_t result = sub_1599504(*(void *)(a1 + 1072));
        if (!result) {
          return result;
        }
        int v10 = *(_DWORD *)(a1 + 20);
      }
      if ((v10 & 0x80000) == 0) {
        return 1;
      }
      uint64_t result = sub_15B0F18(*(void *)(a1 + 1080));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

BOOL sub_14EF2F0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      BOOL result = sub_12D0168(*(void *)(v5 + 48));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

BOOL sub_14EF360(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    BOOL result = sub_12CA188(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  BOOL result = sub_12C8E90(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14EF3AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocalQuery");
}

uint64_t sub_14EF3BC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253BA60)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_12C9BDC(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_12C8F14(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14EF4A8(uint64_t a1)
{
  sub_14EF3BC(a1);

  operator delete();
}

uint64_t sub_14EF4E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)int v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void **)(a1 + 40);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_12CCA5C((uint64_t)v17);
        *(void *)(a1 + 40) = v16;
        uint64_t v7 = *(unsigned __int8 **)v23;
      }
      uint64_t v15 = sub_12C8E00(a3, (uint64_t)v16, v7);
      goto LABEL_36;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_12CCB50((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_14E1114(a3, v18, v7);
LABEL_36:
    *(void *)int v23 = v15;
    if (!v15) {
      goto LABEL_42;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      return *(void *)v23;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    uint64_t v15 = (void *)sub_188C244(v22, *(char **)v23, (uint64_t)a3);
    goto LABEL_36;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_36;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v23;
  }
LABEL_42:
  *(void *)int v23 = 0;
  return *(void *)v23;
}

char *sub_14EF6F8(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 40);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_12C9EC4(v7, v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 40);
    char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_12C9140(v10, (unint64_t)v12, a3);
  }
LABEL_18:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_14EF8A4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_12CA008(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_12C9348(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_14EF9C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.Route");
}

void *sub_14EF9D0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14EFA88((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 15));
  sub_1514CFC(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_1514CFC(a1 + 6);
  sub_124DDCC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_14EFA88(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 136);
  uint64_t v2 = (void ***)(a1 + 136);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  BOOL result = (void ***)(a1 + 144);
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253BA90)
  {
    uint64_t v5 = *(void **)(a1 + 152);
    if (v5)
    {
      sub_1242274(v5);
      operator delete();
    }
    if (*(void *)(a1 + 160))
    {
      sub_1793FB4();
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 168);
    if (v6)
    {
      sub_12D0D94(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 176);
    if (v7)
    {
      sub_12D0D94(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 184);
    if (v8)
    {
      sub_124A954(v8);
      operator delete();
    }
    if (*(void *)(a1 + 192))
    {
      sub_15B6D48();
      operator delete();
    }
    BOOL result = *(void ****)(a1 + 200);
    if (result)
    {
      sub_14F2924(result);
      operator delete();
    }
  }
  return result;
}

void sub_14EFBE0(void *a1)
{
  sub_14EF9D0(a1);

  operator delete();
}

uint64_t sub_14EFC18(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_12D0DD0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_14F2570(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_14F2570(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  *(_DWORD *)(a1 + 120) = 0;
  int v12 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v12) {
    goto LABEL_23;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_37:
    unint64_t v16 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_41;
      }
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
  unint64_t v15 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_37;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_37;
    }
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_41:
  uint64_t result = sub_12422B0(*(void *)(a1 + 152));
  if ((v12 & 8) == 0)
  {
LABEL_18:
    if ((v12 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = (uint64_t)sub_1793FF0(*(void *)(a1 + 160));
  if ((v12 & 0x10) == 0)
  {
LABEL_19:
    if ((v12 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_44:
    uint64_t result = sub_12D0DD0(*(void *)(a1 + 176));
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_43:
  uint64_t result = sub_12D0DD0(*(void *)(a1 + 168));
  if ((v12 & 0x20) != 0) {
    goto LABEL_44;
  }
LABEL_20:
  if ((v12 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_45:
  uint64_t result = sub_124A990(*(void *)(a1 + 184));
  if ((v12 & 0x80) != 0) {
LABEL_22:
  }
    uint64_t result = sub_15B6D84(*(void *)(a1 + 192));
LABEL_23:
  if ((v12 & 0x100) != 0) {
    uint64_t result = sub_14EFDF8(*(void *)(a1 + 200));
  }
  if ((v12 & 0xFE00) != 0)
  {
    *(_OWORD *)(a1 + 224) = 0u;
    *(_OWORD *)(a1 + 240) = 0u;
    *(_OWORD *)(a1 + 208) = 0u;
  }
  if ((v12 & 0x70000) != 0)
  {
    *(_DWORD *)(a1 + 264) = 0;
    *(void *)(a1 + 256) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_14EFDF8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14F3A18(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14F41C8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

uint64_t sub_14EFE9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v106 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v106, a3[11].i32[1]) & 1) == 0)
  {
    int v105 = 0;
    uint64_t v6 = (uint64_t **)(a1 + 72);
    uint64_t v104 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (unsigned __int8 *)(*(void *)v106 + 1);
      unsigned int v8 = **(unsigned char **)v106;
      if ((char)**(unsigned char **)v106 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v106, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (unsigned __int8 *)(*(void *)v106 + 2);
        }
      }
      *(void *)int v106 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_177;
          }
          v105 |= 0x200u;
          uint64_t v11 = (char *)(v7 + 1);
          uint64_t v12 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_14;
          }
          int v13 = *v11;
          uint64_t v12 = v12 + (v13 << 7) - 128;
          if ((v13 & 0x80000000) == 0)
          {
            uint64_t v11 = (char *)(v7 + 2);
LABEL_14:
            *(void *)int v106 = v11;
            *(void *)(a1 + 208) = v12;
            goto LABEL_185;
          }
          uint64_t v88 = sub_188C138((uint64_t)v7, v12);
          *(void *)int v106 = v88;
          *(void *)(a1 + 208) = v89;
          if (!v88) {
            goto LABEL_194;
          }
          goto LABEL_185;
        case 5u:
          if (v8 != 41) {
            goto LABEL_177;
          }
          uint64_t v15 = *(void *)v7;
          char v14 = v7 + 8;
          v105 |= 0x400u;
          *(void *)(a1 + 216) = v15;
          goto LABEL_41;
        case 6u:
          if (v8 != 49) {
            goto LABEL_177;
          }
          uint64_t v16 = *(void *)v7;
          char v14 = v7 + 8;
          v105 |= 0x800u;
          *(void *)(a1 + 224) = v16;
          goto LABEL_41;
        case 8u:
          if (v8 != 66) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v17 = *(void *)(a1 + 8);
          uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
          if (v17) {
            uint64_t v18 = (uint64_t *)*v18;
          }
          uint64_t v19 = (void *)(a1 + 136);
          goto LABEL_56;
        case 9u:
          if (v8 != 72) {
            goto LABEL_177;
          }
          v105 |= 0x1000u;
          uint64_t v21 = (char *)(v7 + 1);
          LODWORD(v20) = *v7;
          if ((v20 & 0x80) == 0) {
            goto LABEL_27;
          }
          int v22 = *v21;
          uint64_t v20 = v20 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v90 = sub_188C138((uint64_t)v7, v20);
            *(void *)int v106 = v90;
            *(_DWORD *)(a1 + 232) = v91;
            if (!v90) {
              goto LABEL_194;
            }
          }
          else
          {
            uint64_t v21 = (char *)(v7 + 2);
LABEL_27:
            *(void *)int v106 = v21;
            *(_DWORD *)(a1 + 232) = v20;
          }
          goto LABEL_185;
        case 0xAu:
          if (v8 != 80) {
            goto LABEL_177;
          }
          v105 |= 0x2000u;
          uint64_t v24 = (char *)(v7 + 1);
          LODWORD(v23) = *v7;
          if ((v23 & 0x80) == 0) {
            goto LABEL_32;
          }
          int v25 = *v24;
          uint64_t v23 = v23 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v92 = sub_188C138((uint64_t)v7, v23);
            *(void *)int v106 = v92;
            *(_DWORD *)(a1 + 236) = v93;
            if (!v92) {
              goto LABEL_194;
            }
          }
          else
          {
            uint64_t v24 = (char *)(v7 + 2);
LABEL_32:
            *(void *)int v106 = v24;
            *(_DWORD *)(a1 + 236) = v23;
          }
          goto LABEL_185;
        case 0xBu:
          if (v8 != 90) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v26 = *(void *)(a1 + 152);
          if (!v26)
          {
            unint64_t v27 = (void *)(*v104 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v104) {
              unint64_t v27 = (void *)*v27;
            }
            sub_124C100((uint64_t)v27);
            uint64_t v26 = v28;
            *(void *)(a1 + 152) = v28;
            uint64_t v7 = *(unsigned __int8 **)v106;
          }
          uint64_t v29 = (uint64_t)sub_14F0A24(a3, v26, v7);
          goto LABEL_184;
        case 0xDu:
          if (v8 != 105) {
            goto LABEL_177;
          }
          uint64_t v30 = *(void *)v7;
          char v14 = v7 + 8;
          v105 |= 0x4000u;
          *(void *)(a1 + 240) = v30;
LABEL_41:
          *(void *)int v106 = v14;
          goto LABEL_185;
        case 0xEu:
          if (v8 != 112) {
            goto LABEL_177;
          }
          v105 |= 0x10000u;
          int v31 = (char *)(v7 + 1);
          uint64_t v32 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_46;
          }
          int v33 = *v31;
          uint64_t v32 = v32 + (v33 << 7) - 128;
          if (v33 < 0)
          {
            uint64_t v94 = sub_188C138((uint64_t)v7, v32);
            *(void *)int v106 = v94;
            *(unsigned char *)(a1 + 256) = v95 != 0;
            if (!v94) {
              goto LABEL_194;
            }
          }
          else
          {
            int v31 = (char *)(v7 + 2);
LABEL_46:
            *(void *)int v106 = v31;
            *(unsigned char *)(a1 + 256) = v32 != 0;
          }
          goto LABEL_185;
        case 0xFu:
          if (v8 != 120) {
            goto LABEL_177;
          }
          v105 |= 0x8000u;
          uint64_t v34 = (char *)(v7 + 1);
          uint64_t v35 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_51;
          }
          int v36 = *v34;
          uint64_t v35 = v35 + (v36 << 7) - 128;
          if (v36 < 0)
          {
            uint64_t v96 = sub_188C138((uint64_t)v7, v35);
            *(void *)int v106 = v96;
            *(void *)(a1 + 248) = v97;
            if (!v96) {
              goto LABEL_194;
            }
          }
          else
          {
            uint64_t v34 = (char *)(v7 + 2);
LABEL_51:
            *(void *)int v106 = v34;
            *(void *)(a1 + 248) = v35;
          }
          goto LABEL_185;
        case 0x10u:
          if (v8 != 130) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v37 = *(void *)(a1 + 8);
          uint64_t v18 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
          if (v37) {
            uint64_t v18 = (uint64_t *)*v18;
          }
          uint64_t v19 = (void *)(a1 + 144);
LABEL_56:
          int v38 = (std::string *)sub_1880F84(v19, v18);
          uint64_t v29 = (uint64_t)sub_188C244(v38, *(char **)v106, (uint64_t)a3);
          goto LABEL_184;
        case 0x11u:
          if (v8 != 138) {
            goto LABEL_177;
          }
          unint64_t v39 = v7 - 2;
          while (1)
          {
            uint64_t v40 = v39 + 2;
            *(void *)int v106 = v39 + 2;
            int v41 = *(_DWORD **)(a1 + 40);
            if (v41 && (uint64_t v42 = *(int *)(a1 + 32), (int)v42 < *v41))
            {
              *(_DWORD *)(a1 + 32) = v42 + 1;
              uint64_t v43 = *(void *)&v41[2 * v42 + 2];
            }
            else
            {
              uint64_t v44 = sub_12D2834(*(void *)(a1 + 24));
              uint64_t v43 = sub_188CDC8(a1 + 24, (uint64_t)v44);
              uint64_t v40 = *(unsigned __int8 **)v106;
            }
            unint64_t v39 = (unsigned __int8 *)sub_123B004(a3, v43, v40);
            *(void *)int v106 = v39;
            if (!v39) {
              goto LABEL_194;
            }
            if (*(void *)a3 <= (unint64_t)v39 || *(_WORD *)v39 != 394) {
              goto LABEL_185;
            }
          }
        case 0x12u:
          if (v8 != 146) {
            goto LABEL_177;
          }
          int64_t v45 = v7 - 2;
          while (1)
          {
            int v46 = v45 + 2;
            *(void *)int v106 = v45 + 2;
            uint64_t v47 = *(_DWORD **)(a1 + 64);
            if (v47 && (uint64_t v48 = *(int *)(a1 + 56), (int)v48 < *v47))
            {
              *(_DWORD *)(a1 + 56) = v48 + 1;
              uint64_t v49 = *(void *)&v47[2 * v48 + 2];
            }
            else
            {
              uint64_t v50 = sub_14FB990(*(void *)(a1 + 48));
              uint64_t v49 = sub_188CDC8(a1 + 48, (uint64_t)v50);
              int v46 = *(unsigned __int8 **)v106;
            }
            int64_t v45 = (unsigned __int8 *)sub_14F0AB4(a3, v49, v46);
            *(void *)int v106 = v45;
            if (!v45) {
              goto LABEL_194;
            }
            if (*(void *)a3 <= (unint64_t)v45 || *(_WORD *)v45 != 402) {
              goto LABEL_185;
            }
          }
        case 0x13u:
          if (v8 != 154) {
            goto LABEL_177;
          }
          int v51 = (const std::string::value_type *)(v7 - 2);
          while (1)
          {
            uint64_t v52 = (char *)(v51 + 2);
            *(void *)int v106 = v51 + 2;
            int v53 = *(_DWORD **)(a1 + 88);
            if (v53 && (uint64_t v54 = *(int *)(a1 + 80), (int)v54 < *v53))
            {
              *(_DWORD *)(a1 + 80) = v54 + 1;
              uint64_t v55 = *(std::string **)&v53[2 * v54 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              void *v57 = v56;
              v57[1] = sub_3A6EDC;
              void *v56 = 0;
              v56[1] = 0;
              v56[2] = 0;
              uint64_t v55 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v56);
              uint64_t v52 = *(char **)v106;
            }
            int v51 = sub_188C244(v55, v52, (uint64_t)a3);
            *(void *)int v106 = v51;
            if (!v51) {
              goto LABEL_194;
            }
            if (*(void *)a3 <= (unint64_t)v51 || *(_WORD *)v51 != 410) {
              goto LABEL_185;
            }
          }
        case 0x14u:
          if (v8 != 162) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          int v58 = *(void **)(a1 + 160);
          if (!v58)
          {
            uint64_t v59 = (void *)(*v104 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v104) {
              uint64_t v59 = (void *)*v59;
            }
            int v58 = sub_1830494((uint64_t)v59);
            *(void *)(a1 + 160) = v58;
            uint64_t v7 = *(unsigned __int8 **)v106;
          }
          uint64_t v29 = (uint64_t)sub_14F0B44(a3, (uint64_t)v58, v7);
          goto LABEL_184;
        case 0x15u:
          if (v8 != 170) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v60 = *(void **)(a1 + 168);
          if (v60) {
            goto LABEL_106;
          }
          int v61 = (void *)(*v104 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v104) {
            int v61 = (void *)*v61;
          }
          uint64_t v60 = sub_12D2834((uint64_t)v61);
          *(void *)(a1 + 168) = v60;
          goto LABEL_105;
        case 0x16u:
          if (v8 != 178) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v60 = *(void **)(a1 + 176);
          if (v60) {
            goto LABEL_106;
          }
          uint64_t v62 = (void *)(*v104 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v104) {
            uint64_t v62 = (void *)*v62;
          }
          uint64_t v60 = sub_12D2834((uint64_t)v62);
          *(void *)(a1 + 176) = v60;
LABEL_105:
          uint64_t v7 = *(unsigned __int8 **)v106;
LABEL_106:
          uint64_t v29 = sub_123B004(a3, (uint64_t)v60, v7);
          goto LABEL_184;
        case 0x17u:
          if (v8 != 186) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          int v63 = *(void **)(a1 + 184);
          if (!v63)
          {
            uint64_t v64 = (void *)(*v104 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v104) {
              uint64_t v64 = (void *)*v64;
            }
            int v63 = sub_124C160((uint64_t)v64);
            *(void *)(a1 + 184) = v63;
            uint64_t v7 = *(unsigned __int8 **)v106;
          }
          uint64_t v29 = (uint64_t)sub_14F0BD4(a3, (uint64_t)v63, v7);
          goto LABEL_184;
        case 0x18u:
          if (v8 != 192) {
            goto LABEL_177;
          }
          v105 |= 0x20000u;
          uint64_t v65 = (char *)(v7 + 1);
          int v66 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_117;
          }
          int v67 = *v65;
          int v66 = v66 + (v67 << 7) - 128;
          if (v67 < 0)
          {
            uint64_t v98 = sub_188C0D0((uint64_t)v7, v66);
            *(void *)int v106 = v98;
            *(_DWORD *)(a1 + 260) = v99;
            if (!v98) {
              goto LABEL_194;
            }
          }
          else
          {
            uint64_t v65 = (char *)(v7 + 2);
LABEL_117:
            *(void *)int v106 = v65;
            *(_DWORD *)(a1 + 260) = v66;
          }
          goto LABEL_185;
        case 0x19u:
          if (v8 != 202) {
            goto LABEL_177;
          }
          int v68 = v7 - 2;
          while (1)
          {
            uint64_t v69 = v68 + 2;
            *(void *)int v106 = v68 + 2;
            uint64_t v70 = *(_DWORD **)(a1 + 112);
            if (v70 && (uint64_t v71 = *(int *)(a1 + 104), (int)v71 < *v70))
            {
              *(_DWORD *)(a1 + 104) = v71 + 1;
              uint64_t v72 = *(void *)&v70[2 * v71 + 2];
            }
            else
            {
              int v73 = sub_14FB990(*(void *)(a1 + 96));
              uint64_t v72 = sub_188CDC8(a1 + 96, (uint64_t)v73);
              uint64_t v69 = *(unsigned __int8 **)v106;
            }
            int v68 = (unsigned __int8 *)sub_14F0AB4(a3, v72, v69);
            *(void *)int v106 = v68;
            if (!v68) {
              goto LABEL_194;
            }
            if (*(void *)a3 <= (unint64_t)v68 || *(_WORD *)v68 != 458) {
              goto LABEL_185;
            }
          }
        case 0x1Au:
          if (v8 != 210) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 0x80u;
          uint64_t v74 = *(void **)(a1 + 192);
          if (!v74)
          {
            uint64_t v75 = (void *)(*v104 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v104) {
              uint64_t v75 = (void *)*v75;
            }
            uint64_t v74 = sub_15C1E94((uint64_t)v75);
            *(void *)(a1 + 192) = v74;
            uint64_t v7 = *(unsigned __int8 **)v106;
          }
          uint64_t v29 = (uint64_t)sub_11EA9CC(a3, (uint64_t)v74, v7);
          goto LABEL_184;
        case 0x1Bu:
          if (v8 != 218) {
            goto LABEL_177;
          }
          *(_DWORD *)(a1 + 16) |= 0x100u;
          uint64_t v76 = *(void *)(a1 + 200);
          if (!v76)
          {
            uint64_t v77 = (void *)(*v104 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v104) {
              uint64_t v77 = (void *)*v77;
            }
            uint64_t v76 = sub_14FBA14((uint64_t)v77);
            *(void *)(a1 + 200) = v76;
            uint64_t v7 = *(unsigned __int8 **)v106;
          }
          uint64_t v29 = (uint64_t)sub_14F0C64(a3, v76, v7);
          goto LABEL_184;
        case 0x1Cu:
          if (v8 == 224)
          {
            unint64_t v78 = (unint64_t)(v7 - 2);
            while (1)
            {
              *(void *)int v106 = v78 + 2;
              uint64_t v79 = *(unsigned __int8 *)(v78 + 2);
              if (*(char *)(v78 + 2) < 0)
              {
                int v80 = v79 + (*(unsigned __int8 *)(v78 + 3) << 7);
                uint64_t v79 = (v80 - 128);
                if (*(char *)(v78 + 3) < 0)
                {
                  unint64_t v78 = sub_188C138(v78 + 2, (v80 - 128));
                  uint64_t v79 = v81;
                }
                else
                {
                  v78 += 4;
                }
              }
              else
              {
                v78 += 3;
              }
              *(void *)int v106 = v78;
              uint64_t v82 = *(unsigned int *)(a1 + 120);
              if (v82 == *(_DWORD *)(a1 + 124))
              {
                int v83 = v82 + 1;
                sub_188CA54((unsigned int *)(a1 + 120), v82 + 1);
                *(void *)(*(void *)(a1 + 128) + 8 * v82) = v79;
                unint64_t v78 = *(void *)v106;
              }
              else
              {
                *(void *)(*(void *)(a1 + 128) + 8 * v82) = v79;
                int v83 = v82 + 1;
              }
              *(_DWORD *)(a1 + 120) = v83;
              if (!v78) {
                goto LABEL_194;
              }
              if (*(void *)a3 <= v78 || *(_WORD *)v78 != 480) {
                goto LABEL_185;
              }
            }
          }
          if (v8 == 226)
          {
            uint64_t v29 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 120), v7, (uint64_t)a3);
          }
          else
          {
LABEL_177:
            if (v8) {
              BOOL v101 = (v8 & 7) == 4;
            }
            else {
              BOOL v101 = 1;
            }
            if (v101)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_3;
              }
LABEL_194:
              *(void *)int v106 = 0;
              goto LABEL_3;
            }
            if (*v104)
            {
              uint64_t v102 = (std::string *)((*v104 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v102 = (std::string *)sub_188DBD8(v104);
              uint64_t v7 = *(unsigned __int8 **)v106;
            }
            uint64_t v29 = (uint64_t)sub_1885AC0(v8, v102, (char *)v7, a3);
          }
LABEL_184:
          *(void *)int v106 = v29;
          if (!v29) {
            goto LABEL_194;
          }
LABEL_185:
          if (sub_11947B8((uint64_t)a3, (char **)v106, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 0x1Du:
          if (v8 != 232) {
            goto LABEL_177;
          }
          int v84 = (char *)(v7 + 1);
          unint64_t v85 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_158;
          }
          int v86 = *v84;
          int v87 = v85 + (v86 << 7);
          unint64_t v85 = (v87 - 128);
          if (v86 < 0)
          {
            *(void *)int v106 = sub_188C138((uint64_t)v7, (v87 - 128));
            if (!*(void *)v106) {
              goto LABEL_194;
            }
            unint64_t v85 = v100;
          }
          else
          {
            int v84 = (char *)(v7 + 2);
LABEL_158:
            *(void *)int v106 = v84;
          }
          if (v85 > 2)
          {
            if (*v104) {
              int v103 = (std::string *)((*v104 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v103 = (std::string *)sub_188DBD8(v104);
            }
            sub_188C020(29, v85, v103);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x40000u;
            *(_DWORD *)(a1 + 264) = v85;
          }
          goto LABEL_185;
        default:
          goto LABEL_177;
      }
    }
  }
  int v105 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v105;
  return *(void *)v106;
}

char *sub_14F0A24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12429DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14F0AB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F25B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F0B44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1794054(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F0BD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_124A9B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F0C64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F29E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F0CF4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 208);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 216);
    char *v4 = 41;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 0x800) == 0)
    {
LABEL_10:
      if ((v6 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 224);
  char *v4 = 49;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 1) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0) {
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v12 = *(int *)(a1 + 232);
  char *v4 = 72;
  v4[1] = v12;
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    unint64_t v13 = v12 >> 7;
    v4[2] = v12 >> 7;
    v4 += 3;
    if (v12 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v14 = v13 >> 14;
        v13 >>= 7;
        *v4++ = v13;
      }
      while (v14);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_26:
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 236);
    char *v4 = 80;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 152);
    char *v4 = 90;
    unsigned int v19 = *(_DWORD *)(v18 + 24);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_1245A88(v18, (unint64_t)v20, a3);
    if ((v6 & 0x4000) == 0)
    {
LABEL_35:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_36;
      }
      goto LABEL_47;
    }
  }
  else if ((v6 & 0x4000) == 0)
  {
    goto LABEL_35;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 240);
  char *v4 = 105;
  *(void *)(v4 + 1) = v21;
  v4 += 9;
  if ((v6 & 0x10000) == 0)
  {
LABEL_36:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 256);
  char *v4 = 112;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 0x8000) != 0)
  {
LABEL_50:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(void *)(a1 + 248);
    char *v4 = 120;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_56:
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v26 = *(_DWORD *)(a1 + 32);
  if (v26)
  {
    for (int i = 0; i != v26; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 394;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      v4[2] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, v4 + 2);
      }
      else {
        uint64_t v30 = v4 + 3;
      }
      uint64_t v4 = sub_12D14F8(v28, (unint64_t)v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 56);
  if (v31)
  {
    for (int j = 0; j != v31; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[2] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, v4 + 2);
      }
      else {
        uint64_t v35 = v4 + 3;
      }
      uint64_t v4 = sub_14F2754(v33, v35, a3);
    }
  }
  uint64_t v36 = *(unsigned int *)(a1 + 80);
  if ((int)v36 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 8 * v36;
    do
    {
      unint64_t v39 = *(void **)(*(void *)(a1 + 88) + v37 + 8);
      if (*((char *)v39 + 23) < 0)
      {
        int64_t v40 = v39[1];
        if (v40 > 127) {
          goto LABEL_85;
        }
      }
      else
      {
        int64_t v40 = *((unsigned __int8 *)v39 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v40)
      {
        *(_WORD *)uint64_t v4 = 410;
        v4[2] = v40;
        if (*((char *)v39 + 23) < 0) {
          unint64_t v39 = (void *)*v39;
        }
        int v41 = v4 + 3;
        memcpy(v41, v39, v40);
        uint64_t v4 = &v41[v40];
        goto LABEL_83;
      }
LABEL_85:
      uint64_t v4 = (char *)sub_188A868(a3, 19, (uint64_t)v39, v4);
LABEL_83:
      v37 += 8;
    }
    while (v38 != v37);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v42 = *(void *)(a1 + 160);
    *(_WORD *)uint64_t v4 = 418;
    unsigned int v43 = *(_DWORD *)(v42 + 44);
    v4[2] = v43;
    if (v43 > 0x7F) {
      uint64_t v44 = sub_188A9CC(v43, v4 + 2);
    }
    else {
      uint64_t v44 = v4 + 3;
    }
    uint64_t v4 = sub_1794360(v42, v44, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_88:
      if ((v6 & 0x20) == 0) {
        goto LABEL_89;
      }
      goto LABEL_104;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_88;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v45 = *(void *)(a1 + 168);
  *(_WORD *)uint64_t v4 = 426;
  unsigned int v46 = *(_DWORD *)(v45 + 20);
  v4[2] = v46;
  if (v46 > 0x7F) {
    uint64_t v47 = sub_188A9CC(v46, v4 + 2);
  }
  else {
    uint64_t v47 = v4 + 3;
  }
  uint64_t v4 = sub_12D14F8(v45, (unint64_t)v47, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_89:
    if ((v6 & 0x40) == 0) {
      goto LABEL_90;
    }
    goto LABEL_110;
  }
LABEL_104:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v48 = *(void *)(a1 + 176);
  *(_WORD *)uint64_t v4 = 434;
  unsigned int v49 = *(_DWORD *)(v48 + 20);
  v4[2] = v49;
  if (v49 > 0x7F) {
    uint64_t v50 = sub_188A9CC(v49, v4 + 2);
  }
  else {
    uint64_t v50 = v4 + 3;
  }
  uint64_t v4 = sub_12D14F8(v48, (unint64_t)v50, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_90:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_122;
    }
    goto LABEL_116;
  }
LABEL_110:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v51 = *(void *)(a1 + 184);
  *(_WORD *)uint64_t v4 = 442;
  unsigned int v52 = *(_DWORD *)(v51 + 20);
  v4[2] = v52;
  if (v52 > 0x7F) {
    int v53 = sub_188A9CC(v52, v4 + 2);
  }
  else {
    int v53 = v4 + 3;
  }
  uint64_t v4 = (char *)sub_124AB64(v51, (unint64_t)v53, a3);
  if ((v6 & 0x20000) != 0)
  {
LABEL_116:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v54 = *(_DWORD *)(a1 + 260);
    *(_WORD *)uint64_t v4 = 448;
    v4[2] = v54;
    if (v54 > 0x7F)
    {
      v4[2] = v54 | 0x80;
      unsigned int v55 = v54 >> 7;
      v4[3] = v54 >> 7;
      v4 += 4;
      if (v54 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v56 = v55 >> 14;
          v55 >>= 7;
          *v4++ = v55;
        }
        while (v56);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_122:
  int v57 = *(_DWORD *)(a1 + 104);
  if (v57)
  {
    for (int k = 0; k != v57; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v59 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 458;
      unsigned int v60 = *(_DWORD *)(v59 + 20);
      v4[2] = v60;
      if (v60 > 0x7F) {
        int v61 = sub_188A9CC(v60, v4 + 2);
      }
      else {
        int v61 = v4 + 3;
      }
      uint64_t v4 = sub_14F2754(v59, v61, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v62 = *(void *)(a1 + 192);
    *(_WORD *)uint64_t v4 = 466;
    unsigned int v63 = *(_DWORD *)(v62 + 20);
    v4[2] = v63;
    if (v63 > 0x7F) {
      uint64_t v64 = sub_188A9CC(v63, v4 + 2);
    }
    else {
      uint64_t v64 = v4 + 3;
    }
    uint64_t v4 = sub_15B7AE4(v62, v64, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v65 = *(void *)(a1 + 200);
    *(_WORD *)uint64_t v4 = 474;
    unsigned int v66 = *(_DWORD *)(v65 + 64);
    v4[2] = v66;
    if (v66 > 0x7F) {
      int v67 = sub_188A9CC(v66, v4 + 2);
    }
    else {
      int v67 = v4 + 3;
    }
    uint64_t v4 = sub_14F2D50(v65, v67, a3);
  }
  uint64_t v68 = *(unsigned int *)(a1 + 120);
  if ((int)v68 >= 1)
  {
    for (uint64_t m = 0; m != v68; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v70 = *(void *)(*(void *)(a1 + 128) + 8 * m);
      *(_WORD *)uint64_t v4 = 480;
      v4[2] = v70;
      if (v70 > 0x7F)
      {
        v4[2] = v70 | 0x80;
        unint64_t v71 = v70 >> 7;
        v4[3] = v70 >> 7;
        v4 += 4;
        if (v70 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v72 = v71 >> 14;
            v71 >>= 7;
            *v4++ = v71;
          }
          while (v72);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v73 = *(int *)(a1 + 264);
    *(_WORD *)uint64_t v4 = 488;
    v4[2] = v73;
    if (v73 > 0x7F)
    {
      v4[2] = v73 | 0x80;
      unint64_t v74 = v73 >> 7;
      v4[3] = v73 >> 7;
      v4 += 4;
      if (v73 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v75 = v74 >> 14;
          v74 >>= 7;
          *v4++ = v74;
        }
        while (v75);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v76 = *(void *)(a1 + 8);
  if ((v76 & 1) == 0) {
    return v4;
  }
  unint64_t v78 = v76 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v78 + 31) < 0)
  {
    uint64_t v79 = *(void **)(v78 + 8);
    uint64_t v80 = *(void *)(v78 + 16);
  }
  else
  {
    uint64_t v79 = (void *)(v78 + 8);
    LODWORD(v80) = *(unsigned __int8 *)(v78 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v80)
  {
    uint64_t v81 = (int)v80;
    memcpy(v4, v79, (int)v80);
    v4 += v81;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v79, v80, v4);
}

uint64_t sub_14F1780(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 17) & 2) != 0) {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 208) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v2 = 0;
  }
  uint64_t v3 = *(int *)(a1 + 32);
  unint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_12D1868(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 56);
  unint64_t v11 = v4 + 2 * v10;
  uint64_t v12 = *(void *)(a1 + 64);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_14F2858(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 80);
  unint64_t v18 = v11 + 2 * v17;
  if ((int)v17 >= 1)
  {
    unsigned int v19 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      v18 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      --v17;
    }
    while (v17);
  }
  uint64_t v23 = *(int *)(a1 + 104);
  unint64_t v24 = v18 + 2 * v23;
  uint64_t v25 = *(void *)(a1 + 112);
  if (v25) {
    int v26 = (uint64_t *)(v25 + 8);
  }
  else {
    int v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_14F2858(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = sub_188D5A8((unsigned int *)(a1 + 120)) + v24 + 2 * *(unsigned int *)(a1 + 120);
  int v31 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v31) {
    goto LABEL_37;
  }
  if (v31)
  {
    unint64_t v46 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
    uint64_t v48 = *(void *)(v46 + 8);
    if ((v47 & 0x80u) == 0) {
      uint64_t v48 = v47;
    }
    v30 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v31 & 2) == 0)
    {
LABEL_30:
      if ((v31 & 4) == 0) {
        goto LABEL_31;
      }
      goto LABEL_77;
    }
  }
  else if ((v31 & 2) == 0)
  {
    goto LABEL_30;
  }
  unint64_t v49 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
  uint64_t v51 = *(void *)(v49 + 8);
  if ((v50 & 0x80u) == 0) {
    uint64_t v51 = v50;
  }
  v30 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v31 & 4) == 0)
  {
LABEL_31:
    if ((v31 & 8) == 0) {
      goto LABEL_32;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t v52 = sub_1247F74(*(void *)(a1 + 152));
  v30 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v31 & 8) == 0)
  {
LABEL_32:
    if ((v31 & 0x10) == 0) {
      goto LABEL_33;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v53 = sub_1794620(*(void *)(a1 + 160));
  v30 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v31 & 0x10) == 0)
  {
LABEL_33:
    if ((v31 & 0x20) == 0) {
      goto LABEL_34;
    }
LABEL_80:
    uint64_t v55 = sub_12D1868(*(void *)(a1 + 176));
    v30 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v31 & 0x40) == 0)
    {
LABEL_35:
      if ((v31 & 0x80) == 0) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
    goto LABEL_81;
  }
LABEL_79:
  uint64_t v54 = sub_12D1868(*(void *)(a1 + 168));
  v30 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v31 & 0x20) != 0) {
    goto LABEL_80;
  }
LABEL_34:
  if ((v31 & 0x40) == 0) {
    goto LABEL_35;
  }
LABEL_81:
  uint64_t v56 = sub_124ACC4(*(void *)(a1 + 184));
  v30 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v31 & 0x80) != 0)
  {
LABEL_36:
    uint64_t v32 = sub_15B806C(*(void *)(a1 + 192));
    v30 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_37:
  if ((v31 & 0x100) != 0)
  {
    uint64_t v33 = sub_14F2F18(*(void *)(a1 + 200));
    v30 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  if ((v31 & 0xFC00) != 0)
  {
    uint64_t v34 = v30 + 9;
    if ((v31 & 0x400) == 0) {
      uint64_t v34 = v30;
    }
    if ((v31 & 0x800) != 0) {
      v34 += 9;
    }
    if ((v31 & 0x1000) != 0)
    {
      int v35 = *(_DWORD *)(a1 + 232);
      uint64_t v36 = ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v35 >= 0) {
        uint64_t v37 = v36;
      }
      else {
        uint64_t v37 = 11;
      }
      v34 += v37;
    }
    if ((v31 & 0x2000) != 0)
    {
      int v38 = *(_DWORD *)(a1 + 236);
      uint64_t v39 = ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v38 >= 0) {
        uint64_t v40 = v39;
      }
      else {
        uint64_t v40 = 11;
      }
      v34 += v40;
    }
    if ((v31 & 0x4000) != 0) {
      uint64_t v30 = v34 + 9;
    }
    else {
      uint64_t v30 = v34;
    }
    if ((v31 & 0x8000) != 0) {
      v30 += ((9 * (__clz(*(void *)(a1 + 248) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  if ((v31 & 0x70000) != 0)
  {
    if ((v31 & 0x10000) != 0) {
      v30 += 2;
    }
    if ((v31 & 0x20000) != 0) {
      v30 += ((9 * (__clz(*(_DWORD *)(a1 + 260) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v31 & 0x40000) != 0)
    {
      int v41 = *(_DWORD *)(a1 + 264);
      uint64_t v42 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v41 >= 0) {
        uint64_t v43 = v42;
      }
      else {
        uint64_t v43 = 12;
      }
      v30 += v43;
    }
  }
  uint64_t v44 = *(void *)(a1 + 8);
  if (v44)
  {
    unint64_t v57 = v44 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v57 + 31) < 0) {
      uint64_t v58 = *(void *)(v57 + 16);
    }
    else {
      uint64_t v58 = *(unsigned __int8 *)(v57 + 31);
    }
    v30 += v58;
  }
  *(_DWORD *)(a1 + 20) = v30;
  return v30;
}

void sub_14F1C94(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124E958((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1515300((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    unint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1515300((std::string *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 120);
  if (v24)
  {
    uint64_t v25 = *(int *)(a1 + 120);
    sub_188CA54((unsigned int *)(a1 + 120), v25 + v24);
    uint64_t v26 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v26 + 8 * v25), *(const void **)(a2 + 128), 8 * *(int *)(a2 + 120));
  }
  int v27 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v27) {
    goto LABEL_80;
  }
  if (v27)
  {
    uint64_t v28 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v29 = *(void *)(a1 + 8);
    uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      uint64_t v30 = (uint64_t *)*v30;
    }
    sub_1881DF4((std::string **)(a1 + 136), v28, v30);
    if ((v27 & 2) == 0)
    {
LABEL_18:
      if ((v27 & 4) == 0) {
        goto LABEL_19;
      }
      goto LABEL_27;
    }
  }
  else if ((v27 & 2) == 0)
  {
    goto LABEL_18;
  }
  int v31 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v32 = *(void *)(a1 + 8);
  uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
  if (v32) {
    uint64_t v33 = (uint64_t *)*v33;
  }
  sub_1881DF4((std::string **)(a1 + 144), v31, v33);
  if ((v27 & 4) == 0)
  {
LABEL_19:
    if ((v27 & 8) == 0) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
LABEL_27:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v34 = *(void *)(a1 + 152);
  if (!v34)
  {
    uint64_t v35 = *(void *)(a1 + 8);
    uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      uint64_t v36 = (void *)*v36;
    }
    sub_124C100((uint64_t)v36);
    *(void *)(a1 + 152) = v34;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v37 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v37 = &off_252EB50;
  }
  sub_1249238(v34, (uint64_t)v37);
  if ((v27 & 8) != 0)
  {
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 8u;
    int v38 = *(void **)(a1 + 160);
    if (!v38)
    {
      uint64_t v39 = *(void *)(a1 + 8);
      uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
      if (v39) {
        uint64_t v40 = (void *)*v40;
      }
      int v38 = sub_1830494((uint64_t)v40);
      *(void *)(a1 + 160) = v38;
    }
    if (*(void *)(a2 + 160)) {
      int v41 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      int v41 = &off_25498C0;
    }
    sub_179474C((uint64_t)v38, (uint64_t)v41);
  }
LABEL_43:
  if ((v27 & 0x10) == 0)
  {
    if ((v27 & 0x20) == 0) {
      goto LABEL_45;
    }
LABEL_56:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unint64_t v46 = *(std::string **)(a1 + 176);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        uint64_t v48 = (void *)*v48;
      }
      unint64_t v46 = (std::string *)sub_12D2834((uint64_t)v48);
      *(void *)(a1 + 176) = v46;
    }
    if (*(void *)(a2 + 176)) {
      unint64_t v49 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      unint64_t v49 = &off_2531570;
    }
    sub_12D1AFC(v46, (uint64_t)v49);
    if ((v27 & 0x40) == 0)
    {
LABEL_46:
      if ((v27 & 0x80) == 0) {
        goto LABEL_80;
      }
      goto LABEL_72;
    }
    goto LABEL_64;
  }
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v42 = *(std::string **)(a1 + 168);
  if (!v42)
  {
    uint64_t v43 = *(void *)(a1 + 8);
    uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      uint64_t v44 = (void *)*v44;
    }
    uint64_t v42 = (std::string *)sub_12D2834((uint64_t)v44);
    *(void *)(a1 + 168) = v42;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v45 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v45 = &off_2531570;
  }
  sub_12D1AFC(v42, (uint64_t)v45);
  if ((v27 & 0x20) != 0) {
    goto LABEL_56;
  }
LABEL_45:
  if ((v27 & 0x40) == 0) {
    goto LABEL_46;
  }
LABEL_64:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v50 = *(std::string **)(a1 + 184);
  if (!v50)
  {
    uint64_t v51 = *(void *)(a1 + 8);
    uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
    if (v51) {
      uint64_t v52 = (void *)*v52;
    }
    uint64_t v50 = (std::string *)sub_124C160((uint64_t)v52);
    *(void *)(a1 + 184) = v50;
  }
  if (*(void *)(a2 + 184)) {
    uint64_t v53 = *(void *(****)(void *))(a2 + 184);
  }
  else {
    uint64_t v53 = &off_252EFB8;
  }
  sub_124AD40(v50, (uint64_t)v53);
  if ((v27 & 0x80) != 0)
  {
LABEL_72:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v54 = *(std::string **)(a1 + 192);
    if (!v54)
    {
      uint64_t v55 = *(void *)(a1 + 8);
      uint64_t v56 = (void *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
      if (v55) {
        uint64_t v56 = (void *)*v56;
      }
      uint64_t v54 = (std::string *)sub_15C1E94((uint64_t)v56);
      *(void *)(a1 + 192) = v54;
    }
    if (*(void *)(a2 + 192)) {
      unint64_t v57 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      unint64_t v57 = &off_253F3D0;
    }
    sub_15B86B8(v54, (uint64_t)v57);
  }
LABEL_80:
  if ((v27 & 0xFF00) == 0) {
    goto LABEL_91;
  }
  if ((v27 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v59 = *(std::string **)(a1 + 200);
    if (!v59)
    {
      uint64_t v60 = *(void *)(a1 + 8);
      int v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
      if (v60) {
        int v61 = (void *)*v61;
      }
      uint64_t v59 = (std::string *)sub_14FBA14((uint64_t)v61);
      *(void *)(a1 + 200) = v59;
    }
    if (*(void *)(a2 + 200)) {
      uint64_t v62 = *(void *(****)(void *))(a2 + 200);
    }
    else {
      uint64_t v62 = &off_253BBA0;
    }
    sub_14F2240(v59, (uint64_t)v62);
    if ((v27 & 0x200) == 0)
    {
LABEL_83:
      if ((v27 & 0x400) == 0) {
        goto LABEL_84;
      }
      goto LABEL_110;
    }
  }
  else if ((v27 & 0x200) == 0)
  {
    goto LABEL_83;
  }
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  if ((v27 & 0x400) == 0)
  {
LABEL_84:
    if ((v27 & 0x800) == 0) {
      goto LABEL_85;
    }
    goto LABEL_111;
  }
LABEL_110:
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  if ((v27 & 0x800) == 0)
  {
LABEL_85:
    if ((v27 & 0x1000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_112;
  }
LABEL_111:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  if ((v27 & 0x1000) == 0)
  {
LABEL_86:
    if ((v27 & 0x2000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_113;
  }
LABEL_112:
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  if ((v27 & 0x2000) == 0)
  {
LABEL_87:
    if ((v27 & 0x4000) == 0) {
      goto LABEL_88;
    }
LABEL_114:
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    if ((v27 & 0x8000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_89;
  }
LABEL_113:
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  if ((v27 & 0x4000) != 0) {
    goto LABEL_114;
  }
LABEL_88:
  if ((v27 & 0x8000) != 0) {
LABEL_89:
  }
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
LABEL_90:
  *(_DWORD *)(a1 + 16) |= v27;
LABEL_91:
  if ((v27 & 0x70000) == 0) {
    goto LABEL_97;
  }
  if ((v27 & 0x10000) == 0)
  {
    if ((v27 & 0x20000) == 0) {
      goto LABEL_94;
    }
LABEL_117:
    *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
    if ((v27 & 0x40000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_95;
  }
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  if ((v27 & 0x20000) != 0) {
    goto LABEL_117;
  }
LABEL_94:
  if ((v27 & 0x40000) != 0) {
LABEL_95:
  }
    *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
LABEL_96:
  *(_DWORD *)(a1 + 16) |= v27;
LABEL_97:
  uint64_t v58 = *(void *)(a2 + 8);
  if (v58)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v58 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_14F2240(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_151537C((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_1515408((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    unint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14F2374(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 17) & 2) == 0) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_12D1D80(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a1 + 64) + 8 * v5--);
    if ((~*(_DWORD *)(v6 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 104);
  while ((int)v7 >= 1)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 112) + 8 * v7--);
    if ((~*(_DWORD *)(v8 + 16) & 3) != 0) {
      return 0;
    }
  }
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 4) != 0)
  {
    uint64_t result = sub_124A7D0(*(void *)(a1 + 152));
    if (!result) {
      return result;
    }
    int v10 = *(_DWORD *)(a1 + 16);
  }
  if ((v10 & 8) != 0)
  {
    uint64_t result = sub_1794804(*(void *)(a1 + 160));
    if (!result) {
      return result;
    }
    int v10 = *(_DWORD *)(a1 + 16);
  }
  if ((v10 & 0x10) != 0)
  {
    uint64_t result = sub_12D1D80(*(void *)(a1 + 168));
    if (!result) {
      return result;
    }
    int v10 = *(_DWORD *)(a1 + 16);
  }
  if ((v10 & 0x20) != 0)
  {
    uint64_t result = sub_12D1D80(*(void *)(a1 + 176));
    if (!result) {
      return result;
    }
    int v10 = *(_DWORD *)(a1 + 16);
  }
  if ((v10 & 0x80) == 0) {
    return 1;
  }
  uint64_t result = sub_15B8CAC(*(void *)(a1 + 192));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14F2488@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocalMatch");
}

uint64_t sub_14F2498(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14F2538(uint64_t a1)
{
  sub_14F2498(a1);

  operator delete();
}

uint64_t sub_14F2570(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14F25B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)int v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)int v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    *(void *)int v19 = v7 + 8;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v19;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)int v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_14F2754(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14F2858(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_146A748(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 10;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_14F2900(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_14F2914@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.NamedFeature");
}

void *sub_14F2924(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1514DFC(a1 + 5);
  sub_1514D7C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14F29B0(void *a1)
{
  sub_14F2924(a1);

  operator delete();
}

char *sub_14F29E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              int v19 = sub_14FBBE8(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_14F2CC0(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_14FBB44(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = (char *)sub_14F2C30(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

uint64_t sub_14F2C30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F3AC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14F2CC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F4244(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F2D50(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14F3D58(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_14F43EC(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_14F2F18(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14F3EC0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14F44D8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

uint64_t sub_14F3018()
{
  return 1;
}

void *sub_14F3020@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.RecallMeta");
}

uint64_t sub_14F3030(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14F3110(uint64_t a1)
{
  sub_14F3030(a1);

  operator delete();
}

uint64_t sub_14F3148(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14F3238(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v22 + 1);
    unsigned int v9 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v22, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v9 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v9 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v9 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
LABEL_25:
        uint64_t v18 = (std::string *)sub_1880F84(v14, v13);
        int v19 = (void *)sub_188C244(v18, *(char **)v22, (uint64_t)a3);
        goto LABEL_26;
      case 5u:
        if (v9 != 45) {
          goto LABEL_31;
        }
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 56) = *(_DWORD *)v8;
        *(void *)int v22 = v8 + 4;
        goto LABEL_27;
      default:
LABEL_31:
        if (v9) {
          BOOL v20 = (v9 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v7)
          {
            uint64_t v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v22;
          }
          int v19 = sub_1885AC0(v9, v21, v8, a3);
LABEL_26:
          *(void *)int v22 = v19;
          if (!v19) {
            goto LABEL_41;
          }
LABEL_27:
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_41:
        }
          *(void *)int v22 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v22;
    }
  }
}

char *sub_14F34C4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  char *v4 = 45;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
LABEL_14:
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14F363C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_20;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v15 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  if ((v1 & 8) != 0)
  {
LABEL_14:
    unint64_t v10 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v1 & 0x10) != 0) {
    uint64_t v3 = v2 + 5;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_20:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v18 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14F37B4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_22:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14F391C()
{
  return 1;
}

void *sub_14F3924@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.TokenMatch.Match");
}

uint64_t sub_14F3934(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1514E7C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14F39E0(uint64_t a1)
{
  sub_14F3934(a1);

  operator delete();
}

uint64_t sub_14F3A18(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14F3148(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_14F3AC8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    std::string::size_type v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)uint64_t v24 = v15 + 1;
      std::string::size_type v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_14FBAB8(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      unint64_t v15 = (char *)sub_14F3CC8(a3, v19, v16);
      *(void *)uint64_t v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    std::string::size_type v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

uint64_t sub_14F3CC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F3238(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F3D58(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_14F34C4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14F3EC0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14F363C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14F3FB8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1515484((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14F40C0()
{
  return 1;
}

void *sub_14F40C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.TokenMatch");
}

uint64_t sub_14F40D8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14F4190(uint64_t a1)
{
  sub_14F40D8(a1);

  operator delete();
}

uint64_t sub_14F41C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14F4244(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        std::string::size_type v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      std::string::size_type v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_14F43EC(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14F44D8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14F45B4()
{
  return 1;
}

void *sub_14F45BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.FilterQueryMatch");
}

void *sub_14F45CC(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1514EFC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14F464C(void *a1)
{
  sub_14F45CC(a1);

  operator delete();
}

uint64_t sub_14F4684(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_159701C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_14F4708(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            sub_15A3904(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = (char *)sub_14F4964(a3, v18, v15);
          uint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      uint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        uint64_t v20 = v7 + 2;
LABEL_34:
        uint64_t v26 = v20;
      }
      if (sub_1596D78(v21))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      else
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_14F4964(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1597540(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14F49F4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        unint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        unint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1597EDC(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_14F4BB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1598504(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_14F4CA0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1515510((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_14F4D8C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15993A0(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_14F4DE4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocalMatchSet.SuggestionEntryList");
}

uint64_t sub_14F4DF4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24BCCC8;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = a2;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = a2;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = &qword_2550250;
  *(void *)(a1 + 312) = &qword_2550250;
  *(void *)(a1 + 320) = &qword_2550250;
  *(void *)(a1 + 328) = &qword_2550250;
  *(void *)(a1 + 336) = &qword_2550250;
  *(void *)(a1 + 344) = &qword_2550250;
  *(void *)(a1 + 352) = &qword_2550250;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  return a1;
}

void sub_14F4ECC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_14F4EFC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14F5000((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_15150FC(a1 + 35);
  sub_1889DE8(a1 + 32);
  sub_1514F7C(a1 + 29);
  sub_151507C(a1 + 26);
  sub_1889DA8((uint64_t)(a1 + 24));
  sub_1514FFC(a1 + 21);
  sub_122BA8C(a1 + 18);
  sub_122BA8C(a1 + 15);
  sub_1889DE8(a1 + 12);
  sub_1514FFC(a1 + 9);
  sub_1514F7C(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_14F5000(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 304) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 304));
  }
  if (*(uint64_t **)(result + 312) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 312));
  }
  if (*(uint64_t **)(result + 320) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 320));
  }
  if (*(uint64_t **)(result + 328) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 328));
  }
  if (*(uint64_t **)(result + 336) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 336));
  }
  if (*(uint64_t **)(result + 344) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 344));
  }
  if (*(uint64_t **)(result + 352) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 352));
  }
  if (*(void *)(result + 360)) {
    sub_1881C6C((void ***)(result + 360));
  }
  if ((uint64_t (***)())result != &off_253BBE8)
  {
    if (*(void *)(result + 368))
    {
      sub_15B9F30();
      operator delete();
    }
    if (*(void *)(result + 376))
    {
      sub_146E3A8();
      operator delete();
    }
    uint64_t v2 = *(void **)(result + 384);
    if (v2)
    {
      sub_14E135C(v2);
      operator delete();
    }
    int v3 = (void *)v1[49];
    if (v3)
    {
      sub_14E135C(v3);
      operator delete();
    }
    uint64_t v4 = v1[50];
    if (v4)
    {
      sub_12D2300(v4);
      operator delete();
    }
    if (v1[51])
    {
      sub_15A51CC();
      operator delete();
    }
    uint64_t v5 = (void *)v1[52];
    if (v5)
    {
      sub_14F9098(v5);
      operator delete();
    }
    uint64_t v6 = v1[53];
    if (v6)
    {
      sub_14A2F24(v6);
      operator delete();
    }
    uint64_t result = v1[54];
    if (result)
    {
      sub_12C55C4((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_14F5210(void *a1)
{
  sub_14F4EFC(a1);

  operator delete();
}

uint64_t sub_14F5248(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14EFC18(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_14F5248(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  sub_188CC00(a1 + 96);
  uint64_t v8 = *(unsigned int *)(a1 + 128);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_149FADC(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 152);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_149FADC(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 176);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_14F5248(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 176) = 0;
  }
  *(_DWORD *)(a1 + 192) = 0;
  uint64_t v17 = *(unsigned int *)(a1 + 216);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_14F4684(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 216) = 0;
  }
  uint64_t v20 = *(unsigned int *)(a1 + 240);
  if ((int)v20 >= 1)
  {
    unint64_t v21 = (uint64_t *)(*(void *)(a1 + 248) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_14EFC18(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 240) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 256);
  uint64_t v24 = *(unsigned int *)(a1 + 288);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a1 + 296) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_14A4310(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 288) = 0;
  }
  int v27 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v27) {
    goto LABEL_72;
  }
  if (v27)
  {
    unint64_t v28 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v28 + 23) < 0)
    {
      **(unsigned char **)unint64_t v28 = 0;
      *(void *)(v28 + 8) = 0;
      if ((v27 & 2) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v28 = 0;
      *(unsigned char *)(v28 + 23) = 0;
      if ((v27 & 2) != 0) {
        goto LABEL_47;
      }
    }
LABEL_36:
    if ((v27 & 4) == 0) {
      goto LABEL_37;
    }
LABEL_51:
    unint64_t v30 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v30 + 23) < 0)
    {
      **(unsigned char **)unint64_t v30 = 0;
      *(void *)(v30 + 8) = 0;
      if ((v27 & 8) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v30 = 0;
      *(unsigned char *)(v30 + 23) = 0;
      if ((v27 & 8) != 0) {
        goto LABEL_55;
      }
    }
LABEL_38:
    if ((v27 & 0x10) == 0) {
      goto LABEL_39;
    }
LABEL_59:
    unint64_t v32 = *(void *)(a1 + 336) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v32 + 23) < 0)
    {
      **(unsigned char **)unint64_t v32 = 0;
      *(void *)(v32 + 8) = 0;
      if ((v27 & 0x20) != 0) {
        goto LABEL_63;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v32 = 0;
      *(unsigned char *)(v32 + 23) = 0;
      if ((v27 & 0x20) != 0) {
        goto LABEL_63;
      }
    }
LABEL_40:
    if ((v27 & 0x40) == 0) {
      goto LABEL_41;
    }
    goto LABEL_67;
  }
  if ((v27 & 2) == 0) {
    goto LABEL_36;
  }
LABEL_47:
  unint64_t v29 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v29 + 23) < 0)
  {
    **(unsigned char **)unint64_t v29 = 0;
    *(void *)(v29 + 8) = 0;
    if ((v27 & 4) != 0) {
      goto LABEL_51;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v29 = 0;
    *(unsigned char *)(v29 + 23) = 0;
    if ((v27 & 4) != 0) {
      goto LABEL_51;
    }
  }
LABEL_37:
  if ((v27 & 8) == 0) {
    goto LABEL_38;
  }
LABEL_55:
  unint64_t v31 = *(void *)(a1 + 328) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v31 + 23) < 0)
  {
    **(unsigned char **)unint64_t v31 = 0;
    *(void *)(v31 + 8) = 0;
    if ((v27 & 0x10) != 0) {
      goto LABEL_59;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v31 = 0;
    *(unsigned char *)(v31 + 23) = 0;
    if ((v27 & 0x10) != 0) {
      goto LABEL_59;
    }
  }
LABEL_39:
  if ((v27 & 0x20) == 0) {
    goto LABEL_40;
  }
LABEL_63:
  unint64_t v33 = *(void *)(a1 + 344) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v33 + 23) < 0)
  {
    **(unsigned char **)unint64_t v33 = 0;
    *(void *)(v33 + 8) = 0;
    if ((v27 & 0x40) != 0) {
      goto LABEL_67;
    }
LABEL_41:
    if ((v27 & 0x80) == 0) {
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  *(unsigned char *)unint64_t v33 = 0;
  *(unsigned char *)(v33 + 23) = 0;
  if ((v27 & 0x40) == 0) {
    goto LABEL_41;
  }
LABEL_67:
  unint64_t v34 = *(void *)(a1 + 352) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v34 + 23) < 0)
  {
    **(unsigned char **)unint64_t v34 = 0;
    *(void *)(v34 + 8) = 0;
    if ((v27 & 0x80) == 0) {
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  *(unsigned char *)unint64_t v34 = 0;
  *(unsigned char *)(v34 + 23) = 0;
  if ((v27 & 0x80) != 0) {
LABEL_71:
  }
    uint64_t result = (uint64_t)sub_1882020((std::string *)(a1 + 360), &off_253BEB0);
LABEL_72:
  if ((v27 & 0xFF00) == 0) {
    goto LABEL_82;
  }
  if ((v27 & 0x100) != 0)
  {
    uint64_t result = sub_15B9F6C(*(void *)(a1 + 368));
    if ((v27 & 0x200) == 0)
    {
LABEL_75:
      if ((v27 & 0x400) == 0) {
        goto LABEL_76;
      }
      goto LABEL_92;
    }
  }
  else if ((v27 & 0x200) == 0)
  {
    goto LABEL_75;
  }
  uint64_t result = sub_13F04AC(*(void *)(a1 + 376));
  if ((v27 & 0x400) == 0)
  {
LABEL_76:
    if ((v27 & 0x800) == 0) {
      goto LABEL_77;
    }
    goto LABEL_93;
  }
LABEL_92:
  uint64_t result = sub_14E1AF0(*(void *)(a1 + 384));
  if ((v27 & 0x800) == 0)
  {
LABEL_77:
    if ((v27 & 0x1000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_94;
  }
LABEL_93:
  uint64_t result = sub_14E1AF0(*(void *)(a1 + 392));
  if ((v27 & 0x1000) == 0)
  {
LABEL_78:
    if ((v27 & 0x2000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t result = sub_12D233C(*(void *)(a1 + 400));
  if ((v27 & 0x2000) == 0)
  {
LABEL_79:
    if ((v27 & 0x4000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t result = sub_1596D84(*(void *)(a1 + 408));
  if ((v27 & 0x4000) == 0)
  {
LABEL_80:
    if ((v27 & 0x8000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_81;
  }
LABEL_96:
  uint64_t result = sub_14F564C(*(void *)(a1 + 416));
  if ((v27 & 0x8000) != 0) {
LABEL_81:
  }
    uint64_t result = (uint64_t)sub_14A2F60(*(unsigned char **)(a1 + 424));
LABEL_82:
  if ((v27 & 0x10000) != 0) {
    uint64_t result = sub_12C5600(*(void *)(a1 + 432));
  }
  if ((v27 & 0xFE0000) != 0)
  {
    *(void *)(a1 + 440) = 0;
    *(void *)(a1 + 448) = 0;
    *(_DWORD *)(a1 + 464) = 0;
    *(void *)(a1 + 456) = 0;
  }
  char v36 = *(unsigned char *)(a1 + 8);
  uint64_t v35 = a1 + 8;
  *(_DWORD *)(v35 + 460) = 0;
  *(_DWORD *)(v35 + 32) = 0;
  if (v36)
  {
    return sub_188B4AC((uint64_t *)v35);
  }
  return result;
}

uint64_t sub_14F564C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14F5674(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v162 = a2;
  if (sub_11947B8((uint64_t)a3, &v162, a3[11].i32[1]))
  {
    int v160 = 0;
LABEL_3:
    uint64_t v5 = v162;
LABEL_4:
    int v6 = v160;
    goto LABEL_5;
  }
  int v160 = 0;
  uint64_t v154 = (uint64_t *)(a1 + 8);
  uint64_t v159 = (uint64_t *)(a1 + 280);
  uint64_t v161 = (uint64_t **)(a1 + 256);
  uint64_t v157 = (uint64_t *)(a1 + 208);
  uint64_t v158 = (uint64_t *)(a1 + 232);
  uint64_t v155 = (uint64_t *)(a1 + 144);
  uint64_t v156 = (uint64_t *)(a1 + 168);
  uint64_t v8 = (uint64_t **)(a1 + 96);
  while (2)
  {
    uint64_t v5 = v162 + 1;
    unsigned int v9 = *v162;
    if (*v162 < 0)
    {
      unsigned int v10 = v9 + (*v5 << 7);
      unsigned int v9 = v10 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v162, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v5 = v162 + 2;
      }
    }
    uint64_t v162 = v5;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_279;
        }
        unint64_t v12 = v5 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v162 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_14FB8A0(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = (unsigned __int8 *)v162;
          }
          unint64_t v12 = (char *)sub_14F67F8(a3, v16, v13);
          uint64_t v162 = v12;
          if (!v12) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_190;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_279;
        }
        uint64_t v18 = v5 + 1;
        uint64_t v19 = *v5;
        v160 |= 0x20000u;
        if ((*v5 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v136 = (char *)sub_188C138((uint64_t)v5, v19);
          uint64_t v162 = v136;
          *(void *)(a1 + 440) = v137;
          if (!v136) {
            goto LABEL_289;
          }
        }
        else
        {
          uint64_t v18 = v5 + 2;
LABEL_26:
          uint64_t v162 = v18;
          *(void *)(a1 + 440) = v19;
        }
        goto LABEL_190;
      case 4u:
        if (v9 != 34) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        unint64_t v21 = *(void **)(a1 + 368);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v154) {
            uint64_t v22 = (void *)*v22;
          }
          unint64_t v21 = sub_15C2014((uint64_t)v22);
          *(void *)(a1 + 368) = v21;
          uint64_t v5 = v162;
        }
        int v23 = sub_11EAA5C(a3, (uint64_t)v21, (unsigned __int8 *)v5);
        goto LABEL_189;
      case 7u:
        if (v9 != 58) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v24 = *(void *)(a1 + 376);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v154) {
            uint64_t v25 = (void *)*v25;
          }
          sub_147937C((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 376) = v26;
          uint64_t v5 = v162;
        }
        int v23 = (char *)sub_1179468(a3, v24, (unsigned __int8 *)v5);
        goto LABEL_189;
      case 8u:
        if (v9 != 66) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v27 = *(void *)(a1 + 384);
        if (v27) {
          goto LABEL_50;
        }
        unint64_t v28 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v154) {
          unint64_t v28 = (void *)*v28;
        }
        sub_14FB7B8((uint64_t)v28);
        uint64_t v27 = v29;
        *(void *)(a1 + 384) = v29;
        goto LABEL_49;
      case 9u:
        if (v9 != 74) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v27 = *(void *)(a1 + 392);
        if (v27) {
          goto LABEL_50;
        }
        unint64_t v30 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v154) {
          unint64_t v30 = (void *)*v30;
        }
        sub_14FB7B8((uint64_t)v30);
        uint64_t v27 = v31;
        *(void *)(a1 + 392) = v31;
LABEL_49:
        uint64_t v5 = v162;
LABEL_50:
        int v23 = sub_14F6888(a3, v27, (unsigned __int8 *)v5);
        goto LABEL_189;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_279;
        }
        unint64_t v32 = v5 - 1;
        while (1)
        {
          uint64_t v162 = v32 + 1;
          unint64_t v33 = *(_DWORD **)(a1 + 88);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 80), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 80) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_14FBD08(*(void *)(a1 + 72));
            uint64_t v35 = sub_188CDC8(a1 + 72, v36);
          }
          unint64_t v32 = (char *)sub_14F6918(a3, v35);
          uint64_t v162 = v32;
          if (!v32) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 82) {
            goto LABEL_190;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_279;
        }
        int v38 = v5 + 1;
        LODWORD(v37) = *v5;
        v160 |= 0x40000u;
        if ((v37 & 0x80) == 0) {
          goto LABEL_65;
        }
        int v39 = *v38;
        uint64_t v37 = v37 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v138 = (char *)sub_188C138((uint64_t)v5, v37);
          uint64_t v162 = v138;
          *(_DWORD *)(a1 + 448) = v139;
          if (!v138) {
            goto LABEL_289;
          }
        }
        else
        {
          int v38 = v5 + 2;
LABEL_65:
          uint64_t v162 = v38;
          *(_DWORD *)(a1 + 448) = v37;
        }
        goto LABEL_190;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_279;
        }
        uint64_t v40 = v5 - 1;
        while (1)
        {
          int v41 = (char *)(v40 + 1);
          uint64_t v162 = (char *)(v40 + 1);
          uint64_t v42 = *(_DWORD **)(a1 + 112);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 104), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 104) = v43 + 1;
            uint64_t v44 = *(std::string **)&v42[2 * v43 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *unint64_t v46 = v45;
            v46[1] = sub_3A6EDC;
            *uint64_t v45 = 0;
            v45[1] = 0;
            v45[2] = 0;
            uint64_t v44 = (std::string *)sub_188CDC8(a1 + 96, (uint64_t)v45);
            int v41 = v162;
          }
          uint64_t v40 = sub_188C244(v44, v41, (uint64_t)a3);
          uint64_t v162 = (char *)v40;
          if (!v40) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 98) {
            goto LABEL_190;
          }
        }
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v47 = *(void *)(a1 + 8);
        uint64_t v48 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
        if (v47) {
          uint64_t v48 = (uint64_t *)*v48;
        }
        unint64_t v49 = (void *)(a1 + 304);
        goto LABEL_187;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_279;
        }
        uint64_t v50 = v5 - 1;
        while (1)
        {
          uint64_t v51 = (unsigned __int8 *)(v50 + 1);
          uint64_t v162 = v50 + 1;
          uint64_t v52 = *(_DWORD **)(a1 + 136);
          if (v52 && (uint64_t v53 = *(int *)(a1 + 128), (int)v53 < *v52))
          {
            *(_DWORD *)(a1 + 128) = v53 + 1;
            uint64_t v54 = *(void *)&v52[2 * v53 + 2];
          }
          else
          {
            uint64_t v55 = sub_14A23B8(*(void *)(a1 + 120));
            uint64_t v54 = sub_188CDC8(a1 + 120, (uint64_t)v55);
            uint64_t v51 = (unsigned __int8 *)v162;
          }
          uint64_t v50 = (char *)sub_11EAAEC(a3, v54, v51);
          uint64_t v162 = v50;
          if (!v50) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v50 || *v50 != 114) {
            goto LABEL_190;
          }
        }
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_279;
        }
        uint64_t v56 = v5 - 1;
        while (1)
        {
          unint64_t v57 = (unsigned __int8 *)(v56 + 1);
          uint64_t v162 = v56 + 1;
          uint64_t v58 = *(_DWORD **)(a1 + 160);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 152), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 152) = v59 + 1;
            uint64_t v60 = *(void *)&v58[2 * v59 + 2];
          }
          else
          {
            int v61 = sub_14A23B8(*v155);
            uint64_t v60 = sub_188CDC8((uint64_t)v155, (uint64_t)v61);
            unint64_t v57 = (unsigned __int8 *)v162;
          }
          uint64_t v56 = (char *)sub_11EAAEC(a3, v60, v57);
          uint64_t v162 = v56;
          if (!v56) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *v56 != 122) {
            goto LABEL_190;
          }
        }
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_279;
        }
        uint64_t v62 = v5 - 2;
        while (1)
        {
          uint64_t v162 = v62 + 2;
          unsigned int v63 = *(_DWORD **)(a1 + 184);
          if (v63 && (uint64_t v64 = *(int *)(a1 + 176), (int)v64 < *v63))
          {
            *(_DWORD *)(a1 + 176) = v64 + 1;
            uint64_t v65 = *(void *)&v63[2 * v64 + 2];
          }
          else
          {
            uint64_t v66 = sub_14FBD08(*v156);
            uint64_t v65 = sub_188CDC8((uint64_t)v156, v66);
          }
          uint64_t v62 = (char *)sub_14F6918(a3, v65);
          uint64_t v162 = v62;
          if (!v62) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *(_WORD *)v62 != 386) {
            goto LABEL_190;
          }
        }
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v67 = *(void *)(a1 + 8);
        uint64_t v48 = (uint64_t *)(v67 & 0xFFFFFFFFFFFFFFFCLL);
        if (v67) {
          uint64_t v48 = (uint64_t *)*v48;
        }
        unint64_t v49 = (void *)(a1 + 312);
        goto LABEL_187;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_279;
        }
        uint64_t v69 = v5 + 1;
        LODWORD(v68) = *v5;
        v160 |= 0x80000u;
        if ((v68 & 0x80) == 0) {
          goto LABEL_120;
        }
        int v70 = *v69;
        uint64_t v68 = v68 + (v70 << 7) - 128;
        if (v70 < 0)
        {
          uint64_t v140 = (char *)sub_188C138((uint64_t)v5, v68);
          uint64_t v162 = v140;
          *(_DWORD *)(a1 + 452) = v141;
          if (!v140) {
            goto LABEL_289;
          }
        }
        else
        {
          uint64_t v69 = v5 + 2;
LABEL_120:
          uint64_t v162 = v69;
          *(_DWORD *)(a1 + 452) = v68;
        }
        goto LABEL_190;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_279;
        }
        unint64_t v71 = v5 + 1;
        uint64_t v72 = *v5;
        v160 |= 0x100000u;
        if ((*v5 & 0x80000000) == 0) {
          goto LABEL_125;
        }
        int v73 = *v71;
        uint64_t v72 = v72 + (v73 << 7) - 128;
        if (v73 < 0)
        {
          uint64_t v142 = (char *)sub_188C138((uint64_t)v5, v72);
          uint64_t v162 = v142;
          *(unsigned char *)(a1 + 456) = v143 != 0;
          if (!v142) {
            goto LABEL_289;
          }
        }
        else
        {
          unint64_t v71 = v5 + 2;
LABEL_125:
          uint64_t v162 = v71;
          *(unsigned char *)(a1 + 456) = v72 != 0;
        }
        goto LABEL_190;
      case 0x14u:
        if (v9 != 160) {
          goto LABEL_279;
        }
        unint64_t v74 = v5 + 1;
        uint64_t v75 = *v5;
        v160 |= 0x200000u;
        if ((*v5 & 0x80000000) == 0) {
          goto LABEL_130;
        }
        int v76 = *v74;
        uint64_t v75 = v75 + (v76 << 7) - 128;
        if (v76 < 0)
        {
          uint64_t v144 = (char *)sub_188C138((uint64_t)v5, v75);
          uint64_t v162 = v144;
          *(unsigned char *)(a1 + 457) = v145 != 0;
          if (!v144) {
            goto LABEL_289;
          }
        }
        else
        {
          unint64_t v74 = v5 + 2;
LABEL_130:
          uint64_t v162 = v74;
          *(unsigned char *)(a1 + 457) = v75 != 0;
        }
        goto LABEL_190;
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v77 = *(void **)(a1 + 400);
        if (!v77)
        {
          unint64_t v78 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v154) {
            unint64_t v78 = (void *)*v78;
          }
          uint64_t v77 = sub_12D294C((uint64_t)v78);
          *(void *)(a1 + 400) = v77;
          uint64_t v5 = v162;
        }
        int v23 = (char *)sub_14E7BE8(a3, (uint64_t)v77, (unsigned __int8 *)v5);
        goto LABEL_189;
      case 0x16u:
        if (v9 == 176)
        {
          uint64_t v79 = v5 - 2;
          while (1)
          {
            uint64_t v162 = v79 + 2;
            uint64_t v80 = v79[2];
            if (v79[2] < 0)
            {
              int v81 = v80 + (v79[3] << 7);
              uint64_t v80 = (v81 - 128);
              if (v79[3] < 0)
              {
                uint64_t v79 = (char *)sub_188C138((uint64_t)(v79 + 2), (v81 - 128));
                uint64_t v80 = v82;
              }
              else
              {
                v79 += 4;
              }
            }
            else
            {
              v79 += 3;
            }
            uint64_t v162 = v79;
            uint64_t v83 = *(unsigned int *)(a1 + 192);
            if (v83 == *(_DWORD *)(a1 + 196))
            {
              int v84 = v83 + 1;
              sub_188CA54((unsigned int *)(a1 + 192), v83 + 1);
              *(void *)(*(void *)(a1 + 200) + 8 * v83) = v80;
              uint64_t v79 = v162;
            }
            else
            {
              *(void *)(*(void *)(a1 + 200) + 8 * v83) = v80;
              int v84 = v83 + 1;
            }
            *(_DWORD *)(a1 + 192) = v84;
            if (!v79) {
              break;
            }
            if (*(void *)a3 <= (unint64_t)v79 || *(_WORD *)v79 != 432) {
              goto LABEL_190;
            }
          }
LABEL_289:
          uint64_t v5 = 0;
          goto LABEL_4;
        }
        if (v9 == 178)
        {
          int v23 = (char *)sub_188C2EC((unsigned int *)(a1 + 192), (unsigned __int8 *)v5, (uint64_t)a3);
          goto LABEL_189;
        }
LABEL_279:
        if (v9) {
          BOOL v152 = (v9 & 7) == 4;
        }
        else {
          BOOL v152 = 1;
        }
        if (!v152)
        {
          if (v9 - 8000 > 0x18F)
          {
            if (*v154)
            {
              uint64_t v153 = (std::string *)((*v154 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v153 = (std::string *)sub_188DBD8(v154);
              uint64_t v5 = v162;
            }
            int v23 = (char *)sub_1885AC0(v9, v153, v5, a3);
          }
          else
          {
            int v23 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v5, (uint64_t)&off_253BBE8, v154, a3);
          }
LABEL_189:
          uint64_t v162 = v23;
          if (!v23) {
            goto LABEL_289;
          }
LABEL_190:
          if (sub_11947B8((uint64_t)a3, &v162, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        int v6 = v160;
        if (v5) {
          a3[10].i32[0] = v9 - 1;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) |= v6;
        return v5;
      case 0x17u:
        if (v9 != 186) {
          goto LABEL_279;
        }
        unint64_t v85 = v5 - 2;
        while (1)
        {
          int v86 = (unsigned __int8 *)(v85 + 2);
          uint64_t v162 = v85 + 2;
          int v87 = *(_DWORD **)(a1 + 224);
          if (v87 && (uint64_t v88 = *(int *)(a1 + 216), (int)v88 < *v87))
          {
            *(_DWORD *)(a1 + 216) = v88 + 1;
            uint64_t v89 = *(void *)&v87[2 * v88 + 2];
          }
          else
          {
            uint64_t v90 = sub_14FBC6C(*v157);
            uint64_t v89 = sub_188CDC8((uint64_t)v157, v90);
            int v86 = (unsigned __int8 *)v162;
          }
          unint64_t v85 = sub_14F69A8(a3, v89, v86);
          uint64_t v162 = v85;
          if (!v85) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v85 || *(_WORD *)v85 != 442) {
            goto LABEL_190;
          }
        }
      case 0x18u:
        if (v9 != 194) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v91 = *(void *)(a1 + 408);
        if (!v91)
        {
          uint64_t v92 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v154) {
            uint64_t v92 = (void *)*v92;
          }
          uint64_t v91 = sub_15A5754((uint64_t)v92);
          *(void *)(a1 + 408) = v91;
          uint64_t v5 = v162;
        }
        int v23 = sub_14E7D98(a3, v91, (unsigned __int8 *)v5);
        goto LABEL_189;
      case 0x19u:
        if (v9 != 202) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v93 = *(void *)(a1 + 8);
        uint64_t v48 = (uint64_t *)(v93 & 0xFFFFFFFFFFFFFFFCLL);
        if (v93) {
          uint64_t v48 = (uint64_t *)*v48;
        }
        unint64_t v49 = (void *)(a1 + 320);
        goto LABEL_187;
      case 0x1Au:
        if (v9 != 210) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v94 = *(void *)(a1 + 8);
        uint64_t v48 = (uint64_t *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
        if (v94) {
          uint64_t v48 = (uint64_t *)*v48;
        }
        unint64_t v49 = (void *)(a1 + 328);
        goto LABEL_187;
      case 0x1Bu:
        if (v9 != 218) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v95 = *(void *)(a1 + 8);
        uint64_t v48 = (uint64_t *)(v95 & 0xFFFFFFFFFFFFFFFCLL);
        if (v95) {
          uint64_t v48 = (uint64_t *)*v48;
        }
        unint64_t v49 = (void *)(a1 + 336);
        goto LABEL_187;
      case 0x1Cu:
        if (v9 != 226) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v96 = *(void *)(a1 + 8);
        uint64_t v48 = (uint64_t *)(v96 & 0xFFFFFFFFFFFFFFFCLL);
        if (v96) {
          uint64_t v48 = (uint64_t *)*v48;
        }
        unint64_t v49 = (void *)(a1 + 344);
        goto LABEL_187;
      case 0x1Du:
        if (v9 != 234) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v97 = *(void *)(a1 + 8);
        uint64_t v48 = (uint64_t *)(v97 & 0xFFFFFFFFFFFFFFFCLL);
        if (v97) {
          uint64_t v48 = (uint64_t *)*v48;
        }
        unint64_t v49 = (void *)(a1 + 352);
LABEL_187:
        uint64_t v98 = (std::string *)sub_1880F84(v49, v48);
        goto LABEL_188;
      case 0x1Eu:
        if (v9 != 242) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v99 = *(void *)(a1 + 416);
        if (!v99)
        {
          unint64_t v100 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v154) {
            unint64_t v100 = (void *)*v100;
          }
          uint64_t v99 = sub_14FBD64((uint64_t)v100);
          *(void *)(a1 + 416) = v99;
          uint64_t v5 = v162;
        }
        int v23 = sub_14F6A38(a3, v99, (unsigned __int8 *)v5);
        goto LABEL_189;
      case 0x1Fu:
        if (v9 != 248) {
          goto LABEL_279;
        }
        uint64_t v102 = v5 + 1;
        LODWORD(v101) = *v5;
        v160 |= 0x400000u;
        if ((v101 & 0x80) == 0) {
          goto LABEL_202;
        }
        int v103 = *v102;
        uint64_t v101 = v101 + (v103 << 7) - 128;
        if (v103 < 0)
        {
          uint64_t v146 = (char *)sub_188C138((uint64_t)v5, v101);
          uint64_t v162 = v146;
          *(_DWORD *)(a1 + 460) = v147;
          if (!v146) {
            goto LABEL_289;
          }
        }
        else
        {
          uint64_t v102 = v5 + 2;
LABEL_202:
          uint64_t v162 = v102;
          *(_DWORD *)(a1 + 460) = v101;
        }
        goto LABEL_190;
      case 0x20u:
        if ((_BYTE)v9) {
          goto LABEL_279;
        }
        int v105 = v5 + 1;
        LODWORD(v104) = *v5;
        v160 |= 0x800000u;
        if ((v104 & 0x80) == 0) {
          goto LABEL_207;
        }
        int v106 = *v105;
        uint64_t v104 = v104 + (v106 << 7) - 128;
        if (v106 < 0)
        {
          int v148 = (char *)sub_188C138((uint64_t)v5, v104);
          uint64_t v162 = v148;
          *(_DWORD *)(a1 + 464) = v149;
          if (!v148) {
            goto LABEL_289;
          }
        }
        else
        {
          int v105 = v5 + 2;
LABEL_207:
          uint64_t v162 = v105;
          *(_DWORD *)(a1 + 464) = v104;
        }
        goto LABEL_190;
      case 0x21u:
        if (v9 != 8) {
          goto LABEL_279;
        }
        uint64_t v108 = v5 + 1;
        LODWORD(v107) = *v5;
        v160 |= 0x1000000u;
        if ((v107 & 0x80) == 0) {
          goto LABEL_212;
        }
        int v109 = *v108;
        uint64_t v107 = v107 + (v109 << 7) - 128;
        if (v109 < 0)
        {
          uint64_t v150 = (char *)sub_188C138((uint64_t)v5, v107);
          uint64_t v162 = v150;
          *(_DWORD *)(a1 + 468) = v151;
          if (!v150) {
            goto LABEL_289;
          }
        }
        else
        {
          uint64_t v108 = v5 + 2;
LABEL_212:
          uint64_t v162 = v108;
          *(_DWORD *)(a1 + 468) = v107;
        }
        goto LABEL_190;
      case 0x22u:
        if (v9 != 18) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v110 = *(void *)(a1 + 424);
        if (!v110)
        {
          uint64_t v111 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v154) {
            uint64_t v111 = (void *)*v111;
          }
          sub_14A47B4((uint64_t)v111);
          uint64_t v110 = v112;
          *(void *)(a1 + 424) = v112;
          uint64_t v5 = v162;
        }
        int v23 = (char *)sub_14F6AC8(a3, v110, (unsigned __int8 *)v5);
        goto LABEL_189;
      case 0x23u:
        if (v9 != 26) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v113 = *(void *)(a1 + 8);
        uint64_t v114 = (uint64_t *)(v113 & 0xFFFFFFFFFFFFFFFCLL);
        if (v113) {
          uint64_t v114 = (uint64_t *)*v114;
        }
        uint64_t v98 = (std::string *)sub_1881EAC((uint64_t *)(a1 + 360), &off_253BEB0, v114);
LABEL_188:
        int v23 = (char *)sub_188C244(v98, v162, (uint64_t)a3);
        goto LABEL_189;
      case 0x24u:
        if (v9 != 34) {
          goto LABEL_279;
        }
        int v115 = v5 - 2;
        while (1)
        {
          uint64_t v116 = (unsigned __int8 *)(v115 + 2);
          uint64_t v162 = v115 + 2;
          uint64_t v117 = *(_DWORD **)(a1 + 248);
          if (v117 && (uint64_t v118 = *(int *)(a1 + 240), (int)v118 < *v117))
          {
            *(_DWORD *)(a1 + 240) = v118 + 1;
            uint64_t v119 = *(void *)&v117[2 * v118 + 2];
          }
          else
          {
            sub_14FB8A0(*v158);
            uint64_t v119 = sub_188CDC8((uint64_t)v158, v120);
            uint64_t v116 = (unsigned __int8 *)v162;
          }
          int v115 = (char *)sub_14F67F8(a3, v119, v116);
          uint64_t v162 = v115;
          if (!v115) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v115 || *(_WORD *)v115 != 674) {
            goto LABEL_190;
          }
        }
      case 0x25u:
        if (v9 != 42) {
          goto LABEL_279;
        }
        int v121 = v5 - 2;
        while (1)
        {
          uint64_t v122 = (char *)(v121 + 2);
          uint64_t v162 = (char *)(v121 + 2);
          uint64_t v123 = *(_DWORD **)(a1 + 272);
          if (v123 && (uint64_t v124 = *(int *)(a1 + 264), (int)v124 < *v123))
          {
            *(_DWORD *)(a1 + 264) = v124 + 1;
            uint64_t v125 = *(std::string **)&v123[2 * v124 + 2];
          }
          else
          {
            if (!*v161) {
              operator new();
            }
            void *v127 = v126;
            v127[1] = sub_3A6EDC;
            *uint64_t v126 = 0;
            v126[1] = 0;
            v126[2] = 0;
            uint64_t v125 = (std::string *)sub_188CDC8((uint64_t)v161, (uint64_t)v126);
            uint64_t v122 = v162;
          }
          int v121 = sub_188C244(v125, v122, (uint64_t)a3);
          uint64_t v162 = (char *)v121;
          if (!v121) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v121 || *(_WORD *)v121 != 682) {
            goto LABEL_190;
          }
        }
      case 0x26u:
        if (v9 != 50) {
          goto LABEL_279;
        }
        uint64_t v128 = v5 - 2;
        while (1)
        {
          uint64_t v129 = (unsigned __int8 *)(v128 + 2);
          uint64_t v162 = v128 + 2;
          unsigned int v130 = *(_DWORD **)(a1 + 296);
          if (v130 && (uint64_t v131 = *(int *)(a1 + 288), (int)v131 < *v130))
          {
            *(_DWORD *)(a1 + 288) = v131 + 1;
            uint64_t v132 = *(void *)&v130[2 * v131 + 2];
          }
          else
          {
            unint64_t v133 = sub_14A4848(*v159);
            uint64_t v132 = sub_188CDC8((uint64_t)v159, (uint64_t)v133);
            uint64_t v129 = (unsigned __int8 *)v162;
          }
          uint64_t v128 = (char *)sub_14F6B58(a3, v132, v129);
          uint64_t v162 = v128;
          if (!v128) {
            goto LABEL_289;
          }
          if (*(void *)a3 <= (unint64_t)v128 || *(_WORD *)v128 != 690) {
            goto LABEL_190;
          }
        }
      case 0x27u:
        if (v9 != 58) {
          goto LABEL_279;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v134 = *(void *)(a1 + 432);
        if (!v134)
        {
          uint64_t v135 = (void *)(*v154 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v154) {
            uint64_t v135 = (void *)*v135;
          }
          uint64_t v134 = sub_12C6100((uint64_t)v135);
          *(void *)(a1 + 432) = v134;
          uint64_t v5 = v162;
        }
        int v23 = (char *)sub_14F6BE8(a3, v134, (unsigned __int8 *)v5);
        goto LABEL_189;
      default:
        goto LABEL_279;
    }
  }
}

uint64_t sub_14F67F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14EFE9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F6888(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14E257C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F6918(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F5674(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F69A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F4708(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14F6A38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F9144(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14F6AC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A3040(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14F6B58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A438C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14F6BE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12C565C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14F6C78(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_14F0CF4(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(void *)(a1 + 440);
    *a2 = 16;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v15 = *(void *)(a1 + 368);
    *a2 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    a2[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, a2 + 1);
    }
    else {
      uint64_t v17 = a2 + 2;
    }
    a2 = sub_15BA180(v15, (unint64_t)v17, a3);
    if ((v11 & 0x200) == 0)
    {
LABEL_18:
      if ((v11 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
  }
  else if ((v11 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v18 = *(void *)(a1 + 376);
  *a2 = 58;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  a2[1] = v19;
  if (v19 > 0x7F) {
    int v20 = sub_188A9CC(v19, a2 + 1);
  }
  else {
    int v20 = a2 + 2;
  }
  a2 = sub_146ECEC(v18, (unint64_t)v20, a3);
  if ((v11 & 0x400) == 0)
  {
LABEL_19:
    if ((v11 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_39;
  }
LABEL_33:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v21 = *(void *)(a1 + 384);
  *a2 = 66;
  unsigned int v22 = *(_DWORD *)(v21 + 36);
  a2[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, a2 + 1);
  }
  else {
    int v23 = a2 + 2;
  }
  a2 = sub_14E7E28(v21, v23, a3);
  if ((v11 & 0x800) != 0)
  {
LABEL_39:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v24 = *(void *)(a1 + 392);
    *a2 = 74;
    unsigned int v25 = *(_DWORD *)(v24 + 36);
    a2[1] = v25;
    if (v25 > 0x7F) {
      uint64_t v26 = sub_188A9CC(v25, a2 + 1);
    }
    else {
      uint64_t v26 = a2 + 2;
    }
    a2 = sub_14E7E28(v24, v26, a3);
  }
LABEL_45:
  int v27 = *(_DWORD *)(a1 + 80);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 82;
      unsigned int v30 = *(_DWORD *)(v29 + 44);
      a2[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, a2 + 1);
      }
      else {
        uint64_t v31 = a2 + 2;
      }
      a2 = (char *)sub_14F6C78(v29, v31, a3);
    }
  }
  if ((v11 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v32 = *(int *)(a1 + 448);
    *a2 = 88;
    a2[1] = v32;
    if (v32 > 0x7F)
    {
      a2[1] = v32 | 0x80;
      unint64_t v33 = v32 >> 7;
      a2[2] = v32 >> 7;
      a2 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v34 = v33 >> 14;
          v33 >>= 7;
          *a2++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  uint64_t v35 = *(unsigned int *)(a1 + 104);
  if ((int)v35 >= 1)
  {
    uint64_t v36 = 0;
    uint64_t v37 = 8 * v35;
    do
    {
      int v38 = *(void **)(*(void *)(a1 + 112) + v36 + 8);
      if (*((char *)v38 + 23) < 0)
      {
        int64_t v39 = v38[1];
        if (v39 > 127) {
          goto LABEL_71;
        }
      }
      else
      {
        int64_t v39 = *((unsigned __int8 *)v38 + 23);
      }
      if ((uint64_t)(*a3 - (void)a2 + 14) >= v39)
      {
        *a2 = 98;
        a2[1] = v39;
        if (*((char *)v38 + 23) < 0) {
          int v38 = (void *)*v38;
        }
        uint64_t v40 = a2 + 2;
        memcpy(v40, v38, v39);
        a2 = &v40[v39];
        goto LABEL_69;
      }
LABEL_71:
      a2 = (char *)sub_188A868(a3, 12, (uint64_t)v38, a2);
LABEL_69:
      v36 += 8;
    }
    while (v37 != v36);
  }
  if (v11) {
    a2 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v41 = *(_DWORD *)(a1 + 128);
  if (v41)
  {
    for (int k = 0; k != v41; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 136) + 8 * k + 8);
      *a2 = 114;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      a2[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, a2 + 1);
      }
      else {
        uint64_t v45 = a2 + 2;
      }
      a2 = sub_149FD00(v43, v45, a3);
    }
  }
  int v46 = *(_DWORD *)(a1 + 152);
  if (v46)
  {
    for (int m = 0; m != v46; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v48 = *(void *)(*(void *)(a1 + 160) + 8 * m + 8);
      *a2 = 122;
      unsigned int v49 = *(_DWORD *)(v48 + 20);
      a2[1] = v49;
      if (v49 > 0x7F) {
        uint64_t v50 = sub_188A9CC(v49, a2 + 1);
      }
      else {
        uint64_t v50 = a2 + 2;
      }
      a2 = sub_149FD00(v48, v50, a3);
    }
  }
  int v51 = *(_DWORD *)(a1 + 176);
  if (v51)
  {
    for (int n = 0; n != v51; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v53 = *(void *)(*(void *)(a1 + 184) + 8 * n + 8);
      *(_WORD *)a2 = 386;
      unsigned int v54 = *(_DWORD *)(v53 + 44);
      a2[2] = v54;
      if (v54 > 0x7F) {
        uint64_t v55 = sub_188A9CC(v54, a2 + 2);
      }
      else {
        uint64_t v55 = a2 + 3;
      }
      a2 = (char *)sub_14F6C78(v53, v55, a3);
    }
  }
  if ((v11 & 2) != 0) {
    a2 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v11 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v56 = *(int *)(a1 + 452);
    *(_WORD *)a2 = 400;
    a2[2] = v56;
    if (v56 > 0x7F)
    {
      a2[2] = v56 | 0x80;
      unint64_t v57 = v56 >> 7;
      a2[3] = v56 >> 7;
      a2 += 4;
      if (v56 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v58 = v57 >> 14;
          v57 >>= 7;
          *a2++ = v57;
        }
        while (v58);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((v11 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v59 = *(unsigned char *)(a1 + 456);
    *(_WORD *)a2 = 408;
    a2[2] = v59;
    a2 += 3;
    if ((v11 & 0x200000) == 0)
    {
LABEL_109:
      if ((v11 & 0x1000) == 0) {
        goto LABEL_123;
      }
      goto LABEL_117;
    }
  }
  else if ((v11 & 0x200000) == 0)
  {
    goto LABEL_109;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v60 = *(unsigned char *)(a1 + 457);
  *(_WORD *)a2 = 416;
  a2[2] = v60;
  a2 += 3;
  if ((v11 & 0x1000) != 0)
  {
LABEL_117:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v61 = *(void *)(a1 + 400);
    *(_WORD *)a2 = 426;
    unsigned int v62 = *(_DWORD *)(v61 + 20);
    a2[2] = v62;
    if (v62 > 0x7F) {
      unsigned int v63 = sub_188A9CC(v62, a2 + 2);
    }
    else {
      unsigned int v63 = a2 + 3;
    }
    a2 = sub_12D25E4(v61, v63, a3);
  }
LABEL_123:
  uint64_t v64 = *(unsigned int *)(a1 + 192);
  if ((int)v64 >= 1)
  {
    for (iint i = 0; ii != v64; ++ii)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v66 = *(void *)(*(void *)(a1 + 200) + 8 * ii);
      *(_WORD *)a2 = 432;
      a2[2] = v66;
      if (v66 > 0x7F)
      {
        a2[2] = v66 | 0x80;
        unint64_t v67 = v66 >> 7;
        a2[3] = v66 >> 7;
        a2 += 4;
        if (v66 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v68 = v67 >> 14;
            v67 >>= 7;
            *a2++ = v67;
          }
          while (v68);
        }
      }
      else
      {
        a2 += 3;
      }
    }
  }
  int v69 = *(_DWORD *)(a1 + 216);
  if (v69)
  {
    for (jint j = 0; jj != v69; ++jj)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v71 = *(void *)(*(void *)(a1 + 224) + 8 * jj + 8);
      *(_WORD *)a2 = 442;
      unsigned int v72 = *(_DWORD *)(v71 + 20);
      a2[2] = v72;
      if (v72 > 0x7F) {
        int v73 = sub_188A9CC(v72, a2 + 2);
      }
      else {
        int v73 = a2 + 3;
      }
      a2 = sub_14F49F4(v71, (unint64_t)v73, a3);
    }
  }
  if ((v11 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v74 = *(void *)(a1 + 408);
    *(_WORD *)a2 = 450;
    unsigned int v75 = *(_DWORD *)(v74 + 40);
    a2[2] = v75;
    if (v75 > 0x7F) {
      int v76 = sub_188A9CC(v75, a2 + 2);
    }
    else {
      int v76 = a2 + 3;
    }
    a2 = sub_15A5438(v74, v76, a3);
    if ((v11 & 4) == 0)
    {
LABEL_142:
      if ((v11 & 8) == 0) {
        goto LABEL_143;
      }
      goto LABEL_156;
    }
  }
  else if ((v11 & 4) == 0)
  {
    goto LABEL_142;
  }
  a2 = sub_117A0AC(a3, 25, (const void **)(*(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 8) == 0)
  {
LABEL_143:
    if ((v11 & 0x10) == 0) {
      goto LABEL_144;
    }
    goto LABEL_157;
  }
LABEL_156:
  a2 = sub_117A0AC(a3, 26, (const void **)(*(void *)(a1 + 328) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x10) == 0)
  {
LABEL_144:
    if ((v11 & 0x20) == 0) {
      goto LABEL_145;
    }
    goto LABEL_158;
  }
LABEL_157:
  a2 = sub_117A0AC(a3, 27, (const void **)(*(void *)(a1 + 336) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x20) == 0)
  {
LABEL_145:
    if ((v11 & 0x40) == 0) {
      goto LABEL_146;
    }
    goto LABEL_159;
  }
LABEL_158:
  a2 = sub_117A0AC(a3, 28, (const void **)(*(void *)(a1 + 344) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x40) == 0)
  {
LABEL_146:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_147;
    }
    goto LABEL_160;
  }
LABEL_159:
  a2 = sub_117A0AC(a3, 29, (const void **)(*(void *)(a1 + 352) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 0x4000) == 0)
  {
LABEL_147:
    if ((v11 & 0x400000) == 0) {
      goto LABEL_172;
    }
    goto LABEL_166;
  }
LABEL_160:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v77 = *(void *)(a1 + 416);
  *(_WORD *)a2 = 498;
  unsigned int v78 = *(_DWORD *)(v77 + 20);
  a2[2] = v78;
  if (v78 > 0x7F) {
    uint64_t v79 = sub_188A9CC(v78, a2 + 2);
  }
  else {
    uint64_t v79 = a2 + 3;
  }
  a2 = sub_14F933C(v77, (unint64_t)v79, a3);
  if ((v11 & 0x400000) != 0)
  {
LABEL_166:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v80 = *(int *)(a1 + 460);
    *(_WORD *)a2 = 504;
    a2[2] = v80;
    if (v80 > 0x7F)
    {
      a2[2] = v80 | 0x80;
      unint64_t v81 = v80 >> 7;
      a2[3] = v80 >> 7;
      a2 += 4;
      if (v80 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v82 = v81 >> 14;
          v81 >>= 7;
          *a2++ = v81;
        }
        while (v82);
      }
    }
    else
    {
      a2 += 3;
    }
  }
LABEL_172:
  if ((v11 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v83 = *(int *)(a1 + 464);
    *(_WORD *)a2 = 640;
    a2[2] = v83;
    if (v83 > 0x7F)
    {
      a2[2] = v83 | 0x80;
      unint64_t v84 = v83 >> 7;
      a2[3] = v83 >> 7;
      a2 += 4;
      if (v83 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v85 = v84 >> 14;
          v84 >>= 7;
          *a2++ = v84;
        }
        while (v85);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((v11 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v86 = *(int *)(a1 + 468);
    *(_WORD *)a2 = 648;
    a2[2] = v86;
    if (v86 > 0x7F)
    {
      a2[2] = v86 | 0x80;
      unint64_t v87 = v86 >> 7;
      a2[3] = v86 >> 7;
      a2 += 4;
      if (v86 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v88 = v87 >> 14;
          v87 >>= 7;
          *a2++ = v87;
        }
        while (v88);
      }
    }
    else
    {
      a2 += 3;
    }
  }
  if ((v11 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v89 = *(void *)(a1 + 424);
    *(_WORD *)a2 = 658;
    unsigned int v90 = *(_DWORD *)(v89 + 20);
    a2[2] = v90;
    if (v90 > 0x7F) {
      uint64_t v91 = sub_188A9CC(v90, a2 + 2);
    }
    else {
      uint64_t v91 = a2 + 3;
    }
    a2 = sub_14A3704(v89, (unint64_t)v91, a3);
  }
  if ((v11 & 0x80) != 0) {
    a2 = sub_117A0AC(a3, 35, (const void **)(*(void *)(a1 + 360) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v92 = *(_DWORD *)(a1 + 240);
  if (v92)
  {
    for (kint k = 0; kk != v92; ++kk)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v94 = *(void *)(*(void *)(a1 + 248) + 8 * kk + 8);
      *(_WORD *)a2 = 674;
      unsigned int v95 = *(_DWORD *)(v94 + 20);
      a2[2] = v95;
      if (v95 > 0x7F) {
        uint64_t v96 = sub_188A9CC(v95, a2 + 2);
      }
      else {
        uint64_t v96 = a2 + 3;
      }
      a2 = sub_14F0CF4(v94, (unint64_t)v96, a3);
    }
  }
  uint64_t v97 = *(unsigned int *)(a1 + 264);
  if ((int)v97 >= 1)
  {
    uint64_t v98 = 0;
    uint64_t v99 = 8 * v97;
    do
    {
      unint64_t v100 = *(void **)(*(void *)(a1 + 272) + v98 + 8);
      if (*((char *)v100 + 23) < 0)
      {
        int64_t v101 = v100[1];
        if (v101 > 127) {
          goto LABEL_214;
        }
      }
      else
      {
        int64_t v101 = *((unsigned __int8 *)v100 + 23);
      }
      if ((uint64_t)(*a3 - (void)a2 + 13) >= v101)
      {
        *(_WORD *)a2 = 682;
        a2[2] = v101;
        if (*((char *)v100 + 23) < 0) {
          unint64_t v100 = (void *)*v100;
        }
        uint64_t v102 = a2 + 3;
        memcpy(v102, v100, v101);
        a2 = &v102[v101];
        goto LABEL_212;
      }
LABEL_214:
      a2 = (char *)sub_188A868(a3, 37, (uint64_t)v100, a2);
LABEL_212:
      v98 += 8;
    }
    while (v99 != v98);
  }
  int v103 = *(_DWORD *)(a1 + 288);
  if (v103)
  {
    for (mint m = 0; mm != v103; ++mm)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v105 = *(void *)(*(void *)(a1 + 296) + 8 * mm + 8);
      *(_WORD *)a2 = 690;
      unsigned int v106 = *(_DWORD *)(v105 + 20);
      a2[2] = v106;
      if (v106 > 0x7F) {
        uint64_t v107 = sub_188A9CC(v106, a2 + 2);
      }
      else {
        uint64_t v107 = a2 + 3;
      }
      a2 = sub_14A4534(v105, v107, a3);
    }
  }
  if ((v11 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v108 = *(void *)(a1 + 432);
    *(_WORD *)a2 = 698;
    unsigned int v109 = *(_DWORD *)(v108 + 104);
    a2[2] = v109;
    if (v109 > 0x7F) {
      uint64_t v110 = sub_188A9CC(v109, a2 + 2);
    }
    else {
      uint64_t v110 = a2 + 3;
    }
    a2 = sub_12C59DC(v108, v110, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 1050, a2, a3);
  }
  uint64_t v111 = *(void *)(a1 + 8);
  if ((v111 & 1) == 0) {
    return (uint64_t)a2;
  }
  unint64_t v113 = v111 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v113 + 31) < 0)
  {
    uint64_t v114 = *(void **)(v113 + 8);
    uint64_t v115 = *(void *)(v113 + 16);
  }
  else
  {
    uint64_t v114 = (void *)(v113 + 8);
    LODWORD(v115) = *(unsigned __int8 *)(v113 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v115)
  {
    uint64_t v116 = (int)v115;
    memcpy(a2, v114, (int)v115);
    a2 += v116;
    return (uint64_t)a2;
  }

  return sub_188A528(a3, (char *)v114, v115, a2);
}

uint64_t sub_14F7B84(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_14F1780(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_14F7B84(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  if ((int)v17 >= 1)
  {
    unsigned int v19 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      v18 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      --v17;
    }
    while (v17);
  }
  uint64_t v23 = *(int *)(a1 + 128);
  uint64_t v24 = v18 + v23;
  uint64_t v25 = *(void *)(a1 + 136);
  if (v25) {
    uint64_t v26 = (uint64_t *)(v25 + 8);
  }
  else {
    uint64_t v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_149FDEC(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = *(int *)(a1 + 152);
  uint64_t v31 = v24 + v30;
  uint64_t v32 = *(void *)(a1 + 160);
  if (v32) {
    unint64_t v33 = (uint64_t *)(v32 + 8);
  }
  else {
    unint64_t v33 = 0;
  }
  if (v30)
  {
    uint64_t v34 = 8 * v30;
    do
    {
      uint64_t v35 = *v33++;
      uint64_t v36 = sub_149FDEC(v35);
      v31 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      v34 -= 8;
    }
    while (v34);
  }
  uint64_t v37 = *(int *)(a1 + 176);
  uint64_t v38 = v31 + 2 * v37;
  uint64_t v39 = *(void *)(a1 + 184);
  if (v39) {
    uint64_t v40 = (uint64_t *)(v39 + 8);
  }
  else {
    uint64_t v40 = 0;
  }
  if (v37)
  {
    uint64_t v41 = 8 * v37;
    do
    {
      uint64_t v42 = *v40++;
      uint64_t v43 = sub_14F7B84(v42);
      v38 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6);
      v41 -= 8;
    }
    while (v41);
  }
  uint64_t v44 = sub_188D5A8((unsigned int *)(a1 + 192));
  uint64_t v45 = *(int *)(a1 + 216);
  uint64_t v46 = v44 + v38 + 2 * (v45 + *(unsigned int *)(a1 + 192));
  uint64_t v47 = *(void *)(a1 + 224);
  if (v47) {
    uint64_t v48 = (uint64_t *)(v47 + 8);
  }
  else {
    uint64_t v48 = 0;
  }
  if (v45)
  {
    uint64_t v49 = 8 * v45;
    do
    {
      uint64_t v50 = *v48++;
      uint64_t v51 = sub_14F4BB8(v50);
      v46 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      v49 -= 8;
    }
    while (v49);
  }
  uint64_t v52 = *(int *)(a1 + 240);
  uint64_t v53 = v46 + 2 * v52;
  uint64_t v54 = *(void *)(a1 + 248);
  if (v54) {
    uint64_t v55 = (uint64_t *)(v54 + 8);
  }
  else {
    uint64_t v55 = 0;
  }
  if (v52)
  {
    uint64_t v56 = 8 * v52;
    do
    {
      uint64_t v57 = *v55++;
      uint64_t v58 = sub_14F1780(v57);
      v53 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6);
      v56 -= 8;
    }
    while (v56);
  }
  uint64_t v59 = *(unsigned int *)(a1 + 264);
  uint64_t v60 = v53 + 2 * v59;
  if ((int)v59 >= 1)
  {
    uint64_t v61 = (uint64_t *)(*(void *)(a1 + 272) + 8);
    do
    {
      uint64_t v62 = *v61++;
      uint64_t v63 = *(unsigned __int8 *)(v62 + 23);
      uint64_t v64 = *(void *)(v62 + 8);
      if ((v63 & 0x80u) == 0) {
        uint64_t v64 = v63;
      }
      v60 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6);
      --v59;
    }
    while (v59);
  }
  uint64_t v65 = *(int *)(a1 + 288);
  uint64_t v66 = v60 + 2 * v65;
  uint64_t v67 = *(void *)(a1 + 296);
  if (v67) {
    unint64_t v68 = (uint64_t *)(v67 + 8);
  }
  else {
    unint64_t v68 = 0;
  }
  if (v65)
  {
    uint64_t v69 = 8 * v65;
    do
    {
      uint64_t v70 = *v68++;
      uint64_t v71 = sub_14A4620(v70);
      v66 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6);
      v69 -= 8;
    }
    while (v69);
  }
  int v72 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v72) {
    goto LABEL_71;
  }
  if (v72)
  {
    unint64_t v92 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v93 = *(unsigned __int8 *)(v92 + 23);
    uint64_t v94 = *(void *)(v92 + 8);
    if ((v93 & 0x80u) == 0) {
      uint64_t v94 = v93;
    }
    v66 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v72 & 2) == 0)
    {
LABEL_62:
      if ((v72 & 4) == 0) {
        goto LABEL_63;
      }
      goto LABEL_118;
    }
  }
  else if ((v72 & 2) == 0)
  {
    goto LABEL_62;
  }
  unint64_t v95 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v96 = *(unsigned __int8 *)(v95 + 23);
  uint64_t v97 = *(void *)(v95 + 8);
  if ((v96 & 0x80u) == 0) {
    uint64_t v97 = v96;
  }
  v66 += v97 + ((9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 4) == 0)
  {
LABEL_63:
    if ((v72 & 8) == 0) {
      goto LABEL_64;
    }
    goto LABEL_121;
  }
LABEL_118:
  unint64_t v98 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v99 = *(unsigned __int8 *)(v98 + 23);
  uint64_t v100 = *(void *)(v98 + 8);
  if ((v99 & 0x80u) == 0) {
    uint64_t v100 = v99;
  }
  v66 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 8) == 0)
  {
LABEL_64:
    if ((v72 & 0x10) == 0) {
      goto LABEL_65;
    }
    goto LABEL_124;
  }
LABEL_121:
  unint64_t v101 = *(void *)(a1 + 328) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v102 = *(unsigned __int8 *)(v101 + 23);
  uint64_t v103 = *(void *)(v101 + 8);
  if ((v102 & 0x80u) == 0) {
    uint64_t v103 = v102;
  }
  v66 += v103 + ((9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 0x10) == 0)
  {
LABEL_65:
    if ((v72 & 0x20) == 0) {
      goto LABEL_66;
    }
LABEL_127:
    unint64_t v107 = *(void *)(a1 + 344) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v108 = *(unsigned __int8 *)(v107 + 23);
    uint64_t v109 = *(void *)(v107 + 8);
    if ((v108 & 0x80u) == 0) {
      uint64_t v109 = v108;
    }
    v66 += v109 + ((9 * (__clz(v109 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v72 & 0x40) == 0)
    {
LABEL_67:
      if ((v72 & 0x80) == 0) {
        goto LABEL_71;
      }
      goto LABEL_68;
    }
    goto LABEL_130;
  }
LABEL_124:
  unint64_t v104 = *(void *)(a1 + 336) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v105 = *(unsigned __int8 *)(v104 + 23);
  uint64_t v106 = *(void *)(v104 + 8);
  if ((v105 & 0x80u) == 0) {
    uint64_t v106 = v105;
  }
  v66 += v106 + ((9 * (__clz(v106 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 0x20) != 0) {
    goto LABEL_127;
  }
LABEL_66:
  if ((v72 & 0x40) == 0) {
    goto LABEL_67;
  }
LABEL_130:
  unint64_t v110 = *(void *)(a1 + 352) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v111 = *(unsigned __int8 *)(v110 + 23);
  uint64_t v112 = *(void *)(v110 + 8);
  if ((v111 & 0x80u) == 0) {
    uint64_t v112 = v111;
  }
  v66 += v112 + ((9 * (__clz(v112 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 0x80) != 0)
  {
LABEL_68:
    unint64_t v73 = *(void *)(a1 + 360) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v74 = *(unsigned __int8 *)(v73 + 23);
    uint64_t v75 = *(void *)(v73 + 8);
    if ((v74 & 0x80u) == 0) {
      uint64_t v75 = v74;
    }
    v66 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_71:
  if ((v72 & 0xFF00) == 0) {
    goto LABEL_81;
  }
  if ((v72 & 0x100) != 0)
  {
    unint64_t v113 = sub_15BA324(*(void *)(a1 + 368));
    v66 += v113 + ((9 * (__clz(v113 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v72 & 0x200) == 0)
    {
LABEL_74:
      if ((v72 & 0x400) == 0) {
        goto LABEL_75;
      }
      goto LABEL_136;
    }
  }
  else if ((v72 & 0x200) == 0)
  {
    goto LABEL_74;
  }
  uint64_t v114 = sub_146F320(*(void *)(a1 + 376));
  v66 += v114 + ((9 * (__clz(v114 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v72 & 0x400) == 0)
  {
LABEL_75:
    if ((v72 & 0x800) == 0) {
      goto LABEL_76;
    }
    goto LABEL_137;
  }
LABEL_136:
  uint64_t v115 = sub_14EB674(*(void *)(a1 + 384));
  v66 += v115 + ((9 * (__clz(v115 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v72 & 0x800) == 0)
  {
LABEL_76:
    if ((v72 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_138;
  }
LABEL_137:
  uint64_t v116 = sub_14EB674(*(void *)(a1 + 392));
  v66 += v116 + ((9 * (__clz(v116 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v72 & 0x1000) == 0)
  {
LABEL_77:
    if ((v72 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t v117 = sub_12D26FC(*(void *)(a1 + 400));
  v66 += v117 + ((9 * (__clz(v117 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 0x2000) == 0)
  {
LABEL_78:
    if ((v72 & 0x4000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t v118 = sub_15A557C(*(void *)(a1 + 408));
  v66 += v118 + ((9 * (__clz(v118 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 0x4000) == 0)
  {
LABEL_79:
    if ((v72 & 0x8000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
LABEL_140:
  uint64_t v119 = sub_14F949C(*(void *)(a1 + 416));
  v66 += v119 + ((9 * (__clz(v119 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v72 & 0x8000) != 0)
  {
LABEL_80:
    uint64_t v76 = sub_14A3CA8(*(void *)(a1 + 424));
    v66 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_81:
  if ((v72 & 0xFF0000) == 0) {
    goto LABEL_105;
  }
  if ((v72 & 0x10000) != 0)
  {
    uint64_t v120 = sub_12C5DC8(*(void *)(a1 + 432));
    v66 += v120 + ((9 * (__clz(v120 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v72 & 0x20000) == 0)
    {
LABEL_84:
      if ((v72 & 0x40000) == 0) {
        goto LABEL_85;
      }
LABEL_144:
      int v121 = *(_DWORD *)(a1 + 448);
      uint64_t v122 = ((9 * (__clz(v121 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v121 >= 0) {
        uint64_t v123 = v122;
      }
      else {
        uint64_t v123 = 11;
      }
      v66 += v123;
      if ((v72 & 0x80000) == 0) {
        goto LABEL_90;
      }
      goto LABEL_86;
    }
  }
  else if ((v72 & 0x20000) == 0)
  {
    goto LABEL_84;
  }
  v66 += ((9 * (__clz(*(void *)(a1 + 440) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v72 & 0x40000) != 0) {
    goto LABEL_144;
  }
LABEL_85:
  if ((v72 & 0x80000) != 0)
  {
LABEL_86:
    int v77 = *(_DWORD *)(a1 + 452);
    uint64_t v78 = ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v77 >= 0) {
      uint64_t v79 = v78;
    }
    else {
      uint64_t v79 = 12;
    }
    v66 += v79;
  }
LABEL_90:
  uint64_t v80 = v66 + 3;
  if ((v72 & 0x100000) == 0) {
    uint64_t v80 = v66;
  }
  if ((v72 & 0x200000) != 0) {
    uint64_t v66 = v80 + 3;
  }
  else {
    uint64_t v66 = v80;
  }
  if ((v72 & 0x400000) != 0)
  {
    int v81 = *(_DWORD *)(a1 + 460);
    uint64_t v82 = ((9 * (__clz(v81 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v81 >= 0) {
      uint64_t v83 = v82;
    }
    else {
      uint64_t v83 = 12;
    }
    v66 += v83;
  }
  if ((v72 & 0x800000) != 0)
  {
    int v84 = *(_DWORD *)(a1 + 464);
    uint64_t v85 = ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v84 >= 0) {
      uint64_t v86 = v85;
    }
    else {
      uint64_t v86 = 12;
    }
    v66 += v86;
  }
LABEL_105:
  if ((v72 & 0x1000000) != 0)
  {
    int v87 = *(_DWORD *)(a1 + 468);
    uint64_t v88 = ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v87 >= 0) {
      uint64_t v89 = v88;
    }
    else {
      uint64_t v89 = 12;
    }
    v66 += v89;
  }
  uint64_t v90 = *(void *)(a1 + 8);
  if (v90)
  {
    unint64_t v124 = v90 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v124 + 31) < 0) {
      uint64_t v125 = *(void *)(v124 + 16);
    }
    else {
      uint64_t v125 = *(unsigned __int8 *)(v124 + 31);
    }
    v66 += v125;
  }
  *(_DWORD *)(a1 + 44) = v66;
  return v66;
}

void sub_14F84A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_151559C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1515628((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_122BB8C((std::string *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_122BB8C((std::string *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_1515628((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    unint64_t v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      *unint64_t v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 192);
  if (v34)
  {
    uint64_t v35 = *(int *)(a1 + 192);
    sub_188CA54((unsigned int *)(a1 + 192), v35 + v34);
    uint64_t v36 = *(void *)(a1 + 200);
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
    memcpy((void *)(v36 + 8 * v35), *(const void **)(a2 + 200), 8 * *(int *)(a2 + 192));
  }
  int v37 = *(_DWORD *)(a2 + 216);
  if (v37)
  {
    uint64_t v38 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    uint64_t v39 = (uint64_t *)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_15156B4((uint64_t *)(a1 + 208), v39, v38, v37, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v40 = *(_DWORD *)(a1 + 216) + v37;
    *(_DWORD *)(a1 + 216) = v40;
    uint64_t v41 = *(int **)(a1 + 224);
    if (*v41 < v40) {
      int *v41 = v40;
    }
  }
  int v42 = *(_DWORD *)(a2 + 240);
  if (v42)
  {
    uint64_t v43 = (uint64_t *)(*(void *)(a2 + 248) + 8);
    uint64_t v44 = (uint64_t *)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_151559C((uint64_t *)(a1 + 232), v44, v43, v42, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v45 = *(_DWORD *)(a1 + 240) + v42;
    *(_DWORD *)(a1 + 240) = v45;
    uint64_t v46 = *(int **)(a1 + 248);
    if (*v46 < v45) {
      *uint64_t v46 = v45;
    }
  }
  int v47 = *(_DWORD *)(a2 + 264);
  if (v47)
  {
    uint64_t v48 = (const std::string **)(*(void *)(a2 + 272) + 8);
    uint64_t v49 = (std::string **)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_188FB98(a1 + 256, v49, v48, v47, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v50 = *(_DWORD *)(a1 + 264) + v47;
    *(_DWORD *)(a1 + 264) = v50;
    uint64_t v51 = *(int **)(a1 + 272);
    if (*v51 < v50) {
      *uint64_t v51 = v50;
    }
  }
  int v52 = *(_DWORD *)(a2 + 288);
  if (v52)
  {
    uint64_t v53 = (uint64_t *)(*(void *)(a2 + 296) + 8);
    uint64_t v54 = (std::string **)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_1515740((std::string *)(a1 + 280), v54, v53, v52, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v55 = *(_DWORD *)(a1 + 288) + v52;
    *(_DWORD *)(a1 + 288) = v55;
    uint64_t v56 = *(int **)(a1 + 296);
    if (*v56 < v55) {
      int *v56 = v55;
    }
  }
  int v57 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v57) {
    goto LABEL_67;
  }
  if (v57)
  {
    uint64_t v58 = (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v59 = *(void *)(a1 + 8);
    uint64_t v60 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
    if (v59) {
      uint64_t v60 = (uint64_t *)*v60;
    }
    sub_1881DF4((std::string **)(a1 + 304), v58, v60);
    if ((v57 & 2) == 0)
    {
LABEL_36:
      if ((v57 & 4) == 0) {
        goto LABEL_37;
      }
      goto LABEL_49;
    }
  }
  else if ((v57 & 2) == 0)
  {
    goto LABEL_36;
  }
  uint64_t v61 = (long long *)(*(void *)(a2 + 312) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v62 = *(void *)(a1 + 8);
  uint64_t v63 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
  if (v62) {
    uint64_t v63 = (uint64_t *)*v63;
  }
  sub_1881DF4((std::string **)(a1 + 312), v61, v63);
  if ((v57 & 4) == 0)
  {
LABEL_37:
    if ((v57 & 8) == 0) {
      goto LABEL_38;
    }
    goto LABEL_52;
  }
LABEL_49:
  uint64_t v64 = (long long *)(*(void *)(a2 + 320) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v65 = *(void *)(a1 + 8);
  uint64_t v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
  if (v65) {
    uint64_t v66 = (uint64_t *)*v66;
  }
  sub_1881DF4((std::string **)(a1 + 320), v64, v66);
  if ((v57 & 8) == 0)
  {
LABEL_38:
    if ((v57 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_55;
  }
LABEL_52:
  uint64_t v67 = (long long *)(*(void *)(a2 + 328) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v68 = *(void *)(a1 + 8);
  uint64_t v69 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
  if (v68) {
    uint64_t v69 = (uint64_t *)*v69;
  }
  sub_1881DF4((std::string **)(a1 + 328), v67, v69);
  if ((v57 & 0x10) == 0)
  {
LABEL_39:
    if ((v57 & 0x20) == 0) {
      goto LABEL_40;
    }
LABEL_58:
    unint64_t v73 = (long long *)(*(void *)(a2 + 344) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v74 = *(void *)(a1 + 8);
    uint64_t v75 = (uint64_t *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
    if (v74) {
      uint64_t v75 = (uint64_t *)*v75;
    }
    sub_1881DF4((std::string **)(a1 + 344), v73, v75);
    if ((v57 & 0x40) == 0)
    {
LABEL_41:
      if ((v57 & 0x80) == 0) {
        goto LABEL_67;
      }
      goto LABEL_64;
    }
    goto LABEL_61;
  }
LABEL_55:
  uint64_t v70 = (long long *)(*(void *)(a2 + 336) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v71 = *(void *)(a1 + 8);
  int v72 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
  if (v71) {
    int v72 = (uint64_t *)*v72;
  }
  sub_1881DF4((std::string **)(a1 + 336), v70, v72);
  if ((v57 & 0x20) != 0) {
    goto LABEL_58;
  }
LABEL_40:
  if ((v57 & 0x40) == 0) {
    goto LABEL_41;
  }
LABEL_61:
  uint64_t v76 = (long long *)(*(void *)(a2 + 352) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v77 = *(void *)(a1 + 8);
  uint64_t v78 = (uint64_t *)(v77 & 0xFFFFFFFFFFFFFFFCLL);
  if (v77) {
    uint64_t v78 = (uint64_t *)*v78;
  }
  sub_1881DF4((std::string **)(a1 + 352), v76, v78);
  if ((v57 & 0x80) != 0)
  {
LABEL_64:
    uint64_t v79 = (long long *)(*(void *)(a2 + 360) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v80 = *(void *)(a1 + 8);
    int v81 = (uint64_t *)(v80 & 0xFFFFFFFFFFFFFFFCLL);
    if (v80) {
      int v81 = (uint64_t *)*v81;
    }
    sub_1881E1C((std::string **)(a1 + 360), v79, v81);
  }
LABEL_67:
  if ((v57 & 0xFF00) == 0) {
    goto LABEL_141;
  }
  if ((v57 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v82 = *(std::string **)(a1 + 368);
    if (!v82)
    {
      uint64_t v83 = *(void *)(a1 + 8);
      int v84 = (void *)(v83 & 0xFFFFFFFFFFFFFFFCLL);
      if (v83) {
        int v84 = (void *)*v84;
      }
      uint64_t v82 = (std::string *)sub_15C2014((uint64_t)v84);
      *(void *)(a1 + 368) = v82;
    }
    if (*(void *)(a2 + 368)) {
      uint64_t v85 = *(uint64_t (****)())(a2 + 368);
    }
    else {
      uint64_t v85 = &off_253F530;
    }
    sub_1113E40(v82, (uint64_t)v85);
  }
  if ((v57 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x200u;
    uint64_t v86 = *(void *)(a1 + 376);
    if (!v86)
    {
      uint64_t v87 = *(void *)(a1 + 8);
      uint64_t v88 = (void *)(v87 & 0xFFFFFFFFFFFFFFFCLL);
      if (v87) {
        uint64_t v88 = (void *)*v88;
      }
      sub_147937C((uint64_t)v88);
      *(void *)(a1 + 376) = v86;
    }
    if (*(void *)(a2 + 376)) {
      uint64_t v89 = *(uint64_t (****)())(a2 + 376);
    }
    else {
      uint64_t v89 = &off_25398D0;
    }
    sub_13F17EC(v86, (uint64_t)v89);
  }
  if ((v57 & 0x400) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x400u;
    uint64_t v90 = *(void *)(a1 + 384);
    if (!v90)
    {
      uint64_t v91 = *(void *)(a1 + 8);
      unint64_t v92 = (void *)(v91 & 0xFFFFFFFFFFFFFFFCLL);
      if (v91) {
        unint64_t v92 = (void *)*v92;
      }
      sub_14FB7B8((uint64_t)v92);
      *(void *)(a1 + 384) = v90;
    }
    if (*(void *)(a2 + 384)) {
      uint64_t v93 = *(uint64_t (****)())(a2 + 384);
    }
    else {
      uint64_t v93 = &off_253B598;
    }
    sub_14ED03C(v90, (uint64_t)v93);
    if ((v57 & 0x800) == 0)
    {
LABEL_88:
      if ((v57 & 0x1000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_109;
    }
  }
  else if ((v57 & 0x800) == 0)
  {
    goto LABEL_88;
  }
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v94 = *(void *)(a1 + 392);
  if (!v94)
  {
    uint64_t v95 = *(void *)(a1 + 8);
    uint64_t v96 = (void *)(v95 & 0xFFFFFFFFFFFFFFFCLL);
    if (v95) {
      uint64_t v96 = (void *)*v96;
    }
    sub_14FB7B8((uint64_t)v96);
    *(void *)(a1 + 392) = v94;
  }
  if (*(void *)(a2 + 392)) {
    uint64_t v97 = *(uint64_t (****)())(a2 + 392);
  }
  else {
    uint64_t v97 = &off_253B598;
  }
  sub_14ED03C(v94, (uint64_t)v97);
  if ((v57 & 0x1000) == 0)
  {
LABEL_89:
    if ((v57 & 0x2000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_117;
  }
LABEL_109:
  *(_DWORD *)(a1 + 40) |= 0x1000u;
  unint64_t v98 = *(std::string **)(a1 + 400);
  if (!v98)
  {
    uint64_t v99 = *(void *)(a1 + 8);
    uint64_t v100 = (void *)(v99 & 0xFFFFFFFFFFFFFFFCLL);
    if (v99) {
      uint64_t v100 = (void *)*v100;
    }
    unint64_t v98 = (std::string *)sub_12D294C((uint64_t)v100);
    *(void *)(a1 + 400) = v98;
  }
  if (*(void *)(a2 + 400)) {
    unint64_t v101 = *(uint64_t (****)(uint64_t))(a2 + 400);
  }
  else {
    unint64_t v101 = &off_25315C8;
  }
  sub_11D2930(v98, (uint64_t)v101);
  if ((v57 & 0x2000) == 0)
  {
LABEL_90:
    if ((v57 & 0x4000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_125;
  }
LABEL_117:
  *(_DWORD *)(a1 + 40) |= 0x2000u;
  uint64_t v102 = *(std::string **)(a1 + 408);
  if (!v102)
  {
    uint64_t v103 = *(void *)(a1 + 8);
    unint64_t v104 = (void *)(v103 & 0xFFFFFFFFFFFFFFFCLL);
    if (v103) {
      unint64_t v104 = (void *)*v104;
    }
    uint64_t v102 = (std::string *)sub_15A5754((uint64_t)v104);
    *(void *)(a1 + 408) = v102;
  }
  if (*(void *)(a2 + 408)) {
    uint64_t v105 = *(uint64_t (****)())(a2 + 408);
  }
  else {
    uint64_t v105 = &off_253F108;
  }
  sub_1598BE8(v102, (uint64_t)v105);
  if ((v57 & 0x4000) == 0)
  {
LABEL_91:
    if ((v57 & 0x8000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_133;
  }
LABEL_125:
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v106 = *(std::string **)(a1 + 416);
  if (!v106)
  {
    uint64_t v107 = *(void *)(a1 + 8);
    uint64_t v108 = (void *)(v107 & 0xFFFFFFFFFFFFFFFCLL);
    if (v107) {
      uint64_t v108 = (void *)*v108;
    }
    uint64_t v106 = (std::string *)sub_14FBD64((uint64_t)v108);
    *(void *)(a1 + 416) = v106;
  }
  if (*(void *)(a2 + 416)) {
    uint64_t v109 = *(void *(****)(void *))(a2 + 416);
  }
  else {
    uint64_t v109 = &off_253BDC0;
  }
  sub_1197FD8(v106, (uint64_t)v109);
  if ((v57 & 0x8000) != 0)
  {
LABEL_133:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v110 = *(void *)(a1 + 424);
    if (!v110)
    {
      uint64_t v111 = *(void *)(a1 + 8);
      uint64_t v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFFCLL);
      if (v111) {
        uint64_t v112 = (void *)*v112;
      }
      sub_14A47B4((uint64_t)v112);
      *(void *)(a1 + 424) = v110;
    }
    if (*(void *)(a2 + 424)) {
      unint64_t v113 = *(uint64_t (****)())(a2 + 424);
    }
    else {
      unint64_t v113 = &off_253A3B0;
    }
    sub_14A3EEC(v110, (uint64_t)v113);
  }
LABEL_141:
  if ((v57 & 0xFF0000) == 0) {
    goto LABEL_152;
  }
  if ((v57 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v116 = *(std::string **)(a1 + 432);
    if (!v116)
    {
      uint64_t v117 = *(void *)(a1 + 8);
      uint64_t v118 = (void *)(v117 & 0xFFFFFFFFFFFFFFFCLL);
      if (v117) {
        uint64_t v118 = (void *)*v118;
      }
      uint64_t v116 = (std::string *)sub_12C6100((uint64_t)v118);
      *(void *)(a1 + 432) = v116;
    }
    if (*(void *)(a2 + 432)) {
      uint64_t v119 = *(void *(****)(void *))(a2 + 432);
    }
    else {
      uint64_t v119 = &off_25311A0;
    }
    sub_12C5F4C(v116, (uint64_t)v119);
    if ((v57 & 0x20000) == 0)
    {
LABEL_144:
      if ((v57 & 0x40000) == 0) {
        goto LABEL_145;
      }
      goto LABEL_167;
    }
  }
  else if ((v57 & 0x20000) == 0)
  {
    goto LABEL_144;
  }
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  if ((v57 & 0x40000) == 0)
  {
LABEL_145:
    if ((v57 & 0x80000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_168;
  }
LABEL_167:
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  if ((v57 & 0x80000) == 0)
  {
LABEL_146:
    if ((v57 & 0x100000) == 0) {
      goto LABEL_147;
    }
    goto LABEL_169;
  }
LABEL_168:
  *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
  if ((v57 & 0x100000) == 0)
  {
LABEL_147:
    if ((v57 & 0x200000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_170;
  }
LABEL_169:
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  if ((v57 & 0x200000) == 0)
  {
LABEL_148:
    if ((v57 & 0x400000) == 0) {
      goto LABEL_149;
    }
LABEL_171:
    *(_DWORD *)(a1 + 460) = *(_DWORD *)(a2 + 460);
    if ((v57 & 0x800000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_150;
  }
LABEL_170:
  *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
  if ((v57 & 0x400000) != 0) {
    goto LABEL_171;
  }
LABEL_149:
  if ((v57 & 0x800000) != 0) {
LABEL_150:
  }
    *(_DWORD *)(a1 + 464) = *(_DWORD *)(a2 + 464);
LABEL_151:
  *(_DWORD *)(a1 + 40) |= v57;
LABEL_152:
  if ((v57 & 0x1000000) != 0)
  {
    int v114 = *(_DWORD *)(a2 + 468);
    *(_DWORD *)(a1 + 40) |= 0x1000000u;
    *(_DWORD *)(a1 + 468) = v114;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v115 = *(void *)(a2 + 8);
  if (v115)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v115 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14F8E7C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_14F2374(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_14F8FA4(a1 + 72);
    if (result)
    {
      uint64_t result = sub_14F8FA4(a1 + 168);
      if (result)
      {
        uint64_t result = sub_14F8FFC(a1 + 208);
        if (result)
        {
          uint64_t v6 = *(unsigned int *)(a1 + 240);
          while ((int)v6 >= 1)
          {
            uint64_t v7 = v6 - 1;
            char v8 = sub_14F2374(*(void *)(*(void *)(a1 + 248) + 8 * v6));
            uint64_t result = 0;
            uint64_t v6 = v7;
            if ((v8 & 1) == 0) {
              return result;
            }
          }
          int v9 = *(_DWORD *)(a1 + 40);
          if ((v9 & 0x100) != 0)
          {
            uint64_t result = sub_15BA3C8(*(void *)(a1 + 368));
            if (!result) {
              return result;
            }
            int v9 = *(_DWORD *)(a1 + 40);
          }
          if ((v9 & 0x200) != 0)
          {
            uint64_t result = sub_13F1C1C(*(void *)(a1 + 376));
            if (!result) {
              return result;
            }
            int v9 = *(_DWORD *)(a1 + 40);
          }
          if ((v9 & 0x400) != 0)
          {
            uint64_t result = sub_14EF06C(*(void *)(a1 + 384));
            if (!result) {
              return result;
            }
            int v9 = *(_DWORD *)(a1 + 40);
          }
          if ((v9 & 0x800) != 0)
          {
            uint64_t result = sub_14EF06C(*(void *)(a1 + 392));
            if (!result) {
              return result;
            }
            int v9 = *(_DWORD *)(a1 + 40);
          }
          if ((v9 & 0x2000) != 0)
          {
            uint64_t result = sub_1599504(*(void *)(a1 + 408));
            if (!result) {
              return result;
            }
            int v9 = *(_DWORD *)(a1 + 40);
          }
          if ((v9 & 0x8000) == 0) {
            return 1;
          }
          uint64_t result = sub_14A4178(*(void *)(a1 + 424));
          if (result) {
            return 1;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_14F8FA4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_14F8E7C(*(void *)(*(void *)(a1 + 16) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

uint64_t sub_14F8FFC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_15993A0(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_14F9088@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocalMatchSet");
}

void *sub_14F9098(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14F910C(void *a1)
{
  sub_14F9098(a1);

  operator delete();
}

char *sub_14F9144(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_39;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v21 + 1;
    unsigned int v8 = *v21;
    if (*v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v21 + 2;
      }
    }
    uint64_t v21 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        *(void *)(a1 + 24) = *(void *)v7;
        uint64_t v21 = v7 + 8;
        int v5 = 1;
        goto LABEL_28;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      int v14 = v7 + 1;
      unint64_t v15 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        uint64_t v21 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v21) {
          goto LABEL_40;
        }
        unint64_t v15 = v18;
      }
      else
      {
        int v14 = v7 + 2;
LABEL_25:
        uint64_t v21 = v14;
      }
      if (sub_14A2810(v15))
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 32) = v15;
      }
      else
      {
        if (*v6) {
          int v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v15, v19);
      }
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v21;
    }
    uint64_t v21 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v21) {
      goto LABEL_40;
    }
LABEL_28:
    if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
      goto LABEL_39;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_39;
  }
LABEL_40:
  uint64_t v21 = 0;
LABEL_39:
  *(_DWORD *)(a1 + 16) |= v5;
  return v21;
}

unsigned char *sub_14F933C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14F949C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 32);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14F9528()
{
  return 1;
}

void *sub_14F9530@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocalMatchSetScope");
}

char *sub_14F9540(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D4138(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_14F95D0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14F9654((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_14F9654(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253BDE8)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B9F30();
      operator delete();
    }
    uint64_t v4 = *(void **)(a1 + 40);
    if (v4)
    {
      sub_14E135C(v4);
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_14F4EFC(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_1463FF8();
      operator delete();
    }
  }
  return result;
}

void sub_14F9738(void *a1)
{
  sub_14F95D0(a1);

  operator delete();
}

uint64_t sub_14F9770(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_21:
    uint64_t result = sub_14E1AF0(*(void *)(v1 + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_22;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  uint64_t result = sub_15B9F6C(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_22:
  uint64_t result = sub_14F5248(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_1464034(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  if ((v2 & 0x300) != 0)
  {
    *(_DWORD *)(v1 + 96) = 0;
    *(void *)(v1 + 88) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_14F985C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v12 = *(void **)(a1 + 32);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          int v12 = sub_15C2014((uint64_t)v13);
          *(void *)(a1 + 32) = v12;
          uint64_t v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v14 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v12, v8);
        goto LABEL_58;
      case 2u:
        if (v9 != 17) {
          goto LABEL_51;
        }
        uint64_t v16 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v16;
        goto LABEL_23;
      case 3u:
        if (v9 != 25) {
          goto LABEL_51;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 72) = v17;
        goto LABEL_23;
      case 4u:
        if (v9 != 33) {
          goto LABEL_51;
        }
        uint64_t v18 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 0x80u;
        *(void *)(a1 + 80) = v18;
        goto LABEL_23;
      case 5u:
        if (v9 != 41) {
          goto LABEL_51;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 0x100u;
        *(void *)(a1 + 88) = v19;
LABEL_23:
        *(void *)uint64_t v38 = v15;
        goto LABEL_59;
      case 6u:
        if (v9 != 50) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 40);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          sub_14FB7B8((uint64_t)v21);
          uint64_t v20 = v22;
          *(void *)(a1 + 40) = v22;
          uint64_t v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v14 = (uint64_t)sub_14F6888(a3, v20, v8);
        goto LABEL_58;
      case 7u:
        if (v9 != 58) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 48);
        if (!v23)
        {
          int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v24 = (void *)*v24;
          }
          uint64_t v23 = sub_14FBD08((uint64_t)v24);
          *(void *)(a1 + 48) = v23;
          uint64_t v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v14 = (uint64_t)sub_14F6918(a3, v23, v8);
        goto LABEL_58;
      case 9u:
        if (v9 != 74) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          sub_1478F54((uint64_t)v26);
          uint64_t v25 = v27;
          *(void *)(a1 + 56) = v27;
          uint64_t v8 = *(unsigned __int8 **)v38;
        }
        uint64_t v14 = sub_11793D8(a3, v25, v8);
        goto LABEL_58;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 24), v29);
        uint64_t v14 = (uint64_t)sub_188C244(v30, *(char **)v38, (uint64_t)a3);
        goto LABEL_58;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_51;
        }
        v5 |= 0x200u;
        uint64_t v31 = (char *)(v8 + 1);
        int v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v36 = sub_188C0D0((uint64_t)v8, v32);
          *(void *)uint64_t v38 = v36;
          *(_DWORD *)(a1 + 96) = v37;
          if (!v36) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_50:
          *(void *)uint64_t v38 = v31;
          *(_DWORD *)(a1 + 96) = v32;
        }
        goto LABEL_59;
      default:
LABEL_51:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v38;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v9, v35, (char *)v8, a3);
LABEL_58:
          *(void *)uint64_t v38 = v14;
          if (!v14) {
            goto LABEL_66;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_66:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

unsigned char *sub_14F9C38(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15BA180(v7, (unint64_t)v9, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 0x40) == 0)
  {
LABEL_4:
    if ((v6 & 0x80) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 72);
  unsigned char *v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 0x80) == 0)
  {
LABEL_5:
    if ((v6 & 0x100) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 80);
  unsigned char *v4 = 33;
  *(void *)(v4 + 1) = v12;
  v4 += 9;
  if ((v6 & 0x100) == 0)
  {
LABEL_6:
    if ((v6 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 88);
  unsigned char *v4 = 41;
  *(void *)(v4 + 1) = v13;
  v4 += 9;
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }
LABEL_30:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 40);
  unsigned char *v4 = 50;
  unsigned int v15 = *(_DWORD *)(v14 + 36);
  v4[1] = v15;
  if (v15 > 0x7F) {
    uint64_t v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    uint64_t v16 = v4 + 2;
  }
  char v4 = sub_14E7E28(v14, v16, a3);
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 48);
  unsigned char *v4 = 58;
  unsigned int v18 = *(_DWORD *)(v17 + 44);
  v4[1] = v18;
  if (v18 > 0x7F) {
    uint64_t v19 = sub_188A9CC(v18, v4 + 1);
  }
  else {
    uint64_t v19 = v4 + 2;
  }
  char v4 = (unsigned char *)sub_14F6C78(v17, v19, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_9:
    if ((v6 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 56);
  unsigned char *v4 = 74;
  unsigned int v21 = *(_DWORD *)(v20 + 28);
  v4[1] = v21;
  if (v21 > 0x7F) {
    uint64_t v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    uint64_t v22 = v4 + 2;
  }
  char v4 = sub_1466BF0(v20, v22, a3);
  if ((v6 & 1) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_55;
    }
    goto LABEL_49;
  }
LABEL_48:
  char v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v23 = *(_DWORD *)(a1 + 96);
  unsigned char *v4 = 88;
  v4[1] = v23;
  if (v23 > 0x7F)
  {
    v4[1] = v23 | 0x80;
    unsigned int v24 = v23 >> 7;
    v4[2] = v23 >> 7;
    v4 += 3;
    if (v23 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v25 = v24 >> 14;
        v24 >>= 7;
        *v4++ = v24;
      }
      while (v25);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_55:
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    int v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    int v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_14FA024(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_21;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v8 = sub_15BA324(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_12;
    }
LABEL_29:
    uint64_t v13 = sub_14F7B84(*(void *)(a1 + 48));
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v12 = sub_14EB674(*(void *)(a1 + 40));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_29;
  }
LABEL_12:
  if ((v2 & 0x10) != 0)
  {
LABEL_13:
    uint64_t v9 = sub_1468738(*(void *)(a1 + 56));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v10 = v3 + 9;
  if ((v2 & 0x20) == 0) {
    uint64_t v10 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v10 += 9;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t result = v10 + 9;
  }
  else {
    uint64_t result = v10;
  }
LABEL_21:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      result += 9;
    }
    if ((v2 & 0x200) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_14FA208(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_33;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_15C2014((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F530;
    }
    sub_1113E40(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_14FB7B8((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_253B598;
    }
    sub_14ED03C(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_49;
    }
LABEL_41:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_14FBD08((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unsigned int v21 = &off_253BBE8;
    }
    sub_14F84A8(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_57;
    }
LABEL_49:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unsigned int v24 = (void *)*v24;
      }
      sub_1478F54((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v25 = &off_2539528;
    }
    sub_146945C(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_58;
    }
LABEL_57:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_58:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
    }
    if ((v4 & 0x200) != 0) {
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14FA454(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15BA3C8(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_14EF06C(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_14F8E7C(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_146A1C8(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14FA4C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocalTransaction");
}

void *sub_14FA4D8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14FA55C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_14FA55C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253BE50)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B9F30();
      operator delete();
    }
    int v4 = *(void **)(a1 + 40);
    if (v4)
    {
      sub_14F95D0(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_13F3D8C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_12CCE4C(v6);
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_15B6D48();
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_149FF5C();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 80);
    if (result)
    {
      sub_149FF5C();
      operator delete();
    }
  }
  return result;
}

void sub_14FA6A0(void *a1)
{
  sub_14FA4D8(a1);

  operator delete();
}

uint64_t sub_14FA6D8(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 16);
  if (!v2) {
    goto LABEL_11;
  }
  if (*(unsigned char *)(result + 16))
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
  if ((*(unsigned char *)(result + 16) & 2) == 0) {
    goto LABEL_4;
  }
LABEL_19:
  uint64_t result = sub_15B9F6C(*(void *)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = sub_14F9770(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = sub_13F3DC8(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_23:
    uint64_t result = sub_15B6D84(*(void *)(v1 + 64));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_22:
  uint64_t result = sub_12C8AD0(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
    goto LABEL_23;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_24:
  uint64_t result = sub_149FF98(*(void *)(v1 + 72));
  if (v2 < 0) {
LABEL_10:
  }
    uint64_t result = sub_149FF98(*(void *)(v1 + 80));
LABEL_11:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(void *)(v3 + 80) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_14FA7D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v33, (uint64_t)a3);
        goto LABEL_64;
      case 2u:
        if (v9 != 17) {
          goto LABEL_57;
        }
        v5 |= 0x100u;
        *(void *)(a1 + 88) = *(void *)v8;
        *(void *)int v33 = v8 + 8;
        goto LABEL_65;
      case 3u:
        if (v9 != 26) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_15C2014((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          uint64_t v8 = *(unsigned __int8 **)v33;
        }
        uint64_t v15 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v16, v8);
        goto LABEL_64;
      case 4u:
        if (v9 != 34) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 40);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          sub_14FBDE0((uint64_t)v19);
          uint64_t v18 = v20;
          *(void *)(a1 + 40) = v20;
          uint64_t v8 = *(unsigned __int8 **)v33;
        }
        uint64_t v15 = sub_14FABDC(a3, v18, v8);
        goto LABEL_64;
      case 5u:
        if (v9 != 42) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v21 = *(void *)(a1 + 48);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          sub_13F4A18((uint64_t)v22);
          uint64_t v21 = v23;
          *(void *)(a1 + 48) = v23;
          uint64_t v8 = *(unsigned __int8 **)v33;
        }
        uint64_t v15 = (uint64_t)sub_14FAC6C(a3, v21, v8);
        goto LABEL_64;
      case 6u:
        if (v9 != 50) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 56);
        if (!v24)
        {
          unsigned int v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v25 = (void *)*v25;
          }
          uint64_t v24 = sub_12CD40C((uint64_t)v25);
          *(void *)(a1 + 56) = v24;
          uint64_t v8 = *(unsigned __int8 **)v33;
        }
        uint64_t v15 = sub_12C8B8C(a3, v24, v8);
        goto LABEL_64;
      case 7u:
        if (v9 != 58) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v26 = *(void **)(a1 + 64);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_15C1E94((uint64_t)v27);
          *(void *)(a1 + 64) = v26;
          uint64_t v8 = *(unsigned __int8 **)v33;
        }
        uint64_t v15 = (uint64_t)sub_11EA9CC(a3, (uint64_t)v26, v8);
        goto LABEL_64;
      case 8u:
        if (v9 != 66) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v28 = *(void *)(a1 + 72);
        if (v28) {
          goto LABEL_56;
        }
        int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v29 = (void *)*v29;
        }
        uint64_t v28 = sub_14A243C((uint64_t)v29);
        *(void *)(a1 + 72) = v28;
        goto LABEL_55;
      case 9u:
        if (v9 != 74) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v28 = *(void *)(a1 + 80);
        if (v28) {
          goto LABEL_56;
        }
        uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v30 = (void *)*v30;
        }
        uint64_t v28 = sub_14A243C((uint64_t)v30);
        *(void *)(a1 + 80) = v28;
LABEL_55:
        uint64_t v8 = *(unsigned __int8 **)v33;
LABEL_56:
        uint64_t v15 = (uint64_t)sub_12C6500(a3, v28, v8);
        goto LABEL_64;
      default:
LABEL_57:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v33;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v32, (char *)v8, a3);
LABEL_64:
          *(void *)int v33 = v15;
          if (!v15) {
            goto LABEL_70;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          *(void *)int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

uint64_t sub_14FABDC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14F985C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14FAC6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F3E38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14FACFC(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x100) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 88);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v9 = *(_DWORD *)(v8 + 20);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  char v4 = sub_15BA180(v8, (unint64_t)v10, a3);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  unsigned char *v4 = 34;
  unsigned int v12 = *(_DWORD *)(v11 + 20);
  v4[1] = v12;
  if (v12 > 0x7F) {
    uint64_t v13 = sub_188A9CC(v12, v4 + 1);
  }
  else {
    uint64_t v13 = v4 + 2;
  }
  char v4 = sub_14F9C38(v11, (unint64_t)v13, a3);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 48);
  unsigned char *v4 = 42;
  unsigned int v15 = *(_DWORD *)(v14 + 20);
  v4[1] = v15;
  if (v15 > 0x7F) {
    uint64_t v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    uint64_t v16 = v4 + 2;
  }
  char v4 = sub_13F427C(v14, (unint64_t)v16, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 56);
  unsigned char *v4 = 50;
  unsigned int v18 = *(_DWORD *)(v17 + 20);
  v4[1] = v18;
  if (v18 > 0x7F) {
    uint64_t v19 = sub_188A9CC(v18, v4 + 1);
  }
  else {
    uint64_t v19 = v4 + 2;
  }
  char v4 = sub_12CD10C(v17, v19, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_8:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_45;
  }
LABEL_39:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 64);
  unsigned char *v4 = 58;
  unsigned int v21 = *(_DWORD *)(v20 + 20);
  v4[1] = v21;
  if (v21 > 0x7F) {
    uint64_t v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    uint64_t v22 = v4 + 2;
  }
  char v4 = sub_15B7AE4(v20, v22, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_9:
    if ((v6 & 0x80) == 0) {
      goto LABEL_57;
    }
    goto LABEL_51;
  }
LABEL_45:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 72);
  unsigned char *v4 = 66;
  unsigned int v24 = *(_DWORD *)(v23 + 40);
  v4[1] = v24;
  if (v24 > 0x7F) {
    unsigned int v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    unsigned int v25 = v4 + 2;
  }
  char v4 = sub_14A01B4(v23, v25, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_51:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 80);
    unsigned char *v4 = 74;
    unsigned int v27 = *(_DWORD *)(v26 + 40);
    v4[1] = v27;
    if (v27 > 0x7F) {
      uint64_t v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      uint64_t v28 = v4 + 2;
    }
    char v4 = sub_14A01B4(v26, v28, a3);
  }
LABEL_57:
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    int v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    int v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_14FB0EC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v7 = sub_15BA324(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = sub_14FA024(*(void *)(a1 + 40));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_13F46C4(*(void *)(a1 + 48));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v13 = sub_12CD2A4(*(void *)(a1 + 56));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v14 = sub_15B806C(*(void *)(a1 + 64));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_26:
  uint64_t v15 = sub_14A02F8(*(void *)(a1 + 72));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_16:
    uint64_t v8 = sub_14A02F8(*(void *)(a1 + 80));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v2 & 0x100) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v16 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    result += v17;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_14FB318(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_70;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_20;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  unsigned int v9 = *(std::string **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    unsigned int v9 = (std::string *)sub_15C2014((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_253F530;
  }
  sub_1113E40(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_20:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    sub_14FBDE0((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    unint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    unint64_t v16 = &off_253BDE8;
  }
  sub_14FA208(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_36:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    unsigned int v21 = *(std::string **)(a1 + 56);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      unsigned int v21 = (std::string *)sub_12CD40C((uint64_t)v23);
      *(void *)(a1 + 56) = v21;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v24 = *(uint64_t (****)(uint64_t))(a2 + 56);
    }
    else {
      unsigned int v24 = &off_2531408;
    }
    sub_12C8C1C(v21, (uint64_t)v24);
    if ((v4 & 0x20) == 0) {
      goto LABEL_52;
    }
    goto LABEL_44;
  }
LABEL_28:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v17 = *(std::string **)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    sub_13F4A18((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    uint64_t v20 = &off_2537338;
  }
  sub_13F48A4(v17, (uint64_t)v20);
  if ((v4 & 0x10) != 0) {
    goto LABEL_36;
  }
LABEL_7:
  if ((v4 & 0x20) != 0)
  {
LABEL_44:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unsigned int v25 = *(std::string **)(a1 + 64);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      unsigned int v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        unsigned int v27 = (void *)*v27;
      }
      unsigned int v25 = (std::string *)sub_15C1E94((uint64_t)v27);
      *(void *)(a1 + 64) = v25;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v28 = &off_253F3D0;
    }
    sub_15B86B8(v25, (uint64_t)v28);
  }
LABEL_52:
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v29 = *(std::string **)(a1 + 72);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      unint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        unint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = (std::string *)sub_14A243C((uint64_t)v31);
      *(void *)(a1 + 72) = v29;
    }
    if (*(void *)(a2 + 72)) {
      int v32 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      int v32 = &off_253A320;
    }
    sub_14A03A8(v29, (uint64_t)v32);
  }
  if ((v4 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v33 = *(std::string **)(a1 + 80);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = (std::string *)sub_14A243C((uint64_t)v35);
      *(void *)(a1 + 80) = v33;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v36 = &off_253A320;
    }
    sub_14A03A8(v33, (uint64_t)v36);
  }
LABEL_70:
  if ((v4 & 0x100) != 0)
  {
    uint64_t v37 = *(void *)(a2 + 88);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(void *)(a1 + 88) = v37;
  }
  uint64_t v38 = *(void *)(a2 + 8);
  if (v38)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v38 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14FB5F4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15BA3C8(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_14FA454(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_13F49DC(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_15B8CAC(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14FB668@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocalLogEntry");
}

void *sub_14FB678(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BC748;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

uint64_t sub_14FB700(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BC7C8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = 0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

double sub_14FB7B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_14E11A4(v2, a1, 0);
}

void *sub_14FB818(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BC8C8;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

double sub_14FB8A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24BC948;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = 0;
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = &qword_2550250;
  *(void *)(v2 + 144) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 184) = 0u;
  *(_OWORD *)(v2 + 200) = 0u;
  *(_OWORD *)(v2 + 216) = 0u;
  *(_OWORD *)(v2 + 232) = 0u;
  *(_OWORD *)(v2 + 248) = 0u;
  *(_DWORD *)(v2 + 264) = 0;
  return result;
}

void *sub_14FB990(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BC9C8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_14FBA14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BCA48;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_14FBAB8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24BCAC8;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_14FBB44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = &off_24BCB48;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_14FBBE8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BCBC8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_14FBC6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BCC48;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_14FBD08(uint64_t a1)
{
  if (!a1)
  {
    sub_15157BC();
  }

  return sub_14F4DF4(v3, a1, 0);
}

uint64_t sub_14FBD64(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24BCD48;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_14FBDE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24BCDC8;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_DWORD *)(v2 + 96) = 0;
  return result;
}

double sub_14FBE74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24BCE48;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  return result;
}

void *sub_14FBF04(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = &off_24BCEC8;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = a2;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = &qword_2550250;
  a1[11] = 0;
  a1[12] = 0;
  return a1;
}

void sub_14FBF84(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_14FBFB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 64);
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14FC06C(uint64_t a1)
{
  sub_14FBFB4(a1);

  operator delete();
}

unsigned char *sub_14FC0A4(uint64_t a1)
{
  double result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 0x1E) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_14FC13C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v49 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 1);
      unsigned int v9 = **(unsigned char **)v49;
      if ((char)**(unsigned char **)v49 < 0)
      {
        int v10 = (char)*v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v49, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(*(void *)v49 + 2);
        }
      }
      *(void *)uint64_t v49 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_74;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v13 = *(void *)(a1 + 8);
          uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
          if (v13) {
            uint64_t v14 = (uint64_t *)*v14;
          }
          uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 80), v14);
          unint64_t v16 = (void *)sub_188C244(v15, *(char **)v49, (uint64_t)a3);
          goto LABEL_83;
        case 2u:
          if (v9 != 21) {
            goto LABEL_74;
          }
          v5 |= 2u;
          *(_DWORD *)(a1 + 88) = *(_DWORD *)v8;
          *(void *)uint64_t v49 = v8 + 4;
          goto LABEL_84;
        case 3u:
          if (v9 != 24) {
            goto LABEL_74;
          }
          v5 |= 4u;
          uint64_t v18 = (char *)(v8 + 1);
          LODWORD(v17) = *v8;
          if ((v17 & 0x80) == 0) {
            goto LABEL_19;
          }
          int v19 = *v18;
          uint64_t v17 = v17 + (v19 << 7) - 128;
          if (v19 < 0)
          {
            uint64_t v41 = sub_188C138((uint64_t)v8, v17);
            *(void *)uint64_t v49 = v41;
            *(_DWORD *)(a1 + 92) = v42;
            if (!v41) {
              goto LABEL_89;
            }
          }
          else
          {
            uint64_t v18 = (char *)(v8 + 2);
LABEL_19:
            *(void *)uint64_t v49 = v18;
            *(_DWORD *)(a1 + 92) = v17;
          }
          goto LABEL_84;
        case 4u:
          if (v9 != 32) {
            goto LABEL_74;
          }
          v5 |= 8u;
          unsigned int v21 = (char *)(v8 + 1);
          LODWORD(v20) = *v8;
          if ((v20 & 0x80) == 0) {
            goto LABEL_24;
          }
          int v22 = *v21;
          uint64_t v20 = v20 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v43 = sub_188C138((uint64_t)v8, v20);
            *(void *)uint64_t v49 = v43;
            *(_DWORD *)(a1 + 96) = v44;
            if (!v43) {
              goto LABEL_89;
            }
          }
          else
          {
            unsigned int v21 = (char *)(v8 + 2);
LABEL_24:
            *(void *)uint64_t v49 = v21;
            *(_DWORD *)(a1 + 96) = v20;
          }
          goto LABEL_84;
        case 5u:
          if (v9 != 40) {
            goto LABEL_74;
          }
          v5 |= 0x10u;
          unsigned int v24 = (char *)(v8 + 1);
          LODWORD(v23) = *v8;
          if ((v23 & 0x80) == 0) {
            goto LABEL_29;
          }
          int v25 = *v24;
          uint64_t v23 = v23 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v45 = sub_188C138((uint64_t)v8, v23);
            *(void *)uint64_t v49 = v45;
            *(_DWORD *)(a1 + 100) = v46;
            if (!v45) {
              goto LABEL_89;
            }
          }
          else
          {
            unsigned int v24 = (char *)(v8 + 2);
LABEL_29:
            *(void *)uint64_t v49 = v24;
            *(_DWORD *)(a1 + 100) = v23;
          }
          goto LABEL_84;
        case 6u:
          if (v9 == 48)
          {
            uint64_t v26 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v49 = v26 + 1;
              int v27 = v26[1];
              if ((char)v26[1] < 0)
              {
                int v28 = v27 + (v26[2] << 7);
                int v27 = v28 - 128;
                if ((char)v26[2] < 0)
                {
                  uint64_t v26 = (unsigned __int8 *)sub_188C138((uint64_t)(v26 + 1), (v28 - 128));
                  int v27 = v29;
                }
                else
                {
                  v26 += 3;
                }
              }
              else
              {
                v26 += 2;
              }
              *(void *)uint64_t v49 = v26;
              uint64_t v30 = *(unsigned int *)(a1 + 48);
              if (v30 == *(_DWORD *)(a1 + 52))
              {
                int v31 = v30 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v30 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v27;
                uint64_t v26 = *(unsigned __int8 **)v49;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v27;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 48) = v31;
              if (!v26) {
                goto LABEL_89;
              }
              if (*(void *)a3 <= (unint64_t)v26 || *v26 != 48) {
                goto LABEL_84;
              }
            }
          }
          if (v9 != 50) {
            goto LABEL_74;
          }
          unint64_t v16 = sub_188C2BC((unsigned int *)(a1 + 48), v8, (uint64_t)a3);
          goto LABEL_83;
        case 7u:
          if (v9 == 56)
          {
            uint64_t v32 = (uint64_t)(v8 - 1);
            while (1)
            {
              *(void *)uint64_t v49 = v32 + 1;
              unint64_t v33 = *(unsigned __int8 *)(v32 + 1);
              uint64_t v34 = (char *)(v32 + 2);
              if (*(char *)(v32 + 1) < 0)
              {
                int v35 = *v34;
                int v36 = v33 + (v35 << 7);
                unint64_t v33 = (v36 - 128);
                if (v35 < 0)
                {
                  *(void *)uint64_t v49 = sub_188C138(v32 + 1, (v36 - 128));
                  if (!*(void *)v49) {
                    goto LABEL_89;
                  }
                  unint64_t v33 = v39;
                  goto LABEL_50;
                }
                uint64_t v34 = (char *)(v32 + 3);
              }
              *(void *)uint64_t v49 = v34;
LABEL_50:
              if (sub_149F9E0(v33))
              {
                uint64_t v37 = *(unsigned int *)(a1 + 64);
                if (v37 == *(_DWORD *)(a1 + 68))
                {
                  int v38 = v37 + 1;
                  sub_188C80C((unsigned int *)(a1 + 64), v37 + 1);
                  *(_DWORD *)(*(void *)(a1 + 72) + 4 * v37) = v33;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 72) + 4 * v37) = v33;
                  int v38 = v37 + 1;
                }
                *(_DWORD *)(a1 + 64) = v38;
              }
              else
              {
                if (*v7) {
                  int v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  int v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(7, v33, v40);
              }
              uint64_t v32 = *(void *)v49;
              if (*(void *)a3 <= *(void *)v49 || **(unsigned char **)v49 != 56) {
                goto LABEL_84;
              }
            }
          }
          if (v9 == 58)
          {
            *(void *)&long long v50 = a1 + 64;
            *((void *)&v50 + 1) = sub_149F9E0;
            uint64_t v51 = a1 + 8;
            int v52 = 7;
            unint64_t v16 = sub_1112E88((uint64_t)a3, (char *)v8, &v50);
          }
          else
          {
LABEL_74:
            if (v9) {
              BOOL v47 = (v9 & 7) == 4;
            }
            else {
              BOOL v47 = 1;
            }
            if (v47)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_89:
              *(void *)uint64_t v49 = 0;
              goto LABEL_2;
            }
            if ((v9 - 8008) >> 3 > 0x3E6)
            {
              if (*v7)
              {
                uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                uint64_t v8 = *(unsigned __int8 **)v49;
              }
              unint64_t v16 = sub_1885AC0(v9, v48, (char *)v8, a3);
            }
            else
            {
              unint64_t v16 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_253BED0, (uint64_t *)(a1 + 8), a3);
            }
          }
LABEL_83:
          *(void *)uint64_t v49 = v16;
          if (!v16) {
            goto LABEL_89;
          }
LABEL_84:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_74;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v49;
}

unsigned char *sub_14FC67C(uint64_t a1, unsigned char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 88);
  unsigned char *v4 = 21;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 92);
    unsigned char *v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_15:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 96);
    unsigned char *v4 = 32;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 100);
    unsigned char *v4 = 40;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v17 = *(unsigned int *)(a1 + 48);
  if ((int)v17 >= 1)
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v19 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      unsigned char *v4 = 48;
      v4[1] = v19;
      if (v19 > 0x7F)
      {
        v4[1] = v19 | 0x80;
        unint64_t v20 = v19 >> 7;
        v4[2] = v19 >> 7;
        v4 += 3;
        if (v19 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v22 = *(unsigned int *)(a1 + 64);
  if ((int)v22 >= 1)
  {
    for (uint64_t j = 0; j != v22; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v24 = *(int *)(*(void *)(a1 + 72) + 4 * j);
      unsigned char *v4 = 56;
      v4[1] = v24;
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        unint64_t v25 = v24 >> 7;
        v4[2] = v24 >> 7;
        v4 += 3;
        if (v24 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v26 = v25 >> 14;
            v25 >>= 7;
            *v4++ = v25;
          }
          while (v26);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1001, 2000, v4, a3);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_14FCA68(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D498((unsigned int *)(a1 + 48));
  uint64_t v4 = *(unsigned int *)(a1 + 64);
  if (v4)
  {
    int v5 = 0;
    uint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v5);
      if (v7 < 0) {
        uint64_t v8 = 10;
      }
      else {
        uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
      }
      v6 += v8;
      ++v5;
    }
    while (v4 != v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t result = v3 + v2 + *(unsigned int *)(a1 + 48) + v4 + v6;
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x1F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      result += 5;
    }
    if ((v10 & 4) != 0)
    {
      int v18 = *(_DWORD *)(a1 + 92);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 11;
      }
      result += v20;
      if ((v10 & 8) == 0)
      {
LABEL_18:
        if ((v10 & 0x10) == 0) {
          goto LABEL_23;
        }
        goto LABEL_19;
      }
    }
    else if ((v10 & 8) == 0)
    {
      goto LABEL_18;
    }
    int v21 = *(_DWORD *)(a1 + 96);
    uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v21 >= 0) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 11;
    }
    result += v23;
    if ((v10 & 0x10) != 0)
    {
LABEL_19:
      int v14 = *(_DWORD *)(a1 + 100);
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v14 >= 0) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 11;
      }
      result += v16;
    }
  }
LABEL_23:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v24 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    result += v25;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_14FCC38(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 64);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 64);
    sub_188C80C((unsigned int *)(a1 + 64), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v11 = *(_DWORD *)(a2 + 40);
  if ((v11 & 0x1F) != 0)
  {
    if (v11)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      sub_1881DF4((std::string **)(a1 + 80), v13, v15);
      if ((v11 & 2) == 0)
      {
LABEL_8:
        if ((v11 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_21;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_8;
    }
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v11 & 4) == 0)
    {
LABEL_9:
      if ((v11 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
LABEL_21:
    *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
    if ((v11 & 8) == 0)
    {
LABEL_10:
      if ((v11 & 0x10) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 40) |= v11;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_12;
    }
LABEL_22:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v11 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14FCDBC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_14FCDC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QUPayload");
}

void *sub_14FCDD4(uint64_t a1)
{
  if (!a1)
  {
    sub_1515828();
  }

  return sub_14FBF04(v3, a1, 0);
}

BOOL sub_14FCE30(unsigned int a1)
{
  return a1 < 0x1B;
}

BOOL sub_14FCE3C(unsigned int a1)
{
  return a1 < 4;
}

uint64_t sub_14FCE48(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14FCE70(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  sub_188CC00(a1 + 48);
  *(_DWORD *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 184) = 0;
  *(_DWORD *)(a1 + 200) = 0;
  sub_188CC00(a1 + 216);
  uint64_t result = sub_188CC00(a1 + 240);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      unint64_t v5 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      unint64_t v7 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v3 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v3 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      unint64_t v9 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v3 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v3 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      unint64_t v11 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
      }
      goto LABEL_42;
    }
    unint64_t v4 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v6 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v8 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v10 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v3 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v3 & 0x3F00) == 0) {
    goto LABEL_50;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = sub_12CD5A4(*(void *)(a1 + 328));
    if ((v3 & 0x200) == 0)
    {
LABEL_45:
      if ((v3 & 0x400) == 0) {
        goto LABEL_46;
      }
      goto LABEL_62;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  uint64_t result = sub_1501A84(*(void *)(a1 + 336));
  if ((v3 & 0x400) == 0)
  {
LABEL_46:
    if ((v3 & 0x800) == 0) {
      goto LABEL_47;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = sub_1501B4C(*(void *)(a1 + 344));
  if ((v3 & 0x800) == 0)
  {
LABEL_47:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 352));
  if ((v3 & 0x1000) == 0)
  {
LABEL_48:
    if ((v3 & 0x2000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_64:
  uint64_t result = sub_1501BDC(*(void *)(a1 + 360));
  if ((v3 & 0x2000) != 0) {
LABEL_49:
  }
    uint64_t result = sub_1501C2C(*(void *)(a1 + 368));
LABEL_50:
  if ((v3 & 0xC000) != 0)
  {
    *(void *)(a1 + 376) = 0;
    *(void *)(a1 + 384) = 0;
  }
  if ((v3 & 0xFF0000) != 0)
  {
    *(_DWORD *)(a1 + 424) = 0;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
  }
  if ((v3 & 0x3F000000) != 0)
  {
    *(void *)(a1 + 436) = 0;
    *(void *)(a1 + 428) = 0;
    *(void *)(a1 + 444) = 0;
  }
  char v13 = *(unsigned char *)(a1 + 8);
  uint64_t v12 = a1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_14FD150(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_149FADC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14A0EFC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  unint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

uint64_t sub_14FD1F4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14FD214(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1509E3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14FD2A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1501CD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14FD334(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150C074(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14FD3C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1500DD0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_14FD454(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    char v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *char v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 72);
    sub_188CA54((unsigned int *)(a1 + 72), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v16 + 8 * v15), *(const void **)(a2 + 80), 8 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 88);
  if (v17)
  {
    uint64_t v18 = *(int *)(a1 + 88);
    sub_188CA54((unsigned int *)(a1 + 88), v18 + v17);
    uint64_t v19 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v19 + 8 * v18), *(const void **)(a2 + 96), 8 * *(int *)(a2 + 88));
  }
  int v20 = *(_DWORD *)(a2 + 104);
  if (v20)
  {
    uint64_t v21 = *(int *)(a1 + 104);
    sub_188CA54((unsigned int *)(a1 + 104), v21 + v20);
    uint64_t v22 = *(void *)(a1 + 112);
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
    memcpy((void *)(v22 + 8 * v21), *(const void **)(a2 + 112), 8 * *(int *)(a2 + 104));
  }
  int v23 = *(_DWORD *)(a2 + 120);
  if (v23)
  {
    uint64_t v24 = *(int *)(a1 + 120);
    sub_188CA54((unsigned int *)(a1 + 120), v24 + v23);
    uint64_t v25 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v25 + 8 * v24), *(const void **)(a2 + 128), 8 * *(int *)(a2 + 120));
  }
  int v26 = *(_DWORD *)(a2 + 136);
  if (v26)
  {
    uint64_t v27 = *(int *)(a1 + 136);
    sub_188CA54((unsigned int *)(a1 + 136), v27 + v26);
    uint64_t v28 = *(void *)(a1 + 144);
    *(_DWORD *)(a1 + 136) += *(_DWORD *)(a2 + 136);
    memcpy((void *)(v28 + 8 * v27), *(const void **)(a2 + 144), 8 * *(int *)(a2 + 136));
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = *(int *)(a1 + 152);
    sub_188C80C((unsigned int *)(a1 + 152), v30 + v29);
    uint64_t v31 = *(void *)(a1 + 160);
    *(_DWORD *)(a1 + 152) += *(_DWORD *)(a2 + 152);
    memcpy((void *)(v31 + 4 * v30), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 152));
  }
  int v32 = *(_DWORD *)(a2 + 168);
  if (v32)
  {
    uint64_t v33 = *(int *)(a1 + 168);
    sub_188C80C((unsigned int *)(a1 + 168), v33 + v32);
    uint64_t v34 = *(void *)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy((void *)(v34 + 4 * v33), *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  int v35 = *(_DWORD *)(a2 + 184);
  if (v35)
  {
    uint64_t v36 = *(int *)(a1 + 184);
    sub_188C80C((unsigned int *)(a1 + 184), v36 + v35);
    uint64_t v37 = *(void *)(a1 + 192);
    *(_DWORD *)(a1 + 184) += *(_DWORD *)(a2 + 184);
    memcpy((void *)(v37 + 4 * v36), *(const void **)(a2 + 192), 4 * *(int *)(a2 + 184));
  }
  int v38 = *(_DWORD *)(a2 + 200);
  if (v38)
  {
    uint64_t v39 = *(int *)(a1 + 200);
    sub_188C80C((unsigned int *)(a1 + 200), v39 + v38);
    uint64_t v40 = *(void *)(a1 + 208);
    *(_DWORD *)(a1 + 200) += *(_DWORD *)(a2 + 200);
    memcpy((void *)(v40 + 4 * v39), *(const void **)(a2 + 208), 4 * *(int *)(a2 + 200));
  }
  int v41 = *(_DWORD *)(a2 + 224);
  if (v41)
  {
    int v42 = (const std::string **)(*(void *)(a2 + 232) + 8);
    uint64_t v43 = (std::string **)sub_188CCE4(a1 + 216, *(_DWORD *)(a2 + 224));
    sub_188FB98(a1 + 216, v43, v42, v41, **(_DWORD **)(a1 + 232) - *(_DWORD *)(a1 + 224));
    int v44 = *(_DWORD *)(a1 + 224) + v41;
    *(_DWORD *)(a1 + 224) = v44;
    uint64_t v45 = *(int **)(a1 + 232);
    if (*v45 < v44) {
      *uint64_t v45 = v44;
    }
  }
  int v46 = *(_DWORD *)(a2 + 248);
  if (v46)
  {
    BOOL v47 = (const std::string **)(*(void *)(a2 + 256) + 8);
    uint64_t v48 = (std::string **)sub_188CCE4(a1 + 240, *(_DWORD *)(a2 + 248));
    sub_188FB98(a1 + 240, v48, v47, v46, **(_DWORD **)(a1 + 256) - *(_DWORD *)(a1 + 248));
    int v49 = *(_DWORD *)(a1 + 248) + v46;
    *(_DWORD *)(a1 + 248) = v49;
    long long v50 = *(int **)(a1 + 256);
    if (*v50 < v49) {
      *long long v50 = v49;
    }
  }
  int v51 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v51) {
    goto LABEL_65;
  }
  if (v51)
  {
    int v52 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v53 = *(void *)(a1 + 8);
    uint64_t v54 = (uint64_t *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
    if (v53) {
      uint64_t v54 = (uint64_t *)*v54;
    }
    sub_1881DF4((std::string **)(a1 + 264), v52, v54);
    if ((v51 & 2) == 0)
    {
LABEL_34:
      if ((v51 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_47;
    }
  }
  else if ((v51 & 2) == 0)
  {
    goto LABEL_34;
  }
  int v55 = (long long *)(*(void *)(a2 + 272) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v56 = *(void *)(a1 + 8);
  int v57 = (uint64_t *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
  if (v56) {
    int v57 = (uint64_t *)*v57;
  }
  sub_1881DF4((std::string **)(a1 + 272), v55, v57);
  if ((v51 & 4) == 0)
  {
LABEL_35:
    if ((v51 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_50;
  }
LABEL_47:
  uint64_t v58 = (long long *)(*(void *)(a2 + 280) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v59 = *(void *)(a1 + 8);
  uint64_t v60 = (uint64_t *)(v59 & 0xFFFFFFFFFFFFFFFCLL);
  if (v59) {
    uint64_t v60 = (uint64_t *)*v60;
  }
  sub_1881DF4((std::string **)(a1 + 280), v58, v60);
  if ((v51 & 8) == 0)
  {
LABEL_36:
    if ((v51 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_53;
  }
LABEL_50:
  uint64_t v61 = (long long *)(*(void *)(a2 + 288) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v62 = *(void *)(a1 + 8);
  uint64_t v63 = (uint64_t *)(v62 & 0xFFFFFFFFFFFFFFFCLL);
  if (v62) {
    uint64_t v63 = (uint64_t *)*v63;
  }
  sub_1881DF4((std::string **)(a1 + 288), v61, v63);
  if ((v51 & 0x10) == 0)
  {
LABEL_37:
    if ((v51 & 0x20) == 0) {
      goto LABEL_38;
    }
LABEL_56:
    uint64_t v67 = (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v68 = *(void *)(a1 + 8);
    uint64_t v69 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (v68) {
      uint64_t v69 = (uint64_t *)*v69;
    }
    sub_1881DF4((std::string **)(a1 + 304), v67, v69);
    if ((v51 & 0x40) == 0)
    {
LABEL_39:
      if ((v51 & 0x80) == 0) {
        goto LABEL_65;
      }
      goto LABEL_62;
    }
    goto LABEL_59;
  }
LABEL_53:
  uint64_t v64 = (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v65 = *(void *)(a1 + 8);
  uint64_t v66 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
  if (v65) {
    uint64_t v66 = (uint64_t *)*v66;
  }
  sub_1881DF4((std::string **)(a1 + 296), v64, v66);
  if ((v51 & 0x20) != 0) {
    goto LABEL_56;
  }
LABEL_38:
  if ((v51 & 0x40) == 0) {
    goto LABEL_39;
  }
LABEL_59:
  uint64_t v70 = (long long *)(*(void *)(a2 + 312) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v71 = *(void *)(a1 + 8);
  int v72 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
  if (v71) {
    int v72 = (uint64_t *)*v72;
  }
  sub_1881DF4((std::string **)(a1 + 312), v70, v72);
  if ((v51 & 0x80) != 0)
  {
LABEL_62:
    unint64_t v73 = (long long *)(*(void *)(a2 + 320) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v74 = *(void *)(a1 + 8);
    uint64_t v75 = (uint64_t *)(v74 & 0xFFFFFFFFFFFFFFFCLL);
    if (v74) {
      uint64_t v75 = (uint64_t *)*v75;
    }
    sub_1881DF4((std::string **)(a1 + 320), v73, v75);
  }
LABEL_65:
  if ((v51 & 0xFF00) == 0) {
    goto LABEL_76;
  }
  if ((v51 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v77 = *(std::string **)(a1 + 328);
    if (!v77)
    {
      uint64_t v78 = *(void *)(a1 + 8);
      uint64_t v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
      if (v78) {
        uint64_t v79 = (void *)*v79;
      }
      uint64_t v77 = (std::string *)sub_12CE0C8((uint64_t)v79);
      *(void *)(a1 + 328) = v77;
    }
    if (*(void *)(a2 + 328)) {
      uint64_t v80 = *(uint64_t (****)(uint64_t))(a2 + 328);
    }
    else {
      uint64_t v80 = &off_2531440;
    }
    sub_12CDEA0(v77, (uint64_t)v80);
    if ((v51 & 0x200) == 0)
    {
LABEL_68:
      if ((v51 & 0x400) == 0) {
        goto LABEL_69;
      }
      goto LABEL_116;
    }
  }
  else if ((v51 & 0x200) == 0)
  {
    goto LABEL_68;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  int v81 = *(std::string **)(a1 + 336);
  if (!v81)
  {
    uint64_t v82 = *(void *)(a1 + 8);
    uint64_t v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFCLL);
    if (v82) {
      uint64_t v83 = (void *)*v83;
    }
    int v81 = (std::string *)sub_150EA40((uint64_t)v83);
    *(void *)(a1 + 336) = v81;
  }
  if (*(void *)(a2 + 336)) {
    int v84 = *(uint64_t (****)(uint64_t))(a2 + 336);
  }
  else {
    int v84 = &off_253C318;
  }
  sub_15051B8(v81, (uint64_t)v84);
  if ((v51 & 0x400) == 0)
  {
LABEL_69:
    if ((v51 & 0x800) == 0) {
      goto LABEL_70;
    }
    goto LABEL_124;
  }
LABEL_116:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v85 = *(std::string **)(a1 + 344);
  if (!v85)
  {
    uint64_t v86 = *(void *)(a1 + 8);
    uint64_t v87 = (void *)(v86 & 0xFFFFFFFFFFFFFFFCLL);
    if (v86) {
      uint64_t v87 = (void *)*v87;
    }
    uint64_t v85 = (std::string *)sub_150E904((uint64_t)v87);
    *(void *)(a1 + 344) = v85;
  }
  if (*(void *)(a2 + 344)) {
    uint64_t v88 = *(uint64_t (****)())(a2 + 344);
  }
  else {
    uint64_t v88 = &off_253C2B0;
  }
  sub_150536C(v85, (uint64_t)v88);
  if ((v51 & 0x800) == 0)
  {
LABEL_70:
    if ((v51 & 0x1000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_132;
  }
LABEL_124:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v89 = *(void *)(a1 + 352);
  if (!v89)
  {
    uint64_t v90 = *(void *)(a1 + 8);
    uint64_t v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
    if (v90) {
      uint64_t v91 = (void *)*v91;
    }
    uint64_t v89 = sub_15C1918((uint64_t)v91);
    *(void *)(a1 + 352) = v89;
  }
  if (*(void *)(a2 + 352)) {
    unint64_t v92 = *(uint64_t (****)())(a2 + 352);
  }
  else {
    unint64_t v92 = &off_253F1A0;
  }
  sub_15B0E24(v89, (uint64_t)v92);
  if ((v51 & 0x1000) == 0)
  {
LABEL_71:
    if ((v51 & 0x2000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_140;
  }
LABEL_132:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v93 = *(std::string **)(a1 + 360);
  if (!v93)
  {
    uint64_t v94 = *(void *)(a1 + 8);
    uint64_t v95 = (void *)(v94 & 0xFFFFFFFFFFFFFFFCLL);
    if (v94) {
      uint64_t v95 = (void *)*v95;
    }
    uint64_t v93 = (std::string *)sub_150E9A0((uint64_t)v95);
    *(void *)(a1 + 360) = v93;
  }
  if (*(void *)(a2 + 360)) {
    uint64_t v96 = *(void *(****)(void *))(a2 + 360);
  }
  else {
    uint64_t v96 = &off_253C2E8;
  }
  sub_1381334(v93, (uint64_t)v96);
  if ((v51 & 0x2000) == 0)
  {
LABEL_72:
    if ((v51 & 0x4000) == 0) {
      goto LABEL_73;
    }
LABEL_148:
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    if ((v51 & 0x8000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_74;
  }
LABEL_140:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v97 = *(std::string **)(a1 + 368);
  if (!v97)
  {
    uint64_t v98 = *(void *)(a1 + 8);
    uint64_t v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
    if (v98) {
      uint64_t v99 = (void *)*v99;
    }
    uint64_t v97 = (std::string *)sub_150EB80((uint64_t)v99);
    *(void *)(a1 + 368) = v97;
  }
  if (*(void *)(a2 + 368)) {
    uint64_t v100 = *(void *(****)(void *))(a2 + 368);
  }
  else {
    uint64_t v100 = &off_253C380;
  }
  sub_1505490(v97, (uint64_t)v100);
  if ((v51 & 0x4000) != 0) {
    goto LABEL_148;
  }
LABEL_73:
  if ((v51 & 0x8000) != 0) {
LABEL_74:
  }
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
LABEL_75:
  *(_DWORD *)(a1 + 16) |= v51;
LABEL_76:
  if ((v51 & 0xFF0000) == 0) {
    goto LABEL_87;
  }
  if ((v51 & 0x10000) != 0)
  {
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    if ((v51 & 0x20000) == 0)
    {
LABEL_79:
      if ((v51 & 0x40000) == 0) {
        goto LABEL_80;
      }
      goto LABEL_152;
    }
  }
  else if ((v51 & 0x20000) == 0)
  {
    goto LABEL_79;
  }
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  if ((v51 & 0x40000) == 0)
  {
LABEL_80:
    if ((v51 & 0x80000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_153;
  }
LABEL_152:
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  if ((v51 & 0x80000) == 0)
  {
LABEL_81:
    if ((v51 & 0x100000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_154;
  }
LABEL_153:
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  if ((v51 & 0x100000) == 0)
  {
LABEL_82:
    if ((v51 & 0x200000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_155;
  }
LABEL_154:
  *(unsigned char *)(a1 + 424) = *(unsigned char *)(a2 + 424);
  if ((v51 & 0x200000) == 0)
  {
LABEL_83:
    if ((v51 & 0x400000) == 0) {
      goto LABEL_84;
    }
LABEL_156:
    *(unsigned char *)(a1 + 426) = *(unsigned char *)(a2 + 426);
    if ((v51 & 0x800000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_155:
  *(unsigned char *)(a1 + 425) = *(unsigned char *)(a2 + 425);
  if ((v51 & 0x400000) != 0) {
    goto LABEL_156;
  }
LABEL_84:
  if ((v51 & 0x800000) != 0) {
LABEL_85:
  }
    *(unsigned char *)(a1 + 427) = *(unsigned char *)(a2 + 427);
LABEL_86:
  *(_DWORD *)(a1 + 16) |= v51;
LABEL_87:
  if ((v51 & 0x3F000000) == 0) {
    goto LABEL_96;
  }
  if ((v51 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 428) = *(unsigned char *)(a2 + 428);
    if ((v51 & 0x2000000) == 0)
    {
LABEL_90:
      if ((v51 & 0x4000000) == 0) {
        goto LABEL_91;
      }
      goto LABEL_160;
    }
  }
  else if ((v51 & 0x2000000) == 0)
  {
    goto LABEL_90;
  }
  *(unsigned char *)(a1 + 429) = *(unsigned char *)(a2 + 429);
  if ((v51 & 0x4000000) == 0)
  {
LABEL_91:
    if ((v51 & 0x8000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_161;
  }
LABEL_160:
  *(unsigned char *)(a1 + 430) = *(unsigned char *)(a2 + 430);
  if ((v51 & 0x8000000) == 0)
  {
LABEL_92:
    if ((v51 & 0x10000000) == 0) {
      goto LABEL_93;
    }
LABEL_162:
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    if ((v51 & 0x20000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_94;
  }
LABEL_161:
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  if ((v51 & 0x10000000) != 0) {
    goto LABEL_162;
  }
LABEL_93:
  if ((v51 & 0x20000000) != 0) {
LABEL_94:
  }
    *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
LABEL_95:
  *(_DWORD *)(a1 + 16) |= v51;
LABEL_96:
  uint64_t v76 = *(void *)(a2 + 8);
  if (v76)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v76 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_14FDD9C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_122BB8C((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_14DD9EC((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    char v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *char v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_14FDED0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v2) {
    goto LABEL_12;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  result[1].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 29);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  result[1].__r_.__value_.__s.__data_[6] = *(unsigned char *)(a2 + 30);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  result[1].__r_.__value_.__s.__data_[7] = *(unsigned char *)(a2 + 31);
  if ((v2 & 0x20) == 0)
  {
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    result[1].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 33);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_19:
  result[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
  if ((v2 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
LABEL_11:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_12:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14FDF84(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = sub_12CE040(*(void *)(a1 + 328));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x800) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 352));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_14FDFD0(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_31;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_35:
    unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_39;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_43:
    unint64_t v10 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_47;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v3 & 0x20) != 0) {
        goto LABEL_47;
      }
    }
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_51;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_31:
  unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_35;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_35;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_39:
  unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_43;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_43;
    }
  }
LABEL_7:
  if ((v3 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_47:
  unint64_t v11 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v3 & 0x40) != 0) {
      goto LABEL_51;
    }
LABEL_9:
    if ((v3 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  *(unsigned char *)unint64_t v11 = 0;
  *(unsigned char *)(v11 + 23) = 0;
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_51:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 112));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 120));
LABEL_11:
  if ((v3 & 0x700) == 0) {
    goto LABEL_16;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 128));
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = (uint64_t)sub_150A4BC(*(unsigned char **)(a1 + 136));
  if ((v3 & 0x400) != 0) {
LABEL_15:
  }
    uint64_t result = (uint64_t)sub_12A4704(*(unsigned char **)(a1 + 144));
LABEL_16:
  if ((v3 & 0xF800) != 0)
  {
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 168) = 0;
  }
  if ((v3 & 0x70000) != 0)
  {
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(_DWORD *)(a1 + 192) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14FE1E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150A518(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_14FE274(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    char v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v12) {
    goto LABEL_50;
  }
  if (v12)
  {
    char v13 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), v13, v15);
    if ((v12 & 2) == 0)
    {
LABEL_9:
      if ((v12 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v12 & 2) == 0)
  {
    goto LABEL_9;
  }
  uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v17 = *(void *)(a1 + 8);
  uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    uint64_t v18 = (uint64_t *)*v18;
  }
  sub_1881DF4((std::string **)(a1 + 72), v16, v18);
  if ((v12 & 4) == 0)
  {
LABEL_10:
    if ((v12 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
  if (v20) {
    uint64_t v21 = (uint64_t *)*v21;
  }
  sub_1881DF4((std::string **)(a1 + 80), v19, v21);
  if ((v12 & 8) == 0)
  {
LABEL_11:
    if ((v12 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v23 = *(void *)(a1 + 8);
  uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    uint64_t v24 = (uint64_t *)*v24;
  }
  sub_1881DF4((std::string **)(a1 + 88), v22, v24);
  if ((v12 & 0x10) == 0)
  {
LABEL_12:
    if ((v12 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_31:
    uint64_t v28 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v29 = *(void *)(a1 + 8);
    uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      uint64_t v30 = (uint64_t *)*v30;
    }
    sub_1881DF4((std::string **)(a1 + 104), v28, v30);
    if ((v12 & 0x40) == 0)
    {
LABEL_14:
      if ((v12 & 0x80) == 0) {
        goto LABEL_50;
      }
      goto LABEL_42;
    }
    goto LABEL_34;
  }
LABEL_28:
  uint64_t v25 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v26 = *(void *)(a1 + 8);
  uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
  if (v26) {
    uint64_t v27 = (uint64_t *)*v27;
  }
  sub_1881DF4((std::string **)(a1 + 96), v25, v27);
  if ((v12 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_13:
  if ((v12 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_34:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v31 = *(void *)(a1 + 112);
  if (!v31)
  {
    uint64_t v32 = *(void *)(a1 + 8);
    uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      uint64_t v33 = (void *)*v33;
    }
    uint64_t v31 = sub_15C1918((uint64_t)v33);
    *(void *)(a1 + 112) = v31;
  }
  if (*(void *)(a2 + 112)) {
    uint64_t v34 = *(uint64_t (****)())(a2 + 112);
  }
  else {
    uint64_t v34 = &off_253F1A0;
  }
  sub_15B0E24(v31, (uint64_t)v34);
  if ((v12 & 0x80) != 0)
  {
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v35 = *(void *)(a1 + 120);
    if (!v35)
    {
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
      if (v36) {
        uint64_t v37 = (void *)*v37;
      }
      uint64_t v35 = sub_15C19EC((uint64_t)v37);
      *(void *)(a1 + 120) = v35;
    }
    if (*(void *)(a2 + 120)) {
      int v38 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      int v38 = &off_253F208;
    }
    sub_15B1E3C(v35, (uint64_t)v38);
  }
LABEL_50:
  if ((v12 & 0xFF00) == 0) {
    goto LABEL_61;
  }
  if ((v12 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v40 = *(void *)(a1 + 128);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      int v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        int v42 = (void *)*v42;
      }
      uint64_t v40 = sub_15C1918((uint64_t)v42);
      *(void *)(a1 + 128) = v40;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v43 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v43 = &off_253F1A0;
    }
    sub_15B0E24(v40, (uint64_t)v43);
    if ((v12 & 0x200) == 0)
    {
LABEL_53:
      if ((v12 & 0x400) == 0) {
        goto LABEL_54;
      }
      goto LABEL_87;
    }
  }
  else if ((v12 & 0x200) == 0)
  {
    goto LABEL_53;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  int v44 = *(void **)(a1 + 136);
  if (!v44)
  {
    uint64_t v45 = *(void *)(a1 + 8);
    int v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      int v46 = (void *)*v46;
    }
    int v44 = sub_150EDE8((uint64_t)v46);
    *(void *)(a1 + 136) = v44;
  }
  if (*(void *)(a2 + 136)) {
    BOOL v47 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    BOOL v47 = &off_253C4C0;
  }
  sub_150BADC((uint64_t)v44, (uint64_t)v47);
  if ((v12 & 0x400) == 0)
  {
LABEL_54:
    if ((v12 & 0x800) == 0) {
      goto LABEL_55;
    }
    goto LABEL_95;
  }
LABEL_87:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v48 = *(void **)(a1 + 144);
  if (!v48)
  {
    uint64_t v49 = *(void *)(a1 + 8);
    long long v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
    if (v49) {
      long long v50 = (void *)*v50;
    }
    uint64_t v48 = sub_12BBF44((uint64_t)v50);
    *(void *)(a1 + 144) = v48;
  }
  if (*(void *)(a2 + 144)) {
    int v51 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    int v51 = &off_25309E0;
  }
  sub_12A5038((uint64_t)v48, (uint64_t)v51);
  if ((v12 & 0x800) == 0)
  {
LABEL_55:
    if ((v12 & 0x1000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_96;
  }
LABEL_95:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  if ((v12 & 0x1000) == 0)
  {
LABEL_56:
    if ((v12 & 0x2000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_97;
  }
LABEL_96:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  if ((v12 & 0x2000) == 0)
  {
LABEL_57:
    if ((v12 & 0x4000) == 0) {
      goto LABEL_58;
    }
LABEL_98:
    *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
    if ((v12 & 0x8000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
LABEL_97:
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  if ((v12 & 0x4000) != 0) {
    goto LABEL_98;
  }
LABEL_58:
  if ((v12 & 0x8000) != 0) {
LABEL_59:
  }
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
LABEL_60:
  *(_DWORD *)(a1 + 16) |= v12;
LABEL_61:
  if ((v12 & 0x70000) == 0) {
    goto LABEL_67;
  }
  if ((v12 & 0x10000) == 0)
  {
    if ((v12 & 0x20000) == 0) {
      goto LABEL_64;
    }
LABEL_101:
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    if ((v12 & 0x40000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  if ((v12 & 0x20000) != 0) {
    goto LABEL_101;
  }
LABEL_64:
  if ((v12 & 0x40000) != 0) {
LABEL_65:
  }
    *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
LABEL_66:
  *(_DWORD *)(a1 + 16) |= v12;
LABEL_67:
  uint64_t v39 = *(void *)(a2 + 8);
  if (v39)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v39 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14FE71C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 112));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 120));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 128));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x200) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 136);
    if (*(unsigned char *)(v4 + 16))
    {
      uint64_t result = sub_12A76C4(*(void *)(v4 + 24));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 0x400) == 0) {
    return 1;
  }
  uint64_t result = sub_12A51B0(*(void *)(a1 + 144));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_14FE7B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = &off_24BCF48;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &qword_2550250;
  *(void *)(a1 + 128) = &qword_2550250;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 197) = 0u;
  *(_DWORD *)(a1 + 216) = 10;
  return a1;
}

void sub_14FE858(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_14FE888(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14FE938((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_122BB0C(a1 + 12);
  sub_149EC7C(a1 + 9);
  sub_12D3238(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_14FE938(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 120);
  uint64_t v2 = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 128);
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253BF38)
  {
    uint64_t v5 = *(void *)(a1 + 136);
    if (v5)
    {
      sub_14A2F24(v5);
      operator delete();
    }
    int v6 = *(void **)(a1 + 144);
    if (v6)
    {
      sub_150A288(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 152);
    if (v7)
    {
      sub_1509D90(v7);
      operator delete();
    }
    unint64_t v8 = *(void **)(a1 + 160);
    if (v8)
    {
      sub_15017AC(v8);
      operator delete();
    }
    int v9 = *(void **)(a1 + 168);
    if (v9)
    {
      sub_150BFB0(v9);
      operator delete();
    }
    uint64_t v10 = *(void **)(a1 + 176);
    if (v10)
    {
      sub_1500D24(v10);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 184);
    if (result)
    {
      sub_14D3FE0((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_14FEA90(void *a1)
{
  sub_14FE888(a1);

  operator delete();
}

uint64_t sub_14FEAC8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_150C734(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1497FB8(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_146A460(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v12) {
    goto LABEL_23;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_37:
    unint64_t v16 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_41;
      }
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_42;
  }
  unint64_t v15 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_37;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_37;
    }
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_41:
  uint64_t result = (uint64_t)sub_14A2F60(*(unsigned char **)(a1 + 136));
  if ((v12 & 8) == 0)
  {
LABEL_18:
    if ((v12 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = sub_14FDFD0(*(void *)(a1 + 144));
  if ((v12 & 0x10) == 0)
  {
LABEL_19:
    if ((v12 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_44:
    uint64_t result = sub_14FCE70(*(void *)(a1 + 160));
    if ((v12 & 0x40) == 0)
    {
LABEL_21:
      if ((v12 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_43:
  uint64_t result = sub_14FCE48(*(void *)(a1 + 152));
  if ((v12 & 0x20) != 0) {
    goto LABEL_44;
  }
LABEL_20:
  if ((v12 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_45:
  uint64_t result = sub_14FD150(*(void *)(a1 + 168));
  if ((v12 & 0x80) != 0) {
LABEL_22:
  }
    uint64_t result = sub_14FD1F4(*(void *)(a1 + 176));
LABEL_23:
  if ((v12 & 0x100) != 0) {
    uint64_t result = sub_14D401C(*(void *)(a1 + 184));
  }
  if ((v12 & 0xFE00) != 0)
  {
    *(void *)(a1 + 197) = 0;
    *(void *)(a1 + 192) = 0;
  }
  if ((v12 & 0x3F0000) != 0)
  {
    *(void *)(a1 + 205) = 0;
    *(_DWORD *)(a1 + 216) = 10;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_14FECA4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v122 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v122, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v122 + 1);
    unsigned int v9 = **(unsigned char **)v122;
    if ((char)**(unsigned char **)v122 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v122, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v122 + 2);
      }
    }
    *(void *)uint64_t v122 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 120);
        goto LABEL_70;
      case 2u:
        if (v9 != 18) {
          goto LABEL_159;
        }
        unint64_t v15 = v8 - 1;
        while (1)
        {
          unint64_t v16 = v15 + 1;
          *(void *)uint64_t v122 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_150EF04(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            unint64_t v16 = *(unsigned __int8 **)v122;
          }
          unint64_t v15 = (unsigned __int8 *)sub_12C54A4(a3, v19, v16);
          *(void *)uint64_t v122 = v15;
          if (!v15) {
            goto LABEL_209;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_169;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_159;
        }
        v5 |= 0x200000u;
        uint64_t v21 = (char *)(v8 + 1);
        int v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v96 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)uint64_t v122 = v96;
          *(_DWORD *)(a1 + 216) = v97;
          if (!v96) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_27:
          *(void *)uint64_t v122 = v21;
          *(_DWORD *)(a1 + 216) = v22;
        }
        goto LABEL_169;
      case 4u:
        if (v9 != 32) {
          goto LABEL_159;
        }
        uint64_t v24 = (char *)(v8 + 1);
        unint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)uint64_t v122 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v122) {
            goto LABEL_209;
          }
          unint64_t v25 = v98;
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_32:
          *(void *)uint64_t v122 = v24;
        }
        if (v25 <= 9)
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          *(_DWORD *)(a1 + 192) = v25;
          goto LABEL_169;
        }
        if (*v7) {
          uint64_t v120 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v120 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v121 = 4;
        goto LABEL_203;
      case 5u:
        if (v9 != 42) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v28 = *(void *)(a1 + 136);
        if (!v28)
        {
          uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v29 = (void *)*v29;
          }
          sub_14A47B4((uint64_t)v29);
          uint64_t v28 = v30;
          *(void *)(a1 + 136) = v30;
          uint64_t v8 = *(unsigned __int8 **)v122;
        }
        uint64_t v31 = sub_14F6AC8(a3, v28, v8);
        goto LABEL_168;
      case 6u:
        if (v9 != 50) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v32 = *(void *)(a1 + 144);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          sub_150ED20((uint64_t)v33);
          uint64_t v32 = v34;
          *(void *)(a1 + 144) = v34;
          uint64_t v8 = *(unsigned __int8 **)v122;
        }
        uint64_t v31 = sub_14FE1E4(a3, v32, v8);
        goto LABEL_168;
      case 7u:
        if (v9 != 58) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v35 = *(void **)(a1 + 152);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_150ECA4((uint64_t)v36);
          *(void *)(a1 + 152) = v35;
          uint64_t v8 = *(unsigned __int8 **)v122;
        }
        uint64_t v31 = (uint64_t)sub_14FD214(a3, (uint64_t)v35, v8);
        goto LABEL_168;
      case 8u:
        if (v9 != 66) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v37 = *(void *)(a1 + 160);
        if (!v37)
        {
          int v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v38 = (void *)*v38;
          }
          sub_150E6F8((uint64_t)v38);
          uint64_t v37 = v39;
          *(void *)(a1 + 160) = v39;
          uint64_t v8 = *(unsigned __int8 **)v122;
        }
        uint64_t v31 = (uint64_t)sub_14FD2A4(a3, v37, v8);
        goto LABEL_168;
      case 9u:
        if (v9 != 72) {
          goto LABEL_159;
        }
        uint64_t v40 = (char *)(v8 + 1);
        unint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v41 = *v40;
        int v42 = v25 + (v41 << 7);
        unint64_t v25 = (v42 - 128);
        if (v41 < 0)
        {
          *(void *)uint64_t v122 = sub_188C138((uint64_t)v8, (v42 - 128));
          if (!*(void *)v122) {
            goto LABEL_209;
          }
          unint64_t v25 = v99;
        }
        else
        {
          uint64_t v40 = (char *)(v8 + 2);
LABEL_63:
          *(void *)uint64_t v122 = v40;
        }
        if (v25 > 2)
        {
          if (*v7) {
            uint64_t v120 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v120 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v121 = 9;
LABEL_203:
          sub_188C020(v121, v25, v120);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x400u;
          *(_DWORD *)(a1 + 196) = v25;
        }
        goto LABEL_169;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v43 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 128);
LABEL_70:
        int v44 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v31 = (uint64_t)sub_188C244(v44, *(char **)v122, (uint64_t)a3);
        goto LABEL_168;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_159;
        }
        uint64_t v45 = v8 - 1;
        while (1)
        {
          int v46 = v45 + 1;
          *(void *)uint64_t v122 = v45 + 1;
          BOOL v47 = *(_DWORD **)(a1 + 88);
          if (v47 && (uint64_t v48 = *(int *)(a1 + 80), (int)v48 < *v47))
          {
            *(_DWORD *)(a1 + 80) = v48 + 1;
            uint64_t v49 = *(void *)&v47[2 * v48 + 2];
          }
          else
          {
            uint64_t v50 = sub_14984AC(*(void *)(a1 + 72));
            uint64_t v49 = sub_188CDC8(a1 + 72, v50);
            int v46 = *(unsigned __int8 **)v122;
          }
          uint64_t v45 = (unsigned __int8 *)sub_14977C8(a3, v49, v46);
          *(void *)uint64_t v122 = v45;
          if (!v45) {
            goto LABEL_209;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *v45 != 90) {
            goto LABEL_169;
          }
        }
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v51 = *(void *)(a1 + 168);
        if (!v51)
        {
          int v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v52 = (void *)*v52;
          }
          uint64_t v51 = sub_150EE60((uint64_t)v52);
          *(void *)(a1 + 168) = v51;
          uint64_t v8 = *(unsigned __int8 **)v122;
        }
        uint64_t v31 = (uint64_t)sub_14FD334(a3, v51, v8);
        goto LABEL_168;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v53 = *(void **)(a1 + 176);
        if (!v53)
        {
          uint64_t v54 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v54 = (void *)*v54;
          }
          uint64_t v53 = sub_150E67C((uint64_t)v54);
          *(void *)(a1 + 176) = v53;
          uint64_t v8 = *(unsigned __int8 **)v122;
        }
        uint64_t v31 = (uint64_t)sub_14FD3C4(a3, (uint64_t)v53, v8);
        goto LABEL_168;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v55 = *(void *)(a1 + 184);
        if (!v55)
        {
          uint64_t v56 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v56 = (void *)*v56;
          }
          sub_14D75B8((uint64_t)v56);
          uint64_t v55 = v57;
          *(void *)(a1 + 184) = v57;
          uint64_t v8 = *(unsigned __int8 **)v122;
        }
        uint64_t v31 = (uint64_t)sub_14F9540(a3, v55, v8);
        goto LABEL_168;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_159;
        }
        v5 |= 0x800u;
        uint64_t v58 = (char *)(v8 + 1);
        uint64_t v59 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_103;
        }
        int v60 = *v58;
        uint64_t v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          uint64_t v100 = sub_188C138((uint64_t)v8, v59);
          *(void *)uint64_t v122 = v100;
          *(unsigned char *)(a1 + 200) = v101 != 0;
          if (!v100) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v58 = (char *)(v8 + 2);
LABEL_103:
          *(void *)uint64_t v122 = v58;
          *(unsigned char *)(a1 + 200) = v59 != 0;
        }
        goto LABEL_169;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_159;
        }
        v5 |= 0x1000u;
        uint64_t v61 = (char *)(v8 + 1);
        uint64_t v62 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_108;
        }
        int v63 = *v61;
        uint64_t v62 = v62 + (v63 << 7) - 128;
        if (v63 < 0)
        {
          uint64_t v102 = sub_188C138((uint64_t)v8, v62);
          *(void *)uint64_t v122 = v102;
          *(unsigned char *)(a1 + 201) = v103 != 0;
          if (!v102) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v61 = (char *)(v8 + 2);
LABEL_108:
          *(void *)uint64_t v122 = v61;
          *(unsigned char *)(a1 + 201) = v62 != 0;
        }
        goto LABEL_169;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_159;
        }
        v5 |= 0x2000u;
        uint64_t v64 = (char *)(v8 + 1);
        uint64_t v65 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_113;
        }
        int v66 = *v64;
        uint64_t v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          uint64_t v104 = sub_188C138((uint64_t)v8, v65);
          *(void *)uint64_t v122 = v104;
          *(unsigned char *)(a1 + 202) = v105 != 0;
          if (!v104) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v64 = (char *)(v8 + 2);
LABEL_113:
          *(void *)uint64_t v122 = v64;
          *(unsigned char *)(a1 + 202) = v65 != 0;
        }
        goto LABEL_169;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_159;
        }
        v5 |= 0x4000u;
        uint64_t v67 = (char *)(v8 + 1);
        uint64_t v68 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_118;
        }
        int v69 = *v67;
        uint64_t v68 = v68 + (v69 << 7) - 128;
        if (v69 < 0)
        {
          uint64_t v106 = sub_188C138((uint64_t)v8, v68);
          *(void *)uint64_t v122 = v106;
          *(unsigned char *)(a1 + 203) = v107 != 0;
          if (!v106) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v67 = (char *)(v8 + 2);
LABEL_118:
          *(void *)uint64_t v122 = v67;
          *(unsigned char *)(a1 + 203) = v68 != 0;
        }
        goto LABEL_169;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_159;
        }
        v5 |= 0x8000u;
        uint64_t v70 = (char *)(v8 + 1);
        uint64_t v71 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_123;
        }
        int v72 = *v70;
        uint64_t v71 = v71 + (v72 << 7) - 128;
        if (v72 < 0)
        {
          uint64_t v108 = sub_188C138((uint64_t)v8, v71);
          *(void *)uint64_t v122 = v108;
          *(unsigned char *)(a1 + 204) = v109 != 0;
          if (!v108) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v70 = (char *)(v8 + 2);
LABEL_123:
          *(void *)uint64_t v122 = v70;
          *(unsigned char *)(a1 + 204) = v71 != 0;
        }
        goto LABEL_169;
      case 0x14u:
        if (v9 != 160) {
          goto LABEL_159;
        }
        v5 |= 0x10000u;
        unint64_t v73 = (char *)(v8 + 1);
        uint64_t v74 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_128;
        }
        int v75 = *v73;
        uint64_t v74 = v74 + (v75 << 7) - 128;
        if (v75 < 0)
        {
          uint64_t v110 = sub_188C138((uint64_t)v8, v74);
          *(void *)uint64_t v122 = v110;
          *(unsigned char *)(a1 + 205) = v111 != 0;
          if (!v110) {
            goto LABEL_209;
          }
        }
        else
        {
          unint64_t v73 = (char *)(v8 + 2);
LABEL_128:
          *(void *)uint64_t v122 = v73;
          *(unsigned char *)(a1 + 205) = v74 != 0;
        }
        goto LABEL_169;
      case 0x15u:
        if (v9 != 170) {
          goto LABEL_159;
        }
        uint64_t v76 = v8 - 2;
        while (1)
        {
          uint64_t v77 = v76 + 2;
          *(void *)uint64_t v122 = v76 + 2;
          uint64_t v78 = *(_DWORD **)(a1 + 112);
          if (v78 && (uint64_t v79 = *(int *)(a1 + 104), (int)v79 < *v78))
          {
            *(_DWORD *)(a1 + 104) = v79 + 1;
            uint64_t v80 = *(void *)&v78[2 * v79 + 2];
          }
          else
          {
            int v81 = sub_1478FB4(*(void *)(a1 + 96));
            uint64_t v80 = sub_188CDC8(a1 + 96, (uint64_t)v81);
            uint64_t v77 = *(unsigned __int8 **)v122;
          }
          uint64_t v76 = (unsigned __int8 *)sub_11EAB7C(a3, v80, v77);
          *(void *)uint64_t v122 = v76;
          if (!v76) {
            goto LABEL_209;
          }
          if (*(void *)a3 <= (unint64_t)v76 || *(_WORD *)v76 != 426) {
            goto LABEL_169;
          }
        }
      case 0x16u:
        if (v9 != 176) {
          goto LABEL_159;
        }
        v5 |= 0x20000u;
        uint64_t v82 = (char *)(v8 + 1);
        uint64_t v83 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_143;
        }
        int v84 = *v82;
        uint64_t v83 = v83 + (v84 << 7) - 128;
        if (v84 < 0)
        {
          uint64_t v112 = sub_188C138((uint64_t)v8, v83);
          *(void *)uint64_t v122 = v112;
          *(unsigned char *)(a1 + 206) = v113 != 0;
          if (!v112) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v82 = (char *)(v8 + 2);
LABEL_143:
          *(void *)uint64_t v122 = v82;
          *(unsigned char *)(a1 + 206) = v83 != 0;
        }
        goto LABEL_169;
      case 0x17u:
        if (v9 != 184) {
          goto LABEL_159;
        }
        v5 |= 0x40000u;
        uint64_t v85 = (char *)(v8 + 1);
        uint64_t v86 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_148;
        }
        int v87 = *v85;
        uint64_t v86 = v86 + (v87 << 7) - 128;
        if (v87 < 0)
        {
          uint64_t v114 = sub_188C138((uint64_t)v8, v86);
          *(void *)uint64_t v122 = v114;
          *(unsigned char *)(a1 + 207) = v115 != 0;
          if (!v114) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v85 = (char *)(v8 + 2);
LABEL_148:
          *(void *)uint64_t v122 = v85;
          *(unsigned char *)(a1 + 207) = v86 != 0;
        }
        goto LABEL_169;
      case 0x18u:
        if (v9 != 192) {
          goto LABEL_159;
        }
        v5 |= 0x80000u;
        uint64_t v88 = (char *)(v8 + 1);
        int v89 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_153;
        }
        int v90 = *v88;
        int v89 = v89 + (v90 << 7) - 128;
        if (v90 < 0)
        {
          uint64_t v116 = sub_188C0D0((uint64_t)v8, v89);
          *(void *)uint64_t v122 = v116;
          *(_DWORD *)(a1 + 208) = v117;
          if (!v116) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v88 = (char *)(v8 + 2);
LABEL_153:
          *(void *)uint64_t v122 = v88;
          *(_DWORD *)(a1 + 208) = v89;
        }
        goto LABEL_169;
      case 0x19u:
        if (v9 != 200) {
          goto LABEL_159;
        }
        v5 |= 0x100000u;
        uint64_t v91 = (char *)(v8 + 1);
        uint64_t v92 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_158;
        }
        int v93 = *v91;
        uint64_t v92 = v92 + (v93 << 7) - 128;
        if (v93 < 0)
        {
          uint64_t v118 = sub_188C138((uint64_t)v8, v92);
          *(void *)uint64_t v122 = v118;
          *(unsigned char *)(a1 + 212) = v119 != 0;
          if (!v118) {
            goto LABEL_209;
          }
        }
        else
        {
          uint64_t v91 = (char *)(v8 + 2);
LABEL_158:
          *(void *)uint64_t v122 = v91;
          *(unsigned char *)(a1 + 212) = v92 != 0;
        }
        goto LABEL_169;
      default:
LABEL_159:
        if (v9) {
          BOOL v94 = (v9 & 7) == 4;
        }
        else {
          BOOL v94 = 1;
        }
        if (!v94)
        {
          if (v9 - 8000 > 0x18F)
          {
            if (*v7)
            {
              uint64_t v95 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v95 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v122;
            }
            uint64_t v31 = (uint64_t)sub_1885AC0(v9, v95, (char *)v8, a3);
          }
          else
          {
            uint64_t v31 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_253BF38, (uint64_t *)(a1 + 8), a3);
          }
LABEL_168:
          *(void *)uint64_t v122 = v31;
          if (!v31) {
            goto LABEL_209;
          }
LABEL_169:
          if (sub_11947B8((uint64_t)a3, (char **)v122, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_209:
        }
          *(void *)uint64_t v122 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v122;
    }
  }
}

char *sub_14FF8C4(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_150CF58(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 216);
    char *v4 = 24;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 192);
    char *v4 = 32;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 136);
    char *v4 = 42;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_14A3704(v18, (unint64_t)v20, a3);
    if ((v6 & 8) == 0)
    {
LABEL_27:
      if ((v6 & 0x10) == 0) {
        goto LABEL_28;
      }
      goto LABEL_43;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_27;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 144);
  char *v4 = 50;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    int v23 = v4 + 2;
  }
  uint64_t v4 = sub_150AEB4(v21, v23, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_28:
    if ((v6 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 152);
  char *v4 = 58;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    int v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    int v26 = v4 + 2;
  }
  uint64_t v4 = sub_150A080(v24, (unint64_t)v26, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_29:
    if ((v6 & 0x400) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v27 = *(void *)(a1 + 160);
  char *v4 = 66;
  unsigned int v28 = *(_DWORD *)(v27 + 20);
  v4[1] = v28;
  if (v28 > 0x7F) {
    uint64_t v29 = sub_188A9CC(v28, v4 + 1);
  }
  else {
    uint64_t v29 = v4 + 2;
  }
  uint64_t v4 = sub_150370C(v27, (unint64_t)v29, a3);
  if ((v6 & 0x400) != 0)
  {
LABEL_55:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(int *)(a1 + 196);
    char *v4 = 72;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_61:
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v33 = *(_DWORD *)(a1 + 80);
  if (v33)
  {
    for (int j = 0; j != v33; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 90;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        uint64_t v37 = v4 + 2;
      }
      uint64_t v4 = sub_14981DC(v35, (unint64_t)v37, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 168);
    char *v4 = 98;
    unsigned int v39 = *(_DWORD *)(v38 + 64);
    v4[1] = v39;
    if (v39 > 0x7F) {
      uint64_t v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      uint64_t v40 = v4 + 2;
    }
    uint64_t v4 = sub_150C2BC(v38, v40, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_73:
      if ((v6 & 0x100) == 0) {
        goto LABEL_74;
      }
      goto LABEL_93;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_73;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 176);
  char *v4 = 106;
  unsigned int v42 = *(_DWORD *)(v41 + 20);
  v4[1] = v42;
  if (v42 > 0x7F) {
    uint64_t v43 = sub_188A9CC(v42, v4 + 1);
  }
  else {
    uint64_t v43 = v4 + 2;
  }
  uint64_t v4 = sub_15012CC(v41, (unint64_t)v43, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_74:
    if ((v6 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_99;
  }
LABEL_93:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v44 = *(void *)(a1 + 184);
  char *v4 = 114;
  unsigned int v45 = *(_DWORD *)(v44 + 20);
  v4[1] = v45;
  if (v45 > 0x7F) {
    int v46 = sub_188A9CC(v45, v4 + 1);
  }
  else {
    int v46 = v4 + 2;
  }
  uint64_t v4 = sub_14D4730(v44, v46, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_75:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_102;
  }
LABEL_99:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v47 = *(unsigned char *)(a1 + 200);
  char *v4 = 120;
  v4[1] = v47;
  v4 += 2;
  if ((v6 & 0x1000) == 0)
  {
LABEL_76:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_105;
  }
LABEL_102:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v48 = *(unsigned char *)(a1 + 201);
  *(_WORD *)uint64_t v4 = 384;
  v4[2] = v48;
  v4 += 3;
  if ((v6 & 0x2000) == 0)
  {
LABEL_77:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_108;
  }
LABEL_105:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v49 = *(unsigned char *)(a1 + 202);
  *(_WORD *)uint64_t v4 = 392;
  v4[2] = v49;
  v4 += 3;
  if ((v6 & 0x4000) == 0)
  {
LABEL_78:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_111;
  }
LABEL_108:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v50 = *(unsigned char *)(a1 + 203);
  *(_WORD *)uint64_t v4 = 400;
  v4[2] = v50;
  v4 += 3;
  if ((v6 & 0x8000) == 0)
  {
LABEL_79:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_114;
  }
LABEL_111:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v51 = *(unsigned char *)(a1 + 204);
  *(_WORD *)uint64_t v4 = 408;
  v4[2] = v51;
  v4 += 3;
  if ((v6 & 0x10000) != 0)
  {
LABEL_114:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v52 = *(unsigned char *)(a1 + 205);
    *(_WORD *)uint64_t v4 = 416;
    v4[2] = v52;
    v4 += 3;
  }
LABEL_117:
  int v53 = *(_DWORD *)(a1 + 104);
  if (v53)
  {
    for (int k = 0; k != v53; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v55 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 426;
      unsigned int v56 = *(_DWORD *)(v55 + 20);
      v4[2] = v56;
      if (v56 > 0x7F) {
        uint64_t v57 = sub_188A9CC(v56, v4 + 2);
      }
      else {
        uint64_t v57 = v4 + 3;
      }
      uint64_t v4 = sub_146A644(v55, v57, a3);
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v58 = *(unsigned char *)(a1 + 206);
    *(_WORD *)uint64_t v4 = 432;
    v4[2] = v58;
    v4 += 3;
    if ((v6 & 0x40000) == 0)
    {
LABEL_127:
      if ((v6 & 0x80000) == 0) {
        goto LABEL_141;
      }
      goto LABEL_135;
    }
  }
  else if ((v6 & 0x40000) == 0)
  {
    goto LABEL_127;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v59 = *(unsigned char *)(a1 + 207);
  *(_WORD *)uint64_t v4 = 440;
  v4[2] = v59;
  v4 += 3;
  if ((v6 & 0x80000) != 0)
  {
LABEL_135:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v60 = *(_DWORD *)(a1 + 208);
    *(_WORD *)uint64_t v4 = 448;
    v4[2] = v60;
    if (v60 > 0x7F)
    {
      v4[2] = v60 | 0x80;
      unsigned int v61 = v60 >> 7;
      v4[3] = v60 >> 7;
      v4 += 4;
      if (v60 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v62 = v61 >> 14;
          v61 >>= 7;
          *v4++ = v61;
        }
        while (v62);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_141:
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v63 = *(unsigned char *)(a1 + 212);
    *(_WORD *)uint64_t v4 = 456;
    v4[2] = v63;
    v4 += 3;
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1050, v4, a3);
  }
  uint64_t v64 = *(void *)(a1 + 8);
  if ((v64 & 1) == 0) {
    return v4;
  }
  unint64_t v66 = v64 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v66 + 31) < 0)
  {
    uint64_t v67 = *(void **)(v66 + 8);
    uint64_t v68 = *(void *)(v66 + 16);
  }
  else
  {
    uint64_t v67 = (void *)(v66 + 8);
    LODWORD(v68) = *(unsigned __int8 *)(v66 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v68)
  {
    uint64_t v69 = (int)v68;
    memcpy(v4, v67, (int)v68);
    v4 += v69;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v67, v68, v4);
}

uint64_t sub_1500260(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_150D4B0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1498324(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + 2 * v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_146A7A4(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  int v24 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v24) {
    goto LABEL_29;
  }
  if (v24)
  {
    unint64_t v33 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
    uint64_t v35 = *(void *)(v33 + 8);
    if ((v34 & 0x80u) == 0) {
      uint64_t v35 = v34;
    }
    v18 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 2) == 0)
    {
LABEL_22:
      if ((v24 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_70;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_22;
  }
  unint64_t v36 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
  uint64_t v38 = *(void *)(v36 + 8);
  if ((v37 & 0x80u) == 0) {
    uint64_t v38 = v37;
  }
  v18 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 4) == 0)
  {
LABEL_23:
    if ((v24 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v39 = sub_14A3CA8(*(void *)(a1 + 136));
  v18 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 8) == 0)
  {
LABEL_24:
    if ((v24 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v40 = sub_150B644(*(void *)(a1 + 144));
  v18 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x10) == 0)
  {
LABEL_25:
    if ((v24 & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_73:
    uint64_t v42 = sub_1504928(*(void *)(a1 + 160));
    v18 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v24 & 0x40) == 0)
    {
LABEL_27:
      if ((v24 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    goto LABEL_74;
  }
LABEL_72:
  uint64_t v41 = sub_150A1E0(*(void *)(a1 + 152));
  v18 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x20) != 0) {
    goto LABEL_73;
  }
LABEL_26:
  if ((v24 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_74:
  uint64_t v43 = sub_150C484(*(void *)(a1 + 168));
  v18 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x80) != 0)
  {
LABEL_28:
    uint64_t v25 = sub_15015E0(*(void *)(a1 + 176));
    v18 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_29:
  if ((v24 & 0xFF00) == 0) {
    goto LABEL_48;
  }
  if ((v24 & 0x100) == 0)
  {
    if ((v24 & 0x200) == 0) {
      goto LABEL_32;
    }
LABEL_77:
    int v45 = *(_DWORD *)(a1 + 192);
    uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v45 >= 0) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 11;
    }
    v18 += v47;
    if ((v24 & 0x400) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
  uint64_t v44 = sub_14D4ACC(*(void *)(a1 + 184));
  v18 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v24 & 0x200) != 0) {
    goto LABEL_77;
  }
LABEL_32:
  if ((v24 & 0x400) != 0)
  {
LABEL_33:
    int v26 = *(_DWORD *)(a1 + 196);
    uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v26 >= 0) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = 11;
    }
    v18 += v28;
  }
LABEL_37:
  uint64_t v29 = v18 + 2;
  if ((v24 & 0x800) == 0) {
    uint64_t v29 = v18;
  }
  if ((v24 & 0x1000) != 0) {
    v29 += 3;
  }
  if ((v24 & 0x2000) != 0) {
    v29 += 3;
  }
  if ((v24 & 0x4000) != 0) {
    v29 += 3;
  }
  if ((v24 & 0x8000) != 0) {
    uint64_t v18 = v29 + 3;
  }
  else {
    uint64_t v18 = v29;
  }
LABEL_48:
  if ((v24 & 0x3F0000) != 0)
  {
    uint64_t v30 = v18 + 3;
    if ((v24 & 0x10000) == 0) {
      uint64_t v30 = v18;
    }
    if ((v24 & 0x20000) != 0) {
      v30 += 3;
    }
    if ((v24 & 0x40000) != 0) {
      v30 += 3;
    }
    if ((v24 & 0x80000) != 0) {
      v30 += ((9 * (__clz(*(_DWORD *)(a1 + 208) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v24 & 0x100000) != 0) {
      uint64_t v18 = v30 + 3;
    }
    else {
      uint64_t v18 = v30;
    }
    if ((v24 & 0x200000) != 0) {
      v18 += ((9 * (__clz(*(_DWORD *)(a1 + 216) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if (v31)
  {
    unint64_t v48 = v31 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v48 + 31) < 0) {
      uint64_t v49 = *(void *)(v48 + 16);
    }
    else {
      uint64_t v49 = *(unsigned __int8 *)(v48 + 31);
    }
    v18 += v49;
  }
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

void sub_15006F8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12D32B8((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_149ECFC((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122BC08((std::string *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v19) {
    goto LABEL_74;
  }
  if (v19)
  {
    uint64_t v20 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 120), v20, v22);
    if ((v19 & 2) == 0)
    {
LABEL_13:
      if ((v19 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v19 & 2) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v23 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v24 = *(void *)(a1 + 8);
  uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
  if (v24) {
    uint64_t v25 = (uint64_t *)*v25;
  }
  sub_1881DF4((std::string **)(a1 + 128), v23, v25);
  if ((v19 & 4) == 0)
  {
LABEL_14:
    if ((v19 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_26:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v26 = *(void *)(a1 + 136);
  if (!v26)
  {
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (void *)*v28;
    }
    sub_14A47B4((uint64_t)v28);
    *(void *)(a1 + 136) = v26;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v29 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v29 = &off_253A3B0;
  }
  sub_14A3EEC(v26, (uint64_t)v29);
  if ((v19 & 8) == 0)
  {
LABEL_15:
    if ((v19 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_34:
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v30 = *(void *)(a1 + 144);
  if (!v30)
  {
    uint64_t v31 = *(void *)(a1 + 8);
    unint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      unint64_t v32 = (void *)*v32;
    }
    sub_150ED20((uint64_t)v32);
    *(void *)(a1 + 144) = v30;
  }
  if (*(void *)(a2 + 144)) {
    unint64_t v33 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    unint64_t v33 = &off_253C3F8;
  }
  sub_14FE274(v30, (uint64_t)v33);
  if ((v19 & 0x10) == 0)
  {
LABEL_16:
    if ((v19 & 0x20) == 0) {
      goto LABEL_17;
    }
LABEL_50:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v38 = *(void *)(a1 + 160);
    if (!v38)
    {
      uint64_t v39 = *(void *)(a1 + 8);
      uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
      if (v39) {
        uint64_t v40 = (void *)*v40;
      }
      sub_150E6F8((uint64_t)v40);
      *(void *)(a1 + 160) = v38;
    }
    if (*(void *)(a2 + 160)) {
      uint64_t v41 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      uint64_t v41 = &off_253C040;
    }
    sub_14FD454(v38, (uint64_t)v41);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0) {
        goto LABEL_74;
      }
      goto LABEL_66;
    }
    goto LABEL_58;
  }
LABEL_42:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v34 = *(std::string **)(a1 + 152);
  if (!v34)
  {
    uint64_t v35 = *(void *)(a1 + 8);
    unint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      unint64_t v36 = (void *)*v36;
    }
    uint64_t v34 = (std::string *)sub_150ECA4((uint64_t)v36);
    *(void *)(a1 + 152) = v34;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v37 = *(void *(****)(void *))(a2 + 152);
  }
  else {
    uint64_t v37 = &off_253C3D8;
  }
  sub_11AD324(v34, (uint64_t)v37);
  if ((v19 & 0x20) != 0) {
    goto LABEL_50;
  }
LABEL_17:
  if ((v19 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_58:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v42 = *(std::string **)(a1 + 168);
  if (!v42)
  {
    uint64_t v43 = *(void *)(a1 + 8);
    uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      uint64_t v44 = (void *)*v44;
    }
    uint64_t v42 = (std::string *)sub_150EE60((uint64_t)v44);
    *(void *)(a1 + 168) = v42;
  }
  if (*(void *)(a2 + 168)) {
    int v45 = *(void *(****)(void *))(a2 + 168);
  }
  else {
    int v45 = &off_253C4E0;
  }
  sub_14FDD9C(v42, (uint64_t)v45);
  if ((v19 & 0x80) != 0)
  {
LABEL_66:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v46 = *(std::string **)(a1 + 176);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      unint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        unint64_t v48 = (void *)*v48;
      }
      uint64_t v46 = (std::string *)sub_150E67C((uint64_t)v48);
      *(void *)(a1 + 176) = v46;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v49 = *(void *(****)(void *))(a2 + 176);
    }
    else {
      uint64_t v49 = &off_253C018;
    }
    sub_14FDED0(v46, (uint64_t)v49);
  }
LABEL_74:
  if ((v19 & 0xFF00) == 0) {
    goto LABEL_85;
  }
  if ((v19 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v51 = *(void *)(a1 + 184);
    if (!v51)
    {
      uint64_t v52 = *(void *)(a1 + 8);
      int v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
      if (v52) {
        int v53 = (void *)*v53;
      }
      sub_14D75B8((uint64_t)v53);
      *(void *)(a1 + 184) = v51;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v54 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v54 = &off_253B390;
    }
    sub_14D4CD8(v51, (uint64_t)v54);
    if ((v19 & 0x200) == 0)
    {
LABEL_77:
      if ((v19 & 0x400) == 0) {
        goto LABEL_78;
      }
      goto LABEL_107;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_77;
  }
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  if ((v19 & 0x400) == 0)
  {
LABEL_78:
    if ((v19 & 0x800) == 0) {
      goto LABEL_79;
    }
    goto LABEL_108;
  }
LABEL_107:
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  if ((v19 & 0x800) == 0)
  {
LABEL_79:
    if ((v19 & 0x1000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_109;
  }
LABEL_108:
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  if ((v19 & 0x1000) == 0)
  {
LABEL_80:
    if ((v19 & 0x2000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_110;
  }
LABEL_109:
  *(unsigned char *)(a1 + 201) = *(unsigned char *)(a2 + 201);
  if ((v19 & 0x2000) == 0)
  {
LABEL_81:
    if ((v19 & 0x4000) == 0) {
      goto LABEL_82;
    }
LABEL_111:
    *(unsigned char *)(a1 + 203) = *(unsigned char *)(a2 + 203);
    if ((v19 & 0x8000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_83;
  }
LABEL_110:
  *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
  if ((v19 & 0x4000) != 0) {
    goto LABEL_111;
  }
LABEL_82:
  if ((v19 & 0x8000) != 0) {
LABEL_83:
  }
    *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
LABEL_84:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_85:
  if ((v19 & 0x3F0000) == 0) {
    goto LABEL_94;
  }
  if ((v19 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 205) = *(unsigned char *)(a2 + 205);
    if ((v19 & 0x20000) == 0)
    {
LABEL_88:
      if ((v19 & 0x40000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_115;
    }
  }
  else if ((v19 & 0x20000) == 0)
  {
    goto LABEL_88;
  }
  *(unsigned char *)(a1 + 206) = *(unsigned char *)(a2 + 206);
  if ((v19 & 0x40000) == 0)
  {
LABEL_89:
    if ((v19 & 0x80000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_116;
  }
LABEL_115:
  *(unsigned char *)(a1 + 207) = *(unsigned char *)(a2 + 207);
  if ((v19 & 0x80000) == 0)
  {
LABEL_90:
    if ((v19 & 0x100000) == 0) {
      goto LABEL_91;
    }
LABEL_117:
    *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
    if ((v19 & 0x200000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_92;
  }
LABEL_116:
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  if ((v19 & 0x100000) != 0) {
    goto LABEL_117;
  }
LABEL_91:
  if ((v19 & 0x200000) != 0) {
LABEL_92:
  }
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
LABEL_93:
  *(_DWORD *)(a1 + 40) |= v19;
LABEL_94:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v50 = *(void *)(a2 + 8);
  if (v50)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v50 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1500C40(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      BOOL v5 = sub_150DB5C(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if (!v5) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      BOOL v8 = sub_146A84C(*(void *)(*(void *)(a1 + 112) + 8 * v6));
      uint64_t v6 = v7;
      if (!v8) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if ((v9 & 4) != 0)
    {
      uint64_t result = sub_14A4178(*(void *)(a1 + 136));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 8) != 0)
    {
      uint64_t result = sub_14FE71C(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x20) != 0)
    {
      uint64_t result = sub_14FDF84(*(void *)(a1 + 160));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x100) == 0) {
      return 1;
    }
    uint64_t result = sub_14D4F78(*(void *)(a1 + 184));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1500D14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.PoiQuery");
}

void *sub_1500D24(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1500D98(void *a1)
{
  sub_1500D24(a1);

  operator delete();
}

char *sub_1500DD0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v55 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v55, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    BOOL v8 = v55 + 1;
    unsigned int v9 = *v55;
    if (*v55 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        BOOL v8 = (char *)sub_188C180((uint64_t)v55, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        BOOL v8 = v55 + 2;
      }
    }
    uint64_t v55 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_51;
        }
        v5 |= 2u;
        int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v55 = v12;
          *(unsigned char *)(a1 + 28) = v13 != 0;
          goto LABEL_58;
        }
        uint64_t v39 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v55 = v39;
        *(unsigned char *)(a1 + 28) = v40 != 0;
        if (v39) {
          goto LABEL_58;
        }
        goto LABEL_83;
      case 2u:
        if (v9 != 16) {
          goto LABEL_51;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v55 = v41;
          *(unsigned char *)(a1 + 29) = v42 != 0;
          if (!v41) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v55 = v15;
          *(unsigned char *)(a1 + 29) = v16 != 0;
        }
        goto LABEL_58;
      case 3u:
        if (v9 != 24) {
          goto LABEL_51;
        }
        v5 |= 1u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v43 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v55 = v43;
          *(_DWORD *)(a1 + 24) = v44;
          if (!v43) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v55 = v18;
          *(_DWORD *)(a1 + 24) = v19;
        }
        goto LABEL_58;
      case 4u:
        if (v9 != 32) {
          goto LABEL_51;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v45 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v55 = v45;
          *(unsigned char *)(a1 + 30) = v46 != 0;
          if (!v45) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v55 = v21;
          *(unsigned char *)(a1 + 30) = v22 != 0;
        }
        goto LABEL_58;
      case 5u:
        if (v9 != 40) {
          goto LABEL_51;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v47 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v55 = v47;
          *(unsigned char *)(a1 + 31) = v48 != 0;
          if (!v47) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v55 = v24;
          *(unsigned char *)(a1 + 31) = v25 != 0;
        }
        goto LABEL_58;
      case 6u:
        if (v9 != 48) {
          goto LABEL_51;
        }
        v5 |= 0x20u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v49 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v55 = v49;
          *(unsigned char *)(a1 + 32) = v50 != 0;
          if (!v49) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          uint64_t v55 = v27;
          *(unsigned char *)(a1 + 32) = v28 != 0;
        }
        goto LABEL_58;
      case 7u:
        if (v9 != 56) {
          goto LABEL_51;
        }
        v5 |= 0x40u;
        uint64_t v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v51 = (char *)sub_188C138((uint64_t)v8, v31);
          uint64_t v55 = v51;
          *(unsigned char *)(a1 + 33) = v52 != 0;
          if (!v51) {
            goto LABEL_83;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_43:
          uint64_t v55 = v30;
          *(unsigned char *)(a1 + 33) = v31 != 0;
        }
        goto LABEL_58;
      case 8u:
        if (v9 != 64) {
          goto LABEL_51;
        }
        unint64_t v33 = v8 + 1;
        unint64_t v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v36 = v34 + (v35 << 7);
        unint64_t v34 = (v36 - 128);
        if (v35 < 0)
        {
          uint64_t v55 = (char *)sub_188C138((uint64_t)v8, (v36 - 128));
          if (!v55) {
            goto LABEL_83;
          }
          unint64_t v34 = v53;
        }
        else
        {
          unint64_t v33 = v8 + 2;
LABEL_48:
          uint64_t v55 = v33;
        }
        if (v34 > 2)
        {
          if (*v7) {
            uint64_t v54 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(8, v34, v54);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 36) = v34;
        }
        goto LABEL_58;
      default:
LABEL_51:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            BOOL v8 = v55;
          }
          uint64_t v55 = (char *)sub_1885AC0(v9, v38, v8, a3);
          if (!v55) {
            goto LABEL_83;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, &v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_83:
        }
          uint64_t v55 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v55;
    }
  }
}

unsigned char *sub_15012CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 29);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if (v6)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v9 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 24;
    v4[1] = v9;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unsigned int v10 = v9 >> 7;
      v4[2] = v9 >> 7;
      v4 += 3;
      if (v9 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v11 = v10 >> 14;
          v10 >>= 7;
          *v4++ = v10;
        }
        while (v11);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_17:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v12 = *(unsigned char *)(a1 + 30);
    unsigned char *v4 = 32;
    v4[1] = v12;
    v4 += 2;
    if ((v6 & 0x10) == 0)
    {
LABEL_19:
      if ((v6 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_19;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 31);
  unsigned char *v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_20:
    if ((v6 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_32;
  }
LABEL_29:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 32);
  unsigned char *v4 = 48;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_21:
    if ((v6 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_35;
  }
LABEL_32:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v15 = *(unsigned char *)(a1 + 33);
  unsigned char *v4 = 56;
  v4[1] = v15;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_35:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 36);
    unsigned char *v4 = 64;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_41:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_15015E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a1 + 16)) {
      uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else {
      uint64_t v1 = 0;
    }
    if ((*(unsigned char *)(a1 + 16) & 2) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 4) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 8) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x10) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x20) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x40) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x80) != 0)
    {
      int v2 = *(_DWORD *)(a1 + 36);
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v2 >= 0) {
        uint64_t v4 = v3;
      }
      else {
        uint64_t v4 = 11;
      }
      v1 += v4;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_15016D0()
{
  return 1;
}

void *sub_15016D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.RetrieveOptions");
}

double sub_15016E8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24BD048;
  *(void *)(a1 + 8) = v3;
  double result = 0.0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = a2;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = &qword_2550250;
  *(void *)(a1 + 272) = &qword_2550250;
  *(void *)(a1 + 280) = &qword_2550250;
  *(void *)(a1 + 288) = &qword_2550250;
  *(void *)(a1 + 296) = &qword_2550250;
  *(void *)(a1 + 304) = &qword_2550250;
  *(void *)(a1 + 312) = &qword_2550250;
  *(void *)(a1 + 320) = &qword_2550250;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 436) = 0u;
  return result;
}

void *sub_15017AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1501898((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 30);
  sub_1889DE8(a1 + 27);
  sub_1889DA8((uint64_t)(a1 + 25));
  sub_1889DA8((uint64_t)(a1 + 23));
  sub_1889DA8((uint64_t)(a1 + 21));
  sub_1889DA8((uint64_t)(a1 + 19));
  sub_1889DA8((uint64_t)(a1 + 17));
  sub_1889DA8((uint64_t)(a1 + 15));
  sub_1889DA8((uint64_t)(a1 + 13));
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_1889DE8(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1501898(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 264));
  }
  if (*(uint64_t **)(result + 272) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 272));
  }
  if (*(uint64_t **)(result + 280) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 280));
  }
  if (*(uint64_t **)(result + 288) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 288));
  }
  if (*(uint64_t **)(result + 296) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 296));
  }
  if (*(uint64_t **)(result + 304) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 304));
  }
  if (*(uint64_t **)(result + 312) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 312));
  }
  if (*(uint64_t **)(result + 320) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 320));
  }
  if ((uint64_t (***)())result != &off_253C040)
  {
    uint64_t v2 = *(void *)(result + 328);
    if (v2)
    {
      sub_12CD568(v2);
      operator delete();
    }
    uint64_t v3 = v1[42];
    if (v3)
    {
      sub_1508010(v3);
      operator delete();
    }
    uint64_t v4 = v1[43];
    if (v4)
    {
      sub_1507560(v4);
      operator delete();
    }
    if (v1[44])
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = (void *)v1[45];
    if (v5)
    {
      sub_1507B58(v5);
      operator delete();
    }
    double result = v1[46];
    if (result)
    {
      sub_1509104((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_1501A4C(void *a1)
{
  sub_15017AC(a1);

  operator delete();
}

uint64_t sub_1501A84(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1508ACC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
  if ((v6 & 0xE) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(unsigned char *)(a1 + 96) = 0;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_1501B4C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1506884(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1506884(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1501BDC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_1501C2C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 16) = 0;
  uint64_t v2 = *(unsigned int *)(result + 40);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 48) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1509A6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 40) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 64);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(v1 + 72) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1509A6C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 64) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_1501CD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v217 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v217, a3[11].i32[1]))
  {
LABEL_2:
    char v6 = v217;
    goto LABEL_3;
  }
  uint64_t v215 = (uint64_t **)(a1 + 216);
  uint64_t v216 = (uint64_t **)(a1 + 240);
  uint64_t v212 = (uint64_t *)(a1 + 8);
  uint64_t v8 = (unsigned int *)(a1 + 120);
  char v9 = (unsigned int *)(a1 + 104);
  uint64_t v213 = (uint64_t **)(a1 + 24);
  uint64_t v214 = (uint64_t **)(a1 + 48);
  while (2)
  {
    char v6 = v217 + 1;
    unsigned int v10 = *v217;
    if (*v217 < 0)
    {
      int v11 = *v6;
      unsigned int v12 = v10 + (v11 << 7);
      unsigned int v10 = v12 - 128;
      if (v11 < 0)
      {
        char v6 = (char *)sub_188C180((uint64_t)v217, v12 - 128);
        unsigned int v10 = v13;
      }
      else
      {
        char v6 = v217 + 2;
      }
    }
    uint64_t v217 = v6;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v14 = *(void *)(a1 + 328);
        if (!v14)
        {
          char v15 = (void *)(*v212 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v212) {
            char v15 = (void *)*v15;
          }
          uint64_t v14 = sub_12CE0C8((uint64_t)v15);
          *(void *)(a1 + 328) = v14;
          char v6 = v217;
        }
        unint64_t v16 = (char *)sub_12CDA20(a3, v14, (unsigned __int8 *)v6);
        goto LABEL_207;
      case 2u:
        if (v10 != 18) {
          goto LABEL_397;
        }
        unint64_t v17 = v6 - 1;
        while (1)
        {
          unint64_t v18 = (char *)(v17 + 1);
          uint64_t v217 = (char *)(v17 + 1);
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            unint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v213) {
              operator new();
            }
            *uint64_t v23 = v22;
            v23[1] = sub_3A6EDC;
            *uint64_t v22 = 0;
            v22[1] = 0;
            int v22[2] = 0;
            unint64_t v21 = (std::string *)sub_188CDC8((uint64_t)v213, (uint64_t)v22);
            unint64_t v18 = v217;
          }
          unint64_t v17 = sub_188C244(v21, v18, (uint64_t)a3);
          uint64_t v217 = (char *)v17;
          if (!v17) {
            goto LABEL_405;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_208;
          }
        }
      case 3u:
        if (v10 != 26) {
          goto LABEL_397;
        }
        uint64_t v24 = v6 - 1;
        while (1)
        {
          uint64_t v25 = (char *)(v24 + 1);
          uint64_t v217 = (char *)(v24 + 1);
          int v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(std::string **)&v26[2 * v27 + 2];
          }
          else
          {
            if (!*v214) {
              operator new();
            }
            *uint64_t v30 = v29;
            v30[1] = sub_3A6EDC;
            *int v29 = 0;
            v29[1] = 0;
            v29[2] = 0;
            uint64_t v28 = (std::string *)sub_188CDC8((uint64_t)v214, (uint64_t)v29);
            uint64_t v25 = v217;
          }
          uint64_t v24 = sub_188C244(v28, v25, (uint64_t)a3);
          uint64_t v217 = (char *)v24;
          if (!v24) {
            goto LABEL_405;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 26) {
            goto LABEL_208;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v31 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 264);
        goto LABEL_206;
      case 5u:
        if (v10 != 42) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v34 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 272);
        goto LABEL_206;
      case 6u:
        if (v10 != 48) {
          goto LABEL_397;
        }
        v5 |= 0x4000u;
        int v35 = v6 + 1;
        uint64_t v36 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v177 = (char *)sub_188C138((uint64_t)v6, v36);
          uint64_t v217 = v177;
          *(void *)(a1 + 376) = v178;
          if (!v177) {
            goto LABEL_405;
          }
        }
        else
        {
          int v35 = v6 + 2;
LABEL_52:
          uint64_t v217 = v35;
          *(void *)(a1 + 376) = v36;
        }
        goto LABEL_208;
      case 7u:
        if (v10 != 56) {
          goto LABEL_397;
        }
        v5 |= 0x100000u;
        uint64_t v38 = v6 + 1;
        uint64_t v39 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v179 = (char *)sub_188C138((uint64_t)v6, v39);
          uint64_t v217 = v179;
          *(unsigned char *)(a1 + 424) = v180 != 0;
          if (!v179) {
            goto LABEL_405;
          }
        }
        else
        {
          uint64_t v38 = v6 + 2;
LABEL_57:
          uint64_t v217 = v38;
          *(unsigned char *)(a1 + 424) = v39 != 0;
        }
        goto LABEL_208;
      case 8u:
        if (v10 != 66) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v41 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 280);
        goto LABEL_206;
      case 9u:
        if (v10 != 72) {
          goto LABEL_397;
        }
        v5 |= 0x8000u;
        uint64_t v42 = v6 + 1;
        uint64_t v43 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v181 = (char *)sub_188C138((uint64_t)v6, v43);
          uint64_t v217 = v181;
          *(void *)(a1 + 384) = v182;
          if (!v181) {
            goto LABEL_405;
          }
        }
        else
        {
          uint64_t v42 = v6 + 2;
LABEL_66:
          uint64_t v217 = v42;
          *(void *)(a1 + 384) = v43;
        }
        goto LABEL_208;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_397;
        }
        v5 |= 0x10000u;
        int v45 = v6 + 1;
        uint64_t v46 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v183 = (char *)sub_188C138((uint64_t)v6, v46);
          uint64_t v217 = v183;
          *(void *)(a1 + 392) = v184;
          if (!v183) {
            goto LABEL_405;
          }
        }
        else
        {
          int v45 = v6 + 2;
LABEL_71:
          uint64_t v217 = v45;
          *(void *)(a1 + 392) = v46;
        }
        goto LABEL_208;
      case 0xBu:
        if (v10 == 88)
        {
          uint64_t v48 = v6 - 1;
          while (1)
          {
            uint64_t v217 = v48 + 1;
            uint64_t v49 = v48[1];
            if (v48[1] < 0)
            {
              int v50 = v49 + (v48[2] << 7);
              uint64_t v49 = (v50 - 128);
              if (v48[2] < 0)
              {
                uint64_t v48 = (char *)sub_188C138((uint64_t)(v48 + 1), (v50 - 128));
                uint64_t v49 = v51;
              }
              else
              {
                v48 += 3;
              }
            }
            else
            {
              v48 += 2;
            }
            uint64_t v217 = v48;
            uint64_t v52 = *(unsigned int *)(a1 + 72);
            if (v52 == *(_DWORD *)(a1 + 76))
            {
              int v53 = v52 + 1;
              sub_188CA54((unsigned int *)(a1 + 72), v52 + 1);
              *(void *)(*(void *)(a1 + 80) + 8 * v52) = v49;
              uint64_t v48 = v217;
            }
            else
            {
              *(void *)(*(void *)(a1 + 80) + 8 * v52) = v49;
              int v53 = v52 + 1;
            }
            *(_DWORD *)(a1 + 72) = v53;
            if (!v48) {
              break;
            }
            if (*(void *)a3 <= (unint64_t)v48 || *v48 != 88) {
              goto LABEL_208;
            }
          }
LABEL_405:
          char v6 = 0;
          goto LABEL_3;
        }
        if (v10 != 90) {
          goto LABEL_397;
        }
        unint64_t v207 = (unsigned int *)(a1 + 72);
        goto LABEL_386;
      case 0xCu:
        if (v10 != 96) {
          goto LABEL_397;
        }
        v5 |= 0x20000u;
        uint64_t v54 = v6 + 1;
        uint64_t v55 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_90;
        }
        int v56 = *v54;
        uint64_t v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v185 = (char *)sub_188C138((uint64_t)v6, v55);
          uint64_t v217 = v185;
          *(void *)(a1 + 400) = v186;
          if (!v185) {
            goto LABEL_405;
          }
        }
        else
        {
          uint64_t v54 = v6 + 2;
LABEL_90:
          uint64_t v217 = v54;
          *(void *)(a1 + 400) = v55;
        }
        goto LABEL_208;
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_397;
        }
        v5 |= 0x40000u;
        uint64_t v57 = v6 + 1;
        uint64_t v58 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_95;
        }
        int v59 = *v57;
        uint64_t v58 = v58 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          uint64_t v187 = (char *)sub_188C138((uint64_t)v6, v58);
          uint64_t v217 = v187;
          *(void *)(a1 + 408) = v188;
          if (!v187) {
            goto LABEL_405;
          }
        }
        else
        {
          uint64_t v57 = v6 + 2;
LABEL_95:
          uint64_t v217 = v57;
          *(void *)(a1 + 408) = v58;
        }
        goto LABEL_208;
      case 0xEu:
        if (v10 != 112) {
          goto LABEL_397;
        }
        v5 |= 0x200000u;
        unsigned int v60 = v6 + 1;
        uint64_t v61 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_100;
        }
        int v62 = *v60;
        uint64_t v61 = v61 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          uint64_t v189 = (char *)sub_188C138((uint64_t)v6, v61);
          uint64_t v217 = v189;
          *(unsigned char *)(a1 + 425) = v190 != 0;
          if (!v189) {
            goto LABEL_405;
          }
        }
        else
        {
          unsigned int v60 = v6 + 2;
LABEL_100:
          uint64_t v217 = v60;
          *(unsigned char *)(a1 + 425) = v61 != 0;
        }
        goto LABEL_208;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_397;
        }
        v5 |= 0x400000u;
        char v63 = v6 + 1;
        uint64_t v64 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_105;
        }
        int v65 = *v63;
        uint64_t v64 = v64 + (v65 << 7) - 128;
        if (v65 < 0)
        {
          uint64_t v191 = (char *)sub_188C138((uint64_t)v6, v64);
          uint64_t v217 = v191;
          *(unsigned char *)(a1 + 426) = v192 != 0;
          if (!v191) {
            goto LABEL_405;
          }
        }
        else
        {
          char v63 = v6 + 2;
LABEL_105:
          uint64_t v217 = v63;
          *(unsigned char *)(a1 + 426) = v64 != 0;
        }
        goto LABEL_208;
      case 0x10u:
        if (v10 != 128) {
          goto LABEL_397;
        }
        v5 |= 0x80000u;
        unint64_t v66 = v6 + 1;
        uint64_t v67 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v68 = *v66;
        uint64_t v67 = v67 + (v68 << 7) - 128;
        if (v68 < 0)
        {
          uint64_t v193 = (char *)sub_188C138((uint64_t)v6, v67);
          uint64_t v217 = v193;
          *(void *)(a1 + 416) = v194;
          if (!v193) {
            goto LABEL_405;
          }
        }
        else
        {
          unint64_t v66 = v6 + 2;
LABEL_110:
          uint64_t v217 = v66;
          *(void *)(a1 + 416) = v67;
        }
        goto LABEL_208;
      case 0x11u:
        if (v10 == 136)
        {
          uint64_t v69 = v6 - 2;
          while (1)
          {
            uint64_t v217 = v69 + 2;
            uint64_t v70 = v69[2];
            if (v69[2] < 0)
            {
              int v71 = v70 + (v69[3] << 7);
              uint64_t v70 = (v71 - 128);
              if (v69[3] < 0)
              {
                uint64_t v69 = (char *)sub_188C138((uint64_t)(v69 + 2), (v71 - 128));
                uint64_t v70 = v72;
              }
              else
              {
                v69 += 4;
              }
            }
            else
            {
              v69 += 3;
            }
            uint64_t v217 = v69;
            uint64_t v73 = *(unsigned int *)(a1 + 88);
            if (v73 == *(_DWORD *)(a1 + 92))
            {
              int v74 = v73 + 1;
              sub_188CA54((unsigned int *)(a1 + 88), v73 + 1);
              *(void *)(*(void *)(a1 + 96) + 8 * v73) = v70;
              uint64_t v69 = v217;
            }
            else
            {
              *(void *)(*(void *)(a1 + 96) + 8 * v73) = v70;
              int v74 = v73 + 1;
            }
            *(_DWORD *)(a1 + 88) = v74;
            if (!v69) {
              goto LABEL_405;
            }
            if (*(void *)a3 <= (unint64_t)v69 || *(_WORD *)v69 != 392) {
              goto LABEL_208;
            }
          }
        }
        if (v10 != 138) {
          goto LABEL_397;
        }
        unint64_t v207 = (unsigned int *)(a1 + 88);
        goto LABEL_386;
      case 0x12u:
        if (v10 == 144)
        {
          int v75 = v6 - 2;
          while (1)
          {
            uint64_t v217 = v75 + 2;
            uint64_t v76 = v75[2];
            if (v75[2] < 0)
            {
              int v77 = v76 + (v75[3] << 7);
              uint64_t v76 = (v77 - 128);
              if (v75[3] < 0)
              {
                int v75 = (char *)sub_188C138((uint64_t)(v75 + 2), (v77 - 128));
                uint64_t v76 = v78;
              }
              else
              {
                v75 += 4;
              }
            }
            else
            {
              v75 += 3;
            }
            uint64_t v217 = v75;
            uint64_t v79 = *(unsigned int *)(a1 + 104);
            if (v79 == *(_DWORD *)(a1 + 108))
            {
              unsigned int v80 = v79 + 1;
              sub_188CA54(v9, v79 + 1);
              *(void *)(*(void *)(a1 + 112) + 8 * v79) = v76;
              int v75 = v217;
            }
            else
            {
              *(void *)(*(void *)(a1 + 112) + 8 * v79) = v76;
              unsigned int v80 = v79 + 1;
            }
            unsigned int *v9 = v80;
            if (!v75) {
              goto LABEL_405;
            }
            if (*(void *)a3 <= (unint64_t)v75 || *(_WORD *)v75 != 400) {
              goto LABEL_208;
            }
          }
        }
        if (v10 != 146) {
          goto LABEL_397;
        }
        unint64_t v207 = v9;
        goto LABEL_386;
      case 0x13u:
        if (v10 != 152) {
          goto LABEL_397;
        }
        v5 |= 0x800000u;
        int v81 = v6 + 1;
        uint64_t v82 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_143;
        }
        int v83 = *v81;
        uint64_t v82 = v82 + (v83 << 7) - 128;
        if (v83 < 0)
        {
          uint64_t v195 = (char *)sub_188C138((uint64_t)v6, v82);
          uint64_t v217 = v195;
          *(unsigned char *)(a1 + 427) = v196 != 0;
          if (!v195) {
            goto LABEL_405;
          }
        }
        else
        {
          int v81 = v6 + 2;
LABEL_143:
          uint64_t v217 = v81;
          *(unsigned char *)(a1 + 427) = v82 != 0;
        }
        goto LABEL_208;
      case 0x14u:
        if (v10 != 162) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v84 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
        if (v84) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 288);
        goto LABEL_206;
      case 0x15u:
        if (v10 != 170) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v85 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v85 & 0xFFFFFFFFFFFFFFFCLL);
        if (v85) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 296);
        goto LABEL_206;
      case 0x18u:
        if (v10 != 192) {
          goto LABEL_397;
        }
        v5 |= 0x1000000u;
        uint64_t v86 = v6 + 1;
        uint64_t v87 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_156;
        }
        int v88 = *v86;
        uint64_t v87 = v87 + (v88 << 7) - 128;
        if (v88 < 0)
        {
          uint64_t v197 = (char *)sub_188C138((uint64_t)v6, v87);
          uint64_t v217 = v197;
          *(unsigned char *)(a1 + 428) = v198 != 0;
          if (!v197) {
            goto LABEL_405;
          }
        }
        else
        {
          uint64_t v86 = v6 + 2;
LABEL_156:
          uint64_t v217 = v86;
          *(unsigned char *)(a1 + 428) = v87 != 0;
        }
        goto LABEL_208;
      case 0x19u:
        if (v10 != 202) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v89 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
        if (v89) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 304);
        goto LABEL_206;
      case 0x1Au:
        if (v10 != 210) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v90 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
        if (v90) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 312);
        goto LABEL_206;
      case 0x1Bu:
        if (v10 != 218) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v91 = *(void *)(a1 + 336);
        if (!v91)
        {
          uint64_t v92 = (void *)(*v212 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v212) {
            uint64_t v92 = (void *)*v92;
          }
          uint64_t v91 = sub_150EA40((uint64_t)v92);
          *(void *)(a1 + 336) = v91;
          char v6 = v217;
        }
        unint64_t v16 = (char *)sub_15034CC(a3, v91, (unsigned __int8 *)v6);
        goto LABEL_207;
      case 0x1Cu:
        if (v10 != 224) {
          goto LABEL_397;
        }
        v5 |= 0x8000000u;
        int v93 = v6 + 1;
        uint64_t v94 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_175;
        }
        int v95 = *v93;
        uint64_t v94 = v94 + (v95 << 7) - 128;
        if (v95 < 0)
        {
          uint64_t v199 = (char *)sub_188C138((uint64_t)v6, v94);
          uint64_t v217 = v199;
          *(void *)(a1 + 432) = v200;
          if (!v199) {
            goto LABEL_405;
          }
        }
        else
        {
          int v93 = v6 + 2;
LABEL_175:
          uint64_t v217 = v93;
          *(void *)(a1 + 432) = v94;
        }
        goto LABEL_208;
      case 0x1Du:
        if (v10 != 234) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v96 = *(void **)(a1 + 344);
        if (!v96)
        {
          int v97 = (void *)(*v212 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v212) {
            int v97 = (void *)*v97;
          }
          uint64_t v96 = sub_150E904((uint64_t)v97);
          *(void *)(a1 + 344) = v96;
          char v6 = v217;
        }
        unint64_t v16 = sub_150355C(a3, (uint64_t)v96, (unsigned __int8 *)v6);
        goto LABEL_207;
      case 0x1Eu:
        if (v10 == 240)
        {
          unint64_t v98 = v6 - 2;
          while (1)
          {
            uint64_t v217 = v98 + 2;
            uint64_t v99 = v98[2];
            if (v98[2] < 0)
            {
              int v100 = v99 + (v98[3] << 7);
              uint64_t v99 = (v100 - 128);
              if (v98[3] < 0)
              {
                unint64_t v98 = (char *)sub_188C138((uint64_t)(v98 + 2), (v100 - 128));
                uint64_t v99 = v101;
              }
              else
              {
                v98 += 4;
              }
            }
            else
            {
              v98 += 3;
            }
            uint64_t v217 = v98;
            uint64_t v102 = *(unsigned int *)(a1 + 120);
            if (v102 == *(_DWORD *)(a1 + 124))
            {
              unsigned int v103 = v102 + 1;
              sub_188CA54(v8, v102 + 1);
              *(void *)(*(void *)(a1 + 128) + 8 * v102) = v99;
              unint64_t v98 = v217;
            }
            else
            {
              *(void *)(*(void *)(a1 + 128) + 8 * v102) = v99;
              unsigned int v103 = v102 + 1;
            }
            unsigned int *v8 = v103;
            if (!v98) {
              goto LABEL_405;
            }
            if (*(void *)a3 <= (unint64_t)v98 || *(_WORD *)v98 != 496) {
              goto LABEL_208;
            }
          }
        }
        if (v10 != 242) {
          goto LABEL_397;
        }
        unint64_t v207 = v8;
        goto LABEL_386;
      case 0x1Fu:
        if (v10 != 250) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v104 = *(void *)(a1 + 352);
        if (!v104)
        {
          uint64_t v105 = (void *)(*v212 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v212) {
            uint64_t v105 = (void *)*v105;
          }
          uint64_t v104 = sub_15C1918((uint64_t)v105);
          *(void *)(a1 + 352) = v104;
          char v6 = v217;
        }
        unint64_t v16 = sub_1198F14(a3, v104, (unsigned __int8 *)v6);
        goto LABEL_207;
      case 0x20u:
        if (v10 != 2) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v106 = *(void *)(a1 + 8);
        int v32 = (uint64_t *)(v106 & 0xFFFFFFFFFFFFFFFCLL);
        if (v106) {
          int v32 = (uint64_t *)*v32;
        }
        unint64_t v33 = (void *)(a1 + 320);
LABEL_206:
        uint64_t v107 = (std::string *)sub_1880F84(v33, v32);
        unint64_t v16 = (char *)sub_188C244(v107, v217, (uint64_t)a3);
        goto LABEL_207;
      case 0x21u:
        if (v10 == 8)
        {
          uint64_t v108 = v6 - 2;
          while (1)
          {
            uint64_t v217 = v108 + 2;
            uint64_t v109 = v108[2];
            if (v108[2] < 0)
            {
              int v110 = v109 + (v108[3] << 7);
              uint64_t v109 = (v110 - 128);
              if (v108[3] < 0)
              {
                uint64_t v108 = (char *)sub_188C138((uint64_t)(v108 + 2), (v110 - 128));
                uint64_t v109 = v111;
              }
              else
              {
                v108 += 4;
              }
            }
            else
            {
              v108 += 3;
            }
            uint64_t v112 = v8;
            uint64_t v217 = v108;
            uint64_t v113 = *(unsigned int *)(a1 + 136);
            if (v113 == *(_DWORD *)(a1 + 140))
            {
              int v114 = v113 + 1;
              uint64_t v115 = (_DWORD *)(a1 + 136);
              sub_188CA54((unsigned int *)(a1 + 136), v113 + 1);
              *(void *)(*(void *)(a1 + 144) + 8 * v113) = v109;
              uint64_t v108 = v217;
            }
            else
            {
              *(void *)(*(void *)(a1 + 144) + 8 * v113) = v109;
              int v114 = v113 + 1;
              uint64_t v115 = (_DWORD *)(a1 + 136);
            }
            _DWORD *v115 = v114;
            if (!v108) {
              goto LABEL_405;
            }
            if (*(void *)a3 <= (unint64_t)v108) {
              break;
            }
            uint64_t v8 = v112;
            char v9 = (unsigned int *)(a1 + 104);
            if (*(_WORD *)v108 != 648) {
              goto LABEL_208;
            }
          }
          uint64_t v8 = v112;
          char v9 = (unsigned int *)(a1 + 104);
LABEL_208:
          if (sub_11947B8((uint64_t)a3, &v217, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v10 == 10)
        {
          unint64_t v207 = (unsigned int *)(a1 + 136);
LABEL_386:
          unint64_t v16 = (char *)sub_188C2EC(v207, (unsigned __int8 *)v6, (uint64_t)a3);
          goto LABEL_207;
        }
LABEL_397:
        if (v10) {
          BOOL v210 = (v10 & 7) == 4;
        }
        else {
          BOOL v210 = 1;
        }
        if (!v210)
        {
          if (*v212)
          {
            uint64_t v211 = (std::string *)((*v212 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v211 = (std::string *)sub_188DBD8(v212);
            char v6 = v217;
          }
          unint64_t v16 = (char *)sub_1885AC0(v10, v211, v6, a3);
LABEL_207:
          uint64_t v217 = v16;
          if (!v16) {
            goto LABEL_405;
          }
          goto LABEL_208;
        }
        if (v6) {
          a3[10].i32[0] = v10 - 1;
        }
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v5;
        return v6;
      case 0x22u:
        if (v10 != 17) {
          goto LABEL_397;
        }
        v5 |= 0x10000000u;
        *(void *)(a1 + 440) = *(void *)v6;
        uint64_t v217 = v6 + 8;
        goto LABEL_208;
      case 0x23u:
        if (v10 == 24)
        {
          uint64_t v116 = v6 - 2;
          while (1)
          {
            uint64_t v217 = v116 + 2;
            unint64_t v117 = v116[2];
            uint64_t v118 = v116 + 3;
            if (v116[2] < 0)
            {
              int v119 = *v118;
              int v120 = v117 + (v119 << 7);
              unint64_t v117 = (v120 - 128);
              if (v119 < 0)
              {
                uint64_t v217 = (char *)sub_188C138((uint64_t)(v116 + 2), (v120 - 128));
                if (!v217) {
                  goto LABEL_405;
                }
                unint64_t v117 = v124;
                goto LABEL_232;
              }
              uint64_t v118 = v116 + 4;
            }
            uint64_t v217 = v118;
LABEL_232:
            if (sub_13942C0(v117))
            {
              uint64_t v121 = *(unsigned int *)(a1 + 152);
              uint64_t v122 = (_DWORD *)(a1 + 152);
              if (v121 == *(_DWORD *)(a1 + 156))
              {
                int v123 = v121 + 1;
                sub_188C80C((unsigned int *)(a1 + 152), v121 + 1);
                uint64_t v122 = (_DWORD *)(a1 + 152);
                *(_DWORD *)(*(void *)(a1 + 160) + 4 * v121) = v117;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 160) + 4 * v121) = v117;
                int v123 = v121 + 1;
              }
              *uint64_t v122 = v123;
            }
            else
            {
              if (*v212) {
                uint64_t v125 = (std::string *)((*v212 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v125 = (std::string *)sub_188DBD8(v212);
              }
              sub_188C020(35, v117, v125);
            }
            uint64_t v116 = v217;
            if (*(void *)a3 <= (unint64_t)v217 || *(_WORD *)v217 != 664) {
              goto LABEL_208;
            }
          }
        }
        if (v10 != 26) {
          goto LABEL_397;
        }
        *(void *)&long long v218 = a1 + 152;
        *((void *)&v218 + 1) = sub_13942C0;
        uint64_t v219 = a1 + 8;
        int v208 = 35;
        goto LABEL_396;
      case 0x24u:
        if (v10 != 32) {
          goto LABEL_397;
        }
        v5 |= 0x2000000u;
        uint64_t v126 = v6 + 1;
        uint64_t v127 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_250;
        }
        int v128 = *v126;
        uint64_t v127 = v127 + (v128 << 7) - 128;
        if (v128 < 0)
        {
          uint64_t v201 = (char *)sub_188C138((uint64_t)v6, v127);
          uint64_t v217 = v201;
          *(unsigned char *)(a1 + 429) = v202 != 0;
          if (!v201) {
            goto LABEL_405;
          }
        }
        else
        {
          uint64_t v126 = v6 + 2;
LABEL_250:
          uint64_t v217 = v126;
          *(unsigned char *)(a1 + 429) = v127 != 0;
        }
        goto LABEL_208;
      case 0x25u:
        if (v10 == 40)
        {
          uint64_t v129 = v6 - 2;
          while (1)
          {
            uint64_t v217 = v129 + 2;
            int v130 = v129[2];
            if (v129[2] < 0)
            {
              int v131 = v130 + (v129[3] << 7);
              int v130 = v131 - 128;
              if (v129[3] < 0)
              {
                uint64_t v129 = (char *)sub_188C0D0((uint64_t)(v129 + 2), v131 - 128);
                int v130 = v132;
              }
              else
              {
                v129 += 4;
              }
            }
            else
            {
              v129 += 3;
            }
            uint64_t v217 = v129;
            uint64_t v133 = *(unsigned int *)(a1 + 168);
            uint64_t v134 = (_DWORD *)(a1 + 168);
            if (v133 == *(_DWORD *)(a1 + 172))
            {
              int v135 = v133 + 1;
              sub_188C80C((unsigned int *)(a1 + 168), v133 + 1);
              uint64_t v134 = (_DWORD *)(a1 + 168);
              *(_DWORD *)(*(void *)(a1 + 176) + 4 * v133) = v130;
              uint64_t v129 = v217;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 176) + 4 * v133) = v130;
              int v135 = v133 + 1;
            }
            *uint64_t v134 = v135;
            if (!v129) {
              goto LABEL_405;
            }
            if (*(void *)a3 <= (unint64_t)v129 || *(_WORD *)v129 != 680) {
              goto LABEL_208;
            }
          }
        }
        if (v10 != 42) {
          goto LABEL_397;
        }
        uint64_t v209 = (unsigned int *)(a1 + 168);
LABEL_393:
        unint64_t v16 = (char *)sub_188C2CC(v209, (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_207;
      case 0x26u:
        if (v10 == 48)
        {
          int v136 = v6 - 2;
          while (1)
          {
            uint64_t v217 = v136 + 2;
            int v137 = v136[2];
            if (v136[2] < 0)
            {
              int v138 = v137 + (v136[3] << 7);
              int v137 = v138 - 128;
              if (v136[3] < 0)
              {
                int v136 = (char *)sub_188C0D0((uint64_t)(v136 + 2), v138 - 128);
                int v137 = v139;
              }
              else
              {
                v136 += 4;
              }
            }
            else
            {
              v136 += 3;
            }
            uint64_t v217 = v136;
            uint64_t v140 = *(unsigned int *)(a1 + 184);
            int v141 = (_DWORD *)(a1 + 184);
            if (v140 == *(_DWORD *)(a1 + 188))
            {
              int v142 = v140 + 1;
              sub_188C80C((unsigned int *)(a1 + 184), v140 + 1);
              *(_DWORD *)(*(void *)(a1 + 192) + 4 * v140) = v137;
              int v141 = (_DWORD *)(a1 + 184);
              int v136 = v217;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 192) + 4 * v140) = v137;
              int v142 = v140 + 1;
            }
            _DWORD *v141 = v142;
            if (!v136) {
              goto LABEL_405;
            }
            if (*(void *)a3 <= (unint64_t)v136 || *(_WORD *)v136 != 688) {
              goto LABEL_208;
            }
          }
        }
        if (v10 != 50) {
          goto LABEL_397;
        }
        uint64_t v209 = (unsigned int *)(a1 + 184);
        goto LABEL_393;
      case 0x27u:
        if (v10 != 56)
        {
          if (v10 != 58) {
            goto LABEL_397;
          }
          *(void *)&long long v218 = a1 + 200;
          *((void *)&v218 + 1) = sub_13942C0;
          uint64_t v219 = a1 + 8;
          int v208 = 39;
LABEL_396:
          int v220 = v208;
          unint64_t v16 = sub_1112E88((uint64_t)a3, v6, &v218);
          goto LABEL_207;
        }
        uint64_t v143 = v6 - 2;
        while (1)
        {
          uint64_t v217 = v143 + 2;
          unint64_t v144 = v143[2];
          uint64_t v145 = v143 + 3;
          if (v143[2] < 0)
          {
            int v146 = *v145;
            int v147 = v144 + (v146 << 7);
            unint64_t v144 = (v147 - 128);
            if (v146 < 0)
            {
              uint64_t v217 = (char *)sub_188C138((uint64_t)(v143 + 2), (v147 - 128));
              if (!v217) {
                goto LABEL_405;
              }
              unint64_t v144 = v151;
              goto LABEL_285;
            }
            uint64_t v145 = v143 + 4;
          }
          uint64_t v217 = v145;
LABEL_285:
          if (sub_13942C0(v144))
          {
            uint64_t v148 = *(unsigned int *)(a1 + 200);
            int v149 = (_DWORD *)(a1 + 200);
            if (v148 == *(_DWORD *)(a1 + 204))
            {
              int v150 = v148 + 1;
              sub_188C80C((unsigned int *)(a1 + 200), v148 + 1);
              int v149 = (_DWORD *)(a1 + 200);
              *(_DWORD *)(*(void *)(a1 + 208) + 4 * v148) = v144;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 208) + 4 * v148) = v144;
              int v150 = v148 + 1;
            }
            *int v149 = v150;
          }
          else
          {
            if (*v212) {
              BOOL v152 = (std::string *)((*v212 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              BOOL v152 = (std::string *)sub_188DBD8(v212);
            }
            sub_188C020(39, v144, v152);
          }
          uint64_t v143 = v217;
          if (*(void *)a3 <= (unint64_t)v217 || *(_WORD *)v217 != 696) {
            goto LABEL_208;
          }
        }
      case 0x28u:
        if (v10 != 66) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v153 = *(void *)(a1 + 360);
        if (!v153)
        {
          uint64_t v154 = (void *)(*v212 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v212) {
            uint64_t v154 = (void *)*v154;
          }
          uint64_t v153 = sub_150E9A0((uint64_t)v154);
          *(void *)(a1 + 360) = v153;
          char v6 = v217;
        }
        unint64_t v16 = (char *)sub_15035EC(a3, v153, (unsigned __int8 *)v6);
        goto LABEL_207;
      case 0x29u:
        if (v10 != 72) {
          goto LABEL_397;
        }
        v5 |= 0x20000000u;
        uint64_t v155 = v6 + 1;
        int v156 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_309;
        }
        int v157 = *v155;
        int v156 = v156 + (v157 << 7) - 128;
        if (v157 < 0)
        {
          uint64_t v203 = (char *)sub_188C0D0((uint64_t)v6, v156);
          uint64_t v217 = v203;
          *(_DWORD *)(a1 + 448) = v204;
          if (!v203) {
            goto LABEL_405;
          }
        }
        else
        {
          uint64_t v155 = v6 + 2;
LABEL_309:
          uint64_t v217 = v155;
          *(_DWORD *)(a1 + 448) = v156;
        }
        goto LABEL_208;
      case 0x2Au:
        if (v10 != 82) {
          goto LABEL_397;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v158 = *(void *)(a1 + 368);
        if (!v158)
        {
          uint64_t v159 = (void *)(*v212 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v212) {
            uint64_t v159 = (void *)*v159;
          }
          uint64_t v158 = sub_150EB80((uint64_t)v159);
          *(void *)(a1 + 368) = v158;
          char v6 = v217;
        }
        unint64_t v16 = sub_150367C(a3, v158, (unsigned __int8 *)v6);
        goto LABEL_207;
      case 0x2Bu:
        if (v10 != 88) {
          goto LABEL_397;
        }
        v5 |= 0x4000000u;
        int v160 = v6 + 1;
        uint64_t v161 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_320;
        }
        int v162 = *v160;
        uint64_t v161 = v161 + (v162 << 7) - 128;
        if (v162 < 0)
        {
          uint64_t v205 = (char *)sub_188C138((uint64_t)v6, v161);
          uint64_t v217 = v205;
          *(unsigned char *)(a1 + 430) = v206 != 0;
          if (!v205) {
            goto LABEL_405;
          }
        }
        else
        {
          int v160 = v6 + 2;
LABEL_320:
          uint64_t v217 = v160;
          *(unsigned char *)(a1 + 430) = v161 != 0;
        }
        goto LABEL_208;
      case 0x2Cu:
        if (v10 != 98) {
          goto LABEL_397;
        }
        uint64_t v163 = v6 - 2;
        while (1)
        {
          uint64_t v164 = (char *)(v163 + 2);
          uint64_t v217 = (char *)(v163 + 2);
          uint64_t v165 = *(_DWORD **)(a1 + 232);
          if (v165 && (uint64_t v166 = *(int *)(a1 + 224), (int)v166 < *v165))
          {
            *(_DWORD *)(a1 + 224) = v166 + 1;
            uint64_t v167 = *(std::string **)&v165[2 * v166 + 2];
          }
          else
          {
            if (!*v215) {
              operator new();
            }
            *uint64_t v169 = v168;
            v169[1] = sub_3A6EDC;
            *uint64_t v168 = 0;
            v168[1] = 0;
            v168[2] = 0;
            uint64_t v167 = (std::string *)sub_188CDC8((uint64_t)v215, (uint64_t)v168);
            uint64_t v164 = v217;
          }
          uint64_t v163 = sub_188C244(v167, v164, (uint64_t)a3);
          uint64_t v217 = (char *)v163;
          if (!v163) {
            goto LABEL_405;
          }
          if (*(void *)a3 <= (unint64_t)v163 || *(_WORD *)v163 != 738) {
            goto LABEL_208;
          }
        }
      case 0x2Du:
        if (v10 != 106) {
          goto LABEL_397;
        }
        uint64_t v170 = v6 - 2;
        while (1)
        {
          uint64_t v171 = (char *)(v170 + 2);
          uint64_t v217 = (char *)(v170 + 2);
          uint64_t v172 = *(_DWORD **)(a1 + 256);
          if (v172 && (uint64_t v173 = *(int *)(a1 + 248), (int)v173 < *v172))
          {
            *(_DWORD *)(a1 + 248) = v173 + 1;
            uint64_t v174 = *(std::string **)&v172[2 * v173 + 2];
          }
          else
          {
            if (!*v216) {
              operator new();
            }
            *uint64_t v176 = v175;
            v176[1] = sub_3A6EDC;
            *uint64_t v175 = 0;
            v175[1] = 0;
            v175[2] = 0;
            uint64_t v174 = (std::string *)sub_188CDC8((uint64_t)v216, (uint64_t)v175);
            uint64_t v171 = v217;
          }
          uint64_t v170 = sub_188C244(v174, v171, (uint64_t)a3);
          uint64_t v217 = (char *)v170;
          if (!v170) {
            goto LABEL_405;
          }
          if (*(void *)a3 <= (unint64_t)v170 || *(_WORD *)v170 != 746) {
            goto LABEL_208;
          }
        }
      default:
        goto LABEL_397;
    }
  }
}

uint64_t sub_15034CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15080FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_150355C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150765C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15035EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1507C0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_150367C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15091D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_150370C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 328);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      char v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      char v9 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_12CDAB0(v7, v9, a3);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      unsigned int v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_19;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        char *v4 = 18;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          unsigned int v13 = (void *)*v13;
        }
        char v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_17;
      }
LABEL_19:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v13, v4);
LABEL_17:
      v11 += 8;
    }
    while (v12 != v11);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 56);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      uint64_t v19 = *(void **)(*(void *)(a1 + 64) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_31;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        char *v4 = 26;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          uint64_t v19 = (void *)*v19;
        }
        unint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_29;
      }
LABEL_31:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v19, v4);
LABEL_29:
      v17 += 8;
    }
    while (v18 != v17);
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_34:
      if ((v6 & 0x4000) == 0) {
        goto LABEL_44;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_34;
  }
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0) {
    goto LABEL_44;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v22 = *(void *)(a1 + 376);
  char *v4 = 48;
  v4[1] = v22;
  if (v22 > 0x7F)
  {
    v4[1] = v22 | 0x80;
    unint64_t v23 = v22 >> 7;
    v4[2] = v22 >> 7;
    v4 += 3;
    if (v22 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v24 = v23 >> 14;
        v23 >>= 7;
        *v4++ = v23;
      }
      while (v24);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_44:
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 424);
    char *v4 = 56;
    v4[1] = v25;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_46:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_58;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_46;
  }
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x8000) == 0) {
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v26 = *(void *)(a1 + 384);
  char *v4 = 72;
  v4[1] = v26;
  if (v26 > 0x7F)
  {
    v4[1] = v26 | 0x80;
    unint64_t v27 = v26 >> 7;
    v4[2] = v26 >> 7;
    v4 += 3;
    if (v26 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v28 = v27 >> 14;
        v27 >>= 7;
        *v4++ = v27;
      }
      while (v28);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_58:
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v29 = *(void *)(a1 + 392);
    char *v4 = 80;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unint64_t v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v32 = *(unsigned int *)(a1 + 72);
  if ((int)v32 >= 1)
  {
    for (uint64_t i = 0; i != v32; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v34 = *(void *)(*(void *)(a1 + 80) + 8 * i);
      char *v4 = 88;
      v4[1] = v34;
      if (v34 > 0x7F)
      {
        v4[1] = v34 | 0x80;
        unint64_t v35 = v34 >> 7;
        v4[2] = v34 >> 7;
        v4 += 3;
        if (v34 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v36 = v35 >> 14;
            v35 >>= 7;
            *v4++ = v35;
          }
          while (v36);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v37 = *(void *)(a1 + 400);
    char *v4 = 96;
    v4[1] = v37;
    if (v37 > 0x7F)
    {
      v4[1] = v37 | 0x80;
      unint64_t v38 = v37 >> 7;
      v4[2] = v37 >> 7;
      v4 += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v40 = *(void *)(a1 + 408);
    char *v4 = 104;
    v4[1] = v40;
    if (v40 > 0x7F)
    {
      v4[1] = v40 | 0x80;
      unint64_t v41 = v40 >> 7;
      v4[2] = v40 >> 7;
      v4 += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v43 = *(unsigned char *)(a1 + 425);
    char *v4 = 112;
    v4[1] = v43;
    v4 += 2;
    if ((v6 & 0x400000) == 0)
    {
LABEL_90:
      if ((v6 & 0x80000) == 0) {
        goto LABEL_104;
      }
      goto LABEL_98;
    }
  }
  else if ((v6 & 0x400000) == 0)
  {
    goto LABEL_90;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v44 = *(unsigned char *)(a1 + 426);
  char *v4 = 120;
  v4[1] = v44;
  v4 += 2;
  if ((v6 & 0x80000) != 0)
  {
LABEL_98:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v45 = *(void *)(a1 + 416);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v45;
    if (v45 > 0x7F)
    {
      v4[2] = v45 | 0x80;
      unint64_t v46 = v45 >> 7;
      v4[3] = v45 >> 7;
      v4 += 4;
      if (v45 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v47 = v46 >> 14;
          v46 >>= 7;
          *v4++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_104:
  uint64_t v48 = *(unsigned int *)(a1 + 88);
  if ((int)v48 >= 1)
  {
    for (uint64_t j = 0; j != v48; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v50 = *(void *)(*(void *)(a1 + 96) + 8 * j);
      *(_WORD *)uint64_t v4 = 392;
      v4[2] = v50;
      if (v50 > 0x7F)
      {
        v4[2] = v50 | 0x80;
        unint64_t v51 = v50 >> 7;
        v4[3] = v50 >> 7;
        v4 += 4;
        if (v50 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v52 = v51 >> 14;
            v51 >>= 7;
            *v4++ = v51;
          }
          while (v52);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v53 = *(unsigned int *)(a1 + 104);
  if ((int)v53 >= 1)
  {
    for (uint64_t k = 0; k != v53; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v55 = *(void *)(*(void *)(a1 + 112) + 8 * k);
      *(_WORD *)uint64_t v4 = 400;
      v4[2] = v55;
      if (v55 > 0x7F)
      {
        v4[2] = v55 | 0x80;
        unint64_t v56 = v55 >> 7;
        v4[3] = v55 >> 7;
        v4 += 4;
        if (v55 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v57 = v56 >> 14;
            v56 >>= 7;
            *v4++ = v56;
          }
          while (v57);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v58 = *(unsigned char *)(a1 + 427);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v58;
    v4 += 3;
    if ((v6 & 8) == 0)
    {
LABEL_124:
      if ((v6 & 0x10) == 0) {
        goto LABEL_125;
      }
      goto LABEL_135;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_124;
  }
  uint64_t v4 = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_125:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_126;
    }
    goto LABEL_136;
  }
LABEL_135:
  uint64_t v4 = sub_117A0AC(a3, 21, (const void **)(*(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_126:
    if ((v6 & 0x20) == 0) {
      goto LABEL_127;
    }
    goto LABEL_139;
  }
LABEL_136:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v59 = *(unsigned char *)(a1 + 428);
  *(_WORD *)uint64_t v4 = 448;
  v4[2] = v59;
  v4 += 3;
  if ((v6 & 0x20) == 0)
  {
LABEL_127:
    if ((v6 & 0x40) == 0) {
      goto LABEL_128;
    }
    goto LABEL_140;
  }
LABEL_139:
  uint64_t v4 = sub_117A0AC(a3, 25, (const void **)(*(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_128:
    if ((v6 & 0x200) == 0) {
      goto LABEL_129;
    }
    goto LABEL_141;
  }
LABEL_140:
  uint64_t v4 = sub_117A0AC(a3, 26, (const void **)(*(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_129:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_147;
  }
LABEL_141:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v60 = *(void *)(a1 + 336);
  *(_WORD *)uint64_t v4 = 474;
  unsigned int v61 = *(_DWORD *)(v60 + 20);
  v4[2] = v61;
  if (v61 > 0x7F) {
    int v62 = sub_188A9CC(v61, v4 + 2);
  }
  else {
    int v62 = v4 + 3;
  }
  uint64_t v4 = sub_1508568(v60, v62, a3);
  if ((v6 & 0x8000000) != 0)
  {
LABEL_147:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v63 = *(void *)(a1 + 432);
    *(_WORD *)uint64_t v4 = 480;
    v4[2] = v63;
    if (v63 > 0x7F)
    {
      v4[2] = v63 | 0x80;
      unint64_t v64 = v63 >> 7;
      v4[3] = v63 >> 7;
      v4 += 4;
      if (v63 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v65 = v64 >> 14;
          v64 >>= 7;
          *v4++ = v64;
        }
        while (v65);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_153:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v66 = *(void *)(a1 + 344);
    *(_WORD *)uint64_t v4 = 490;
    unsigned int v67 = *(_DWORD *)(v66 + 20);
    v4[2] = v67;
    if (v67 > 0x7F) {
      int v68 = sub_188A9CC(v67, v4 + 2);
    }
    else {
      int v68 = v4 + 3;
    }
    uint64_t v4 = sub_1507864(v66, (unint64_t)v68, a3);
  }
  uint64_t v69 = *(unsigned int *)(a1 + 120);
  if ((int)v69 >= 1)
  {
    for (uint64_t m = 0; m != v69; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v71 = *(void *)(*(void *)(a1 + 128) + 8 * m);
      *(_WORD *)uint64_t v4 = 496;
      v4[2] = v71;
      if (v71 > 0x7F)
      {
        v4[2] = v71 | 0x80;
        unint64_t v72 = v71 >> 7;
        v4[3] = v71 >> 7;
        v4 += 4;
        if (v71 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v73 = v72 >> 14;
            v72 >>= 7;
            *v4++ = v72;
          }
          while (v73);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v74 = *(void *)(a1 + 352);
    *(_WORD *)uint64_t v4 = 506;
    unsigned int v75 = *(_DWORD *)(v74 + 44);
    v4[2] = v75;
    if (v75 > 0x7F) {
      uint64_t v76 = sub_188A9CC(v75, v4 + 2);
    }
    else {
      uint64_t v76 = v4 + 3;
    }
    uint64_t v4 = sub_15B0C0C(v74, v76, a3);
  }
  if ((v6 & 0x80) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 32, (const void **)(*(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v77 = *(unsigned int *)(a1 + 136);
  if ((int)v77 >= 1)
  {
    for (uint64_t n = 0; n != v77; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v79 = *(void *)(*(void *)(a1 + 144) + 8 * n);
      *(_WORD *)uint64_t v4 = 648;
      v4[2] = v79;
      if (v79 > 0x7F)
      {
        v4[2] = v79 | 0x80;
        unint64_t v80 = v79 >> 7;
        v4[3] = v79 >> 7;
        v4 += 4;
        if (v79 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v81 = v80 >> 14;
            v80 >>= 7;
            *v4++ = v80;
          }
          while (v81);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v82 = *(void *)(a1 + 440);
    *(_WORD *)uint64_t v4 = 657;
    *(void *)(v4 + 2) = v82;
    v4 += 10;
  }
  uint64_t v83 = *(unsigned int *)(a1 + 152);
  if ((int)v83 >= 1)
  {
    for (iuint64_t i = 0; ii != v83; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v85 = *(int *)(*(void *)(a1 + 160) + 4 * ii);
      *(_WORD *)uint64_t v4 = 664;
      v4[2] = v85;
      if (v85 > 0x7F)
      {
        v4[2] = v85 | 0x80;
        unint64_t v86 = v85 >> 7;
        v4[3] = v85 >> 7;
        v4 += 4;
        if (v85 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v87 = v86 >> 14;
            v86 >>= 7;
            *v4++ = v86;
          }
          while (v87);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v88 = *(unsigned char *)(a1 + 429);
    *(_WORD *)uint64_t v4 = 672;
    v4[2] = v88;
    v4 += 3;
  }
  uint64_t v89 = *(unsigned int *)(a1 + 168);
  if ((int)v89 >= 1)
  {
    for (juint64_t j = 0; jj != v89; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v91 = *(_DWORD *)(*(void *)(a1 + 176) + 4 * jj);
      *(_WORD *)uint64_t v4 = 680;
      v4[2] = v91;
      if (v91 > 0x7F)
      {
        v4[2] = v91 | 0x80;
        unsigned int v92 = v91 >> 7;
        v4[3] = v91 >> 7;
        v4 += 4;
        if (v91 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v93 = v92 >> 14;
            v92 >>= 7;
            *v4++ = v92;
          }
          while (v93);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v94 = *(unsigned int *)(a1 + 184);
  if ((int)v94 >= 1)
  {
    for (kuint64_t k = 0; kk != v94; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v96 = *(_DWORD *)(*(void *)(a1 + 192) + 4 * kk);
      *(_WORD *)uint64_t v4 = 688;
      v4[2] = v96;
      if (v96 > 0x7F)
      {
        v4[2] = v96 | 0x80;
        unsigned int v97 = v96 >> 7;
        v4[3] = v96 >> 7;
        v4 += 4;
        if (v96 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v98 = v97 >> 14;
            v97 >>= 7;
            *v4++ = v97;
          }
          while (v98);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v99 = *(unsigned int *)(a1 + 200);
  if ((int)v99 >= 1)
  {
    for (muint64_t m = 0; mm != v99; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v101 = *(int *)(*(void *)(a1 + 208) + 4 * mm);
      *(_WORD *)uint64_t v4 = 696;
      v4[2] = v101;
      if (v101 > 0x7F)
      {
        v4[2] = v101 | 0x80;
        unint64_t v102 = v101 >> 7;
        v4[3] = v101 >> 7;
        v4 += 4;
        if (v101 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v103 = v102 >> 14;
            v102 >>= 7;
            *v4++ = v102;
          }
          while (v103);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v104 = *(void *)(a1 + 360);
    *(_WORD *)uint64_t v4 = 706;
    unsigned int v105 = *(_DWORD *)(v104 + 40);
    v4[2] = v105;
    if (v105 > 0x7F) {
      uint64_t v106 = sub_188A9CC(v105, v4 + 2);
    }
    else {
      uint64_t v106 = v4 + 3;
    }
    uint64_t v4 = sub_1507DF8(v104, v106, a3);
  }
  if ((v6 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v107 = *(_DWORD *)(a1 + 448);
    *(_WORD *)uint64_t v4 = 712;
    v4[2] = v107;
    if (v107 > 0x7F)
    {
      v4[2] = v107 | 0x80;
      unsigned int v108 = v107 >> 7;
      v4[3] = v107 >> 7;
      v4 += 4;
      if (v107 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v109 = v108 >> 14;
          v108 >>= 7;
          *v4++ = v108;
        }
        while (v109);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v110 = *(void *)(a1 + 368);
    *(_WORD *)uint64_t v4 = 722;
    unsigned int v111 = *(_DWORD *)(v110 + 80);
    v4[2] = v111;
    if (v111 > 0x7F) {
      uint64_t v112 = sub_188A9CC(v111, v4 + 2);
    }
    else {
      uint64_t v112 = v4 + 3;
    }
    uint64_t v4 = sub_15095F0(v110, v112, a3);
  }
  if ((v6 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v113 = *(unsigned char *)(a1 + 430);
    *(_WORD *)uint64_t v4 = 728;
    v4[2] = v113;
    v4 += 3;
  }
  uint64_t v114 = *(unsigned int *)(a1 + 224);
  if ((int)v114 >= 1)
  {
    uint64_t v115 = 0;
    uint64_t v116 = 8 * v114;
    do
    {
      unint64_t v117 = *(void **)(*(void *)(a1 + 232) + v115 + 8);
      if (*((char *)v117 + 23) < 0)
      {
        int64_t v118 = v117[1];
        if (v118 > 127) {
          goto LABEL_267;
        }
      }
      else
      {
        int64_t v118 = *((unsigned __int8 *)v117 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v118)
      {
        *(_WORD *)uint64_t v4 = 738;
        v4[2] = v118;
        if (*((char *)v117 + 23) < 0) {
          unint64_t v117 = (void *)*v117;
        }
        int v119 = v4 + 3;
        memcpy(v119, v117, v118);
        uint64_t v4 = &v119[v118];
        goto LABEL_265;
      }
LABEL_267:
      uint64_t v4 = (char *)sub_188A868(a3, 44, (uint64_t)v117, v4);
LABEL_265:
      v115 += 8;
    }
    while (v116 != v115);
  }
  uint64_t v120 = *(unsigned int *)(a1 + 248);
  if ((int)v120 >= 1)
  {
    uint64_t v121 = 0;
    uint64_t v122 = 8 * v120;
    do
    {
      int v123 = *(void **)(*(void *)(a1 + 256) + v121 + 8);
      if (*((char *)v123 + 23) < 0)
      {
        int64_t v124 = v123[1];
        if (v124 > 127) {
          goto LABEL_279;
        }
      }
      else
      {
        int64_t v124 = *((unsigned __int8 *)v123 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v124)
      {
        *(_WORD *)uint64_t v4 = 746;
        v4[2] = v124;
        if (*((char *)v123 + 23) < 0) {
          int v123 = (void *)*v123;
        }
        uint64_t v125 = v4 + 3;
        memcpy(v125, v123, v124);
        uint64_t v4 = &v125[v124];
        goto LABEL_277;
      }
LABEL_279:
      uint64_t v4 = (char *)sub_188A868(a3, 45, (uint64_t)v123, v4);
LABEL_277:
      v121 += 8;
    }
    while (v122 != v121);
  }
  uint64_t v126 = *(void *)(a1 + 8);
  if ((v126 & 1) == 0) {
    return v4;
  }
  unint64_t v128 = v126 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v128 + 31) < 0)
  {
    uint64_t v129 = *(void **)(v128 + 8);
    uint64_t v130 = *(void *)(v128 + 16);
  }
  else
  {
    uint64_t v129 = (void *)(v128 + 8);
    LODWORD(v130) = *(unsigned __int8 *)(v128 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v130)
  {
    uint64_t v131 = (int)v130;
    memcpy(v4, v129, (int)v130);
    v4 += v131;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v129, v130, v4);
}

uint64_t sub_1504928(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v84 = sub_188D5A8((unsigned int *)(a1 + 72));
  uint64_t v85 = *(unsigned int *)(a1 + 72);
  uint64_t v83 = sub_188D5A8((unsigned int *)(a1 + 88));
  uint64_t v81 = *(unsigned int *)(a1 + 88);
  uint64_t v82 = sub_188D5A8((unsigned int *)(a1 + 104));
  uint64_t v14 = *(unsigned int *)(a1 + 104);
  uint64_t v80 = sub_188D5A8((unsigned int *)(a1 + 120));
  uint64_t v15 = *(unsigned int *)(a1 + 120);
  uint64_t v16 = sub_188D5A8((unsigned int *)(a1 + 136));
  uint64_t v17 = *(unsigned int *)(a1 + 136);
  uint64_t v18 = *(unsigned int *)(a1 + 152);
  if (v18)
  {
    int v19 = 0;
    uint64_t v20 = 0;
    do
    {
      int v21 = *(_DWORD *)(*(void *)(a1 + 160) + 4 * v19);
      if (v21 < 0) {
        uint64_t v22 = 10;
      }
      else {
        uint64_t v22 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
      }
      v20 += v22;
      ++v19;
    }
    while (v18 != v19);
  }
  else
  {
    uint64_t v20 = 0;
  }
  uint64_t v23 = sub_188D4F0((unsigned int *)(a1 + 168));
  uint64_t v24 = *(unsigned int *)(a1 + 168);
  uint64_t v25 = sub_188D4F0((unsigned int *)(a1 + 184));
  uint64_t v26 = *(unsigned int *)(a1 + 200);
  if (v26)
  {
    int v27 = 0;
    uint64_t v28 = 0;
    do
    {
      int v29 = *(_DWORD *)(*(void *)(a1 + 208) + 4 * v27);
      if (v29 < 0) {
        uint64_t v30 = 10;
      }
      else {
        uint64_t v30 = (9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6;
      }
      v28 += v30;
      ++v27;
    }
    while (v26 != v27);
  }
  else
  {
    uint64_t v28 = 0;
  }
  uint64_t v31 = *(unsigned int *)(a1 + 224);
  uint64_t v32 = v84
      + v9
      + v85
      + v83
      + v82
      + v80
      + v16
      + v20
      + v23
      + v25
      + v28
      + 2 * (v14 + v81 + v15 + v17 + v18 + v24 + *(unsigned int *)(a1 + 184) + v26 + v31);
  if ((int)v31 >= 1)
  {
    unint64_t v33 = (uint64_t *)(*(void *)(a1 + 232) + 8);
    do
    {
      uint64_t v34 = *v33++;
      uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
      uint64_t v36 = *(void *)(v34 + 8);
      if ((v35 & 0x80u) == 0) {
        uint64_t v36 = v35;
      }
      v32 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6);
      --v31;
    }
    while (v31);
  }
  uint64_t v37 = *(unsigned int *)(a1 + 248);
  uint64_t v38 = v32 + 2 * v37;
  if ((int)v37 >= 1)
  {
    unint64_t v39 = (uint64_t *)(*(void *)(a1 + 256) + 8);
    do
    {
      uint64_t v40 = *v39++;
      uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
      uint64_t v42 = *(void *)(v40 + 8);
      if ((v41 & 0x80u) == 0) {
        uint64_t v42 = v41;
      }
      v38 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      --v37;
    }
    while (v37);
  }
  int v43 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v43) {
    goto LABEL_51;
  }
  if (v43)
  {
    unint64_t v51 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
    uint64_t v53 = *(void *)(v51 + 8);
    if ((v52 & 0x80u) == 0) {
      uint64_t v53 = v52;
    }
    v38 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 2) == 0)
    {
LABEL_42:
      if ((v43 & 4) == 0) {
        goto LABEL_43;
      }
      goto LABEL_98;
    }
  }
  else if ((v43 & 2) == 0)
  {
    goto LABEL_42;
  }
  unint64_t v54 = *(void *)(a1 + 272) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v55 = *(unsigned __int8 *)(v54 + 23);
  uint64_t v56 = *(void *)(v54 + 8);
  if ((v55 & 0x80u) == 0) {
    uint64_t v56 = v55;
  }
  v38 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 4) == 0)
  {
LABEL_43:
    if ((v43 & 8) == 0) {
      goto LABEL_44;
    }
    goto LABEL_101;
  }
LABEL_98:
  unint64_t v57 = *(void *)(a1 + 280) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
  uint64_t v59 = *(void *)(v57 + 8);
  if ((v58 & 0x80u) == 0) {
    uint64_t v59 = v58;
  }
  v38 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v43 & 8) == 0)
  {
LABEL_44:
    if ((v43 & 0x10) == 0) {
      goto LABEL_45;
    }
    goto LABEL_104;
  }
LABEL_101:
  unint64_t v60 = *(void *)(a1 + 288) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v61 = *(unsigned __int8 *)(v60 + 23);
  uint64_t v62 = *(void *)(v60 + 8);
  if ((v61 & 0x80u) == 0) {
    uint64_t v62 = v61;
  }
  v38 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x10) == 0)
  {
LABEL_45:
    if ((v43 & 0x20) == 0) {
      goto LABEL_46;
    }
LABEL_107:
    unint64_t v66 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v67 = *(unsigned __int8 *)(v66 + 23);
    uint64_t v68 = *(void *)(v66 + 8);
    if ((v67 & 0x80u) == 0) {
      uint64_t v68 = v67;
    }
    v38 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v43 & 0x40) == 0)
    {
LABEL_47:
      if ((v43 & 0x80) == 0) {
        goto LABEL_51;
      }
      goto LABEL_48;
    }
    goto LABEL_110;
  }
LABEL_104:
  unint64_t v63 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v64 = *(unsigned __int8 *)(v63 + 23);
  uint64_t v65 = *(void *)(v63 + 8);
  if ((v64 & 0x80u) == 0) {
    uint64_t v65 = v64;
  }
  v38 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x20) != 0) {
    goto LABEL_107;
  }
LABEL_46:
  if ((v43 & 0x40) == 0) {
    goto LABEL_47;
  }
LABEL_110:
  unint64_t v69 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v70 = *(unsigned __int8 *)(v69 + 23);
  uint64_t v71 = *(void *)(v69 + 8);
  if ((v70 & 0x80u) == 0) {
    uint64_t v71 = v70;
  }
  v38 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x80) != 0)
  {
LABEL_48:
    unint64_t v44 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
    uint64_t v46 = *(void *)(v44 + 8);
    if ((v45 & 0x80u) == 0) {
      uint64_t v46 = v45;
    }
    v38 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_51:
  if ((v43 & 0xFF00) == 0) {
    goto LABEL_61;
  }
  if ((v43 & 0x100) != 0)
  {
    uint64_t v72 = sub_12CDCD4(*(void *)(a1 + 328));
    v38 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 0x200) == 0)
    {
LABEL_54:
      if ((v43 & 0x400) == 0) {
        goto LABEL_55;
      }
      goto LABEL_116;
    }
  }
  else if ((v43 & 0x200) == 0)
  {
    goto LABEL_54;
  }
  uint64_t v73 = sub_1508830(*(void *)(a1 + 336));
  v38 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x400) == 0)
  {
LABEL_55:
    if ((v43 & 0x800) == 0) {
      goto LABEL_56;
    }
    goto LABEL_117;
  }
LABEL_116:
  uint64_t v74 = sub_1507A10(*(void *)(a1 + 344));
  v38 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x800) == 0)
  {
LABEL_56:
    if ((v43 & 0x1000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_118;
  }
LABEL_117:
  uint64_t v75 = sub_15B0D90(*(void *)(a1 + 352));
  v38 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x1000) == 0)
  {
LABEL_57:
    if ((v43 & 0x2000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_119;
  }
LABEL_118:
  uint64_t v76 = sub_1507F60(*(void *)(a1 + 360));
  v38 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x2000) == 0)
  {
LABEL_58:
    if ((v43 & 0x4000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t v77 = sub_1509854(*(void *)(a1 + 368));
  v38 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v43 & 0x4000) == 0)
  {
LABEL_59:
    if ((v43 & 0x8000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }
LABEL_120:
  v38 += ((9 * (__clz(*(void *)(a1 + 376) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v43 & 0x8000) != 0) {
LABEL_60:
  }
    v38 += ((9 * (__clz(*(void *)(a1 + 384) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_61:
  if ((v43 & 0xFF0000) == 0) {
    goto LABEL_76;
  }
  if ((v43 & 0x10000) != 0)
  {
    v38 += ((9 * (__clz(*(void *)(a1 + 392) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v43 & 0x20000) == 0)
    {
LABEL_64:
      if ((v43 & 0x40000) == 0) {
        goto LABEL_65;
      }
LABEL_124:
      v38 += ((9 * (__clz(*(void *)(a1 + 408) | 1) ^ 0x3F) + 73) >> 6) + 1;
      if ((v43 & 0x80000) == 0) {
        goto LABEL_67;
      }
      goto LABEL_66;
    }
  }
  else if ((v43 & 0x20000) == 0)
  {
    goto LABEL_64;
  }
  v38 += ((9 * (__clz(*(void *)(a1 + 400) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v43 & 0x40000) != 0) {
    goto LABEL_124;
  }
LABEL_65:
  if ((v43 & 0x80000) != 0) {
LABEL_66:
  }
    v38 += ((9 * (__clz(*(void *)(a1 + 416) | 1) ^ 0x3F) + 73) >> 6) + 2;
LABEL_67:
  uint64_t v47 = v38 + 2;
  if ((v43 & 0x100000) == 0) {
    uint64_t v47 = v38;
  }
  if ((v43 & 0x200000) != 0) {
    v47 += 2;
  }
  if ((v43 & 0x400000) != 0) {
    v47 += 2;
  }
  if ((v43 & 0x800000) != 0) {
    uint64_t v38 = v47 + 3;
  }
  else {
    uint64_t v38 = v47;
  }
LABEL_76:
  if ((v43 & 0x3F000000) != 0)
  {
    uint64_t v48 = v38 + 3;
    if ((v43 & 0x1000000) == 0) {
      uint64_t v48 = v38;
    }
    if ((v43 & 0x2000000) != 0) {
      v48 += 3;
    }
    if ((v43 & 0x4000000) != 0) {
      v48 += 3;
    }
    if ((v43 & 0x8000000) != 0) {
      v48 += ((9 * (__clz(*(void *)(a1 + 432) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v43 & 0x10000000) != 0) {
      uint64_t v38 = v48 + 10;
    }
    else {
      uint64_t v38 = v48;
    }
    if ((v43 & 0x20000000) != 0) {
      v38 += ((9 * (__clz(*(_DWORD *)(a1 + 448) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v49 = *(void *)(a1 + 8);
  if (v49)
  {
    unint64_t v78 = v49 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v78 + 31) < 0) {
      uint64_t v79 = *(void *)(v78 + 16);
    }
    else {
      uint64_t v79 = *(unsigned __int8 *)(v78 + 31);
    }
    v38 += v79;
  }
  *(_DWORD *)(a1 + 20) = v38;
  return v38;
}

std::string *sub_15051B8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_1515B20(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_22;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      v3[4].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_22:
    v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_150536C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1515A94((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(uint64_t (****)(void))(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v12 = (void *)*v12;
      }
      data = (std::string *)sub_150E85C((uint64_t)v12);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      int v9 = *(uint64_t (****)(void))(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_253C268;
    }
    uint64_t result = sub_1507148(data, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1505490(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    int v9 = (uint64_t *)(*(void *)(a2 + 48) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 40));
    uint64_t result = sub_1515B9C((std::string *)((char *)v3 + 32), v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__data_ - LODWORD(v3[1].__r_.__value_.__r.__words[2]));
    int v11 = LODWORD(v3[1].__r_.__value_.__r.__words[2]) + v8;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v11;
    int v12 = (int *)v3[2].__r_.__value_.__l.__data_;
    if (*v12 < v11) {
      *int v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 72) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 64));
    uint64_t result = sub_1515B9C((std::string *)((char *)v3 + 56), v15, v14, v13, *(_DWORD *)v3[3].__r_.__value_.__l.__data_ - LODWORD(v3[2].__r_.__value_.__r.__words[2]));
    int v16 = LODWORD(v3[2].__r_.__value_.__r.__words[2]) + v13;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = v16;
    uint64_t v17 = (int *)v3[3].__r_.__value_.__l.__data_;
    if (*v17 < v16) {
      int *v17 = v16;
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void *sub_1505608@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.FilterContext");
}

uint64_t sub_1505618(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = &off_24BD0C8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void sub_1505694(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_15056C4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1505738(void *a1)
{
  sub_15056C4(a1);

  operator delete();
}

uint64_t sub_1505770(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1505794(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        uint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_1505904(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1505A20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1505A7C()
{
  return 1;
}

void *sub_1505A84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.FilterQueryValueRange");
}

uint64_t sub_1505A94(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24BD148;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1505AD4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24BD148;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  uint64_t v8 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  return a1;
}

void sub_1505BC8()
{
}

uint64_t sub_1505C18(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253C230)
  {
    int v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_15056C4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1505CE4(uint64_t a1)
{
  sub_1505C18(a1);

  operator delete();
}

uint64_t sub_1505D1C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1505770(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1505DC0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_28;
        }
        int v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v26 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v26) {
            goto LABEL_47;
          }
          unint64_t v13 = v24;
        }
        else
        {
          int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v26 = v12;
        }
        if (v13 > 2)
        {
          if (*v7) {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v25);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v13;
        }
        goto LABEL_36;
      case 2u:
        if (v9 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
        int v19 = (void *)sub_188C244(v18, *(char **)v26, (uint64_t)a3);
        goto LABEL_35;
      case 3u:
        if (v9 != 25) {
          goto LABEL_28;
        }
        v5 |= 4u;
        *(void *)(a1 + 40) = *(void *)v8;
        *(void *)uint64_t v26 = v8 + 8;
        goto LABEL_36;
      case 4u:
        if (v9 != 34) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void **)(a1 + 32);
        if (!v20)
        {
          int v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v21 = (void *)*v21;
          }
          uint64_t v20 = sub_150E758((uint64_t)v21);
          *(void *)(a1 + 32) = v20;
          uint64_t v8 = *(unsigned __int8 **)v26;
        }
        int v19 = sub_1506080(a3, (uint64_t)v20, v8);
        goto LABEL_35;
      default:
LABEL_28:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v26;
          }
          int v19 = sub_1885AC0(v9, v23, (char *)v8, a3);
LABEL_35:
          *(void *)uint64_t v26 = v19;
          if (!v19) {
            goto LABEL_47;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          *(void *)uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v26;
    }
  }
}

char *sub_1506080(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1505794(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1506110(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_22;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  unsigned char *v4 = 25;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 2) != 0)
  {
LABEL_16:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 32);
    unsigned char *v4 = 34;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      unint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      unint64_t v13 = v4 + 2;
    }
    uint64_t v4 = sub_1505904(v11, (unint64_t)v13, a3);
  }
LABEL_22:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1506300(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_1505A20(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 48);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    result += v11;
  }
LABEL_18:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1506428(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_150E758((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      unint64_t v13 = &off_253C208;
    }
    uint64_t result = sub_123BFCC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1506548()
{
  return 1;
}

void *sub_1506550@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.FilterQueryValue");
}

uint64_t sub_1506560(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24BD1C8;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_15065A8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BD1C8;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1515A94(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      int *v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  return a1;
}

void sub_150670C()
{
}

uint64_t sub_1506774(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)(void))a1 != &off_253C268)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1505C18(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1515894((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_150684C(uint64_t a1)
{
  sub_1506774(a1);

  operator delete();
}

uint64_t sub_1506884(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1506884(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_1505D1C(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 56) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1506950(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_36;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v30 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v30 = v11;
        }
        if (v12 > 3)
        {
          if (*v6) {
            int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v12;
        }
        goto LABEL_44;
      case 2u:
        if (v8 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v30, (uint64_t)a3);
        goto LABEL_43;
      case 3u:
        if (v8 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 56);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_150E7D4((uint64_t)v20);
          *(void *)(a1 + 56) = v19;
          uint64_t v7 = *(unsigned __int8 **)v30;
        }
        uint64_t v18 = sub_1506C70(a3, v19, v7);
        goto LABEL_43;
      case 4u:
        if (v8 != 34) {
          goto LABEL_36;
        }
        int v21 = v7 - 1;
        while (1)
        {
          *(void *)uint64_t v30 = v21 + 1;
          BOOL v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_150E85C(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, v25);
          }
          int v21 = (unsigned __int8 *)sub_1506D00(a3, v24);
          *(void *)uint64_t v30 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_44;
          }
        }
      default:
LABEL_36:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            int v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v30;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v8, v27, (char *)v7, a3);
LABEL_43:
          *(void *)uint64_t v30 = v18;
          if (!v18) {
            return 0;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
    }
  }
}

uint64_t sub_1506C70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1505DC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1506D00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1506950(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1506D90(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    unsigned char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1506110(v10, (unint64_t)v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_1506D90(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1506FD8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1506FD8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_22;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_1506300(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0) {
    goto LABEL_22;
  }
LABEL_18:
  int v13 = *(_DWORD *)(a1 + 64);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
LABEL_22:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1507148(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 40) + 8;
    uint64_t v6 = sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_1515A94(&v3[1], v6, v5, v4, (*(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1])));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (_DWORD *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      _DWORD *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v14 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unsigned int v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_150E7D4((uint64_t)v16);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v17 = &off_253C230;
    }
    uint64_t result = sub_1506428(v14, (uint64_t)v17);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_15072C8(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_1506884((uint64_t)result);
    return sub_1507148(v4, a2);
  }
  return result;
}

uint64_t sub_1507314()
{
  return 1;
}

__n128 sub_150731C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = v8;
  LODWORD(v8) = *(_DWORD *)(a1 + 64);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a2 + 64) = v8;
  return result;
}

void *sub_1507390@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.FilterQueryNode");
}

void *sub_15073A0(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  char *result = off_24BD248;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_15073D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BD248;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1515A94(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      int *v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_15074FC()
{
}

uint64_t sub_1507560(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253C2B0)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1506774(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1515894((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1507624(uint64_t a1)
{
  sub_1507560(a1);

  operator delete();
}

char *sub_150765C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_150E85C((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1506D00(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    std::string::size_type v15 = v7 - 1;
    while (1)
    {
      unsigned int v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v23 = v15 + 1;
      unint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_150E85C(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        unsigned int v16 = (unsigned __int8 *)v23;
      }
      std::string::size_type v15 = (char *)sub_1506D00(a3, v19, v16);
      uint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

unsigned char *sub_1507864(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_1506D90(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        int v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        int v13 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_1506D90(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1507A10(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1506FD8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1506FD8(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1507AF4(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_1501B4C((uint64_t)result);
    return sub_150536C(v4, a2);
  }
  return result;
}

uint64_t sub_1507B40()
{
  return 1;
}

void *sub_1507B48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.FilterQuery");
}

void *sub_1507B58(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1507BD4(void *a1)
{
  sub_1507B58(a1);

  operator delete();
}

uint64_t sub_1507C0C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = (char *)(*(void *)v21 + 1);
      unsigned int v8 = **(unsigned char **)v21;
      if ((char)**(unsigned char **)v21 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (char *)(*(void *)v21 + 2);
        }
      }
      *(void *)uint64_t v21 = v7;
      if (v8 == 10)
      {
        int v13 = v7 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)uint64_t v21 = v13 + 1;
          std::string::size_type v15 = *(_DWORD **)(a1 + 32);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 24), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 24) = v16 + 1;
            unint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v19 = v18;
            v19[1] = sub_3A6EDC;
            *uint64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            unint64_t v17 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v18);
            uint64_t v14 = *(char **)v21;
          }
          int v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)uint64_t v21 = v13;
          if (!v13) {
            goto LABEL_31;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_26;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v12 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v21;
      }
      *(void *)uint64_t v21 = sub_1885AC0(v8, v12, v7, a3);
      if (!*(void *)v21) {
        goto LABEL_31;
      }
LABEL_26:
      if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
        return *(void *)v21;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return *(void *)v21;
    }
LABEL_31:
    *(void *)uint64_t v21 = 0;
  }
  return *(void *)v21;
}

char *sub_1507DF8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unint64_t v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return __dst;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    std::string::size_type v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    std::string::size_type v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(__dst, v15, (int)v16);
    __dst += v17;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, __dst);
}

uint64_t sub_1507F60(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_1507FF8()
{
  return 1;
}

void *sub_1508000@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.EventFilter");
}

uint64_t sub_1508010(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1515914((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15080C4(uint64_t a1)
{
  sub_1508010(a1);

  operator delete();
}

uint64_t sub_15080FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v9 = (char *)(*(void *)v40 + 1);
    unsigned int v10 = **(unsigned char **)v40;
    if ((char)**(unsigned char **)v40 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unint64_t v9 = (char *)sub_188C180(*(uint64_t *)v40, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (char *)(*(void *)v40 + 2);
      }
    }
    *(void *)uint64_t v40 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_45;
        }
        int v13 = v9 - 1;
        while (1)
        {
          unint64_t v14 = (char *)(v13 + 1);
          *(void *)uint64_t v40 = v13 + 1;
          std::string::size_type v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v19 = v18;
            v19[1] = sub_3A6EDC;
            *uint64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v18);
            unint64_t v14 = *(char **)v40;
          }
          int v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)uint64_t v40 = v13;
          if (!v13) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_53;
          }
        }
      case 2u:
        if (v10 != 18) {
          goto LABEL_45;
        }
        uint64_t v20 = v9 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          *(void *)uint64_t v40 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_150EAF8(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, (uint64_t)v25);
            uint64_t v21 = *(unsigned __int8 **)v40;
          }
          uint64_t v20 = (char *)sub_15084D8(a3, v24, v21);
          *(void *)uint64_t v40 = v20;
          if (!v20) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 18) {
            goto LABEL_53;
          }
        }
      case 3u:
        if (v10 != 24) {
          goto LABEL_45;
        }
        v5 |= 8u;
        BOOL v26 = v9 + 1;
        uint64_t v27 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v9, v27);
          *(void *)uint64_t v40 = v38;
          *(unsigned char *)(a1 + 96) = v39 != 0;
          if (!v38) {
            goto LABEL_60;
          }
        }
        else
        {
          BOOL v26 = v9 + 2;
LABEL_35:
          *(void *)uint64_t v40 = v26;
          *(unsigned char *)(a1 + 96) = v27 != 0;
        }
        goto LABEL_53;
      case 4u:
        if (v10 != 34) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v30 = (uint64_t *)*v30;
        }
        uint64_t v31 = (std::string *)sub_1880F84((void *)(a1 + 72), v30);
        uint64_t v32 = (void *)sub_188C244(v31, *(char **)v40, (uint64_t)a3);
        goto LABEL_52;
      case 5u:
        if (v10 != 41) {
          goto LABEL_45;
        }
        uint64_t v34 = *(void *)v9;
        unint64_t v33 = v9 + 8;
        v5 |= 2u;
        *(void *)(a1 + 80) = v34;
        goto LABEL_44;
      case 6u:
        if (v10 != 49) {
          goto LABEL_45;
        }
        uint64_t v35 = *(void *)v9;
        unint64_t v33 = v9 + 8;
        v5 |= 4u;
        *(void *)(a1 + 88) = v35;
LABEL_44:
        *(void *)uint64_t v40 = v33;
        goto LABEL_53;
      default:
LABEL_45:
        if (v10) {
          BOOL v36 = (v10 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(char **)v40;
          }
          uint64_t v32 = sub_1885AC0(v10, v37, v9, a3);
LABEL_52:
          *(void *)uint64_t v40 = v32;
          if (!v32) {
            goto LABEL_60;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v40;
    }
  }
}

uint64_t sub_15084D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1508B88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1508568(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unint64_t v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unint64_t v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *__dst = 18;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      __dst[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, __dst + 1);
      }
      else {
        uint64_t v16 = __dst + 2;
      }
      __dst = sub_1508E0C(v14, v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 16);
  if ((v17 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v18 = *(unsigned char *)(a1 + 96);
    *__dst = 24;
    __dst[1] = v18;
    __dst += 2;
    if ((v17 & 1) == 0)
    {
LABEL_23:
      if ((v17 & 2) == 0) {
        goto LABEL_24;
      }
      goto LABEL_30;
    }
  }
  else if ((v17 & 1) == 0)
  {
    goto LABEL_23;
  }
  __dst = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v17 & 2) == 0)
  {
LABEL_24:
    if ((v17 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*(void *)a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v19 = *(void *)(a1 + 80);
  *__dst = 41;
  *(void *)(__dst + 1) = v19;
  __dst += 9;
  if ((v17 & 4) != 0)
  {
LABEL_33:
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v20 = *(void *)(a1 + 88);
    *__dst = 49;
    *(void *)(__dst + 1) = v20;
    __dst += 9;
  }
LABEL_36:
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_1508830(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1508FA0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v19 = v9 + 9;
    if ((v15 & 2) == 0) {
      uint64_t v19 = v9;
    }
    if ((v15 & 4) != 0) {
      v19 += 9;
    }
    if ((v15 & 8) != 0) {
      uint64_t v9 = v19 + 2;
    }
    else {
      uint64_t v9 = v19;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

uint64_t sub_15089B0()
{
  return 1;
}

void *sub_15089B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.EvChargingFilter");
}

uint64_t sub_15089C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1508A94(uint64_t a1)
{
  sub_15089C8(a1);

  operator delete();
}

uint64_t sub_1508ACC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1508B88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_26;
      case 2u:
        if (v9 != 18) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_26;
      case 3u:
        if (v9 != 24) {
          goto LABEL_27;
        }
        v5 |= 8u;
        unint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v24 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v26 = v24;
          *(void *)(a1 + 48) = v25;
          if (!v24) {
            goto LABEL_42;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_21:
          *(void *)uint64_t v26 = v16;
          *(void *)(a1 + 48) = v17;
        }
        goto LABEL_35;
      case 4u:
        if (v9 != 34) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
LABEL_26:
        uint64_t v20 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v21 = (void *)sub_188C244(v20, *(char **)v26, (uint64_t)a3);
        goto LABEL_34;
      default:
LABEL_27:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v26;
          }
          uint64_t v21 = sub_1885AC0(v9, v23, v8, a3);
LABEL_34:
          *(void *)uint64_t v26 = v21;
          if (!v21) {
            goto LABEL_42;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          *(void *)uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_1508E0C(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(void *)(a1 + 48);
  unsigned char *v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1508FA0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_15090EC()
{
  return 1;
}

void *sub_15090F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.EvChargingPort");
}

void *sub_1509104(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1515994(a1 + 7);
  sub_1515994(a1 + 4);
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1509198(void *a1)
{
  sub_1509104(a1);

  operator delete();
}

char *sub_15091D0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v37 = a2;
  if ((sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v6 = (void *)(a1 + 8);
    do
    {
      uint64_t v7 = v37 + 1;
      unsigned int v8 = *v37;
      if (*v37 < 0)
      {
        int v9 = *v7;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v37, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          uint64_t v7 = v37 + 2;
        }
      }
      uint64_t v37 = v7;
      unsigned int v12 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          BOOL v22 = v7 - 1;
          while (1)
          {
            uint64_t v23 = (unsigned __int8 *)(v22 + 1);
            uint64_t v37 = v22 + 1;
            uint64_t v24 = *(_DWORD **)(a1 + 72);
            if (v24 && (uint64_t v25 = *(int *)(a1 + 64), (int)v25 < *v24))
            {
              *(_DWORD *)(a1 + 64) = v25 + 1;
              uint64_t v26 = *(void *)&v24[2 * v25 + 2];
            }
            else
            {
              uint64_t v27 = sub_150EC28(*(void *)(a1 + 56));
              uint64_t v26 = sub_188CDC8(a1 + 56, (uint64_t)v27);
              uint64_t v23 = (unsigned __int8 *)v37;
            }
            BOOL v22 = sub_1509560(a3, v26, v23);
            uint64_t v37 = v22;
            if (!v22) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
              goto LABEL_61;
            }
          }
        }
      }
      else if (v12 == 2)
      {
        if (v8 == 18)
        {
          int v28 = v7 - 1;
          while (1)
          {
            uint64_t v29 = (unsigned __int8 *)(v28 + 1);
            uint64_t v37 = v28 + 1;
            uint64_t v30 = *(_DWORD **)(a1 + 48);
            if (v30 && (uint64_t v31 = *(int *)(a1 + 40), (int)v31 < *v30))
            {
              *(_DWORD *)(a1 + 40) = v31 + 1;
              uint64_t v32 = *(void *)&v30[2 * v31 + 2];
            }
            else
            {
              unint64_t v33 = sub_150EC28(*(void *)(a1 + 32));
              uint64_t v32 = sub_188CDC8(a1 + 32, (uint64_t)v33);
              uint64_t v29 = (unsigned __int8 *)v37;
            }
            int v28 = sub_1509560(a3, v32, v29);
            uint64_t v37 = v28;
            if (!v28) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v28 || *v28 != 18) {
              goto LABEL_61;
            }
          }
        }
      }
      else if (v12 == 1)
      {
        if (v8 == 8)
        {
          uint64_t v13 = v7 - 1;
          while (1)
          {
            uint64_t v37 = v13 + 1;
            unint64_t v14 = v13[1];
            uint64_t v15 = v13 + 2;
            if (v13[1] < 0)
            {
              int v16 = *v15;
              int v17 = v14 + (v16 << 7);
              unint64_t v14 = (v17 - 128);
              if (v16 < 0)
              {
                uint64_t v37 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
                if (!v37) {
                  return 0;
                }
                unint64_t v14 = v20;
                goto LABEL_17;
              }
              uint64_t v15 = v13 + 3;
            }
            uint64_t v37 = v15;
LABEL_17:
            if (v14 > 3)
            {
              if (*v6) {
                uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v14, v21);
            }
            else
            {
              uint64_t v18 = *(unsigned int *)(a1 + 16);
              if (v18 == *(_DWORD *)(a1 + 20))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 16), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v18) = v14;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 24) + 4 * v18) = v14;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 16) = v19;
            }
            uint64_t v13 = v37;
            if (*(void *)a3 <= (unint64_t)v37 || *v37 != 8) {
              goto LABEL_61;
            }
          }
        }
        if (v8 == 10)
        {
          *(void *)&long long v38 = a1 + 16;
          *((void *)&v38 + 1) = sub_14FCE3C;
          uint64_t v39 = a1 + 8;
          int v40 = 1;
          uint64_t v34 = sub_1112E88((uint64_t)a3, v7, &v38);
          goto LABEL_60;
        }
      }
      if (v8) {
        BOOL v35 = (v8 & 7) == 4;
      }
      else {
        BOOL v35 = 1;
      }
      if (v35)
      {
        if (v7)
        {
          a3[10].i32[0] = v8 - 1;
          return v37;
        }
        return 0;
      }
      if (*v6)
      {
        BOOL v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        BOOL v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v37;
      }
      uint64_t v34 = (char *)sub_1885AC0(v8, v36, v7, a3);
LABEL_60:
      uint64_t v37 = v34;
      if (!v34) {
        return 0;
      }
LABEL_61:
      ;
    }
    while (!sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1]));
  }
  return v37;
}

char *sub_1509560(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1509A90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15095F0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = (char *)sub_1509C00(v13, (unint64_t)v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 64);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 72) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        unint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        unint64_t v20 = __dst + 2;
      }
      __dst = (char *)sub_1509C00(v18, (unint64_t)v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_1509854(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 40);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 48);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1509D1C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 64);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 72);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1509D1C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v16 += v25;
  }
  *(_DWORD *)(a1 + 80) = v16;
  return v16;
}

uint64_t sub_15099A8()
{
  return 1;
}

void *sub_15099B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.HikingFactsFilter");
}

void *sub_15099C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1509A34(void *a1)
{
  sub_15099C0(a1);

  operator delete();
}

uint64_t sub_1509A6C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1509A90(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        uint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_1509C00(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)int v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1509D1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1509D78()
{
  return 1;
}

void *sub_1509D80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.LengthRange");
}

void *sub_1509D90(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1509E04(void *a1)
{
  sub_1509D90(a1);

  operator delete();
}

char *sub_1509E3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v26 = v22;
    *(unsigned char *)(a1 + 28) = v23 != 0;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v26 = v18;
    }
    if (v19 > 3)
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_150A080(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_150A1E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      int v4 = *(_DWORD *)(a1 + 24);
      if (v4 < 0) {
        uint64_t v2 = 11;
      }
      else {
        uint64_t v2 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v3 += v8;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_150A270()
{
  return 1;
}

void *sub_150A278@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.TokenizationContext");
}

void *sub_150A288(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_150A31C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_150A31C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 64);
  uint64_t v2 = (void ***)(a1 + 64);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  uint64_t result = (void ***)(a1 + 104);
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253C3F8)
  {
    if (*(void *)(a1 + 112))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 120);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    if (*(void *)(a1 + 128))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 136);
    if (v6)
    {
      sub_150BBC0(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 144);
    if (result)
    {
      sub_12A46C8();
      operator delete();
    }
  }
  return result;
}

void sub_150A484(void *a1)
{
  sub_150A288(a1);

  operator delete();
}

unsigned char *sub_150A4BC(unsigned char *result)
{
  int v1 = result;
  if (result[16]) {
    uint64_t result = sub_12A7154(*((unsigned char **)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

uint64_t sub_150A518(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v80 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v80 + 1);
    unsigned int v10 = **(unsigned char **)v80;
    if ((char)**(unsigned char **)v80 < 0)
    {
      int v11 = (char)*v9;
      unsigned int v12 = v10 + (v11 << 7);
      unsigned int v10 = v12 - 128;
      if (v11 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v80, v12 - 128);
        unsigned int v10 = v13;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v80 + 2);
      }
    }
    *(void *)uint64_t v80 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 64);
        goto LABEL_93;
      case 2u:
        if (v10 != 18) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v17 = *(void *)(a1 + 112);
        if (v17) {
          goto LABEL_30;
        }
        uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v17 = sub_15C1918((uint64_t)v18);
        *(void *)(a1 + 112) = v17;
        goto LABEL_29;
      case 3u:
        if (v10 != 26) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v19 = *(void *)(a1 + 120);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C19EC((uint64_t)v20);
          *(void *)(a1 + 120) = v19;
          unint64_t v9 = *(unsigned __int8 **)v80;
        }
        int v21 = sub_11E1C60(a3, v19, v9);
        goto LABEL_94;
      case 4u:
        if (v10 != 34) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v17 = *(void *)(a1 + 128);
        if (v17) {
          goto LABEL_30;
        }
        uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v17 = sub_15C1918((uint64_t)v22);
        *(void *)(a1 + 128) = v17;
LABEL_29:
        unint64_t v9 = *(unsigned __int8 **)v80;
LABEL_30:
        int v21 = sub_1198F14(a3, v17, v9);
        goto LABEL_94;
      case 5u:
        if (v10 != 41) {
          goto LABEL_144;
        }
        uint64_t v24 = *(void *)v9;
        uint64_t v23 = v9 + 8;
        v5 |= 0x800u;
        *(void *)(a1 + 152) = v24;
        goto LABEL_118;
      case 6u:
        if (v10 != 50) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 72);
        goto LABEL_93;
      case 7u:
        if (v10 != 58) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 80);
        goto LABEL_93;
      case 8u:
        if (v10 != 65) {
          goto LABEL_144;
        }
        uint64_t v27 = *(void *)v9;
        uint64_t v23 = v9 + 8;
        v5 |= 0x1000u;
        *(void *)(a1 + 160) = v27;
        goto LABEL_118;
      case 9u:
        if (v10 != 74) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 88);
        goto LABEL_93;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 96);
        goto LABEL_93;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v30 = *(void **)(a1 + 136);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_150EDE8((uint64_t)v31);
          *(void *)(a1 + 136) = v30;
          unint64_t v9 = *(unsigned __int8 **)v80;
        }
        int v21 = sub_150AE24(a3, (uint64_t)v30, v9);
        goto LABEL_94;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_144;
        }
        uint64_t v32 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          unint64_t v33 = (char *)(v32 + 1);
          *(void *)uint64_t v80 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 40);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 32), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 32) = v35 + 1;
            BOOL v36 = *(std::string **)&v34[2 * v35 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *long long v38 = v37;
            v38[1] = sub_3A6EDC;
            void *v37 = 0;
            v37[1] = 0;
            v37[2] = 0;
            BOOL v36 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v37);
            unint64_t v33 = *(char **)v80;
          }
          uint64_t v32 = sub_188C244(v36, v33, (uint64_t)a3);
          *(void *)uint64_t v80 = v32;
          if (!v32) {
            goto LABEL_154;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 98) {
            goto LABEL_130;
          }
        }
      case 0xDu:
        if (v10 == 104)
        {
          uint64_t v39 = (uint64_t)(v9 - 1);
          while (1)
          {
            *(void *)uint64_t v80 = v39 + 1;
            unint64_t v40 = *(unsigned __int8 *)(v39 + 1);
            uint64_t v41 = (char *)(v39 + 2);
            if (*(char *)(v39 + 1) < 0)
            {
              int v42 = *v41;
              int v43 = v40 + (v42 << 7);
              unint64_t v40 = (v43 - 128);
              if (v42 < 0)
              {
                *(void *)uint64_t v80 = sub_188C138(v39 + 1, (v43 - 128));
                if (!*(void *)v80) {
                  goto LABEL_154;
                }
                unint64_t v40 = v46;
                goto LABEL_75;
              }
              uint64_t v41 = (char *)(v39 + 3);
            }
            *(void *)uint64_t v80 = v41;
LABEL_75:
            if (sub_184A060(v40))
            {
              uint64_t v44 = *(unsigned int *)(a1 + 48);
              if (v44 == *(_DWORD *)(a1 + 52))
              {
                int v45 = v44 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v44 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v44) = v40;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v44) = v40;
                int v45 = v44 + 1;
              }
              *(_DWORD *)(a1 + 48) = v45;
            }
            else
            {
              if (*v7) {
                uint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(13, v40, v47);
            }
            uint64_t v39 = *(void *)v80;
            if (*(void *)a3 <= *(void *)v80 || **(unsigned char **)v80 != 104) {
              goto LABEL_130;
            }
          }
        }
        if (v10 == 106)
        {
          *(void *)&long long v81 = a1 + 48;
          *((void *)&v81 + 1) = sub_184A060;
          uint64_t v82 = a1 + 8;
          int v83 = 13;
          int v21 = sub_1112E88((uint64_t)a3, (char *)v9, &v81);
          goto LABEL_94;
        }
LABEL_144:
        if (v10) {
          BOOL v78 = (v10 & 7) == 4;
        }
        else {
          BOOL v78 = 1;
        }
        if (!v78)
        {
          if (*v7)
          {
            uint64_t v79 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v79 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v80;
          }
          int v21 = sub_1885AC0(v10, v79, (char *)v9, a3);
LABEL_94:
          *(void *)uint64_t v80 = v21;
          if (!v21) {
            goto LABEL_154;
          }
LABEL_130:
          if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_154:
        }
          *(void *)uint64_t v80 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v80;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v48 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
        if (v48) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 104);
LABEL_93:
        uint64_t v49 = (std::string *)sub_1880F84(v16, v15);
        int v21 = (void *)sub_188C244(v49, *(char **)v80, (uint64_t)a3);
        goto LABEL_94;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_144;
        }
        v5 |= 0x2000u;
        unint64_t v50 = (char *)(v9 + 1);
        uint64_t v51 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_100;
        }
        int v52 = *v50;
        uint64_t v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v9, v51);
          *(void *)uint64_t v80 = v68;
          *(unsigned char *)(a1 + 168) = v69 != 0;
          if (!v68) {
            goto LABEL_154;
          }
        }
        else
        {
          unint64_t v50 = (char *)(v9 + 2);
LABEL_100:
          *(void *)uint64_t v80 = v50;
          *(unsigned char *)(a1 + 168) = v51 != 0;
        }
        goto LABEL_130;
      case 0x10u:
        if (v10 != 128) {
          goto LABEL_144;
        }
        v5 |= 0x4000u;
        uint64_t v53 = (char *)(v9 + 1);
        uint64_t v54 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_105;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v70 = sub_188C138((uint64_t)v9, v54);
          *(void *)uint64_t v80 = v70;
          *(unsigned char *)(a1 + 169) = v71 != 0;
          if (!v70) {
            goto LABEL_154;
          }
        }
        else
        {
          uint64_t v53 = (char *)(v9 + 2);
LABEL_105:
          *(void *)uint64_t v80 = v53;
          *(unsigned char *)(a1 + 169) = v54 != 0;
        }
        goto LABEL_130;
      case 0x11u:
        if (v10 != 136) {
          goto LABEL_144;
        }
        v5 |= 0x8000u;
        uint64_t v56 = (char *)(v9 + 1);
        int v57 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v58 = *v56;
        int v57 = v57 + (v58 << 7) - 128;
        if (v58 < 0)
        {
          uint64_t v72 = sub_188C0D0((uint64_t)v9, v57);
          *(void *)uint64_t v80 = v72;
          *(_DWORD *)(a1 + 172) = v73;
          if (!v72) {
            goto LABEL_154;
          }
        }
        else
        {
          uint64_t v56 = (char *)(v9 + 2);
LABEL_110:
          *(void *)uint64_t v80 = v56;
          *(_DWORD *)(a1 + 172) = v57;
        }
        goto LABEL_130;
      case 0x12u:
        if (v10 != 144) {
          goto LABEL_144;
        }
        v5 |= 0x40000u;
        uint64_t v59 = (char *)(v9 + 1);
        int v60 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_115;
        }
        int v61 = *v59;
        int v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t v74 = sub_188C0D0((uint64_t)v9, v60);
          *(void *)uint64_t v80 = v74;
          *(_DWORD *)(a1 + 192) = v75;
          if (!v74) {
            goto LABEL_154;
          }
        }
        else
        {
          uint64_t v59 = (char *)(v9 + 2);
LABEL_115:
          *(void *)uint64_t v80 = v59;
          *(_DWORD *)(a1 + 192) = v60;
        }
        goto LABEL_130;
      case 0x13u:
        if (v10 != 153) {
          goto LABEL_144;
        }
        uint64_t v62 = *(void *)v9;
        uint64_t v23 = v9 + 8;
        v5 |= 0x10000u;
        *(void *)(a1 + 176) = v62;
LABEL_118:
        *(void *)uint64_t v80 = v23;
        goto LABEL_130;
      case 0x14u:
        if (v10 != 162) {
          goto LABEL_144;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        unint64_t v63 = *(void **)(a1 + 144);
        if (!v63)
        {
          uint64_t v64 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v64 = (void *)*v64;
          }
          unint64_t v63 = sub_12BBF44((uint64_t)v64);
          *(void *)(a1 + 144) = v63;
          unint64_t v9 = *(unsigned __int8 **)v80;
        }
        int v21 = sub_1209958(a3, (uint64_t)v63, v9);
        goto LABEL_94;
      case 0x15u:
        if (v10 != 168) {
          goto LABEL_144;
        }
        v5 |= 0x20000u;
        uint64_t v65 = (char *)(v9 + 1);
        uint64_t v66 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_129;
        }
        int v67 = *v65;
        uint64_t v66 = v66 + (v67 << 7) - 128;
        if (v67 < 0)
        {
          uint64_t v76 = sub_188C138((uint64_t)v9, v66);
          *(void *)uint64_t v80 = v76;
          *(void *)(a1 + 184) = v77;
          if (!v76) {
            goto LABEL_154;
          }
        }
        else
        {
          uint64_t v65 = (char *)(v9 + 2);
LABEL_129:
          *(void *)uint64_t v80 = v65;
          *(void *)(a1 + 184) = v66;
        }
        goto LABEL_130;
      default:
        goto LABEL_144;
    }
  }
}

char *sub_150AE24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150BCB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_150AEB4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x40) == 0)
    {
LABEL_3:
      if ((v6 & 0x80) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 112);
  char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unint64_t v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unint64_t v9 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v7, v9, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_4:
    if ((v6 & 0x100) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 120);
  char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  int v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_5:
    if ((v6 & 0x800) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 128);
  char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v13, v15, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_6:
    if ((v6 & 2) == 0) {
      goto LABEL_7;
    }
    goto LABEL_35;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 152);
  char *v4 = 41;
  *(void *)(v4 + 1) = v16;
  v4 += 9;
  if ((v6 & 2) == 0)
  {
LABEL_7:
    if ((v6 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_36;
  }
LABEL_35:
  int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_8:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_37;
  }
LABEL_36:
  int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 160);
  char *v4 = 65;
  *(void *)(v4 + 1) = v17;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 0x200) == 0) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 136);
  char *v4 = 90;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  v4[1] = v19;
  if (v19 > 0x7F) {
    int v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    int v20 = v4 + 2;
  }
  int v4 = sub_150BE08(v18, (unint64_t)v20, a3);
LABEL_48:
  uint64_t v21 = *(unsigned int *)(a1 + 32);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = 0;
    uint64_t v23 = 8 * v21;
    do
    {
      uint64_t v24 = *(void **)(*(void *)(a1 + 40) + v22 + 8);
      if (*((char *)v24 + 23) < 0)
      {
        int64_t v25 = v24[1];
        if (v25 > 127) {
          goto LABEL_59;
        }
      }
      else
      {
        int64_t v25 = *((unsigned __int8 *)v24 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v25)
      {
        char *v4 = 98;
        v4[1] = v25;
        if (*((char *)v24 + 23) < 0) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v26 = v4 + 2;
        memcpy(v26, v24, v25);
        int v4 = &v26[v25];
        goto LABEL_57;
      }
LABEL_59:
      int v4 = (char *)sub_188A868(a3, 12, (uint64_t)v24, v4);
LABEL_57:
      v22 += 8;
    }
    while (v23 != v22);
  }
  uint64_t v27 = *(unsigned int *)(a1 + 48);
  if ((int)v27 >= 1)
  {
    for (uint64_t i = 0; i != v27; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v29 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      char *v4 = 104;
      v4[1] = v29;
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unint64_t v30 = v29 >> 7;
        v4[2] = v29 >> 7;
        v4 += 3;
        if (v29 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v31 = v30 >> 14;
            v30 >>= 7;
            *v4++ = v30;
          }
          while (v31);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x20) != 0)
  {
    int v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x2000) == 0)
    {
LABEL_71:
      if ((v6 & 0x4000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_78;
    }
  }
  else if ((v6 & 0x2000) == 0)
  {
    goto LABEL_71;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v32 = *(unsigned char *)(a1 + 168);
  char *v4 = 120;
  v4[1] = v32;
  v4 += 2;
  if ((v6 & 0x4000) == 0)
  {
LABEL_72:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_81;
  }
LABEL_78:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v33 = *(unsigned char *)(a1 + 169);
  *(_WORD *)int v4 = 384;
  v4[2] = v33;
  v4 += 3;
  if ((v6 & 0x8000) != 0)
  {
LABEL_81:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 172);
    *(_WORD *)int v4 = 392;
    v4[2] = v34;
    if (v34 > 0x7F)
    {
      v4[2] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[3] = v34 >> 7;
      v4 += 4;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_87:
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v37 = *(_DWORD *)(a1 + 192);
    *(_WORD *)int v4 = 400;
    v4[2] = v37;
    if (v37 > 0x7F)
    {
      v4[2] = v37 | 0x80;
      unsigned int v38 = v37 >> 7;
      v4[3] = v37 >> 7;
      v4 += 4;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v40 = *(void *)(a1 + 176);
    *(_WORD *)int v4 = 409;
    *(void *)(v4 + 2) = v40;
    v4 += 10;
    if ((v6 & 0x400) == 0)
    {
LABEL_96:
      if ((v6 & 0x20000) == 0) {
        goto LABEL_113;
      }
      goto LABEL_107;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_96;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 144);
  *(_WORD *)int v4 = 418;
  unsigned int v42 = *(_DWORD *)(v41 + 20);
  v4[2] = v42;
  if (v42 > 0x7F) {
    int v43 = sub_188A9CC(v42, v4 + 2);
  }
  else {
    int v43 = v4 + 3;
  }
  int v4 = sub_12A4C18(v41, (unint64_t)v43, a3);
  if ((v6 & 0x20000) != 0)
  {
LABEL_107:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v44 = *(void *)(a1 + 184);
    *(_WORD *)int v4 = 424;
    v4[2] = v44;
    if (v44 > 0x7F)
    {
      v4[2] = v44 | 0x80;
      unint64_t v45 = v44 >> 7;
      v4[3] = v44 >> 7;
      v4 += 4;
      if (v44 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v46 = v45 >> 14;
          v45 >>= 7;
          *v4++ = v45;
        }
        while (v46);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_113:
  uint64_t v47 = *(void *)(a1 + 8);
  if ((v47 & 1) == 0) {
    return v4;
  }
  unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v49 + 31) < 0)
  {
    unint64_t v50 = *(void **)(v49 + 8);
    uint64_t v51 = *(void *)(v49 + 16);
  }
  else
  {
    unint64_t v50 = (void *)(v49 + 8);
    LODWORD(v51) = *(unsigned __int8 *)(v49 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v51)
  {
    uint64_t v52 = (int)v51;
    memcpy(v4, v50, (int)v51);
    v4 += v52;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v50, v51, v4);
}

uint64_t sub_150B644(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    char v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v13 = v4 + v8 + v10;
  int v14 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v14) {
    goto LABEL_26;
  }
  if (v14)
  {
    unint64_t v20 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v13 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 2) == 0)
    {
LABEL_19:
      if ((v14 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_57;
    }
  }
  else if ((v14 & 2) == 0)
  {
    goto LABEL_19;
  }
  unint64_t v23 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v13 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 4) == 0)
  {
LABEL_20:
    if ((v14 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_60;
  }
LABEL_57:
  unint64_t v26 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
  uint64_t v28 = *(void *)(v26 + 8);
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = v27;
  }
  v13 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 8) == 0)
  {
LABEL_21:
    if ((v14 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_63;
  }
LABEL_60:
  unint64_t v29 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v31 = v30;
  }
  v13 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x10) == 0)
  {
LABEL_22:
    if ((v14 & 0x20) == 0) {
      goto LABEL_23;
    }
LABEL_66:
    unint64_t v35 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v37 = *(void *)(v35 + 8);
    if ((v36 & 0x80u) == 0) {
      uint64_t v37 = v36;
    }
    v13 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 0x40) == 0)
    {
LABEL_24:
      if ((v14 & 0x80) == 0) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }
    goto LABEL_69;
  }
LABEL_63:
  unint64_t v32 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
  uint64_t v34 = *(void *)(v32 + 8);
  if ((v33 & 0x80u) == 0) {
    uint64_t v34 = v33;
  }
  v13 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x20) != 0) {
    goto LABEL_66;
  }
LABEL_23:
  if ((v14 & 0x40) == 0) {
    goto LABEL_24;
  }
LABEL_69:
  uint64_t v38 = sub_15B0D90(*(void *)(a1 + 112));
  v13 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x80) != 0)
  {
LABEL_25:
    uint64_t v15 = sub_15B1D1C(*(void *)(a1 + 120));
    v13 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_26:
  if ((v14 & 0xFF00) == 0) {
    goto LABEL_42;
  }
  if ((v14 & 0x100) == 0)
  {
    if ((v14 & 0x200) == 0) {
      goto LABEL_29;
    }
LABEL_72:
    uint64_t v40 = sub_150BF18(*(void *)(a1 + 136));
    v13 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v14 & 0x400) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v39 = sub_15B0D90(*(void *)(a1 + 128));
  v13 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v14 & 0x200) != 0) {
    goto LABEL_72;
  }
LABEL_29:
  if ((v14 & 0x400) != 0)
  {
LABEL_30:
    uint64_t v16 = sub_12A4ED4(*(void *)(a1 + 144));
    v13 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_31:
  uint64_t v17 = v13 + 9;
  if ((v14 & 0x800) == 0) {
    uint64_t v17 = v13;
  }
  if ((v14 & 0x1000) != 0) {
    v17 += 9;
  }
  if ((v14 & 0x2000) != 0) {
    v17 += 2;
  }
  if ((v14 & 0x4000) != 0) {
    uint64_t v13 = v17 + 3;
  }
  else {
    uint64_t v13 = v17;
  }
  if ((v14 & 0x8000) != 0) {
    v13 += ((9 * (__clz(*(_DWORD *)(a1 + 172) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_42:
  if ((v14 & 0x70000) != 0)
  {
    if ((v14 & 0x10000) != 0) {
      v13 += 10;
    }
    if ((v14 & 0x20000) != 0) {
      v13 += ((9 * (__clz(*(void *)(a1 + 184) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v14 & 0x40000) != 0) {
      v13 += ((9 * (__clz(*(_DWORD *)(a1 + 192) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v41 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v41 + 31) < 0) {
      uint64_t v42 = *(void *)(v41 + 16);
    }
    else {
      uint64_t v42 = *(unsigned __int8 *)(v41 + 31);
    }
    v13 += v42;
  }
  *(_DWORD *)(a1 + 20) = v13;
  return v13;
}

void sub_150BADC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_12BC1AC((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      uint64_t v8 = v4;
    }
    else {
      uint64_t v8 = &off_2530AB8;
    }
    sub_12A75F4(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_150BB84(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_12A76C4(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_150BBB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.ClientContext");
}

uint64_t sub_150BBC0(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253C4C0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_12A7118(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_150BC78(uint64_t a1)
{
  sub_150BBC0(a1);

  operator delete();
}

char *sub_150BCB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_12BC1AC((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_12B6F54(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_150BE08(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 40);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_12A7400(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_150BF18(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_12A7544(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_150BFA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.SessionContext");
}

void *sub_150BFB0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DD86C(a1 + 5);
  sub_122BA8C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_150C03C(void *a1)
{
  sub_150BFB0(a1);

  operator delete();
}

char *sub_150C074(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unsigned int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unsigned int v7 = v26 + 2;
        }
      }
      unint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            unint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              unsigned int v19 = sub_14A25EC(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_14A129C(a3, v18, v15);
            unint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        unint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          unint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_14A23B8(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          unint64_t v20 = (char *)sub_11EAAEC(a3, v24, v21);
          unint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unsigned int v7 = v26;
      }
      unint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_150C2BC(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_149FD00(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_14A10E0(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unsigned int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unsigned int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_150C484(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_149FDEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A11E4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

uint64_t sub_150C584()
{
  return 1;
}

void *sub_150C58C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.FeatureSet");
}

void *sub_150C59C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_150C630((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_150C630(uint64_t result)
{
  if ((uint64_t (***)())result != &off_253C528)
  {
    int v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 64);
    if (v2)
    {
      sub_14DAE7C(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[9];
    if (v3)
    {
      sub_14DA938(v3);
      operator delete();
    }
    uint64_t v4 = (void *)v1[10];
    if (v4)
    {
      sub_150BFB0(v4);
      operator delete();
    }
    uint64_t result = v1[11];
    if (result)
    {
      sub_150DC1C(result);
      operator delete();
    }
  }
  return result;
}

void sub_150C6FC(void *a1)
{
  sub_150C59C(a1);

  operator delete();
}

uint64_t sub_150C734(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_14:
    uint64_t result = sub_14D9DF8(*(void *)(a1 + 72));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  uint64_t result = sub_14A7068(*(void *)(a1 + 64));
  if ((v3 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  uint64_t result = sub_14FD150(*(void *)(a1 + 80));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_150C7E8(*(void *)(a1 + 88));
LABEL_7:
  if ((v3 & 0xF0) != 0)
  {
    *(void *)(a1 + 101) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_150C7E8(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_150C7E8(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = sub_14A7068(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 72) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_150C884(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v58 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    uint64_t v8 = (uint64_t **)(a1 + 24);
    while (1)
    {
      uint64_t v9 = (unsigned __int8 *)(*(void *)v58 + 1);
      unsigned int v10 = **(unsigned char **)v58;
      if ((char)**(unsigned char **)v58 < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if ((char)*v9 < 0)
        {
          uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v58, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          uint64_t v9 = (unsigned __int8 *)(*(void *)v58 + 2);
        }
      }
      *(void *)int v58 = v9;
      switch(v10 >> 3)
      {
        case 1u:
          if (v10 != 8) {
            goto LABEL_91;
          }
          uint64_t v13 = (char *)(v9 + 1);
          unint64_t v14 = *v9;
          if (((char)*v9 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v15 = *v13;
          int v16 = v14 + (v15 << 7);
          unint64_t v14 = (v16 - 128);
          if (v15 < 0)
          {
            *(void *)int v58 = sub_188C138((uint64_t)v9, (v16 - 128));
            if (!*(void *)v58) {
              goto LABEL_108;
            }
            unint64_t v14 = v48;
          }
          else
          {
            uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
            *(void *)int v58 = v13;
          }
          if (v14 > 0x1A)
          {
            if (*v7) {
              int v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(1, v14, v57);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x10u;
            *(_DWORD *)(a1 + 96) = v14;
          }
          goto LABEL_99;
        case 2u:
          if (v10 != 18) {
            goto LABEL_91;
          }
          unint64_t v17 = (const std::string::value_type *)(v9 - 1);
          while (1)
          {
            uint64_t v18 = (char *)(v17 + 1);
            *(void *)int v58 = v17 + 1;
            unsigned int v19 = *(_DWORD **)(a1 + 40);
            if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
            {
              *(_DWORD *)(a1 + 32) = v20 + 1;
              uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
            }
            else
            {
              if (!*v8) {
                operator new();
              }
              *uint64_t v23 = v22;
              v23[1] = sub_3A6EDC;
              *uint64_t v22 = 0;
              v22[1] = 0;
              int v22[2] = 0;
              uint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
              uint64_t v18 = *(char **)v58;
            }
            unint64_t v17 = sub_188C244(v21, v18, (uint64_t)a3);
            *(void *)int v58 = v17;
            if (!v17) {
              goto LABEL_108;
            }
            if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
              goto LABEL_99;
            }
          }
        case 3u:
          if (v10 != 24) {
            goto LABEL_91;
          }
          v5 |= 0x20u;
          uint64_t v25 = (char *)(v9 + 1);
          LODWORD(v24) = *v9;
          if ((v24 & 0x80) == 0) {
            goto LABEL_32;
          }
          int v26 = *v25;
          uint64_t v24 = v24 + (v26 << 7) - 128;
          if (v26 < 0)
          {
            uint64_t v49 = sub_188C138((uint64_t)v9, v24);
            *(void *)int v58 = v49;
            *(_DWORD *)(a1 + 100) = v50;
            if (!v49) {
              goto LABEL_108;
            }
          }
          else
          {
            uint64_t v25 = (char *)(v9 + 2);
LABEL_32:
            *(void *)int v58 = v25;
            *(_DWORD *)(a1 + 100) = v24;
          }
          goto LABEL_99;
        case 4u:
          if (v10 != 32) {
            goto LABEL_91;
          }
          v5 |= 0x40u;
          uint64_t v28 = (char *)(v9 + 1);
          LODWORD(v27) = *v9;
          if ((v27 & 0x80) == 0) {
            goto LABEL_37;
          }
          int v29 = *v28;
          uint64_t v27 = v27 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            uint64_t v51 = sub_188C138((uint64_t)v9, v27);
            *(void *)int v58 = v51;
            *(_DWORD *)(a1 + 104) = v52;
            if (!v51) {
              goto LABEL_108;
            }
          }
          else
          {
            uint64_t v28 = (char *)(v9 + 2);
LABEL_37:
            *(void *)int v58 = v28;
            *(_DWORD *)(a1 + 104) = v27;
          }
          goto LABEL_99;
        case 5u:
          if (v10 != 42) {
            goto LABEL_91;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v30 = *(void **)(a1 + 64);
          if (!v30)
          {
            uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v31 = (void *)*v31;
            }
            uint64_t v30 = sub_14DB564((uint64_t)v31);
            *(void *)(a1 + 64) = v30;
            uint64_t v9 = *(unsigned __int8 **)v58;
          }
          uint64_t v32 = sub_14A7DFC(a3, (uint64_t)v30, v9);
          goto LABEL_98;
        case 6u:
          if (v10 != 50) {
            goto LABEL_91;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v33 = *(void **)(a1 + 72);
          if (!v33)
          {
            uint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v34 = (void *)*v34;
            }
            uint64_t v33 = sub_14DB4EC((uint64_t)v34);
            *(void *)(a1 + 72) = v33;
            uint64_t v9 = *(unsigned __int8 **)v58;
          }
          uint64_t v32 = (uint64_t)sub_14DA1D8(a3, (uint64_t)v33, v9);
          goto LABEL_98;
        case 7u:
          if (v10 != 58) {
            goto LABEL_91;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v35 = *(void *)(a1 + 80);
          if (!v35)
          {
            uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v36 = (void *)*v36;
            }
            uint64_t v35 = sub_150EE60((uint64_t)v36);
            *(void *)(a1 + 80) = v35;
            uint64_t v9 = *(unsigned __int8 **)v58;
          }
          uint64_t v32 = (uint64_t)sub_14FD334(a3, v35, v9);
          goto LABEL_98;
        case 8u:
          if (v10 != 64) {
            goto LABEL_91;
          }
          v5 |= 0x80u;
          uint64_t v37 = (char *)(v9 + 1);
          uint64_t v38 = *v9;
          if (((char)*v9 & 0x80000000) == 0) {
            goto LABEL_60;
          }
          int v39 = *v37;
          uint64_t v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            uint64_t v53 = sub_188C138((uint64_t)v9, v38);
            *(void *)int v58 = v53;
            *(unsigned char *)(a1 + 108) = v54 != 0;
            if (!v53) {
              goto LABEL_108;
            }
          }
          else
          {
            uint64_t v37 = (char *)(v9 + 2);
LABEL_60:
            *(void *)int v58 = v37;
            *(unsigned char *)(a1 + 108) = v38 != 0;
          }
          goto LABEL_99;
        case 9u:
          if (v10 != 74) {
            goto LABEL_91;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v40 = *(void *)(a1 + 88);
          if (!v40)
          {
            unint64_t v41 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unint64_t v41 = (void *)*v41;
            }
            uint64_t v40 = sub_150EFB0((uint64_t)v41);
            *(void *)(a1 + 88) = v40;
            uint64_t v9 = *(unsigned __int8 **)v58;
          }
          uint64_t v32 = sub_150CEC8(a3, v40, v9);
          goto LABEL_98;
        case 0xAu:
          if (v10 == 80)
          {
            uint64_t v42 = v9 - 1;
            while (1)
            {
              *(void *)int v58 = v42 + 1;
              uint64_t v43 = v42[1];
              if ((char)v42[1] < 0)
              {
                int v44 = v43 + (v42[2] << 7);
                uint64_t v43 = (v44 - 128);
                if ((char)v42[2] < 0)
                {
                  uint64_t v42 = (unsigned __int8 *)sub_188C138((uint64_t)(v42 + 1), (v44 - 128));
                  uint64_t v43 = v45;
                }
                else
                {
                  v42 += 3;
                }
              }
              else
              {
                v42 += 2;
              }
              *(void *)int v58 = v42;
              uint64_t v46 = *(unsigned int *)(a1 + 48);
              if (v46 == *(_DWORD *)(a1 + 52))
              {
                int v47 = v46 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v46 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v46) = v43;
                uint64_t v42 = *(unsigned __int8 **)v58;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v46) = v43;
                int v47 = v46 + 1;
              }
              *(_DWORD *)(a1 + 48) = v47;
              if (!v42) {
                goto LABEL_108;
              }
              if (*(void *)a3 <= (unint64_t)v42 || *v42 != 80) {
                goto LABEL_99;
              }
            }
          }
          if (v10 == 82)
          {
            uint64_t v32 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 48), v9, (uint64_t)a3);
          }
          else
          {
LABEL_91:
            if (v10) {
              BOOL v55 = (v10 & 7) == 4;
            }
            else {
              BOOL v55 = 1;
            }
            if (v55)
            {
              if (v9)
              {
                a3[10].i32[0] = v10 - 1;
                goto LABEL_2;
              }
LABEL_108:
              *(void *)int v58 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v56 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v56 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v9 = *(unsigned __int8 **)v58;
            }
            uint64_t v32 = (uint64_t)sub_1885AC0(v10, v56, (char *)v9, a3);
          }
LABEL_98:
          *(void *)int v58 = v32;
          if (!v32) {
            goto LABEL_108;
          }
LABEL_99:
          if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_91;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v58;
}

uint64_t sub_150CEC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150DD20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_150CF58(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      uint64_t v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_19;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v14)
      {
        char *v4 = 18;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          uint64_t v13 = (void *)*v13;
        }
        int v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_17;
      }
LABEL_19:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v13, v4);
LABEL_17:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 100);
    char *v4 = 24;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 104);
    char *v4 = 32;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 64);
    char *v4 = 42;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    uint64_t v4 = sub_14DB148(v22, v24, a3);
    if ((v6 & 2) == 0)
    {
LABEL_36:
      if ((v6 & 4) == 0) {
        goto LABEL_37;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_36;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 72);
  char *v4 = 50;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_14DAB5C(v25, (unint64_t)v27, a3);
  if ((v6 & 4) == 0)
  {
LABEL_37:
    if ((v6 & 0x80) == 0) {
      goto LABEL_38;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 80);
  char *v4 = 58;
  unsigned int v29 = *(_DWORD *)(v28 + 64);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  uint64_t v4 = sub_150C2BC(v28, v30, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_38:
    if ((v6 & 8) == 0) {
      goto LABEL_67;
    }
    goto LABEL_61;
  }
LABEL_58:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v31 = *(unsigned char *)(a1 + 108);
  char *v4 = 64;
  v4[1] = v31;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_61:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 88);
    char *v4 = 74;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      uint64_t v34 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_150E0DC(v32, v34, a3);
  }
LABEL_67:
  uint64_t v35 = *(unsigned int *)(a1 + 48);
  if ((int)v35 >= 1)
  {
    for (uint64_t i = 0; i != v35; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v37 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      char *v4 = 80;
      v4[1] = v37;
      if (v37 > 0x7F)
      {
        v4[1] = v37 | 0x80;
        unint64_t v38 = v37 >> 7;
        v4[2] = v37 >> 7;
        v4 += 3;
        if (v37 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v39 = v38 >> 14;
            v38 >>= 7;
            *v4++ = v38;
          }
          while (v39);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v40 = *(void *)(a1 + 8);
  if ((v40 & 1) == 0) {
    return v4;
  }
  unint64_t v42 = v40 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v42 + 31) < 0)
  {
    uint64_t v43 = *(void **)(v42 + 8);
    uint64_t v44 = *(void *)(v42 + 16);
  }
  else
  {
    uint64_t v43 = (void *)(v42 + 8);
    LODWORD(v44) = *(unsigned __int8 *)(v42 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v44)
  {
    uint64_t v45 = (int)v44;
    memcpy(v4, v43, (int)v44);
    v4 += v45;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v43, v44, v4);
}

uint64_t sub_150D4B0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) != 0)
  {
    int v3 = *(_DWORD *)(a1 + 96);
    if (v3 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 32);
  uint64_t v5 = v2 + v4;
  if ((int)v4 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v9 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = v8;
      }
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      --v4;
    }
    while (v4);
  }
  uint64_t v10 = sub_188D5A8((unsigned int *)(a1 + 48)) + v5 + *(unsigned int *)(a1 + 48);
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 0xF) == 0) {
    goto LABEL_17;
  }
  if ((v11 & 1) == 0)
  {
    if ((v11 & 2) == 0) {
      goto LABEL_14;
    }
LABEL_33:
    uint64_t v22 = sub_14DAD00(*(void *)(a1 + 72));
    v10 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v11 & 4) == 0)
    {
LABEL_15:
      if ((v11 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_34;
  }
  uint64_t v21 = sub_14DB2B0(*(void *)(a1 + 64));
  v10 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v11 & 2) != 0) {
    goto LABEL_33;
  }
LABEL_14:
  if ((v11 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_34:
  uint64_t v23 = sub_150C484(*(void *)(a1 + 80));
  v10 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v11 & 8) != 0)
  {
LABEL_16:
    uint64_t v12 = sub_150E3AC(*(void *)(a1 + 88));
    v10 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v11 & 0xE0) != 0)
  {
    if ((v11 & 0x20) != 0)
    {
      int v13 = *(_DWORD *)(a1 + 100);
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v13 >= 0) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = 11;
      }
      v10 += v15;
    }
    if ((v11 & 0x40) != 0)
    {
      int v16 = *(_DWORD *)(a1 + 104);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      v10 += v18;
    }
    if ((v11 & 0x80) != 0) {
      v10 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v24 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v10 += v25;
  }
  *(_DWORD *)(a1 + 20) = v10;
  return v10;
}

std::string *sub_150D70C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[2], data_low + v9);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v12)
  {
    if (v12)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v14 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
      if (!v14)
      {
        std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
        int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v16 = (void *)*v16;
        }
        uint64_t v14 = (std::string *)sub_14DB564((uint64_t)v16);
        v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v17 = &off_253B4F8;
      }
      uint64_t result = sub_14A8F98(v14, (uint64_t)v17);
      if ((v12 & 2) == 0)
      {
LABEL_9:
        if ((v12 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_37;
      }
    }
    else if ((v12 & 2) == 0)
    {
      goto LABEL_9;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unint64_t v20 = (void *)*v20;
      }
      std::string::pointer data = (std::string *)sub_14DB4EC((uint64_t)v20);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_253B4D8;
    }
    uint64_t result = sub_117EF04(data, (uint64_t)v21);
    if ((v12 & 4) == 0)
    {
LABEL_10:
      if ((v12 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_45;
    }
LABEL_37:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v22 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v22)
    {
      std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
      unint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = (std::string *)sub_150EE60((uint64_t)v24);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v22;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v25 = *(void *(****)(void *))(a2 + 80);
    }
    else {
      uint64_t v25 = &off_253C4E0;
    }
    uint64_t result = sub_14FDD9C(v22, (uint64_t)v25);
    if ((v12 & 8) == 0)
    {
LABEL_11:
      if ((v12 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_53;
    }
LABEL_45:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unsigned int v26 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
    if (!v26)
    {
      std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      unsigned int v26 = (std::string *)sub_150EFB0((uint64_t)v28);
      v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v26;
    }
    if (*(void *)(a2 + 88)) {
      unsigned int v29 = *(uint64_t (****)(void))(a2 + 88);
    }
    else {
      unsigned int v29 = &off_253C598;
    }
    uint64_t result = sub_150D9B8(v26, (uint64_t)v29);
    if ((v12 & 0x10) == 0)
    {
LABEL_12:
      if ((v12 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_54;
    }
LABEL_53:
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    if ((v12 & 0x20) == 0)
    {
LABEL_13:
      if ((v12 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_55;
    }
LABEL_54:
    HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
    if ((v12 & 0x40) == 0)
    {
LABEL_14:
      if ((v12 & 0x80) == 0)
      {
LABEL_16:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v12;
        goto LABEL_17;
      }
LABEL_15:
      v3[4].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 108);
      goto LABEL_16;
    }
LABEL_55:
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
    if ((v12 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_150D9B8(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_1515C28((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v17 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v17 = (void *)*v17;
        }
        std::string::pointer data = (std::string *)sub_14DB564((uint64_t)v17);
        v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v18 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v18 = &off_253B4F8;
      }
      uint64_t result = sub_14A8F98(data, (uint64_t)v18);
    }
    if ((v14 & 2) != 0) {
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_150DB5C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x10) == 0) {
    return 0;
  }
  if (v1)
  {
    BOOL result = sub_14A912C(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v1 = *(_DWORD *)(a1 + 16);
  }
  if ((v1 & 2) != 0)
  {
    BOOL result = sub_14DA8A4(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v1 = *(_DWORD *)(a1 + 16);
  }
  if ((v1 & 8) == 0) {
    return 1;
  }
  BOOL result = sub_150DBC8(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

BOOL sub_150DBC8(uint64_t a1)
{
  BOOL result = sub_150E528(a1 + 48);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    BOOL result = sub_14A912C(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_150DC0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.Span");
}

uint64_t sub_150DC1C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)(void))a1 != &off_253C598)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_14DAE7C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1515A14((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_150DCE8(uint64_t a1)
{
  sub_150DC1C(a1);

  operator delete();
}

uint64_t sub_150DD20(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    return *(void *)v35;
  }
  uint64_t v6 = (void *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_44;
        }
        int v12 = (const std::string::value_type *)(v8 - 1);
        while (1)
        {
          uint64_t v13 = (char *)(v12 + 1);
          *(void *)uint64_t v35 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            int v16 = *(std::string **)&v14[2 * v15 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v18 = v17;
            v18[1] = sub_3A6EDC;
            void *v17 = 0;
            v17[1] = 0;
            v17[2] = 0;
            int v16 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(char **)v35;
          }
          int v12 = sub_188C244(v16, v13, (uint64_t)a3);
          *(void *)uint64_t v35 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_52;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_44;
        }
        uint64_t v19 = (char *)(v8 + 1);
        unint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)uint64_t v35 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v35) {
            return 0;
          }
          unint64_t v20 = v33;
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_25:
          *(void *)uint64_t v35 = v19;
        }
        if (v20 > 2)
        {
          if (*v6) {
            uint64_t v34 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v20, v34);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 80) = v20;
        }
        goto LABEL_52;
      case 3u:
        if (v9 != 26) {
          goto LABEL_44;
        }
        std::string::size_type v23 = v8 - 1;
        while (1)
        {
          *(void *)uint64_t v35 = v23 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_150EFB0(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, v27);
          }
          std::string::size_type v23 = (unsigned __int8 *)sub_150CEC8(a3, v26);
          *(void *)uint64_t v35 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 26) {
            goto LABEL_52;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void **)(a1 + 72);
        if (!v28)
        {
          unsigned int v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v29 = (void *)*v29;
          }
          uint64_t v28 = sub_14DB564((uint64_t)v29);
          *(void *)(a1 + 72) = v28;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v30 = sub_14A7DFC(a3, (uint64_t)v28, v8);
        goto LABEL_51;
      default:
LABEL_44:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v6)
          {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v35;
          }
          uint64_t v30 = (uint64_t)sub_1885AC0(v9, v32, (char *)v8, a3);
LABEL_51:
          *(void *)uint64_t v35 = v30;
          if (!v30) {
            return 0;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            return *(void *)v35;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v35;
    }
  }
}

uint64_t sub_150E0DC(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v10)
      {
        *a2 = 10;
        a2[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = a2 + 2;
        memcpy(v11, v9, v10);
        a2 = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      a2 = (char *)sub_188A868(a3, 1, (uint64_t)v9, a2);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if ((v12 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v13 = *(int *)(a1 + 80);
    *a2 = 16;
    a2[1] = v13;
    if (v13 > 0x7F)
    {
      a2[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      a2[2] = v13 >> 7;
      a2 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *a2++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      a2[1] = v19;
      if (v19 > 0x7F) {
        unint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        unint64_t v20 = a2 + 2;
      }
      a2 = (char *)sub_150E0DC(v18, v20, a3);
    }
  }
  if (v12)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v21 = *(void *)(a1 + 72);
    *a2 = 34;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    a2[1] = v22;
    if (v22 > 0x7F) {
      std::string::size_type v23 = sub_188A9CC(v22, a2 + 1);
    }
    else {
      std::string::size_type v23 = a2 + 2;
    }
    a2 = sub_14DB148(v21, v23, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return (uint64_t)a2;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(a2, v27, (int)v28);
    a2 += v29;
    return (uint64_t)a2;
  }

  return sub_188A528(a3, (char *)v27, v28, a2);
}

uint64_t sub_150E3AC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_150E3AC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      uint64_t v16 = sub_14DB2B0(*(void *)(a1 + 72));
      v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 80);
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v17 >= 0) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 11;
      }
      v9 += v19;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

BOOL sub_150E528(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_150DBC8(*(void *)(*(void *)(a1 + 16) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_150E580@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.StructuredSpanData");
}

uint64_t sub_150E590(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14FECA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_150E620(uint64_t a1)
{
  if (!a1)
  {
    sub_1515CB4();
  }

  return sub_14FE7B0(v3, a1, 0);
}

void *sub_150E67C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BCFC8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_150E6F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_15016E8(v2, a1, 0);
}

void *sub_150E758(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BD0C8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_150E7D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BD148;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_150E85C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BD1C8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_150E904(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24BD248;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_150E9A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD2C8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_150EA40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD348;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(unsigned char *)(result + 96) = 0;
  return result;
}

void *sub_150EAF8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BD3C8;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  result[6] = 0;
  return result;
}

uint64_t sub_150EB80(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD448;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void *sub_150EC28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BD4C8;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_150ECA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BD548;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

double sub_150ED20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_24BD5C8;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = &qword_2550250;
  *(void *)(v2 + 72) = &qword_2550250;
  *(void *)(v2 + 80) = &qword_2550250;
  *(void *)(v2 + 88) = &qword_2550250;
  *(void *)(v2 + 96) = &qword_2550250;
  *(void *)(v2 + 104) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_DWORD *)(v2 + 192) = 0;
  return result;
}

void *sub_150EDE8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = &off_24BD648;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_150EE60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD6C8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_150EF04(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD748;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 93) = 0u;
  return result;
}

uint64_t sub_150EFB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD7C8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

char *sub_150F058(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17C0E1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_150F0E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  char v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_150F1A8(uint64_t a1)
{
  sub_150F0E8(a1);

  operator delete();
}

uint64_t sub_150F1E0(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_150F264(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v35, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 40);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 48);
LABEL_17:
        int v17 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v35, (uint64_t)a3);
        goto LABEL_54;
      case 3u:
        if (v9 != 24) {
          goto LABEL_47;
        }
        v5 |= 4u;
        uint64_t v20 = v8 + 1;
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v35 = v31;
          *(_DWORD *)(a1 + 56) = v32;
          if (!v31) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v35 = v20;
          *(_DWORD *)(a1 + 56) = v19;
        }
        goto LABEL_55;
      case 4u:
        if (v9 == 32)
        {
          uint64_t v22 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)uint64_t v35 = v22 + 1;
            unint64_t v23 = *(unsigned __int8 *)(v22 + 1);
            uint64_t v24 = (char *)(v22 + 2);
            if (*(char *)(v22 + 1) < 0)
            {
              int v25 = *v24;
              int v26 = v23 + (v25 << 7);
              unint64_t v23 = (v26 - 128);
              if (v25 < 0)
              {
                *(void *)uint64_t v35 = sub_188C138(v22 + 1, (v26 - 128));
                if (!*(void *)v35) {
                  goto LABEL_60;
                }
                unint64_t v23 = v29;
                goto LABEL_29;
              }
              uint64_t v24 = (char *)(v22 + 3);
            }
            *(void *)uint64_t v35 = v24;
LABEL_29:
            if (sub_149F9E0(v23))
            {
              uint64_t v27 = *(unsigned int *)(a1 + 24);
              if (v27 == *(_DWORD *)(a1 + 28))
              {
                int v28 = v27 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v27 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                int v28 = v27 + 1;
              }
              *(_DWORD *)(a1 + 24) = v28;
            }
            else
            {
              if (*v7) {
                uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v23, v30);
            }
            uint64_t v22 = *(void *)v35;
            if (*(void *)a3 <= *(void *)v35 || **(unsigned char **)v35 != 32) {
              goto LABEL_55;
            }
          }
        }
        if (v9 == 34)
        {
          *(void *)&long long v36 = a1 + 24;
          *((void *)&v36 + 1) = sub_149F9E0;
          uint64_t v37 = a1 + 8;
          int v38 = 4;
          uint64_t v18 = sub_1112E88((uint64_t)a3, v8, &v36);
LABEL_54:
          *(void *)uint64_t v35 = v18;
          if (!v18) {
            goto LABEL_60;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_47:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v35;
          }
          uint64_t v18 = sub_1885AC0(v9, v34, v8, a3);
          goto LABEL_54;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
      default:
        goto LABEL_47;
    }
  }
}

unsigned char *sub_150F5E4(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 56);
  unsigned char *v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 32;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_150F800(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v6 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_12:
        if ((v7 & 4) == 0) {
          goto LABEL_24;
        }
        goto LABEL_20;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_12;
    }
    unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v6 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) != 0)
    {
LABEL_20:
      int v14 = *(_DWORD *)(a1 + 56);
      if (v14 < 0) {
        uint64_t v15 = 11;
      }
      else {
        uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v6 += v15;
    }
  }
LABEL_24:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v6 += v19;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_150F964(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v13 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v13, v15);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_150FAA0()
{
  return 1;
}

void *sub_150FAA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QuSummaryTriggerFeature");
}

void *sub_150FAB8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DDF70(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_150FB38(void *a1)
{
  sub_150FAB8(a1);

  operator delete();
}

uint64_t sub_150FB70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A0A84(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_150FBEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          std::string::size_type v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14A2564(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_14B79DC(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_150FD8C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_14A0C68(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_150FED0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A0D6C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_150FF80(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_14DED20((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1510050()
{
  return 1;
}

void *sub_1510058@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.Predictions");
}

double sub_1510068(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24BD948;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = &qword_2550250;
  *(void *)(a1 + 176) = &qword_2550250;
  *(void *)(a1 + 184) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(void *)(a1 + 224) = 0x100000000;
  return result;
}

uint64_t sub_15100D8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 168);
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 176));
  }
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 184));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1889DA8(a1 + 152);
  sub_1515E20((void *)(a1 + 128));
  sub_1889DE8((void *)(a1 + 104));
  sub_1889DE8((void *)(a1 + 80));
  sub_1515DA0((void *)(a1 + 56));
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15101E4(uint64_t a1)
{
  sub_15100D8(a1);

  operator delete();
}

uint64_t sub_151021C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 64);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 72) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_150FB70(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  sub_188CC00(a1 + 80);
  uint64_t result = sub_188CC00(a1 + 104);
  uint64_t v6 = *(unsigned int *)(a1 + 136);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_150F1E0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 136) = 0;
  }
  *(_DWORD *)(a1 + 152) = 0;
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 7) != 0)
  {
    if ((v9 & 1) == 0)
    {
      if ((v9 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_18:
      unint64_t v11 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        if ((v9 & 4) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
        if ((v9 & 4) == 0) {
          goto LABEL_25;
        }
      }
      goto LABEL_22;
    }
    unint64_t v10 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v12 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
    }
  }
LABEL_25:
  if ((v9 & 0xF8) != 0)
  {
    *(void *)(a1 + 192) = 0;
    *(void *)(a1 + 200) = 0;
    *(unsigned char *)(a1 + 208) = 0;
  }
  if ((v9 & 0x7F00) != 0)
  {
    *(void *)(a1 + 217) = 0;
    *(void *)(a1 + 209) = 0;
    *(void *)(a1 + 224) = 0x100000000;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_15103AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int64_t v124 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v124, a3[11].i32[1]) & 1) == 0)
  {
    int v122 = 0;
    int v123 = (uint64_t **)(a1 + 104);
    uint64_t v121 = (uint64_t *)(a1 + 128);
    uint64_t v6 = (uint64_t **)(a1 + 80);
    uint64_t v120 = (uint64_t *)(a1 + 8);
    while (1)
    {
      int v7 = (char *)(*(void *)v124 + 1);
      unsigned int v8 = **(unsigned char **)v124;
      if ((char)**(unsigned char **)v124 < 0)
      {
        int v9 = *v7;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          int v7 = (char *)sub_188C180(*(uint64_t *)v124, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          int v7 = (char *)(*(void *)v124 + 2);
        }
      }
      *(void *)int64_t v124 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 8)
          {
            uint64_t v12 = (uint64_t)(v7 - 1);
            while (1)
            {
              *(void *)int64_t v124 = v12 + 1;
              unint64_t v13 = *(unsigned __int8 *)(v12 + 1);
              char v14 = (char *)(v12 + 2);
              if (*(char *)(v12 + 1) < 0)
              {
                int v15 = *v14;
                int v16 = v13 + (v15 << 7);
                unint64_t v13 = (v16 - 128);
                if (v15 < 0)
                {
                  *(void *)int64_t v124 = sub_188C138(v12 + 1, (v16 - 128));
                  if (!*(void *)v124) {
                    goto LABEL_257;
                  }
                  unint64_t v13 = v19;
                  goto LABEL_16;
                }
                char v14 = (char *)(v12 + 3);
              }
              *(void *)int64_t v124 = v14;
LABEL_16:
              if (sub_14A4924(v13))
              {
                uint64_t v17 = *(unsigned int *)(a1 + 24);
                if (v17 == *(_DWORD *)(a1 + 28))
                {
                  int v18 = v17 + 1;
                  sub_188C80C((unsigned int *)(a1 + 24), v17 + 1);
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
                  int v18 = v17 + 1;
                }
                *(_DWORD *)(a1 + 24) = v18;
              }
              else
              {
                if (*v120) {
                  uint64_t v20 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v20 = (std::string *)sub_188DBD8(v120);
                }
                sub_188C020(1, v13, v20);
              }
              uint64_t v12 = *(void *)v124;
              if (*(void *)a3 <= *(void *)v124 || **(unsigned char **)v124 != 8) {
                goto LABEL_223;
              }
            }
          }
          if (v8 != 10) {
            goto LABEL_215;
          }
          *(void *)&long long v125 = a1 + 24;
          *((void *)&v125 + 1) = sub_14A4924;
          uint64_t v126 = a1 + 8;
          int v127 = 1;
          uint64_t v59 = sub_1112E88((uint64_t)a3, v7, &v125);
LABEL_222:
          *(void *)int64_t v124 = v59;
          if (!v59) {
            goto LABEL_257;
          }
LABEL_223:
          if (sub_11947B8((uint64_t)a3, (char **)v124, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 2u:
          if (v8 == 16)
          {
            int v21 = v7 - 1;
            while (1)
            {
              *(void *)int64_t v124 = v21 + 1;
              int v22 = v21[1];
              if (v21[1] < 0)
              {
                int v23 = v22 + (v21[2] << 7);
                int v22 = v23 - 128;
                if (v21[2] < 0)
                {
                  int v21 = (char *)sub_188C0D0((uint64_t)(v21 + 1), v23 - 128);
                  int v22 = v24;
                }
                else
                {
                  v21 += 3;
                }
              }
              else
              {
                v21 += 2;
              }
              *(void *)int64_t v124 = v21;
              uint64_t v25 = *(unsigned int *)(a1 + 40);
              if (v25 == *(_DWORD *)(a1 + 44))
              {
                int v26 = v25 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v25 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v25) = v22;
                int v21 = *(char **)v124;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v25) = v22;
                int v26 = v25 + 1;
              }
              *(_DWORD *)(a1 + 40) = v26;
              if (!v21) {
                goto LABEL_257;
              }
              if (*(void *)a3 <= (unint64_t)v21 || *v21 != 16) {
                goto LABEL_223;
              }
            }
          }
          if (v8 == 18)
          {
            uint64_t v115 = (unsigned int *)(a1 + 40);
LABEL_214:
            uint64_t v59 = sub_188C2CC(v115, (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_215:
            if (v8) {
              BOOL v116 = (v8 & 7) == 4;
            }
            else {
              BOOL v116 = 1;
            }
            if (v116)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_3;
              }
LABEL_257:
              *(void *)int64_t v124 = 0;
              goto LABEL_3;
            }
            if (*v120)
            {
              unint64_t v117 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v117 = (std::string *)sub_188DBD8(v120);
              int v7 = *(char **)v124;
            }
            uint64_t v59 = sub_1885AC0(v8, v117, v7, a3);
          }
          goto LABEL_222;
        case 3u:
          if (v8 != 24) {
            goto LABEL_215;
          }
          uint64_t v27 = v7 + 1;
          unint64_t v28 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_48;
          }
          int v29 = *v27;
          int v30 = v28 + (v29 << 7);
          unint64_t v28 = (v30 - 128);
          if (v29 < 0)
          {
            *(void *)int64_t v124 = sub_188C138((uint64_t)v7, (v30 - 128));
            if (!*(void *)v124) {
              goto LABEL_257;
            }
            unint64_t v28 = v100;
          }
          else
          {
            uint64_t v27 = v7 + 2;
LABEL_48:
            *(void *)int64_t v124 = v27;
          }
          if (sub_125D180(v28))
          {
            *(_DWORD *)(a1 + 16) |= 8u;
            *(_DWORD *)(a1 + 192) = v28;
            goto LABEL_223;
          }
          if (*v120) {
            int64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int64_t v118 = (std::string *)sub_188DBD8(v120);
          }
          int v119 = 3;
          goto LABEL_246;
        case 4u:
          if (v8 != 32) {
            goto LABEL_215;
          }
          uint64_t v31 = v7 + 1;
          unint64_t v28 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_55;
          }
          int v32 = *v31;
          int v33 = v28 + (v32 << 7);
          unint64_t v28 = (v33 - 128);
          if (v32 < 0)
          {
            *(void *)int64_t v124 = sub_188C138((uint64_t)v7, (v33 - 128));
            if (!*(void *)v124) {
              goto LABEL_257;
            }
            unint64_t v28 = v101;
          }
          else
          {
            uint64_t v31 = v7 + 2;
LABEL_55:
            *(void *)int64_t v124 = v31;
          }
          if (sub_125D180(v28))
          {
            *(_DWORD *)(a1 + 16) |= 0x10u;
            *(_DWORD *)(a1 + 196) = v28;
            goto LABEL_223;
          }
          if (*v120) {
            int64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int64_t v118 = (std::string *)sub_188DBD8(v120);
          }
          int v119 = 4;
          goto LABEL_246;
        case 5u:
          if (v8 != 42) {
            goto LABEL_215;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v34 = *(void *)(a1 + 8);
          uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
          if (v34) {
            uint64_t v35 = (uint64_t *)*v35;
          }
          long long v36 = (void *)(a1 + 168);
          goto LABEL_104;
        case 0xAu:
          if (v8 != 80) {
            goto LABEL_215;
          }
          v122 |= 0x80u;
          uint64_t v37 = v7 + 1;
          uint64_t v38 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_66;
          }
          int v39 = *v37;
          uint64_t v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            uint64_t v102 = sub_188C138((uint64_t)v7, v38);
            *(void *)int64_t v124 = v102;
            *(unsigned char *)(a1 + 208) = v103 != 0;
            if (!v102) {
              goto LABEL_257;
            }
          }
          else
          {
            uint64_t v37 = v7 + 2;
LABEL_66:
            *(void *)int64_t v124 = v37;
            *(unsigned char *)(a1 + 208) = v38 != 0;
          }
          goto LABEL_223;
        case 0xBu:
          if (v8 != 90) {
            goto LABEL_215;
          }
          uint64_t v40 = v7 - 1;
          while (1)
          {
            unint64_t v41 = (unsigned __int8 *)(v40 + 1);
            *(void *)int64_t v124 = v40 + 1;
            unint64_t v42 = *(_DWORD **)(a1 + 72);
            if (v42 && (uint64_t v43 = *(int *)(a1 + 64), (int)v43 < *v42))
            {
              *(_DWORD *)(a1 + 64) = v43 + 1;
              uint64_t v44 = *(void *)&v42[2 * v43 + 2];
            }
            else
            {
              uint64_t v45 = sub_151274C(*(void *)(a1 + 56));
              uint64_t v44 = sub_188CDC8(a1 + 56, v45);
              unint64_t v41 = *(unsigned __int8 **)v124;
            }
            uint64_t v40 = sub_151126C(a3, v44, v41);
            *(void *)int64_t v124 = v40;
            if (!v40) {
              goto LABEL_257;
            }
            if (*(void *)a3 <= (unint64_t)v40 || *v40 != 90) {
              goto LABEL_223;
            }
          }
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_215;
          }
          uint64_t v46 = v7 - 1;
          while (1)
          {
            int v47 = (char *)(v46 + 1);
            *(void *)int64_t v124 = v46 + 1;
            unint64_t v48 = *(_DWORD **)(a1 + 96);
            if (v48 && (uint64_t v49 = *(int *)(a1 + 88), (int)v49 < *v48))
            {
              *(_DWORD *)(a1 + 88) = v49 + 1;
              int v50 = *(std::string **)&v48[2 * v49 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              void *v52 = v51;
              v52[1] = sub_3A6EDC;
              *uint64_t v51 = 0;
              v51[1] = 0;
              v51[2] = 0;
              int v50 = (std::string *)sub_188CDC8(a1 + 80, (uint64_t)v51);
              int v47 = *(char **)v124;
            }
            uint64_t v46 = sub_188C244(v50, v47, (uint64_t)a3);
            *(void *)int64_t v124 = v46;
            if (!v46) {
              goto LABEL_257;
            }
            if (*(void *)a3 <= (unint64_t)v46 || *v46 != 98) {
              goto LABEL_223;
            }
          }
        case 0xDu:
          if (v8 != 106) {
            goto LABEL_215;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v53 = *(void *)(a1 + 8);
          uint64_t v35 = (uint64_t *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
          if (v53) {
            uint64_t v35 = (uint64_t *)*v35;
          }
          long long v36 = (void *)(a1 + 176);
          goto LABEL_104;
        case 0xEu:
          if (v8 != 112) {
            goto LABEL_215;
          }
          uint64_t v54 = v7 + 1;
          unint64_t v28 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_97;
          }
          int v55 = *v54;
          int v56 = v28 + (v55 << 7);
          unint64_t v28 = (v56 - 128);
          if (v55 < 0)
          {
            *(void *)int64_t v124 = sub_188C138((uint64_t)v7, (v56 - 128));
            if (!*(void *)v124) {
              goto LABEL_257;
            }
            unint64_t v28 = v104;
          }
          else
          {
            uint64_t v54 = v7 + 2;
LABEL_97:
            *(void *)int64_t v124 = v54;
          }
          if (sub_1369B68(v28))
          {
            *(_DWORD *)(a1 + 16) |= 0x20u;
            *(_DWORD *)(a1 + 200) = v28;
            goto LABEL_223;
          }
          if (*v120) {
            int64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int64_t v118 = (std::string *)sub_188DBD8(v120);
          }
          int v119 = 14;
          goto LABEL_246;
        case 0xFu:
          if (v8 != 122) {
            goto LABEL_215;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v57 = *(void *)(a1 + 8);
          uint64_t v35 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
          if (v57) {
            uint64_t v35 = (uint64_t *)*v35;
          }
          long long v36 = (void *)(a1 + 184);
LABEL_104:
          int v58 = (std::string *)sub_1880F84(v36, v35);
          uint64_t v59 = (void *)sub_188C244(v58, *(char **)v124, (uint64_t)a3);
          goto LABEL_222;
        case 0x10u:
          if (v8 != 128) {
            goto LABEL_215;
          }
          int v60 = v7 + 1;
          unint64_t v28 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_109;
          }
          int v61 = *v60;
          int v62 = v28 + (v61 << 7);
          unint64_t v28 = (v62 - 128);
          if (v61 < 0)
          {
            *(void *)int64_t v124 = sub_188C138((uint64_t)v7, (v62 - 128));
            if (!*(void *)v124) {
              goto LABEL_257;
            }
            unint64_t v28 = v105;
          }
          else
          {
            int v60 = v7 + 2;
LABEL_109:
            *(void *)int64_t v124 = v60;
          }
          if (sub_119BBA8(v28))
          {
            *(_DWORD *)(a1 + 16) |= 0x40u;
            *(_DWORD *)(a1 + 204) = v28;
            goto LABEL_223;
          }
          if (*v120) {
            int64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int64_t v118 = (std::string *)sub_188DBD8(v120);
          }
          int v119 = 16;
          goto LABEL_246;
        case 0x11u:
          if (v8 != 136) {
            goto LABEL_215;
          }
          v122 |= 0x100u;
          unint64_t v63 = v7 + 1;
          uint64_t v64 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_116;
          }
          int v65 = *v63;
          uint64_t v64 = v64 + (v65 << 7) - 128;
          if (v65 < 0)
          {
            uint64_t v106 = sub_188C138((uint64_t)v7, v64);
            *(void *)int64_t v124 = v106;
            *(unsigned char *)(a1 + 209) = v107 != 0;
            if (!v106) {
              goto LABEL_257;
            }
          }
          else
          {
            unint64_t v63 = v7 + 2;
LABEL_116:
            *(void *)int64_t v124 = v63;
            *(unsigned char *)(a1 + 209) = v64 != 0;
          }
          goto LABEL_223;
        case 0x12u:
          if (v8 != 144) {
            goto LABEL_215;
          }
          v122 |= 0x200u;
          uint64_t v66 = v7 + 1;
          uint64_t v67 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_121;
          }
          int v68 = *v66;
          uint64_t v67 = v67 + (v68 << 7) - 128;
          if (v68 < 0)
          {
            uint64_t v108 = sub_188C138((uint64_t)v7, v67);
            *(void *)int64_t v124 = v108;
            *(unsigned char *)(a1 + 210) = v109 != 0;
            if (!v108) {
              goto LABEL_257;
            }
          }
          else
          {
            uint64_t v66 = v7 + 2;
LABEL_121:
            *(void *)int64_t v124 = v66;
            *(unsigned char *)(a1 + 210) = v67 != 0;
          }
          goto LABEL_223;
        case 0x13u:
          if (v8 != 152) {
            goto LABEL_215;
          }
          uint64_t v69 = v7 + 1;
          unint64_t v28 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_126;
          }
          int v70 = *v69;
          int v71 = v28 + (v70 << 7);
          unint64_t v28 = (v71 - 128);
          if (v70 < 0)
          {
            *(void *)int64_t v124 = sub_188C138((uint64_t)v7, (v71 - 128));
            if (!*(void *)v124) {
              goto LABEL_257;
            }
            unint64_t v28 = v110;
          }
          else
          {
            uint64_t v69 = v7 + 2;
LABEL_126:
            *(void *)int64_t v124 = v69;
          }
          if (sub_119BBA8(v28))
          {
            *(_DWORD *)(a1 + 16) |= 0x800u;
            *(_DWORD *)(a1 + 212) = v28;
            goto LABEL_223;
          }
          if (*v120) {
            int64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int64_t v118 = (std::string *)sub_188DBD8(v120);
          }
          int v119 = 19;
          goto LABEL_246;
        case 0x14u:
          if (v8 != 161) {
            goto LABEL_215;
          }
          v122 |= 0x1000u;
          *(void *)(a1 + 216) = *(void *)v7;
          *(void *)int64_t v124 = v7 + 8;
          goto LABEL_223;
        case 0x15u:
          if (v8 != 168) {
            goto LABEL_215;
          }
          uint64_t v72 = v7 + 1;
          unint64_t v28 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_135;
          }
          int v73 = *v72;
          int v74 = v28 + (v73 << 7);
          unint64_t v28 = (v74 - 128);
          if (v73 < 0)
          {
            *(void *)int64_t v124 = sub_188C138((uint64_t)v7, (v74 - 128));
            if (!*(void *)v124) {
              goto LABEL_257;
            }
            unint64_t v28 = v111;
          }
          else
          {
            uint64_t v72 = v7 + 2;
LABEL_135:
            *(void *)int64_t v124 = v72;
          }
          if (sub_14B9400(v28))
          {
            *(_DWORD *)(a1 + 16) |= 0x4000u;
            *(_DWORD *)(a1 + 228) = v28;
            goto LABEL_223;
          }
          if (*v120) {
            int64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int64_t v118 = (std::string *)sub_188DBD8(v120);
          }
          int v119 = 21;
          goto LABEL_246;
        case 0x16u:
          if (v8 != 176) {
            goto LABEL_215;
          }
          v122 |= 0x400u;
          int v75 = v7 + 1;
          uint64_t v76 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_142;
          }
          int v77 = *v75;
          uint64_t v76 = v76 + (v77 << 7) - 128;
          if (v77 < 0)
          {
            uint64_t v112 = sub_188C138((uint64_t)v7, v76);
            *(void *)int64_t v124 = v112;
            *(unsigned char *)(a1 + 211) = v113 != 0;
            if (!v112) {
              goto LABEL_257;
            }
          }
          else
          {
            int v75 = v7 + 2;
LABEL_142:
            *(void *)int64_t v124 = v75;
            *(unsigned char *)(a1 + 211) = v76 != 0;
          }
          goto LABEL_223;
        case 0x17u:
          if (v8 != 186) {
            goto LABEL_215;
          }
          BOOL v78 = v7 - 2;
          while (1)
          {
            uint64_t v79 = (char *)(v78 + 2);
            *(void *)int64_t v124 = v78 + 2;
            uint64_t v80 = *(_DWORD **)(a1 + 120);
            if (v80 && (uint64_t v81 = *(int *)(a1 + 112), (int)v81 < *v80))
            {
              *(_DWORD *)(a1 + 112) = v81 + 1;
              uint64_t v82 = *(std::string **)&v80[2 * v81 + 2];
            }
            else
            {
              if (!*v123) {
                operator new();
              }
              void *v84 = v83;
              v84[1] = sub_3A6EDC;
              void *v83 = 0;
              v83[1] = 0;
              v83[2] = 0;
              uint64_t v82 = (std::string *)sub_188CDC8((uint64_t)v123, (uint64_t)v83);
              uint64_t v79 = *(char **)v124;
            }
            BOOL v78 = sub_188C244(v82, v79, (uint64_t)a3);
            *(void *)int64_t v124 = v78;
            if (!v78) {
              goto LABEL_257;
            }
            if (*(void *)a3 <= (unint64_t)v78 || *(_WORD *)v78 != 442) {
              goto LABEL_223;
            }
          }
        case 0x18u:
          if (v8 != 192) {
            goto LABEL_215;
          }
          uint64_t v85 = v7 + 1;
          unint64_t v28 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_159;
          }
          int v86 = *v85;
          int v87 = v28 + (v86 << 7);
          unint64_t v28 = (v87 - 128);
          if (v86 < 0)
          {
            *(void *)int64_t v124 = sub_188C138((uint64_t)v7, (v87 - 128));
            if (!*(void *)v124) {
              goto LABEL_257;
            }
            unint64_t v28 = v114;
          }
          else
          {
            uint64_t v85 = v7 + 2;
LABEL_159:
            *(void *)int64_t v124 = v85;
          }
          if (sub_138DE04(v28))
          {
            *(_DWORD *)(a1 + 16) |= 0x2000u;
            *(_DWORD *)(a1 + 224) = v28;
          }
          else
          {
            if (*v120) {
              int64_t v118 = (std::string *)((*v120 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int64_t v118 = (std::string *)sub_188DBD8(v120);
            }
            int v119 = 24;
LABEL_246:
            sub_188C020(v119, v28, v118);
          }
          goto LABEL_223;
        case 0x19u:
          if (v8 != 202) {
            goto LABEL_215;
          }
          char v88 = v7 - 2;
          while (1)
          {
            uint64_t v89 = (unsigned __int8 *)(v88 + 2);
            *(void *)int64_t v124 = v88 + 2;
            uint64_t v90 = *(_DWORD **)(a1 + 144);
            if (v90 && (uint64_t v91 = *(int *)(a1 + 136), (int)v91 < *v90))
            {
              *(_DWORD *)(a1 + 136) = v91 + 1;
              uint64_t v92 = *(void *)&v90[2 * v91 + 2];
            }
            else
            {
              uint64_t v93 = sub_15126A4(*v121);
              uint64_t v92 = sub_188CDC8((uint64_t)v121, v93);
              uint64_t v89 = *(unsigned __int8 **)v124;
            }
            char v88 = (char *)sub_15112FC(a3, v92, v89);
            *(void *)int64_t v124 = v88;
            if (!v88) {
              goto LABEL_257;
            }
            if (*(void *)a3 <= (unint64_t)v88 || *(_WORD *)v88 != 458) {
              goto LABEL_223;
            }
          }
        case 0x1Au:
          if (v8 == 208)
          {
            unint64_t v94 = (unint64_t)(v7 - 2);
            while (1)
            {
              *(void *)int64_t v124 = v94 + 2;
              int v95 = *(unsigned __int8 *)(v94 + 2);
              if (*(char *)(v94 + 2) < 0)
              {
                int v96 = v95 + (*(unsigned __int8 *)(v94 + 3) << 7);
                int v95 = v96 - 128;
                if (*(char *)(v94 + 3) < 0)
                {
                  unint64_t v94 = sub_188C0D0(v94 + 2, v96 - 128);
                  int v95 = v97;
                }
                else
                {
                  v94 += 4;
                }
              }
              else
              {
                v94 += 3;
              }
              *(void *)int64_t v124 = v94;
              uint64_t v98 = *(unsigned int *)(a1 + 152);
              if (v98 == *(_DWORD *)(a1 + 156))
              {
                int v99 = v98 + 1;
                sub_188C80C((unsigned int *)(a1 + 152), v98 + 1);
                *(_DWORD *)(*(void *)(a1 + 160) + 4 * v98) = v95;
                unint64_t v94 = *(void *)v124;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 160) + 4 * v98) = v95;
                int v99 = v98 + 1;
              }
              *(_DWORD *)(a1 + 152) = v99;
              if (!v94) {
                goto LABEL_257;
              }
              if (*(void *)a3 <= v94 || *(_WORD *)v94 != 464) {
                goto LABEL_223;
              }
            }
          }
          if (v8 != 210) {
            goto LABEL_215;
          }
          uint64_t v115 = (unsigned int *)(a1 + 152);
          goto LABEL_214;
        default:
          goto LABEL_215;
      }
    }
  }
  int v122 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v122;
  return *(void *)v124;
}

char *sub_151126C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150FBEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_15112FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_150F264(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_151138C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 40);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v13 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v17 = *(int *)(a1 + 192);
    *__dst = 24;
    __dst[1] = v17;
    if (v17 > 0x7F)
    {
      __dst[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      __dst[2] = v17 >> 7;
      __dst += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *__dst++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v20 = *(int *)(a1 + 196);
    *__dst = 32;
    __dst[1] = v20;
    if (v20 > 0x7F)
    {
      __dst[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      __dst[2] = v20 >> 7;
      __dst += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *__dst++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v16) {
    __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v16 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v23 = *(unsigned char *)(a1 + 208);
    *__dst = 80;
    __dst[1] = v23;
    __dst += 2;
  }
  int v24 = *(_DWORD *)(a1 + 64);
  if (v24)
  {
    for (int k = 0; k != v24; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 72) + 8 * k + 8);
      *__dst = 90;
      unsigned int v27 = *(_DWORD *)(v26 + 40);
      __dst[1] = v27;
      if (v27 > 0x7F) {
        unint64_t v28 = sub_188A9CC(v27, __dst + 1);
      }
      else {
        unint64_t v28 = __dst + 2;
      }
      __dst = sub_150FD8C(v26, v28, a3);
    }
  }
  uint64_t v29 = *(unsigned int *)(a1 + 88);
  if ((int)v29 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 8 * v29;
    do
    {
      int v32 = *(void **)(*(void *)(a1 + 96) + v30 + 8);
      if (*((char *)v32 + 23) < 0)
      {
        int64_t v33 = v32[1];
        if (v33 > 127) {
          goto LABEL_58;
        }
      }
      else
      {
        int64_t v33 = *((unsigned __int8 *)v32 + 23);
      }
      if (*a3 - (void)__dst + 14 >= v33)
      {
        *__dst = 98;
        __dst[1] = v33;
        if (*((char *)v32 + 23) < 0) {
          int v32 = (void *)*v32;
        }
        uint64_t v34 = __dst + 2;
        memcpy(v34, v32, v33);
        __dst = &v34[v33];
        goto LABEL_56;
      }
LABEL_58:
      __dst = (char *)sub_188A868(a3, 12, (uint64_t)v32, __dst);
LABEL_56:
      v30 += 8;
    }
    while (v31 != v30);
  }
  if ((v16 & 2) != 0) {
    __dst = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v16 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v35 = *(int *)(a1 + 200);
    *__dst = 112;
    __dst[1] = v35;
    if (v35 > 0x7F)
    {
      __dst[1] = v35 | 0x80;
      unint64_t v36 = v35 >> 7;
      __dst[2] = v35 >> 7;
      __dst += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v37 = v36 >> 14;
          v36 >>= 7;
          *__dst++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v16 & 4) != 0) {
    __dst = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v16 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v38 = *(int *)(a1 + 204);
    *(_WORD *)__dst = 384;
    __dst[2] = v38;
    if (v38 > 0x7F)
    {
      __dst[2] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      __dst[3] = v38 >> 7;
      __dst += 4;
      if (v38 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v40 = v39 >> 14;
          v39 >>= 7;
          *__dst++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v16 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v41 = *(unsigned char *)(a1 + 209);
    *(_WORD *)__dst = 392;
    __dst[2] = v41;
    __dst += 3;
    if ((v16 & 0x200) == 0)
    {
LABEL_79:
      if ((v16 & 0x800) == 0) {
        goto LABEL_93;
      }
      goto LABEL_87;
    }
  }
  else if ((v16 & 0x200) == 0)
  {
    goto LABEL_79;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v42 = *(unsigned char *)(a1 + 210);
  *(_WORD *)__dst = 400;
  __dst[2] = v42;
  __dst += 3;
  if ((v16 & 0x800) != 0)
  {
LABEL_87:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v43 = *(int *)(a1 + 212);
    *(_WORD *)__dst = 408;
    __dst[2] = v43;
    if (v43 > 0x7F)
    {
      __dst[2] = v43 | 0x80;
      unint64_t v44 = v43 >> 7;
      __dst[3] = v43 >> 7;
      __dst += 4;
      if (v43 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v45 = v44 >> 14;
          v44 >>= 7;
          *__dst++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_93:
  if ((v16 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v46 = *(void *)(a1 + 216);
    *(_WORD *)__dst = 417;
    *(void *)(__dst + 2) = v46;
    __dst += 10;
  }
  if ((v16 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v47 = *(int *)(a1 + 228);
    *(_WORD *)__dst = 424;
    __dst[2] = v47;
    if (v47 > 0x7F)
    {
      __dst[2] = v47 | 0x80;
      unint64_t v48 = v47 >> 7;
      __dst[3] = v47 >> 7;
      __dst += 4;
      if (v47 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v49 = v48 >> 14;
          v48 >>= 7;
          *__dst++ = v48;
        }
        while (v49);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v16 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v50 = *(unsigned char *)(a1 + 211);
    *(_WORD *)__dst = 432;
    __dst[2] = v50;
    __dst += 3;
  }
  uint64_t v51 = *(unsigned int *)(a1 + 112);
  if ((int)v51 >= 1)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 8 * v51;
    do
    {
      uint64_t v54 = *(void **)(*(void *)(a1 + 120) + v52 + 8);
      if (*((char *)v54 + 23) < 0)
      {
        int64_t v55 = v54[1];
        if (v55 > 127) {
          goto LABEL_119;
        }
      }
      else
      {
        int64_t v55 = *((unsigned __int8 *)v54 + 23);
      }
      if (*a3 - (void)__dst + 13 >= v55)
      {
        *(_WORD *)__dst = 442;
        __dst[2] = v55;
        if (*((char *)v54 + 23) < 0) {
          uint64_t v54 = (void *)*v54;
        }
        int v56 = __dst + 3;
        memcpy(v56, v54, v55);
        __dst = &v56[v55];
        goto LABEL_117;
      }
LABEL_119:
      __dst = (char *)sub_188A868(a3, 23, (uint64_t)v54, __dst);
LABEL_117:
      v52 += 8;
    }
    while (v53 != v52);
  }
  if ((v16 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v57 = *(int *)(a1 + 224);
    *(_WORD *)__dst = 448;
    __dst[2] = v57;
    if (v57 > 0x7F)
    {
      __dst[2] = v57 | 0x80;
      unint64_t v58 = v57 >> 7;
      __dst[3] = v57 >> 7;
      __dst += 4;
      if (v57 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v59 = v58 >> 14;
          v58 >>= 7;
          *__dst++ = v58;
        }
        while (v59);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  int v60 = *(_DWORD *)(a1 + 136);
  if (v60)
  {
    for (int m = 0; m != v60; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v62 = *(void *)(*(void *)(a1 + 144) + 8 * m + 8);
      *(_WORD *)__dst = 458;
      unsigned int v63 = *(_DWORD *)(v62 + 20);
      __dst[2] = v63;
      if (v63 > 0x7F) {
        uint64_t v64 = sub_188A9CC(v63, __dst + 2);
      }
      else {
        uint64_t v64 = __dst + 3;
      }
      __dst = sub_150F5E4(v62, v64, a3);
    }
  }
  uint64_t v65 = *(unsigned int *)(a1 + 152);
  if ((int)v65 >= 1)
  {
    for (uint64_t n = 0; n != v65; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v67 = *(_DWORD *)(*(void *)(a1 + 160) + 4 * n);
      *(_WORD *)__dst = 464;
      __dst[2] = v67;
      if (v67 > 0x7F)
      {
        __dst[2] = v67 | 0x80;
        unsigned int v68 = v67 >> 7;
        __dst[3] = v67 >> 7;
        __dst += 4;
        if (v67 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v69 = v68 >> 14;
            v68 >>= 7;
            *__dst++ = v68;
          }
          while (v69);
        }
      }
      else
      {
        __dst += 3;
      }
    }
  }
  uint64_t v70 = *(void *)(a1 + 8);
  if ((v70 & 1) == 0) {
    return __dst;
  }
  unint64_t v72 = v70 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v72 + 31) < 0)
  {
    int v73 = *(void **)(v72 + 8);
    uint64_t v74 = *(void *)(v72 + 16);
  }
  else
  {
    int v73 = (void *)(v72 + 8);
    LODWORD(v74) = *(unsigned __int8 *)(v72 + 31);
  }
  if (*a3 - (void)__dst >= (int)v74)
  {
    uint64_t v75 = (int)v74;
    memcpy(__dst, v73, (int)v74);
    __dst += v75;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v73, v74, __dst);
}

uint64_t sub_1511D64(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = sub_188D4F0((unsigned int *)(a1 + 40));
  uint64_t v8 = *(int *)(a1 + 64);
  uint64_t v9 = v3 + v7 + v2 + *(unsigned int *)(a1 + 40) + v8;
  uint64_t v10 = *(void *)(a1 + 72);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_150FED0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 88);
  uint64_t v16 = v9 + v15;
  if ((int)v15 >= 1)
  {
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  uint64_t v21 = *(unsigned int *)(a1 + 112);
  uint64_t v22 = v16 + 2 * v21;
  if ((int)v21 >= 1)
  {
    char v23 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v24 = *v23++;
      uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
      uint64_t v26 = *(void *)(v24 + 8);
      if ((v25 & 0x80u) == 0) {
        uint64_t v26 = v25;
      }
      v22 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      --v21;
    }
    while (v21);
  }
  uint64_t v27 = *(int *)(a1 + 136);
  uint64_t v28 = v22 + 2 * v27;
  uint64_t v29 = *(void *)(a1 + 144);
  if (v29) {
    uint64_t v30 = (uint64_t *)(v29 + 8);
  }
  else {
    uint64_t v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = sub_150F800(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 152)) + v28 + 2 * *(unsigned int *)(a1 + 152);
  int v35 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v35)
  {
    if (v35)
    {
      unint64_t v50 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v51 = *(unsigned __int8 *)(v50 + 23);
      uint64_t v52 = *(void *)(v50 + 8);
      if ((v51 & 0x80u) == 0) {
        uint64_t v52 = v51;
      }
      result += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v35 & 2) == 0)
      {
LABEL_34:
        if ((v35 & 4) == 0) {
          goto LABEL_35;
        }
        goto LABEL_78;
      }
    }
    else if ((v35 & 2) == 0)
    {
      goto LABEL_34;
    }
    unint64_t v53 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
    uint64_t v55 = *(void *)(v53 + 8);
    if ((v54 & 0x80u) == 0) {
      uint64_t v55 = v54;
    }
    result += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v35 & 4) == 0)
    {
LABEL_35:
      if ((v35 & 8) == 0) {
        goto LABEL_36;
      }
      goto LABEL_81;
    }
LABEL_78:
    unint64_t v56 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v57 = *(unsigned __int8 *)(v56 + 23);
    uint64_t v58 = *(void *)(v56 + 8);
    if ((v57 & 0x80u) == 0) {
      uint64_t v58 = v57;
    }
    result += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v35 & 8) == 0)
    {
LABEL_36:
      if ((v35 & 0x10) == 0) {
        goto LABEL_37;
      }
      goto LABEL_85;
    }
LABEL_81:
    int v59 = *(_DWORD *)(a1 + 192);
    uint64_t v60 = (9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6;
    if (v59 >= 0) {
      uint64_t v61 = v60;
    }
    else {
      uint64_t v61 = 10;
    }
    result += v61 + 1;
    if ((v35 & 0x10) == 0)
    {
LABEL_37:
      if ((v35 & 0x20) == 0) {
        goto LABEL_38;
      }
      goto LABEL_89;
    }
LABEL_85:
    int v62 = *(_DWORD *)(a1 + 196);
    uint64_t v63 = ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v62 >= 0) {
      uint64_t v64 = v63;
    }
    else {
      uint64_t v64 = 11;
    }
    result += v64;
    if ((v35 & 0x20) == 0)
    {
LABEL_38:
      if ((v35 & 0x40) == 0) {
        goto LABEL_43;
      }
      goto LABEL_39;
    }
LABEL_89:
    int v65 = *(_DWORD *)(a1 + 200);
    uint64_t v66 = ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v65 >= 0) {
      uint64_t v67 = v66;
    }
    else {
      uint64_t v67 = 11;
    }
    result += v67;
    if ((v35 & 0x40) == 0)
    {
LABEL_43:
      if ((v35 & 0x80) != 0) {
        result += 2;
      }
      goto LABEL_45;
    }
LABEL_39:
    int v36 = *(_DWORD *)(a1 + 204);
    uint64_t v37 = ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v36 >= 0) {
      uint64_t v38 = v37;
    }
    else {
      uint64_t v38 = 12;
    }
    result += v38;
    goto LABEL_43;
  }
LABEL_45:
  if ((v35 & 0x7F00) != 0)
  {
    uint64_t v39 = result + 3;
    if ((v35 & 0x100) == 0) {
      uint64_t v39 = result;
    }
    if ((v35 & 0x200) != 0) {
      v39 += 3;
    }
    if ((v35 & 0x400) != 0) {
      v39 += 3;
    }
    if ((v35 & 0x800) != 0)
    {
      int v40 = *(_DWORD *)(a1 + 212);
      uint64_t v41 = ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v40 >= 0) {
        uint64_t v42 = v41;
      }
      else {
        uint64_t v42 = 12;
      }
      v39 += v42;
    }
    if ((v35 & 0x1000) != 0) {
      uint64_t result = v39 + 10;
    }
    else {
      uint64_t result = v39;
    }
    if ((v35 & 0x2000) != 0)
    {
      int v43 = *(_DWORD *)(a1 + 224);
      uint64_t v44 = ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v43 >= 0) {
        uint64_t v45 = v44;
      }
      else {
        uint64_t v45 = 12;
      }
      result += v45;
    }
    if ((v35 & 0x4000) != 0)
    {
      int v46 = *(_DWORD *)(a1 + 228);
      uint64_t v47 = ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v46 >= 0) {
        uint64_t v48 = v47;
      }
      else {
        uint64_t v48 = 12;
      }
      result += v48;
    }
  }
  uint64_t v49 = *(void *)(a1 + 8);
  if (v49)
  {
    unint64_t v68 = v49 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v68 + 31) < 0) {
      uint64_t v69 = *(void *)(v68 + 16);
    }
    else {
      uint64_t v69 = *(unsigned __int8 *)(v68 + 31);
    }
    result += v69;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1512230(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a2 + 72) + 8);
    uint64_t v13 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 64));
    uint64_t result = (std::string *)sub_1515F2C((uint64_t *)&v3[2].__r_.__value_.__l.__size_, v13, v12, v11, *(_DWORD *)v3[3].__r_.__value_.__l.__data_ - LODWORD(v3[2].__r_.__value_.__r.__words[2]));
    int v14 = LODWORD(v3[2].__r_.__value_.__r.__words[2]) + v11;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = v14;
    uint64_t v15 = (int *)v3[3].__r_.__value_.__l.__data_;
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  int v16 = *(_DWORD *)(a2 + 88);
  if (v16)
  {
    unint64_t v17 = (const std::string **)(*(void *)(a2 + 96) + 8);
    uint64_t v18 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 88));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[3].__r_.__value_.__l.__size_, v18, v17, v16, *(_DWORD *)v3[4].__r_.__value_.__l.__data_ - LODWORD(v3[3].__r_.__value_.__r.__words[2]));
    int v19 = LODWORD(v3[3].__r_.__value_.__r.__words[2]) + v16;
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = v19;
    uint64_t v20 = (int *)v3[4].__r_.__value_.__l.__data_;
    if (*v20 < v19) {
      int *v20 = v19;
    }
  }
  int v21 = *(_DWORD *)(a2 + 112);
  if (v21)
  {
    uint64_t v22 = (const std::string **)(*(void *)(a2 + 120) + 8);
    char v23 = (std::string **)sub_188CCE4((uint64_t)&v3[4].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 112));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[4].__r_.__value_.__l.__size_, v23, v22, v21, *(_DWORD *)v3[5].__r_.__value_.__l.__data_ - LODWORD(v3[4].__r_.__value_.__r.__words[2]));
    int v24 = LODWORD(v3[4].__r_.__value_.__r.__words[2]) + v21;
    LODWORD(v3[4].__r_.__value_.__r.__words[2]) = v24;
    uint64_t v25 = (int *)v3[5].__r_.__value_.__l.__data_;
    if (*v25 < v24) {
      int *v25 = v24;
    }
  }
  int v26 = *(_DWORD *)(a2 + 136);
  if (v26)
  {
    uint64_t v27 = (uint64_t *)(*(void *)(a2 + 144) + 8);
    uint64_t v28 = (std::string **)sub_188CCE4((uint64_t)&v3[5].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 136));
    uint64_t result = (std::string *)sub_1515FB8((uint64_t *)&v3[5].__r_.__value_.__l.__size_, v28, v27, v26, *(_DWORD *)v3[6].__r_.__value_.__l.__data_ - LODWORD(v3[5].__r_.__value_.__r.__words[2]));
    int v29 = LODWORD(v3[5].__r_.__value_.__r.__words[2]) + v26;
    LODWORD(v3[5].__r_.__value_.__r.__words[2]) = v29;
    uint64_t v30 = (int *)v3[6].__r_.__value_.__l.__data_;
    if (*v30 < v29) {
      *uint64_t v30 = v29;
    }
  }
  int v31 = *(_DWORD *)(a2 + 152);
  if (v31)
  {
    uint64_t v32 = SLODWORD(v3[6].__r_.__value_.__r.__words[1]);
    sub_188C80C((unsigned int *)&v3[6].__r_.__value_.__r.__words[1], v32 + v31);
    std::string::size_type v33 = v3[6].__r_.__value_.__r.__words[2];
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 152);
    uint64_t result = (std::string *)memcpy((void *)(v33 + 4 * v32), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 152));
  }
  int v34 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v34)
  {
    if (v34)
    {
      int v36 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v37 = v3->__r_.__value_.__l.__size_;
      uint64_t v38 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (uint64_t *)*v38;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[7], v36, v38);
      if ((v34 & 2) == 0)
      {
LABEL_22:
        if ((v34 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_50;
      }
    }
    else if ((v34 & 2) == 0)
    {
      goto LABEL_22;
    }
    uint64_t v39 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v40 = v3->__r_.__value_.__l.__size_;
    uint64_t v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
    if (v40) {
      uint64_t v41 = (uint64_t *)*v41;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__l.__size_, v39, v41);
    if ((v34 & 4) == 0)
    {
LABEL_23:
      if ((v34 & 8) == 0) {
        goto LABEL_24;
      }
      goto LABEL_53;
    }
LABEL_50:
    uint64_t v42 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v43 = v3->__r_.__value_.__l.__size_;
    uint64_t v44 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
    if (v43) {
      uint64_t v44 = (uint64_t *)*v44;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__r.__words[2], v42, v44);
    if ((v34 & 8) == 0)
    {
LABEL_24:
      if ((v34 & 0x10) == 0) {
        goto LABEL_25;
      }
      goto LABEL_54;
    }
LABEL_53:
    LODWORD(v3[8].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 192);
    if ((v34 & 0x10) == 0)
    {
LABEL_25:
      if ((v34 & 0x20) == 0) {
        goto LABEL_26;
      }
      goto LABEL_55;
    }
LABEL_54:
    HIDWORD(v3[8].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 196);
    if ((v34 & 0x20) == 0)
    {
LABEL_26:
      if ((v34 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_56;
    }
LABEL_55:
    LODWORD(v3[8].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 200);
    if ((v34 & 0x40) == 0)
    {
LABEL_27:
      if ((v34 & 0x80) == 0)
      {
LABEL_29:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v34;
        goto LABEL_30;
      }
LABEL_28:
      v3[8].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 208);
      goto LABEL_29;
    }
LABEL_56:
    HIDWORD(v3[8].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 204);
    if ((v34 & 0x80) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_30:
  if ((v34 & 0x7F00) == 0) {
    goto LABEL_40;
  }
  if ((v34 & 0x100) != 0)
  {
    v3[8].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 209);
    if ((v34 & 0x200) == 0)
    {
LABEL_33:
      if ((v34 & 0x400) == 0) {
        goto LABEL_34;
      }
      goto LABEL_60;
    }
  }
  else if ((v34 & 0x200) == 0)
  {
    goto LABEL_33;
  }
  v3[8].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 210);
  if ((v34 & 0x400) == 0)
  {
LABEL_34:
    if ((v34 & 0x800) == 0) {
      goto LABEL_35;
    }
    goto LABEL_61;
  }
LABEL_60:
  v3[8].__r_.__value_.__s.__data_[19] = *(unsigned char *)(a2 + 211);
  if ((v34 & 0x800) == 0)
  {
LABEL_35:
    if ((v34 & 0x1000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_62;
  }
LABEL_61:
  HIDWORD(v3[8].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 212);
  if ((v34 & 0x1000) == 0)
  {
LABEL_36:
    if ((v34 & 0x2000) == 0) {
      goto LABEL_37;
    }
LABEL_63:
    LODWORD(v3[9].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 224);
    if ((v34 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
LABEL_62:
  v3[9].__r_.__value_.__r.__words[0] = *(void *)(a2 + 216);
  if ((v34 & 0x2000) != 0) {
    goto LABEL_63;
  }
LABEL_37:
  if ((v34 & 0x4000) != 0) {
LABEL_38:
  }
    HIDWORD(v3[9].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 228);
LABEL_39:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v34;
LABEL_40:
  uint64_t v35 = *(void *)(a2 + 8);
  if (v35)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v35 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_151268C()
{
  return 1;
}

void *sub_1512694@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QuSummary");
}

uint64_t sub_15126A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD848;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_151274C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD8C8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_15127EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1510068(v2, a1, 0);
}

void *sub_1512898(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1512914(void *a1)
{
  sub_1512898(a1);

  operator delete();
}

uint64_t sub_151294C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_15129A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  uint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 24);
  while (1)
  {
    int v8 = (char *)(*(void *)v28 + 1);
    unsigned int v9 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v8;
    if (v9 >> 3 == 2)
    {
      if (v9 != 16) {
        goto LABEL_13;
      }
      uint64_t v15 = v8 + 1;
      unint64_t v16 = *v8;
      if (*v8 < 0)
      {
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v28 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v28) {
            goto LABEL_49;
          }
          unint64_t v16 = v26;
          goto LABEL_26;
        }
        uint64_t v15 = v8 + 2;
      }
      *(void *)uint64_t v28 = v15;
LABEL_26:
      if (v16 > 4)
      {
        if (*v6) {
          uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v16, v27);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v16;
      }
      goto LABEL_38;
    }
    if (v9 >> 3 == 1 && v9 == 10)
    {
      int v19 = v8 - 1;
      while (1)
      {
        uint64_t v20 = (char *)(v19 + 1);
        *(void *)uint64_t v28 = v19 + 1;
        int v21 = *(_DWORD **)(a1 + 40);
        if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
        {
          *(_DWORD *)(a1 + 32) = v22 + 1;
          char v23 = *(std::string **)&v21[2 * v22 + 2];
        }
        else
        {
          if (!*v7) {
            operator new();
          }
          void *v25 = v24;
          v25[1] = sub_3A6EDC;
          *int v24 = 0;
          v24[1] = 0;
          int v24[2] = 0;
          char v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
          uint64_t v20 = *(char **)v28;
        }
        int v19 = sub_188C244(v23, v20, (uint64_t)a3);
        *(void *)uint64_t v28 = v19;
        if (!v19) {
          goto LABEL_49;
        }
        if (*(void *)a3 <= (unint64_t)v19 || *v19 != 10) {
          goto LABEL_38;
        }
      }
    }
LABEL_13:
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v28;
    }
    *(void *)uint64_t v28 = sub_1885AC0(v9, v14, v8, a3);
    if (!*(void *)v28) {
      goto LABEL_49;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      return *(void *)v28;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v28;
  }
LABEL_49:
  *(void *)uint64_t v28 = 0;
  return *(void *)v28;
}

char *sub_1512C48(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return __dst;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(__dst, v18, (int)v19);
    __dst += v20;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, __dst);
}

uint64_t sub_1512E30(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v7 = *(_DWORD *)(a1 + 48);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1512F00()
{
  return 1;
}

void *sub_1512F08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_spell.proto.LocalQueryInflection");
}

uint64_t sub_1512F18(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253C6D8)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_12CEDA0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1516044((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1512FDC(uint64_t a1)
{
  sub_1512F18(a1);

  operator delete();
}

uint64_t sub_1513014(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_151294C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5) {
    uint64_t result = sub_12CEDDC(*(void *)(v1 + 48));
  }
  if ((v5 & 6) != 0)
  {
    *(unsigned char *)(v1 + 60) = 0;
    *(_DWORD *)(v1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_15130B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    int v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void **)(a1 + 48);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_12D0AC0((uint64_t)v13);
          *(void *)(a1 + 48) = v12;
          uint64_t v8 = v34;
        }
        unint64_t v14 = (char *)sub_12D053C(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_44;
      case 2u:
        if (v9 != 16) {
          goto LABEL_37;
        }
        uint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          int v34 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v34) {
            goto LABEL_58;
          }
          unint64_t v16 = v30;
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          int v34 = v15;
        }
        if (v16 > 9)
        {
          if (*v7) {
            std::string::size_type v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            std::string::size_type v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 56) = v16;
        }
        goto LABEL_45;
      case 3u:
        if (v9 != 24) {
          goto LABEL_37;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          int v31 = (char *)sub_188C138((uint64_t)v8, v20);
          int v34 = v31;
          *(unsigned char *)(a1 + 60) = v32 != 0;
          if (!v31) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_26:
          int v34 = v19;
          *(unsigned char *)(a1 + 60) = v20 != 0;
        }
        goto LABEL_45;
      case 4u:
        if (v9 != 34) {
          goto LABEL_37;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          char v23 = (unsigned __int8 *)(v22 + 1);
          int v34 = v22 + 1;
          int v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_15139B8(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, v27);
            char v23 = (unsigned __int8 *)v34;
          }
          uint64_t v22 = (char *)sub_1513408(a3, v26, v23);
          int v34 = v22;
          if (!v22) {
            goto LABEL_58;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_45;
          }
        }
      default:
LABEL_37:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            int v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v34;
          }
          unint64_t v14 = (char *)sub_1885AC0(v9, v29, v8, a3);
LABEL_44:
          int v34 = v14;
          if (!v14) {
            goto LABEL_58;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          int v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

uint64_t sub_1513408(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15129A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1513498(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_12CF6E0(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 60);
    char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        int v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        int v18 = v4 + 2;
      }
      uint64_t v4 = sub_1512C48(v16, v18, a3);
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_15136F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1512E30(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_12CFBB4(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
    if ((v8 & 4) != 0) {
      v2 += 2;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1513824(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_15160C4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        char v13 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          char v13 = (void *)*v13;
        }
        std::string::pointer data = (std::string *)sub_12D0AC0((uint64_t)v13);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v14 = *(uint64_t (****)(uint64_t))(a2 + 48);
      }
      else {
        unint64_t v14 = &off_25314B8;
      }
      uint64_t result = sub_12CFEA8(data, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_151397C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_12D0168(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_15139A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_spell.proto.LocalQueryTerm");
}

uint64_t sub_15139B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24BD9C8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_1513A54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = &off_24BDA48;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  *(void *)((char *)result + 53) = 0;
  return result;
}

void sub_1513AF8()
{
}

uint64_t sub_1513B4C(uint64_t a1, uint64_t a2)
{
  return sub_15139B8(a2);
}

uint64_t sub_1513B54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513B5C()
{
}

void *sub_1513BB0(uint64_t a1, uint64_t a2)
{
  return sub_1513A54(a2);
}

uint64_t sub_1513BB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513BC0()
{
}

void *sub_1513C1C(uint64_t a1, uint64_t a2)
{
  return sub_14FB678(a2);
}

uint64_t sub_1513C24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513C2C()
{
}

uint64_t sub_1513C94(uint64_t a1, uint64_t a2)
{
  return sub_14FB700(a2);
}

uint64_t sub_1513C9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513CA4()
{
}

double sub_1513CE8(uint64_t a1, uint64_t a2)
{
  return sub_14FB7B8(a2);
}

uint64_t sub_1513CF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

void sub_1513CF8()
{
}

void *sub_1513D54(uint64_t a1, uint64_t a2)
{
  return sub_14FB818(a2);
}

uint64_t sub_1513D5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513D64()
{
}

double sub_1513DF0(uint64_t a1, uint64_t a2)
{
  return sub_14FB8A0(a2);
}

uint64_t sub_1513DF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513E00()
{
}

void *sub_1513E58(uint64_t a1, uint64_t a2)
{
  return sub_14FB990(a2);
}

uint64_t sub_1513E60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513E68()
{
}

uint64_t sub_1513EC0(uint64_t a1, uint64_t a2)
{
  return sub_14FBA14(a2);
}

uint64_t sub_1513EC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1513ED0()
{
}

uint64_t sub_1513F30(uint64_t a1, uint64_t a2)
{
  return sub_14FBAB8(a2);
}

uint64_t sub_1513F38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513F40()
{
}

void *sub_1513F9C(uint64_t a1, uint64_t a2)
{
  return sub_14FBB44(a2);
}

uint64_t sub_1513FA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1513FAC()
{
}

void *sub_1514004(uint64_t a1, uint64_t a2)
{
  return sub_14FBBE8(a2);
}

uint64_t sub_151400C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514014()
{
}

uint64_t sub_1514068(uint64_t a1, uint64_t a2)
{
  return sub_14FBC6C(a2);
}

uint64_t sub_1514070(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514078()
{
}

void sub_15140C0()
{
}

uint64_t sub_15140E4(uint64_t a1, uint64_t a2)
{
  return sub_14FBD08(a2);
}

uint64_t sub_15140EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_15140F4()
{
}

uint64_t sub_1514144(uint64_t a1, uint64_t a2)
{
  return sub_14FBD64(a2);
}

uint64_t sub_151414C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514154()
{
}

double sub_15141BC(uint64_t a1, uint64_t a2)
{
  return sub_14FBDE0(a2);
}

uint64_t sub_15141C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15141CC()
{
}

double sub_1514230(uint64_t a1, uint64_t a2)
{
  return sub_14FBE74(a2);
}

uint64_t sub_1514238(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514240()
{
}

void sub_1514288()
{
}

void *sub_15142AC(uint64_t a1, uint64_t a2)
{
  return sub_14FCDD4(a2);
}

uint64_t sub_15142B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_15142BC()
{
}

void sub_1514304()
{
}

uint64_t sub_1514328(uint64_t a1, uint64_t a2)
{
  return sub_150E620(a2);
}

uint64_t sub_1514330(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1514338()
{
}

void *sub_1514388(uint64_t a1, uint64_t a2)
{
  return sub_150E67C(a2);
}

uint64_t sub_1514390(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514398()
{
}

double sub_15143DC(uint64_t a1, uint64_t a2)
{
  return sub_150E6F8(a2);
}

uint64_t sub_15143E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15143EC()
{
}

void *sub_151443C(uint64_t a1, uint64_t a2)
{
  return sub_150E758(a2);
}

uint64_t sub_1514444(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_151444C()
{
}

uint64_t sub_15144A8(uint64_t a1, uint64_t a2)
{
  return sub_150E7D4(a2);
}

uint64_t sub_15144B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15144B8()
{
}

uint64_t sub_1514518(uint64_t a1, uint64_t a2)
{
  return sub_150E85C(a2);
}

uint64_t sub_1514520(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514528()
{
}

void *sub_151457C(uint64_t a1, uint64_t a2)
{
  return sub_150E904(a2);
}

uint64_t sub_1514584(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_151458C()
{
}

uint64_t sub_15145E0(uint64_t a1, uint64_t a2)
{
  return sub_150E9A0(a2);
}

uint64_t sub_15145E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_15145F0()
{
}

uint64_t sub_1514658(uint64_t a1, uint64_t a2)
{
  return sub_150EA40(a2);
}

uint64_t sub_1514660(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514668()
{
}

void *sub_15146C4(uint64_t a1, uint64_t a2)
{
  return sub_150EAF8(a2);
}

uint64_t sub_15146CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15146D4()
{
}

uint64_t sub_151472C(uint64_t a1, uint64_t a2)
{
  return sub_150EB80(a2);
}

uint64_t sub_1514734(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

void sub_151473C()
{
}

void *sub_151478C(uint64_t a1, uint64_t a2)
{
  return sub_150EC28(a2);
}

uint64_t sub_1514794(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_151479C()
{
}

void *sub_15147EC(uint64_t a1, uint64_t a2)
{
  return sub_150ECA4(a2);
}

uint64_t sub_15147F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15147FC()
{
}

double sub_1514874(uint64_t a1, uint64_t a2)
{
  return sub_150ED20(a2);
}

uint64_t sub_151487C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514884()
{
}

void *sub_15148D0(uint64_t a1, uint64_t a2)
{
  return sub_150EDE8(a2);
}

uint64_t sub_15148D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15148E0()
{
}

uint64_t sub_1514938(uint64_t a1, uint64_t a2)
{
  return sub_150EE60(a2);
}

uint64_t sub_1514940(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1514948()
{
}

uint64_t sub_15149A4(uint64_t a1, uint64_t a2)
{
  return sub_150EF04(a2);
}

uint64_t sub_15149AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15149B4()
{
}

uint64_t sub_1514A0C(uint64_t a1, uint64_t a2)
{
  return sub_150EFB0(a2);
}

uint64_t sub_1514A14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514A1C()
{
}

uint64_t sub_1514A7C(uint64_t a1, uint64_t a2)
{
  return sub_15126A4(a2);
}

uint64_t sub_1514A84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514A8C()
{
}

uint64_t sub_1514AE0(uint64_t a1, uint64_t a2)
{
  return sub_151274C(a2);
}

uint64_t sub_1514AE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1514AF0()
{
}

double sub_1514B6C(uint64_t a1, uint64_t a2)
{
  return sub_15127EC(a2);
}

uint64_t sub_1514B74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1514B7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14DFA48(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514BFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1512F18(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514C7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12D1E5C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514CFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14F2498(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514D7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14F3934(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514DFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14F40D8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514E7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14F3030(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514EFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1596FE0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514F7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14EF9D0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1514FFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14F4EFC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_151507C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14F45CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_15150FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A42D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_151517C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_14FB678(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      char v13 = *v7++;
      uint64_t result = sub_14926A8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15151F8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1513A54(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      char v13 = *v7++;
      uint64_t result = sub_1515274(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1515274(uint64_t a1, std::string *a2)
{
  return sub_1513824(a2, a1);
}

std::string *sub_1515284(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12D28C8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      char v13 = *v7++;
      uint64_t result = sub_122BC84(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1515300(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_14FB990(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      char v13 = *v7++;
      uint64_t result = sub_122BC84(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_151537C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_14FBB44(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      char v13 = *v7++;
      uint64_t result = sub_15153F8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_15153F8(uint64_t a1, std::string *a2)
{
  return sub_14F3FB8(a2, a1);
}

std::string *sub_1515408(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_14FBBE8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      char v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1515484(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_14FBAB8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      char v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1515500(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1515500(uint64_t a1, std::string *a2)
{
  return sub_14F37B4(a2, a1);
}

void sub_1515510(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_15A3904(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_151558C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_151558C(uint64_t a1, uint64_t a2)
{
}

void sub_151559C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_14FB8A0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1515618(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1515618(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1515628(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_14FBD08(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_15156A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_15156A4(uint64_t a1, uint64_t a2)
{
  return sub_14F84A8(a2, a1);
}

void sub_15156B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_14FBC6C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1515730(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1515730(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1515740(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_14A4848(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_15157BC()
{
}

void sub_1515804()
{
}

void sub_1515828()
{
}

void sub_1515870()
{
}

void sub_1515894(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1506774();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1515914(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15089C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1515994(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15099C0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1515A14(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_150DC1C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1515A94(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_150E85C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1515B10(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1515B10(uint64_t a1, std::string *a2)
{
  return sub_1507148(a2, a1);
}

std::string *sub_1515B20(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_150EAF8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12D3658(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1515B9C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_150EC28(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1515C18(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1515C18(uint64_t a1, std::string *a2)
{
  return sub_123BFCC(a2, a1);
}

uint64_t *sub_1515C28(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_150EFB0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1515CA4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_1515CA4(uint64_t a1, uint64_t a2)
{
  return sub_150D9B8(a2, a1);
}

void sub_1515CB4()
{
}

void sub_1515CFC()
{
}

void sub_1515D20(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14D3FE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1515DA0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_150FAB8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1515E20(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_150F0E8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1515EA0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_14D75B8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1515F1C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1515F1C(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1515F2C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_151274C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1515FA8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1515FA8(uint64_t a1, std::string *a2)
{
  return sub_150FF80(a2, a1);
}

uint64_t *sub_1515FB8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15126A4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1516034(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1516034(uint64_t a1, std::string *a2)
{
  return sub_150F964(a2, a1);
}

void sub_1516044(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1512898(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_15160C4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15139B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_122DF90(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1516140()
{
  dword_254F2F8 = 1201;
  qword_254F300 = (uint64_t)&off_2539740;
  sub_1882AC4((unint64_t)&off_25486C0, 1201, 11, 1, 0, (uint64_t)&off_2539740);
  dword_254F308 = 1202;
  qword_254F310 = (uint64_t)&off_253F108;
  sub_1882AC4((unint64_t)&off_25486C0, 1202, 11, 0, 0, (uint64_t)&off_253F108);
  dword_254F318 = 1001;
  byte_254F31C = 0;
  sub_1882224((unint64_t)&off_253BED0, 1001, 8, 0, 0);
  dword_254F320 = 1002;
  byte_254F324 = 0;
  sub_1882224((unint64_t)&off_253BED0, 1002, 8, 0, 0);
  dword_254F328 = 1003;
  byte_254F32C = 0;
  sub_1882224((unint64_t)&off_253BED0, 1003, 8, 0, 0);
  dword_254F330 = 1101;
  qword_254F338 = (uint64_t)&unk_2147738;
  sub_1882224((unint64_t)&off_253BED0, 1101, 9, 0, 0);
  dword_254F340 = 1201;
  qword_254F348 = 0;
  sub_1882224((unint64_t)&off_253BED0, 1201, 3, 0, 0);
  dword_254F350 = 1301;
  qword_254F358 = 0;
  sub_1882224((unint64_t)&off_253BED0, 1301, 1, 0, 0);
  dword_254F360 = 1302;
  qword_254F368 = 0;
  sub_1882224((unint64_t)&off_253BED0, 1302, 1, 0, 0);
  qword_254F370 = 1303;
  sub_1882224((unint64_t)&off_253BED0, 1303, 5, 0, 0);
  dword_254F378 = 1401;
  byte_254F37C = 0;
  sub_1882224((unint64_t)&off_253BED0, 1401, 8, 0, 0);
  dword_254F380 = 1402;
  byte_254F384 = 0;
  sub_1882224((unint64_t)&off_253BED0, 1402, 8, 0, 0);
  dword_254F388 = 1403;
  byte_254F38C = 0;
  sub_1882224((unint64_t)&off_253BED0, 1403, 8, 0, 0);
  dword_254F390 = 101;
  qword_254F398 = (uint64_t)&off_2538320;

  sub_1882AC4((unint64_t)&off_254A588, 101, 11, 0, 0, (uint64_t)&off_2538320);
}

uint64_t sub_15163FC()
{
  qword_2606E68 = (uint64_t)"DAY_USED_FOR_OPEN_AT_FILTERING_NADAY_USED_FOR_OPEN_AT_FILTERING_TODAYDAY_USED_FOR_OPEN_AT_FILTERING_TOMORROW";
  unk_2606E70 = 33;
  dword_2606E78 = 0;
  qword_2606E80 = (uint64_t)"DAY_USED_FOR_OPEN_AT_FILTERING_TODAYDAY_USED_FOR_OPEN_AT_FILTERING_TOMORROW";
  unk_2606E88 = 36;
  dword_2606E90 = 1;
  qword_2606E98 = (uint64_t)"DAY_USED_FOR_OPEN_AT_FILTERING_TOMORROW";
  unk_2606EA0 = 39;
  dword_2606EA8 = 2;
  qword_2606EB0 = (uint64_t)"CUT_OFF_FIVECUT_OFF_NONECUT_OFF_TOP_FLOOR";
  *(void *)algn_2606EB8 = 12;
  dword_2606EC0 = 2;
  qword_2606EC8 = (uint64_t)"CUT_OFF_NONECUT_OFF_TOP_FLOOR";
  unk_2606ED0 = 12;
  dword_2606ED8 = 1;
  qword_2606EE0 = (uint64_t)"CUT_OFF_TOP_FLOOR";
  unk_2606EE8 = 17;
  dword_2606EF0 = 0;
  qword_2606EF8 = (uint64_t)"GEO_INTERPRETATION_GEOGEO_INTERPRETATION_GLOBALGEO_INTERPRETATION_NONEGEO_INTERPRETATION_VIEWPORT";
  unk_2606F00 = 22;
  dword_2606F08 = 2;
  qword_2606F10 = (uint64_t)"GEO_INTERPRETATION_GLOBALGEO_INTERPRETATION_NONEGEO_INTERPRETATION_VIEWPORT";
  unk_2606F18 = 25;
  dword_2606F20 = 3;
  qword_2606F28 = (uint64_t)"GEO_INTERPRETATION_NONEGEO_INTERPRETATION_VIEWPORT";
  unk_2606F30 = 23;
  dword_2606F38 = 0;
  qword_2606F40 = (uint64_t)"GEO_INTERPRETATION_VIEWPORT";
  unk_2606F48 = 27;
  dword_2606F50 = 1;
  qword_2606F58 = (uint64_t)"GEO_EXTENSION_MINGEO_EXTENSION_NONEGEO_EXTENSION_SECOND";
  unk_2606F60 = 17;
  dword_2606F68 = 1;
  qword_2606F70 = (uint64_t)"GEO_EXTENSION_NONEGEO_EXTENSION_SECOND";
  unk_2606F78 = 18;
  dword_2606F80 = 0;
  qword_2606F88 = (uint64_t)"GEO_EXTENSION_SECOND";
  unk_2606F90 = 20;
  dword_2606F98 = 2;
  qword_2606FA0 = (uint64_t)"CATEGORY_INTERPRETATION_CLASSIFIERCATEGORY_INTERPRETATION_FILTERCATEGORY_INTERPRETATION_NONE";
  *(void *)algn_2606FA8 = 34;
  dword_2606FB0 = 2;
  qword_2606FB8 = (uint64_t)"CATEGORY_INTERPRETATION_FILTERCATEGORY_INTERPRETATION_NONE";
  unk_2606FC0 = 30;
  dword_2606FC8 = 1;
  qword_2606FD0 = (uint64_t)"CATEGORY_INTERPRETATION_NONE";
  unk_2606FD8 = 28;
  dword_2606FE0 = 0;
  qword_2606FE8 = (uint64_t)"PROPERTY_INTERPRETATION_CLASSIFIERPROPERTY_INTERPRETATION_FILTERPROPERTY_INTERPRETATION_NONE";
  unk_2606FF0 = 34;
  dword_2606FF8 = 2;
  qword_2607000 = (uint64_t)"PROPERTY_INTERPRETATION_FILTERPROPERTY_INTERPRETATION_NONE";
  unk_2607008 = 30;
  dword_2607010 = 1;
  qword_2607018 = (uint64_t)"PROPERTY_INTERPRETATION_NONE";
  unk_2607020 = 28;
  dword_2607028 = 0;
  qword_2607030 = (uint64_t)"ADDRESS_INTERPRETATION_ADDRESSADDRESS_INTERPRETATION_NONE";
  *(void *)algn_2607038 = 30;
  dword_2607040 = 1;
  qword_2607048 = (uint64_t)"ADDRESS_INTERPRETATION_NONE";
  unk_2607050 = 27;
  dword_2607058 = 0;
  qword_2607060 = (uint64_t)"CHAIN_INTERPRETATION_CHAINCHAIN_INTERPRETATION_NONE";
  *(void *)algn_2607068 = 26;
  dword_2607070 = 1;
  qword_2607078 = (uint64_t)"CHAIN_INTERPRETATION_NONE";
  unk_2607080 = 25;
  dword_2607088 = 0;
  qword_2607090 = (uint64_t)"EXACT_INTERPRETATION_FULL_NAME_MATCHEXACT_INTERPRETATION_NONEEXACT_INTERPRETATION_PASSTHROUGH";
  *(void *)algn_2607098 = 36;
  dword_26070A0 = 2;
  qword_26070A8 = (uint64_t)"EXACT_INTERPRETATION_NONEEXACT_INTERPRETATION_PASSTHROUGH";
  unk_26070B0 = 25;
  dword_26070B8 = 0;
  qword_26070C0 = (uint64_t)"EXACT_INTERPRETATION_PASSTHROUGH";
  unk_26070C8 = 32;
  dword_26070D0 = 1;
  qword_26070D8 = (uint64_t)"VOC_INTERPRETATION_NONEVOC_INTERPRETATION_PHRASE";
  unk_26070E0 = 23;
  dword_26070E8 = 0;
  qword_26070F0 = (uint64_t)"VOC_INTERPRETATION_PHRASE";
  unk_26070F8 = 25;
  dword_2607100 = 1;
  qword_2607108 = (uint64_t)"REWRITE_GEOREWRITE_POIREWRITE_REV";
  unk_2607110 = 11;
  dword_2607118 = 1;
  qword_2607120 = (uint64_t)"REWRITE_POIREWRITE_REV";
  unk_2607128 = 11;
  dword_2607130 = 0;
  qword_2607138 = (uint64_t)"REWRITE_REV";
  unk_2607140 = 11;
  dword_2607148 = 2;
  qword_2607150 = (uint64_t)"METADATA_SOURCE_ACMETADATA_SOURCE_BROWSE_SUGGESTIONMETADATA_SOURCE_BROWSE_SUGGESTION_CARPLAYM"
                           "ETADATA_SOURCE_BROWSE_SUGGESTION_NAVMETADATA_SOURCE_NONEMETADATA_SOURCE_RELATED_SEARCH_SUGGES"
                           "TIONMETADATA_SOURCE_ZKW";
  *(void *)algn_2607158 = 18;
  dword_2607160 = 1;
  qword_2607168 = (uint64_t)"METADATA_SOURCE_BROWSE_SUGGESTIONMETADATA_SOURCE_BROWSE_SUGGESTION_CARPLAYMETADATA_SOURCE_BROWSE_SUGGESTION_NAVMETADATA_SOURCE_NONEMETADATA_SOURCE_RELATED_SEARCH_SUGGESTIONMETADATA_SOURCE_ZKW";
  unk_2607170 = 33;
  dword_2607178 = 3;
  qword_2607180 = (uint64_t)"METADATA_SOURCE_BROWSE_SUGGESTION_CARPLAYMETADATA_SOURCE_BROWSE_SUGGESTION_NAVMETADATA_SOURCE_NONEMETADATA_SOURCE_RELATED_SEARCH_SUGGESTIONMETADATA_SOURCE_ZKW";
  unk_2607188 = 41;
  dword_2607190 = 4;
  qword_2607198 = (uint64_t)"METADATA_SOURCE_BROWSE_SUGGESTION_NAVMETADATA_SOURCE_NONEMETADATA_SOURCE_RELATED_SEARCH_SUGGESTIONMETADATA_SOURCE_ZKW";
  unk_26071A0 = 37;
  dword_26071A8 = 5;
  qword_26071B0 = (uint64_t)"METADATA_SOURCE_NONEMETADATA_SOURCE_RELATED_SEARCH_SUGGESTIONMETADATA_SOURCE_ZKW";
  unk_26071B8 = 20;
  dword_26071C0 = 0;
  qword_26071C8 = (uint64_t)"METADATA_SOURCE_RELATED_SEARCH_SUGGESTIONMETADATA_SOURCE_ZKW";
  unk_26071D0 = 41;
  dword_26071D8 = 6;
  qword_26071E0 = (uint64_t)"METADATA_SOURCE_ZKW";
  unk_26071E8 = 19;
  dword_26071F0 = 2;
  qword_26071F8 = (uint64_t)"METADATA_TYPE_CATEGORYMETADATA_TYPE_CHAINMETADATA_TYPE_GEOMETADATA_TYPE_NONEMETADATA_TYPE_POI"
                           "METADATA_TYPE_REWRITE";
  unk_2607200 = 22;
  dword_2607208 = 1;
  qword_2607210 = (uint64_t)"METADATA_TYPE_CHAINMETADATA_TYPE_GEOMETADATA_TYPE_NONEMETADATA_TYPE_POIMETADATA_TYPE_REWRITE";
  unk_2607218 = 19;
  dword_2607220 = 2;
  qword_2607228 = (uint64_t)"METADATA_TYPE_GEOMETADATA_TYPE_NONEMETADATA_TYPE_POIMETADATA_TYPE_REWRITE";
  unk_2607230 = 17;
  dword_2607238 = 4;
  qword_2607240 = (uint64_t)"METADATA_TYPE_NONEMETADATA_TYPE_POIMETADATA_TYPE_REWRITE";
  unk_2607248 = 18;
  dword_2607250 = 0;
  qword_2607258 = (uint64_t)"METADATA_TYPE_POIMETADATA_TYPE_REWRITE";
  unk_2607260 = 17;
  dword_2607268 = 3;
  qword_2607270 = (uint64_t)"METADATA_TYPE_REWRITE";
  unk_2607278 = 21;
  dword_2607280 = 5;
  qword_2607288 = (uint64_t)"DELTAFULL";
  unk_2607290 = 5;
  dword_2607298 = 1;
  qword_26072A0 = (uint64_t)"FULL";
  unk_26072A8 = 4;
  dword_26072B0 = 0;
  qword_26072D0 = (uint64_t)"FINISHEDFINISHED_ERRORINGESTINGINITIALIZED";
  unk_26072D8 = 8;
  qword_26072E8 = (uint64_t)"FINISHED_ERRORINGESTINGINITIALIZED";
  unk_26072F0 = 14;
  qword_2607300 = (uint64_t)"INGESTINGINITIALIZED";
  unk_2607308 = 9;
  qword_26072B8 = (uint64_t)"DOWNLOADINGFINISHEDFINISHED_ERRORINGESTINGINITIALIZED";
  unk_26072C0 = 11;
  dword_26072C8 = 4;
  dword_26072E0 = 0;
  dword_26072F8 = 1;
  dword_2607310 = 3;
  qword_2607318 = (uint64_t)"INITIALIZED";
  unk_2607320 = 11;
  dword_2607328 = 2;
  qword_2607348 = (uint64_t)"ATTRIBUTEBRANDCATEGORYKEYWORD";
  unk_2607350 = 9;
  qword_2607360 = (uint64_t)"BRANDCATEGORYKEYWORD";
  unk_2607368 = 5;
  qword_2607378 = (uint64_t)"CATEGORYKEYWORD";
  unk_2607380 = 8;
  qword_2607390 = (uint64_t)"KEYWORD";
  unk_2607398 = 7;
  qword_2607330 = (uint64_t)"ALLATTRIBUTEBRANDCATEGORYKEYWORD";
  *(void *)algn_2607338 = 3;
  dword_2607340 = 0;
  dword_2607358 = 3;
  dword_2607370 = 2;
  dword_2607388 = 1;
  dword_26073A0 = 4;
  qword_26073C0 = (uint64_t)"MIXEDSEMANTIC";
  unk_26073C8 = 5;
  qword_26073D8 = (uint64_t)"SEMANTIC";
  unk_26073E0 = 8;
  qword_26073A8 = (uint64_t)"LEXICALMIXEDSEMANTIC";
  unk_26073B0 = 7;
  dword_26073B8 = 1;
  dword_26073D0 = 0;
  dword_26073E8 = 2;
  qword_2607408 = (uint64_t)"BRANDCATEGORYCATEGORY_BROWSECATEGORY_BUSINESS_ATTRIBUTECATEGORY_COLLECTIONCATEGORY_DEPARTMENTCATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607420 = (uint64_t)"CATEGORYCATEGORY_BROWSECATEGORY_BUSINESS_ATTRIBUTECATEGORY_COLLECTIONCATEGORY_DEPARTMENTCATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607438 = (uint64_t)"CATEGORY_BROWSECATEGORY_BUSINESS_ATTRIBUTECATEGORY_COLLECTIONCATEGORY_DEPARTMENTCATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607450 = (uint64_t)"CATEGORY_BUSINESS_ATTRIBUTECATEGORY_COLLECTIONCATEGORY_DEPARTMENTCATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607468 = (uint64_t)"CATEGORY_COLLECTIONCATEGORY_DEPARTMENTCATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607480 = (uint64_t)"CATEGORY_DEPARTMENTCATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607498 = (uint64_t)"CATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26074B0 = (uint64_t)"CATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26074C8 = (uint64_t)"CATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26074E0 = (uint64_t)"CATEGORY_RATINGCATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26074F8 = (uint64_t)"CATEGORY_SERVICECATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  uint64_t result = 13;
  qword_2607510 = (uint64_t)"CATEGORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607528 = (uint64_t)"CATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607540 = (uint64_t)"CHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607558 = (uint64_t)"DATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607570 = (uint64_t)"GEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607588 = (uint64_t)"IGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26075A0 = (uint64_t)"KEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26075B8 = (uint64_t)"LATENT_BRANDNAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26075D0 = (uint64_t)"NAMEPHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_26075E8 = (uint64_t)"PHONEPROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607600 = (uint64_t)"PROXIMITYQUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607618 = (uint64_t)"QUERYSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607630 = (uint64_t)"SYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607648 = (uint64_t)"TRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  qword_2607660 = (uint64_t)"TRANSLATION_PROXIMITY";
  qword_2607690 = (uint64_t)"STRUCTURED_SPAN_DATA_OPERATOR_NONESTRUCTURED_SPAN_DATA_OPERATOR_OR";
  unk_2607698 = 34;
  qword_2607678 = (uint64_t)"STRUCTURED_SPAN_DATA_OPERATOR_ANDSTRUCTURED_SPAN_DATA_OPERATOR_NONESTRUCTURED_SPAN_DATA_OPERATOR_OR";
  unk_2607680 = 33;
  dword_2607688 = 1;
  dword_26076A0 = 0;
  qword_26076A8 = (uint64_t)"STRUCTURED_SPAN_DATA_OPERATOR_OR";
  unk_26076B0 = 32;
  dword_26076B8 = 2;
  qword_26076D8 = (uint64_t)"FALLBACK_TYPE_NONEFALLBACK_TYPE_PREF_CAT_FOR_BRANDFALLBACK_TYPE_RELATED_CATEGORY_FOR_CATEGORY";
  qword_26076F0 = (uint64_t)"FALLBACK_TYPE_PREF_CAT_FOR_BRANDFALLBACK_TYPE_RELATED_CATEGORY_FOR_CATEGORY";
  qword_26076C0 = (uint64_t)"FALLBACK_TYPE_NAMEFALLBACK_TYPE_NONEFALLBACK_TYPE_PREF_CAT_FOR_BRANDFALLBACK_TYPE_RELATED_CAT"
                           "EGORY_FOR_CATEGORY";
  qword_2607708 = (uint64_t)"FALLBACK_TYPE_RELATED_CATEGORY_FOR_CATEGORY";
  qword_26073F0 = (uint64_t)"ATTRIBUTEBRANDCATEGORYCATEGORY_BROWSECATEGORY_BUSINESS_ATTRIBUTECATEGORY_COLLECTIONCATEGORY_D"
                           "EPARTMENTCATEGORY_DIRECT_LINKCATEGORY_EVENTCATEGORY_PHOTOCATEGORY_RATINGCATEGORY_SERVICECATEG"
                           "ORY_STATCATEGORY_WALLETCHAINDATA_AB_KEYWORDGEOIGNOREKEYWORDLATENT_BRANDNAMEPHONEPROXIMITYQUER"
                           "YSYSTEMTRANSLATION_CATEGORYTRANSLATION_PROXIMITY";
  *(void *)algn_26073F8 = 9;
  dword_2607400 = 9;
  qword_2607410 = 5;
  dword_2607418 = 6;
  qword_2607428 = 8;
  dword_2607430 = 2;
  qword_2607440 = 15;
  dword_2607448 = 16;
  qword_2607458 = 27;
  dword_2607460 = 17;
  qword_2607470 = 19;
  dword_2607478 = 18;
  qword_2607488 = 19;
  dword_2607490 = 26;
  qword_26074A0 = 20;
  dword_26074A8 = 19;
  qword_26074B8 = 14;
  dword_26074C0 = 20;
  qword_26074D0 = 14;
  dword_26074D8 = 21;
  qword_26074E8 = 15;
  dword_26074F0 = 22;
  qword_2607500 = 16;
  dword_2607508 = 23;
  qword_2607518 = 13;
  dword_2607520 = 24;
  qword_2607530 = 15;
  dword_2607538 = 25;
  qword_2607548 = 5;
  dword_2607550 = 3;
  qword_2607560 = 15;
  dword_2607568 = 15;
  qword_2607578 = 3;
  dword_2607580 = 5;
  qword_26076F8 = 32;
  dword_2607700 = 2;
  qword_2607590 = 6;
  dword_2607598 = 0;
  qword_26076C8 = 18;
  dword_26076D0 = 1;
  qword_26076E0 = 18;
  dword_26076E8 = 0;
  qword_26075A8 = 7;
  dword_26075B0 = 11;
  qword_26075C0 = 12;
  dword_26075C8 = 12;
  qword_26075D8 = 4;
  dword_26075E0 = 1;
  qword_26075F0 = 5;
  dword_26075F8 = 8;
  qword_2607608 = 9;
  dword_2607610 = 4;
  qword_2607620 = 5;
  dword_2607670 = 14;
  dword_2607628 = 10;
  qword_2607638 = 6;
  qword_2607650 = 20;
  dword_2607658 = 13;
  qword_2607668 = 21;
  dword_2607640 = 7;
  qword_2607710 = 43;
  dword_2607718 = 3;
  qword_2607738 = (uint64_t)"ENABLEDENABLED_STRICT";
  unk_2607740 = 7;
  qword_2607750 = (uint64_t)"ENABLED_STRICT";
  unk_2607758 = 14;
  qword_2607720 = (uint64_t)"DISABLEDENABLEDENABLED_STRICT";
  *(void *)algn_2607728 = 8;
  dword_2607730 = 0;
  dword_2607748 = 1;
  dword_2607760 = 2;
  qword_2607780 = (uint64_t)"SAR_IN_NAVSAR_NON_NAV";
  unk_2607788 = 10;
  qword_2607798 = (uint64_t)"SAR_NON_NAV";
  unk_26077A0 = 11;
  qword_2607768 = (uint64_t)"NORMALSAR_IN_NAVSAR_NON_NAV";
  unk_2607770 = 6;
  dword_2607778 = 0;
  dword_2607790 = 1;
  dword_26077A8 = 2;
  qword_26077C8 = (uint64_t)"FILTER_QUERY_NOTFILTER_QUERY_ORFILTER_QUERY_TERM";
  unk_26077D0 = 16;
  qword_26077E0 = (uint64_t)"FILTER_QUERY_ORFILTER_QUERY_TERM";
  unk_26077E8 = 15;
  qword_26077F8 = (uint64_t)"FILTER_QUERY_TERM";
  unk_2607800 = 17;
  qword_26077B0 = (uint64_t)"FILTER_QUERY_ANDFILTER_QUERY_NOTFILTER_QUERY_ORFILTER_QUERY_TERM";
  *(void *)algn_26077B8 = 16;
  dword_26077C0 = 0;
  dword_26077D8 = 3;
  dword_26077F0 = 1;
  dword_2607808 = 2;
  qword_2607828 = (uint64_t)"FILTER_QUERY_VALUE_RANGEFILTER_QUERY_VALUE_STRING";
  unk_2607830 = 24;
  qword_2607840 = (uint64_t)"FILTER_QUERY_VALUE_STRING";
  unk_2607848 = 25;
  qword_2607810 = (uint64_t)"FILTER_QUERY_VALUE_NUMERICFILTER_QUERY_VALUE_RANGEFILTER_QUERY_VALUE_STRING";
  *(void *)algn_2607818 = 26;
  dword_2607820 = 1;
  dword_2607838 = 2;
  dword_2607850 = 0;
  qword_2607888 = (uint64_t)"HIKE_TYPE_POINT_TO_POINTHIKE_TYPE_UNKNOWN";
  unk_2607890 = 24;
  qword_26078A0 = (uint64_t)"HIKE_TYPE_UNKNOWN";
  unk_26078A8 = 17;
  qword_2607858 = (uint64_t)"HIKE_TYPE_LOOPHIKE_TYPE_OUT_AND_BACKHIKE_TYPE_POINT_TO_POINTHIKE_TYPE_UNKNOWN";
  unk_2607860 = 14;
  dword_2607868 = 1;
  qword_2607870 = (uint64_t)"HIKE_TYPE_OUT_AND_BACKHIKE_TYPE_POINT_TO_POINTHIKE_TYPE_UNKNOWN";
  unk_2607878 = 22;
  dword_2607880 = 2;
  dword_2607898 = 3;
  dword_26078B0 = 0;
  qword_26078D0 = (uint64_t)"JAPANESESTANDARDWHITESPACE";
  unk_26078D8 = 8;
  qword_26078E8 = (uint64_t)"STANDARDWHITESPACE";
  unk_26078F0 = 8;
  qword_2607900 = (uint64_t)"WHITESPACE";
  unk_2607908 = 10;
  qword_26078B8 = (uint64_t)"CHINESEJAPANESESTANDARDWHITESPACE";
  unk_26078C0 = 7;
  dword_26078C8 = 3;
  dword_26078E0 = 2;
  dword_26078F8 = 1;
  dword_2607910 = 0;
  qword_2607930 = (uint64_t)"DISTANCE_TIERED_RELEVANCEDISTANCE_TO_DEVICE_LOCATIONEV_PLUG_SPEED_FAST_TO_SLOWPRICE_RANGE_ASCENDINGPRICE_RANGE_DESCENDINGRANKER_DISABLEDRATINGRELEVANCEVENDOR_RATING";
  unk_2607938 = 25;
  qword_2607948 = (uint64_t)"DISTANCE_TO_DEVICE_LOCATIONEV_PLUG_SPEED_FAST_TO_SLOWPRICE_RANGE_ASCENDINGPRICE_RANGE_DESCENDINGRANKER_DISABLEDRATINGRELEVANCEVENDOR_RATING";
  unk_2607950 = 27;
  qword_2607960 = (uint64_t)"EV_PLUG_SPEED_FAST_TO_SLOWPRICE_RANGE_ASCENDINGPRICE_RANGE_DESCENDINGRANKER_DISABLEDRATINGRELEVANCEVENDOR_RATING";
  unk_2607968 = 26;
  qword_2607978 = (uint64_t)"PRICE_RANGE_ASCENDINGPRICE_RANGE_DESCENDINGRANKER_DISABLEDRATINGRELEVANCEVENDOR_RATING";
  unk_2607980 = 21;
  qword_2607990 = (uint64_t)"PRICE_RANGE_DESCENDINGRANKER_DISABLEDRATINGRELEVANCEVENDOR_RATING";
  unk_2607998 = 22;
  qword_26079A8 = (uint64_t)"RANKER_DISABLEDRATINGRELEVANCEVENDOR_RATING";
  unk_26079B0 = 15;
  qword_26079C0 = (uint64_t)"RATINGRELEVANCEVENDOR_RATING";
  unk_26079C8 = 6;
  qword_26079D8 = (uint64_t)"RELEVANCEVENDOR_RATING";
  unk_26079E0 = 9;
  qword_26079F0 = (uint64_t)"VENDOR_RATING";
  unk_26079F8 = 13;
  qword_2607918 = (uint64_t)"DISTANCEDISTANCE_TIERED_RELEVANCEDISTANCE_TO_DEVICE_LOCATIONEV_PLUG_SPEED_FAST_TO_SLOWPRICE_R"
                           "ANGE_ASCENDINGPRICE_RANGE_DESCENDINGRANKER_DISABLEDRATINGRELEVANCEVENDOR_RATING";
  unk_2607920 = 8;
  dword_2607928 = 2;
  dword_2607940 = 9;
  dword_2607958 = 6;
  dword_2607970 = 8;
  dword_2607988 = 4;
  dword_26079A0 = 5;
  dword_26079B8 = 3;
  dword_26079D0 = 1;
  dword_26079E8 = 0;
  dword_2607A00 = 7;
  qword_2607A50 = (uint64_t)"AUTO_COMPLETE_ANALYSIS_REWRITE_ANALYSIS_INTERPRETATION_TOKEN_IMPORTANCEAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATION_EMBEDDINGAUTO_COMPLETE_NOREWRITE_ABAUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607A58 = 71;
  qword_2607A68 = (uint64_t)"AUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATION_EMBEDDINGAUTO_COMPLETE_NOREWRITE_ABAUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607A70 = 45;
  qword_2607A20 = (uint64_t)"AUTO_COMPLETE_ANALYSIS_FUZZYV2_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_ANALYSIS_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_ANALYSIS_INTERPRETATION_TOKEN_IMPORTANCEAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATION_EMBEDDINGAUTO_COMPLETE_NOREWRITE_ABAUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607A28 = 45;
  dword_2607A78 = 24;
  qword_2607A80 = (uint64_t)"AUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATION_EMBEDDINGAUTO_COMPLETE_NOREWRITE_ABAUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607A88 = 55;
  qword_2607A98 = (uint64_t)"AUTO_COMPLETE_NOREWRITE_ABAUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607AA0 = 26;
  dword_2607A90 = 26;
  qword_2607AC8 = (uint64_t)"AUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607AD0 = 39;
  qword_2607AF8 = (uint64_t)"AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607B00 = 47;
  qword_2607AE0 = (uint64_t)"AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607AE8 = 47;
  qword_2607B10 = (uint64_t)"AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  dword_2607B20 = 25;
  qword_2607B28 = (uint64_t)"AUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607B30 = 51;
  dword_2607A48 = 27;
  qword_2607B40 = (uint64_t)"COMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607B48 = 27;
  qword_2607B58 = (uint64_t)"DISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607B88 = (uint64_t)"NONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607BA0 = (uint64_t)"PARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607BB8 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607BC0 = 42;
  dword_2607BC8 = 32;
  qword_2607BD0 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607BD8 = 46;
  qword_2607AB0 = (uint64_t)"AUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607AB8 = 46;
  qword_2607C00 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607C08 = 38;
  dword_2607C10 = 31;
  qword_2607C18 = (uint64_t)"QUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607BE8 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607BF0 = 40;
  qword_2607C20 = 40;
  dword_2607C28 = 35;
  qword_2607C30 = (uint64_t)"SEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607C48 = (uint64_t)"SEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  dword_2607BE0 = 33;
  qword_2607C50 = 33;
  qword_2607C60 = (uint64_t)"SEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  dword_2607BF8 = 30;
  qword_2607C68 = 30;
  qword_2607C78 = (uint64_t)"SEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  dword_2607C88 = 23;
  qword_2607C90 = (uint64_t)"SEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607C98 = 34;
  dword_2607CA0 = 34;
  qword_2607CA8 = (uint64_t)"SEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  dword_2607B80 = 28;
  qword_2607CB0 = 28;
  qword_2607CC0 = (uint64_t)"TEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  dword_2607A60 = 29;
  qword_2607C80 = 29;
  qword_2607CC8 = 29;
  dword_2607CD0 = 17;
  qword_2607CD8 = (uint64_t)"TEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607A38 = (uint64_t)"AUTO_COMPLETE_ANALYSIS_REWRITE_ANALYSIS_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_ANALYSIS_INTERPRETATION_TOKEN_IMPORTANCEAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATION_EMBEDDINGAUTO_COMPLETE_NOREWRITE_ABAUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WITH_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WITH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607A40 = 54;
  qword_2607B18 = 54;
  qword_2607CE0 = 54;
  qword_2607CF0 = (uint64_t)"TEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607D08 = (uint64_t)"TEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607D10 = 37;
  qword_2607D20 = (uint64_t)"TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607CF8 = 36;
  qword_2607D28 = 36;
  qword_2607B70 = (uint64_t)"GEO_CODING_PLANNONEPARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELLERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITETEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_SYNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607B78 = 15;
  dword_2607D30 = 15;
  qword_2607D38 = (uint64_t)"TEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  qword_2607D40 = 44;
  qword_2607A08 = (uint64_t)"AUTO_COMPLETEAUTO_COMPLETE_ANALYSIS_FUZZYV2_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_ANAL"
                           "YSIS_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_ANALYSIS_INTERPRETATION_TOKEN_IMPORTANCEAUT"
                           "O_COMPLETE_ANALYSIS_REWRITE_INTERPRETATIONAUTO_COMPLETE_ANALYSIS_REWRITE_INTERPRETATION_EMBED"
                           "DINGAUTO_COMPLETE_NOREWRITE_ABAUTO_COMPLETE_WITH_EARLY_CLASSIFIER_AND_TAGGERAUTO_COMPLETE_WIT"
                           "H_QUERY_INTERPRETATIONAUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FOR_QISAUTO_COMPLETE_WITH_QUERY"
                           "_INTERPRETATION_FUZZYV2AUTO_COMPLETE_WITH_QUERY_INTERPRETATION_FUZZYV2_AC_TAGAUTO_COMPLETE_WI"
                           "TH_SPELLER_AND_QUERY_INTERPRETATIONCOMPONENT_TEST_PLAN_GENERICDISPLAY_NAMEGEO_CODING_PLANNONE"
                           "PARSECQUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSIN"
                           "GQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_UNDERSTA"
                           "NDING_TYPE_TAXONOMY_SEARCHSEARCHSEARCH_WITHOUT_POI_SEARCH_SPELLERSEARCH_WITH_CLASSIFIER_SPELL"
                           "ERSEARCH_WITH_COMBINED_REWRITESSEARCH_WITH_COMBINED_REWRITES_LITESEARCH_WITH_QUESTION_REWRITE"
                           "TEST_QUERY_ANALYSIS_PROCESSORTEST_QUERY_CLASSIFICATION_PROCESSOR_WITHOUT_COMPLETIONTEST_QUERY"
                           "_INTERPRETATIONS_PROCESSORTEST_QUERY_REWRITE_PROCESSOR_FUZZY_V2TEST_QUERY_REWRITE_PROCESSOR_S"
                           "YNONYMTEST_QUERY_REWRITE_PROCESSOR_TRANSLITERATIONTEST_RBO_QU_PROCESSOR";
  unk_2607A10 = 13;
  dword_2607A18 = 1;
  dword_2607A30 = 10;
  dword_2607AA8 = 11;
  dword_2607AC0 = 6;
  dword_2607AD8 = 7;
  dword_2607AF0 = 12;
  dword_2607B08 = 8;
  dword_2607B38 = 9;
  dword_2607B50 = 13;
  qword_2607B60 = 12;
  dword_2607B68 = 4;
  qword_2607B90 = 4;
  dword_2607B98 = 0;
  qword_2607BA8 = 6;
  dword_2607BB0 = 22;
  qword_2607C38 = 6;
  dword_2607C40 = 2;
  dword_2607C58 = 5;
  dword_2607C70 = 3;
  dword_2607CB8 = 21;
  dword_2607CE8 = 19;
  dword_2607D00 = 18;
  dword_2607D18 = 14;
  dword_2607D48 = 16;
  qword_2607D50 = (uint64_t)"TEST_RBO_QU_PROCESSOR";
  qword_2607D58 = 21;
  dword_2607D60 = 20;
  qword_2607D80 = (uint64_t)"TERM_ATTRIBUTETERM_BUSINESSTERM_CATEGORYTERM_IGNORETERM_PLACETERM_PRODUCTTERM_PROPERTYTERM_REVIEWTERM_TRANSIT";
  unk_2607D88 = 14;
  qword_2607D70 = 14;
  dword_2607D90 = 5;
  qword_2607DB0 = (uint64_t)"TERM_CATEGORYTERM_IGNORETERM_PLACETERM_PRODUCTTERM_PROPERTYTERM_REVIEWTERM_TRANSIT";
  unk_2607DB8 = 13;
  qword_2607DE0 = (uint64_t)"TERM_PLACETERM_PRODUCTTERM_PROPERTYTERM_REVIEWTERM_TRANSIT";
  unk_2607DE8 = 10;
  qword_2607E10 = (uint64_t)"TERM_PROPERTYTERM_REVIEWTERM_TRANSIT";
  unk_2607E18 = 13;
  qword_2607D98 = (uint64_t)"TERM_BUSINESSTERM_CATEGORYTERM_IGNORETERM_PLACETERM_PRODUCTTERM_PROPERTYTERM_REVIEWTERM_TRANSIT";
  unk_2607DA0 = 13;
  dword_2607E20 = 6;
  qword_2607E28 = (uint64_t)"TERM_REVIEWTERM_TRANSIT";
  unk_2607E30 = 11;
  qword_2607DC8 = (uint64_t)"TERM_IGNORETERM_PLACETERM_PRODUCTTERM_PROPERTYTERM_REVIEWTERM_TRANSIT";
  unk_2607DD0 = 11;
  dword_2607E38 = 8;
  qword_2607E40 = (uint64_t)"TERM_TRANSIT";
  unk_2607E48 = 12;
  qword_2607D68 = (uint64_t)"TERM_ARBITRARYTERM_ATTRIBUTETERM_BUSINESSTERM_CATEGORYTERM_IGNORETERM_PLACETERM_PRODUCTTERM_P"
                           "ROPERTYTERM_REVIEWTERM_TRANSIT";
  qword_2607DF8 = (uint64_t)"TERM_PRODUCTTERM_PROPERTYTERM_REVIEWTERM_TRANSIT";
  unk_2607E00 = 12;
  dword_2607D78 = 0;
  dword_2607DA8 = 2;
  dword_2607DC0 = 3;
  dword_2607DD8 = 4;
  dword_2607DF0 = 1;
  dword_2607E08 = 7;
  dword_2607E50 = 9;
  qword_2607E58 = (uint64_t)"INFLECTION_AS_ISINFLECTION_COMPOUNDINGINFLECTION_PLURALITYINFLECTION_SPELLINGINFLECTION_SYNONYM";
  unk_2607E60 = 16;
  qword_2607E70 = (uint64_t)"INFLECTION_COMPOUNDINGINFLECTION_PLURALITYINFLECTION_SPELLINGINFLECTION_SYNONYM";
  unk_2607E78 = 22;
  qword_2607E88 = (uint64_t)"INFLECTION_PLURALITYINFLECTION_SPELLINGINFLECTION_SYNONYM";
  unk_2607E90 = 20;
  qword_2607EA0 = (uint64_t)"INFLECTION_SPELLINGINFLECTION_SYNONYM";
  unk_2607EA8 = 19;
  qword_2607EB8 = (uint64_t)"INFLECTION_SYNONYM";
  unk_2607EC0 = 18;
  dword_2607EC8 = 3;
  dword_2607E68 = 0;
  dword_2607E80 = 2;
  dword_2607E98 = 1;
  dword_2607EB0 = 4;
  dword_2607EE0 = 2;
  qword_2607EE8 = (uint64_t)"TAPSUNKNOWN";
  unk_2607EF0 = 4;
  dword_2607EF8 = 1;
  qword_2607ED0 = (uint64_t)"APPLE_PAYTAPSUNKNOWN";
  *(void *)algn_2607ED8 = 9;
  qword_2607F00 = (uint64_t)"UNKNOWN";
  unk_2607F08 = 7;
  dword_2607F10 = 0;
  return result;
}

uint64_t *sub_1517000(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2608010, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2608010))
  {
    byte_2608008 = sub_1889E98((uint64_t)&qword_2607F90, dword_21477F8, 5, qword_2608018);
    __cxa_guard_release(&qword_2608010);
  }
  int v2 = sub_1889E18((uint64_t)&qword_2607F90, dword_21477F8, 5uLL, a1);
  if (v2 != -1) {
    return &qword_2608018[3 * v2];
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)byte_2550268, memory_order_acquire) & 1) == 0) {
    sub_1889F30();
  }
  return &qword_2550250;
}

void sub_15170D0(_Unwind_Exception *a1)
{
}

uint64_t *sub_15170E8(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26081D0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26081D0))
  {
    byte_26081C8 = sub_1889E98((uint64_t)&qword_2608090, (int *)"\n", 13, qword_26081D8);
    __cxa_guard_release(&qword_26081D0);
  }
  int v2 = sub_1889E18((uint64_t)&qword_2608090, (int *)"\n", 0xDuLL, a1);
  if (v2 != -1) {
    return &qword_26081D8[3 * v2];
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)byte_2550268, memory_order_acquire) & 1) == 0) {
    sub_1889F30();
  }
  return &qword_2550250;
}

void sub_15171B8(_Unwind_Exception *a1)
{
}

BOOL sub_15171D0(unsigned int a1)
{
  return a1 < 3;
}

uint64_t sub_15171DC(int a1)
{
  uint64_t result = 1;
  if (a1 <= 547)
  {
    if (a1 <= 269)
    {
      if (a1 <= 131)
      {
        if (a1 <= 0x3C && ((1 << a1) & 0x101D101100001101) != 0) {
          return result;
        }
        unsigned int v6 = a1 - 64;
        if (v6 <= 0x3C)
        {
          uint64_t v4 = 1 << v6;
          uint64_t v5 = 0x1010110104100111;
          goto LABEL_28;
        }
        return 0;
      }
      if ((a1 - 132) <= 0x3C && ((1 << (a1 + 124)) & 0x1900044001101011) != 0) {
        return result;
      }
      unsigned int v9 = a1 - 203;
      if (v9 > 0x3B) {
        return 0;
      }
      uint64_t v4 = 1 << v9;
      uint64_t v5 = 0x800008828080821;
    }
    else
    {
      if (a1 > 403)
      {
        if ((a1 - 404) <= 0x3A && ((1 << (a1 + 108)) & 0x444040044446451) != 0) {
          return result;
        }
        unsigned int v3 = a1 - 478;
        if (v3 <= 0x37)
        {
          uint64_t v4 = 1 << v3;
          uint64_t v5 = 0xC0404404140045;
          goto LABEL_28;
        }
        return 0;
      }
      if ((a1 - 340) <= 0x3C && ((1 << (a1 - 84)) & 0x1411001011111111) != 0) {
        return result;
      }
      unsigned int v8 = a1 - 270;
      if (v8 > 0x3E) {
        return 0;
      }
      uint64_t v4 = 1 << v8;
      uint64_t v5 = 0x4444000000400001;
    }
LABEL_28:
    if ((v4 & v5) != 0) {
      return result;
    }
    return 0;
  }
  if (a1 <= 779)
  {
    if (a1 > 701)
    {
      if ((a1 - 702) <= 0x3E && ((1 << (a1 + 66)) & 0x4444400004000115) != 0
        || a1 == 776)
      {
        return result;
      }
    }
    else
    {
      if ((a1 - 548) <= 0x3C && ((1 << (a1 - 36)) & 0x1114044040040441) != 0) {
        return result;
      }
      unsigned int v7 = a1 - 634;
      if (v7 <= 0x3C)
      {
        uint64_t v4 = 1 << v7;
        uint64_t v5 = 0x1101100000101201;
        goto LABEL_28;
      }
    }
    return 0;
  }
  switch(a1)
  {
    case 858:
    case 860:
    case 882:
    case 886:
    case 901:
    case 931:
    case 932:
    case 934:
    case 936:
    case 937:
    case 938:
    case 940:
    case 941:
    case 943:
    case 944:
    case 946:
    case 947:
    case 948:
    case 949:
    case 950:
    case 951:
    case 952:
    case 953:
    case 955:
    case 956:
    case 957:
    case 958:
    case 959:
    case 960:
    case 961:
    case 962:
    case 963:
    case 964:
    case 965:
    case 967:
    case 968:
    case 969:
    case 970:
    case 971:
    case 972:
    case 973:
    case 974:
    case 975:
    case 976:
    case 977:
    case 978:
    case 979:
    case 980:
    case 981:
    case 984:
    case 985:
    case 986:
      return result;
    case 859:
    case 861:
    case 862:
    case 863:
    case 864:
    case 865:
    case 866:
    case 867:
    case 868:
    case 869:
    case 870:
    case 871:
    case 872:
    case 873:
    case 874:
    case 875:
    case 876:
    case 877:
    case 878:
    case 879:
    case 880:
    case 881:
    case 883:
    case 884:
    case 885:
    case 887:
    case 888:
    case 889:
    case 890:
    case 891:
    case 892:
    case 893:
    case 894:
    case 895:
    case 896:
    case 897:
    case 898:
    case 899:
    case 900:
    case 902:
    case 903:
    case 904:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 912:
    case 913:
    case 914:
    case 915:
    case 916:
    case 917:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 924:
    case 925:
    case 926:
    case 927:
    case 928:
    case 929:
    case 930:
    case 933:
    case 935:
    case 939:
    case 942:
    case 945:
    case 954:
    case 966:
    case 982:
    case 983:
      return 0;
    default:
      if ((a1 - 780) > 0x3C || ((1 << (a1 - 12)) & 0x1040404008100111) == 0)
      {
        unsigned int v10 = a1 - 990;
        if (v10 > 9 || ((1 << v10) & 0x291) == 0) {
          return 0;
        }
      }
      break;
  }
  return result;
}

uint64_t sub_1517674(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24BDE70;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(unsigned char *)(result + 56) = 0;
  *(_DWORD *)(result + 60) = 1;
  return result;
}

uint64_t sub_15176C0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_152ED04((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151776C(uint64_t a1)
{
  sub_15176C0(a1);

  operator delete();
}

uint64_t sub_15177A4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1518484(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 6) != 0)
  {
    *(unsigned char *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 60) = 1;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1517868(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v35, (uint64_t)a3);
        goto LABEL_42;
      case 2u:
        if (v9 != 18) {
          goto LABEL_35;
        }
        uint64_t v16 = v8 - 1;
        while (1)
        {
          unsigned int v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)uint64_t v35 = v16 + 1;
          int v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            unint64_t v21 = sub_152001C(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            unsigned int v17 = *(unsigned __int8 **)v35;
          }
          uint64_t v16 = sub_1517BC0(a3, v20, v17);
          *(void *)uint64_t v35 = v16;
          if (!v16) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_43;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_35;
        }
        v5 |= 2u;
        uint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v35 = v31;
          *(unsigned char *)(a1 + 56) = v32 != 0;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_27:
          *(void *)uint64_t v35 = v22;
          *(unsigned char *)(a1 + 56) = v23 != 0;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_35;
        }
        uint64_t v25 = v8 + 1;
        unint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        int v28 = v26 + (v27 << 7);
        unint64_t v26 = (v28 - 128);
        if (v27 < 0)
        {
          *(void *)uint64_t v35 = sub_188C138((uint64_t)v8, (v28 - 128));
          if (!*(void *)v35) {
            goto LABEL_56;
          }
          unint64_t v26 = v33;
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)uint64_t v35 = v25;
        }
        if (sub_119BBA8(v26))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 60) = v26;
        }
        else
        {
          if (*v7) {
            int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v26, v34);
        }
        goto LABEL_43;
      default:
LABEL_35:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            unint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v35;
          }
          uint64_t v15 = sub_1885AC0(v9, v30, v8, a3);
LABEL_42:
          *(void *)uint64_t v35 = v15;
          if (!v15) {
            goto LABEL_56;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_56:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

char *sub_1517BC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151853C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1517C50(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_1518864(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v12 = *(unsigned char *)(a1 + 56);
    char *v4 = 24;
    v4[1] = v12;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 60);
    char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1517E6C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1518A10(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += 2;
    }
    if ((v8 & 4) != 0)
    {
      int v12 = *(_DWORD *)(a1 + 60);
      if (v12 < 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v13;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1517FAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F084((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_15180EC(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_15177A4(a1);
    sub_1517FAC(a1, a2);
  }
}

uint64_t sub_1518138()
{
  return 1;
}

__n128 sub_1518140(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  LOBYTE(v7) = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a2 + 56) = v7;
  LODWORD(v7) = *(_DWORD *)(a1 + 60);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a2 + 60) = v7;
  return result;
}

void *sub_15181B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareRequest");
}

void *sub_15181C4(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  char *result = off_24BDEF0;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_15181FC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BDEF0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F110(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      int *v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_1518320()
{
}

uint64_t sub_1518388(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253C718)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_151FB64(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_152ED84((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151844C(uint64_t a1)
{
  sub_1518388(a1);

  operator delete();
}

uint64_t sub_1518484(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_1519398(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v5 = *(void *)(v1 + 48);
    char v6 = *(unsigned char *)(v5 + 8);
    __n128 result = v5 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v6) {
      __n128 result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1518524(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_151853C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_15205FC((uint64_t)v16);
      *(void *)(a1 + 48) = v15;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_15187D4(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      unint64_t v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v23 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        sub_1520134(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        unint64_t v18 = (unsigned __int8 *)v23;
      }
      uint64_t v17 = sub_1518744(a3, v21, v18);
      uint64_t v23 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_27;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_1518744(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1519410(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15187D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151FC10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1518864(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_151995C(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    *__dst = 26;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      uint64_t v13 = __dst + 2;
    }
    __dst = sub_151FDB8(v11, (unint64_t)v13, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_1518A10(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1519E20(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_151FEE0(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1518AF4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F110((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unsigned int v10 = (std::string *)sub_15205FC((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_253C8D0;
    }
    sub_11A7934(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1518C18(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1518484(a1);
    sub_1518AF4(a1, a2);
  }
}

uint64_t sub_1518C64()
{
  return 1;
}

void *sub_1518C6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareRoute");
}

void *sub_1518C7C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1518CF0(void *a1)
{
  sub_1518C7C(a1);

  operator delete();
}

uint64_t sub_1518D28(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1518D50(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    int v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    BOOL v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1518FA4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_15191C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1519290()
{
  return 1;
}

void *sub_1519298@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareRouteLegDate");
}

uint64_t sub_15192A8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253C778)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1518C7C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1519360(uint64_t a1)
{
  sub_15192A8(a1);

  operator delete();
}

uint64_t sub_1519398(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1518D28(*(void *)(result + 24));
  }
  if ((v2 & 0xFE) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 80) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1519410(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v57 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v57, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v57 + 1;
    unsigned int v9 = *v57;
    if (*v57 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v57, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v57 + 2;
      }
    }
    uint64_t v57 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_55;
        }
        v5 |= 2u;
        unsigned int v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          uint64_t v57 = v12;
          *(void *)(a1 + 32) = v13;
          goto LABEL_63;
        }
        uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v57 = v41;
        *(void *)(a1 + 32) = v42;
        if (v41) {
          goto LABEL_63;
        }
        goto LABEL_84;
      case 2u:
        if (v9 != 16) {
          goto LABEL_55;
        }
        v5 |= 4u;
        unsigned int v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          std::string::size_type v43 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v57 = v43;
          *(void *)(a1 + 40) = v44;
          if (!v43) {
            goto LABEL_84;
          }
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          uint64_t v57 = v15;
          *(void *)(a1 + 40) = v16;
        }
        goto LABEL_63;
      case 3u:
        if (v9 != 24) {
          goto LABEL_55;
        }
        v5 |= 8u;
        unint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v57 = v45;
          *(void *)(a1 + 48) = v46;
          if (!v45) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v57 = v18;
          *(void *)(a1 + 48) = v19;
        }
        goto LABEL_63;
      case 4u:
        if (v9 != 32) {
          goto LABEL_55;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v47 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v57 = v47;
          *(void *)(a1 + 56) = v48;
          if (!v47) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v57 = v21;
          *(void *)(a1 + 56) = v22;
        }
        goto LABEL_63;
      case 5u:
        if (v9 != 40) {
          goto LABEL_55;
        }
        v5 |= 0x20u;
        int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v49 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v57 = v49;
          *(void *)(a1 + 64) = v50;
          if (!v49) {
            goto LABEL_84;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          uint64_t v57 = v24;
          *(void *)(a1 + 64) = v25;
        }
        goto LABEL_63;
      case 6u:
        if (v9 != 48) {
          goto LABEL_55;
        }
        v5 |= 0x100u;
        int v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v51 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v57 = v51;
          *(unsigned char *)(a1 + 88) = v52 != 0;
          if (!v51) {
            goto LABEL_84;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          uint64_t v57 = v27;
          *(unsigned char *)(a1 + 88) = v28 != 0;
        }
        goto LABEL_63;
      case 7u:
        if (v9 != 58) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v30 = *(void *)(a1 + 24);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_15200B8((uint64_t)v31);
          *(void *)(a1 + 24) = v30;
          unsigned int v8 = v57;
        }
        uint64_t v32 = sub_15198CC(a3, v30, (unsigned __int8 *)v8);
        goto LABEL_62;
      case 8u:
        if (v9 != 64) {
          goto LABEL_55;
        }
        v5 |= 0x40u;
        unint64_t v33 = v8 + 1;
        uint64_t v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          unint64_t v53 = (char *)sub_188C138((uint64_t)v8, v34);
          uint64_t v57 = v53;
          *(void *)(a1 + 72) = v54;
          if (!v53) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v33 = v8 + 2;
LABEL_49:
          uint64_t v57 = v33;
          *(void *)(a1 + 72) = v34;
        }
        goto LABEL_63;
      case 9u:
        if (v9 != 72) {
          goto LABEL_55;
        }
        v5 |= 0x80u;
        int v36 = v8 + 1;
        uint64_t v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v55 = (char *)sub_188C138((uint64_t)v8, v37);
          uint64_t v57 = v55;
          *(void *)(a1 + 80) = v56;
          if (!v55) {
            goto LABEL_84;
          }
        }
        else
        {
          int v36 = v8 + 2;
LABEL_54:
          uint64_t v57 = v36;
          *(void *)(a1 + 80) = v37;
        }
        goto LABEL_63;
      default:
LABEL_55:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            std::string::size_type v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v57;
          }
          uint64_t v32 = (char *)sub_1885AC0(v9, v40, v8, a3);
LABEL_62:
          uint64_t v57 = v32;
          if (!v32) {
            goto LABEL_84;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, &v57, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_84:
        }
          uint64_t v57 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v57;
    }
  }
}

char *sub_15198CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1518D50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_151995C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 48);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 56);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(void *)(a1 + 64);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 88);
    unsigned char *v4 = 48;
    v4[1] = v22;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_38:
      if ((v6 & 0x40) == 0) {
        goto LABEL_55;
      }
      goto LABEL_49;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_38;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 24);
  unsigned char *v4 = 58;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    uint64_t v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    uint64_t v25 = v4 + 2;
  }
  char v4 = sub_1518FA4(v23, (unint64_t)v25, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_49:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v26 = *(void *)(a1 + 72);
    unsigned char *v4 = 64;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_55:
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v29 = *(void *)(a1 + 80);
    unsigned char *v4 = 72;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unint64_t v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    int v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    int v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_1519E20(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    uint64_t v4 = sub_15191C4(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  v3 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_24:
  v3 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_14:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_15:
  if ((v2 & 0x100) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1519FDC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v9 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v9 = (void *)*v9;
        }
        std::string::pointer data = (std::string *)sub_15200B8((uint64_t)v9);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v10 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v10 = &off_253C750;
      }
      uint64_t result = sub_117EF50(data, (uint64_t)v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_27;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_27:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
LABEL_28:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_31:
    v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    std::string::value_type v5 = *(unsigned char *)(a2 + 88);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    v3[3].__r_.__value_.__s.__data_[16] = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_151A12C()
{
  return 1;
}

void *sub_151A134@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareRouteLeg");
}

uint64_t sub_151A144(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24BE070;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_151A188(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BE070;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  std::string::value_type v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F19C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      int *v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_151A2B4(_Unwind_Exception *a1)
{
  sub_152EE04(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_151A2FC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  std::string::value_type v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_152EE04((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151A3A8(uint64_t a1)
{
  sub_151A2FC(a1);

  operator delete();
}

uint64_t sub_151A3E0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_151B020(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_151A494(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)unint64_t v31 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 5)
    {
      if (v8 == 42)
      {
        unint64_t v16 = v7 - 1;
        while (1)
        {
          unint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)unint64_t v31 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_1520260(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            unint64_t v17 = *(unsigned __int8 **)v31;
          }
          unint64_t v16 = sub_151A73C(a3, v20, v17);
          *(void *)unint64_t v31 = v16;
          if (!v16) {
            goto LABEL_54;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 42) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    unsigned int v24 = (std::string *)sub_1880F84((void *)(a1 + 48), v23);
    unint64_t v15 = (void *)sub_188C244(v24, *(char **)v31, (uint64_t)a3);
LABEL_35:
    *(void *)unint64_t v31 = v15;
    if (!v15) {
      goto LABEL_54;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v25 = v7 + 1;
    unint64_t v26 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    int v27 = *v25;
    int v28 = v26 + (v27 << 7);
    unint64_t v26 = (v28 - 128);
    if (v27 < 0)
    {
      *(void *)unint64_t v31 = sub_188C138((uint64_t)v7, (v28 - 128));
      if (!*(void *)v31) {
        goto LABEL_54;
      }
      unint64_t v26 = v29;
    }
    else
    {
      uint64_t v25 = v7 + 2;
LABEL_40:
      *(void *)unint64_t v31 = v25;
    }
    if (v26 > 4)
    {
      if (*v6) {
        unint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v26, v30);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v26;
    }
    goto LABEL_43;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v31;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v31;
  }
LABEL_54:
  *(void *)unint64_t v31 = 0;
  return *(void *)v31;
}

char *sub_151A73C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151B0F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_151A7CC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 42;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_151B740(v12, (unint64_t)v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_151A9B0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_151BAA8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v12 = *(_DWORD *)(a1 + 56);
      if (v12 < 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v13;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_151AAE4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F19C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_151AC0C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_151A3E0(a1);
    sub_151AAE4(a1, a2);
  }
}

uint64_t sub_151AC58()
{
  return 1;
}

void *sub_151AC60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareResponse");
}

uint64_t sub_151AC70(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24BE0F0;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a2;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = a2;
  *(void *)(result + 88) = a2;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

uint64_t sub_151ACB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BE0F0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F228(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      int *v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_152F2B4((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v16 = *(_DWORD *)(a2 + 72);
  if (v16)
  {
    sub_188CA54((unsigned int *)(a1 + 72), v16);
    uint64_t v17 = *(void **)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy(v17, *(const void **)(a2 + 80), 8 * *(int *)(a2 + 72));
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  int v18 = *(_DWORD *)(a2 + 96);
  if (v18)
  {
    uint64_t v19 = *(void *)(a2 + 104);
    uint64_t v20 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_152F340((uint64_t *)(a1 + 88), v20, (uint64_t *)(v19 + 8), v18, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v21 = *(_DWORD *)(a1 + 96) + v18;
    *(_DWORD *)(a1 + 96) = v21;
    uint64_t v22 = *(int **)(a1 + 104);
    if (*v22 < v21) {
      *uint64_t v22 = v21;
    }
  }
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23) {
    sub_188B4F8(v4, (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  return a1;
}

void sub_151AEC8(_Unwind_Exception *a1)
{
  sub_152EF84(v6);
  sub_1889DA8(v5);
  sub_152EF04(v4);
  sub_152EE84(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_151AF48(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_152EF84(a1 + 11);
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_152EF04(a1 + 6);
  sub_152EE84(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151AFE8(void *a1)
{
  sub_151AF48(a1);

  operator delete();
}

uint64_t sub_151B020(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_151D21C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_151E390(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  uint64_t v8 = *(unsigned int *)(v1 + 96);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 104) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_151BFF0(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 96) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 104) = 0;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_151B0F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v44 = a2;
  if ((sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v44 + 1;
      unsigned int v8 = *v44;
      if (*v44 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v44, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v44 + 2;
        }
      }
      uint64_t v44 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_64;
          }
          uint64_t v11 = v7 + 1;
          unint64_t v12 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          int v14 = v12 + (v13 << 7);
          unint64_t v12 = (v14 - 128);
          if (v13 < 0)
          {
            uint64_t v44 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
            if (!v44) {
              return 0;
            }
            unint64_t v12 = v39;
          }
          else
          {
            uint64_t v11 = v7 + 2;
LABEL_13:
            uint64_t v44 = v11;
          }
          if (v12 > 0xC)
          {
            if (*v6) {
              std::string::size_type v43 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              std::string::size_type v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(1, v12, v43);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 1u;
            *(_DWORD *)(a1 + 112) = v12;
          }
          goto LABEL_72;
        case 2u:
          if (v8 != 18) {
            goto LABEL_64;
          }
          uint64_t v15 = v7 - 1;
          while (1)
          {
            int v16 = (unsigned __int8 *)(v15 + 1);
            uint64_t v44 = v15 + 1;
            uint64_t v17 = *(_DWORD **)(a1 + 40);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 32) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              uint64_t v20 = sub_152040C(*(void *)(a1 + 24));
              uint64_t v19 = sub_188CDC8(a1 + 24, v20);
              int v16 = (unsigned __int8 *)v44;
            }
            uint64_t v15 = sub_151B590(a3, v19, v16);
            uint64_t v44 = v15;
            if (!v15) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
              goto LABEL_72;
            }
          }
        case 3u:
          if (v8 != 26) {
            goto LABEL_64;
          }
          int v21 = v7 - 1;
          while (1)
          {
            uint64_t v22 = (unsigned __int8 *)(v21 + 1);
            uint64_t v44 = v21 + 1;
            uint64_t v23 = *(_DWORD **)(a1 + 64);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 56) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              uint64_t v26 = sub_15204B8(*(void *)(a1 + 48));
              uint64_t v25 = sub_188CDC8(a1 + 48, v26);
              uint64_t v22 = (unsigned __int8 *)v44;
            }
            int v21 = sub_151B620(a3, v25, v22);
            uint64_t v44 = v21;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
              goto LABEL_72;
            }
          }
        case 4u:
          if (v8 == 32)
          {
            int v27 = v7 - 1;
            while (1)
            {
              uint64_t v44 = v27 + 1;
              uint64_t v28 = v27[1];
              if (v27[1] < 0)
              {
                int v29 = v28 + (v27[2] << 7);
                uint64_t v28 = (v29 - 128);
                if (v27[2] < 0)
                {
                  int v27 = (char *)sub_188C138((uint64_t)(v27 + 1), (v29 - 128));
                  uint64_t v28 = v30;
                }
                else
                {
                  v27 += 3;
                }
              }
              else
              {
                v27 += 2;
              }
              uint64_t v44 = v27;
              uint64_t v31 = *(unsigned int *)(a1 + 72);
              if (v31 == *(_DWORD *)(a1 + 76))
              {
                int v32 = v31 + 1;
                sub_188CA54((unsigned int *)(a1 + 72), v31 + 1);
                *(void *)(*(void *)(a1 + 80) + 8 * v31) = v28;
                int v27 = v44;
              }
              else
              {
                *(void *)(*(void *)(a1 + 80) + 8 * v31) = v28;
                int v32 = v31 + 1;
              }
              *(_DWORD *)(a1 + 72) = v32;
              if (!v27) {
                return 0;
              }
              if (*(void *)a3 <= (unint64_t)v27 || *v27 != 32) {
                goto LABEL_72;
              }
            }
          }
          if (v8 == 34)
          {
            std::string::size_type v40 = sub_188C2EC((unsigned int *)(a1 + 72), (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_64:
            if (v8) {
              BOOL v41 = (v8 & 7) == 4;
            }
            else {
              BOOL v41 = 1;
            }
            if (v41)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                return v44;
              }
              return 0;
            }
            if (*v6)
            {
              uint64_t v42 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = v44;
            }
            std::string::size_type v40 = sub_1885AC0(v8, v42, v7, a3);
          }
          uint64_t v44 = (char *)v40;
          if (!v40) {
            return 0;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            return v44;
          }
          break;
        case 5u:
          if (v8 != 42) {
            goto LABEL_64;
          }
          unint64_t v33 = v7 - 1;
          while (1)
          {
            unint64_t v34 = (unsigned __int8 *)(v33 + 1);
            uint64_t v44 = v33 + 1;
            int v35 = *(_DWORD **)(a1 + 104);
            if (v35 && (uint64_t v36 = *(int *)(a1 + 96), (int)v36 < *v35))
            {
              *(_DWORD *)(a1 + 96) = v36 + 1;
              uint64_t v37 = *(void *)&v35[2 * v36 + 2];
            }
            else
            {
              sub_1520314(*(void *)(a1 + 88));
              uint64_t v37 = sub_188CDC8(a1 + 88, v38);
              unint64_t v34 = (unsigned __int8 *)v44;
            }
            unint64_t v33 = sub_151B6B0(a3, v37, v34);
            uint64_t v44 = v33;
            if (!v33) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v33 || *v33 != 42) {
              goto LABEL_72;
            }
          }
        default:
          goto LABEL_64;
      }
    }
  }
  return v44;
}

char *sub_151B590(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151D2B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_151B620(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151E43C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_151B6B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151C01C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_151B740(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 112);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        int v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        int v13 = v4 + 2;
      }
      uint64_t v4 = sub_151D8DC(v11, (unint64_t)v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_151E7D0(v16, v18, a3);
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 72);
  if ((int)v19 >= 1)
  {
    for (uint64_t k = 0; k != v19; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v21 = *(void *)(*(void *)(a1 + 80) + 8 * k);
      unsigned char *v4 = 32;
      v4[1] = v21;
      if (v21 > 0x7F)
      {
        v4[1] = v21 | 0x80;
        unint64_t v22 = v21 >> 7;
        v4[2] = v21 >> 7;
        v4 += 3;
        if (v21 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v23 = v22 >> 14;
            v22 >>= 7;
            *v4++ = v22;
          }
          while (v23);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v24 = *(_DWORD *)(a1 + 96);
  if (v24)
  {
    for (int m = 0; m != v24; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 104) + 8 * m + 8);
      unsigned char *v4 = 42;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        uint64_t v28 = v4 + 2;
      }
      uint64_t v4 = sub_151C354(v26, (unint64_t)v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    int v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    int v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_151BAA8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_151DD14(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_151EA74(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = sub_188D5A8((unsigned int *)(a1 + 72));
  uint64_t v16 = *(int *)(a1 + 96);
  uint64_t v17 = v15 + v16 + v9 + *(unsigned int *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 104);
  if (v18) {
    uint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    uint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      unint64_t v22 = sub_151C66C(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v23 = *(_DWORD *)(a1 + 112);
    uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v23 >= 0) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 11;
    }
    v17 += v25;
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v17 += v29;
  }
  *(_DWORD *)(a1 + 20) = v17;
  return v17;
}

void sub_151BC44(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F228((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_152F2B4((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 72);
    sub_188CA54((unsigned int *)(a1 + 72), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v16 + 8 * v15), *(const void **)(a2 + 80), 8 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_152F340((uint64_t *)(a1 + 88), v19, v18, v17, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v20 = *(_DWORD *)(a1 + 96) + v17;
    *(_DWORD *)(a1 + 96) = v20;
    uint64_t v21 = *(int **)(a1 + 104);
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v22 = *(_DWORD *)(a2 + 112);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 112) = v22;
  }
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_151BE3C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_151B020(a1);
    sub_151BC44(a1, a2);
  }
}

uint64_t sub_151BE88()
{
  return 1;
}

__n128 sub_151BE90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  uint64_t v8 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v8;
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = v10;
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  __n128 result = *(__n128 *)(a2 + 88);
  *(__n128 *)(a1 + 88) = result;
  *(void *)(a2 + 88) = v11;
  *(void *)(a2 + 96) = v12;
  uint64_t v14 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a2 + 104) = v14;
  LODWORD(v14) = *(_DWORD *)(a1 + 112);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a2 + 112) = v14;
  return result;
}

void *sub_151BF34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareRouteResponse");
}

void *sub_151BF44(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151BFB8(void *a1)
{
  sub_151BF44(a1);

  operator delete();
}

uint64_t sub_151BFF0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_151C01C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v39 + 2;
      }
    }
    unint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unint64_t v39 = v12;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_41;
        }
        uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unint64_t v39 = v29;
        *(_DWORD *)(a1 + 40) = v30;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 1u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unint64_t v31 = (char *)sub_188C138((uint64_t)v8, v16);
          unint64_t v39 = v31;
          *(void *)(a1 + 24) = v32;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          unint64_t v39 = v15;
          *(void *)(a1 + 24) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        v5 |= 2u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v19);
          unint64_t v39 = v33;
          *(void *)(a1 + 32) = v34;
          if (!v33) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          unint64_t v39 = v18;
          *(void *)(a1 + 32) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v35 = (char *)sub_188C138((uint64_t)v8, v22);
          unint64_t v39 = v35;
          *(void *)(a1 + 48) = v36;
          if (!v35) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          unint64_t v39 = v21;
          *(void *)(a1 + 48) = v22;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 8u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v37 = (char *)sub_188C0D0((uint64_t)v8, v25);
          unint64_t v39 = v37;
          *(_DWORD *)(a1 + 44) = v38;
          if (!v37) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          unint64_t v39 = v24;
          *(_DWORD *)(a1 + 44) = v25;
        }
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            unint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v39;
          }
          unint64_t v39 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v39) {
            goto LABEL_56;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_56:
        }
          unint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

unsigned char *sub_151C354(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

unint64_t sub_151C66C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_12;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
LABEL_11:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_12:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_151C78C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    result[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
LABEL_8:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_9:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_151C810()
{
  return 1;
}

void *sub_151C818@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareLegRuleMatch");
}

void *sub_151C828(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  char *result = off_24BE1F0;
  result[1] = v3;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_151C858(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24BE1F0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_151C8D4(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_151C908(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151C97C(void *a1)
{
  sub_151C908(a1);

  operator delete();
}

uint64_t sub_151C9B4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_151C9D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v26 = v22;
    *(_DWORD *)(a1 + 28) = v23;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    unint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v26 = v18;
    }
    if (sub_15171DC(v19))
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    else
    {
      if (*v7) {
        int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_151CC10(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_151CDB4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_9;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 0x80000000) == 0)
  {
    uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v2 = 11;
  if ((v1 & 2) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_151CE68(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_151C9B4((uint64_t)result);
    return sub_117EF04(v4, a2);
  }
  return result;
}

uint64_t sub_151CEB4()
{
  return 1;
}

uint64_t sub_151CEBC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(result + 24);
  *(void *)(result + 24) = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  return result;
}

void *sub_151CEF0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.Price");
}

uint64_t sub_151CF00(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BE270;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    unint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188CA54((unsigned int *)(a1 + 40), v7);
    unint64_t v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9) {
    sub_188B4F8(v4, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v10 = *(_DWORD *)(a2 + 16);
  if (v10) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v10 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  uint64_t v11 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 72) = v11;
  return a1;
}

void sub_151D07C()
{
}

uint64_t sub_151D104(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253C7F8)
  {
    int v5 = *(void **)(a1 + 56);
    if (v5)
    {
      sub_151C908(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_151FB64(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151D1E4(uint64_t a1)
{
  sub_151D104(a1);

  operator delete();
}

uint64_t sub_151D21C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_151C9B4(*(void *)(result + 56));
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 64);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  if ((v2 & 0x1C) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(_DWORD *)(v1 + 80) = 1;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_151D2B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v51 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v51, a3[11].i32[1]) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = v51 + 1;
      unsigned int v9 = *v51;
      if (*v51 < 0)
      {
        int v10 = *v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          unint64_t v8 = (char *)sub_188C180((uint64_t)v51, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          unint64_t v8 = v51 + 2;
        }
      }
      uint64_t v51 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_82;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v13 = *(void **)(a1 + 56);
          if (!v13)
          {
            unint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unint64_t v14 = (void *)*v14;
            }
            uint64_t v13 = sub_1520394((uint64_t)v14);
            *(void *)(a1 + 56) = v13;
            unint64_t v8 = v51;
          }
          unint64_t v15 = sub_151D84C(a3, (uint64_t)v13, (unsigned __int8 *)v8);
          goto LABEL_89;
        case 2u:
          if (v9 != 16) {
            goto LABEL_82;
          }
          v5 |= 4u;
          int v16 = v8 + 1;
          int v17 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v18 = *v16;
          int v17 = v17 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            std::string::size_type v43 = (char *)sub_188C0D0((uint64_t)v8, v17);
            uint64_t v51 = v43;
            *(_DWORD *)(a1 + 72) = v44;
            if (!v43) {
              goto LABEL_99;
            }
          }
          else
          {
            int v16 = v8 + 2;
LABEL_19:
            uint64_t v51 = v16;
            *(_DWORD *)(a1 + 72) = v17;
          }
          goto LABEL_90;
        case 3u:
          if (v9 != 24) {
            goto LABEL_82;
          }
          v5 |= 8u;
          unint64_t v19 = v8 + 1;
          int v20 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v21 = *v19;
          int v20 = v20 + (v21 << 7) - 128;
          if (v21 < 0)
          {
            uint64_t v45 = (char *)sub_188C0D0((uint64_t)v8, v20);
            uint64_t v51 = v45;
            *(_DWORD *)(a1 + 76) = v46;
            if (!v45) {
              goto LABEL_99;
            }
          }
          else
          {
            unint64_t v19 = v8 + 2;
LABEL_24:
            uint64_t v51 = v19;
            *(_DWORD *)(a1 + 76) = v20;
          }
          goto LABEL_90;
        case 4u:
          if (v9 == 32)
          {
            uint64_t v22 = v8 - 1;
            while (1)
            {
              uint64_t v51 = v22 + 1;
              unint64_t v23 = v22[1];
              unint64_t v24 = v22 + 2;
              if (v22[1] < 0)
              {
                int v25 = *v24;
                int v26 = v23 + (v25 << 7);
                unint64_t v23 = (v26 - 128);
                if (v25 < 0)
                {
                  uint64_t v51 = (char *)sub_188C138((uint64_t)(v22 + 1), (v26 - 128));
                  if (!v51) {
                    goto LABEL_99;
                  }
                  unint64_t v23 = v29;
                  goto LABEL_31;
                }
                unint64_t v24 = v22 + 3;
              }
              uint64_t v51 = v24;
LABEL_31:
              if (v23 > 2)
              {
                if (*v7) {
                  int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(4, v23, v30);
              }
              else
              {
                uint64_t v27 = *(unsigned int *)(a1 + 24);
                if (v27 == *(_DWORD *)(a1 + 28))
                {
                  int v28 = v27 + 1;
                  sub_188C80C((unsigned int *)(a1 + 24), v27 + 1);
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                  int v28 = v27 + 1;
                }
                *(_DWORD *)(a1 + 24) = v28;
              }
              uint64_t v22 = v51;
              if (*(void *)a3 <= (unint64_t)v51 || *v51 != 32) {
                goto LABEL_90;
              }
            }
          }
          if (v9 == 34)
          {
            *(void *)&long long v52 = a1 + 24;
            *((void *)&v52 + 1) = sub_15171D0;
            uint64_t v53 = a1 + 8;
            int v54 = 4;
            unint64_t v15 = sub_1112E88((uint64_t)a3, v8, &v52);
          }
          else
          {
LABEL_82:
            if (v9) {
              BOOL v48 = (v9 & 7) == 4;
            }
            else {
              BOOL v48 = 1;
            }
            if (v48)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_99:
              uint64_t v51 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v51;
            }
            unint64_t v15 = (char *)sub_1885AC0(v9, v49, v8, a3);
          }
LABEL_89:
          uint64_t v51 = v15;
          if (!v15) {
            goto LABEL_99;
          }
LABEL_90:
          if (sub_11947B8((uint64_t)a3, &v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 6u:
          if (v9 != 50) {
            goto LABEL_82;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v31 = *(void *)(a1 + 64);
          if (!v31)
          {
            uint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v32 = (void *)*v32;
            }
            uint64_t v31 = sub_15205FC((uint64_t)v32);
            *(void *)(a1 + 64) = v31;
            unint64_t v8 = v51;
          }
          unint64_t v15 = sub_15187D4(a3, v31, (unsigned __int8 *)v8);
          goto LABEL_89;
        case 7u:
          if (v9 == 56)
          {
            uint64_t v33 = v8 - 1;
            while (1)
            {
              uint64_t v51 = v33 + 1;
              uint64_t v34 = v33[1];
              if (v33[1] < 0)
              {
                int v35 = v34 + (v33[2] << 7);
                uint64_t v34 = (v35 - 128);
                if (v33[2] < 0)
                {
                  uint64_t v33 = (char *)sub_188C138((uint64_t)(v33 + 1), (v35 - 128));
                  uint64_t v34 = v36;
                }
                else
                {
                  v33 += 3;
                }
              }
              else
              {
                v33 += 2;
              }
              uint64_t v51 = v33;
              uint64_t v37 = *(unsigned int *)(a1 + 40);
              if (v37 == *(_DWORD *)(a1 + 44))
              {
                int v38 = v37 + 1;
                sub_188CA54((unsigned int *)(a1 + 40), v37 + 1);
                *(void *)(*(void *)(a1 + 48) + 8 * v37) = v34;
                uint64_t v33 = v51;
              }
              else
              {
                *(void *)(*(void *)(a1 + 48) + 8 * v37) = v34;
                int v38 = v37 + 1;
              }
              *(_DWORD *)(a1 + 40) = v38;
              if (!v33) {
                goto LABEL_99;
              }
              if (*(void *)a3 <= (unint64_t)v33 || *v33 != 56) {
                goto LABEL_90;
              }
            }
          }
          if (v9 != 58) {
            goto LABEL_82;
          }
          unint64_t v15 = (char *)sub_188C2EC((unsigned int *)(a1 + 40), (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_89;
        case 8u:
          if (v9 != 64) {
            goto LABEL_82;
          }
          unint64_t v39 = v8 + 1;
          unint64_t v40 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_69;
          }
          int v41 = *v39;
          int v42 = v40 + (v41 << 7);
          unint64_t v40 = (v42 - 128);
          if (v41 < 0)
          {
            uint64_t v51 = (char *)sub_188C138((uint64_t)v8, (v42 - 128));
            if (!v51) {
              goto LABEL_99;
            }
            unint64_t v40 = v47;
          }
          else
          {
            unint64_t v39 = v8 + 2;
LABEL_69:
            uint64_t v51 = v39;
          }
          if (sub_119BBA8(v40))
          {
            *(_DWORD *)(a1 + 16) |= 0x10u;
            *(_DWORD *)(a1 + 80) = v40;
          }
          else
          {
            if (*v7) {
              uint64_t v50 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(8, v40, v50);
          }
          goto LABEL_90;
        default:
          goto LABEL_82;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v51;
}

char *sub_151D84C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151C9D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_151D8DC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_151CC10(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 72);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 64);
    unsigned char *v4 = 50;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      unint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      unint64_t v23 = v4 + 2;
    }
    char v4 = sub_151FDB8(v21, (unint64_t)v23, a3);
  }
  uint64_t v24 = *(unsigned int *)(a1 + 40);
  if ((int)v24 >= 1)
  {
    for (uint64_t j = 0; j != v24; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v26 = *(void *)(*(void *)(a1 + 48) + 8 * j);
      unsigned char *v4 = 56;
      v4[1] = v26;
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        unint64_t v27 = v26 >> 7;
        v4[2] = v26 >> 7;
        v4 += 3;
        if (v26 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v28 = v27 >> 14;
            v27 >>= 7;
            *v4++ = v27;
          }
          while (v28);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v29 = *(int *)(a1 + 80);
    unsigned char *v4 = 64;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unint64_t v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    int v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    int v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_151DD14(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + sub_188D5A8((unsigned int *)(a1 + 40)) + v2 + *(unsigned int *)(a1 + 40);
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_151CDB4(*(void *)(a1 + 56));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v10 = sub_151FEE0(*(void *)(a1 + 64));
    v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    v7 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 8) == 0)
    {
LABEL_14:
      if ((v8 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
LABEL_19:
    v7 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0) {
      goto LABEL_24;
    }
LABEL_20:
    int v11 = *(_DWORD *)(a1 + 80);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v12;
  }
LABEL_24:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v7 += v16;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_151DEE0(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[8 * v9], *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 0x1F) != 0)
  {
    if (v11)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v13 = (std::string *)v3[2].__r_.__value_.__l.__size_;
      if (!v13)
      {
        std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_1520394((uint64_t)v15);
        v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_253C7D8;
      }
      uint64_t result = sub_117EF04(v13, (uint64_t)v16);
      if ((v11 & 2) == 0)
      {
LABEL_8:
        if ((v11 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_33;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_8;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    int v17 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v19 = (void *)*v19;
      }
      int v17 = (std::string *)sub_15205FC((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v20 = &off_253C8D0;
    }
    uint64_t result = sub_11A7934(v17, (uint64_t)v20);
    if ((v11 & 4) == 0)
    {
LABEL_9:
      if ((v11 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_34;
    }
LABEL_33:
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v11 & 8) == 0)
    {
LABEL_10:
      if ((v11 & 0x10) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
        goto LABEL_13;
      }
LABEL_11:
      LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
      goto LABEL_12;
    }
LABEL_34:
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
    if ((v11 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_151E0B0()
{
  return 1;
}

void *sub_151E0B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.BaseFare");
}

double sub_151E0C8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24BE2F0;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  return result;
}

uint64_t sub_151E100(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BE2F0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F3CC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      int *v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void sub_151E22C()
{
}

uint64_t sub_151E294(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253C850)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_151FB64(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_152F004((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151E358(uint64_t a1)
{
  sub_151E294(a1);

  operator delete();
}

uint64_t sub_151E390(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_151F064(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(v1 + 48);
    char v7 = *(unsigned char *)(v6 + 8);
    double result = v6 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v7) {
      double result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v5 & 6) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_151E43C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_35;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v33 = v12 + 1;
          std::string::size_type v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1520554(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            uint64_t v13 = (unsigned __int8 *)v33;
          }
          uint64_t v12 = (char *)sub_151E740(a3, v16, v13);
          uint64_t v33 = v12;
          if (!v12) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_43;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_35;
        }
        v5 |= 2u;
        std::string::size_type v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v33 = v29;
          *(_DWORD *)(a1 + 56) = v30;
          if (!v29) {
            goto LABEL_52;
          }
        }
        else
        {
          std::string::size_type v18 = v8 + 2;
LABEL_23:
          uint64_t v33 = v18;
          *(_DWORD *)(a1 + 56) = v19;
        }
        goto LABEL_43;
      case 3u:
        if (v9 != 24) {
          goto LABEL_35;
        }
        v5 |= 4u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unint64_t v31 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v33 = v31;
          *(_DWORD *)(a1 + 60) = v32;
          if (!v31) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v33 = v21;
          *(_DWORD *)(a1 + 60) = v22;
        }
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 48);
        if (!v24)
        {
          int v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v25 = (void *)*v25;
          }
          uint64_t v24 = sub_15205FC((uint64_t)v25);
          *(void *)(a1 + 48) = v24;
          uint64_t v8 = v33;
        }
        unint64_t v26 = sub_15187D4(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_42;
      default:
LABEL_35:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            unint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v33;
          }
          unint64_t v26 = (char *)sub_1885AC0(v9, v28, v8, a3);
LABEL_42:
          uint64_t v33 = v26;
          if (!v26) {
            goto LABEL_52;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

uint64_t sub_151E740(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_151F100(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_151E7D0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_151F4D4(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 56);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 60);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v18 = *(void *)(a1 + 48);
    *__dst = 42;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    __dst[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, __dst + 1);
    }
    else {
      int v20 = __dst + 2;
    }
    __dst = sub_151FDB8(v18, (unint64_t)v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_151EA74(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_151F728(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v11 = sub_151FEE0(*(void *)(a1 + 48));
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0) {
LABEL_13:
    }
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_151EBBC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_152F3CC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v13 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v13 = (void *)*v13;
        }
        std::string::pointer data = (std::string *)sub_15205FC((uint64_t)v13);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v14 = &off_253C8D0;
      }
      uint64_t result = sub_11A7934(data, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_151ED14(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_151E390((uint64_t)result);
    return sub_151EBBC(v4, a2);
  }
  return result;
}

uint64_t sub_151ED60()
{
  return 1;
}

void *sub_151ED68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.Surcharge");
}

uint64_t sub_151ED78(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24BE370;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_151EDBC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24BE370;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v8 = *(_DWORD *)(a2 + 16);
  }
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_151EEF4()
{
}

uint64_t sub_151EF58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  int v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253C890)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_151C908(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151F02C(uint64_t a1)
{
  sub_151EF58(a1);

  operator delete();
}

uint64_t sub_151F064(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_151C9B4(*(void *)(result + 48));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_151F100(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    return *(void *)v36;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v8 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)uint64_t v36 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v12 = *(void **)(a1 + 48);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v13 = (void *)*v13;
          }
          unint64_t v12 = sub_1520394((uint64_t)v13);
          *(void *)(a1 + 48) = v12;
          uint64_t v7 = *(unsigned __int8 **)v36;
        }
        unsigned int v14 = sub_151D84C(a3, (uint64_t)v12, v7);
        goto LABEL_63;
      case 2u:
        if (v8 != 16) {
          goto LABEL_56;
        }
        unsigned int v15 = (char *)(v7 + 1);
        unint64_t v16 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v36 = sub_188C138((uint64_t)v7, (v18 - 128));
          if (!*(void *)v36) {
            return 0;
          }
          unint64_t v16 = v32;
        }
        else
        {
          unsigned int v15 = (char *)(v7 + 2);
LABEL_19:
          *(void *)uint64_t v36 = v15;
        }
        if (v16 > 0xF || v16 == 8)
        {
          if (*v6) {
            uint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 56) = v16;
        }
        goto LABEL_64;
      case 3u:
        if (v8 != 26) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (uint64_t *)*v21;
        }
        int v22 = (std::string *)sub_1880F84((void *)(a1 + 40), v21);
        unsigned int v14 = (void *)sub_188C244(v22, *(char **)v36, (uint64_t)a3);
        goto LABEL_63;
      case 4u:
        if (v8 == 32)
        {
          uint64_t v23 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)uint64_t v36 = v23 + 1;
            unint64_t v24 = *(unsigned __int8 *)(v23 + 1);
            uint64_t v25 = (char *)(v23 + 2);
            if (*(char *)(v23 + 1) < 0)
            {
              int v26 = *v25;
              int v27 = v24 + (v26 << 7);
              unint64_t v24 = (v27 - 128);
              if (v26 < 0)
              {
                *(void *)uint64_t v36 = sub_188C138(v23 + 1, (v27 - 128));
                if (!*(void *)v36) {
                  return 0;
                }
                unint64_t v24 = v30;
                goto LABEL_35;
              }
              uint64_t v25 = (char *)(v23 + 3);
            }
            *(void *)uint64_t v36 = v25;
LABEL_35:
            if (v24 > 2)
            {
              if (*v6) {
                unint64_t v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v24, v31);
            }
            else
            {
              uint64_t v28 = *(unsigned int *)(a1 + 24);
              if (v28 == *(_DWORD *)(a1 + 28))
              {
                int v29 = v28 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v28 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v28) = v24;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v28) = v24;
                int v29 = v28 + 1;
              }
              *(_DWORD *)(a1 + 24) = v29;
            }
            uint64_t v23 = *(void *)v36;
            if (*(void *)a3 <= *(void *)v36 || **(unsigned char **)v36 != 32) {
              goto LABEL_64;
            }
          }
        }
        if (v8 == 34)
        {
          *(void *)&long long v37 = a1 + 24;
          *((void *)&v37 + 1) = sub_15171D0;
          uint64_t v38 = a1 + 8;
          int v39 = 4;
          unsigned int v14 = sub_1112E88((uint64_t)a3, (char *)v7, &v37);
LABEL_63:
          *(void *)uint64_t v36 = v14;
          if (!v14) {
            return 0;
          }
LABEL_64:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            return *(void *)v36;
          }
          continue;
        }
LABEL_56:
        if (v8) {
          BOOL v34 = (v8 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v6)
          {
            int v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v36;
          }
          unsigned int v14 = sub_1885AC0(v8, v35, (char *)v7, a3);
          goto LABEL_63;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v36;
      default:
        goto LABEL_56;
    }
  }
}

unsigned char *sub_151F4D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    uint64_t v4 = sub_151CC10(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 32;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_151F728(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v7 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_18;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v12 = sub_151CDB4(*(void *)(a1 + 48));
    v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0) {
      goto LABEL_22;
    }
LABEL_18:
    int v13 = *(_DWORD *)(a1 + 56);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v14;
  }
LABEL_22:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v7 += v18;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_151F89C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      std::string::pointer data = (std::string *)sub_1520394((uint64_t)v15);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v16 = &off_253C7D8;
    }
    uint64_t result = sub_117EF04(data, (uint64_t)v16);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_151F9F0(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_151F064((uint64_t)result);
    return sub_151F89C(v4, a2);
  }
  return result;
}

uint64_t sub_151FA3C()
{
  return 1;
}

__n128 sub_151FA44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = v7;
  LODWORD(v7) = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a2 + 56) = v7;
  return result;
}

void *sub_151FAA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.SurchargeUnit");
}

uint64_t sub_151FAB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24BE3F0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_151FB34(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_151FB64(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_151FBD8(void *a1)
{
  sub_151FB64(a1);

  operator delete();
}

char *sub_151FC10(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  int v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    unsigned int v19 = v6;
    if (v7 == 8)
    {
      uint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unsigned int v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        uint64_t v12 = v6 + 2;
      }
      unsigned int v19 = v12;
LABEL_20:
      if (v13 > 1)
      {
        if (*v5) {
          unint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_151FDB8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_151FEE0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_151FF54()
{
  return 1;
}

void *sub_151FF5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.farecore.FareOptions");
}

uint64_t sub_151FF6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BDE70;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(unsigned char *)(result + 56) = 0;
  *(_DWORD *)(result + 60) = 1;
  return result;
}

void *sub_152001C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  void *result = off_24BDEF0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_15200B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BDF70;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1520134(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24BDFF0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 73) = 0u;
  return result;
}

uint64_t sub_15201B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE070;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1520260(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE0F0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = a1;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

double sub_1520314(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24BE170;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(void *)(v2 + 48) = 0;
  return result;
}

void *sub_1520394(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BE1F0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_152040C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE270;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 1;
  return result;
}

uint64_t sub_15204B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE2F0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_1520554(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE370;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_15205FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BE3F0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1520678(int a1)
{
  uint64_t result = 1;
  if (a1 <= 899)
  {
    if (a1 > 299)
    {
      if (a1 <= 599)
      {
        if ((a1 - 400) >= 6 && a1 != 300 && a1 != 500) {
          return 0;
        }
      }
      else if ((a1 - 700) >= 0x12 && a1 != 600 && a1 != 800)
      {
        return 0;
      }
    }
    else if ((a1 - 100) >= 0x12 {
           && (a1 - 200) >= 0xA
    }
           && (a1 > 0xC || ((1 << a1) & 0x10FF) == 0))
    {
      return 0;
    }
  }
  else if (a1 <= 1099)
  {
    if ((a1 - 1000) >= 0x16 && (a1 - 900) >= 7) {
      return 0;
    }
  }
  else if (a1 > 1399)
  {
    if (a1 > 1599)
    {
      if ((a1 - 1600) >= 5 && (a1 - 1700) >= 2 && a1 != 1800) {
        return 0;
      }
    }
    else if ((a1 - 1500) >= 8 && (a1 - 1400) >= 3)
    {
      return 0;
    }
  }
  else if ((a1 - 1100) >= 0xF && (a1 - 1300) >= 8 && a1 != 1200)
  {
    return 0;
  }
  return result;
}

uint64_t sub_15207B0(unsigned int a1)
{
  return (a1 < 0x2A) & (0x3FFFFFF7E3FuLL >> a1);
}

BOOL sub_15207CC(unsigned int a1)
{
  return a1 < 4;
}

uint64_t sub_15207D8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15208A4(uint64_t a1)
{
  sub_15207D8(a1);

  operator delete();
}

uint64_t sub_15208DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1520994(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 6)
    {
      if (v8 == 50)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 4)
    {
      if (v8 == 34)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 3 && v8 == 26)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      int v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v22;
    }
    int v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_1520B84(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1520C9C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1520DBC()
{
  return 1;
}

void *sub_1520DC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.Text");
}

uint64_t sub_1520DD4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253C920)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_15207D8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_152F458((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1520E98(uint64_t a1)
{
  sub_1520DD4(a1);

  operator delete();
}

uint64_t sub_1520ED0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15208DC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_15208DC(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1520F64(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    unint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v7 + 1;
      unint64_t v17 = *v7;
      if (*v7 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          unint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v19 - 128));
          if (!v30) {
            return 0;
          }
          unint64_t v17 = v28;
          goto LABEL_26;
        }
        uint64_t v16 = v7 + 2;
      }
      unint64_t v30 = v16;
LABEL_26:
      if (v17 > 4)
      {
        if (*v6) {
          int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v17, v29);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 56) = v17;
      }
      goto LABEL_35;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void **)(a1 + 48);
    if (!v20)
    {
      uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_152D158((uint64_t)v21);
      *(void *)(a1 + 48) = v20;
      uint64_t v7 = v30;
    }
    uint64_t v15 = (char *)sub_1521214(a3, (uint64_t)v20, (unsigned __int8 *)v7);
LABEL_34:
    unint64_t v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    uint64_t v22 = v7 - 1;
    while (1)
    {
      uint64_t v23 = (unsigned __int8 *)(v22 + 1);
      unint64_t v30 = v22 + 1;
      unint64_t v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        int v27 = sub_152D158(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
        uint64_t v23 = (unsigned __int8 *)v30;
      }
      uint64_t v22 = (char *)sub_1521214(a3, v26, v23);
      unint64_t v30 = v22;
      if (!v22) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_35;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

uint64_t sub_1521214(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1520994(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15212A4(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1520B84(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 48);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      unint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      unint64_t v14 = __dst + 2;
    }
    __dst = sub_1520B84(v12, v14, a3);
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v15 = *(int *)(a1 + 56);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_15214CC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1520C9C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_1520C9C(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_15215EC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_152F6D8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v12 = (void *)*v12;
        }
        std::string::pointer data = (std::string *)sub_152D158((uint64_t)v12);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v13 = &off_253C8F0;
      }
      uint64_t result = sub_11D2930(data, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_152172C()
{
  return 1;
}

void *sub_1521734@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.LocalizedText");
}

void *sub_1521744(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15217B8(void *a1)
{
  sub_1521744(a1);

  operator delete();
}

uint64_t sub_15217F0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1521814(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v19 + 1;
    unsigned int v9 = *v19;
    if (*v19 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v19, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v19 + 2;
      }
    }
    int v19 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_20;
        }
        int v13 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
        goto LABEL_17;
      case 2u:
        if (v9 != 21) {
          goto LABEL_20;
        }
        int v14 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v14;
        goto LABEL_17;
      case 3u:
        if (v9 != 29) {
          goto LABEL_20;
        }
        int v15 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 32) = v15;
        goto LABEL_17;
      case 4u:
        if (v9 != 37) {
          goto LABEL_20;
        }
        int v16 = *(_DWORD *)v8;
        uint64_t v12 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 36) = v16;
LABEL_17:
        int v19 = v12;
        goto LABEL_18;
      default:
LABEL_20:
        if (v9) {
          BOOL v17 = (v9 & 7) == 4;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (*v7)
          {
            uint64_t v18 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v19;
          }
          int v19 = (char *)sub_1885AC0(v9, v18, v8, a3);
          if (!v19) {
            goto LABEL_31;
          }
LABEL_18:
          if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_31:
        }
          int v19 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v19;
    }
  }
}

_OWORD *sub_15219F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)int v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 5);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)int v4 = 21;
  *(_DWORD *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  *(unsigned char *)int v4 = 29;
  *(_DWORD *)((char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 36);
    *(unsigned char *)int v4 = 37;
    *(_DWORD *)((char *)v4 + 1) = v10;
    int v4 = (_OWORD *)((char *)v4 + 5);
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1521B8C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((v1 & 8) != 0) {
    v2 += 5;
  }
  if ((v1 & 0xF) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1521C00()
{
  return 1;
}

void *sub_1521C08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.Color");
}

char *sub_1521C18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1525308(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1521CA8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_1520ED0(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_15217F0(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1521D58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15220FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_1521DE8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    int v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      int v10 = (std::string *)sub_152D1E0((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_253C920;
    }
    uint64_t result = sub_15215EC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      int v14 = (std::string *)sub_152D284((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      BOOL v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      BOOL v17 = &off_253C960;
    }
    uint64_t result = sub_130E5F8(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

char *sub_1521F48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1520F64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1521FD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253C988)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1520DD4(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_1521744(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15220C4(uint64_t a1)
{
  sub_1521FD8(a1);

  operator delete();
}

uint64_t sub_15220FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v8;
    switch(v9 >> 3)
    {
      case 2u:
        if (v9 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        std::string::size_type v15 = (void *)sub_188C244(v14, *(char **)v27, (uint64_t)a3);
        goto LABEL_37;
      case 3u:
        if (v9 != 24) {
          goto LABEL_30;
        }
        v5 |= 8u;
        uint64_t v16 = (char *)(v8 + 1);
        int v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v25 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)int v27 = v25;
          *(_DWORD *)(a1 + 48) = v26;
          if (!v25) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)int v27 = v16;
          *(_DWORD *)(a1 + 48) = v17;
        }
        goto LABEL_38;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_152D1E0((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          int v8 = *(unsigned __int8 **)v27;
        }
        std::string::size_type v15 = sub_1521F48(a3, v19, v8);
        goto LABEL_37;
      case 5u:
        if (v9 != 42) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_152D284((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          int v8 = *(unsigned __int8 **)v27;
        }
        std::string::size_type v15 = sub_15223A8(a3, (uint64_t)v21, v8);
        goto LABEL_37;
      default:
LABEL_30:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v27;
          }
          std::string::size_type v15 = sub_1885AC0(v9, v24, (char *)v8, a3);
LABEL_37:
          *(void *)int v27 = v15;
          if (!v15) {
            goto LABEL_45;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          *(void *)int v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v27;
    }
  }
}

char *sub_15223A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1521814(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1522438(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 24;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_15212A4(v10, v12, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 42;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      std::string::size_type v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      std::string::size_type v15 = v4 + 2;
    }
    int v4 = (char *)sub_15219F0(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1522654(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15214CC(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v10 = sub_1521B8C(*(void *)(a1 + 40));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_12:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v11 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_15227A0()
{
  return 1;
}

void *sub_15227A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitShield");
}

uint64_t sub_15227B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1523A48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_1522848(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_152F4D8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15228C8(void *a1)
{
  sub_1522848(a1);

  operator delete();
}

uint64_t sub_1522900(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15231B8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1522994(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    unint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4)
    {
      if (v9 != 32) {
        goto LABEL_14;
      }
      v5 |= 1u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        unint64_t v32 = v16;
        *(void *)(a1 + 48) = v17;
        goto LABEL_41;
      }
      unint64_t v28 = (char *)sub_188C138((uint64_t)v8, v17);
      unint64_t v32 = v28;
      *(void *)(a1 + 48) = v29;
      if (!v28) {
        goto LABEL_50;
      }
      goto LABEL_41;
    }
    if (v12 == 3) {
      break;
    }
    if (v12 != 2 || v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v25 = v8 + 1;
    int v26 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    int v27 = *v25;
    int v26 = v26 + (v27 << 7) - 128;
    if ((v27 & 0x80000000) == 0)
    {
      uint64_t v25 = v8 + 2;
LABEL_40:
      unint64_t v32 = v25;
      *(_DWORD *)(a1 + 56) = v26;
      goto LABEL_41;
    }
    unint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v26);
    unint64_t v32 = v30;
    *(_DWORD *)(a1 + 56) = v31;
    if (!v30) {
      goto LABEL_50;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    uint64_t v19 = v8 - 1;
    while (1)
    {
      uint64_t v20 = (unsigned __int8 *)(v19 + 1);
      unint64_t v32 = v19 + 1;
      uint64_t v21 = *(_DWORD **)(a1 + 40);
      if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
      {
        *(_DWORD *)(a1 + 32) = v22 + 1;
        uint64_t v23 = *(void *)&v21[2 * v22 + 2];
      }
      else
      {
        unint64_t v24 = sub_152D42C(*(void *)(a1 + 24));
        uint64_t v23 = sub_188CDC8(a1 + 24, (uint64_t)v24);
        uint64_t v20 = (unsigned __int8 *)v32;
      }
      uint64_t v19 = sub_1522C1C(a3, v23, v20);
      unint64_t v32 = v19;
      if (!v19) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      std::string::size_type v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    unint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  unint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1522C1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15231E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1522CAC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      uint64_t v4 = sub_1523444(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(void *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1522EEC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      unint64_t v7 = sub_1523620(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1522FF4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_152F754(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_15230F4()
{
  return 1;
}

void *sub_15230FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitStopTimeExtraInformation");
}

void *sub_152310C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1523180(void *a1)
{
  sub_152310C(a1);

  operator delete();
}

uint64_t sub_15231B8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 29) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_15231E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        int v31 = v16;
        *(unsigned char *)(a1 + 36) = v17 != 0;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
      int v31 = v25;
      *(unsigned char *)(a1 + 36) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      int v31 = v19;
      *(void *)(a1 + 24) = v20;
      goto LABEL_36;
    }
    int v27 = (char *)sub_188C138((uint64_t)v8, v20);
    int v31 = v27;
    *(void *)(a1 + 24) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 2u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      int v31 = v22;
      *(_DWORD *)(a1 + 32) = v23;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    int v31 = v29;
    *(_DWORD *)(a1 + 32) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    int v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1523444(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

unint64_t sub_1523620(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    unint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    unint64_t v3 = v2 + 2;
  }
  else {
    unint64_t v3 = v2;
  }
LABEL_11:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_15236D0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result[1].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 36);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1523734()
{
  return 1;
}

void *sub_152373C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitStopSecondaryText");
}

uint64_t sub_152374C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24BE770;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = &qword_2550250;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 132) = 0u;
  return a1;
}

void sub_15237D8(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1523808(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253CA00)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_1520DD4(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 80);
    if (v7)
    {
      sub_1520DD4(v7);
      operator delete();
    }
    unsigned int v8 = *(void **)(a1 + 88);
    if (v8)
    {
      sub_1522848(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1523924(uint64_t a1)
{
  sub_1523808(a1);

  operator delete();
}

uint64_t sub_152395C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t result = sub_1520ED0(*(void *)(a1 + 72));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_19;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_20:
  uint64_t result = sub_1520ED0(*(void *)(a1 + 80));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1522900(*(void *)(a1 + 88));
LABEL_7:
  if ((v3 & 0xF0) != 0)
  {
    *(void *)(a1 + 96) = 0;
    *(void *)(a1 + 104) = 0;
    *(_DWORD *)(a1 + 112) = 0;
  }
  if ((v3 & 0x7F00) != 0)
  {
    *(_OWORD *)(a1 + 132) = 0u;
    *(_OWORD *)(a1 + 116) = 0u;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1523A48(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v85 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v85, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v8 = (unsigned __int8 *)(*(void *)v85 + 1);
      unsigned int v9 = **(unsigned char **)v85;
      if ((char)**(unsigned char **)v85 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v85, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          unsigned int v8 = (unsigned __int8 *)(*(void *)v85 + 2);
        }
      }
      *(void *)uint64_t v85 = v8;
      switch(v9 >> 3)
      {
        case 2u:
          if (v9 != 16) {
            goto LABEL_128;
          }
          v5 |= 0x10u;
          unint64_t v12 = (char *)(v8 + 1);
          uint64_t v13 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
            *(void *)uint64_t v85 = v12;
            *(void *)(a1 + 96) = v13;
            goto LABEL_138;
          }
          uint64_t v61 = sub_188C138((uint64_t)v8, v13);
          *(void *)uint64_t v85 = v61;
          *(void *)(a1 + 96) = v62;
          if (!v61) {
            goto LABEL_152;
          }
          goto LABEL_138;
        case 3u:
          if (v9 != 24) {
            goto LABEL_128;
          }
          v5 |= 0x20u;
          unint64_t v16 = (char *)(v8 + 1);
          LODWORD(v15) = *v8;
          if ((v15 & 0x80) == 0) {
            goto LABEL_18;
          }
          int v17 = *v16;
          uint64_t v15 = v15 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v63 = sub_188C138((uint64_t)v8, v15);
            *(void *)uint64_t v85 = v63;
            *(_DWORD *)(a1 + 104) = v64;
            if (!v63) {
              goto LABEL_152;
            }
          }
          else
          {
            unint64_t v16 = (char *)(v8 + 2);
LABEL_18:
            *(void *)uint64_t v85 = v16;
            *(_DWORD *)(a1 + 104) = v15;
          }
          goto LABEL_138;
        case 4u:
          if (v9 != 32) {
            goto LABEL_128;
          }
          v5 |= 0x40u;
          uint64_t v19 = (char *)(v8 + 1);
          LODWORD(v18) = *v8;
          if ((v18 & 0x80) == 0) {
            goto LABEL_23;
          }
          int v20 = *v19;
          uint64_t v18 = v18 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            uint64_t v65 = sub_188C138((uint64_t)v8, v18);
            *(void *)uint64_t v85 = v65;
            *(_DWORD *)(a1 + 108) = v66;
            if (!v65) {
              goto LABEL_152;
            }
          }
          else
          {
            uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
            *(void *)uint64_t v85 = v19;
            *(_DWORD *)(a1 + 108) = v18;
          }
          goto LABEL_138;
        case 5u:
          if (v9 != 42) {
            goto LABEL_128;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v21 = *(void *)(a1 + 72);
          if (v21) {
            goto LABEL_54;
          }
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_152D1E0((uint64_t)v22);
          *(void *)(a1 + 72) = v21;
          goto LABEL_53;
        case 6u:
          if (v9 != 48) {
            goto LABEL_128;
          }
          int v23 = (char *)(v8 + 1);
          unint64_t v24 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_33;
          }
          int v25 = *v23;
          int v26 = v24 + (v25 << 7);
          unint64_t v24 = (v26 - 128);
          if (v25 < 0)
          {
            *(void *)uint64_t v85 = sub_188C138((uint64_t)v8, (v26 - 128));
            if (!*(void *)v85) {
              goto LABEL_152;
            }
            unint64_t v24 = v67;
          }
          else
          {
            int v23 = (char *)(v8 + 2);
LABEL_33:
            *(void *)uint64_t v85 = v23;
          }
          if (v24 <= 3)
          {
            *(_DWORD *)(a1 + 40) |= 0x80u;
            *(_DWORD *)(a1 + 112) = v24;
            goto LABEL_138;
          }
          if (*v7) {
            int v83 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v83 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v84 = 6;
          goto LABEL_146;
        case 7u:
          if (v9 != 56) {
            goto LABEL_128;
          }
          int v27 = (char *)(v8 + 1);
          unint64_t v24 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_40;
          }
          int v28 = *v27;
          int v29 = v24 + (v28 << 7);
          unint64_t v24 = (v29 - 128);
          if (v28 < 0)
          {
            *(void *)uint64_t v85 = sub_188C138((uint64_t)v8, (v29 - 128));
            if (!*(void *)v85) {
              goto LABEL_152;
            }
            unint64_t v24 = v68;
          }
          else
          {
            int v27 = (char *)(v8 + 2);
LABEL_40:
            *(void *)uint64_t v85 = v27;
          }
          if (v24 > 3)
          {
            if (*v7) {
              int v83 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v83 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            int v84 = 7;
LABEL_146:
            sub_188C020(v84, v24, v83);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x100u;
            *(_DWORD *)(a1 + 116) = v24;
          }
          goto LABEL_138;
        case 8u:
          if (v9 != 64) {
            goto LABEL_128;
          }
          v5 |= 0x200u;
          int v30 = (char *)(v8 + 1);
          uint64_t v31 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_47;
          }
          int v32 = *v30;
          uint64_t v31 = v31 + (v32 << 7) - 128;
          if (v32 < 0)
          {
            uint64_t v69 = sub_188C138((uint64_t)v8, v31);
            *(void *)uint64_t v85 = v69;
            *(unsigned char *)(a1 + 120) = v70 != 0;
            if (!v69) {
              goto LABEL_152;
            }
          }
          else
          {
            int v30 = (char *)(v8 + 2);
LABEL_47:
            *(void *)uint64_t v85 = v30;
            *(unsigned char *)(a1 + 120) = v31 != 0;
          }
          goto LABEL_138;
        case 9u:
          if (v9 != 74) {
            goto LABEL_128;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v21 = *(void *)(a1 + 80);
          if (v21) {
            goto LABEL_54;
          }
          uint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v21 = sub_152D1E0((uint64_t)v33);
          *(void *)(a1 + 80) = v21;
LABEL_53:
          unsigned int v8 = *(unsigned __int8 **)v85;
LABEL_54:
          BOOL v34 = sub_1521F48(a3, v21, v8);
          goto LABEL_137;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_128;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v35 = *(void *)(a1 + 8);
          uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
          if (v35) {
            uint64_t v36 = (uint64_t *)*v36;
          }
          long long v37 = (std::string *)sub_1880F84((void *)(a1 + 64), v36);
          BOOL v34 = (void *)sub_188C244(v37, *(char **)v85, (uint64_t)a3);
          goto LABEL_137;
        case 0xBu:
          if (v9 != 88) {
            goto LABEL_128;
          }
          v5 |= 0x400u;
          int v39 = (char *)(v8 + 1);
          LODWORD(v38) = *v8;
          if ((v38 & 0x80) == 0) {
            goto LABEL_63;
          }
          int v40 = *v39;
          uint64_t v38 = v38 + (v40 << 7) - 128;
          if (v40 < 0)
          {
            uint64_t v71 = sub_188C138((uint64_t)v8, v38);
            *(void *)uint64_t v85 = v71;
            *(_DWORD *)(a1 + 124) = v72;
            if (!v71) {
              goto LABEL_152;
            }
          }
          else
          {
            int v39 = (char *)(v8 + 2);
LABEL_63:
            *(void *)uint64_t v85 = v39;
            *(_DWORD *)(a1 + 124) = v38;
          }
          goto LABEL_138;
        case 0xCu:
          if (v9 != 96) {
            goto LABEL_128;
          }
          v5 |= 0x800u;
          int v42 = (char *)(v8 + 1);
          LODWORD(v41) = *v8;
          if ((v41 & 0x80) == 0) {
            goto LABEL_68;
          }
          int v43 = *v42;
          uint64_t v41 = v41 + (v43 << 7) - 128;
          if (v43 < 0)
          {
            uint64_t v73 = sub_188C138((uint64_t)v8, v41);
            *(void *)uint64_t v85 = v73;
            *(_DWORD *)(a1 + 128) = v74;
            if (!v73) {
              goto LABEL_152;
            }
          }
          else
          {
            int v42 = (char *)(v8 + 2);
LABEL_68:
            *(void *)uint64_t v85 = v42;
            *(_DWORD *)(a1 + 128) = v41;
          }
          goto LABEL_138;
        case 0xDu:
          if (v9 != 104) {
            goto LABEL_128;
          }
          v5 |= 0x1000u;
          int v44 = (char *)(v8 + 1);
          int v45 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_73;
          }
          int v46 = *v44;
          int v45 = v45 + (v46 << 7) - 128;
          if (v46 < 0)
          {
            uint64_t v75 = sub_188C0D0((uint64_t)v8, v45);
            *(void *)uint64_t v85 = v75;
            *(_DWORD *)(a1 + 132) = v76;
            if (!v75) {
              goto LABEL_152;
            }
          }
          else
          {
            int v44 = (char *)(v8 + 2);
LABEL_73:
            *(void *)uint64_t v85 = v44;
            *(_DWORD *)(a1 + 132) = v45;
          }
          goto LABEL_138;
        case 0xEu:
          if (v9 != 112) {
            goto LABEL_128;
          }
          v5 |= 0x4000u;
          unint64_t v47 = (char *)(v8 + 1);
          int v48 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_78;
          }
          int v49 = *v47;
          int v48 = v48 + (v49 << 7) - 128;
          if (v49 < 0)
          {
            uint64_t v77 = sub_188C0D0((uint64_t)v8, v48);
            *(void *)uint64_t v85 = v77;
            *(_DWORD *)(a1 + 144) = v78;
            if (!v77) {
              goto LABEL_152;
            }
          }
          else
          {
            unint64_t v47 = (char *)(v8 + 2);
LABEL_78:
            *(void *)uint64_t v85 = v47;
            *(_DWORD *)(a1 + 144) = v48;
          }
          goto LABEL_138;
        case 0xFu:
          if (v9 != 122) {
            goto LABEL_128;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v50 = *(void *)(a1 + 88);
          if (!v50)
          {
            uint64_t v51 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v51 = (void *)*v51;
            }
            uint64_t v50 = sub_152D388((uint64_t)v51);
            *(void *)(a1 + 88) = v50;
            unsigned int v8 = *(unsigned __int8 **)v85;
          }
          BOOL v34 = sub_15242A0(a3, v50, v8);
          goto LABEL_137;
        case 0x10u:
          if (v9 == 128)
          {
            unint64_t v52 = (unint64_t)(v8 - 2);
            while (1)
            {
              *(void *)uint64_t v85 = v52 + 2;
              int v53 = *(unsigned __int8 *)(v52 + 2);
              if (*(char *)(v52 + 2) < 0)
              {
                int v54 = v53 + (*(unsigned __int8 *)(v52 + 3) << 7);
                int v53 = v54 - 128;
                if (*(char *)(v52 + 3) < 0)
                {
                  unint64_t v52 = sub_188C0D0(v52 + 2, v54 - 128);
                  int v53 = v55;
                }
                else
                {
                  v52 += 4;
                }
              }
              else
              {
                v52 += 3;
              }
              *(void *)uint64_t v85 = v52;
              uint64_t v56 = *(unsigned int *)(a1 + 48);
              if (v56 == *(_DWORD *)(a1 + 52))
              {
                int v57 = v56 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v56 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v56) = v53;
                unint64_t v52 = *(void *)v85;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v56) = v53;
                int v57 = v56 + 1;
              }
              *(_DWORD *)(a1 + 48) = v57;
              if (!v52) {
                goto LABEL_152;
              }
              if (*(void *)a3 <= v52 || *(_WORD *)v52 != 384) {
                goto LABEL_138;
              }
            }
          }
          if (v9 == 130)
          {
            BOOL v34 = sub_188C2CC((unsigned int *)(a1 + 48), v8, (uint64_t)a3);
          }
          else
          {
LABEL_128:
            if (v9) {
              BOOL v81 = (v9 & 7) == 4;
            }
            else {
              BOOL v81 = 1;
            }
            if (v81)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_152:
              *(void *)uint64_t v85 = 0;
              goto LABEL_2;
            }
            if (v9 - 7600 > 0x18F)
            {
              if (*v7)
              {
                uint64_t v82 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v82 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                unsigned int v8 = *(unsigned __int8 **)v85;
              }
              BOOL v34 = sub_1885AC0(v9, v82, (char *)v8, a3);
            }
            else
            {
              BOOL v34 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_253CA00, (uint64_t *)(a1 + 8), a3);
            }
          }
LABEL_137:
          *(void *)uint64_t v85 = v34;
          if (!v34) {
            goto LABEL_152;
          }
LABEL_138:
          if (sub_11947B8((uint64_t)a3, (char **)v85, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 0x11u:
          if (v9 != 136) {
            goto LABEL_128;
          }
          v5 |= 0x2000u;
          uint64_t v58 = (char *)(v8 + 1);
          uint64_t v59 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_103;
          }
          int v60 = *v58;
          uint64_t v59 = v59 + (v60 << 7) - 128;
          if (v60 < 0)
          {
            uint64_t v79 = sub_188C138((uint64_t)v8, v59);
            *(void *)uint64_t v85 = v79;
            *(void *)(a1 + 136) = v80;
            if (!v79) {
              goto LABEL_152;
            }
          }
          else
          {
            uint64_t v58 = (char *)(v8 + 2);
LABEL_103:
            *(void *)uint64_t v85 = v58;
            *(void *)(a1 + 136) = v59;
          }
          goto LABEL_138;
        default:
          goto LABEL_128;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v85;
}

char *sub_15242A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1522994(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1524330(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 104);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 108);
    char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 72);
    char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_15212A4(v16, v18, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 112);
    char *v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 116);
    char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 120);
    char *v4 = 64;
    v4[1] = v25;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_45:
      if ((v6 & 1) == 0) {
        goto LABEL_46;
      }
      goto LABEL_57;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_45;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 80);
  char *v4 = 74;
  unsigned int v27 = *(_DWORD *)(v26 + 20);
  v4[1] = v27;
  if (v27 > 0x7F) {
    int v28 = sub_188A9CC(v27, v4 + 1);
  }
  else {
    int v28 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v26, v28, a3);
  if ((v6 & 1) == 0)
  {
LABEL_46:
    if ((v6 & 0x400) == 0) {
      goto LABEL_64;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0) {
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v29 = *(int *)(a1 + 124);
  char *v4 = 88;
  v4[1] = v29;
  if (v29 > 0x7F)
  {
    v4[1] = v29 | 0x80;
    unint64_t v30 = v29 >> 7;
    v4[2] = v29 >> 7;
    v4 += 3;
    if (v29 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v31 = v30 >> 14;
        v30 >>= 7;
        *v4++ = v30;
      }
      while (v31);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_64:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v32 = *(int *)(a1 + 128);
    char *v4 = 96;
    v4[1] = v32;
    if (v32 > 0x7F)
    {
      v4[1] = v32 | 0x80;
      unint64_t v33 = v32 >> 7;
      v4[2] = v32 >> 7;
      v4 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v34 = v33 >> 14;
          v33 >>= 7;
          *v4++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v35 = *(_DWORD *)(a1 + 132);
    char *v4 = 104;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unsigned int v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v38 = *(_DWORD *)(a1 + 144);
    char *v4 = 112;
    v4[1] = v38;
    if (v38 > 0x7F)
    {
      v4[1] = v38 | 0x80;
      unsigned int v39 = v38 >> 7;
      v4[2] = v38 >> 7;
      v4 += 3;
      if (v38 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v40 = v39 >> 14;
          v39 >>= 7;
          *v4++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 88);
    char *v4 = 122;
    unsigned int v42 = *(_DWORD *)(v41 + 20);
    v4[1] = v42;
    if (v42 > 0x7F) {
      int v43 = sub_188A9CC(v42, v4 + 1);
    }
    else {
      int v43 = v4 + 2;
    }
    uint64_t v4 = sub_1522CAC(v41, (unint64_t)v43, a3);
  }
  uint64_t v44 = *(unsigned int *)(a1 + 48);
  if ((int)v44 >= 1)
  {
    for (uint64_t i = 0; i != v44; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v46 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * i);
      *(_WORD *)uint64_t v4 = 384;
      v4[2] = v46;
      if (v46 > 0x7F)
      {
        v4[2] = v46 | 0x80;
        unsigned int v47 = v46 >> 7;
        v4[3] = v46 >> 7;
        v4 += 4;
        if (v46 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v48 = v47 >> 14;
            v47 >>= 7;
            *v4++ = v47;
          }
          while (v48);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(void *)(a1 + 136);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v49;
    if (v49 > 0x7F)
    {
      v4[2] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[3] = v49 >> 7;
      v4 += 4;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v52 = *(void *)(a1 + 8);
  if ((v52 & 1) == 0) {
    return v4;
  }
  unint64_t v54 = v52 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v54 + 31) < 0)
  {
    int v55 = *(void **)(v54 + 8);
    uint64_t v56 = *(void *)(v54 + 16);
  }
  else
  {
    int v55 = (void *)(v54 + 8);
    LODWORD(v56) = *(unsigned __int8 *)(v54 + 31);
  }
  if (*a3 - (void)v4 >= (int)v56)
  {
    uint64_t v57 = (int)v56;
    memcpy(v4, v55, (int)v56);
    v4 += v57;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v55, v56, v4);
}

uint64_t sub_1524B20(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D4F0((unsigned int *)(a1 + 48)) + v2 + 2 * *(unsigned int *)(a1 + 48);
  int v4 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_30;
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v8 = sub_15214CC(*(void *)(a1 + 72));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v9 = sub_15214CC(*(void *)(a1 + 80));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v10 = sub_1522EEC(*(void *)(a1 + 88));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  v3 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_18:
  int v11 = *(_DWORD *)(a1 + 104);
  uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
  if (v11 >= 0) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 10;
  }
  v3 += v13 + 1;
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
LABEL_22:
  int v14 = *(_DWORD *)(a1 + 108);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v15;
  if ((v4 & 0x80) != 0)
  {
LABEL_26:
    int v16 = *(_DWORD *)(a1 + 112);
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v17;
  }
LABEL_30:
  if ((v4 & 0x7F00) == 0) {
    goto LABEL_44;
  }
  if ((v4 & 0x100) != 0)
  {
    int v18 = *(_DWORD *)(a1 + 116);
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v19;
  }
  if ((v4 & 0x200) != 0) {
    v3 += 2;
  }
  if ((v4 & 0x400) != 0)
  {
    int v22 = *(_DWORD *)(a1 + 124);
    uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v22 >= 0) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 11;
    }
    v3 += v24;
    if ((v4 & 0x800) == 0)
    {
LABEL_40:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_41;
      }
      goto LABEL_54;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_40;
  }
  int v25 = *(_DWORD *)(a1 + 128);
  uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v25 >= 0) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 11;
  }
  v3 += v27;
  if ((v4 & 0x1000) == 0)
  {
LABEL_41:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_55;
  }
LABEL_54:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 132) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x2000) == 0)
  {
LABEL_42:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_43;
  }
LABEL_55:
  v3 += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 2;
  if ((v4 & 0x4000) != 0) {
LABEL_43:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 144) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_44:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v28 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v3 += v29;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_1524E94(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    unint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 8);
      int v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        int v11 = (uint64_t *)*v11;
      }
      sub_1881DF4((std::string **)(a1 + 64), v9, v11);
    }
    if ((v8 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v13 = *(std::string **)(a1 + 72);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_152D1E0((uint64_t)v15);
        *(void *)(a1 + 72) = v13;
      }
      if (*(void *)(a2 + 72)) {
        int v16 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v16 = &off_253C920;
      }
      sub_15215EC(v13, (uint64_t)v16);
      if ((v8 & 4) == 0)
      {
LABEL_10:
        if ((v8 & 8) == 0) {
          goto LABEL_11;
        }
        goto LABEL_47;
      }
    }
    else if ((v8 & 4) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v17 = *(std::string **)(a1 + 80);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = (std::string *)sub_152D1E0((uint64_t)v19);
      *(void *)(a1 + 80) = v17;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v20 = &off_253C920;
    }
    sub_15215EC(v17, (uint64_t)v20);
    if ((v8 & 8) == 0)
    {
LABEL_11:
      if ((v8 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_55;
    }
LABEL_47:
    *(_DWORD *)(a1 + 40) |= 8u;
    unint64_t v21 = *(std::string **)(a1 + 88);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      unint64_t v21 = (std::string *)sub_152D388((uint64_t)v23);
      *(void *)(a1 + 88) = v21;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v24 = &off_253C9C0;
    }
    sub_1522FF4(v21, (uint64_t)v24);
    if ((v8 & 0x10) == 0)
    {
LABEL_12:
      if ((v8 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_56;
    }
LABEL_55:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v8 & 0x20) == 0)
    {
LABEL_13:
      if ((v8 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v8 & 0x40) == 0)
    {
LABEL_14:
      if ((v8 & 0x80) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 40) |= v8;
        goto LABEL_17;
      }
LABEL_15:
      *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
      goto LABEL_16;
    }
LABEL_57:
    *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    if ((v8 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  if ((v8 & 0x7F00) == 0) {
    goto LABEL_27;
  }
  if ((v8 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    if ((v8 & 0x200) == 0)
    {
LABEL_20:
      if ((v8 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_61;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  if ((v8 & 0x400) == 0)
  {
LABEL_21:
    if ((v8 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
  if ((v8 & 0x800) == 0)
  {
LABEL_22:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  if ((v8 & 0x1000) == 0)
  {
LABEL_23:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_24;
    }
LABEL_64:
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    if ((v8 & 0x4000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_63:
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  if ((v8 & 0x2000) != 0) {
    goto LABEL_64;
  }
LABEL_24:
  if ((v8 & 0x4000) != 0) {
LABEL_25:
  }
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
LABEL_26:
  *(_DWORD *)(a1 + 40) |= v8;
LABEL_27:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_152513C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1525144@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitStopTime");
}

uint64_t sub_1525154(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24BE7F0;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

void sub_15251BC(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_15251EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1525268(void *a1)
{
  sub_15251EC(a1);

  operator delete();
}

unsigned char *sub_15252A0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 7) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1525308(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v32 + 2;
      }
    }
    unint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        int v16 = v8 + 2;
LABEL_24:
        unint64_t v32 = v16;
        *(_DWORD *)(a1 + 56) = v17;
        goto LABEL_38;
      }
      uint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v17);
      unint64_t v32 = v26;
      *(_DWORD *)(a1 + 56) = v27;
      if (!v26) {
        goto LABEL_49;
      }
      goto LABEL_38;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      unint64_t v32 = v19;
      *(_DWORD *)(a1 + 52) = v20;
      goto LABEL_38;
    }
    unint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unint64_t v32 = v28;
    *(_DWORD *)(a1 + 52) = v29;
    if (!v28) {
      goto LABEL_49;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_33:
      unint64_t v32 = v22;
      *(_DWORD *)(a1 + 48) = v23;
      goto LABEL_38;
    }
    unint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v23);
    unint64_t v32 = v30;
    *(_DWORD *)(a1 + 48) = v31;
    if (!v30) {
      goto LABEL_49;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 7600 > 0x18F)
    {
      if (*v7)
      {
        int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v8 = v32;
      }
      uint64_t v15 = sub_1885AC0(v9, v25, v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_253CA98, (uint64_t *)(a1 + 8), a3);
    }
    unint64_t v32 = (char *)v15;
    if (!v15) {
      goto LABEL_49;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  unint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v32;
}

char *sub_152559C(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 56);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_15257E0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      result += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_15258C8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1525970(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1525978@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitDate");
}

uint64_t sub_1525988(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1525A14((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1525A14(uint64_t (***result)()))()
{
  if (result != &off_253CAD8)
  {
    int v1 = result;
    if (result[6])
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v2 = (uint64_t)result[7];
    if (v2)
    {
      sub_1520DD4(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[8];
    if (v3)
    {
      sub_1520DD4(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[9];
    if (v4)
    {
      sub_1521FD8(v4);
      operator delete();
    }
    uint64_t v5 = v1[10];
    if (v5)
    {
      sub_1521744(v5);
      operator delete();
    }
    if (v1[11])
    {
      sub_145FE08();
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[12];
    if (result)
    {
      sub_15251EC(result);
      operator delete();
    }
  }
  return result;
}

void sub_1525B40(uint64_t a1)
{
  sub_1525988(a1);

  operator delete();
}

uint64_t sub_1525B78(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v3)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 48));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_18;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1520ED0(*(void *)(a1 + 56));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = sub_1520ED0(*(void *)(a1 + 64));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_20:
    uint64_t result = sub_15217F0(*(void *)(a1 + 80));
    if ((v3 & 0x20) == 0)
    {
LABEL_8:
      if ((v3 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = sub_1521CA8(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v3 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_21:
  uint64_t result = sub_1369BB4(*(void *)(a1 + 88));
  if ((v3 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = (uint64_t)sub_15252A0(*(void *)(a1 + 96));
LABEL_10:
  *(void *)(a1 + 104) = 0;
  if ((v3 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 144) = 0u;
    *(_OWORD *)(a1 + 112) = 0u;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 152) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1525C64(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v80 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  unsigned int v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unsigned int v9 = (unsigned __int8 *)(*(void *)v80 + 1);
    unsigned int v10 = **(unsigned char **)v80;
    if ((char)**(unsigned char **)v80 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unsigned int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v80, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unsigned int v9 = (unsigned __int8 *)(*(void *)v80 + 2);
      }
    }
    *(void *)uint64_t v80 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_110;
        }
        v5 |= 0x80u;
        unsigned int v13 = (char *)(v9 + 1);
        uint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          unsigned int v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v80 = v13;
          *(void *)(a1 + 104) = v14;
          goto LABEL_118;
        }
        uint64_t v64 = sub_188C138((uint64_t)v9, v14);
        *(void *)uint64_t v80 = v64;
        *(void *)(a1 + 104) = v65;
        if (v64) {
          goto LABEL_118;
        }
        goto LABEL_143;
      case 2u:
        if (v10 != 18) {
          goto LABEL_110;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 48);
        if (!v16)
        {
          int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_15C1918((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          unsigned int v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v18 = (uint64_t)sub_1198F14(a3, v16, v9);
        goto LABEL_117;
      case 3u:
        if (v10 != 24) {
          goto LABEL_110;
        }
        v5 |= 0x100u;
        uint64_t v19 = (char *)(v9 + 1);
        uint64_t v20 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v66 = sub_188C138((uint64_t)v9, v20);
          *(void *)uint64_t v80 = v66;
          *(void *)(a1 + 112) = v67;
          if (!v66) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v9 + 2);
LABEL_24:
          *(void *)uint64_t v80 = v19;
          *(void *)(a1 + 112) = v20;
        }
        goto LABEL_118;
      case 4u:
        if (v10 != 32) {
          goto LABEL_110;
        }
        v5 |= 0x200u;
        uint64_t v22 = (char *)(v9 + 1);
        uint64_t v23 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v68 = sub_188C138((uint64_t)v9, v23);
          *(void *)uint64_t v80 = v68;
          *(void *)(a1 + 120) = v69;
          if (!v68) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v9 + 2);
LABEL_29:
          *(void *)uint64_t v80 = v22;
          *(void *)(a1 + 120) = v23;
        }
        goto LABEL_118;
      case 5u:
        if (v10 != 40) {
          goto LABEL_110;
        }
        v5 |= 0x400u;
        int v25 = (char *)(v9 + 1);
        uint64_t v26 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v70 = sub_188C138((uint64_t)v9, v26);
          *(void *)uint64_t v80 = v70;
          *(void *)(a1 + 128) = v71;
          if (!v70) {
            goto LABEL_143;
          }
        }
        else
        {
          int v25 = (char *)(v9 + 2);
LABEL_34:
          *(void *)uint64_t v80 = v25;
          *(void *)(a1 + 128) = v26;
        }
        goto LABEL_118;
      case 6u:
        if (v10 != 53) {
          goto LABEL_110;
        }
        int v29 = *(_DWORD *)v9;
        unint64_t v28 = v9 + 4;
        v5 |= 0x800u;
        *(_DWORD *)(a1 + 136) = v29;
        goto LABEL_39;
      case 7u:
        if (v10 != 61) {
          goto LABEL_110;
        }
        int v30 = *(_DWORD *)v9;
        unint64_t v28 = v9 + 4;
        v5 |= 0x1000u;
        *(_DWORD *)(a1 + 140) = v30;
LABEL_39:
        *(void *)uint64_t v80 = v28;
        goto LABEL_118;
      case 8u:
        if (v10 != 66) {
          goto LABEL_110;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v31 = *(void *)(a1 + 56);
        if (v31) {
          goto LABEL_51;
        }
        unint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v32 = (void *)*v32;
        }
        uint64_t v31 = sub_152D1E0((uint64_t)v32);
        *(void *)(a1 + 56) = v31;
        goto LABEL_50;
      case 9u:
        if (v10 != 74) {
          goto LABEL_110;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v31 = *(void *)(a1 + 64);
        if (v31) {
          goto LABEL_51;
        }
        unint64_t v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v33 = (void *)*v33;
        }
        uint64_t v31 = sub_152D1E0((uint64_t)v33);
        *(void *)(a1 + 64) = v31;
LABEL_50:
        unsigned int v9 = *(unsigned __int8 **)v80;
LABEL_51:
        uint64_t v18 = (uint64_t)sub_1521F48(a3, v31, v9);
        goto LABEL_117;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_110;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v34 = *(void *)(a1 + 72);
        if (!v34)
        {
          unsigned int v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v35 = (void *)*v35;
          }
          uint64_t v34 = sub_152D300((uint64_t)v35);
          *(void *)(a1 + 72) = v34;
          unsigned int v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v18 = sub_1521D58(a3, v34, v9);
        goto LABEL_117;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_110;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        unsigned int v36 = *(void **)(a1 + 80);
        if (!v36)
        {
          unsigned int v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v37 = (void *)*v37;
          }
          unsigned int v36 = sub_152D284((uint64_t)v37);
          *(void *)(a1 + 80) = v36;
          unsigned int v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v18 = (uint64_t)sub_15223A8(a3, (uint64_t)v36, v9);
        goto LABEL_117;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_110;
        }
        unsigned int v38 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          unsigned int v39 = (char *)(v38 + 1);
          *(void *)uint64_t v80 = v38 + 1;
          unsigned int v40 = *(_DWORD **)(a1 + 40);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 32), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 32) = v41 + 1;
            unsigned int v42 = *(std::string **)&v40[2 * v41 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v44 = v43;
            v44[1] = sub_3A6EDC;
            *int v43 = 0;
            v43[1] = 0;
            v43[2] = 0;
            unsigned int v42 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v43);
            unsigned int v39 = *(char **)v80;
          }
          unsigned int v38 = sub_188C244(v42, v39, (uint64_t)a3);
          *(void *)uint64_t v80 = v38;
          if (!v38) {
            goto LABEL_143;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 98) {
            goto LABEL_118;
          }
        }
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_110;
        }
        v5 |= 0x2000u;
        int v45 = (char *)(v9 + 1);
        uint64_t v46 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_80;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v72 = sub_188C138((uint64_t)v9, v46);
          *(void *)uint64_t v80 = v72;
          *(void *)(a1 + 144) = v73;
          if (!v72) {
            goto LABEL_143;
          }
        }
        else
        {
          int v45 = (char *)(v9 + 2);
LABEL_80:
          *(void *)uint64_t v80 = v45;
          *(void *)(a1 + 144) = v46;
        }
        goto LABEL_118;
      case 0xEu:
        if (v10 != 112) {
          goto LABEL_110;
        }
        v5 |= 0x4000u;
        unsigned int v48 = (char *)(v9 + 1);
        uint64_t v49 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_85;
        }
        int v50 = *v48;
        uint64_t v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v74 = sub_188C138((uint64_t)v9, v49);
          *(void *)uint64_t v80 = v74;
          *(unsigned char *)(a1 + 152) = v75 != 0;
          if (!v74) {
            goto LABEL_143;
          }
        }
        else
        {
          unsigned int v48 = (char *)(v9 + 2);
LABEL_85:
          *(void *)uint64_t v80 = v48;
          *(unsigned char *)(a1 + 152) = v49 != 0;
        }
        goto LABEL_118;
      case 0xFu:
        if (v10 != 122) {
          goto LABEL_110;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        unint64_t v51 = *(void **)(a1 + 88);
        if (!v51)
        {
          uint64_t v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v52 = (void *)*v52;
          }
          unint64_t v51 = sub_1478C60((uint64_t)v52);
          *(void *)(a1 + 88) = v51;
          unsigned int v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v18 = (uint64_t)sub_129760C(a3, (uint64_t)v51, v9);
        goto LABEL_117;
      case 0x10u:
        if (v10 != 128) {
          goto LABEL_110;
        }
        int v53 = (char *)(v9 + 1);
        unint64_t v54 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_96;
        }
        int v55 = *v53;
        int v56 = v54 + (v55 << 7);
        unint64_t v54 = (v56 - 128);
        if (v55 < 0)
        {
          *(void *)uint64_t v80 = sub_188C138((uint64_t)v9, (v56 - 128));
          if (!*(void *)v80) {
            goto LABEL_143;
          }
          unint64_t v54 = v76;
        }
        else
        {
          int v53 = (char *)(v9 + 2);
LABEL_96:
          *(void *)uint64_t v80 = v53;
        }
        if (v54 > 4)
        {
          if (*v7) {
            uint64_t v79 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v79 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(16, v54, v79);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          *(_DWORD *)(a1 + 156) = v54;
        }
        goto LABEL_118;
      case 0x11u:
        if (v10 != 136) {
          goto LABEL_110;
        }
        v5 |= 0x10000u;
        uint64_t v57 = (char *)(v9 + 1);
        int v58 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_103;
        }
        int v59 = *v57;
        int v58 = v58 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          uint64_t v77 = sub_188C0D0((uint64_t)v9, v58);
          *(void *)uint64_t v80 = v77;
          *(_DWORD *)(a1 + 160) = v78;
          if (!v77) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v57 = (char *)(v9 + 2);
LABEL_103:
          *(void *)uint64_t v80 = v57;
          *(_DWORD *)(a1 + 160) = v58;
        }
        goto LABEL_118;
      case 0x12u:
        if (v10 != 146) {
          goto LABEL_110;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v60 = *(void *)(a1 + 96);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v61 = (void *)*v61;
          }
          uint64_t v60 = sub_152D504((uint64_t)v61);
          *(void *)(a1 + 96) = v60;
          unsigned int v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v18 = (uint64_t)sub_1521C18(a3, v60, v9);
        goto LABEL_117;
      default:
LABEL_110:
        if (v10) {
          BOOL v62 = (v10 & 7) == 4;
        }
        else {
          BOOL v62 = 1;
        }
        if (!v62)
        {
          if (*v7)
          {
            uint64_t v63 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v63 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v9 = *(unsigned __int8 **)v80;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v10, v63, (char *)v9, a3);
LABEL_117:
          *(void *)uint64_t v80 = v18;
          if (!v18) {
            goto LABEL_143;
          }
LABEL_118:
          if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_143:
        }
          *(void *)uint64_t v80 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v80;
    }
  }
}

char *sub_152647C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 104);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 112);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 120);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(void *)(a1 + 128);
    char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v22 = *(_DWORD *)(a1 + 136);
    char *v4 = 53;
    *(_DWORD *)(v4 + 1) = v22;
    v4 += 5;
    if ((v6 & 0x1000) == 0)
    {
LABEL_38:
      if ((v6 & 2) == 0) {
        goto LABEL_39;
      }
      goto LABEL_49;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_38;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v23 = *(_DWORD *)(a1 + 140);
  char *v4 = 61;
  *(_DWORD *)(v4 + 1) = v23;
  v4 += 5;
  if ((v6 & 2) == 0)
  {
LABEL_39:
    if ((v6 & 4) == 0) {
      goto LABEL_40;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v24 = *(void *)(a1 + 56);
  char *v4 = 66;
  unsigned int v25 = *(_DWORD *)(v24 + 20);
  v4[1] = v25;
  if (v25 > 0x7F) {
    uint64_t v26 = sub_188A9CC(v25, v4 + 1);
  }
  else {
    uint64_t v26 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v24, v26, a3);
  if ((v6 & 4) == 0)
  {
LABEL_40:
    if ((v6 & 8) == 0) {
      goto LABEL_41;
    }
    goto LABEL_61;
  }
LABEL_55:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v27 = *(void *)(a1 + 64);
  char *v4 = 74;
  unsigned int v28 = *(_DWORD *)(v27 + 20);
  v4[1] = v28;
  if (v28 > 0x7F) {
    int v29 = sub_188A9CC(v28, v4 + 1);
  }
  else {
    int v29 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v27, v29, a3);
  if ((v6 & 8) == 0)
  {
LABEL_41:
    if ((v6 & 0x10) == 0) {
      goto LABEL_73;
    }
    goto LABEL_67;
  }
LABEL_61:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v30 = *(void *)(a1 + 72);
  char *v4 = 82;
  unsigned int v31 = *(_DWORD *)(v30 + 20);
  v4[1] = v31;
  if (v31 > 0x7F) {
    unint64_t v32 = sub_188A9CC(v31, v4 + 1);
  }
  else {
    unint64_t v32 = v4 + 2;
  }
  uint64_t v4 = sub_1522438(v30, v32, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_67:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 80);
    char *v4 = 90;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      unsigned int v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      unsigned int v35 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_15219F0(v33, (unint64_t)v35, a3);
  }
LABEL_73:
  uint64_t v36 = *(unsigned int *)(a1 + 32);
  if ((int)v36 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 8 * v36;
    do
    {
      unsigned int v39 = *(void **)(*(void *)(a1 + 40) + v37 + 8);
      if (*((char *)v39 + 23) < 0)
      {
        int64_t v40 = v39[1];
        if (v40 > 127) {
          goto LABEL_84;
        }
      }
      else
      {
        int64_t v40 = *((unsigned __int8 *)v39 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v40)
      {
        char *v4 = 98;
        v4[1] = v40;
        if (*((char *)v39 + 23) < 0) {
          unsigned int v39 = (void *)*v39;
        }
        uint64_t v41 = v4 + 2;
        memcpy(v41, v39, v40);
        uint64_t v4 = &v41[v40];
        goto LABEL_82;
      }
LABEL_84:
      uint64_t v4 = (char *)sub_188A868(a3, 12, (uint64_t)v39, v4);
LABEL_82:
      v37 += 8;
    }
    while (v38 != v37);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v42 = *(void *)(a1 + 144);
    char *v4 = 104;
    v4[1] = v42;
    if (v42 > 0x7F)
    {
      v4[1] = v42 | 0x80;
      unint64_t v43 = v42 >> 7;
      v4[2] = v42 >> 7;
      v4 += 3;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v45 = *(unsigned char *)(a1 + 152);
    char *v4 = 112;
    v4[1] = v45;
    v4 += 2;
    if ((v6 & 0x20) == 0)
    {
LABEL_94:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_111;
      }
      goto LABEL_105;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_94;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 88);
  char *v4 = 122;
  unsigned int v47 = *(_DWORD *)(v46 + 44);
  v4[1] = v47;
  if (v47 > 0x7F) {
    unsigned int v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    unsigned int v48 = v4 + 2;
  }
  uint64_t v4 = sub_1460138(v46, v48, a3);
  if ((v6 & 0x8000) != 0)
  {
LABEL_105:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(int *)(a1 + 156);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v49;
    if (v49 > 0x7F)
    {
      v4[2] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[3] = v49 >> 7;
      v4 += 4;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_111:
  if ((v6 & 0x10000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v52 = *(_DWORD *)(a1 + 160);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unsigned int v53 = v52 >> 7;
      v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v55 = *(void *)(a1 + 96);
    *(_WORD *)uint64_t v4 = 402;
    unsigned int v56 = *(_DWORD *)(v55 + 44);
    v4[2] = v56;
    if (v56 > 0x7F) {
      uint64_t v57 = sub_188A9CC(v56, v4 + 2);
    }
    else {
      uint64_t v57 = v4 + 3;
    }
    uint64_t v4 = sub_152559C(v55, v57, a3);
  }
  uint64_t v58 = *(void *)(a1 + 8);
  if ((v58 & 1) == 0) {
    return v4;
  }
  unint64_t v60 = v58 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v60 + 31) < 0)
  {
    uint64_t v61 = *(void **)(v60 + 8);
    uint64_t v62 = *(void *)(v60 + 16);
  }
  else
  {
    uint64_t v61 = (void *)(v60 + 8);
    LODWORD(v62) = *(unsigned __int8 *)(v60 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v62)
  {
    uint64_t v63 = (int)v62;
    memcpy(v4, v61, (int)v62);
    v4 += v63;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v61, v62, v4);
}

uint64_t sub_1526CD4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_18;
  }
  if (v8)
  {
    uint64_t v15 = sub_15B0D90(*(void *)(a1 + 48));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_11:
      if ((v8 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_43;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v16 = sub_15214CC(*(void *)(a1 + 56));
  v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_12:
    if ((v8 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v17 = sub_15214CC(*(void *)(a1 + 64));
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_13:
    if ((v8 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v18 = sub_1522654(*(void *)(a1 + 72));
  v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_14:
    if ((v8 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_46:
    uint64_t v20 = sub_1460320(*(void *)(a1 + 88));
    v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_16:
      if ((v8 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_45:
  uint64_t v19 = sub_1521B8C(*(void *)(a1 + 80));
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_46;
  }
LABEL_15:
  if ((v8 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_47:
  uint64_t v21 = sub_15257E0(*(void *)(a1 + 96));
  v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v8 & 0x80) != 0) {
LABEL_17:
  }
    v4 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_18:
  if ((v8 & 0xFF00) == 0) {
    goto LABEL_37;
  }
  if ((v8 & 0x100) == 0)
  {
    if ((v8 & 0x200) == 0) {
      goto LABEL_21;
    }
LABEL_50:
    v4 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v4 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v8 & 0x200) != 0) {
    goto LABEL_50;
  }
LABEL_21:
  if ((v8 & 0x400) != 0) {
LABEL_22:
  }
    v4 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_23:
  uint64_t v9 = v4 + 5;
  if ((v8 & 0x800) == 0) {
    uint64_t v9 = v4;
  }
  if ((v8 & 0x1000) != 0) {
    v9 += 5;
  }
  if ((v8 & 0x2000) != 0) {
    v9 += ((9 * (__clz(*(void *)(a1 + 144) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v8 & 0x4000) != 0) {
    uint64_t v4 = v9 + 2;
  }
  else {
    uint64_t v4 = v9;
  }
  if ((v8 & 0x8000) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 156);
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v10 >= 0) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 12;
    }
    v4 += v12;
  }
LABEL_37:
  if ((v8 & 0x10000) != 0) {
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 160) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v22 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v4 += v23;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1527054(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1918((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_253F1A0;
      }
      sub_15B0E24(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(std::string **)(a1 + 56);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = (std::string *)sub_152D1E0((uint64_t)v18);
        *(void *)(a1 + 56) = v16;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v19 = &off_253C920;
      }
      sub_15215EC(v16, (uint64_t)v19);
      if ((v9 & 4) == 0)
      {
LABEL_16:
        if ((v9 & 8) == 0) {
          goto LABEL_17;
        }
        goto LABEL_56;
      }
    }
    else if ((v9 & 4) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v20 = *(std::string **)(a1 + 64);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = (std::string *)sub_152D1E0((uint64_t)v22);
      *(void *)(a1 + 64) = v20;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v23 = &off_253C920;
    }
    sub_15215EC(v20, (uint64_t)v23);
    if ((v9 & 8) == 0)
    {
LABEL_17:
      if ((v9 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_64;
    }
LABEL_56:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v24 = *(std::string **)(a1 + 72);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = (std::string *)sub_152D300((uint64_t)v26);
      *(void *)(a1 + 72) = v24;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v27 = &off_253C988;
    }
    sub_1521DE8(v24, (uint64_t)v27);
    if ((v9 & 0x10) == 0)
    {
LABEL_18:
      if ((v9 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_72;
    }
LABEL_64:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    unsigned int v28 = *(std::string **)(a1 + 80);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        uint64_t v30 = (void *)*v30;
      }
      unsigned int v28 = (std::string *)sub_152D284((uint64_t)v30);
      *(void *)(a1 + 80) = v28;
    }
    if (*(void *)(a2 + 80)) {
      unsigned int v31 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unsigned int v31 = &off_253C960;
    }
    sub_130E5F8(v28, (uint64_t)v31);
    if ((v9 & 0x20) == 0)
    {
LABEL_19:
      if ((v9 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_80;
    }
LABEL_72:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unint64_t v32 = *(void **)(a1 + 88);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      unsigned int v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        unsigned int v34 = (void *)*v34;
      }
      unint64_t v32 = sub_1478C60((uint64_t)v34);
      *(void *)(a1 + 88) = v32;
    }
    if (*(void *)(a2 + 88)) {
      unsigned int v35 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unsigned int v35 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v32, (uint64_t)v35);
    if ((v9 & 0x40) == 0)
    {
LABEL_20:
      if ((v9 & 0x80) == 0)
      {
LABEL_22:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_23;
      }
LABEL_21:
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      goto LABEL_22;
    }
LABEL_80:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v36 = *(void *)(a1 + 96);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = sub_152D504((uint64_t)v38);
      *(void *)(a1 + 96) = v36;
    }
    if (*(void *)(a2 + 96)) {
      unsigned int v39 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      unsigned int v39 = &off_253CA98;
    }
    sub_15258C8(v36, (uint64_t)v39);
    if ((v9 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_23:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_34;
  }
  if ((v9 & 0x100) != 0)
  {
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    if ((v9 & 0x200) == 0)
    {
LABEL_26:
      if ((v9 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_91;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  if ((v9 & 0x400) == 0)
  {
LABEL_27:
    if ((v9 & 0x800) == 0) {
      goto LABEL_28;
    }
    goto LABEL_92;
  }
LABEL_91:
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  if ((v9 & 0x800) == 0)
  {
LABEL_28:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_93;
  }
LABEL_92:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  if ((v9 & 0x1000) == 0)
  {
LABEL_29:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_94;
  }
LABEL_93:
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if ((v9 & 0x2000) == 0)
  {
LABEL_30:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_31;
    }
LABEL_95:
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    if ((v9 & 0x8000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_94:
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  if ((v9 & 0x4000) != 0) {
    goto LABEL_95;
  }
LABEL_31:
  if ((v9 & 0x8000) != 0) {
LABEL_32:
  }
    *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_34:
  if ((v9 & 0x10000) != 0)
  {
    int v14 = *(_DWORD *)(a2 + 160);
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    *(_DWORD *)(a1 + 160) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_152741C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t result = sub_136AEA0(*(void *)(a1 + 88));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 96) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1527480@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitVehiclePosition");
}

uint64_t sub_1527490(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253CB80)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1520DD4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1527548(uint64_t a1)
{
  sub_1527490(a1);

  operator delete();
}

uint64_t sub_1527580(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1520ED0(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_15275DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_152D1E0((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_1521F48(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1527734(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_15212A4(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1527844(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15214CC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_15278CC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_152D1E0((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253C920;
    }
    uint64_t result = sub_15215EC(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1527974()
{
  return 1;
}

void *sub_152797C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitRealTimePlatformAssignment");
}

uint64_t sub_152798C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253CBA0)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1523808(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1527490(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1527A5C(uint64_t a1)
{
  sub_152798C(a1);

  operator delete();
}

uint64_t sub_1527A94(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_152395C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1527580(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0) {
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1527B10(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_33;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v30 = v12;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_41;
        }
        uint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v30 = v26;
        *(_DWORD *)(a1 + 40) = v27;
        if (v26) {
          goto LABEL_41;
        }
        goto LABEL_54;
      case 2u:
        if (v9 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_152D4A8((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          unsigned int v8 = v30;
        }
        uint64_t v17 = (char *)sub_15227B8(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v30) {
            goto LABEL_54;
          }
          unint64_t v19 = v28;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_24:
          uint64_t v30 = v18;
        }
        if (v19 > 3)
        {
          if (*v7) {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v22 = *(void **)(a1 + 32);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          unint64_t v22 = sub_152D60C((uint64_t)v23);
          *(void *)(a1 + 32) = v22;
          unsigned int v8 = v30;
        }
        uint64_t v17 = sub_1527E14(a3, (uint64_t)v22, (unsigned __int8 *)v8);
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v30;
          }
          uint64_t v17 = (char *)sub_1885AC0(v9, v25, v8, a3);
LABEL_40:
          uint64_t v30 = v17;
          if (!v17) {
            goto LABEL_54;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
    }
  }
}

char *sub_1527E14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15275DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1527EA4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_1524330(v10, v12, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 44);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_1527734(v16, (unint64_t)v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    unint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    unint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_152811C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_1524B20(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1527844(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v6 = *(_DWORD *)(a1 + 44);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v7;
LABEL_16:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1528258(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_152D4A8((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_253CA00;
      }
      sub_1524E94(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v10 = *(std::string **)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_152D60C((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_253CB80;
    }
    sub_15278CC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1528390(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 24) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_15283C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitStopTimeUpdate");
}

uint64_t sub_15283D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253CBD0)
  {
    uint64_t v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_15251EC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 48));
  sub_152F558((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_152849C(uint64_t a1)
{
  sub_15283D0(a1);

  operator delete();
}

uint64_t sub_15284D4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1527A94(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t result = (uint64_t)sub_15252A0(*(void *)(a1 + 72));
  }
  if ((v6 & 0x7E) != 0)
  {
    *(void *)(a1 + 112) = 0;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1528580(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v62 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v62, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  char v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    unsigned int v9 = (unsigned __int8 *)(*(void *)v62 + 1);
    unsigned int v10 = **(unsigned char **)v62;
    if ((char)**(unsigned char **)v62 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unsigned int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v62, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unsigned int v9 = (unsigned __int8 *)(*(void *)v62 + 2);
      }
    }
    *(void *)uint64_t v62 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_69;
        }
        v5 |= 2u;
        unint64_t v13 = (char *)(v9 + 1);
        uint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          unint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)uint64_t v62 = v13;
          *(void *)(a1 + 80) = v14;
          goto LABEL_77;
        }
        uint64_t v50 = sub_188C138((uint64_t)v9, v14);
        *(void *)uint64_t v62 = v50;
        *(void *)(a1 + 80) = v51;
        if (v50) {
          goto LABEL_77;
        }
        goto LABEL_98;
      case 2u:
        if (v10 != 16) {
          goto LABEL_69;
        }
        v5 |= 4u;
        uint64_t v16 = (char *)(v9 + 1);
        uint64_t v17 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v9, v17);
          *(void *)uint64_t v62 = v52;
          *(void *)(a1 + 88) = v53;
          if (!v52) {
            goto LABEL_98;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v9 + 2);
LABEL_18:
          *(void *)uint64_t v62 = v16;
          *(void *)(a1 + 88) = v17;
        }
        goto LABEL_77;
      case 3u:
        if (v10 != 24) {
          goto LABEL_69;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v9 + 1);
        uint64_t v20 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v9, v20);
          *(void *)uint64_t v62 = v54;
          *(void *)(a1 + 96) = v55;
          if (!v54) {
            goto LABEL_98;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v9 + 2);
LABEL_23:
          *(void *)uint64_t v62 = v19;
          *(void *)(a1 + 96) = v20;
        }
        goto LABEL_77;
      case 4u:
        if (v10 != 32) {
          goto LABEL_69;
        }
        unint64_t v22 = (char *)(v9 + 1);
        unint64_t v23 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          *(void *)uint64_t v62 = sub_188C138((uint64_t)v9, (v25 - 128));
          if (!*(void *)v62) {
            goto LABEL_98;
          }
          unint64_t v23 = v56;
        }
        else
        {
          unint64_t v22 = (char *)(v9 + 2);
LABEL_28:
          *(void *)uint64_t v62 = v22;
        }
        if (v23 > 1)
        {
          if (*v7) {
            uint64_t v61 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v61 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v23, v61);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 104) = v23;
        }
        goto LABEL_77;
      case 5u:
        if (v10 != 42) {
          goto LABEL_69;
        }
        uint64_t v26 = (char *)(v9 - 1);
        while (1)
        {
          int v27 = (unsigned __int8 *)(v26 + 1);
          *(void *)uint64_t v62 = v26 + 1;
          unint64_t v28 = *(_DWORD **)(a1 + 40);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 32), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 32) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            sub_152D684(*(void *)(a1 + 24));
            uint64_t v30 = sub_188CDC8(a1 + 24, v31);
            int v27 = *(unsigned __int8 **)v62;
          }
          uint64_t v26 = sub_1528B3C(a3, v30, v27);
          *(void *)uint64_t v62 = v26;
          if (!v26) {
            goto LABEL_98;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 42) {
            goto LABEL_77;
          }
        }
      case 6u:
        if (v10 != 50) {
          goto LABEL_69;
        }
        unint64_t v32 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v33 = (char *)(v32 + 1);
          *(void *)uint64_t v62 = v32 + 1;
          unsigned int v34 = *(_DWORD **)(a1 + 64);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 56), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 56) = v35 + 1;
            uint64_t v36 = *(std::string **)&v34[2 * v35 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v38 = v37;
            v38[1] = sub_3A6EDC;
            void *v37 = 0;
            v37[1] = 0;
            v37[2] = 0;
            uint64_t v36 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v37);
            uint64_t v33 = *(char **)v62;
          }
          unint64_t v32 = sub_188C244(v36, v33, (uint64_t)a3);
          *(void *)uint64_t v62 = v32;
          if (!v32) {
            goto LABEL_98;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 50) {
            goto LABEL_77;
          }
        }
      case 7u:
        if (v10 != 56) {
          goto LABEL_69;
        }
        v5 |= 0x40u;
        unsigned int v39 = (char *)(v9 + 1);
        uint64_t v40 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v57 = sub_188C138((uint64_t)v9, v40);
          *(void *)uint64_t v62 = v57;
          *(void *)(a1 + 112) = v58;
          if (!v57) {
            goto LABEL_98;
          }
        }
        else
        {
          unsigned int v39 = (char *)(v9 + 2);
LABEL_57:
          *(void *)uint64_t v62 = v39;
          *(void *)(a1 + 112) = v40;
        }
        goto LABEL_77;
      case 8u:
        if (v10 != 66) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v42 = *(void *)(a1 + 72);
        if (!v42)
        {
          unint64_t v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = sub_152D504((uint64_t)v43);
          *(void *)(a1 + 72) = v42;
          unsigned int v9 = *(unsigned __int8 **)v62;
        }
        unint64_t v44 = sub_1521C18(a3, v42, v9);
        goto LABEL_76;
      case 9u:
        if (v10 != 72) {
          goto LABEL_69;
        }
        v5 |= 0x20u;
        char v45 = (char *)(v9 + 1);
        uint64_t v46 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v59 = sub_188C138((uint64_t)v9, v46);
          *(void *)uint64_t v62 = v59;
          *(unsigned char *)(a1 + 108) = v60 != 0;
          if (!v59) {
            goto LABEL_98;
          }
        }
        else
        {
          char v45 = (char *)(v9 + 2);
LABEL_68:
          *(void *)uint64_t v62 = v45;
          *(unsigned char *)(a1 + 108) = v46 != 0;
        }
        goto LABEL_77;
      default:
LABEL_69:
        if (v10) {
          BOOL v48 = (v10 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v7)
          {
            unint64_t v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v9 = *(unsigned __int8 **)v62;
          }
          unint64_t v44 = sub_1885AC0(v10, v49, (char *)v9, a3);
LABEL_76:
          *(void *)uint64_t v62 = v44;
          if (!v44) {
            goto LABEL_98;
          }
LABEL_77:
          if (sub_11947B8((uint64_t)a3, (char **)v62, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_98:
        }
          *(void *)uint64_t v62 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v62;
    }
  }
}

char *sub_1528B3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1527B10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1528BCC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 88);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 96);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 104);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v19 = *(_DWORD *)(a1 + 32);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 42;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        unint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        unint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_1527EA4(v21, (unint64_t)v23, a3);
    }
  }
  uint64_t v24 = *(unsigned int *)(a1 + 56);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 8 * v24;
    do
    {
      int v27 = *(void **)(*(void *)(a1 + 64) + v25 + 8);
      if (*((char *)v27 + 23) < 0)
      {
        int64_t v28 = v27[1];
        if (v28 > 127) {
          goto LABEL_48;
        }
      }
      else
      {
        int64_t v28 = *((unsigned __int8 *)v27 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v28)
      {
        char *v4 = 50;
        v4[1] = v28;
        if (*((char *)v27 + 23) < 0) {
          int v27 = (void *)*v27;
        }
        uint64_t v29 = v4 + 2;
        memcpy(v29, v27, v28);
        uint64_t v4 = &v29[v28];
        goto LABEL_46;
      }
LABEL_48:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v27, v4);
LABEL_46:
      v25 += 8;
    }
    while (v26 != v25);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(void *)(a1 + 112);
    char *v4 = 56;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 72);
    char *v4 = 66;
    unsigned int v34 = *(_DWORD *)(v33 + 44);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_152559C(v33, v35, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v36 = *(unsigned char *)(a1 + 108);
    char *v4 = 72;
    v4[1] = v36;
    v4 += 2;
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_15290C4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_152811C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 0x7F) != 0)
  {
    if (v14)
    {
      uint64_t v20 = sub_15257E0(*(void *)(a1 + 72));
      v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v14 & 2) == 0)
      {
LABEL_17:
        if ((v14 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_32;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_17;
    }
    v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v14 & 4) == 0)
    {
LABEL_18:
      if ((v14 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_33;
    }
LABEL_32:
    v9 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v14 & 8) == 0)
    {
LABEL_19:
      if ((v14 & 0x10) != 0)
      {
LABEL_20:
        int v15 = *(_DWORD *)(a1 + 104);
        uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
        if (v15 >= 0) {
          uint64_t v17 = v16;
        }
        else {
          uint64_t v17 = 11;
        }
        v9 += v17;
      }
LABEL_24:
      if ((v14 & 0x20) != 0) {
        v9 += 2;
      }
      if ((v14 & 0x40) != 0) {
        v9 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
      }
      goto LABEL_28;
    }
LABEL_33:
    v9 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v14 & 0x10) != 0) {
      goto LABEL_20;
    }
    goto LABEL_24;
  }
LABEL_28:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v21 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v9 += v22;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_15292EC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_152F7E0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x7F) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_152D504((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        int v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v19 = &off_253CA98;
      }
      sub_15258C8(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_30;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }
LABEL_30:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_33;
    }
LABEL_32:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_17;
      }
LABEL_15:
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      goto LABEL_16;
    }
LABEL_33:
    *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
    if ((v14 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_15294E8(uint64_t a1)
{
  uint64_t result = sub_1529530(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 72) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1529530(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_18856CC(*(void *)(v5 + 24) + 16);
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_15295A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitTripUpdate");
}

uint64_t sub_15295B4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24BEA70;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = a2;
  *(_DWORD *)(a1 + 120) = 0;
  return a1;
}

void sub_152963C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_152966C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_152F5D8(a1 + 12);
  sub_152F5D8(a1 + 9);
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1529710(void *a1)
{
  sub_152966C(a1);

  operator delete();
}

uint64_t sub_1529748(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 80);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_152A480(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 104);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_152A480(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 104) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  int v9 = (uint64_t *)(a1 + 8);
  if (v10)
  {
    return sub_188B4AC(v9);
  }
  return result;
}

char *sub_15297FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v42 = a2;
  if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
    return v42;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v42 + 1;
    unsigned int v8 = *v42;
    if (*v42 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v42, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        int v7 = v42 + 2;
      }
    }
    uint64_t v42 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8)
        {
          if (v8 != 10) {
            goto LABEL_67;
          }
          unint64_t v39 = (char *)sub_188C2EC((unsigned int *)(a1 + 40), (unsigned __int8 *)v7, (uint64_t)a3);
          goto LABEL_76;
        }
        int v12 = v7 - 1;
        while (1)
        {
          uint64_t v42 = v12 + 1;
          uint64_t v13 = v12[1];
          if (v12[1] < 0)
          {
            int v14 = v13 + (v12[2] << 7);
            uint64_t v13 = (v14 - 128);
            if (v12[2] < 0)
            {
              int v12 = (char *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
              uint64_t v13 = v15;
            }
            else
            {
              v12 += 3;
            }
          }
          else
          {
            v12 += 2;
          }
          uint64_t v42 = v12;
          uint64_t v16 = *(unsigned int *)(a1 + 40);
          if (v16 == *(_DWORD *)(a1 + 44))
          {
            int v17 = v16 + 1;
            sub_188CA54((unsigned int *)(a1 + 40), v16 + 1);
            *(void *)(*(void *)(a1 + 48) + 8 * v16) = v13;
            int v12 = v42;
          }
          else
          {
            *(void *)(*(void *)(a1 + 48) + 8 * v16) = v13;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 40) = v17;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
            goto LABEL_77;
          }
        }
      case 2u:
        if (v8 == 16)
        {
          uint64_t v18 = v7 - 1;
          while (1)
          {
            uint64_t v42 = v18 + 1;
            unint64_t v19 = v18[1];
            uint64_t v20 = v18 + 2;
            if (v18[1] < 0)
            {
              int v21 = *v20;
              int v22 = v19 + (v21 << 7);
              unint64_t v19 = (v22 - 128);
              if (v21 < 0)
              {
                uint64_t v42 = (char *)sub_188C138((uint64_t)(v18 + 1), (v22 - 128));
                if (!v42) {
                  return 0;
                }
                unint64_t v19 = v25;
                goto LABEL_29;
              }
              uint64_t v20 = v18 + 3;
            }
            uint64_t v42 = v20;
LABEL_29:
            if (v19 > 3)
            {
              if (*v6) {
                uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(2, v19, v26);
            }
            else
            {
              uint64_t v23 = *(unsigned int *)(a1 + 56);
              if (v23 == *(_DWORD *)(a1 + 60))
              {
                int v24 = v23 + 1;
                sub_188C80C((unsigned int *)(a1 + 56), v23 + 1);
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v23) = v19;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v23) = v19;
                int v24 = v23 + 1;
              }
              *(_DWORD *)(a1 + 56) = v24;
            }
            uint64_t v18 = v42;
            if (*(void *)a3 <= (unint64_t)v42 || *v42 != 16) {
              goto LABEL_77;
            }
          }
        }
        if (v8 == 18)
        {
          *(void *)&long long v43 = a1 + 56;
          *((void *)&v43 + 1) = sub_15207CC;
          uint64_t v44 = a1 + 8;
          int v45 = 2;
          unint64_t v39 = sub_1112E88((uint64_t)a3, v7, &v43);
LABEL_76:
          uint64_t v42 = v39;
          if (!v39) {
            return 0;
          }
LABEL_77:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            return v42;
          }
          continue;
        }
LABEL_67:
        if (v8) {
          BOOL v40 = (v8 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (v8 - 7600 > 0x18F)
          {
            if (*v6)
            {
              uint64_t v41 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v7 = v42;
            }
            unint64_t v39 = (char *)sub_1885AC0(v8, v41, v7, a3);
          }
          else
          {
            unint64_t v39 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_253CC48, (uint64_t *)(a1 + 8), a3);
          }
          goto LABEL_76;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v42;
      case 3u:
        if (v8 != 26) {
          goto LABEL_67;
        }
        int v27 = v7 - 1;
        while (1)
        {
          int64_t v28 = (unsigned __int8 *)(v27 + 1);
          uint64_t v42 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            unint64_t v32 = sub_152D818(*(void *)(a1 + 72));
            uint64_t v31 = sub_188CDC8(a1 + 72, (uint64_t)v32);
            int64_t v28 = (unsigned __int8 *)v42;
          }
          int v27 = sub_1529CC8(a3, v31, v28);
          uint64_t v42 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 26) {
            goto LABEL_77;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_67;
        }
        uint64_t v33 = v7 - 1;
        while (1)
        {
          unsigned int v34 = (unsigned __int8 *)(v33 + 1);
          uint64_t v42 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 112);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 104), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 104) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_152D818(*(void *)(a1 + 96));
            uint64_t v37 = sub_188CDC8(a1 + 96, (uint64_t)v38);
            unsigned int v34 = (unsigned __int8 *)v42;
          }
          uint64_t v33 = sub_1529CC8(a3, v37, v34);
          uint64_t v42 = v33;
          if (!v33) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 34) {
            goto LABEL_77;
          }
        }
      default:
        goto LABEL_67;
    }
  }
}

char *sub_1529CC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_152A4A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1529D58(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 40);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8 * i);
      *a2 = 8;
      a2[1] = v8;
      if (v8 > 0x7F)
      {
        a2[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        a2[2] = v8 >> 7;
        a2 += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *a2++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 56);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 64) + 4 * j);
      *a2 = 16;
      a2[1] = v13;
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        a2[2] = v13 >> 7;
        a2 += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *a2++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *a2 = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_152A694(v18, (unint64_t)v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 104);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *a2 = 34;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      a2[1] = v24;
      if (v24 > 0x7F) {
        unint64_t v25 = sub_188A9CC(v24, a2 + 1);
      }
      else {
        unint64_t v25 = a2 + 2;
      }
      a2 = sub_152A694(v23, (unint64_t)v25, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 950, 1000, a2, a3);
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return a2;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    uint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    uint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(a2, v29, (int)v30);
    a2 += v31;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, a2);
}

uint64_t sub_152A07C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D5A8((unsigned int *)(a1 + 40));
  uint64_t v4 = *(unsigned int *)(a1 + 56);
  if (v4)
  {
    uint64_t v5 = 0;
    int v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v6);
      if (v7 < 0) {
        uint64_t v8 = 10;
      }
      else {
        uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
      }
      v5 += v8;
      ++v6;
    }
    while (v4 != v6);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v9 = *(int *)(a1 + 80);
  uint64_t v10 = v3 + v2 + *(unsigned int *)(a1 + 40) + v4 + v5 + v9;
  uint64_t v11 = *(void *)(a1 + 88);
  if (v11) {
    int v12 = (uint64_t *)(v11 + 8);
  }
  else {
    int v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      unint64_t v15 = sub_152A838(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = *(int *)(a1 + 104);
  uint64_t v17 = v10 + v16;
  uint64_t v18 = *(void *)(a1 + 112);
  if (v18) {
    unsigned int v19 = (uint64_t *)(v18 + 8);
  }
  else {
    unsigned int v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      unint64_t v22 = sub_152A838(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v17 += v26;
  }
  *(_DWORD *)(a1 + 120) = v17;
  return v17;
}

void sub_152A1F4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 40);
    uint64_t v6 = *(int *)(a1 + 40);
    sub_188CA54((unsigned int *)(a1 + 40), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 48);
    *v5 += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  int v8 = *(_DWORD *)(a2 + 56);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v11 = *(_DWORD *)(a2 + 80);
  if (v11)
  {
    int v12 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_152F86C((std::string *)(a1 + 72), v13, v12, v11, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v14 = *(_DWORD *)(a1 + 80) + v11;
    *(_DWORD *)(a1 + 80) = v14;
    unint64_t v15 = *(int **)(a1 + 88);
    if (*v15 < v14) {
      *unint64_t v15 = v14;
    }
  }
  int v16 = *(_DWORD *)(a2 + 104);
  if (v16)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v18 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_152F86C((std::string *)(a1 + 96), v18, v17, v16, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v19 = *(_DWORD *)(a1 + 104) + v16;
    *(_DWORD *)(a1 + 104) = v19;
    uint64_t v20 = *(int **)(a1 + 112);
    if (*v20 < v19) {
      int *v20 = v19;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_152A3BC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_152A3C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitNodeIncidentDetails");
}

void *sub_152A3D4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_152A448(void *a1)
{
  sub_152A3D4(a1);

  operator delete();
}

uint64_t sub_152A480(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_152A4A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_152A694(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_152A838(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_152A8D8()
{
  return 1;
}

void *sub_152A8E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitIncidentStopPair");
}

uint64_t sub_152A8F0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24BEB70;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_152A960(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_152A990(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253CCC8)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_152966C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_152AA50(uint64_t a1)
{
  sub_152A990(a1);

  operator delete();
}

uint64_t sub_152AA88(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1529748(*(void *)(a1 + 48));
  }
  if ((v3 & 0xE) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_152AAFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v34 + 2;
      }
    }
    unsigned int v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_35;
        }
        v5 |= 2u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          unsigned int v34 = v12;
          *(void *)(a1 + 56) = v13;
          goto LABEL_45;
        }
        unint64_t v28 = (char *)sub_188C138((uint64_t)v8, v13);
        unsigned int v34 = v28;
        *(void *)(a1 + 56) = v29;
        if (v28) {
          goto LABEL_45;
        }
        goto LABEL_60;
      case 2u:
        if (v9 != 16) {
          goto LABEL_35;
        }
        unint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          unsigned int v34 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v34) {
            goto LABEL_60;
          }
          unint64_t v16 = v30;
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          unsigned int v34 = v15;
        }
        if (v16 > 0x14 || ((1 << v16) & 0x11043F) == 0)
        {
          if (*v7) {
            uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 72) = v16;
        }
        goto LABEL_45;
      case 3u:
        if (v9 != 24) {
          goto LABEL_35;
        }
        v5 |= 4u;
        int v20 = v8 + 1;
        uint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v21);
          unsigned int v34 = v31;
          *(void *)(a1 + 64) = v32;
          if (!v31) {
            goto LABEL_60;
          }
        }
        else
        {
          int v20 = v8 + 2;
LABEL_28:
          unsigned int v34 = v20;
          *(void *)(a1 + 64) = v21;
        }
        goto LABEL_45;
      case 4u:
        if (v9 != 34) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v23 = *(void *)(a1 + 48);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_152D7BC((uint64_t)v24);
          *(void *)(a1 + 48) = v23;
          unint64_t v8 = v34;
        }
        unint64_t v25 = sub_152AE6C(a3, v23, (unsigned __int8 *)v8);
        goto LABEL_44;
      default:
LABEL_35:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (v9 - 7600 > 0x18F)
          {
            if (*v7)
            {
              int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v34;
            }
            unint64_t v25 = (char *)sub_1885AC0(v9, v27, v8, a3);
          }
          else
          {
            unint64_t v25 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_253CCC8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_44:
          unsigned int v34 = v25;
          if (!v25) {
            goto LABEL_60;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_60:
        }
          unsigned int v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v34;
    }
  }
}

char *sub_152AE6C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15297FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_152AEFC(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 72);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 64);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 120);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_1529D58(v16, v18, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_152B1A4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_14;
  }
  if (v3)
  {
    uint64_t v4 = sub_152A07C(*(void *)(a1 + 48));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
LABEL_9:
  v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  int v5 = *(_DWORD *)(a1 + 72);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v6;
LABEL_14:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_152B2D4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_152D7BC((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v9 = &off_253CC48;
      }
      sub_152A1F4(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_21:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_152B3D8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_152B420@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitIncidentEntity");
}

uint64_t sub_152B430(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24BEBF0;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(void *)(a1 + 184) = 0;
  return a1;
}

void sub_152B4C0(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_152B4F0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_152B588((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_152F658(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_152B588(uint64_t result)
{
  if ((uint64_t (***)())result != &off_253CD18)
  {
    int v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 72);
    if (v2)
    {
      sub_1520DD4(v2);
      operator delete();
    }
    uint64_t v3 = v1[10];
    if (v3)
    {
      sub_1520DD4(v3);
      operator delete();
    }
    uint64_t v4 = v1[11];
    if (v4)
    {
      sub_1520DD4(v4);
      operator delete();
    }
    uint64_t v5 = v1[12];
    if (v5)
    {
      sub_1520DD4(v5);
      operator delete();
    }
    uint64_t v6 = v1[13];
    if (v6)
    {
      sub_1520DD4(v6);
      operator delete();
    }
    uint64_t v7 = v1[14];
    if (v7)
    {
      sub_1520DD4(v7);
      operator delete();
    }
    uint64_t result = v1[15];
    if (result)
    {
      sub_1520DD4(result);
      operator delete();
    }
  }
  return result;
}

void sub_152B6B4(void *a1)
{
  sub_152B4F0(a1);

  operator delete();
}

uint64_t sub_152B6EC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_152AA88(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x7F) == 0) {
    goto LABEL_14;
  }
  if (v6)
  {
    uint64_t result = sub_1520ED0(*(void *)(a1 + 72));
    if ((v6 & 2) == 0)
    {
LABEL_8:
      if ((v6 & 4) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_8;
  }
  uint64_t result = sub_1520ED0(*(void *)(a1 + 80));
  if ((v6 & 4) == 0)
  {
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = sub_1520ED0(*(void *)(a1 + 88));
  if ((v6 & 8) == 0)
  {
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_24:
    uint64_t result = sub_1520ED0(*(void *)(a1 + 104));
    if ((v6 & 0x20) == 0)
    {
LABEL_12:
      if ((v6 & 0x40) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_23:
  uint64_t result = sub_1520ED0(*(void *)(a1 + 96));
  if ((v6 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_11:
  if ((v6 & 0x20) == 0) {
    goto LABEL_12;
  }
LABEL_25:
  uint64_t result = sub_1520ED0(*(void *)(a1 + 112));
  if ((v6 & 0x40) != 0) {
LABEL_13:
  }
    uint64_t result = sub_1520ED0(*(void *)(a1 + 120));
LABEL_14:
  *(void *)(a1 + 128) = 0;
  if ((v6 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(void *)(v7 + 176) = 0;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_152B810(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v80 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v80, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v80 + 1;
    unsigned int v9 = *v80;
    if (*v80 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v80, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v80 + 2;
      }
    }
    uint64_t v80 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_111;
        }
        v5 |= 0x80u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v80 = v12;
          *(void *)(a1 + 128) = v13;
          goto LABEL_109;
        }
        uint64_t v60 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v80 = v60;
        *(void *)(a1 + 128) = v61;
        if (v60) {
          goto LABEL_109;
        }
        goto LABEL_147;
      case 2u:
        if (v9 != 18) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v15 = *(void *)(a1 + 72);
        if (v15) {
          goto LABEL_107;
        }
        uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v15 = sub_152D1E0((uint64_t)v16);
        *(void *)(a1 + 72) = v15;
        goto LABEL_106;
      case 3u:
        if (v9 != 26) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 80);
        if (v15) {
          goto LABEL_107;
        }
        unsigned int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v17 = (void *)*v17;
        }
        uint64_t v15 = sub_152D1E0((uint64_t)v17);
        *(void *)(a1 + 80) = v15;
        goto LABEL_106;
      case 4u:
        if (v9 != 32) {
          goto LABEL_111;
        }
        int v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v80 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v80) {
            goto LABEL_147;
          }
          unint64_t v19 = v62;
        }
        else
        {
          int v18 = v8 + 2;
LABEL_28:
          uint64_t v80 = v18;
        }
        if (v19 > 1)
        {
          if (*v7) {
            uint64_t v79 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v79 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v19, v79);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          *(_DWORD *)(a1 + 168) = v19;
        }
        goto LABEL_109;
      case 5u:
        if (v9 != 40) {
          goto LABEL_111;
        }
        v5 |= 0x100u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v63 = (char *)sub_188C138((uint64_t)v8, v23);
          uint64_t v80 = v63;
          *(void *)(a1 + 136) = v64;
          if (!v63) {
            goto LABEL_147;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_35:
          uint64_t v80 = v22;
          *(void *)(a1 + 136) = v23;
        }
        goto LABEL_109;
      case 6u:
        if (v9 != 48) {
          goto LABEL_111;
        }
        v5 |= 0x200u;
        unint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v65 = (char *)sub_188C138((uint64_t)v8, v26);
          uint64_t v80 = v65;
          *(void *)(a1 + 144) = v66;
          if (!v65) {
            goto LABEL_147;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_40:
          uint64_t v80 = v25;
          *(void *)(a1 + 144) = v26;
        }
        goto LABEL_109;
      case 7u:
        if (v9 != 56) {
          goto LABEL_111;
        }
        v5 |= 0x400u;
        unint64_t v28 = v8 + 1;
        uint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v67 = (char *)sub_188C138((uint64_t)v8, v29);
          uint64_t v80 = v67;
          *(void *)(a1 + 152) = v68;
          if (!v67) {
            goto LABEL_147;
          }
        }
        else
        {
          unint64_t v28 = v8 + 2;
LABEL_45:
          uint64_t v80 = v28;
          *(void *)(a1 + 152) = v29;
        }
        goto LABEL_109;
      case 8u:
        if (v9 != 64) {
          goto LABEL_111;
        }
        v5 |= 0x800u;
        uint64_t v31 = v8 + 1;
        uint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v69 = (char *)sub_188C138((uint64_t)v8, v32);
          uint64_t v80 = v69;
          *(void *)(a1 + 160) = v70;
          if (!v69) {
            goto LABEL_147;
          }
        }
        else
        {
          uint64_t v31 = v8 + 2;
LABEL_50:
          uint64_t v80 = v31;
          *(void *)(a1 + 160) = v32;
        }
        goto LABEL_109;
      case 9u:
        if (v9 != 74) {
          goto LABEL_111;
        }
        unsigned int v34 = v8 - 1;
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          uint64_t v80 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 64);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 56), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 56) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_152D894(*(void *)(a1 + 48));
            uint64_t v38 = sub_188CDC8(a1 + 48, v39);
            uint64_t v35 = (unsigned __int8 *)v80;
          }
          unsigned int v34 = sub_152C070(a3, v38, v35);
          uint64_t v80 = v34;
          if (!v34) {
            goto LABEL_147;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 74) {
            goto LABEL_109;
          }
        }
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_111;
        }
        v5 |= 0x2000u;
        BOOL v40 = v8 + 1;
        uint64_t v41 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v42 = *v40;
        uint64_t v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          uint64_t v71 = (char *)sub_188C138((uint64_t)v8, v41);
          uint64_t v80 = v71;
          *(unsigned char *)(a1 + 172) = v72 != 0;
          if (!v71) {
            goto LABEL_147;
          }
        }
        else
        {
          BOOL v40 = v8 + 2;
LABEL_65:
          uint64_t v80 = v40;
          *(unsigned char *)(a1 + 172) = v41 != 0;
        }
        goto LABEL_109;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 88);
        if (v15) {
          goto LABEL_107;
        }
        long long v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          long long v43 = (void *)*v43;
        }
        uint64_t v15 = sub_152D1E0((uint64_t)v43);
        *(void *)(a1 + 88) = v15;
        goto LABEL_106;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v15 = *(void *)(a1 + 96);
        if (v15) {
          goto LABEL_107;
        }
        uint64_t v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v44 = (void *)*v44;
        }
        uint64_t v15 = sub_152D1E0((uint64_t)v44);
        *(void *)(a1 + 96) = v15;
        goto LABEL_106;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v15 = *(void *)(a1 + 104);
        if (v15) {
          goto LABEL_107;
        }
        int v45 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v45 = (void *)*v45;
        }
        uint64_t v15 = sub_152D1E0((uint64_t)v45);
        *(void *)(a1 + 104) = v15;
        goto LABEL_106;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v15 = *(void *)(a1 + 112);
        if (v15) {
          goto LABEL_107;
        }
        uint64_t v46 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v46 = (void *)*v46;
        }
        uint64_t v15 = sub_152D1E0((uint64_t)v46);
        *(void *)(a1 + 112) = v15;
        goto LABEL_106;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_111;
        }
        v5 |= 0x8000u;
        int v47 = v8 + 1;
        uint64_t v48 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_90;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v73 = (char *)sub_188C138((uint64_t)v8, v48);
          uint64_t v80 = v73;
          *(void *)(a1 + 176) = v74;
          if (!v73) {
            goto LABEL_147;
          }
        }
        else
        {
          int v47 = v8 + 2;
LABEL_90:
          uint64_t v80 = v47;
          *(void *)(a1 + 176) = v48;
        }
        goto LABEL_109;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_111;
        }
        v5 |= 0x4000u;
        uint64_t v50 = v8 + 1;
        uint64_t v51 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_95;
        }
        int v52 = *v50;
        uint64_t v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t v75 = (char *)sub_188C138((uint64_t)v8, v51);
          uint64_t v80 = v75;
          *(unsigned char *)(a1 + 173) = v76 != 0;
          if (!v75) {
            goto LABEL_147;
          }
        }
        else
        {
          uint64_t v50 = v8 + 2;
LABEL_95:
          uint64_t v80 = v50;
          *(unsigned char *)(a1 + 173) = v51 != 0;
        }
        goto LABEL_109;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_111;
        }
        v5 |= 0x10000u;
        uint64_t v53 = v8 + 1;
        uint64_t v54 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_100;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v77 = (char *)sub_188C138((uint64_t)v8, v54);
          uint64_t v80 = v77;
          *(void *)(a1 + 184) = v78;
          if (!v77) {
            goto LABEL_147;
          }
        }
        else
        {
          uint64_t v53 = v8 + 2;
LABEL_100:
          uint64_t v80 = v53;
          *(void *)(a1 + 184) = v54;
        }
        goto LABEL_109;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v15 = *(void *)(a1 + 120);
        if (v15) {
          goto LABEL_107;
        }
        unint64_t v56 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v56 = (void *)*v56;
        }
        uint64_t v15 = sub_152D1E0((uint64_t)v56);
        *(void *)(a1 + 120) = v15;
LABEL_106:
        char v8 = v80;
LABEL_107:
        uint64_t v57 = sub_1521F48(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_108;
      default:
LABEL_111:
        if (v9) {
          BOOL v58 = (v9 & 7) == 4;
        }
        else {
          BOOL v58 = 1;
        }
        if (!v58)
        {
          if (v9 - 7200 > 0x31F)
          {
            if (*v7)
            {
              uint64_t v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = v80;
            }
            uint64_t v57 = (char *)sub_1885AC0(v9, v59, v8, a3);
          }
          else
          {
            uint64_t v57 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_253CD18, (uint64_t *)(a1 + 8), a3);
          }
LABEL_108:
          uint64_t v80 = v57;
          if (!v57) {
            goto LABEL_147;
          }
LABEL_109:
          if (sub_11947B8((uint64_t)a3, &v80, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_147:
        }
          uint64_t v80 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v80;
    }
  }
}

char *sub_152C070(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_152AAFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_152C100(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 128);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15212A4(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 80);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v13, v15, a3);
  if ((v6 & 0x1000) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 168);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(void *)(a1 + 136);
    char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(void *)(a1 + 144);
    char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(void *)(a1 + 152);
    char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(void *)(a1 + 160);
    char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v31 = *(_DWORD *)(a1 + 56);
  if (v31)
  {
    for (int i = 0; i != v31; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 74;
      unsigned int v34 = *(_DWORD *)(v33 + 44);
      v4[1] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, v4 + 1);
      }
      else {
        uint64_t v35 = v4 + 2;
      }
      uint64_t v4 = sub_152AEFC(v33, v35, a3);
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v36 = *(unsigned char *)(a1 + 172);
    char *v4 = 80;
    v4[1] = v36;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_68:
      if ((v6 & 8) == 0) {
        goto LABEL_69;
      }
      goto LABEL_82;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_68;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 88);
  char *v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v37, v39, a3);
  if ((v6 & 8) == 0)
  {
LABEL_69:
    if ((v6 & 0x10) == 0) {
      goto LABEL_70;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 96);
  char *v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    int v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    int v42 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v40, v42, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_70:
    if ((v6 & 0x20) == 0) {
      goto LABEL_71;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 104);
  char *v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 20);
  v4[1] = v44;
  if (v44 > 0x7F) {
    int v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    int v45 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v43, v45, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_71:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_100;
  }
LABEL_94:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 112);
  char *v4 = 114;
  unsigned int v47 = *(_DWORD *)(v46 + 20);
  v4[1] = v47;
  if (v47 > 0x7F) {
    uint64_t v48 = sub_188A9CC(v47, v4 + 1);
  }
  else {
    uint64_t v48 = v4 + 2;
  }
  uint64_t v4 = sub_15212A4(v46, v48, a3);
  if ((v6 & 0x8000) != 0)
  {
LABEL_100:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v49 = *(void *)(a1 + 176);
    char *v4 = 120;
    v4[1] = v49;
    if (v49 > 0x7F)
    {
      v4[1] = v49 | 0x80;
      unint64_t v50 = v49 >> 7;
      v4[2] = v49 >> 7;
      v4 += 3;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_106:
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v52 = *(unsigned char *)(a1 + 173);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v52;
    v4 += 3;
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v53 = *(void *)(a1 + 184);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v53;
    if (v53 > 0x7F)
    {
      v4[2] = v53 | 0x80;
      unint64_t v54 = v53 >> 7;
      v4[3] = v53 >> 7;
      v4 += 4;
      if (v53 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v55 = v54 >> 14;
          v54 >>= 7;
          *v4++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v56 = *(void *)(a1 + 120);
    *(_WORD *)uint64_t v4 = 410;
    unsigned int v57 = *(_DWORD *)(v56 + 20);
    v4[2] = v57;
    if (v57 > 0x7F) {
      BOOL v58 = sub_188A9CC(v57, v4 + 2);
    }
    else {
      BOOL v58 = v4 + 3;
    }
    uint64_t v4 = sub_15212A4(v56, v58, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 900, 1000, v4, a3);
  }
  uint64_t v59 = *(void *)(a1 + 8);
  if ((v59 & 1) == 0) {
    return v4;
  }
  unint64_t v61 = v59 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v61 + 31) < 0)
  {
    unint64_t v62 = *(void **)(v61 + 8);
    uint64_t v63 = *(void *)(v61 + 16);
  }
  else
  {
    unint64_t v62 = (void *)(v61 + 8);
    LODWORD(v63) = *(unsigned __int8 *)(v61 + 31);
  }
  if (*a3 - (void)v4 >= (int)v63)
  {
    uint64_t v64 = (int)v63;
    memcpy(v4, v62, (int)v63);
    v4 += v64;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v62, v63, v4);
}

uint64_t sub_152C99C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_152B1A4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v10) {
    goto LABEL_17;
  }
  if (v10)
  {
    uint64_t v11 = sub_15214CC(*(void *)(a1 + 72));
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v12 = sub_15214CC(*(void *)(a1 + 80));
  v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v13 = sub_15214CC(*(void *)(a1 + 88));
  v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v14 = sub_15214CC(*(void *)(a1 + 96));
  v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_29:
    uint64_t v16 = sub_15214CC(*(void *)(a1 + 112));
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_30;
  }
LABEL_28:
  uint64_t v15 = sub_15214CC(*(void *)(a1 + 104));
  v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_30:
  uint64_t v17 = sub_15214CC(*(void *)(a1 + 120));
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 0x80) != 0) {
LABEL_16:
  }
    v4 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_17:
  if ((v10 & 0xFF00) == 0) {
    goto LABEL_47;
  }
  if ((v10 & 0x100) != 0)
  {
    v4 += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 0x200) == 0)
    {
LABEL_20:
      if ((v10 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_34;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  v4 += ((9 * (__clz(*(void *)(a1 + 144) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v10 & 0x400) == 0)
  {
LABEL_21:
    if ((v10 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_35;
  }
LABEL_34:
  v4 += ((9 * (__clz(*(void *)(a1 + 152) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v10 & 0x800) == 0)
  {
LABEL_22:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_40;
    }
LABEL_36:
    int v18 = *(_DWORD *)(a1 + 168);
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v19;
    goto LABEL_40;
  }
LABEL_35:
  v4 += ((9 * (__clz(*(void *)(a1 + 160) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v10 & 0x1000) != 0) {
    goto LABEL_36;
  }
LABEL_40:
  uint64_t v20 = v4 + 2;
  if ((v10 & 0x2000) == 0) {
    uint64_t v20 = v4;
  }
  if ((v10 & 0x4000) != 0) {
    uint64_t v4 = v20 + 3;
  }
  else {
    uint64_t v4 = v20;
  }
  if ((v10 & 0x8000) != 0) {
    v4 += ((9 * (__clz(*(void *)(a1 + 176) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_47:
  if ((v10 & 0x10000) != 0) {
    v4 += ((9 * (__clz(*(void *)(a1 + 184) | 1) ^ 0x3F) + 73) >> 6) + 2;
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v4 += v24;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_152CD30(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_152F8E8((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(std::string **)(a1 + 72);
      if (!v12)
      {
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (void *)*v14;
        }
        uint64_t v12 = (std::string *)sub_152D1E0((uint64_t)v14);
        *(void *)(a1 + 72) = v12;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v15 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v15 = &off_253C920;
      }
      sub_15215EC(v12, (uint64_t)v15);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_48;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v16 = *(std::string **)(a1 + 80);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      int v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        int v18 = (void *)*v18;
      }
      uint64_t v16 = (std::string *)sub_152D1E0((uint64_t)v18);
      *(void *)(a1 + 80) = v16;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v19 = &off_253C920;
    }
    sub_15215EC(v16, (uint64_t)v19);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_56;
    }
LABEL_48:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v20 = *(std::string **)(a1 + 88);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = (std::string *)sub_152D1E0((uint64_t)v22);
      *(void *)(a1 + 88) = v20;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v23 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v23 = &off_253C920;
    }
    sub_15215EC(v20, (uint64_t)v23);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_64;
    }
LABEL_56:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v24 = *(std::string **)(a1 + 96);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      unint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        unint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = (std::string *)sub_152D1E0((uint64_t)v26);
      *(void *)(a1 + 96) = v24;
    }
    if (*(void *)(a2 + 96)) {
      unint64_t v27 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      unint64_t v27 = &off_253C920;
    }
    sub_15215EC(v24, (uint64_t)v27);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_72;
    }
LABEL_64:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    unint64_t v28 = *(std::string **)(a1 + 104);
    if (!v28)
    {
      uint64_t v29 = *(void *)(a1 + 8);
      unint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
      if (v29) {
        unint64_t v30 = (void *)*v30;
      }
      unint64_t v28 = (std::string *)sub_152D1E0((uint64_t)v30);
      *(void *)(a1 + 104) = v28;
    }
    if (*(void *)(a2 + 104)) {
      int v31 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      int v31 = &off_253C920;
    }
    sub_15215EC(v28, (uint64_t)v31);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_80;
    }
LABEL_72:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v32 = *(std::string **)(a1 + 112);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      unsigned int v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        unsigned int v34 = (void *)*v34;
      }
      uint64_t v32 = (std::string *)sub_152D1E0((uint64_t)v34);
      *(void *)(a1 + 112) = v32;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v35 = &off_253C920;
    }
    sub_15215EC(v32, (uint64_t)v35);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      goto LABEL_14;
    }
LABEL_80:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    char v36 = *(std::string **)(a1 + 120);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      unsigned int v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        unsigned int v38 = (void *)*v38;
      }
      char v36 = (std::string *)sub_152D1E0((uint64_t)v38);
      *(void *)(a1 + 120) = v36;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v39 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v39 = &off_253C920;
    }
    sub_15215EC(v36, (uint64_t)v39);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_26;
  }
  if ((v9 & 0x100) != 0)
  {
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    if ((v9 & 0x200) == 0)
    {
LABEL_18:
      if ((v9 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_91;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  if ((v9 & 0x400) == 0)
  {
LABEL_19:
    if ((v9 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_92;
  }
LABEL_91:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  if ((v9 & 0x800) == 0)
  {
LABEL_20:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_93;
  }
LABEL_92:
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  if ((v9 & 0x1000) == 0)
  {
LABEL_21:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_94;
  }
LABEL_93:
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  if ((v9 & 0x2000) == 0)
  {
LABEL_22:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_23;
    }
LABEL_95:
    *(unsigned char *)(a1 + 173) = *(unsigned char *)(a2 + 173);
    if ((v9 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_94:
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  if ((v9 & 0x4000) != 0) {
    goto LABEL_95;
  }
LABEL_23:
  if ((v9 & 0x8000) != 0) {
LABEL_24:
  }
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
LABEL_25:
  *(_DWORD *)(a1 + 40) |= v9;
LABEL_26:
  if ((v9 & 0x10000) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 184);
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    *(void *)(a1 + 184) = v10;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_152D0E0(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_152B3D8(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_152D148@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geodata.TransitIncident");
}

void *sub_152D158(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BE470;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_152D1E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE4F0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_152D284(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BE570;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_152D300(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BE5F0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_152D388(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE670;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_152D42C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BE6F0;
  result[2] = 0;
  result[3] = 0;
  *(void *)((char *)result + 29) = 0;
  return result;
}

uint64_t sub_152D4A8(uint64_t a1)
{
  if (!a1)
  {
    sub_152F974();
  }

  return sub_152374C(v3, a1, 0);
}

uint64_t sub_152D504(uint64_t a1)
{
  if (!a1)
  {
    sub_152F9E0();
  }

  return sub_1525154(v3, a1, 0);
}

uint64_t sub_152D560(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BE870;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  *(_DWORD *)(result + 160) = 0;
  return result;
}

void *sub_152D60C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BE8F0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_152D684(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24BE970;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

double sub_152D700(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24BE9F0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  return result;
}

uint64_t sub_152D7BC(uint64_t a1)
{
  if (!a1)
  {
    sub_152FA4C();
  }

  return sub_15295B4(v3, a1, 0);
}

void *sub_152D818(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BEAF0;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_152D894(uint64_t a1)
{
  if (!a1)
  {
    sub_152FAB8();
  }

  return sub_152A8F0(v3, a1, 0);
}

uint64_t sub_152D8F0(uint64_t a1)
{
  if (!a1)
  {
    sub_152FB24();
  }

  return sub_152B430(v3, a1, 0);
}

uint64_t sub_152D94C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_152DA18(uint64_t a1)
{
  sub_152D94C(a1);

  operator delete();
}

uint64_t sub_152DA50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_152DB08(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)unint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      int v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)unint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)unint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_152DCF8(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_152DE10(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_152DF30()
{
  return 1;
}

void *sub_152DF38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.community.TranslatedString");
}

void *sub_152DF48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BEC70;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_152DFD0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C6960(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_152E060(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15C92D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_152E0F0()
{
}

uint64_t sub_152E158(uint64_t a1, uint64_t a2)
{
  return sub_151FF6C(a2);
}

uint64_t sub_152E160(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E168()
{
}

void *sub_152E1BC(uint64_t a1, uint64_t a2)
{
  return sub_152001C(a2);
}

uint64_t sub_152E1C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E1CC()
{
}

uint64_t sub_152E21C(uint64_t a1, uint64_t a2)
{
  return sub_15200B8(a2);
}

uint64_t sub_152E224(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E22C()
{
}

double sub_152E284(uint64_t a1, uint64_t a2)
{
  return sub_1520134(a2);
}

uint64_t sub_152E28C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E294()
{
}

uint64_t sub_152E2F4(uint64_t a1, uint64_t a2)
{
  return sub_15201B8(a2);
}

uint64_t sub_152E2FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E304()
{
}

uint64_t sub_152E360(uint64_t a1, uint64_t a2)
{
  return sub_1520260(a2);
}

uint64_t sub_152E368(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E370()
{
}

double sub_152E3C4(uint64_t a1, uint64_t a2)
{
  return sub_1520314(a2);
}

uint64_t sub_152E3CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E3D4()
{
}

void *sub_152E420(uint64_t a1, uint64_t a2)
{
  return sub_1520394(a2);
}

uint64_t sub_152E428(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E430()
{
}

uint64_t sub_152E48C(uint64_t a1, uint64_t a2)
{
  return sub_152040C(a2);
}

uint64_t sub_152E494(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E49C()
{
}

uint64_t sub_152E4F0(uint64_t a1, uint64_t a2)
{
  return sub_15204B8(a2);
}

uint64_t sub_152E4F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E500()
{
}

uint64_t sub_152E560(uint64_t a1, uint64_t a2)
{
  return sub_1520554(a2);
}

uint64_t sub_152E568(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E570()
{
}

uint64_t sub_152E5C0(uint64_t a1, uint64_t a2)
{
  return sub_15205FC(a2);
}

uint64_t sub_152E5C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E5D0()
{
}

void *sub_152E62C(uint64_t a1, uint64_t a2)
{
  return sub_152D158(a2);
}

uint64_t sub_152E634(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E63C()
{
}

uint64_t sub_152E690(uint64_t a1, uint64_t a2)
{
  return sub_152D1E0(a2);
}

uint64_t sub_152E698(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E6A0()
{
}

void *sub_152E6F0(uint64_t a1, uint64_t a2)
{
  return sub_152D284(a2);
}

uint64_t sub_152E6F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E700()
{
}

uint64_t sub_152E75C(uint64_t a1, uint64_t a2)
{
  return sub_152D300(a2);
}

uint64_t sub_152E764(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E76C()
{
}

uint64_t sub_152E7C0(uint64_t a1, uint64_t a2)
{
  return sub_152D388(a2);
}

uint64_t sub_152E7C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E7D0()
{
}

void *sub_152E820(uint64_t a1, uint64_t a2)
{
  return sub_152D42C(a2);
}

uint64_t sub_152E828(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E830()
{
}

void sub_152E878()
{
}

uint64_t sub_152E89C(uint64_t a1, uint64_t a2)
{
  return sub_152D4A8(a2);
}

uint64_t sub_152E8A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_152E8AC()
{
}

void sub_152E8F4()
{
}

uint64_t sub_152E918(uint64_t a1, uint64_t a2)
{
  return sub_152D504(a2);
}

uint64_t sub_152E920(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_152E928()
{
}

uint64_t sub_152E98C(uint64_t a1, uint64_t a2)
{
  return sub_152D560(a2);
}

uint64_t sub_152E994(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E99C()
{
}

void *sub_152E9E8(uint64_t a1, uint64_t a2)
{
  return sub_152D60C(a2);
}

uint64_t sub_152E9F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152E9F8()
{
}

double sub_152EA48(uint64_t a1, uint64_t a2)
{
  return sub_152D684(a2);
}

uint64_t sub_152EA50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152EA58()
{
}

double sub_152EAB4(uint64_t a1, uint64_t a2)
{
  return sub_152D700(a2);
}

uint64_t sub_152EABC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152EAC4()
{
}

void sub_152EB0C()
{
}

uint64_t sub_152EB30(uint64_t a1, uint64_t a2)
{
  return sub_152D7BC(a2);
}

uint64_t sub_152EB38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

void sub_152EB40()
{
}

void *sub_152EB90(uint64_t a1, uint64_t a2)
{
  return sub_152D818(a2);
}

uint64_t sub_152EB98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152EBA0()
{
}

void sub_152EBE8()
{
}

uint64_t sub_152EC0C(uint64_t a1, uint64_t a2)
{
  return sub_152D894(a2);
}

uint64_t sub_152EC14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_152EC1C()
{
}

void sub_152EC64()
{
}

uint64_t sub_152EC88(uint64_t a1, uint64_t a2)
{
  return sub_152D8F0(a2);
}

uint64_t sub_152EC90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_152EC98()
{
}

void *sub_152ECF4(uint64_t a1, uint64_t a2)
{
  return sub_152DF48(a2);
}

uint64_t sub_152ECFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_152ED04(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1518388(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152ED84(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15192A8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152EE04(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_151AF48(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152EE84(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_151D104(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152EF04(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_151E294(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152EF84(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_151BF44(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152F004(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_151EF58(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152F084(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_152001C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_152F100(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_152F100(uint64_t a1, uint64_t a2)
{
}

void sub_152F110(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1520134(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      unint64_t v14 = *v7++;
      sub_152F18C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_152F18C(uint64_t a1, std::string *a2)
{
  return sub_1519FDC(a2, a1);
}

void sub_152F19C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1520260(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_152F218(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_152F218(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_152F228(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_152040C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_152F2A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_152F2A4(uint64_t a1, std::string *a2)
{
  return sub_151DEE0(a2, a1);
}

uint64_t *sub_152F2B4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15204B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_152F330(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_152F330(uint64_t a1, std::string *a2)
{
  return sub_151EBBC(a2, a1);
}

void sub_152F340(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1520314(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      unint64_t v14 = *v7++;
      sub_152F3BC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_152F3BC(uint64_t a1, std::string *a2)
{
  return sub_151C78C(a2, a1);
}

uint64_t *sub_152F3CC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1520554(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_152F448(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_152F448(uint64_t a1, std::string *a2)
{
  return sub_151F89C(a2, a1);
}

void sub_152F458(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15207D8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152F4D8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_152310C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152F558(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_152798C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152F5D8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_152A3D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_152F658(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_152A990(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_152F6D8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_152D158(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B604(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_152F754(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_152D42C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_152F7D0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_152F7D0(uint64_t a1, std::string *a2)
{
  return sub_15236D0(a2, a1);
}

void sub_152F7E0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_152D684(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_152F85C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_152F85C(uint64_t a1, uint64_t a2)
{
}

std::string *sub_152F86C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_152D818(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11131F8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_152F8E8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_152D894(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_152F964(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_152F964(uint64_t a1, uint64_t a2)
{
}

void sub_152F974()
{
}

void sub_152F9BC()
{
}

void sub_152F9E0()
{
}

void sub_152FA28()
{
}

void sub_152FA4C()
{
}

void sub_152FA94()
{
}

void sub_152FAB8()
{
}

void sub_152FB00()
{
}

void sub_152FB24()
{
}

void sub_152FB6C()
{
}

void sub_152FB90()
{
  dword_254F3A0 = 100;
  qword_254F3A8 = (uint64_t)&off_2531F48;
  sub_1882AC4((unint64_t)&off_253FB60, 100, 11, 1, 0, (uint64_t)&off_2531F48);
  dword_254F3B0 = 10000;
  qword_254F3B8 = (uint64_t)&off_254CA18;

  sub_1882AC4((unint64_t)&off_25497B0, 10000, 11, 0, 0, (uint64_t)&off_254CA18);
}

uint64_t sub_152FC20()
{
  qword_2607F18 = (uint64_t)"MERGE_DONEMERGE_NOT_APPLICABLEMERGE_REQUIRED";
  unk_2607F20 = 10;
  dword_2607F28 = 2;
  qword_2607F30 = (uint64_t)"MERGE_NOT_APPLICABLEMERGE_REQUIRED";
  unk_2607F38 = 20;
  dword_2607F40 = 0;
  qword_2607F48 = (uint64_t)"MERGE_REQUIRED";
  unk_2607F50 = 14;
  dword_2607F58 = 1;
  qword_2607F60 = (uint64_t)"LS_LIVE_FWD_GEOLS_OLD_FWD_GEO";
  *(void *)algn_2607F68 = 15;
  dword_2607F70 = 1;
  qword_2607F78 = (uint64_t)"LS_OLD_FWD_GEO";
  unk_2607F80 = 14;
  dword_2607F88 = 2;
  qword_2607F90 = (uint64_t)"DEPLOYMENT_FAILURERESPONSE_SUCCESSROUTE_FAILUREUNKNOWN_PRECACHEUNKNOWN_RESPONSE_STATUS";
  *(void *)algn_2607F98 = 18;
  dword_2607FA0 = 3;
  qword_2607FA8 = (uint64_t)"RESPONSE_SUCCESSROUTE_FAILUREUNKNOWN_PRECACHEUNKNOWN_RESPONSE_STATUS";
  unk_2607FB0 = 16;
  dword_2607FB8 = 1;
  qword_2607FC0 = (uint64_t)"ROUTE_FAILUREUNKNOWN_PRECACHEUNKNOWN_RESPONSE_STATUS";
  unk_2607FC8 = 13;
  dword_2607FD0 = 4;
  qword_2607FD8 = (uint64_t)"UNKNOWN_PRECACHEUNKNOWN_RESPONSE_STATUS";
  unk_2607FE0 = 16;
  dword_2607FE8 = 2;
  qword_2607FF0 = (uint64_t)"UNKNOWN_RESPONSE_STATUS";
  unk_2607FF8 = 23;
  dword_2608000 = 0;
  qword_2608090 = (uint64_t)"FARE_CALCULATION_FAILEDINVALID_ROUTEINVALID_VALUEMISSING_GTFS_MAPPINGMISSING_PLATFORM_ZONESMI"
                           "SSING_SYSTEM_FARESNO_VALID_FARESROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STAT"
                           "USUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  *(void *)algn_2608098 = 23;
  dword_26080A0 = 8;
  qword_26080A8 = (uint64_t)"INVALID_ROUTEINVALID_VALUEMISSING_GTFS_MAPPINGMISSING_PLATFORM_ZONESMISSING_SYSTEM_FARESNO_VALID_FARESROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_26080B0 = 13;
  dword_26080B8 = 7;
  qword_26080C0 = (uint64_t)"INVALID_VALUEMISSING_GTFS_MAPPINGMISSING_PLATFORM_ZONESMISSING_SYSTEM_FARESNO_VALID_FARESROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_26080C8 = 13;
  dword_26080D0 = 6;
  qword_26080D8 = (uint64_t)"MISSING_GTFS_MAPPINGMISSING_PLATFORM_ZONESMISSING_SYSTEM_FARESNO_VALID_FARESROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_26080E0 = 20;
  dword_26080E8 = 4;
  qword_26080F0 = (uint64_t)"MISSING_PLATFORM_ZONESMISSING_SYSTEM_FARESNO_VALID_FARESROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_26080F8 = 22;
  dword_2608100 = 11;
  qword_2608108 = (uint64_t)"MISSING_SYSTEM_FARESNO_VALID_FARESROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_2608110 = 20;
  dword_2608118 = 10;
  qword_2608120 = (uint64_t)"NO_VALID_FARESROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_2608128 = 14;
  dword_2608130 = 12;
  qword_2608138 = (uint64_t)"ROUTE_SUCCESSROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_2608140 = 13;
  dword_2608148 = 1;
  qword_2608150 = (uint64_t)"ROUTE_TOO_LONGUNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_2608158 = 14;
  dword_2608160 = 9;
  qword_2608168 = (uint64_t)"UNKNOWN_PLATFORMUNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_2608170 = 16;
  dword_2608178 = 5;
  qword_2608180 = (uint64_t)"UNKNOWN_ROUTE_STATUSUNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_2608188 = 20;
  dword_2608190 = 0;
  qword_2608198 = (uint64_t)"UNKNOWN_TRIPUNSPECIFIED_FAILURE";
  unk_26081A0 = 12;
  dword_26081A8 = 3;
  qword_26081B0 = (uint64_t)"UNSPECIFIED_FAILURE";
  unk_26081B8 = 19;
  dword_26081C0 = 2;
  qword_2608310 = (uint64_t)"INACCURATEUNKNOWN_RESTRICTIONVARIABLE";
  *(void *)algn_2608318 = 10;
  dword_2608320 = 1;
  qword_2608328 = (uint64_t)"UNKNOWN_RESTRICTIONVARIABLE";
  unk_2608330 = 19;
  dword_2608338 = 0;
  qword_2608340 = (uint64_t)"VARIABLE";
  unk_2608348 = 8;
  dword_2608350 = 2;
  qword_2608358 = (uint64_t)"A_SLEEPERB_SLEEPEREXPRESS_TICKETGRAN_CLASSGREENLINERNIGHT_DISCOUNTNON_RESERVED_SEATPANORAMA_S"
                           "EATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608360 = 9;
  dword_2608368 = 4;
  qword_2608370 = (uint64_t)"B_SLEEPEREXPRESS_TICKETGRAN_CLASSGREENLINERNIGHT_DISCOUNTNON_RESERVED_SEATPANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608378 = 9;
  dword_2608380 = 5;
  qword_2608388 = (uint64_t)"EXPRESS_TICKETGRAN_CLASSGREENLINERNIGHT_DISCOUNTNON_RESERVED_SEATPANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608390 = 14;
  dword_2608398 = 9;
  qword_26083A0 = (uint64_t)"GRAN_CLASSGREENLINERNIGHT_DISCOUNTNON_RESERVED_SEATPANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_26083A8 = 10;
  dword_26083B0 = 14;
  qword_26083B8 = (uint64_t)"GREENLINERNIGHT_DISCOUNTNON_RESERVED_SEATPANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_26083C0 = 5;
  dword_26083C8 = 3;
  qword_26083D0 = (uint64_t)"LINERNIGHT_DISCOUNTNON_RESERVED_SEATPANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_26083D8 = 5;
  dword_26083E0 = 7;
  qword_26083E8 = (uint64_t)"NIGHT_DISCOUNTNON_RESERVED_SEATPANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_26083F0 = 14;
  dword_26083F8 = 11;
  qword_2608400 = (uint64_t)"NON_RESERVED_SEATPANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608408 = 17;
  dword_2608410 = 2;
  qword_2608418 = (uint64_t)"PANORAMA_SEATRESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608420 = 13;
  dword_2608428 = 13;
  qword_2608430 = (uint64_t)"RESERVED_SEATSL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608438 = 13;
  dword_2608440 = 1;
  qword_2608448 = (uint64_t)"SL_TICKETSTANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608450 = 9;
  dword_2608458 = 12;
  qword_2608460 = (uint64_t)"STANDING_EXPRESS_TICKETTRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608468 = 23;
  dword_2608470 = 10;
  qword_2608478 = (uint64_t)"TRAIN_TICKETUNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608480 = 12;
  dword_2608488 = 6;
  qword_2608490 = (uint64_t)"UNKNOWN_TYPEVACANT_SEAT_ONLY";
  unk_2608498 = 12;
  dword_26084A0 = 0;
  qword_26084A8 = (uint64_t)"VACANT_SEAT_ONLY";
  unk_26084B0 = 16;
  dword_26084B8 = 15;
  qword_26084D8 = (uint64_t)"CURRENCY_AFNCURRENCY_ALLCURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26084F0 = (uint64_t)"CURRENCY_ALLCURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608508 = (uint64_t)"CURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608520 = (uint64_t)"CURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608538 = (uint64_t)"CURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608550 = (uint64_t)"CURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608568 = (uint64_t)"CURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608580 = (uint64_t)"CURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608598 = (uint64_t)"CURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26085B0 = (uint64_t)"CURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26085C8 = (uint64_t)"CURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26085E0 = (uint64_t)"CURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26085F8 = (uint64_t)"CURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608610 = (uint64_t)"CURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608628 = (uint64_t)"CURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608640 = (uint64_t)"CURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608658 = (uint64_t)"CURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608670 = (uint64_t)"CURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608688 = (uint64_t)"CURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26086A0 = (uint64_t)"CURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26086B8 = (uint64_t)"CURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26086D0 = (uint64_t)"CURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26086E8 = (uint64_t)"CURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608700 = (uint64_t)"CURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608718 = (uint64_t)"CURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608730 = (uint64_t)"CURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608748 = (uint64_t)"CURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608760 = (uint64_t)"CURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608778 = (uint64_t)"CURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608790 = (uint64_t)"CURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26087A8 = (uint64_t)"CURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26087C0 = (uint64_t)"CURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26087D8 = (uint64_t)"CURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26087F0 = (uint64_t)"CURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608808 = (uint64_t)"CURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608820 = (uint64_t)"CURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608838 = (uint64_t)"CURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608850 = (uint64_t)"CURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608868 = (uint64_t)"CURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608880 = (uint64_t)"CURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608898 = (uint64_t)"CURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26088B0 = (uint64_t)"CURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26088C8 = (uint64_t)"CURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26088E0 = (uint64_t)"CURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26088F8 = (uint64_t)"CURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608910 = (uint64_t)"CURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608928 = (uint64_t)"CURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608940 = (uint64_t)"CURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608958 = (uint64_t)"CURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608970 = (uint64_t)"CURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608988 = (uint64_t)"CURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26089A0 = (uint64_t)"CURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26089B8 = (uint64_t)"CURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26089D0 = (uint64_t)"CURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26089E8 = (uint64_t)"CURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608A00 = (uint64_t)"CURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608A18 = (uint64_t)"CURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608A30 = (uint64_t)"CURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608A48 = (uint64_t)"CURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608A60 = (uint64_t)"CURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608A78 = (uint64_t)"CURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608A90 = (uint64_t)"CURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608AA8 = (uint64_t)"CURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608AC0 = (uint64_t)"CURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608AD8 = (uint64_t)"CURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608AF0 = (uint64_t)"CURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608B08 = (uint64_t)"CURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608B20 = (uint64_t)"CURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608B38 = (uint64_t)"CURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608B50 = (uint64_t)"CURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608B68 = (uint64_t)"CURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608B80 = (uint64_t)"CURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608B98 = (uint64_t)"CURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608BB0 = (uint64_t)"CURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608BC8 = (uint64_t)"CURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608BE0 = (uint64_t)"CURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608BF8 = (uint64_t)"CURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608C10 = (uint64_t)"CURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608C28 = (uint64_t)"CURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608C40 = (uint64_t)"CURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608C58 = (uint64_t)"CURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608C70 = (uint64_t)"CURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608C88 = (uint64_t)"CURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608CA0 = (uint64_t)"CURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608CB8 = (uint64_t)"CURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608CD0 = (uint64_t)"CURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608CE8 = (uint64_t)"CURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608D00 = (uint64_t)"CURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608D18 = (uint64_t)"CURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608D30 = (uint64_t)"CURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608D48 = (uint64_t)"CURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608D60 = (uint64_t)"CURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608D78 = (uint64_t)"CURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608D90 = (uint64_t)"CURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608DA8 = (uint64_t)"CURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608DC0 = (uint64_t)"CURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608DD8 = (uint64_t)"CURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608DF0 = (uint64_t)"CURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608E08 = (uint64_t)"CURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608E20 = (uint64_t)"CURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608E38 = (uint64_t)"CURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608E50 = (uint64_t)"CURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608E68 = (uint64_t)"CURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608E80 = (uint64_t)"CURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608E98 = (uint64_t)"CURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608EB0 = (uint64_t)"CURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608EC8 = (uint64_t)"CURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608EE0 = (uint64_t)"CURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608EF8 = (uint64_t)"CURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608F10 = (uint64_t)"CURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608F28 = (uint64_t)"CURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608F40 = (uint64_t)"CURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608F58 = (uint64_t)"CURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608F70 = (uint64_t)"CURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608F88 = (uint64_t)"CURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608FA0 = (uint64_t)"CURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608FB8 = (uint64_t)"CURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608FD0 = (uint64_t)"CURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608FE8 = (uint64_t)"CURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609000 = (uint64_t)"CURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609018 = (uint64_t)"CURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609030 = (uint64_t)"CURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609048 = (uint64_t)"CURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609060 = (uint64_t)"CURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609078 = (uint64_t)"CURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609090 = (uint64_t)"CURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26090A8 = (uint64_t)"CURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26098A0 = (uint64_t)"TRANSIT_TYPE_BUS_RAPID_TRANSITTRANSIT_TYPE_BUS_SERVICETRANSIT_TYPE_CABLE_CAR_SERVICETRANSIT_TYPE_CABLE_DRAWN_BOAT_SERVICETRANSIT_TYPE_CAR_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_26098F8 = 1017;
  dword_2609970 = 200;
  qword_2609978 = (uint64_t)"TRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609980 = 34;
  dword_2609958 = 901;
  qword_2609960 = (uint64_t)"TRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609968 = 26;
  qword_2609930 = (uint64_t)"TRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609940 = 1304;
  qword_2609948 = (uint64_t)"TRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609950 = 30;
  qword_2609920 = 39;
  dword_2609928 = 104;
  qword_2609938 = 31;
  dword_2609910 = 1013;
  qword_2609918 = (uint64_t)"TRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609900 = (uint64_t)"TRANSIT_TYPE_CAR_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  unk_2609908 = 41;
  qword_26098E8 = (uint64_t)"TRANSIT_TYPE_CABLE_DRAWN_BOAT_SERVICETRANSIT_TYPE_CAR_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  unk_26098F0 = 37;
  dword_26098B0 = 1800;
  qword_26098D0 = (uint64_t)"TRANSIT_TYPE_CABLE_CAR_SERVICETRANSIT_TYPE_CABLE_DRAWN_BOAT_SERVICETRANSIT_TYPE_CAR_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  unk_26098D8 = 30;
  dword_26098E0 = 5;
  dword_26098C8 = 700;
  qword_26098B8 = (uint64_t)"TRANSIT_TYPE_BUS_SERVICETRANSIT_TYPE_CABLE_CAR_SERVICETRANSIT_TYPE_CABLE_DRAWN_BOAT_SERVICETRANSIT_TYPE_CAR_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  unk_26098C0 = 24;
  qword_26098A8 = 30;
  qword_2609690 = (uint64_t)"DURATION";
  qword_2609888 = (uint64_t)"TRANSIT_TYPE_BUSTRANSIT_TYPE_BUS_RAPID_TRANSITTRANSIT_TYPE_BUS_SERVICETRANSIT_TYPE_CABLE_CAR_SERVICETRANSIT_TYPE_CABLE_DRAWN_BOAT_SERVICETRANSIT_TYPE_CAR_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  unk_2609890 = 16;
  dword_2609898 = 3;
  dword_2609808 = 1507;
  dword_2609880 = 1504;
  qword_2609870 = (uint64_t)"TRANSIT_TYPE_BIKE_TAXI_SERVICETRANSIT_TYPE_BUSTRANSIT_TYPE_BUS_RAPID_TRANSITTRANSIT_TYPE_BUS_SERVICETRANSIT_TYPE_CABLE_CAR_SERVICETRANSIT_TYPE_CABLE_DRAWN_BOAT_SERVICETRANSIT_TYPE_CAR_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_CAR_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_CHAIR_LIFT_SERVICETRANSIT_TYPE_CITY_TRAM_SERVICETRANSIT_TYPE_COACH_SERVICETRANSIT_TYPE_COMMUNAL_TAXI_SERVICETRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  unk_2609878 = 30;
  dword_2609868 = 1021;
  qword_2609858 = (uint64_t)&aTransitTypeAdd[441];
  unk_2609860 = 41;
  dword_2609838 = 906;
  qword_2609840 = (uint64_t)&aTransitTypeAdd[402];
  unk_2609848 = 39;
  dword_2609850 = 404;
  dword_2609820 = 1307;
  qword_2609828 = (uint64_t)&aTransitTypeAdd[372];
  unk_2609830 = 30;
  qword_2609810 = (uint64_t)&aTransitTypeAdd[337];
  unk_2609818 = 35;
  qword_26097F8 = (uint64_t)&aTransitTypeAdd[307];
  unk_2609800 = 30;
  dword_26097F0 = 113;
  qword_26097E0 = (uint64_t)&aTransitTypeAdd[277];
  unk_26097E8 = 30;
  dword_2609718 = 117;
  dword_26097D8 = 1402;
  qword_26097C8 = (uint64_t)&aTransitTypeAdd[243];
  unk_26097D0 = 34;
  dword_26097C0 = 209;
  qword_26097B0 = (uint64_t)&aTransitTypeAdd[212];
  unk_26097B8 = 31;
  dword_26097A8 = 716;
  qword_2609798 = (uint64_t)&aTransitTypeAdd[183];
  unk_26097A0 = 29;
  dword_2609778 = 1100;
  dword_2609790 = 1114;
  qword_2609780 = (uint64_t)&aTransitTypeAdd[154];
  unk_2609788 = 29;
  dword_2609760 = 1113;
  qword_2609768 = (uint64_t)&aTransitTypeAdd[130];
  unk_2609770 = 24;
  dword_2609748 = 1012;
  qword_2609750 = (uint64_t)&aTransitTypeAdd[102];
  unk_2609758 = 28;
  qword_2609720 = (uint64_t)&aTransitTypeAdd[36];
  unk_2609728 = 27;
  qword_2609738 = (uint64_t)&aTransitTypeAdd[63];
  unk_2609740 = 39;
  dword_2609730 = 6;
  qword_26096F0 = (uint64_t)"PICKUP_DROPOFF_TYPE_REGULAR";
  unk_26096F8 = 27;
  dword_2609700 = 0;
  qword_2609708 = (uint64_t)aTransitTypeAdd;
  unk_2609710 = 36;
  qword_26096D8 = (uint64_t)"PICKUP_DROPOFF_TYPE_PHONE_AGENCYPICKUP_DROPOFF_TYPE_REGULAR";
  unk_26096E0 = 32;
  dword_26096E8 = 2;
  qword_26096C0 = (uint64_t)"PICKUP_DROPOFF_TYPE_NOT_AVAILABLEPICKUP_DROPOFF_TYPE_PHONE_AGENCYPICKUP_DROPOFF_TYPE_REGULAR";
  unk_26096C8 = 33;
  dword_26096B8 = 3;
  dword_26096D0 = 1;
  qword_26096A8 = (uint64_t)"PICKUP_DROPOFF_TYPE_COORDINATE_WITH_DRIVERPICKUP_DROPOFF_TYPE_NOT_AVAILABLEPICKUP_DROPOFF_TYP"
                           "E_PHONE_AGENCYPICKUP_DROPOFF_TYPE_REGULAR";
  unk_26096B0 = 42;
  qword_2609678 = (uint64_t)"ARRIVAL_TIMEDURATION";
  unk_2609680 = 12;
  dword_26096A0 = 0;
  dword_2609688 = 1;
  qword_2609698 = 8;
  qword_2609660 = (uint64_t)"NUMBER";
  *(void *)algn_2609668 = 6;
  dword_2609670 = 1000;
  qword_2609648 = (uint64_t)"UNKNOWN";
  qword_2609650 = 7;
  dword_2609658 = 0;
  qword_2609618 = (uint64_t)"LANGUAGEORIGIN_IDUNKNOWN";
  unk_2609620 = 8;
  qword_2609630 = (uint64_t)"ORIGIN_IDUNKNOWN";
  unk_2609638 = 9;
  dword_2609628 = 5;
  dword_2609640 = 1;
  qword_2609600 = (uint64_t)"DESTINATION_IDLANGUAGEORIGIN_IDUNKNOWN";
  qword_2609608 = 14;
  dword_2609610 = 2;
  qword_26095D0 = (uint64_t)"CARD_NAMEDEPARTURE_TIMESTAMPDESTINATION_IDLANGUAGEORIGIN_IDUNKNOWN";
  unk_26095D8 = 9;
  qword_26095E8 = (uint64_t)"DEPARTURE_TIMESTAMPDESTINATION_IDLANGUAGEORIGIN_IDUNKNOWN";
  dword_26095E0 = 6;
  qword_26095F0 = 19;
  dword_26095F8 = 3;
  qword_26095B8 = (uint64_t)"ARRIVAL_TIMESTAMPCARD_NAMEDEPARTURE_TIMESTAMPDESTINATION_IDLANGUAGEORIGIN_IDUNKNOWN";
  unk_26095C0 = 17;
  dword_26095C8 = 4;
  qword_26095A0 = (uint64_t)"PAYMENT_TYPE_UNKNOWN";
  unk_26095A8 = 20;
  dword_26095B0 = 0;
  qword_26090C0 = (uint64_t)"CURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609588 = (uint64_t)"PAYMENT_TYPE_ICPAYMENT_TYPE_UNKNOWN";
  qword_2609590 = 15;
  dword_2609598 = 1;
  qword_26092B8 = (uint64_t)"CURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609570 = (uint64_t)"CURRENCY_ZWL";
  qword_2609578 = 12;
  dword_2609580 = 932;
  qword_2609558 = (uint64_t)"CURRENCY_ZMWCURRENCY_ZWL";
  qword_2609560 = 12;
  dword_2609568 = 967;
  qword_2609540 = (uint64_t)"CURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_2609538 = 886;
  qword_2609548 = 12;
  dword_2609550 = 710;
  qword_2609528 = (uint64_t)"CURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609518 = 12;
  dword_2609520 = 999;
  qword_2609530 = 12;
  qword_2609510 = (uint64_t)"CURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609500 = 12;
  dword_2609508 = 965;
  qword_26094E0 = (uint64_t)"CURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26094F8 = (uint64_t)"CURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26094E8 = 12;
  dword_26094F0 = 963;
  qword_26094C8 = (uint64_t)"CURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26094D0 = 12;
  dword_26094D8 = 994;
  qword_26094B0 = (uint64_t)"CURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_26094A8 = 953;
  qword_26094B8 = 12;
  dword_26094C0 = 962;
  qword_2609498 = (uint64_t)"CURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609488 = 12;
  dword_2609490 = 964;
  qword_26094A0 = 12;
  qword_2609480 = (uint64_t)"CURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609470 = 12;
  dword_2609478 = 952;
  qword_2609450 = (uint64_t)"CURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609468 = (uint64_t)"CURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609458 = 12;
  dword_2609460 = 960;
  qword_2609438 = (uint64_t)"CURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609440 = 12;
  dword_2609448 = 951;
  qword_2609420 = (uint64_t)"CURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_2609418 = 957;
  qword_2609428 = 12;
  dword_2609430 = 958;
  qword_2609408 = (uint64_t)"CURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26093F8 = 12;
  dword_2609400 = 956;
  qword_2609410 = 12;
  qword_26093F0 = (uint64_t)"CURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26093E0 = 12;
  dword_26093E8 = 955;
  qword_26093C0 = (uint64_t)"CURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26093D8 = (uint64_t)"CURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26093C8 = 12;
  dword_26093D0 = 959;
  qword_26093A8 = (uint64_t)"CURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26093B0 = 12;
  dword_26093B8 = 961;
  qword_2609390 = (uint64_t)"CURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_2609388 = 882;
  qword_2609398 = 12;
  dword_26093A0 = 950;
  qword_2609378 = (uint64_t)"CURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609368 = 12;
  dword_2609370 = 548;
  qword_2609380 = 12;
  qword_2609360 = (uint64_t)"CURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609350 = 12;
  dword_2609358 = 704;
  qword_2609330 = (uint64_t)"CURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609348 = (uint64_t)"CURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609338 = 12;
  dword_2609340 = 937;
  qword_2609318 = (uint64_t)"CURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609320 = 12;
  dword_2609328 = 860;
  qword_2609300 = (uint64_t)"CURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_26092F8 = 940;
  qword_2609308 = 12;
  dword_2609310 = 858;
  qword_26092E8 = (uint64_t)"CURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26092D8 = 12;
  dword_26092E0 = 997;
  qword_26092F0 = 12;
  qword_26092D0 = (uint64_t)"CURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26092C0 = 12;
  dword_26092C8 = 840;
  qword_26090D8 = (uint64_t)"CURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26092A0 = (uint64_t)"CURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26092A8 = 16;
  dword_26092B0 = 0;
  qword_2609288 = (uint64_t)"CURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_2609280 = 980;
  qword_2609290 = 12;
  dword_2609298 = 800;
  qword_2609270 = (uint64_t)"CURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609260 = 12;
  dword_2609268 = 834;
  qword_2609278 = 12;
  qword_2609240 = (uint64_t)"CURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609258 = (uint64_t)"CURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609248 = 12;
  dword_2609250 = 901;
  qword_2609228 = (uint64_t)"CURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609230 = 12;
  dword_2609238 = 780;
  qword_2609210 = (uint64_t)"CURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_2609208 = 776;
  qword_2609218 = 12;
  dword_2609220 = 949;
  qword_26090F0 = (uint64_t)"CURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26091F8 = (uint64_t)"CURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609200 = 12;
  qword_2609108 = (uint64_t)"CURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_26089E0 = 292;
  qword_26089F0 = 12;
  dword_26089F8 = 270;
  qword_2609120 = (uint64_t)"CURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26089C0 = 12;
  dword_26089C8 = 936;
  qword_26089D8 = 12;
  qword_2609138 = (uint64_t)"CURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26089A8 = 12;
  dword_26089B0 = 981;
  qword_2609150 = (uint64_t)"CURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2609168 = (uint64_t)"CURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608990 = 12;
  dword_2608998 = 826;
  qword_2609180 = (uint64_t)"CURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608978 = 12;
  dword_2608980 = 238;
  qword_2609198 = (uint64_t)"CURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_2608950 = 978;
  qword_2608960 = 12;
  dword_2608968 = 242;
  qword_26091B0 = (uint64_t)"CURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608930 = 12;
  dword_2608938 = 230;
  qword_2608948 = 12;
  qword_26091C8 = (uint64_t)"CURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_2608918 = 12;
  dword_2608920 = 232;
  qword_26091E0 = (uint64_t)"CURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_26088E8 = 12;
  dword_26088F0 = 12;
  qword_2608900 = 12;
  dword_2608908 = 818;
  qword_26084C0 = (uint64_t)"CURRENCY_AEDCURRENCY_AFNCURRENCY_ALLCURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_"
                           "AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURREN"
                           "CY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCUR"
                           "RENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHW"
                           "CURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_"
                           "CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURREN"
                           "CY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCUR"
                           "RENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRK"
                           "CURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_"
                           "ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURREN"
                           "CY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCUR"
                           "RENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMK"
                           "CURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_"
                           "MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURREN"
                           "CY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCUR"
                           "RENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBD"
                           "CURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_"
                           "SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURREN"
                           "CY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCUR"
                           "RENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY"
                           "_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRE"
                           "NCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCU"
                           "RRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  *(void *)algn_26084C8 = 12;
  qword_26088D0 = 12;
  dword_26088D8 = 214;
  dword_26084D0 = 784;
  dword_26088A8 = 262;
  qword_26088B8 = 12;
  dword_26088C0 = 208;
  qword_26084E0 = 12;
  qword_2608888 = 12;
  dword_2608890 = 203;
  qword_26088A0 = 12;
  dword_26084E8 = 971;
  qword_26084F8 = 12;
  dword_2608500 = 8;
  qword_2608870 = 12;
  dword_2608878 = 132;
  qword_2608510 = 12;
  dword_2608848 = 931;
  qword_2608858 = 12;
  dword_2608860 = 192;
  dword_2608518 = 51;
  qword_2608828 = 12;
  dword_2608830 = 188;
  qword_2608840 = 12;
  qword_2608528 = 12;
  dword_2608530 = 532;
  qword_2608810 = 12;
  dword_2608818 = 970;
  qword_2608540 = 12;
  dword_26087E8 = 156;
  qword_26087F8 = 12;
  dword_2608800 = 170;
  dword_2608548 = 973;
  qword_26087C8 = 12;
  dword_26087D0 = 152;
  qword_26087E0 = 12;
  qword_2608558 = 12;
  dword_26087A0 = 948;
  qword_26087B0 = 12;
  dword_26087B8 = 990;
  dword_2608560 = 32;
  qword_2608570 = 12;
  qword_2608780 = 12;
  dword_2608788 = 756;
  qword_2608798 = 12;
  dword_2608578 = 36;
  dword_2608758 = 976;
  qword_2608768 = 12;
  dword_2608770 = 947;
  qword_2608588 = 12;
  qword_2608738 = 12;
  dword_2608740 = 124;
  qword_2608750 = 12;
  dword_2608590 = 533;
  qword_26085A0 = 12;
  qword_2608720 = 12;
  dword_2608728 = 84;
  dword_26085A8 = 944;
  dword_26086F8 = 72;
  qword_2608708 = 12;
  dword_2608710 = 974;
  qword_26085B8 = 12;
  qword_26086D8 = 12;
  dword_26086E0 = 64;
  qword_26086F0 = 12;
  dword_26085C0 = 977;
  qword_26085D0 = 12;
  qword_26086C0 = 12;
  dword_26086C8 = 44;
  dword_26085D8 = 52;
  dword_2608698 = 984;
  qword_26086A8 = 12;
  dword_26086B0 = 986;
  qword_26085E8 = 12;
  qword_2608678 = 12;
  dword_2608680 = 68;
  qword_2608690 = 12;
  dword_26085F0 = 50;
  qword_2608600 = 12;
  qword_2608660 = 12;
  dword_2608668 = 96;
  dword_2608608 = 975;
  dword_2608638 = 108;
  qword_2608648 = 12;
  dword_2608650 = 60;
  qword_2608618 = 12;
  dword_2608620 = 48;
  qword_2608630 = 12;
  qword_2608A08 = 12;
  dword_2608A10 = 324;
  qword_2608A20 = 12;
  dword_2608A28 = 320;
  qword_2608A38 = 12;
  dword_2608A40 = 328;
  qword_2608A50 = 12;
  dword_2608A58 = 344;
  qword_2608A68 = 12;
  dword_2608A70 = 340;
  qword_2608A80 = 12;
  dword_2608A88 = 191;
  qword_2608A98 = 12;
  dword_2608AA0 = 332;
  qword_2608AB0 = 12;
  dword_2608AB8 = 348;
  qword_2608AC8 = 12;
  dword_2608AD0 = 360;
  qword_2608AE0 = 12;
  dword_2608AE8 = 376;
  qword_2608AF8 = 12;
  dword_2608B00 = 356;
  qword_2608B10 = 12;
  dword_2608B18 = 368;
  qword_2608B28 = 12;
  dword_2608B30 = 364;
  qword_2608B40 = 12;
  dword_2608B48 = 352;
  qword_2608B58 = 12;
  dword_2608B60 = 388;
  qword_2608B70 = 12;
  dword_2608B78 = 400;
  qword_2608B88 = 12;
  dword_2608B90 = 392;
  qword_2608BA0 = 12;
  dword_2608BA8 = 404;
  qword_2608BB8 = 12;
  dword_2608BC0 = 417;
  qword_2608BD0 = 12;
  dword_2608BD8 = 116;
  qword_2608BE8 = 12;
  dword_2608BF0 = 174;
  qword_2608C00 = 12;
  dword_2608C08 = 408;
  qword_2608C18 = 12;
  dword_2608C20 = 410;
  qword_2608C30 = 12;
  dword_2608C38 = 414;
  qword_2608C48 = 12;
  dword_2608C50 = 136;
  qword_2608C60 = 12;
  dword_2608C68 = 398;
  qword_2608C78 = 12;
  dword_2608C80 = 418;
  qword_2608C90 = 12;
  dword_2608C98 = 422;
  qword_2608CA8 = 12;
  dword_2608CB0 = 144;
  qword_2608CC0 = 12;
  dword_2608CC8 = 430;
  qword_2608CD8 = 12;
  dword_2608CE0 = 426;
  qword_2608CF0 = 12;
  dword_2608CF8 = 434;
  qword_2608D08 = 12;
  dword_2608D10 = 504;
  qword_2608D20 = 12;
  dword_2608D28 = 498;
  qword_2608D38 = 12;
  dword_2608D40 = 969;
  qword_2608D50 = 12;
  dword_2608D58 = 807;
  qword_2608D68 = 12;
  dword_2608D70 = 104;
  qword_2608D80 = 12;
  dword_2608D88 = 496;
  qword_2608D98 = 12;
  dword_2608DA0 = 446;
  qword_2608DB0 = 12;
  dword_2608DB8 = 478;
  qword_2608DC8 = 12;
  dword_2608DD0 = 480;
  qword_2608DE0 = 12;
  dword_2608DE8 = 462;
  qword_2608DF8 = 12;
  dword_2608E00 = 454;
  qword_2608E10 = 12;
  dword_2608E18 = 484;
  qword_2608E28 = 12;
  dword_2608E30 = 979;
  qword_2608E40 = 12;
  dword_2608E48 = 458;
  qword_2608E58 = 12;
  dword_2608E60 = 943;
  qword_2608E70 = 12;
  dword_2608E78 = 516;
  qword_2608E88 = 12;
  dword_2608E90 = 566;
  qword_2608EA0 = 12;
  dword_2608EA8 = 558;
  qword_2608EB8 = 12;
  dword_2608EC0 = 578;
  qword_2608ED0 = 12;
  dword_2608ED8 = 524;
  qword_2608EE8 = 12;
  dword_2608EF0 = 554;
  qword_2608F00 = 12;
  dword_2608F08 = 512;
  qword_2608F18 = 12;
  dword_2608F20 = 590;
  qword_2608F30 = 12;
  dword_2608F38 = 604;
  qword_2608F48 = 12;
  dword_2608F50 = 598;
  qword_2608F60 = 12;
  dword_2608F68 = 608;
  qword_2608F78 = 12;
  dword_2608F80 = 586;
  qword_2608F90 = 12;
  dword_2608F98 = 985;
  qword_2608FA8 = 12;
  dword_2608FB0 = 600;
  qword_2608FC0 = 12;
  dword_2608FC8 = 634;
  qword_2608FD8 = 12;
  dword_2608FE0 = 946;
  qword_2608FF0 = 12;
  dword_2608FF8 = 941;
  qword_2609008 = 12;
  dword_2609010 = 643;
  qword_2609020 = 12;
  dword_2609028 = 646;
  qword_2609038 = 12;
  dword_2609040 = 682;
  qword_2609050 = 12;
  dword_2609058 = 90;
  qword_2609068 = 12;
  dword_2609070 = 690;
  qword_2609080 = 12;
  dword_2609088 = 938;
  qword_2609098 = 12;
  dword_26090A0 = 752;
  qword_26090B0 = 12;
  dword_26090B8 = 702;
  qword_26090C8 = 12;
  dword_26090D0 = 654;
  qword_26090E0 = 12;
  dword_26090E8 = 694;
  qword_26090F8 = 12;
  dword_2609100 = 706;
  qword_2609110 = 12;
  dword_2609118 = 968;
  qword_2609128 = 12;
  dword_2609130 = 728;
  qword_2609140 = 12;
  dword_2609148 = 678;
  qword_2609158 = 12;
  dword_2609160 = 222;
  qword_2609170 = 12;
  dword_2609178 = 760;
  qword_2609188 = 12;
  dword_2609190 = 748;
  qword_26091A0 = 12;
  dword_26091A8 = 764;
  qword_26091B8 = 12;
  dword_26091C0 = 972;
  qword_26091D0 = 12;
  dword_26091D8 = 934;
  qword_26091E8 = 12;
  dword_26091F0 = 788;
  dword_2609988 = 1501;
  qword_2609990 = (uint64_t)"TRANSIT_TYPE_COMMUTER_COACH_SERVICETRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_26099A8 = (uint64_t)"TRANSIT_TYPE_CROSS_COUNTRY_RAIL_SERVICETRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_26099B0 = 39;
  dword_26099B8 = 114;
  qword_26099C0 = (uint64_t)"TRANSIT_TYPE_DEMAND_AND_RESPONSE_BUS_SERVICETRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_26099D0 = 715;
  qword_26099D8 = (uint64_t)"TRANSIT_TYPE_DOMESTIC_AIR_SERVICETRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_26099E8 = 1102;
  qword_26099F0 = (uint64_t)"TRANSIT_TYPE_DOMESTIC_CHARTER_AIR_SERVICETRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609A00 = 1111;
  qword_2609A08 = (uint64_t)"TRANSIT_TYPE_DOMESTIC_SCHEDULED_AIR_SERVICETRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609A18 = 1104;
  qword_2609A20 = (uint64_t)"TRANSIT_TYPE_DRAG_LIFT_SERVICETRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609A30 = 1305;
  qword_2609A38 = (uint64_t)"TRANSIT_TYPE_ELEVATOR_SERVICETRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609A48 = 1303;
  qword_2609A50 = (uint64_t)"TRANSIT_TYPE_EXPRESS_BUS_SERVICETRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609A68 = (uint64_t)"TRANSIT_TYPE_FERRYTRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609A80 = (uint64_t)"TRANSIT_TYPE_FERRY_SERVICETRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609A90 = 1200;
  qword_2609A98 = (uint64_t)"TRANSIT_TYPE_FUNICULARTRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609AB0 = (uint64_t)"TRANSIT_TYPE_FUNICULAR_SERVICETRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609AC0 = 1400;
  qword_2609AC8 = (uint64_t)"TRANSIT_TYPE_FUNICULAR_SERVICE_MINORTRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609AD8 = 1401;
  qword_2609AE0 = (uint64_t)"TRANSIT_TYPE_HELICOPTER_AIR_SERVICETRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609AF0 = 1110;
  qword_2609AF8 = (uint64_t)"TRANSIT_TYPE_HIGH_SPEED_RAIL_SERVICETRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609B10 = (uint64_t)"TRANSIT_TYPE_HIRE_CARTRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609B20 = 1601;
  qword_2609B28 = (uint64_t)"TRANSIT_TYPE_HIRE_CYCLETRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609B38 = 1604;
  qword_2609B40 = (uint64_t)"TRANSIT_TYPE_HIRE_MOTORBIKETRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609B50 = 1603;
  qword_2609B58 = (uint64_t)"TRANSIT_TYPE_HIRE_VANTRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609B68 = 1602;
  qword_2609B70 = (uint64_t)"TRANSIT_TYPE_HORSE_DRAWN_CARRIAGETRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609B80 = 1701;
  qword_2609B88 = (uint64_t)"TRANSIT_TYPE_INTERCONTINENTAL_AIR_SERVICETRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609B98 = 1103;
  qword_2609BA0 = (uint64_t)"TRANSIT_TYPE_INTERCONTINENTAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609BB0 = 1106;
  qword_2609BB8 = (uint64_t)"TRANSIT_TYPE_INTERNATIONAL_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609BC8 = 1101;
  qword_2609BD0 = (uint64_t)"TRANSIT_TYPE_INTERNATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609BE0 = 1001;
  qword_2609BE8 = (uint64_t)"TRANSIT_TYPE_INTERNATIONAL_CHARTER_AIR_SERVICETRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609BF8 = 1107;
  qword_2609C00 = (uint64_t)"TRANSIT_TYPE_INTERNATIONAL_COACH_SERVICETRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609C10 = 201;
  qword_2609C18 = (uint64_t)"TRANSIT_TYPE_INTERNATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609C28 = 1005;
  qword_2609C30 = (uint64_t)"TRANSIT_TYPE_INTER_REGIONAL_RAIL_SERVICETRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609C40 = 103;
  qword_2609C48 = (uint64_t)"TRANSIT_TYPE_LICENSED_TAXI_SERVICETRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609C58 = 1505;
  qword_2609C60 = (uint64_t)"TRANSIT_TYPE_LIGHT_RAILTRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609C78 = (uint64_t)"TRANSIT_TYPE_LOCAL_BUS_SERVICETRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609C90 = (uint64_t)"TRANSIT_TYPE_LOCAL_CAR_FERRY_SERVICETRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609CA0 = 1004;
  qword_2609CA8 = (uint64_t)"TRANSIT_TYPE_LOCAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609CB8 = 1008;
  qword_2609CC0 = (uint64_t)"TRANSIT_TYPE_LOCAL_TRAM_SERVICETRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609CD0 = 902;
  qword_2609CD8 = (uint64_t)"TRANSIT_TYPE_LONG_DISTANCE_TRAINSTRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609CF0 = (uint64_t)"TRANSIT_TYPE_LORRY_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609D00 = 112;
  qword_2609D08 = (uint64_t)"TRANSIT_TYPE_METRO_SERVICETRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609D18 = 401;
  qword_2609D20 = (uint64_t)"TRANSIT_TYPE_METRO_SERVICE_MAJORTRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609D30 = 500;
  qword_2609D38 = (uint64_t)"TRANSIT_TYPE_MISCELLANEOUS_SERVICETRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609D48 = 1700;
  qword_2609D50 = (uint64_t)"TRANSIT_TYPE_MOBILITY_BUS_FOR_REGISTERED_DISABLEDTRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609BA8 = 49;
  qword_2609D58 = 49;
  dword_2609D60 = 709;
  qword_2609D68 = (uint64_t)"TRANSIT_TYPE_MOBILITY_BUS_SERVICETRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609D78 = 708;
  qword_2609D80 = (uint64_t)"TRANSIT_TYPE_MONORAILTRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609D98 = (uint64_t)"TRANSIT_TYPE_MONORAIL_SERVICETRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609DA8 = 405;
  qword_2609DB0 = (uint64_t)"TRANSIT_TYPE_NATIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609DC0 = 1002;
  qword_2609DC8 = (uint64_t)"TRANSIT_TYPE_NATIONAL_COACH_SERVICETRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609DD8 = 202;
  qword_2609DE0 = (uint64_t)"TRANSIT_TYPE_NATIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609DF0 = 1006;
  qword_2609DF8 = (uint64_t)"TRANSIT_TYPE_NIGHT_BUS_SERVICETRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609E08 = 705;
  qword_2609E10 = (uint64_t)"TRANSIT_TYPE_PASSENGER_HIGH_SPEED_FERRY_SERVICETRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609E20 = 1014;
  qword_2609E28 = (uint64_t)"TRANSIT_TYPE_POST_BOAT_SERVICETRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609E38 = 1009;
  qword_2609E40 = (uint64_t)"TRANSIT_TYPE_POST_BUS_SERVICETRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609E58 = (uint64_t)"TRANSIT_TYPE_PRIVATE_HIRE_SERVICE_VEHICLETRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609E68 = 1506;
  qword_2609E70 = (uint64_t)"TRANSIT_TYPE_RACK_AND_PINION_RAILWAYTRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609E88 = (uint64_t)"TRANSIT_TYPE_RAILTRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609EA0 = (uint64_t)"TRANSIT_TYPE_RAILWAY_SERVICETRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609EB8 = (uint64_t)"TRANSIT_TYPE_RAIL_REPLACEMENT_BUS_SERVICETRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609EC8 = 714;
  qword_2609ED0 = (uint64_t)"TRANSIT_TYPE_RAIL_SHUTTLE_WITHIN_COMPLEXTRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609EE8 = (uint64_t)"TRANSIT_TYPE_RAIL_TAXI_SERVICETRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609EF8 = 1503;
  qword_2609F00 = (uint64_t)"TRANSIT_TYPE_REGIONAL_BUS_SERVICETRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609F10 = 701;
  qword_2609F18 = (uint64_t)"TRANSIT_TYPE_REGIONAL_CAR_FERRY_SERVICETRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609F28 = 1003;
  qword_2609F30 = (uint64_t)"TRANSIT_TYPE_REGIONAL_COACH_SERVICETRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609F40 = 204;
  qword_2609F48 = (uint64_t)"TRANSIT_TYPE_REGIONAL_PASSENGER_FERRY_SERVICETRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609F58 = 1007;
  qword_2609F60 = (uint64_t)"TRANSIT_TYPE_REGIONAL_RAIL_SERVICETRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609F70 = 106;
  qword_2609F78 = (uint64_t)"TRANSIT_TYPE_REGIONAL_TRAM_SERVICETRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609F88 = 903;
  qword_2609F90 = (uint64_t)"TRANSIT_TYPE_REPLACEMENT_RAIL_SERVICETRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_2609FA8 = (uint64_t)"TRANSIT_TYPE_RIVER_BUS_SERVICETRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609FB8 = 1018;
  qword_2609FC0 = (uint64_t)"TRANSIT_TYPE_ROAD_LINK_FERRY_SERVICETRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609FD0 = 1011;
  qword_2609FD8 = (uint64_t)"TRANSIT_TYPE_ROUND_TRIP_CHARTER_AIR_SERVICETRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_2609FE8 = 1108;
  qword_2609FF0 = (uint64_t)"TRANSIT_TYPE_SCHEDULED_FERRY_SERVICETRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A000 = 1019;
  qword_260A008 = (uint64_t)"TRANSIT_TYPE_SCHENGEN_AREA_AIR_SERVICETRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A018 = 1112;
  qword_260A020 = (uint64_t)"TRANSIT_TYPE_SCHOOL_AND_PUBLIC_SERVICE_BUSTRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A030 = 713;
  qword_260A038 = (uint64_t)"TRANSIT_TYPE_SCHOOL_BOATTRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A048 = 1016;
  qword_260A050 = (uint64_t)"TRANSIT_TYPE_SCHOOL_BUSTRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A060 = 712;
  qword_260A068 = (uint64_t)"TRANSIT_TYPE_SELF_DRIVETRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A078 = 1600;
  qword_260A080 = (uint64_t)"TRANSIT_TYPE_SHARE_TAXI_SERVICETRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A090 = 717;
  qword_260A098 = (uint64_t)"TRANSIT_TYPE_SHUTTLE_AIR_SERVICETRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A0A8 = 1105;
  qword_260A0B0 = (uint64_t)"TRANSIT_TYPE_SHUTTLE_BUSTRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A0C0 = 711;
  qword_260A0C8 = (uint64_t)"TRANSIT_TYPE_SHUTTLE_COACH_SERVICETRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_260A0E0 = (uint64_t)"TRANSIT_TYPE_SHUTTLE_FERRY_SERVICETRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A0F0 = 1020;
  qword_260A0F8 = (uint64_t)"TRANSIT_TYPE_SHUTTLE_TRAM_SERVICETRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A108 = 905;
  qword_260A110 = (uint64_t)"TRANSIT_TYPE_SIGHTSEEING_AIR_SERVICETRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A120 = 1109;
  qword_260A128 = (uint64_t)"TRANSIT_TYPE_SIGHTSEEING_BOAT_SERVICETRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A138 = 1015;
  qword_260A140 = (uint64_t)"TRANSIT_TYPE_SIGHTSEEING_BUSTRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_260A158 = (uint64_t)"TRANSIT_TYPE_SIGHTSEEING_COACH_SERVICETRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A168 = 206;
  qword_260A170 = (uint64_t)"TRANSIT_TYPE_SIGHTSEEING_TRAM_SERVICETRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A180 = 904;
  qword_260A188 = (uint64_t)"TRANSIT_TYPE_SLEEPER_RAIL_SERVICETRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A198 = 105;
  qword_260A1A0 = (uint64_t)"TRANSIT_TYPE_SMALL_TELECABIN_SERVICETRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A1B0 = 1306;
  qword_260A1B8 = (uint64_t)"TRANSIT_TYPE_SPECIAL_COACH_SERVICETRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A1C8 = 205;
  qword_260A1D0 = (uint64_t)"TRANSIT_TYPE_SPECIAL_NEEDS_BUSTRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A1E0 = 707;
  qword_260A1E8 = (uint64_t)"TRANSIT_TYPE_SPECIAL_RAIL_SERVICETRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_260A200 = (uint64_t)"TRANSIT_TYPE_STOPPING_BUS_SERVICETRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A210 = 703;
  qword_260A218 = (uint64_t)"TRANSIT_TYPE_SUBURBAN_RAILWAYTRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A228 = 109;
  qword_260A230 = (uint64_t)"TRANSIT_TYPE_SUBURBAN_RAILWAY_SERVICETRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A240 = 300;
  qword_260A248 = (uint64_t)"TRANSIT_TYPE_SUBWAYTRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_260A260 = (uint64_t)"TRANSIT_TYPE_TAXI_SERVICETRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A270 = 1500;
  qword_260A278 = (uint64_t)"TRANSIT_TYPE_TELECABIN_CABLE_CAR_SERVICETRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A288 = 1302;
  qword_260A290 = (uint64_t)"TRANSIT_TYPE_TELECABIN_SERVICETRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A2A0 = 1300;
  qword_260A2A8 = (uint64_t)"TRANSIT_TYPE_TELECABIN_SERVICE_MINORTRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A2B8 = 1301;
  qword_260A2C0 = (uint64_t)"TRANSIT_TYPE_TOURIST_COACH_SERVICETRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A2D0 = 207;
  qword_260A2D8 = (uint64_t)"TRANSIT_TYPE_TOURIST_RAILWAY_SERVICETRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A2E8 = 107;
  qword_260A2F0 = (uint64_t)"TRANSIT_TYPE_TRAIN_FERRY_SERVICETRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A300 = 1010;
  qword_260A308 = (uint64_t)"TRANSIT_TYPE_TRAM_SERVICETRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A318 = 900;
  qword_260A320 = (uint64_t)"TRANSIT_TYPE_TROLLEYBUS_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_260A338 = (uint64_t)"TRANSIT_TYPE_UNDERGROUND_SERVICETRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A348 = 402;
  qword_260A350 = (uint64_t)"TRANSIT_TYPE_UNDERGROUND_SERVICE_MAJORTRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_260A368 = (uint64_t)"TRANSIT_TYPE_URBAN_RAILWAY_SERVICETRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  qword_260A380 = (uint64_t)"TRANSIT_TYPE_URBAN_RAILWAY_SERVICE_MINORTRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A390 = 403;
  qword_260A398 = (uint64_t)"TRANSIT_TYPE_VEHICLE_TRANSPORT_RAIL_SERVICETRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A3A8 = 115;
  qword_260A3B0 = (uint64_t)"TRANSIT_TYPE_WATER_TAXI_SERVICETRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A3C0 = 1502;
  qword_260A3C8 = (uint64_t)"TRANSIT_TYPE_WATER_TRANSPORT_SERVICE";
  dword_260A3D8 = 1000;
  qword_260A3F8 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_AERIAL_TRAMWAYLOCALIZED_TRANSIT_TYPE_BOATLOCALIZED_TRANSIT_TYPE_BUSLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSITLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSIT_STATIONLOCALIZED_TRANSIT_TYPE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_CABLE_CARLOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A408 = 91;
  qword_260A410 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_BOATLOCALIZED_TRANSIT_TYPE_BUSLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSITLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSIT_STATIONLOCALIZED_TRANSIT_TYPE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_CABLE_CARLOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_2609FA0 = 110;
  dword_260A420 = 110;
  qword_260A428 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_BUSLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSITLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSIT_STATIONLOCALIZED_TRANSIT_TYPE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_CABLE_CARLOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A440 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSITLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSIT_STATIONLOCALIZED_TRANSIT_TYPE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_CABLE_CARLOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A450 = 120;
  qword_260A458 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSIT_STATIONLOCALIZED_TRANSIT_TYPE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_CABLE_CARLOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A468 = 143;
  qword_260A470 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_CABLE_CARLOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A480 = 140;
  qword_260A488 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_CABLE_CARLOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A498 = 70;
  qword_260A4A0 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A4B8 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A4C8 = 141;
  qword_260A4D0 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_FERRYLOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_2609EB0 = 100;
  dword_260A4E0 = 100;
  qword_260A4E8 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A4F8 = 80;
  qword_260A500 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A510 = 92;
  qword_260A518 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_HIGH_SPEED_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A530 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A540 = 130;
  qword_260A548 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A560 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_LINELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A578 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A590 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A1F8 = 111;
  dword_260A5A0 = 111;
  qword_260A5A8 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_SHUTTLELOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A5C0 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A5D8 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_260A5E8 = 142;
  qword_260A5F0 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A608 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A620 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A638 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_TRAINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A650 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A668 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A680 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_TROLLEYBUSLOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A698 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A6B0 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A6C8 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_VEHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A6E0 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  dword_2609CE8 = 102;
  dword_260A6F0 = 102;
  qword_260A6F8 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  qword_260A728 = (uint64_t)"LOCALIZABLE_STATION_TYPE_BUS_STOPLOCALIZABLE_STATION_TYPE_FERRY_TERMINALLOCALIZABLE_STATION_TYPE_NONELOCALIZABLE_STATION_TYPE_RAIL_STATIONLOCALIZABLE_STATION_TYPE_RAIL_STOPLOCALIZABLE_STATION_TYPE_SUBWAY_STATIONLOCALIZABLE_STATION_TYPE_SUBWAY_STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  qword_2609998 = 35;
  dword_26099A0 = 208;
  qword_260A950 = (uint64_t)"NODE_LABEL_POSITION_CENTER_LEFTNODE_LABEL_POSITION_CENTER_RIGHTNODE_LABEL_POSITION_HIDDENNODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  qword_260B850 = (uint64_t)"LOCALIZED_STOP_TYPE_NONELOCALIZED_STOP_TYPE_NUMBER";
  unk_260B858 = 24;
  dword_260B890 = 784;
  qword_260B898 = (uint64_t)"CURRENCY_AFNCURRENCY_ALLCURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  unk_260B8A0 = 12;
  qword_260B868 = (uint64_t)"LOCALIZED_STOP_TYPE_NUMBER";
  unk_260B870 = 26;
  dword_260B878 = 2;
  qword_260B880 = (uint64_t)"CURRENCY_AEDCURRENCY_AFNCURRENCY_ALLCURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_"
                           "AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURREN"
                           "CY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCUR"
                           "RENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHW"
                           "CURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_"
                           "CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURREN"
                           "CY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCUR"
                           "RENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRK"
                           "CURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_"
                           "ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURREN"
                           "CY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCUR"
                           "RENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMK"
                           "CURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_"
                           "MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURREN"
                           "CY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCUR"
                           "RENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBD"
                           "CURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_"
                           "SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURREN"
                           "CY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCUR"
                           "RENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY"
                           "_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRE"
                           "NCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCU"
                           "RRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  *(void *)algn_260B888 = 12;
  qword_260B838 = (uint64_t)"LOCALIZED_STOP_TYPE_NAMELOCALIZED_STOP_TYPE_NONELOCALIZED_STOP_TYPE_NUMBER";
  unk_260B840 = 24;
  dword_260B860 = 0;
  dword_260B848 = 1;
  qword_260B820 = (uint64_t)"TRANSIT_LINE_DISPLAY_STYLE_NAME_SECONDARY";
  unk_260B828 = 41;
  dword_260B830 = 2;
  qword_260B778 = (uint64_t)"EXTREMELY_EXPENSIVEINEXPENSIVENEUTRALVERY_EXPENSIVEVERY_INEXPENSIVE";
  qword_260B808 = (uint64_t)"TRANSIT_LINE_DISPLAY_STYLE_NAME_PRIMARYTRANSIT_LINE_DISPLAY_STYLE_NAME_SECONDARY";
  unk_260B810 = 39;
  dword_260B800 = 0;
  dword_260B818 = 1;
  qword_260B7F0 = (uint64_t)"TRANSIT_LINE_DISPLAY_STYLE_DEFAULTTRANSIT_LINE_DISPLAY_STYLE_NAME_PRIMARYTRANSIT_LINE_DISPLAY"
                           "_STYLE_NAME_SECONDARY";
  qword_260B7F8 = 34;
  qword_260B7D8 = (uint64_t)"VERY_INEXPENSIVE";
  unk_260B7E0 = 16;
  dword_260B7E8 = 0;
  qword_260B7C0 = (uint64_t)"VERY_EXPENSIVEVERY_INEXPENSIVE";
  dword_260B7B8 = 2;
  qword_260B7C8 = 14;
  dword_260B7D0 = 4;
  qword_260B7A8 = (uint64_t)"NEUTRALVERY_EXPENSIVEVERY_INEXPENSIVE";
  qword_260B790 = (uint64_t)"INEXPENSIVENEUTRALVERY_EXPENSIVEVERY_INEXPENSIVE";
  qword_260B798 = 11;
  dword_260B7A0 = 1;
  qword_260B7B0 = 7;
  qword_260B780 = 19;
  dword_260B788 = 5;
  qword_260B760 = (uint64_t)"EXPENSIVEEXTREMELY_EXPENSIVEINEXPENSIVENEUTRALVERY_EXPENSIVEVERY_INEXPENSIVE";
  *(void *)algn_260B768 = 9;
  dword_260B770 = 3;
  dword_260B758 = 4;
  qword_260B730 = (uint64_t)"STRONGLY_NOT_PREFERREDSTRONGLY_PREFERRED";
  unk_260B738 = 22;
  dword_260B740 = 1;
  qword_260B748 = (uint64_t)"STRONGLY_PREFERRED";
  unk_260B750 = 18;
  qword_260B718 = (uint64_t)"PREFERREDSTRONGLY_NOT_PREFERREDSTRONGLY_PREFERRED";
  unk_260B720 = 9;
  dword_260B710 = 0;
  dword_260B728 = 3;
  qword_260B6E8 = (uint64_t)"NOT_PREFERREDNO_PREFERENCEPREFERREDSTRONGLY_NOT_PREFERREDSTRONGLY_PREFERRED";
  unk_260B6F0 = 13;
  dword_260B6F8 = 2;
  qword_260B700 = (uint64_t)"NO_PREFERENCEPREFERREDSTRONGLY_NOT_PREFERREDSTRONGLY_PREFERRED";
  unk_260B708 = 13;
  qword_260B6D0 = (uint64_t)"TRANSIT_GUIDANCE_SNAPPING_TYPE_ROAD";
  unk_260B6D8 = 35;
  dword_260B6E0 = 1;
  qword_260B6B8 = (uint64_t)"TRANSIT_GUIDANCE_SNAPPING_TYPE_RAILTRANSIT_GUIDANCE_SNAPPING_TYPE_ROAD";
  unk_260B6C0 = 35;
  qword_260B6A0 = (uint64_t)"TRANSIT_GUIDANCE_SNAPPING_TYPE_NONETRANSIT_GUIDANCE_SNAPPING_TYPE_RAILTRANSIT_GUIDANCE_SNAPPING_TYPE_ROAD";
  *(void *)algn_260B6A8 = 35;
  dword_260B6C8 = 2;
  dword_260B6B0 = 0;
  qword_260B670 = (uint64_t)"TRANSIT_SHIELD_ENTITY_TYPE_LINETRANSIT_SHIELD_ENTITY_TYPE_SYSTEM";
  unk_260B678 = 31;
  qword_260B688 = (uint64_t)"TRANSIT_SHIELD_ENTITY_TYPE_SYSTEM";
  unk_260B690 = 33;
  dword_260B698 = 5;
  dword_260B680 = 4;
  qword_260B5C8 = (uint64_t)"TRANSIT_ENTITY_TYPE_MARKETTRANSIT_ENTITY_TYPE_STATIONTRANSIT_ENTITY_TYPE_STOPTRANSIT_ENTITY_TYPE_SYSTEMTRANSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  qword_260B658 = (uint64_t)"TRANSIT_SHIELD_ENTITY_TYPE_HALLTRANSIT_SHIELD_ENTITY_TYPE_LINETRANSIT_SHIELD_ENTITY_TYPE_SYSTEM";
  unk_260B660 = 31;
  dword_260B668 = 20;
  dword_260B650 = 0;
  qword_260B640 = (uint64_t)"TRANSIT_ENTITY_TYPE_UNKNOWN";
  qword_260B628 = (uint64_t)"TRANSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  unk_260B630 = 24;
  dword_260B638 = 2;
  qword_260B648 = 27;
  dword_260B608 = 3;
  qword_260B610 = (uint64_t)"TRANSIT_ENTITY_TYPE_SYSTEMTRANSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  unk_260B618 = 26;
  dword_260B620 = 5;
  qword_260B5F8 = (uint64_t)"TRANSIT_ENTITY_TYPE_STOPTRANSIT_ENTITY_TYPE_SYSTEMTRANSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  unk_260B600 = 24;
  qword_260B5E0 = (uint64_t)"TRANSIT_ENTITY_TYPE_STATIONTRANSIT_ENTITY_TYPE_STOPTRANSIT_ENTITY_TYPE_SYSTEMTRANSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  unk_260B5E8 = 27;
  dword_260B5F0 = 1;
  qword_260B5B0 = (uint64_t)"TRANSIT_ENTITY_TYPE_LINETRANSIT_ENTITY_TYPE_MARKETTRANSIT_ENTITY_TYPE_STATIONTRANSIT_ENTITY_TYPE_STOPTRANSIT_ENTITY_TYPE_SYSTEMTRANSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  unk_260B5B8 = 24;
  dword_260B5C0 = 4;
  qword_260B5D0 = 26;
  dword_260B5D8 = 16;
  qword_260B598 = (uint64_t)"TRANSIT_ENTITY_TYPE_HALLTRANSIT_ENTITY_TYPE_LINETRANSIT_ENTITY_TYPE_MARKETTRANSIT_ENTITY_TYPE_STATIONTRANSIT_ENTITY_TYPE_STOPTRANSIT_ENTITY_TYPE_SYSTEMTRANSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  unk_260B5A0 = 24;
  qword_260B580 = (uint64_t)"TRANSIT_ENTITY_TYPE_ACCESS_POINTTRANSIT_ENTITY_TYPE_HALLTRANSIT_ENTITY_TYPE_LINETRANSIT_ENTIT"
                           "Y_TYPE_MARKETTRANSIT_ENTITY_TYPE_STATIONTRANSIT_ENTITY_TYPE_STOPTRANSIT_ENTITY_TYPE_SYSTEMTRA"
                           "NSIT_ENTITY_TYPE_TRIPTRANSIT_ENTITY_TYPE_UNKNOWN";
  *(void *)algn_260B588 = 32;
  dword_260B5A8 = 20;
  dword_260B590 = 10;
  qword_260B550 = (uint64_t)"NODE_INCIDENT_MANEUVER_PASSNODE_INCIDENT_MANEUVER_UNKNOWN";
  unk_260B558 = 27;
  dword_260B560 = 3;
  qword_260B568 = (uint64_t)"NODE_INCIDENT_MANEUVER_UNKNOWN";
  unk_260B570 = 30;
  dword_260B578 = 0;
  qword_260B520 = (uint64_t)"NODE_INCIDENT_MANEUVER_ALIGHTNODE_INCIDENT_MANEUVER_BOARDNODE_INCIDENT_MANEUVER_PASSNODE_INCI"
                           "DENT_MANEUVER_UNKNOWN";
  qword_260B538 = (uint64_t)"NODE_INCIDENT_MANEUVER_BOARDNODE_INCIDENT_MANEUVER_PASSNODE_INCIDENT_MANEUVER_UNKNOWN";
  unk_260B540 = 28;
  dword_260B548 = 1;
  qword_260B528 = 29;
  dword_260B530 = 2;
  qword_260B508 = (uint64_t)"ICON_WARNING";
  unk_260B510 = 12;
  qword_260B4F0 = (uint64_t)"ICON_CONSTRUCTIONICON_WARNING";
  *(void *)algn_260B4F8 = 17;
  dword_260B518 = 0;
  dword_260B500 = 1;
  dword_260B4D0 = 0;
  qword_260B4D8 = (uint64_t)"ROAD_ACCESS_POINT_ACCESSIBILITY_WALKING";
  unk_260B4E0 = 39;
  dword_260B4E8 = 1;
  qword_260B490 = (uint64_t)"ROAD_ACCESS_POINT_ACCESSIBILITY_DRIVINGROAD_ACCESS_POINT_ACCESSIBILITY_TRANSITROAD_ACCESS_POI"
                           "NT_ACCESSIBILITY_UNKNOWNROAD_ACCESS_POINT_ACCESSIBILITY_WALKING";
  *(void *)algn_260B498 = 39;
  qword_260B4A8 = (uint64_t)"ROAD_ACCESS_POINT_ACCESSIBILITY_TRANSITROAD_ACCESS_POINT_ACCESSIBILITY_UNKNOWNROAD_ACCESS_POINT_ACCESSIBILITY_WALKING";
  unk_260B4B0 = 39;
  dword_260B4B8 = 3;
  qword_260B4C0 = (uint64_t)"ROAD_ACCESS_POINT_ACCESSIBILITY_UNKNOWNROAD_ACCESS_POINT_ACCESSIBILITY_WALKING";
  unk_260B4C8 = 39;
  dword_260B4A0 = 2;
  qword_260B460 = (uint64_t)"TRANSIT_SEGMENT_DIRECTION_NEGATIVETRANSIT_SEGMENT_DIRECTION_POSITIVE";
  *(void *)algn_260B468 = 34;
  qword_260B478 = (uint64_t)"TRANSIT_SEGMENT_DIRECTION_POSITIVE";
  unk_260B480 = 34;
  dword_260B488 = 0;
  dword_260B470 = 1;
  qword_260B448 = (uint64_t)"TEXT_LENGTH_SHORT";
  unk_260B450 = 17;
  qword_260B430 = (uint64_t)"TEXT_LENGTH_MEDIUMTEXT_LENGTH_SHORT";
  unk_260B438 = 18;
  dword_260B458 = 1;
  dword_260B440 = 2;
  qword_260B3B8 = (uint64_t)"TIME_STYLE_UNKNOWNTRANSIT_TIME_STYLE_OPERATING_HOURS";
  qword_260B418 = (uint64_t)"TEXT_LENGTH_LONGTEXT_LENGTH_MEDIUMTEXT_LENGTH_SHORT";
  unk_260B420 = 16;
  dword_260B410 = 0;
  dword_260B428 = 3;
  qword_260B3E8 = (uint64_t)"TEXT_LENGTH_EXTRA_LONGTEXT_LENGTH_EXTRA_SHORTTEXT_LENGTH_LONGTEXT_LENGTH_MEDIUMTEXT_LENGTH_SHORT";
  unk_260B3F0 = 22;
  dword_260B3F8 = 4;
  qword_260B400 = (uint64_t)"TEXT_LENGTH_EXTRA_SHORTTEXT_LENGTH_LONGTEXT_LENGTH_MEDIUMTEXT_LENGTH_SHORT";
  unk_260B408 = 23;
  qword_260B3D0 = (uint64_t)"TRANSIT_TIME_STYLE_OPERATING_HOURS";
  unk_260B3D8 = 34;
  dword_260B3C8 = 0;
  dword_260B3E0 = 5;
  qword_260B3A0 = (uint64_t)"TIME_STYLE_STAMP_LISTTIME_STYLE_UNKNOWNTRANSIT_TIME_STYLE_OPERATING_HOURS";
  unk_260B3A8 = 21;
  dword_260B3B0 = 3;
  qword_260B3C0 = 18;
  qword_260B370 = (uint64_t)"TIME_STYLE_HIDDENTIME_STYLE_STAMPTIME_STYLE_STAMP_LISTTIME_STYLE_UNKNOWNTRANSIT_TIME_STYLE_OPERATING_HOURS";
  qword_260B388 = (uint64_t)"TIME_STYLE_STAMPTIME_STYLE_STAMP_LISTTIME_STYLE_UNKNOWNTRANSIT_TIME_STYLE_OPERATING_HOURS";
  unk_260B390 = 16;
  dword_260B380 = 4;
  dword_260B398 = 2;
  qword_260B358 = (uint64_t)"TIME_STYLE_COUNTDOWNTIME_STYLE_HIDDENTIME_STYLE_STAMPTIME_STYLE_STAMP_LISTTIME_STYLE_UNKNOWNT"
                           "RANSIT_TIME_STYLE_OPERATING_HOURS";
  unk_260B360 = 20;
  dword_260B368 = 1;
  qword_260B378 = 17;
  qword_260B340 = (uint64_t)"JUSTIFICATION_START";
  unk_260B348 = 19;
  dword_260B350 = 1;
  qword_260B328 = (uint64_t)"JUSTIFICATION_ENDJUSTIFICATION_START";
  unk_260B330 = 17;
  qword_260B310 = (uint64_t)"JUSTIFICATION_CENTERJUSTIFICATION_ENDJUSTIFICATION_START";
  *(void *)algn_260B318 = 20;
  dword_260B338 = 2;
  dword_260B320 = 0;
  qword_260B298 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  qword_260B2F8 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B300 = 36;
  dword_260B308 = 22;
  qword_260B2E0 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B2E8 = 43;
  dword_260B2D8 = 0;
  dword_260B2F0 = 21;
  qword_260B2B0 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B2B8 = 44;
  dword_260B2C0 = 20;
  qword_260B2C8 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B2D0 = 31;
  qword_260B280 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B288 = 43;
  dword_260B290 = 10;
  qword_260B2A0 = 35;
  dword_260B2A8 = 4;
  qword_260B268 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B270 = 44;
  dword_260B278 = 11;
  qword_260B1A8 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_SHELTEREXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_BUILDINGEXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  qword_260B250 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B258 = 40;
  dword_260B260 = 9;
  qword_260B238 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B240 = 79;
  dword_260B248 = 12;
  qword_260B208 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B210 = 73;
  qword_260B220 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  dword_260B218 = 13;
  qword_260B228 = 28;
  dword_260B230 = 8;
  qword_260B1F0 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_BUILDINGEXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B1F8 = 45;
  dword_260B200 = 14;
  qword_260B1B0 = 69;
  qword_260B1D8 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_ELEVATED_SHELTEREXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_BUILDINGEXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B1E0 = 40;
  dword_260B1D0 = 17;
  dword_260B1E8 = 16;
  qword_260B1C0 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_SHELTEREXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_BUILDINGEXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  unk_260B1C8 = 63;
  dword_260B1B8 = 18;
  qword_260A908 = (uint64_t)"NODE_LABEL_POSITION_BOTTOM_LEFTNODE_LABEL_POSITION_BOTTOM_RIGHTNODE_LABEL_POSITION_CENTERNODE_LABEL_POSITION_CENTER_LEFTNODE_LABEL_POSITION_CENTER_RIGHTNODE_LABEL_POSITION_HIDDENNODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  qword_260B190 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_ELEVATED_NONEEXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_SHELTEREXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_BUILDINGEXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  dword_260B188 = 19;
  qword_260B198 = 37;
  dword_260B1A0 = 15;
  qword_260B178 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_ELEVATED_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_NONEEXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_SHELTEREXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_BUILDINGEXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SIDE_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUCTURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKNOWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  qword_260B160 = (uint64_t)"EXTENDED_STRUCTURE_TYPE_BUS_STATIONEXTENDED_STRUCTURE_TYPE_ELEVATED_BUILDINGEXTENDED_STRUCTUR"
                           "E_TYPE_ELEVATED_NONEEXTENDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_ADJACENT_BUILDINGEXTE"
                           "NDED_STRUCTURE_TYPE_ELEVATED_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_ELEVATED_S"
                           "HELTEREXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_BUILDINGEXTENDED_STRUCTURE_TYPE_GROUND_LEVEL_OPEN_"
                           "AIR_PLATFORMS_ADJACENT_BUILDINGEXTENDED_STRUCTURE_TYPE_PIEREXTENDED_STRUCTURE_TYPE_STREET_SID"
                           "E_GROUND_LEVEL_OPEN_AIR_PLATFORMS_NO_BUILDINGEXTENDED_STRUCTURE_TYPE_STREET_SIDE_NONEEXTENDED"
                           "_STRUCTURE_TYPE_STREET_SIDE_PLATFORMEXTENDED_STRUCTURE_TYPE_STREET_SIDE_SHELTEREXTENDED_STRUC"
                           "TURE_TYPE_UNDERGROUNDEXTENDED_STRUCTURE_TYPE_UNDERGROUND_BUILDINGEXTENDED_STRUCTURE_TYPE_UNKN"
                           "OWNEXTENDED_STRUCTURE_TYPE_VIRTUAL_BUS_STATIONEXTENDED_STRUCTURE_TYPE_VIRTUAL_PIER";
  *(void *)algn_260B168 = 35;
  dword_260B170 = 23;
  qword_260B180 = 41;
  dword_260B158 = 3;
  qword_260B148 = (uint64_t)"STRUCTURE_TYPE_UNDERGROUND";
  qword_260B130 = (uint64_t)"STRUCTURE_TYPE_SHELTERSTRUCTURE_TYPE_UNDERGROUND";
  unk_260B138 = 22;
  dword_260B140 = 1;
  qword_260B150 = 26;
  qword_260A938 = (uint64_t)"NODE_LABEL_POSITION_CENTERNODE_LABEL_POSITION_CENTER_LEFTNODE_LABEL_POSITION_CENTER_RIGHTNODE_LABEL_POSITION_HIDDENNODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  qword_260A920 = (uint64_t)"NODE_LABEL_POSITION_BOTTOM_RIGHTNODE_LABEL_POSITION_CENTERNODE_LABEL_POSITION_CENTER_LEFTNODE_LABEL_POSITION_CENTER_RIGHTNODE_LABEL_POSITION_HIDDENNODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  qword_260A928 = 32;
  dword_260A930 = 10;
  qword_260A910 = 31;
  dword_260A918 = 8;
  qword_260A8D8 = (uint64_t)"NODE_LABEL_REFERENCE_FRAME_UNKNOWN";
  unk_260A8E0 = 34;
  dword_260A8E8 = 0;
  qword_260A8F0 = (uint64_t)"NODE_LABEL_POSITION_BOTTOM_CENTERNODE_LABEL_POSITION_BOTTOM_LEFTNODE_LABEL_POSITION_BOTTOM_RI"
                           "GHTNODE_LABEL_POSITION_CENTERNODE_LABEL_POSITION_CENTER_LEFTNODE_LABEL_POSITION_CENTER_RIGHTN"
                           "ODE_LABEL_POSITION_HIDDENNODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL"
                           "_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  *(void *)algn_260A8F8 = 33;
  dword_260A900 = 9;
  qword_260A8C0 = (uint64_t)"NODE_LABEL_REFERENCE_FRAME_SCREEN_SPACENODE_LABEL_REFERENCE_FRAME_UNKNOWN";
  unk_260A8C8 = 39;
  dword_260A8D0 = 1;
  qword_260A740 = (uint64_t)"LOCALIZABLE_STATION_TYPE_FERRY_TERMINALLOCALIZABLE_STATION_TYPE_NONELOCALIZABLE_STATION_TYPE_RAIL_STATIONLOCALIZABLE_STATION_TYPE_RAIL_STOPLOCALIZABLE_STATION_TYPE_SUBWAY_STATIONLOCALIZABLE_STATION_TYPE_SUBWAY_STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  qword_260A8A8 = (uint64_t)"NODE_LABEL_REFERENCE_FRAME_MAP_SPACENODE_LABEL_REFERENCE_FRAME_SCREEN_SPACENODE_LABEL_REFEREN"
                           "CE_FRAME_UNKNOWN";
  unk_260A8B0 = 36;
  dword_260A8B8 = 2;
  qword_260A890 = (uint64_t)"NODE_LABEL_ORIENTATION_VERTICAL";
  unk_260A898 = 31;
  dword_260A8A0 = 2;
  dword_260A870 = 1;
  qword_260A878 = (uint64_t)"NODE_LABEL_ORIENTATION_UNKNOWNNODE_LABEL_ORIENTATION_VERTICAL";
  unk_260A880 = 30;
  dword_260A888 = 0;
  qword_260A860 = (uint64_t)"NODE_LABEL_ORIENTATION_HORIZONTALNODE_LABEL_ORIENTATION_UNKNOWNNODE_LABEL_ORIENTATION_VERTICAL";
  unk_260A868 = 33;
  qword_260A848 = (uint64_t)"NODE_LABEL_ORIENTATION_DYNAMICNODE_LABEL_ORIENTATION_HORIZONTALNODE_LABEL_ORIENTATION_UNKNOWNNODE_LABEL_ORIENTATION_VERTICAL";
  unk_260A850 = 30;
  dword_260A858 = 5;
  qword_260A830 = (uint64_t)"NODE_LABEL_ORIENTATION_DIAGONAL_UPNODE_LABEL_ORIENTATION_DYNAMICNODE_LABEL_ORIENTATION_HORIZONTALNODE_LABEL_ORIENTATION_UNKNOWNNODE_LABEL_ORIENTATION_VERTICAL";
  unk_260A838 = 34;
  qword_260A818 = (uint64_t)"NODE_LABEL_ORIENTATION_DIAGONAL_DOWNNODE_LABEL_ORIENTATION_DIAGONAL_UPNODE_LABEL_ORIENTATION_"
                           "DYNAMICNODE_LABEL_ORIENTATION_HORIZONTALNODE_LABEL_ORIENTATION_UNKNOWNNODE_LABEL_ORIENTATION_VERTICAL";
  unk_260A820 = 36;
  dword_260A840 = 4;
  dword_260A828 = 3;
  dword_260A810 = 1;
  qword_260A800 = (uint64_t)"TBD";
  *(void *)algn_260A808 = 3;
  qword_260A7E8 = (uint64_t)"LOCALIZABLE_STATION_TYPE_TRAM_STOP";
  unk_260A7F0 = 34;
  dword_260A7F8 = 8;
  dword_260A7C8 = 3;
  qword_260A7D0 = (uint64_t)"LOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  unk_260A7D8 = 37;
  dword_260A7E0 = 9;
  qword_260A7B8 = (uint64_t)"LOCALIZABLE_STATION_TYPE_SUBWAY_STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  unk_260A7C0 = 36;
  qword_260A7A0 = (uint64_t)"LOCALIZABLE_STATION_TYPE_SUBWAY_STATIONLOCALIZABLE_STATION_TYPE_SUBWAY_STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  unk_260A7A8 = 39;
  dword_260A7B0 = 6;
  qword_260A788 = (uint64_t)"LOCALIZABLE_STATION_TYPE_RAIL_STOPLOCALIZABLE_STATION_TYPE_SUBWAY_STATIONLOCALIZABLE_STATION_TYPE_SUBWAY_STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  unk_260A790 = 34;
  dword_260A780 = 5;
  dword_260A798 = 2;
  qword_260A770 = (uint64_t)"LOCALIZABLE_STATION_TYPE_RAIL_STATIONLOCALIZABLE_STATION_TYPE_RAIL_STOPLOCALIZABLE_STATION_TYPE_SUBWAY_STATIONLOCALIZABLE_STATION_TYPE_SUBWAY_STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  unk_260A778 = 37;
  qword_260A758 = (uint64_t)"LOCALIZABLE_STATION_TYPE_NONELOCALIZABLE_STATION_TYPE_RAIL_STATIONLOCALIZABLE_STATION_TYPE_RAIL_STOPLOCALIZABLE_STATION_TYPE_SUBWAY_STATIONLOCALIZABLE_STATION_TYPE_SUBWAY_STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  unk_260A760 = 29;
  dword_260A768 = 0;
  dword_2609B08 = 101;
  qword_260A730 = 33;
  dword_260A738 = 1;
  qword_260A748 = 39;
  dword_260A750 = 7;
  dword_260A708 = 101;
  qword_260A710 = (uint64_t)"LOCALIZABLE_STATION_TYPE_BUS_STATIONLOCALIZABLE_STATION_TYPE_BUS_STOPLOCALIZABLE_STATION_TYPE"
                           "_FERRY_TERMINALLOCALIZABLE_STATION_TYPE_NONELOCALIZABLE_STATION_TYPE_RAIL_STATIONLOCALIZABLE_"
                           "STATION_TYPE_RAIL_STOPLOCALIZABLE_STATION_TYPE_SUBWAY_STATIONLOCALIZABLE_STATION_TYPE_SUBWAY_"
                           "STOPLOCALIZABLE_STATION_TYPE_TRAM_STATIONLOCALIZABLE_STATION_TYPE_TRAM_STOP";
  *(void *)algn_260A718 = 36;
  dword_260A720 = 4;
  qword_260A3E0 = (uint64_t)"LOCALIZED_TRANSIT_TYPE_AERIAL_TRAMLOCALIZED_TRANSIT_TYPE_AERIAL_TRAMWAYLOCALIZED_TRANSIT_TYPE"
                           "_BOATLOCALIZED_TRANSIT_TYPE_BUSLOCALIZED_TRANSIT_TYPE_BUS_RAPID_TRANSITLOCALIZED_TRANSIT_TYPE"
                           "_BUS_RAPID_TRANSIT_STATIONLOCALIZED_TRANSIT_TYPE_BUS_STATIONLOCALIZED_TRANSIT_TYPE_CABLE_CARL"
                           "OCALIZED_TRANSIT_TYPE_COACHLOCALIZED_TRANSIT_TYPE_COACH_STATIONLOCALIZED_TRANSIT_TYPE_FERRYLO"
                           "CALIZED_TRANSIT_TYPE_FUNICULARLOCALIZED_TRANSIT_TYPE_GONDOLALOCALIZED_TRANSIT_TYPE_HIGH_SPEED"
                           "_RAILLOCALIZED_TRANSIT_TYPE_JEEPNEYLOCALIZED_TRANSIT_TYPE_LIGHT_RAILLOCALIZED_TRANSIT_TYPE_LI"
                           "NELOCALIZED_TRANSIT_TYPE_MONORAILLOCALIZED_TRANSIT_TYPE_SHIPLOCALIZED_TRANSIT_TYPE_SHUTTLELOC"
                           "ALIZED_TRANSIT_TYPE_SHUTTLE_BUSLOCALIZED_TRANSIT_TYPE_SHUTTLE_BUS_STATIONLOCALIZED_TRANSIT_TY"
                           "PE_STREETCARLOCALIZED_TRANSIT_TYPE_SUBWAYLOCALIZED_TRANSIT_TYPE_TAXILOCALIZED_TRANSIT_TYPE_TR"
                           "AINLOCALIZED_TRANSIT_TYPE_TRAMLOCALIZED_TRANSIT_TYPE_TROLLEYLOCALIZED_TRANSIT_TYPE_TROLLEYBUS"
                           "LOCALIZED_TRANSIT_TYPE_VEHICLE_AIRLOCALIZED_TRANSIT_TYPE_VEHICLE_LANDLOCALIZED_TRANSIT_TYPE_V"
                           "EHICLE_WATERLOCALIZED_TRANSIT_TYPE_WATER_BUSLOCALIZED_TRANSIT_TYPE_WATER_TAXI";
  *(void *)algn_260A3E8 = 34;
  qword_260A700 = 33;
  dword_260A3F0 = 90;
  qword_260A400 = 37;
  qword_260A6D0 = 36;
  dword_260A6D8 = 4;
  qword_260A6E8 = 32;
  qword_260A418 = 27;
  qword_260A430 = 26;
  dword_260A438 = 10;
  dword_260A6A8 = 3;
  qword_260A6B8 = 35;
  dword_260A6C0 = 2;
  dword_260A678 = 54;
  qword_260A688 = 33;
  dword_260A690 = 55;
  qword_260A6A0 = 34;
  qword_260A448 = 40;
  qword_260A460 = 48;
  dword_260A648 = 40;
  qword_260A658 = 27;
  dword_260A660 = 52;
  qword_260A670 = 30;
  qword_260A478 = 34;
  qword_260A490 = 32;
  dword_260A618 = 41;
  qword_260A628 = 27;
  dword_260A630 = 20;
  qword_260A640 = 28;
  qword_260A4A8 = 28;
  dword_260A4B0 = 11;
  qword_260A4C0 = 36;
  qword_260A5F8 = 32;
  dword_260A600 = 51;
  qword_260A610 = 29;
  qword_260A4D8 = 28;
  qword_260A4F0 = 32;
  dword_260A5B8 = 30;
  qword_260A5C8 = 34;
  dword_260A5D0 = 31;
  qword_260A5E0 = 42;
  qword_260A508 = 30;
  qword_260A520 = 38;
  dword_260A528 = 42;
  dword_260A588 = 60;
  qword_260A598 = 27;
  qword_260A5B0 = 30;
  qword_260A538 = 30;
  qword_260A550 = 33;
  dword_260A558 = 50;
  qword_260A568 = 27;
  dword_260A570 = 1;
  qword_260A580 = 31;
  qword_26099C8 = 44;
  qword_26099E0 = 33;
  qword_26099F8 = 41;
  qword_2609A10 = 43;
  qword_2609A28 = 30;
  qword_2609A40 = 29;
  qword_2609A58 = 32;
  dword_2609A60 = 702;
  qword_2609A70 = 18;
  dword_2609A78 = 4;
  qword_2609A88 = 26;
  qword_2609AA0 = 22;
  dword_2609AA8 = 7;
  qword_2609AB8 = 30;
  qword_2609AD0 = 36;
  qword_2609AE8 = 35;
  qword_2609B00 = 36;
  qword_2609B18 = 21;
  qword_2609B30 = 23;
  qword_2609B48 = 27;
  qword_2609B60 = 21;
  qword_2609B78 = 33;
  qword_2609B90 = 41;
  qword_2609BC0 = 38;
  qword_2609BD8 = 44;
  qword_2609BF0 = 46;
  qword_2609C08 = 40;
  qword_2609C20 = 50;
  qword_2609C38 = 40;
  qword_2609C50 = 34;
  qword_2609C68 = 23;
  dword_2609C70 = 0;
  qword_2609C80 = 30;
  dword_2609C88 = 704;
  qword_2609C98 = 36;
  qword_2609CB0 = 42;
  qword_2609CC8 = 31;
  qword_2609CE0 = 33;
  qword_2609CF8 = 41;
  qword_2609D10 = 26;
  qword_2609D28 = 32;
  qword_2609D40 = 34;
  qword_2609D70 = 33;
  qword_2609D88 = 21;
  dword_2609D90 = 12;
  qword_2609DA0 = 29;
  qword_2609DB8 = 39;
  qword_2609DD0 = 35;
  qword_2609DE8 = 45;
  qword_2609E00 = 30;
  qword_260A3B8 = 31;
  qword_260A3D0 = 36;
  qword_2609E18 = 47;
  qword_2609E30 = 30;
  qword_2609E48 = 29;
  dword_2609E50 = 706;
  qword_260A388 = 40;
  qword_260A3A0 = 43;
  qword_2609E60 = 41;
  qword_2609E78 = 36;
  qword_260A358 = 38;
  dword_260A360 = 600;
  qword_260A370 = 34;
  dword_260A378 = 400;
  dword_2609E80 = 116;
  qword_2609E90 = 17;
  dword_2609E98 = 2;
  qword_2609EA8 = 28;
  dword_260A330 = 800;
  qword_260A340 = 32;
  qword_2609EC0 = 41;
  qword_2609ED8 = 40;
  dword_2609EE0 = 108;
  qword_260A310 = 25;
  qword_260A328 = 31;
  qword_2609EF0 = 30;
  qword_2609F08 = 33;
  qword_2609F20 = 39;
  qword_2609F38 = 35;
  qword_260A2E0 = 36;
  qword_260A2F8 = 32;
  qword_2609F50 = 45;
  qword_2609F68 = 34;
  qword_2609F80 = 34;
  qword_2609F98 = 37;
  qword_260A2B0 = 36;
  qword_260A2C8 = 34;
  qword_2609FB0 = 30;
  qword_2609FC8 = 36;
  qword_2609FE0 = 43;
  qword_2609FF8 = 36;
  qword_260A280 = 40;
  qword_260A298 = 30;
  qword_260A010 = 38;
  qword_260A028 = 42;
  qword_260A040 = 24;
  qword_260A250 = 19;
  dword_260A258 = 1;
  qword_260A268 = 25;
  qword_260A058 = 23;
  qword_260A070 = 23;
  qword_260A088 = 31;
  qword_260A0A0 = 32;
  qword_260A220 = 29;
  qword_260A238 = 37;
  qword_260A0B8 = 24;
  qword_260A0D0 = 34;
  dword_260A0D8 = 203;
  qword_260A0E8 = 34;
  qword_260A1F0 = 33;
  qword_260A208 = 33;
  qword_260A100 = 33;
  qword_260A118 = 36;
  qword_260A130 = 37;
  qword_260A148 = 28;
  qword_260A1C0 = 34;
  qword_260A1D8 = 30;
  dword_260A150 = 710;
  qword_260A160 = 38;
  qword_260A178 = 37;
  qword_260A190 = 33;
  qword_260A1A8 = 36;
  qword_260A968 = (uint64_t)"NODE_LABEL_POSITION_CENTER_RIGHTNODE_LABEL_POSITION_HIDDENNODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  unk_260A970 = 32;
  qword_260A980 = (uint64_t)"NODE_LABEL_POSITION_HIDDENNODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  qword_260A998 = (uint64_t)"NODE_LABEL_POSITION_TOP_CENTERNODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  unk_260A9A0 = 30;
  qword_260A9B0 = (uint64_t)"NODE_LABEL_POSITION_TOP_LEFTNODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  unk_260A9B8 = 28;
  qword_260A9C8 = (uint64_t)"NODE_LABEL_POSITION_TOP_RIGHTNODE_LABEL_POSITION_UNKNOWN";
  unk_260A9D0 = 29;
  qword_260A9E0 = (uint64_t)"NODE_LABEL_POSITION_UNKNOWN";
  qword_260A940 = 26;
  dword_260A948 = 6;
  qword_260A958 = 31;
  dword_260A960 = 5;
  dword_260A978 = 7;
  qword_260A988 = 26;
  dword_260A990 = 1;
  dword_260A9A8 = 3;
  dword_260A9C0 = 2;
  dword_260A9D8 = 4;
  qword_260A9E8 = 27;
  dword_260A9F0 = 0;
  qword_260AA28 = (uint64_t)"LINE_STOP_VISIBILITY_SHIELD_TEXTLINE_STOP_VISIBILITY_UNKNOWN";
  qword_260AA40 = (uint64_t)"LINE_STOP_VISIBILITY_UNKNOWN";
  unk_260AA48 = 28;
  qword_260A9F8 = (uint64_t)"LINE_STOP_VISIBILITY_NOT_VISIBLELINE_STOP_VISIBILITY_SHIELD_ICONLINE_STOP_VISIBILITY_SHIELD_T"
                           "EXTLINE_STOP_VISIBILITY_UNKNOWN";
  qword_260AA00 = 32;
  dword_260AA08 = 1;
  qword_260AA10 = (uint64_t)"LINE_STOP_VISIBILITY_SHIELD_ICONLINE_STOP_VISIBILITY_SHIELD_TEXTLINE_STOP_VISIBILITY_UNKNOWN";
  unk_260AA18 = 32;
  dword_260AA20 = 3;
  qword_260AA30 = 32;
  dword_260AA38 = 2;
  dword_260AA50 = 0;
  qword_260AA70 = (uint64_t)"SIGNIFICANCE_EXTRA_EXTRA_SMALLSIGNIFICANCE_EXTRA_LARGESIGNIFICANCE_EXTRA_SMALLSIGNIFICANCE_LARGESIGNIFICANCE_MEDIUMSIGNIFICANCE_SMALL";
  qword_260AA88 = (uint64_t)"SIGNIFICANCE_EXTRA_LARGESIGNIFICANCE_EXTRA_SMALLSIGNIFICANCE_LARGESIGNIFICANCE_MEDIUMSIGNIFICANCE_SMALL";
  qword_260AAA0 = (uint64_t)"SIGNIFICANCE_EXTRA_SMALLSIGNIFICANCE_LARGESIGNIFICANCE_MEDIUMSIGNIFICANCE_SMALL";
  qword_260AAB8 = (uint64_t)"SIGNIFICANCE_LARGESIGNIFICANCE_MEDIUMSIGNIFICANCE_SMALL";
  qword_260AAD0 = (uint64_t)"SIGNIFICANCE_MEDIUMSIGNIFICANCE_SMALL";
  unk_260AAD8 = 19;
  qword_260AA58 = (uint64_t)"SIGNIFICANCE_EXTRA_EXTRA_LARGESIGNIFICANCE_EXTRA_EXTRA_SMALLSIGNIFICANCE_EXTRA_LARGESIGNIFICA"
                           "NCE_EXTRA_SMALLSIGNIFICANCE_LARGESIGNIFICANCE_MEDIUMSIGNIFICANCE_SMALL";
  unk_260AA60 = 30;
  dword_260AA68 = 6;
  qword_260AA78 = 30;
  dword_260AA80 = 5;
  qword_260AA90 = 24;
  dword_260AA98 = 4;
  qword_260AAA8 = 24;
  dword_260AAB0 = 0;
  qword_260AAC0 = 18;
  dword_260AAC8 = 3;
  dword_260AAE0 = 2;
  qword_260AAE8 = (uint64_t)"SIGNIFICANCE_SMALL";
  unk_260AAF0 = 18;
  dword_260AAF8 = 1;
  qword_260AB30 = (uint64_t)"SHIELD_USE_MODESHIELD_USE_STATION_LINESHIELD_USE_SYSTEMSHIELD_USE_TRIPSHIELD_USE_UNKNOWN";
  qword_260AB48 = (uint64_t)"SHIELD_USE_STATION_LINESHIELD_USE_SYSTEMSHIELD_USE_TRIPSHIELD_USE_UNKNOWN";
  qword_260AB60 = (uint64_t)"SHIELD_USE_SYSTEMSHIELD_USE_TRIPSHIELD_USE_UNKNOWN";
  unk_260AB68 = 17;
  qword_260AB78 = (uint64_t)"SHIELD_USE_TRIPSHIELD_USE_UNKNOWN";
  qword_260AB90 = (uint64_t)"SHIELD_USE_UNKNOWN";
  unk_260AB98 = 18;
  qword_260AB00 = (uint64_t)"SHIELD_USE_ACCESS_POINTSHIELD_USE_LINESHIELD_USE_MODESHIELD_USE_STATION_LINESHIELD_USE_SYSTEM"
                           "SHIELD_USE_TRIPSHIELD_USE_UNKNOWN";
  *(void *)algn_260AB08 = 23;
  dword_260AB10 = 6;
  qword_260AB18 = (uint64_t)"SHIELD_USE_LINESHIELD_USE_MODESHIELD_USE_STATION_LINESHIELD_USE_SYSTEMSHIELD_USE_TRIPSHIELD_USE_UNKNOWN";
  unk_260AB20 = 15;
  dword_260AB28 = 1;
  qword_260AB38 = 15;
  dword_260AB40 = 3;
  qword_260AB50 = 23;
  dword_260AB58 = 10;
  dword_260AB70 = 4;
  qword_260AB80 = 15;
  dword_260AB88 = 5;
  dword_260ABA0 = 0;
  qword_260ABC0 = (uint64_t)"TRANSIT_CARD_GROUPING_STYLE_SYSTEMTRANSIT_CARD_GROUPING_STYLE_UNKNOWN";
  unk_260ABC8 = 34;
  qword_260ABD8 = (uint64_t)"TRANSIT_CARD_GROUPING_STYLE_UNKNOWN";
  unk_260ABE0 = 35;
  qword_260ABA8 = (uint64_t)"TRANSIT_CARD_GROUPING_STYLE_LINETRANSIT_CARD_GROUPING_STYLE_SYSTEMTRANSIT_CARD_GROUPING_STYLE_UNKNOWN";
  unk_260ABB0 = 32;
  dword_260ABB8 = 1;
  dword_260ABD0 = 2;
  dword_260ABE8 = 0;
  qword_260AC08 = (uint64_t)"ADVISORY_TYPE_PLANNED_OUTAGEADVISORY_TYPE_STRIKE";
  unk_260AC10 = 28;
  qword_260AC20 = (uint64_t)"ADVISORY_TYPE_STRIKE";
  qword_260ABF0 = (uint64_t)"ADVISORY_TYPE_CONSTRUCTIONADVISORY_TYPE_PLANNED_OUTAGEADVISORY_TYPE_STRIKE";
  *(void *)algn_260ABF8 = 26;
  dword_260AC00 = 2;
  dword_260AC18 = 1;
  qword_260AC28 = 20;
  dword_260AC30 = 0;
  qword_260AC50 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_ACCESS_POINT_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_ATTRIBUTIONTRANSIT_PROTOBUF_RECORD_TYPE_BLOCK_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_BRANDTRANSIT_PROTOBUF_RECORD_TYPE_CARTOGRAPHIC_LINE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_CONNECTED_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AC68 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_ATTRIBUTIONTRANSIT_PROTOBUF_RECORD_TYPE_BLOCK_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_BRANDTRANSIT_PROTOBUF_RECORD_TYPE_CARTOGRAPHIC_LINE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_CONNECTED_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AC80 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_BLOCK_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_BRANDTRANSIT_PROTOBUF_RECORD_TYPE_CARTOGRAPHIC_LINE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_CONNECTED_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AC98 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_BRANDTRANSIT_PROTOBUF_RECORD_TYPE_CARTOGRAPHIC_LINE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_CONNECTED_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260ACB0 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_CARTOGRAPHIC_LINE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_CONNECTED_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260ACC8 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_CONNECTED_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  unk_260ACD0 = 46;
  qword_260ACE0 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260ACF8 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AD10 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AD40 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AD58 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AD70 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AD88 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260ADA0 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260ADB8 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  unk_260ADC0 = 47;
  qword_260ADD0 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  unk_260ADD8 = 53;
  qword_260ADE8 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AE00 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AE18 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AE30 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AE48 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AE60 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AE78 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AE90 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AEA8 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AEC0 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AED8 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AEF0 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AF08 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AF20 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AD28 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTRANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECORD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBUF_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AD30 = 42;
  qword_260AD78 = 42;
  qword_260ADA8 = 42;
  qword_260AF28 = 42;
  qword_260AF38 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AF50 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AF68 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AF80 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AF98 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_UNKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AFB0 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AC38 = (uint64_t)"TRANSIT_PROTOBUF_RECORD_TYPE_ACCESS_POINTTRANSIT_PROTOBUF_RECORD_TYPE_ACCESS_POINT_STOP_TRANS"
                           "FERTRANSIT_PROTOBUF_RECORD_TYPE_ATTRIBUTIONTRANSIT_PROTOBUF_RECORD_TYPE_BLOCK_TRANSFERTRANSIT"
                           "_PROTOBUF_RECORD_TYPE_BRANDTRANSIT_PROTOBUF_RECORD_TYPE_CARTOGRAPHIC_LINE_GROUPTRANSIT_PROTOB"
                           "UF_RECORD_TYPE_CONNECTED_STATIONTRANSIT_PROTOBUF_RECORD_TYPE_FARETRANSIT_PROTOBUF_RECORD_TYPE"
                           "_FARE_AREATRANSIT_PROTOBUF_RECORD_TYPE_FARE_CONTAINERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RU"
                           "LETRANSIT_PROTOBUF_RECORD_TYPE_FARE_LEG_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_NETWORKTR"
                           "ANSIT_PROTOBUF_RECORD_TYPE_FARE_PROVIDERTRANSIT_PROTOBUF_RECORD_TYPE_FARE_RULETRANSIT_PROTOBU"
                           "F_RECORD_TYPE_FARE_SCHEDULETRANSIT_PROTOBUF_RECORD_TYPE_FARE_TRANSFER_RULETRANSIT_PROTOBUF_RE"
                           "CORD_TYPE_FARE_TRANSFER_RULE_GROUPTRANSIT_PROTOBUF_RECORD_TYPE_FARE_ZONETRANSIT_PROTOBUF_RECO"
                           "RD_TYPE_FEEDTRANSIT_PROTOBUF_RECORD_TYPE_HALLTRANSIT_PROTOBUF_RECORD_TYPE_LINETRANSIT_PROTOBU"
                           "F_RECORD_TYPE_LINKTRANSIT_PROTOBUF_RECORD_TYPE_MARKETTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_MET"
                           "HODTRANSIT_PROTOBUF_RECORD_TYPE_PAYMENT_METHOD_REGIONTRANSIT_PROTOBUF_RECORD_TYPE_SCHEDULETRA"
                           "NSIT_PROTOBUF_RECORD_TYPE_SEGMENTTRANSIT_PROTOBUF_RECORD_TYPE_STATIONTRANSIT_PROTOBUF_RECORD_"
                           "TYPE_STATION_POLYGONTRANSIT_PROTOBUF_RECORD_TYPE_STOPTRANSIT_PROTOBUF_RECORD_TYPE_STOP_TRANSF"
                           "ERTRANSIT_PROTOBUF_RECORD_TYPE_SYSTEMTRANSIT_PROTOBUF_RECORD_TYPE_TIMED_TRANSFERTRANSIT_PROTO"
                           "BUF_RECORD_TYPE_TRANSFER_GRAPHTRANSIT_PROTOBUF_RECORD_TYPE_TRIPTRANSIT_PROTOBUF_RECORD_TYPE_U"
                           "NKNOWNTRANSIT_PROTOBUF_RECORD_TYPE_VEHICLE_CONFIGURATION";
  qword_260AC40 = 41;
  dword_260AC48 = 10;
  qword_260AC58 = 55;
  dword_260AC60 = 11;
  qword_260AC70 = 40;
  dword_260AC78 = 14;
  qword_260AC88 = 43;
  dword_260AC90 = 19;
  qword_260ACA0 = 34;
  dword_260ACA8 = 12;
  qword_260ACB8 = 52;
  dword_260ACC0 = 24;
  dword_260ACD8 = 13;
  qword_260ACE8 = 33;
  dword_260ACF0 = 27;
  qword_260AD00 = 38;
  dword_260AD08 = 32;
  qword_260AD18 = 43;
  dword_260AD20 = 38;
  dword_260AD38 = 35;
  qword_260AD48 = 48;
  dword_260AD50 = 37;
  qword_260AD60 = 41;
  dword_260AD68 = 34;
  dword_260AD80 = 33;
  qword_260AD90 = 38;
  dword_260AD98 = 28;
  dword_260ADB0 = 39;
  dword_260ADC8 = 36;
  dword_260ADE0 = 41;
  qword_260ADF0 = 38;
  dword_260ADF8 = 29;
  qword_260AE08 = 33;
  dword_260AE10 = 25;
  qword_260AE20 = 33;
  dword_260AE28 = 20;
  qword_260AE38 = 33;
  dword_260AE40 = 4;
  qword_260AE50 = 33;
  dword_260AE58 = 18;
  qword_260AE68 = 35;
  dword_260AE70 = 16;
  qword_260AE80 = 43;
  dword_260AE88 = 31;
  qword_260AE98 = 50;
  dword_260AEA0 = 40;
  qword_260AEB0 = 37;
  dword_260AEB8 = 9;
  qword_260AEC8 = 36;
  dword_260AED0 = 17;
  qword_260AEE0 = 36;
  dword_260AEE8 = 1;
  qword_260AEF8 = 44;
  dword_260AF00 = 21;
  qword_260AF10 = 33;
  dword_260AF18 = 3;
  dword_260AF30 = 22;
  qword_260AF40 = 35;
  dword_260AF48 = 5;
  qword_260AF58 = 43;
  dword_260AF60 = 23;
  qword_260AF70 = 43;
  dword_260AF78 = 26;
  qword_260AF88 = 33;
  dword_260AF90 = 2;
  qword_260AFA0 = 36;
  dword_260AFA8 = 0;
  qword_260AFB8 = 50;
  dword_260AFC0 = 30;
  qword_260AFE0 = (uint64_t)"ACCESS_POINT_TYPE_DOORACCESS_POINT_TYPE_DOWN_ESCALATORACCESS_POINT_TYPE_EASEMENTACCESS_POINT_TYPE_ELEVATORACCESS_POINT_TYPE_ESCALATORACCESS_POINT_TYPE_RAMPACCESS_POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260AFF8 = (uint64_t)"ACCESS_POINT_TYPE_DOWN_ESCALATORACCESS_POINT_TYPE_EASEMENTACCESS_POINT_TYPE_ELEVATORACCESS_POINT_TYPE_ESCALATORACCESS_POINT_TYPE_RAMPACCESS_POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B010 = (uint64_t)"ACCESS_POINT_TYPE_EASEMENTACCESS_POINT_TYPE_ELEVATORACCESS_POINT_TYPE_ESCALATORACCESS_POINT_TYPE_RAMPACCESS_POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B028 = (uint64_t)"ACCESS_POINT_TYPE_ELEVATORACCESS_POINT_TYPE_ESCALATORACCESS_POINT_TYPE_RAMPACCESS_POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B040 = (uint64_t)"ACCESS_POINT_TYPE_ESCALATORACCESS_POINT_TYPE_RAMPACCESS_POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B058 = (uint64_t)"ACCESS_POINT_TYPE_RAMPACCESS_POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B070 = (uint64_t)"ACCESS_POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B088 = (uint64_t)"ACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B0A0 = (uint64_t)"ACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B0B8 = (uint64_t)"ACCESS_POINT_TYPE_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260B0D0 = (uint64_t)"ACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  qword_260AFC8 = (uint64_t)"ACCESS_POINT_TYPE_DIRECTACCESS_POINT_TYPE_DOORACCESS_POINT_TYPE_DOWN_ESCALATORACCESS_POINT_TY"
                           "PE_EASEMENTACCESS_POINT_TYPE_ELEVATORACCESS_POINT_TYPE_ESCALATORACCESS_POINT_TYPE_RAMPACCESS_"
                           "POINT_TYPE_STAIRACCESS_POINT_TYPE_STREET_ACCESSACCESS_POINT_TYPE_UP_ESCALATORACCESS_POINT_TYP"
                           "E_VIA_AOIACCESS_POINT_TYPE_WHEELCHAIRLIFT";
  unk_260AFD0 = 24;
  dword_260AFD8 = 8;
  qword_260AFE8 = 22;
  dword_260AFF0 = 0;
  qword_260B000 = 32;
  dword_260B008 = 5;
  qword_260B018 = 26;
  dword_260B020 = 1;
  qword_260B030 = 26;
  dword_260B038 = 2;
  qword_260B048 = 27;
  dword_260B050 = 3;
  qword_260B060 = 22;
  dword_260B068 = 6;
  qword_260B078 = 23;
  dword_260B080 = 7;
  qword_260B090 = 31;
  dword_260B098 = 11;
  qword_260B0A8 = 30;
  dword_260B0B0 = 4;
  qword_260B0C0 = 25;
  dword_260B0C8 = 9;
  qword_260B0D8 = 32;
  dword_260B0E0 = 10;
  qword_260B100 = (uint64_t)"STRUCTURE_TYPE_ELEVATEDSTRUCTURE_TYPE_NONESTRUCTURE_TYPE_SHELTERSTRUCTURE_TYPE_UNDERGROUND";
  unk_260B108 = 23;
  qword_260B118 = (uint64_t)"STRUCTURE_TYPE_NONESTRUCTURE_TYPE_SHELTERSTRUCTURE_TYPE_UNDERGROUND";
  unk_260B120 = 19;
  qword_260B0E8 = (uint64_t)"STRUCTURE_TYPE_BUILDINGSTRUCTURE_TYPE_ELEVATEDSTRUCTURE_TYPE_NONESTRUCTURE_TYPE_SHELTERSTRUCT"
                           "URE_TYPE_UNDERGROUND";
  unk_260B0F0 = 23;
  dword_260B0F8 = 2;
  dword_260B110 = 4;
  dword_260B128 = 0;
  dword_260B8A8 = 971;
  qword_260B8C8 = (uint64_t)"CURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B8D8 = 51;
  qword_260B8E0 = (uint64_t)"CURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B8F0 = 532;
  dword_260B908 = 973;
  qword_260B910 = (uint64_t)"CURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260B928 = (uint64_t)"CURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260B940 = (uint64_t)"CURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B950 = 533;
  qword_260B958 = (uint64_t)"CURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B968 = 944;
  qword_260B970 = (uint64_t)"CURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B980 = 977;
  qword_260B988 = (uint64_t)"CURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B998 = 52;
  qword_260B9A0 = (uint64_t)"CURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260B9B8 = (uint64_t)"CURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B9C8 = 975;
  qword_260B9D0 = (uint64_t)"CURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260B9E8 = (uint64_t)"CURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260B9F8 = 108;
  qword_260BA00 = (uint64_t)"CURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BA10 = 60;
  qword_260BA18 = (uint64_t)"CURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BA28 = 96;
  qword_260BA30 = (uint64_t)"CURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BA40 = 68;
  qword_260BA48 = (uint64_t)"CURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BA58 = 984;
  qword_260BA60 = (uint64_t)"CURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BA70 = 986;
  qword_260BA78 = (uint64_t)"CURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BA88 = 44;
  qword_260BA90 = (uint64_t)"CURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BAA0 = 64;
  qword_260BAA8 = (uint64_t)"CURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BAB8 = 72;
  qword_260BAC0 = (uint64_t)"CURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BAD0 = 974;
  qword_260BAD8 = (uint64_t)"CURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BAE8 = 84;
  qword_260BAF0 = (uint64_t)"CURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BB00 = 124;
  qword_260BB08 = (uint64_t)"CURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BB18 = 976;
  qword_260BB20 = (uint64_t)"CURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BB30 = 947;
  qword_260BB38 = (uint64_t)"CURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BB48 = 756;
  qword_260BB50 = (uint64_t)"CURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BB60 = 948;
  qword_260BB68 = (uint64_t)"CURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BB78 = 990;
  qword_260BB80 = (uint64_t)"CURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BB90 = 152;
  qword_260BB98 = (uint64_t)"CURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BBA8 = 156;
  qword_260BBB0 = (uint64_t)"CURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BBC0 = 170;
  qword_260BBC8 = (uint64_t)"CURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BBD8 = 970;
  qword_260BBE0 = (uint64_t)"CURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BBF0 = 188;
  qword_260BBF8 = (uint64_t)"CURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BC08 = 931;
  qword_260BC10 = (uint64_t)"CURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BC20 = 192;
  qword_260BC28 = (uint64_t)"CURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BC38 = 132;
  qword_260BC40 = (uint64_t)"CURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BC50 = 203;
  qword_260BC58 = (uint64_t)"CURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BC68 = 262;
  qword_260BC70 = (uint64_t)"CURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BC80 = 208;
  qword_260BC88 = (uint64_t)"CURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BC98 = 214;
  qword_260BCA0 = (uint64_t)"CURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260BCB8 = (uint64_t)"CURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BCC8 = 818;
  qword_260BCD0 = (uint64_t)"CURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BCE0 = 232;
  qword_260BCE8 = (uint64_t)"CURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BCF8 = 230;
  qword_260BD00 = (uint64_t)"CURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BD10 = 978;
  qword_260BD18 = (uint64_t)"CURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BD28 = 242;
  qword_260BD30 = (uint64_t)"CURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BD40 = 238;
  qword_260BD48 = (uint64_t)"CURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BD58 = 826;
  qword_260BD60 = (uint64_t)"CURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BD70 = 981;
  qword_260BD78 = (uint64_t)"CURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BD88 = 936;
  qword_260BD90 = (uint64_t)"CURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BDA0 = 292;
  qword_260BDA8 = (uint64_t)"CURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BDB8 = 270;
  qword_260BDC0 = (uint64_t)"CURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BDD0 = 324;
  qword_260BDD8 = (uint64_t)"CURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BDE8 = 320;
  qword_260BDF0 = (uint64_t)"CURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BE00 = 328;
  qword_260BE08 = (uint64_t)"CURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BE18 = 344;
  qword_260BE20 = (uint64_t)"CURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BE30 = 340;
  qword_260BE38 = (uint64_t)"CURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BE48 = 191;
  qword_260BE50 = (uint64_t)"CURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BE60 = 332;
  qword_260BE68 = (uint64_t)"CURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BE78 = 348;
  qword_260BE80 = (uint64_t)"CURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BE90 = 360;
  qword_260BE98 = (uint64_t)"CURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BEA8 = 376;
  qword_260BEB0 = (uint64_t)"CURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BEC0 = 356;
  qword_260BEC8 = (uint64_t)"CURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BED8 = 368;
  qword_260BEE0 = (uint64_t)"CURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BEF0 = 364;
  qword_260BEF8 = (uint64_t)"CURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BF08 = 352;
  qword_260BF10 = (uint64_t)"CURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BF20 = 388;
  qword_260BF28 = (uint64_t)"CURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BF38 = 400;
  qword_260BF40 = (uint64_t)"CURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BF50 = 392;
  qword_260BF58 = (uint64_t)"CURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BF68 = 404;
  qword_260BF70 = (uint64_t)"CURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BF80 = 417;
  qword_260BF88 = (uint64_t)"CURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BF98 = 116;
  qword_260BFA0 = (uint64_t)"CURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BFB0 = 174;
  qword_260BFB8 = (uint64_t)"CURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BFC8 = 408;
  qword_260BFD0 = (uint64_t)"CURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BFE0 = 410;
  qword_260BFE8 = (uint64_t)"CURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260BFF8 = 414;
  qword_260C000 = (uint64_t)"CURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C010 = 136;
  qword_260C018 = (uint64_t)"CURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C028 = 398;
  qword_260C030 = (uint64_t)"CURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C040 = 418;
  qword_260C048 = (uint64_t)"CURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C058 = 422;
  qword_260C060 = (uint64_t)"CURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C070 = 144;
  qword_260C078 = (uint64_t)"CURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C088 = 430;
  qword_260C090 = (uint64_t)"CURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C0A0 = 426;
  qword_260C0A8 = (uint64_t)"CURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C0B8 = 434;
  qword_260C0C0 = (uint64_t)"CURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C0D0 = 504;
  qword_260C0D8 = (uint64_t)"CURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C0E8 = 498;
  qword_260C0F0 = (uint64_t)"CURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C100 = 969;
  qword_260C108 = (uint64_t)"CURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C118 = 807;
  qword_260C120 = (uint64_t)"CURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C130 = 104;
  qword_260C138 = (uint64_t)"CURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C148 = 496;
  qword_260C150 = (uint64_t)"CURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C160 = 446;
  qword_260C168 = (uint64_t)"CURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C178 = 478;
  qword_260C180 = (uint64_t)"CURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C190 = 480;
  qword_260C198 = (uint64_t)"CURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C1A8 = 462;
  qword_260C1B0 = (uint64_t)"CURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C1C0 = 454;
  qword_260C1C8 = (uint64_t)"CURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C1D8 = 484;
  qword_260C1E0 = (uint64_t)"CURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C1F0 = 979;
  qword_260C1F8 = (uint64_t)"CURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C208 = 458;
  qword_260C210 = (uint64_t)"CURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C220 = 943;
  qword_260C228 = (uint64_t)"CURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C238 = 516;
  qword_260C240 = (uint64_t)"CURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C250 = 566;
  qword_260C258 = (uint64_t)"CURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C268 = 558;
  qword_260C270 = (uint64_t)"CURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C280 = 578;
  qword_260C288 = (uint64_t)"CURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C298 = 524;
  qword_260C2A0 = (uint64_t)"CURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C2B0 = 554;
  qword_260C2B8 = (uint64_t)"CURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C2C8 = 512;
  qword_260C2D0 = (uint64_t)"CURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C2E0 = 590;
  qword_260C2E8 = (uint64_t)"CURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C2F8 = 604;
  qword_260C300 = (uint64_t)"CURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C310 = 598;
  qword_260C318 = (uint64_t)"CURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C328 = 608;
  qword_260C330 = (uint64_t)"CURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C340 = 586;
  qword_260C348 = (uint64_t)"CURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C358 = 985;
  qword_260C360 = (uint64_t)"CURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C370 = 600;
  qword_260C378 = (uint64_t)"CURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C388 = 634;
  qword_260C390 = (uint64_t)"CURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C3A0 = 946;
  qword_260C3A8 = (uint64_t)"CURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C3B8 = 941;
  qword_260C3C0 = (uint64_t)"CURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C3D0 = 643;
  qword_260C3D8 = (uint64_t)"CURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C3E8 = 646;
  qword_260C3F0 = (uint64_t)"CURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C400 = 682;
  qword_260C408 = (uint64_t)"CURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C418 = 90;
  qword_260C420 = (uint64_t)"CURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C430 = 690;
  qword_260C438 = (uint64_t)"CURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C448 = 938;
  qword_260C450 = (uint64_t)"CURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C460 = 752;
  qword_260C468 = (uint64_t)"CURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C478 = 702;
  qword_260C480 = (uint64_t)"CURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C490 = 654;
  qword_260C498 = (uint64_t)"CURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C4A8 = 694;
  qword_260C4B0 = (uint64_t)"CURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C4C0 = 706;
  qword_260C4C8 = (uint64_t)"CURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C4D8 = 968;
  qword_260B8B0 = (uint64_t)"CURRENCY_ALLCURRENCY_AMDCURRENCY_ANGCURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  unk_260B8B8 = 12;
  dword_260B8C0 = 8;
  qword_260B8D0 = 12;
  qword_260B8E8 = 12;
  qword_260C890 = 12;
  qword_260C9F0 = (uint64_t)"TRANSIT_TRANSFER_NODE_TYPE_STATION_CONNECTION_ENTRANCETRANSIT_TRANSFER_NODE_TYPE_STOPTRANSIT_TRANSFER_NODE_TYPE_UNKNOWNTRANSIT_TRANSFER_NODE_TYPE_WAYPOINT";
  qword_260CCA8 = (uint64_t)"PAYMENT_METHOD_TYPE_OPEN_LOOPPAYMENT_METHOD_TYPE_OPEN_UNKNOWN";
  qword_260D008 = (uint64_t)"UPDATED";
  qword_260D010 = 7;
  dword_260D018 = 2;
  qword_260D020 = (uint64_t)"POPULARITY_DATAPOPULARITY_SCORE";
  qword_260CFA8 = (uint64_t)"STATUS_UNKNOWNSTATUS_UNKNOWN_PRECACHE";
  qword_260CFF0 = (uint64_t)"DELETEDUPDATED";
  unk_260CFF8 = 7;
  dword_260CFE8 = 1;
  dword_260D000 = 3;
  qword_260CFD8 = (uint64_t)"ADDEDDELETEDUPDATED";
  unk_260CFE0 = 5;
  qword_260CFC0 = (uint64_t)"STATUS_UNKNOWN_PRECACHE";
  unk_260CFC8 = 23;
  dword_260CFD0 = 2;
  qword_260CF90 = (uint64_t)"STATUS_SUCCESSSTATUS_UNKNOWNSTATUS_UNKNOWN_PRECACHE";
  *(void *)algn_260CF98 = 14;
  qword_260CFB0 = 14;
  dword_260CFB8 = 0;
  dword_260CFA0 = 1;
  qword_260CF78 = (uint64_t)"TRANSIT_TRIP_UPDATE_TYPE_STOP_TIMES";
  unk_260CF80 = 35;
  dword_260CF88 = 0;
  qword_260CF60 = (uint64_t)"TRANSIT_TRIP_UPDATE_TYPE_DROP_TRIPTRANSIT_TRIP_UPDATE_TYPE_STOP_TIMES";
  *(void *)algn_260CF68 = 34;
  dword_260CF70 = 1;
  dword_260CF58 = 2;
  qword_260CF48 = (uint64_t)"STOP_TIME_UPDATE_SOURCE_SYNTHESIZED";
  unk_260CF50 = 35;
  qword_260CF30 = (uint64_t)"STOP_TIME_UPDATE_SOURCE_PROVIDEDSTOP_TIME_UPDATE_SOURCE_SYNTHESIZED";
  unk_260CF38 = 32;
  dword_260CF40 = 1;
  qword_260CF18 = (uint64_t)"STOP_TIME_UPDATE_SOURCE_OTHERSTOP_TIME_UPDATE_SOURCE_PROVIDEDSTOP_TIME_UPDATE_SOURCE_SYNTHESIZED";
  unk_260CF20 = 29;
  dword_260CF28 = 0;
  qword_260CEE8 = (uint64_t)"OCCUPANCY_STATUS_VERY_CROWDED";
  unk_260CEF0 = 29;
  qword_260CF00 = (uint64_t)"STOP_TIME_UPDATE_SOURCE_MERGEDSTOP_TIME_UPDATE_SOURCE_OTHERSTOP_TIME_UPDATE_SOURCE_PROVIDEDST"
                           "OP_TIME_UPDATE_SOURCE_SYNTHESIZED";
  *(void *)algn_260CF08 = 30;
  dword_260CF10 = 3;
  dword_260CEF8 = 3;
  qword_260CED0 = (uint64_t)"OCCUPANCY_STATUS_UNKNOWNOCCUPANCY_STATUS_VERY_CROWDED";
  unk_260CED8 = 24;
  dword_260CEE0 = 0;
  qword_260CEA0 = (uint64_t)"OCCUPANCY_STATUS_NOT_ACCEPTING_PASSENGERSOCCUPANCY_STATUS_NOT_CROWDEDOCCUPANCY_STATUS_UNKNOWNOCCUPANCY_STATUS_VERY_CROWDED";
  dword_260CEB0 = 4;
  qword_260CEB8 = (uint64_t)"OCCUPANCY_STATUS_NOT_CROWDEDOCCUPANCY_STATUS_UNKNOWNOCCUPANCY_STATUS_VERY_CROWDED";
  unk_260CEC0 = 28;
  dword_260CEC8 = 1;
  qword_260CE88 = (uint64_t)"OCCUPANCY_STATUS_CROWDEDOCCUPANCY_STATUS_NOT_ACCEPTING_PASSENGERSOCCUPANCY_STATUS_NOT_CROWDED"
                           "OCCUPANCY_STATUS_UNKNOWNOCCUPANCY_STATUS_VERY_CROWDED";
  unk_260CE90 = 24;
  dword_260CE98 = 2;
  qword_260CEA8 = 41;
  qword_260CE58 = (uint64_t)"SUPPRESSION_REASON_CHINA_SBSMSUPPRESSION_REASON_UNKNOWN";
  unk_260CE60 = 29;
  dword_260CE80 = 0;
  dword_260CE68 = 1;
  qword_260CE70 = (uint64_t)"SUPPRESSION_REASON_UNKNOWN";
  unk_260CE78 = 26;
  qword_260CDB0 = (uint64_t)"FARE_TIMEFRAME_TYPE_STOP_DEPARTUREFARE_TIMEFRAME_TYPE_TRIP_ARRIVALFARE_TIMEFRAME_TYPE_TRIP_DEPARTUREFARE_TIMEFRAME_TYPE_UNKNOWN";
  qword_260CE40 = (uint64_t)"FARE_EMPTY_FIELD_MATCHING_SCHEME_UNKNOWN";
  qword_260CE48 = 40;
  dword_260CE38 = 1;
  dword_260CE50 = 0;
  qword_260CE28 = (uint64_t)"FARE_EMPTY_FIELD_MATCHING_SCHEME_ANYTHING_BUTFARE_EMPTY_FIELD_MATCHING_SCHEME_UNKNOWN";
  qword_260CE30 = 45;
  qword_260CE10 = (uint64_t)"FARE_EMPTY_FIELD_MATCHING_SCHEME_ANYTHINGFARE_EMPTY_FIELD_MATCHING_SCHEME_ANYTHING_BUTFARE_EM"
                           "PTY_FIELD_MATCHING_SCHEME_UNKNOWN";
  *(void *)algn_260CE18 = 41;
  dword_260CE20 = 2;
  qword_260CDF8 = (uint64_t)"FARE_TIMEFRAME_TYPE_UNKNOWN";
  unk_260CE00 = 27;
  dword_260CDF0 = 4;
  dword_260CE08 = 0;
  qword_260CDE0 = (uint64_t)"FARE_TIMEFRAME_TYPE_TRIP_DEPARTUREFARE_TIMEFRAME_TYPE_UNKNOWN";
  qword_260CDC8 = (uint64_t)"FARE_TIMEFRAME_TYPE_TRIP_ARRIVALFARE_TIMEFRAME_TYPE_TRIP_DEPARTUREFARE_TIMEFRAME_TYPE_UNKNOWN";
  qword_260CDD0 = 32;
  dword_260CDD8 = 3;
  qword_260CDE8 = 34;
  qword_260CD98 = (uint64_t)"FARE_TIMEFRAME_TYPE_STOP_ARRIVALFARE_TIMEFRAME_TYPE_STOP_DEPARTUREFARE_TIMEFRAME_TYPE_TRIP_AR"
                           "RIVALFARE_TIMEFRAME_TYPE_TRIP_DEPARTUREFARE_TIMEFRAME_TYPE_UNKNOWN";
  unk_260CDA0 = 32;
  qword_260CDB8 = 34;
  dword_260CDC0 = 2;
  dword_260CDA8 = 1;
  qword_260CD80 = (uint64_t)"PAYMENT_METHOD_OPEN_LOOP_TYPE_UNKNOWN";
  unk_260CD88 = 37;
  dword_260CD90 = 0;
  qword_260CD20 = (uint64_t)"PAYMENT_METHOD_TEXT_VARIATION_OPEN_LOOPPAYMENT_METHOD_TEXT_VARIATION_UNKNOWN";
  qword_260CD68 = (uint64_t)"PAYMENT_METHOD_OPEN_LOOP_TYPE_NON_EXPRESSPAYMENT_METHOD_OPEN_LOOP_TYPE_UNKNOWN";
  unk_260CD70 = 41;
  dword_260CD60 = 1;
  dword_260CD78 = 2;
  qword_260CD50 = (uint64_t)"PAYMENT_METHOD_OPEN_LOOP_TYPE_EXPRESSPAYMENT_METHOD_OPEN_LOOP_TYPE_NON_EXPRESSPAYMENT_METHOD_"
                           "OPEN_LOOP_TYPE_UNKNOWN";
  qword_260CD58 = 37;
  qword_260CD38 = (uint64_t)"PAYMENT_METHOD_TEXT_VARIATION_UNKNOWN";
  unk_260CD40 = 37;
  dword_260CD48 = 0;
  qword_260CD08 = (uint64_t)"PAYMENT_METHOD_TEXT_VARIATION_CLOSED_LOOP_SINGLEPAYMENT_METHOD_TEXT_VARIATION_OPEN_LOOPPAYMENT_METHOD_TEXT_VARIATION_UNKNOWN";
  unk_260CD10 = 48;
  dword_260CD18 = 1;
  qword_260CD28 = 39;
  dword_260CD30 = 4;
  qword_260CCF0 = (uint64_t)"PAYMENT_METHOD_TEXT_VARIATION_CLOSED_LOOP_MULTIPLEPAYMENT_METHOD_TEXT_VARIATION_CLOSED_LOOP_SINGLEPAYMENT_METHOD_TEXT_VARIATION_OPEN_LOOPPAYMENT_METHOD_TEXT_VARIATION_UNKNOWN";
  dword_260B9B0 = 50;
  qword_260CCF8 = 50;
  dword_260CCE8 = 3;
  dword_260CD00 = 2;
  qword_260CCD8 = (uint64_t)"PAYMENT_METHOD_TEXT_VARIATION_CLOSED_LOOP_INTEROPERABLEPAYMENT_METHOD_TEXT_VARIATION_CLOSED_L"
                           "OOP_MULTIPLEPAYMENT_METHOD_TEXT_VARIATION_CLOSED_LOOP_SINGLEPAYMENT_METHOD_TEXT_VARIATION_OPE"
                           "N_LOOPPAYMENT_METHOD_TEXT_VARIATION_UNKNOWN";
  unk_260CCE0 = 55;
  qword_260CCC0 = (uint64_t)"PAYMENT_METHOD_TYPE_OPEN_UNKNOWN";
  unk_260CCC8 = 32;
  dword_260CCD0 = 0;
  qword_260CC90 = (uint64_t)"PAYMENT_METHOD_TYPE_CLOSED_LOOP_NON_DCIPAYMENT_METHOD_TYPE_OPEN_LOOPPAYMENT_METHOD_TYPE_OPEN_UNKNOWN";
  unk_260CC98 = 39;
  dword_260CCA0 = 4;
  qword_260CCB0 = 29;
  dword_260CCB8 = 1;
  qword_260CC78 = (uint64_t)"PAYMENT_METHOD_TYPE_CLOSED_LOOP_DCIPAYMENT_METHOD_TYPE_CLOSED_LOOP_NON_DCIPAYMENT_METHOD_TYPE_OPEN_LOOPPAYMENT_METHOD_TYPE_OPEN_UNKNOWN";
  unk_260CC80 = 35;
  qword_260CC60 = (uint64_t)"PAYMENT_METHOD_TYPE_CASHPAYMENT_METHOD_TYPE_CLOSED_LOOP_DCIPAYMENT_METHOD_TYPE_CLOSED_LOOP_NO"
                           "N_DCIPAYMENT_METHOD_TYPE_OPEN_LOOPPAYMENT_METHOD_TYPE_OPEN_UNKNOWN";
  *(void *)algn_260CC68 = 24;
  dword_260CC88 = 2;
  dword_260CC70 = 3;
  qword_260CC48 = (uint64_t)"START_TO_START";
  unk_260CC50 = 14;
  qword_260CC30 = (uint64_t)"START_TO_ENDSTART_TO_START";
  unk_260CC38 = 12;
  dword_260CC58 = 2;
  dword_260CC40 = 1;
  qword_260CBB8 = (uint64_t)"FROM_LEG_PLUS_TRANSFERMOST_EXPENSIVE_LEG_PLUS_TRANSFERTRANSFER_ONLY";
  qword_260CC18 = (uint64_t)"END_TO_STARTSTART_TO_ENDSTART_TO_START";
  unk_260CC20 = 12;
  dword_260CC10 = 4;
  dword_260CC28 = 3;
  qword_260CC00 = (uint64_t)"END_TO_ENDEND_TO_STARTSTART_TO_ENDSTART_TO_START";
  qword_260CC08 = 10;
  qword_260CBE8 = (uint64_t)"TRANSFER_ONLY";
  unk_260CBF0 = 13;
  dword_260CBF8 = 4;
  qword_260CBA0 = (uint64_t)"FROM_LEG_PLUS_TO_LEG_PLUS_TRANSFERFROM_LEG_PLUS_TRANSFERMOST_EXPENSIVE_LEG_PLUS_TRANSFERTRANSFER_ONLY";
  *(void *)algn_260CBA8 = 34;
  qword_260CBD0 = (uint64_t)"MOST_EXPENSIVE_LEG_PLUS_TRANSFERTRANSFER_ONLY";
  unk_260CBD8 = 32;
  dword_260CBC8 = 1;
  dword_260CBE0 = 3;
  dword_260CBB0 = 2;
  qword_260CBC0 = 22;
  qword_260CB88 = (uint64_t)"TRANSIT_PAYMENT_METHOD_PURPOSE_UNKNOWN";
  unk_260CB90 = 38;
  dword_260CB98 = 0;
  qword_260CB70 = (uint64_t)"TRANSIT_PAYMENT_METHOD_PURPOSE_PRIMARYTRANSIT_PAYMENT_METHOD_PURPOSE_UNKNOWN";
  unk_260CB78 = 38;
  qword_260CB58 = (uint64_t)"TRANSIT_PAYMENT_METHOD_PURPOSE_COVERAGETRANSIT_PAYMENT_METHOD_PURPOSE_PRIMARYTRANSIT_PAYMENT_"
                           "METHOD_PURPOSE_UNKNOWN";
  unk_260CB60 = 39;
  dword_260CB80 = 1;
  dword_260CB68 = 2;
  qword_260CB40 = (uint64_t)"SIGNAL_STRENGTH_STRONG";
  unk_260CB48 = 22;
  dword_260CB50 = 1;
  qword_260CB10 = (uint64_t)"NEARBY_DISPLAY_FILTER_USE_NAME";
  unk_260CB18 = 30;
  qword_260CB28 = (uint64_t)"SIGNAL_STRENGTH_NONESIGNAL_STRENGTH_STRONG";
  qword_260CB30 = 20;
  dword_260CB38 = 0;
  dword_260CB20 = 1;
  qword_260CAF8 = (uint64_t)"NEARBY_DISPLAY_FILTER_USE_LOCALIZED_TRANSIT_TYPENEARBY_DISPLAY_FILTER_USE_NAME";
  unk_260CB00 = 48;
  dword_260CB08 = 0;
  qword_260CAE0 = (uint64_t)"ROUTING_USE_NONE";
  qword_260CAE8 = 16;
  dword_260CAF0 = 0;
  qword_260C9F8 = 54;
  qword_260CAB0 = (uint64_t)"ROUTING_USE_CODEROUTING_USE_NAMEROUTING_USE_NONE";
  *(void *)algn_260CAB8 = 16;
  qword_260CAC8 = (uint64_t)"ROUTING_USE_NAMEROUTING_USE_NONE";
  unk_260CAD0 = 16;
  dword_260CAD8 = 1;
  dword_260CAC0 = 2;
  qword_260CA98 = (uint64_t)"TRANSIT_DATA_SOURCE_AUTONAVI";
  qword_260CA80 = (uint64_t)"TRANSIT_DATA_SOURCE_APPLETRANSIT_DATA_SOURCE_AUTONAVI";
  qword_260CA88 = 25;
  qword_260CAA0 = 28;
  dword_260CAA8 = 1;
  dword_260CA90 = 0;
  dword_260CA78 = 0;
  qword_260CA50 = (uint64_t)"TRANSIT_INSTRUCTION_TYPE_FOLLOW_SIGNSTRANSIT_INSTRUCTION_TYPE_UNKNOWN";
  *(void *)algn_260CA58 = 37;
  qword_260CA68 = (uint64_t)"TRANSIT_INSTRUCTION_TYPE_UNKNOWN";
  unk_260CA70 = 32;
  dword_260CA60 = 1;
  qword_260CA38 = (uint64_t)"TRANSIT_TRANSFER_NODE_TYPE_WAYPOINT";
  unk_260CA40 = 35;
  dword_260CA30 = 0;
  dword_260CA48 = 6;
  qword_260CA08 = (uint64_t)"TRANSIT_TRANSFER_NODE_TYPE_STOPTRANSIT_TRANSFER_NODE_TYPE_UNKNOWNTRANSIT_TRANSFER_NODE_TYPE_WAYPOINT";
  qword_260CA10 = 31;
  qword_260CA20 = (uint64_t)"TRANSIT_TRANSFER_NODE_TYPE_UNKNOWNTRANSIT_TRANSFER_NODE_TYPE_WAYPOINT";
  unk_260CA28 = 34;
  dword_260CA18 = 3;
  qword_260C9D8 = (uint64_t)"TRANSIT_TRANSFER_NODE_TYPE_FARE_GATETRANSIT_TRANSFER_NODE_TYPE_STATION_CONNECTION_ENTRANCETRANSIT_TRANSFER_NODE_TYPE_STOPTRANSIT_TRANSFER_NODE_TYPE_UNKNOWNTRANSIT_TRANSFER_NODE_TYPE_WAYPOINT";
  unk_260C9E0 = 36;
  dword_260C9E8 = 5;
  dword_260CA00 = 1;
  qword_260C9C0 = (uint64_t)"TRANSIT_TRANSFER_NODE_TYPE_CONCOURSETRANSIT_TRANSFER_NODE_TYPE_FARE_GATETRANSIT_TRANSFER_NODE_TYPE_STATION_CONNECTION_ENTRANCETRANSIT_TRANSFER_NODE_TYPE_STOPTRANSIT_TRANSFER_NODE_TYPE_UNKNOWNTRANSIT_TRANSFER_NODE_TYPE_WAYPOINT";
  unk_260C9C8 = 36;
  dword_260B938 = 36;
  qword_260C9A8 = (uint64_t)"TRANSIT_TRANSFER_NODE_TYPE_ACCESS_POINTTRANSIT_TRANSFER_NODE_TYPE_CONCOURSETRANSIT_TRANSFER_N"
                           "ODE_TYPE_FARE_GATETRANSIT_TRANSFER_NODE_TYPE_STATION_CONNECTION_ENTRANCETRANSIT_TRANSFER_NODE"
                           "_TYPE_STOPTRANSIT_TRANSFER_NODE_TYPE_UNKNOWNTRANSIT_TRANSFER_NODE_TYPE_WAYPOINT";
  unk_260C9B0 = 39;
  dword_260C9D0 = 4;
  dword_260C9B8 = 2;
  qword_260C978 = (uint64_t)"TRANSIT_TRIP_TYPE_INEXACT_FREQUENCYTRANSIT_TRIP_TYPE_STANDARD";
  unk_260C980 = 35;
  qword_260C990 = (uint64_t)"TRANSIT_TRIP_TYPE_STANDARD";
  unk_260C998 = 26;
  dword_260C988 = 3;
  dword_260C9A0 = 0;
  qword_260C960 = (uint64_t)"TRANSIT_TRIP_TYPE_EXACT_FREQUENCYTRANSIT_TRIP_TYPE_INEXACT_FREQUENCYTRANSIT_TRIP_TYPE_STANDARD";
  unk_260C968 = 33;
  dword_260C970 = 2;
  qword_260C4E0 = (uint64_t)"CURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C940 = 932;
  qword_260C948 = (uint64_t)"TRANSIT_TRIP_TYPE_ENUMERATEDTRANSIT_TRIP_TYPE_EXACT_FREQUENCYTRANSIT_TRIP_TYPE_INEXACT_FREQUE"
                           "NCYTRANSIT_TRIP_TYPE_STANDARD";
  unk_260C950 = 28;
  dword_260C958 = 1;
  qword_260C918 = (uint64_t)"CURRENCY_ZMWCURRENCY_ZWL";
  dword_260C928 = 967;
  qword_260C930 = (uint64_t)"CURRENCY_ZWL";
  qword_260C920 = 12;
  qword_260C938 = 12;
  dword_260C8F8 = 886;
  qword_260C900 = (uint64_t)"CURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C910 = 710;
  qword_260C908 = 12;
  qword_260C8D0 = (uint64_t)"CURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C8E0 = 999;
  qword_260C8E8 = (uint64_t)"CURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C8D8 = 12;
  qword_260C8F0 = 12;
  dword_260C880 = 962;
  dword_260C8B0 = 963;
  qword_260C8B8 = (uint64_t)"CURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C8C8 = 965;
  qword_260C8C0 = 12;
  qword_260C888 = (uint64_t)"CURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C898 = 994;
  qword_260C8A0 = (uint64_t)"CURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C8A8 = 12;
  dword_260C838 = 952;
  dword_260C868 = 953;
  qword_260C870 = (uint64_t)"CURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C860 = 12;
  qword_260C878 = 12;
  qword_260C840 = (uint64_t)"CURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C850 = 964;
  qword_260C858 = (uint64_t)"CURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C848 = 12;
  dword_260C7F0 = 958;
  dword_260C820 = 960;
  qword_260C828 = (uint64_t)"CURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C818 = 12;
  qword_260C830 = 12;
  qword_260C7F8 = (uint64_t)"CURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C808 = 951;
  qword_260C810 = (uint64_t)"CURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C800 = 12;
  dword_260C7A8 = 955;
  dword_260C7D8 = 957;
  qword_260C7E0 = (uint64_t)"CURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C7D0 = 12;
  qword_260C7E8 = 12;
  qword_260C7B0 = (uint64_t)"CURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C7C0 = 956;
  qword_260C7C8 = (uint64_t)"CURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C7B8 = 12;
  dword_260C760 = 950;
  dword_260C790 = 959;
  qword_260C798 = (uint64_t)"CURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C788 = 12;
  qword_260C7A0 = 12;
  qword_260C768 = (uint64_t)"CURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C778 = 961;
  qword_260C780 = (uint64_t)"CURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C770 = 12;
  dword_260C718 = 704;
  dword_260C748 = 882;
  qword_260C750 = (uint64_t)"CURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C740 = 12;
  qword_260C758 = 12;
  qword_260C720 = (uint64_t)"CURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C730 = 548;
  qword_260C738 = (uint64_t)"CURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C728 = 12;
  dword_260C6D0 = 858;
  dword_260C700 = 937;
  qword_260C708 = (uint64_t)"CURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C6F8 = 12;
  qword_260C710 = 12;
  qword_260C6D8 = (uint64_t)"CURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C6E8 = 860;
  qword_260C6F0 = (uint64_t)"CURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C6E0 = 12;
  dword_260C688 = 840;
  dword_260C6B8 = 940;
  qword_260C6C0 = (uint64_t)"CURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C6B0 = 12;
  qword_260C6C8 = 12;
  qword_260C690 = (uint64_t)"CURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C6A0 = 997;
  qword_260C6A8 = (uint64_t)"CURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C698 = 12;
  dword_260C640 = 980;
  qword_260C678 = (uint64_t)"CURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C668 = 16;
  dword_260C670 = 0;
  qword_260C680 = 12;
  qword_260C648 = (uint64_t)"CURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C658 = 800;
  qword_260C660 = (uint64_t)"CURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C650 = 12;
  dword_260C5F8 = 780;
  dword_260C628 = 834;
  qword_260C630 = (uint64_t)"CURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C620 = 12;
  qword_260C638 = 12;
  qword_260C600 = (uint64_t)"CURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C610 = 901;
  qword_260C618 = (uint64_t)"CURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C608 = 12;
  dword_260C5B0 = 788;
  dword_260C5E0 = 949;
  qword_260C5E8 = (uint64_t)"CURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C5D8 = 12;
  qword_260C5F0 = 12;
  qword_260C5B8 = (uint64_t)"CURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C5C8 = 776;
  qword_260C5D0 = (uint64_t)"CURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C5C0 = 12;
  dword_260C568 = 764;
  dword_260C598 = 934;
  qword_260C5A0 = (uint64_t)"CURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C590 = 12;
  qword_260C5A8 = 12;
  qword_260C570 = (uint64_t)"CURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C580 = 972;
  qword_260C588 = (uint64_t)"CURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C578 = 12;
  dword_260C520 = 222;
  dword_260C550 = 748;
  qword_260C558 = (uint64_t)"CURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C548 = 12;
  qword_260C560 = 12;
  qword_260C528 = (uint64_t)"CURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  dword_260C538 = 760;
  qword_260C540 = (uint64_t)"CURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C530 = 12;
  dword_260C4F0 = 728;
  dword_260C508 = 678;
  qword_260C510 = (uint64_t)"CURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260C500 = 12;
  qword_260C518 = 12;
  qword_260C4F8 = (uint64_t)"CURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  qword_260B8F8 = (uint64_t)"CURRENCY_AOACURRENCY_ARSCURRENCY_AUDCURRENCY_AWGCURRENCY_AZNCURRENCY_BAMCURRENCY_BBDCURRENCY_BDTCURRENCY_BGNCURRENCY_BHDCURRENCY_BIFCURRENCY_BMDCURRENCY_BNDCURRENCY_BOBCURRENCY_BOVCURRENCY_BRLCURRENCY_BSDCURRENCY_BTNCURRENCY_BWPCURRENCY_BYRCURRENCY_BZDCURRENCY_CADCURRENCY_CDFCURRENCY_CHECURRENCY_CHFCURRENCY_CHWCURRENCY_CLFCURRENCY_CLPCURRENCY_CNYCURRENCY_COPCURRENCY_COUCURRENCY_CRCCURRENCY_CUCCURRENCY_CUPCURRENCY_CVECURRENCY_CZKCURRENCY_DJFCURRENCY_DKKCURRENCY_DOPCURRENCY_DZDCURRENCY_EGPCURRENCY_ERNCURRENCY_ETBCURRENCY_EURCURRENCY_FJDCURRENCY_FKPCURRENCY_GBPCURRENCY_GELCURRENCY_GHSCURRENCY_GIPCURRENCY_GMDCURRENCY_GNFCURRENCY_GTQCURRENCY_GYDCURRENCY_HKDCURRENCY_HNLCURRENCY_HRKCURRENCY_HTGCURRENCY_HUFCURRENCY_IDRCURRENCY_ILSCURRENCY_INRCURRENCY_IQDCURRENCY_IRRCURRENCY_ISKCURRENCY_JMDCURRENCY_JODCURRENCY_JPYCURRENCY_KESCURRENCY_KGSCURRENCY_KHRCURRENCY_KMFCURRENCY_KPWCURRENCY_KRWCURRENCY_KWDCURRENCY_KYDCURRENCY_KZTCURRENCY_LAKCURRENCY_LBPCURRENCY_LKRCURRENCY_LRDCURRENCY_LSLCURRENCY_LYDCURRENCY_MADCURRENCY_MDLCURRENCY_MGACURRENCY_MKDCURRENCY_MMKCURRENCY_MNTCURRENCY_MOPCURRENCY_MROCURRENCY_MURCURRENCY_MVRCURRENCY_MWKCURRENCY_MXNCURRENCY_MXVCURRENCY_MYRCURRENCY_MZNCURRENCY_NADCURRENCY_NGNCURRENCY_NIOCURRENCY_NOKCURRENCY_NPRCURRENCY_NZDCURRENCY_OMRCURRENCY_PABCURRENCY_PENCURRENCY_PGKCURRENCY_PHPCURRENCY_PKRCURRENCY_PLNCURRENCY_PYGCURRENCY_QARCURRENCY_RONCURRENCY_RSDCURRENCY_RUBCURRENCY_RWFCURRENCY_SARCURRENCY_SBDCURRENCY_SCRCURRENCY_SDGCURRENCY_SEKCURRENCY_SGDCURRENCY_SHPCURRENCY_SLLCURRENCY_SOSCURRENCY_SRDCURRENCY_SSPCURRENCY_STDCURRENCY_SVCCURRENCY_SYPCURRENCY_SZLCURRENCY_THBCURRENCY_TJSCURRENCY_TMTCURRENCY_TNDCURRENCY_TOPCURRENCY_TRYCURRENCY_TTDCURRENCY_TWDCURRENCY_TZSCURRENCY_UAHCURRENCY_UGXCURRENCY_UNKNOWNCURRENCY_USDCURRENCY_USNCURRENCY_UYICURRENCY_UYUCURRENCY_UZSCURRENCY_VEFCURRENCY_VNDCURRENCY_VUVCURRENCY_WSTCURRENCY_XAFCURRENCY_XAGCURRENCY_XAUCURRENCY_XBACURRENCY_XBBCURRENCY_XBCCURRENCY_XBDCURRENCY_XCDCURRENCY_XDRCURRENCY_XOFCURRENCY_XPDCURRENCY_XPFCURRENCY_XPTCURRENCY_XSUCURRENCY_XTSCURRENCY_XUACURRENCY_XXXCURRENCY_YERCURRENCY_ZARCURRENCY_ZMWCURRENCY_ZWL";
  unk_260B900 = 12;
  qword_260C4D0 = 12;
  qword_260C4E8 = 12;
  qword_260B918 = 12;
  dword_260B920 = 32;
  qword_260B930 = 12;
  qword_260C4A0 = 12;
  qword_260C4B8 = 12;
  qword_260B948 = 12;
  qword_260B960 = 12;
  qword_260B978 = 12;
  qword_260B990 = 12;
  qword_260C470 = 12;
  qword_260C488 = 12;
  qword_260B9A8 = 12;
  qword_260B9C0 = 12;
  qword_260B9D8 = 12;
  dword_260B9E0 = 48;
  qword_260C440 = 12;
  qword_260C458 = 12;
  qword_260B9F0 = 12;
  qword_260BA08 = 12;
  qword_260BA20 = 12;
  qword_260BA38 = 12;
  qword_260C410 = 12;
  qword_260C428 = 12;
  qword_260BA50 = 12;
  qword_260BA68 = 12;
  qword_260BA80 = 12;
  qword_260BA98 = 12;
  qword_260C3E0 = 12;
  qword_260C3F8 = 12;
  qword_260BAB0 = 12;
  qword_260BAC8 = 12;
  qword_260BAE0 = 12;
  qword_260BAF8 = 12;
  qword_260C3B0 = 12;
  qword_260C3C8 = 12;
  qword_260BB10 = 12;
  qword_260BB28 = 12;
  qword_260BB40 = 12;
  qword_260BB58 = 12;
  qword_260C380 = 12;
  qword_260C398 = 12;
  qword_260BB70 = 12;
  qword_260BB88 = 12;
  qword_260BBA0 = 12;
  qword_260BBB8 = 12;
  qword_260C350 = 12;
  qword_260C368 = 12;
  qword_260BBD0 = 12;
  qword_260BBE8 = 12;
  qword_260BC00 = 12;
  qword_260BC18 = 12;
  qword_260C320 = 12;
  qword_260C338 = 12;
  qword_260BC30 = 12;
  qword_260BC48 = 12;
  qword_260BC60 = 12;
  qword_260BC78 = 12;
  qword_260C2F0 = 12;
  qword_260C308 = 12;
  qword_260BC90 = 12;
  qword_260BCA8 = 12;
  dword_260BCB0 = 12;
  qword_260BCC0 = 12;
  qword_260C2C0 = 12;
  qword_260C2D8 = 12;
  qword_260BCD8 = 12;
  qword_260BCF0 = 12;
  qword_260BD08 = 12;
  qword_260BD20 = 12;
  qword_260C290 = 12;
  qword_260C2A8 = 12;
  qword_260BD38 = 12;
  qword_260BD50 = 12;
  qword_260BD68 = 12;
  qword_260BD80 = 12;
  qword_260C260 = 12;
  qword_260C278 = 12;
  qword_260BD98 = 12;
  qword_260BDB0 = 12;
  qword_260BDC8 = 12;
  qword_260BDE0 = 12;
  qword_260C230 = 12;
  qword_260C248 = 12;
  qword_260BDF8 = 12;
  qword_260BE10 = 12;
  qword_260BE28 = 12;
  qword_260BE40 = 12;
  qword_260C200 = 12;
  qword_260C218 = 12;
  qword_260BE58 = 12;
  qword_260BE70 = 12;
  qword_260BE88 = 12;
  qword_260BEA0 = 12;
  qword_260C1D0 = 12;
  qword_260C1E8 = 12;
  qword_260BEB8 = 12;
  qword_260BED0 = 12;
  qword_260BEE8 = 12;
  qword_260BF00 = 12;
  qword_260C1A0 = 12;
  qword_260C1B8 = 12;
  qword_260BF18 = 12;
  qword_260BF30 = 12;
  qword_260BF48 = 12;
  qword_260BF60 = 12;
  qword_260C170 = 12;
  qword_260C188 = 12;
  qword_260BF78 = 12;
  qword_260BF90 = 12;
  qword_260BFA8 = 12;
  qword_260BFC0 = 12;
  qword_260C140 = 12;
  qword_260C158 = 12;
  qword_260BFD8 = 12;
  qword_260BFF0 = 12;
  qword_260C008 = 12;
  qword_260C020 = 12;
  qword_260C110 = 12;
  qword_260C128 = 12;
  qword_260C038 = 12;
  qword_260C050 = 12;
  qword_260C068 = 12;
  qword_260C080 = 12;
  qword_260C098 = 12;
  qword_260C0F8 = 12;
  qword_260C0B0 = 12;
  qword_260C0C8 = 12;
  qword_260C0E0 = 12;
  qword_260D038 = (uint64_t)"POPULARITY_SCORE";
  unk_260D040 = 16;
  qword_260D028 = 15;
  dword_260D030 = 1;
  dword_260D048 = 0;
  qword_260D068 = (uint64_t)"BUSINESS_CARDBUSINESS_CARD_COLLECTIONBUSINESS_CARD_EVENTCARTOGRAPHIC_LINE_GROUPMODULEMODULE_LISTTRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D080 = (uint64_t)"BUSINESS_CARD_COLLECTIONBUSINESS_CARD_EVENTCARTOGRAPHIC_LINE_GROUPMODULEMODULE_LISTTRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D098 = (uint64_t)"BUSINESS_CARD_EVENTCARTOGRAPHIC_LINE_GROUPMODULEMODULE_LISTTRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D0B0 = (uint64_t)"CARTOGRAPHIC_LINE_GROUPMODULEMODULE_LISTTRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D0E0 = (uint64_t)"MODULE_LISTTRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D0F8 = (uint64_t)"TRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D110 = (uint64_t)"TRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D128 = (uint64_t)"TRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D140 = (uint64_t)"TRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D170 = (uint64_t)"TRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D188 = (uint64_t)"TRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D1A0 = (uint64_t)"TRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D1B8 = (uint64_t)"TRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D1D0 = (uint64_t)"TRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D1E8 = (uint64_t)"TRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D200 = (uint64_t)"TRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D218 = (uint64_t)"TRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  unk_260D220 = 12;
  qword_260D230 = (uint64_t)"TRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D248 = (uint64_t)"TRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D260 = (uint64_t)"TRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D278 = (uint64_t)"TRANSIT_TRIPVENDOR";
  qword_260D158 = (uint64_t)"TRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  unk_260D160 = 12;
  qword_260D178 = 12;
  qword_260D190 = 12;
  dword_260D228 = 12;
  qword_260D280 = 12;
  qword_260D290 = (uint64_t)"VENDOR";
  qword_260D0C8 = (uint64_t)"MODULEMODULE_LISTTRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRANSIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONTRANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHTRANSIT_TRIPVENDOR";
  qword_260D0D0 = 6;
  dword_260D168 = 6;
  qword_260D298 = 6;
  qword_260D050 = (uint64_t)"BRANDBUSINESS_CARDBUSINESS_CARD_COLLECTIONBUSINESS_CARD_EVENTCARTOGRAPHIC_LINE_GROUPMODULEMOD"
                           "ULE_LISTTRANSIT_ACCESS_POINTTRANSIT_BLOCK_TRANSFERTRANSIT_BRANDTRANSIT_CONNECTED_STATIONSTRAN"
                           "SIT_HALLTRANSIT_LINETRANSIT_LINKTRANSIT_MARKETTRANSIT_SCHEDULETRANSIT_SEGMENTTRANSIT_STATIONT"
                           "RANSIT_STATION_POLYGONTRANSIT_STOPTRANSIT_SYSTEMTRANSIT_TIMED_TRANSFERTRANSIT_TRANSFER_GRAPHT"
                           "RANSIT_TRIPVENDOR";
  *(void *)algn_260D058 = 5;
  dword_260D060 = 20;
  qword_260D070 = 13;
  dword_260D078 = 0;
  qword_260D088 = 24;
  dword_260D090 = 21;
  qword_260D0A0 = 19;
  dword_260D0A8 = 19;
  qword_260D0B8 = 23;
  dword_260D0C0 = 1;
  dword_260D0D8 = 23;
  qword_260D0E8 = 11;
  dword_260D0F0 = 24;
  uint64_t result = 24;
  qword_260D100 = 20;
  dword_260D108 = 2;
  qword_260D118 = 22;
  dword_260D120 = 3;
  qword_260D130 = 13;
  dword_260D138 = 4;
  qword_260D148 = 26;
  dword_260D150 = 5;
  dword_260D180 = 7;
  dword_260D198 = 8;
  qword_260D1A8 = 14;
  dword_260D1B0 = 9;
  qword_260D1C0 = 16;
  dword_260D1C8 = 10;
  qword_260D1D8 = 15;
  dword_260D1E0 = 11;
  qword_260D1F0 = 15;
  dword_260D1F8 = 17;
  qword_260D208 = 23;
  dword_260D210 = 18;
  qword_260D238 = 14;
  dword_260D240 = 13;
  qword_260D250 = 22;
  dword_260D258 = 14;
  qword_260D268 = 22;
  dword_260D270 = 15;
  dword_260D288 = 16;
  dword_260D2A0 = 22;
  qword_260D2C0 = (uint64_t)"ENRICHMENTRAPTRAFFIC_INCIDENTUNKNOWN";
  unk_260D2C8 = 10;
  qword_260D2D8 = (uint64_t)"RAPTRAFFIC_INCIDENTUNKNOWN";
  unk_260D2E0 = 3;
  qword_260D2F0 = (uint64_t)"TRAFFIC_INCIDENTUNKNOWN";
  unk_260D2F8 = 16;
  qword_260D308 = (uint64_t)"UNKNOWN";
  unk_260D310 = 7;
  qword_260D2A8 = (uint64_t)"BLUEGRASSENRICHMENTRAPTRAFFIC_INCIDENTUNKNOWN";
  unk_260D2B0 = 9;
  dword_260D2B8 = 4;
  dword_260D2D0 = 3;
  dword_260D2E8 = 1;
  dword_260D300 = 2;
  dword_260D318 = 0;
  qword_260D338 = (uint64_t)"ROLE_SYSTEMROLE_UNSPECIFIED";
  unk_260D340 = 11;
  qword_260D350 = (uint64_t)"ROLE_UNSPECIFIED";
  unk_260D358 = 16;
  qword_260D320 = (uint64_t)"ROLE_REPRESENTATIVEROLE_SYSTEMROLE_UNSPECIFIED";
  *(void *)algn_260D328 = 19;
  dword_260D330 = 2;
  dword_260D348 = 1;
  dword_260D360 = 0;
  qword_260D380 = (uint64_t)"DETECTION_TYPE_LICENSE_PLATEDETECTION_TYPE_UNKNOWN";
  unk_260D388 = 28;
  qword_260D398 = (uint64_t)"DETECTION_TYPE_UNKNOWN";
  unk_260D3A0 = 22;
  qword_260D368 = (uint64_t)"DETECTION_TYPE_FACEDETECTION_TYPE_LICENSE_PLATEDETECTION_TYPE_UNKNOWN";
  unk_260D370 = 19;
  dword_260D378 = 1;
  dword_260D390 = 2;
  dword_260D3A8 = 0;
  qword_260D3B8 = 43;
  qword_260D3C8 = (uint64_t)"PAYLOAD_TYPE_DATA_SHARE_OPT_IN_USERS_RESPONSE_AVAILABLEPAYLOAD_TYPE_UNSPECIFIEDPAYLOAD_TYPE_USER_ATTRIBUTION_RESPONSE_AVAILABLEPAYLOAD_TYPE_USER_ENRICHMENT_SUBMISSION";
  qword_260D3D0 = 55;
  qword_260D3F8 = (uint64_t)"PAYLOAD_TYPE_USER_ATTRIBUTION_RESPONSE_AVAILABLEPAYLOAD_TYPE_USER_ENRICHMENT_SUBMISSION";
  unk_260D400 = 48;
  qword_260D410 = (uint64_t)"PAYLOAD_TYPE_USER_ENRICHMENT_SUBMISSION";
  unk_260D418 = 39;
  qword_260D3B0 = (uint64_t)"PAYLOAD_TYPE_BUSINESS_ENRICHMENT_SUBMISSIONPAYLOAD_TYPE_DATA_SHARE_OPT_IN_USERS_RESPONSE_AVAI"
                           "LABLEPAYLOAD_TYPE_UNSPECIFIEDPAYLOAD_TYPE_USER_ATTRIBUTION_RESPONSE_AVAILABLEPAYLOAD_TYPE_USE"
                           "R_ENRICHMENT_SUBMISSION";
  qword_260D3E0 = (uint64_t)"PAYLOAD_TYPE_UNSPECIFIEDPAYLOAD_TYPE_USER_ATTRIBUTION_RESPONSE_AVAILABLEPAYLOAD_TYPE_USER_ENRICHMENT_SUBMISSION";
  unk_260D3E8 = 24;
  dword_260D3C0 = 2;
  dword_260D3D8 = 4;
  dword_260D3F0 = 0;
  dword_260D408 = 3;
  dword_260D420 = 1;
  qword_260D440 = (uint64_t)"IMAGE_VARIANT_ORIGINALIMAGE_VARIANT_UNSPECIFIED";
  unk_260D448 = 22;
  qword_260D428 = (uint64_t)"IMAGE_VARIANT_CENSOREDIMAGE_VARIANT_ORIGINALIMAGE_VARIANT_UNSPECIFIED";
  unk_260D430 = 22;
  dword_260D438 = 2;
  dword_260D450 = 1;
  qword_260D458 = (uint64_t)"IMAGE_VARIANT_UNSPECIFIED";
  unk_260D460 = 25;
  dword_260D468 = 0;
  qword_260D470 = (uint64_t)"AMENDMENT_REASON_PHOTO_PURGEAMENDMENT_REASON_UNSPECIFIED";
  *(void *)algn_260D478 = 28;
  dword_260D480 = 1;
  qword_260D488 = (uint64_t)"AMENDMENT_REASON_UNSPECIFIED";
  unk_260D490 = 28;
  dword_260D498 = 0;
  qword_260D4B8 = (uint64_t)"UPDATE_TYPE_PLACEUPDATE_TYPE_SUBMISSIONUPDATE_TYPE_UNSPECIFIEDUPDATE_TYPE_USER";
  unk_260D4C0 = 17;
  qword_260D4D0 = (uint64_t)"UPDATE_TYPE_SUBMISSIONUPDATE_TYPE_UNSPECIFIEDUPDATE_TYPE_USER";
  unk_260D4D8 = 22;
  qword_260D4E8 = (uint64_t)"UPDATE_TYPE_UNSPECIFIEDUPDATE_TYPE_USER";
  unk_260D4F0 = 23;
  qword_260D4A0 = (uint64_t)"UPDATE_TYPE_IMAGESUPDATE_TYPE_PLACEUPDATE_TYPE_SUBMISSIONUPDATE_TYPE_UNSPECIFIEDUPDATE_TYPE_USER";
  *(void *)algn_260D4A8 = 18;
  dword_260D4B0 = 2;
  dword_260D4C8 = 4;
  dword_260D4E0 = 1;
  dword_260D4F8 = 0;
  qword_260D500 = (uint64_t)"UPDATE_TYPE_USER";
  unk_260D508 = 16;
  dword_260D510 = 3;
  qword_260D518 = (uint64_t)"INGEST_REJECTINGEST_SUCCESSRETRYUNKNOWN";
  unk_260D520 = 13;
  dword_260D528 = 2;
  qword_260D530 = (uint64_t)"INGEST_SUCCESSRETRYUNKNOWN";
  unk_260D538 = 14;
  dword_260D540 = 1;
  qword_260D548 = (uint64_t)"RETRYUNKNOWN";
  unk_260D550 = 5;
  dword_260D558 = 3;
  qword_260D560 = (uint64_t)"UNKNOWN";
  unk_260D568 = 7;
  dword_260D570 = 0;
  qword_260D590 = (uint64_t)"UNKNOWN";
  unk_260D598 = 7;
  qword_260D578 = (uint64_t)"CARRY_OVERUNKNOWN";
  unk_260D580 = 10;
  dword_260D588 = 1;
  dword_260D5A0 = 0;
  qword_260D5A8 = (uint64_t)"SUBMISSION_ACTION_UNKNOWNSUBMISSION_REJECTED";
  unk_260D5B0 = 25;
  qword_260D5C0 = (uint64_t)"SUBMISSION_REJECTED";
  unk_260D5C8 = 19;
  dword_260D5B8 = 0;
  dword_260D5D0 = 1;
  qword_260D5D8 = (uint64_t)"REQUESTED_USER_ACTION_BLOCK_USERREQUESTED_USER_ACTION_UNKNOWN";
  unk_260D5E0 = 32;
  dword_260D5E8 = 1;
  qword_260D5F0 = (uint64_t)"REQUESTED_USER_ACTION_UNKNOWN";
  qword_260D5F8 = 29;
  dword_260D600 = 0;
  qword_260D620 = (uint64_t)"NEW_MESSAGE_ES_INDEXEDNEW_MESSAGE_PROCESSING_FAILURENEW_MESSAGE_QUEUEDUNKNOWN";
  unk_260D628 = 22;
  qword_260D638 = (uint64_t)"NEW_MESSAGE_PROCESSING_FAILURENEW_MESSAGE_QUEUEDUNKNOWN";
  qword_260D640 = 30;
  qword_260D650 = (uint64_t)"NEW_MESSAGE_QUEUEDUNKNOWN";
  unk_260D658 = 18;
  qword_260D608 = (uint64_t)"CREATEDNEW_MESSAGE_ES_INDEXEDNEW_MESSAGE_PROCESSING_FAILURENEW_MESSAGE_QUEUEDUNKNOWN";
  unk_260D610 = 7;
  dword_260D618 = 1;
  dword_260D630 = 4;
  dword_260D648 = 3;
  dword_260D660 = 2;
  qword_260D668 = (uint64_t)"UNKNOWN";
  unk_260D670 = 7;
  dword_260D678 = 0;
  qword_260D698 = (uint64_t)"NEW_SUBMISSION_DELIVEREDNEW_SUBMISSION_GDPR_PURGEDNEW_SUBMISSION_PROCESSING_FAILURENEW_SUBMISSION_QUEUEDUNKNOWN";
  unk_260D6A0 = 24;
  dword_260D6A8 = 4;
  qword_260D6B0 = (uint64_t)"NEW_SUBMISSION_GDPR_PURGEDNEW_SUBMISSION_PROCESSING_FAILURENEW_SUBMISSION_QUEUEDUNKNOWN";
  unk_260D6B8 = 26;
  dword_260D6C0 = 5;
  qword_260D680 = (uint64_t)"CREATEDNEW_SUBMISSION_DELIVEREDNEW_SUBMISSION_GDPR_PURGEDNEW_SUBMISSION_PROCESSING_FAILURENEW"
                           "_SUBMISSION_QUEUEDUNKNOWN";
  *(void *)algn_260D688 = 7;
  dword_260D690 = 1;
  qword_260D6C8 = (uint64_t)"NEW_SUBMISSION_PROCESSING_FAILURENEW_SUBMISSION_QUEUEDUNKNOWN";
  unk_260D6D0 = 33;
  dword_260D6D8 = 3;
  qword_260D6E0 = (uint64_t)"NEW_SUBMISSION_QUEUEDUNKNOWN";
  unk_260D6E8 = 21;
  dword_260D6F0 = 2;
  qword_260D6F8 = (uint64_t)"UNKNOWN";
  unk_260D700 = 7;
  dword_260D708 = 0;
  qword_260D710 = (uint64_t)"DELIVERY_TYPE_UNKNOWNINCIDENT_REPORTPOI_ENRICHMENTRAP";
  *(void *)algn_260D718 = 21;
  qword_260D728 = (uint64_t)"INCIDENT_REPORTPOI_ENRICHMENTRAP";
  unk_260D730 = 15;
  qword_260D740 = (uint64_t)"POI_ENRICHMENTRAP";
  unk_260D748 = 14;
  dword_260D720 = 0;
  dword_260D738 = 2;
  dword_260D750 = 3;
  qword_260D758 = (uint64_t)"RAP";
  unk_260D760 = 3;
  dword_260D768 = 1;
  qword_260D770 = (uint64_t)"ASSERTIONATTESTATIONROLLOVERUNKNOWN";
  *(void *)algn_260D778 = 9;
  qword_260D788 = (uint64_t)"ATTESTATIONROLLOVERUNKNOWN";
  unk_260D790 = 11;
  qword_260D7A0 = (uint64_t)"ROLLOVERUNKNOWN";
  unk_260D7A8 = 8;
  dword_260D780 = 3;
  dword_260D798 = 2;
  dword_260D7B0 = 1;
  qword_260D7B8 = (uint64_t)"UNKNOWN";
  unk_260D7C0 = 7;
  dword_260D7C8 = 0;
  dword_260D7E0 = 3;
  qword_260D7E8 = (uint64_t)"CONVERSATION_MESSAGESUBMISSIONUNKNOWN";
  unk_260D7F0 = 20;
  dword_260D7F8 = 2;
  qword_260D800 = (uint64_t)"SUBMISSIONUNKNOWN";
  qword_260D7D0 = (uint64_t)"APP_ATTESTCONVERSATION_MESSAGESUBMISSIONUNKNOWN";
  *(void *)algn_260D7D8 = 10;
  qword_260D808 = 10;
  dword_260D810 = 1;
  qword_260D818 = (uint64_t)"UNKNOWN";
  unk_260D820 = 7;
  dword_260D828 = 0;
  return result;
}

void *sub_1534410(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1534484(void *a1)
{
  sub_1534410(a1);

  operator delete();
}

uint64_t sub_15344BC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_15344E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_15346C8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_153486C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_153492C()
{
  return 1;
}

void *sub_1534934@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.NeighborSegmentInformation.Segment.ProbeInformation");
}

uint64_t sub_1534944(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253CE28)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1534410(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15349FC(uint64_t a1)
{
  sub_1534944(a1);

  operator delete();
}

uint64_t sub_1534A34(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_15344BC(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(void *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1534A94(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v23 + 2;
      }
    }
    unint64_t v23 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_31:
      unint64_t v23 = v18;
      *(void *)(a1 + 32) = v19;
      goto LABEL_32;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v19);
    unint64_t v23 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void **)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_153567C((uint64_t)v17);
      *(void *)(a1 + 24) = v16;
      unint64_t v8 = v23;
    }
    unint64_t v15 = sub_1534C78(a3, (uint64_t)v16, (unsigned __int8 *)v8);
LABEL_26:
    unint64_t v23 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v23;
    }
    unint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_1534C78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15344E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1534D08(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    int v4 = sub_15346C8(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1534E94(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_153486C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1534F54(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_153567C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253CE08;
      }
      uint64_t result = sub_117EF04(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1535024()
{
  return 1;
}

void *sub_153502C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.NeighborSegmentInformation.Segment");
}

void *sub_153503C(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1535930(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15350BC(void *a1)
{
  sub_153503C(a1);

  operator delete();
}

uint64_t sub_15350F4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1534A34(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1535170(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15356F4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_1535310(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1535310(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1534A94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_15353A0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_1534D08(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_15354E4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1534E94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1535594(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_15359B0((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1535664()
{
  return 1;
}

void *sub_153566C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "traffic.server.NeighborSegmentInformation");
}

void *sub_153567C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BEFA8;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_15356F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  void *result = off_24BF028;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1535770(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BF0A8;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_1535810()
{
}

void *sub_153585C(uint64_t a1, uint64_t a2)
{
  return sub_153567C(a2);
}

uint64_t sub_1535864(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_153586C()
{
}

void *sub_15358BC(uint64_t a1, uint64_t a2)
{
  return sub_15356F4(a2);
}

uint64_t sub_15358C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_15358CC()
{
}

uint64_t sub_1535920(uint64_t a1, uint64_t a2)
{
  return sub_1535770(a2);
}

uint64_t sub_1535928(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1535930(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1534944(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_15359B0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15356F4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = sub_1535A2C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1535A2C(uint64_t a1, std::string *a2)
{
  return sub_1534F54(a2, a1);
}

BOOL sub_1535A3C(int a1)
{
  return (a1 - 1) < 3;
}

BOOL sub_1535A4C(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_1535A58(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_1535A64(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1535B1C(uint64_t a1)
{
  sub_1535A64(a1);

  operator delete();
}

uint64_t sub_1535B54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1535BD0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_1535D78(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1535E64(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1535F40()
{
  return 1;
}

void *sub_1535F48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceLookupParametersExt.ExternalItemSpec");
}

void *sub_1535F58(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_13016A8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1535FD8(void *a1)
{
  sub_1535F58(a1);

  operator delete();
}

uint64_t sub_1536010(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16E98C0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_15360A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = v8 + 2;
LABEL_36:
        uint64_t v32 = v22;
        *(void *)(a1 + 56) = v23;
        goto LABEL_41;
      }
      unint64_t v28 = (char *)sub_188C138((uint64_t)v8, v23);
      uint64_t v32 = v28;
      *(void *)(a1 + 56) = v29;
      if (!v28) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      uint64_t v25 = v8 + 1;
      uint64_t v26 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_40;
      }
      int v27 = *v25;
      uint64_t v26 = v26 + (v27 << 7) - 128;
      if ((v27 & 0x80000000) == 0)
      {
        uint64_t v25 = v8 + 2;
LABEL_40:
        uint64_t v32 = v25;
        *(void *)(a1 + 48) = v26;
        goto LABEL_41;
      }
      unint64_t v30 = (char *)sub_188C138((uint64_t)v8, v26);
      uint64_t v32 = v30;
      *(void *)(a1 + 48) = v31;
      if (!v30) {
        goto LABEL_50;
      }
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      uint64_t v32 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_1788574(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = (unsigned __int8 *)v32;
      }
      uint64_t v16 = sub_12DE6D0(a3, v20, v17);
      uint64_t v32 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1536328(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_16E9DDC(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1536568(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16EA048(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_153666C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1301BB0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_153676C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16EA300(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_15367C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MessageLinkExt.HoursOfOperation");
}

void *sub_15367D4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154AD28(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1536854(void *a1)
{
  sub_15367D4(a1);

  operator delete();
}

uint64_t sub_153688C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16D9D14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 1;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1536914(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        BOOL v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v26 = v14 + 1;
          unsigned int v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_1787818(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          BOOL v14 = (char *)sub_1536B70(a3, v18, v15);
          uint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      unint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        unint64_t v20 = v7 + 2;
LABEL_34:
        uint64_t v26 = v20;
      }
      if (sub_145C85C(v21))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      else
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_1536B70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D9DB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1536C00(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 44);
      v4[1] = v12;
      if (v12 > 0x7F) {
        int v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        int v13 = v4 + 2;
      }
      uint64_t v4 = sub_16DA058(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1536DC4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16DA234(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1536EAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_154B228((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1536F98(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16DA478(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1536FF0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitInfoExt.TransitLabelVersion");
}

void *sub_1537000(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1537080(void *a1)
{
  sub_1537000(a1);

  operator delete();
}

uint64_t sub_15370B8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1537134(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = (char *)sub_125CF74(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_15372D4(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1537418(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_15374C8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_12C1E38((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1537598()
{
  return 1;
}

void *sub_15375A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitInfoSnippetExt.LocalizedStringList");
}

void *sub_15375B0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 11);
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_154ADA8(a1 + 6);
  sub_154ADA8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1537650(void *a1)
{
  sub_15375B0(a1);

  operator delete();
}

uint64_t sub_1537688(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1537688(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1537688(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  uint64_t v8 = *(unsigned int *)(v1 + 96);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 104) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_15B2C80(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 96) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(_DWORD *)(v1 + 120) = 0;
    *(void *)(v1 + 112) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_1537770(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v50 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v49 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v50 + 1;
      unsigned int v8 = *v50;
      if (*v50 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v50, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v50 + 2;
        }
      }
      unint64_t v50 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_71;
          }
          uint64_t v11 = v7 + 1;
          uint64_t v12 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          uint64_t v12 = v12 + (v13 << 7) - 128;
          if ((v13 & 0x80000000) == 0)
          {
            uint64_t v11 = v7 + 2;
LABEL_13:
            unint64_t v50 = v11;
            *(void *)(a1 + 112) = v12;
            int v5 = 1;
            goto LABEL_79;
          }
          int v42 = (char *)sub_188C138((uint64_t)v7, v12);
          unint64_t v50 = v42;
          *(void *)(a1 + 112) = v43;
          int v5 = 1;
          if (!v42) {
            goto LABEL_88;
          }
          goto LABEL_79;
        case 2u:
          if (v8 != 16) {
            goto LABEL_71;
          }
          uint64_t v14 = v7 + 1;
          unint64_t v15 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v16 = *v14;
          int v17 = v15 + (v16 << 7);
          unint64_t v15 = (v17 - 128);
          if (v16 < 0)
          {
            unint64_t v50 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
            if (!v50) {
              goto LABEL_88;
            }
            unint64_t v15 = v44;
          }
          else
          {
            uint64_t v14 = v7 + 2;
LABEL_18:
            unint64_t v50 = v14;
          }
          if (v15 > 6)
          {
            if (*v49) {
              uint64_t v48 = (std::string *)((*v49 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v48 = (std::string *)sub_188DBD8(v49);
            }
            sub_188C020(2, v15, v48);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 2u;
            *(_DWORD *)(a1 + 120) = v15;
          }
          goto LABEL_79;
        case 3u:
          if (v8 != 26) {
            goto LABEL_71;
          }
          uint64_t v18 = v7 - 1;
          while (1)
          {
            uint64_t v19 = (unsigned __int8 *)(v18 + 1);
            unint64_t v50 = v18 + 1;
            unint64_t v20 = *(_DWORD **)(a1 + 40);
            if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
            {
              *(_DWORD *)(a1 + 32) = v21 + 1;
              uint64_t v22 = *(void *)&v20[2 * v21 + 2];
            }
            else
            {
              uint64_t v23 = sub_1547D44(*(void *)(a1 + 24));
              uint64_t v22 = sub_188CDC8(a1 + 24, v23);
              uint64_t v19 = (unsigned __int8 *)v50;
            }
            uint64_t v18 = (char *)sub_1537C88((uint64_t)a3, v22, v19);
            unint64_t v50 = v18;
            if (!v18) {
              goto LABEL_88;
            }
            if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
              goto LABEL_79;
            }
          }
        case 4u:
          if (v8 != 34) {
            goto LABEL_71;
          }
          unint64_t v24 = v7 - 1;
          while (1)
          {
            uint64_t v25 = (unsigned __int8 *)(v24 + 1);
            unint64_t v50 = v24 + 1;
            uint64_t v26 = *(_DWORD **)(a1 + 64);
            if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
            {
              *(_DWORD *)(a1 + 56) = v27 + 1;
              uint64_t v28 = *(void *)&v26[2 * v27 + 2];
            }
            else
            {
              uint64_t v29 = sub_1547D44(*(void *)(a1 + 48));
              uint64_t v28 = sub_188CDC8(a1 + 48, v29);
              uint64_t v25 = (unsigned __int8 *)v50;
            }
            unint64_t v24 = (char *)sub_1537C88((uint64_t)a3, v28, v25);
            unint64_t v50 = v24;
            if (!v24) {
              goto LABEL_88;
            }
            if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
              goto LABEL_79;
            }
          }
        case 5u:
          if (v8 == 40)
          {
            unint64_t v30 = v7 - 1;
            while (1)
            {
              unint64_t v50 = v30 + 1;
              uint64_t v31 = v30[1];
              if (v30[1] < 0)
              {
                int v32 = v31 + (v30[2] << 7);
                uint64_t v31 = (v32 - 128);
                if (v30[2] < 0)
                {
                  unint64_t v30 = (char *)sub_188C138((uint64_t)(v30 + 1), (v32 - 128));
                  uint64_t v31 = v33;
                }
                else
                {
                  v30 += 3;
                }
              }
              else
              {
                v30 += 2;
              }
              unint64_t v50 = v30;
              uint64_t v34 = *(unsigned int *)(a1 + 72);
              if (v34 == *(_DWORD *)(a1 + 76))
              {
                int v35 = v34 + 1;
                sub_188CA54((unsigned int *)(a1 + 72), v34 + 1);
                *(void *)(*(void *)(a1 + 80) + 8 * v34) = v31;
                unint64_t v30 = v50;
              }
              else
              {
                *(void *)(*(void *)(a1 + 80) + 8 * v34) = v31;
                int v35 = v34 + 1;
              }
              *(_DWORD *)(a1 + 72) = v35;
              if (!v30) {
                goto LABEL_88;
              }
              if (*(void *)a3 <= (unint64_t)v30 || *v30 != 40) {
                goto LABEL_79;
              }
            }
          }
          if (v8 == 42)
          {
            int v45 = sub_188C2EC((unsigned int *)(a1 + 72), (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_71:
            if (v8) {
              BOOL v46 = (v8 & 7) == 4;
            }
            else {
              BOOL v46 = 1;
            }
            if (v46)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_88:
              unint64_t v50 = 0;
              goto LABEL_2;
            }
            if (*v49)
            {
              unsigned int v47 = (std::string *)((*v49 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v47 = (std::string *)sub_188DBD8(v49);
              uint64_t v7 = v50;
            }
            int v45 = sub_1885AC0(v8, v47, v7, a3);
          }
          unint64_t v50 = (char *)v45;
          if (!v45) {
            goto LABEL_88;
          }
LABEL_79:
          if (sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 6u:
          if (v8 != 50) {
            goto LABEL_71;
          }
          char v36 = v7 - 1;
          while (1)
          {
            uint64_t v37 = (unsigned __int8 *)(v36 + 1);
            unint64_t v50 = v36 + 1;
            unsigned int v38 = *(_DWORD **)(a1 + 104);
            if (v38 && (uint64_t v39 = *(int *)(a1 + 96), (int)v39 < *v38))
            {
              *(_DWORD *)(a1 + 96) = v39 + 1;
              uint64_t v40 = *(void *)&v38[2 * v39 + 2];
            }
            else
            {
              unsigned int v41 = sub_15C1B30(*(void *)(a1 + 88));
              uint64_t v40 = sub_188CDC8(a1 + 88, (uint64_t)v41);
              uint64_t v37 = (unsigned __int8 *)v50;
            }
            char v36 = (char *)sub_125CF74(a3, v40, v37);
            unint64_t v50 = v36;
            if (!v36) {
              goto LABEL_88;
            }
            if (*(void *)a3 <= (unint64_t)v36 || *v36 != 50) {
              goto LABEL_79;
            }
          }
        default:
          goto LABEL_71;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v50;
}

uint64_t sub_1537C88(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0(a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1537770(a2, result, a1);
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v6 = *(_DWORD *)(a1 + 28) + v7;
  *(_DWORD *)(a1 + 28) = v6;
  *(void *)a1 = *(void *)(a1 + 8) + (v6 & (v6 >> 31));
  return result;
}

uint64_t sub_1537D18(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 112);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 120);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_1537D18(v15, v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_1537D18(v20, v22, a3);
    }
  }
  uint64_t v23 = *(unsigned int *)(a1 + 72);
  if ((int)v23 >= 1)
  {
    for (uint64_t k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v25 = *(void *)(*(void *)(a1 + 80) + 8 * k);
      unsigned char *v4 = 40;
      v4[1] = v25;
      if (v25 > 0x7F)
      {
        v4[1] = v25 | 0x80;
        unint64_t v26 = v25 >> 7;
        v4[2] = v25 >> 7;
        v4 += 3;
        if (v25 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v27 = v26 >> 14;
            v26 >>= 7;
            *v4++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v28 = *(_DWORD *)(a1 + 96);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 104) + 8 * m + 8);
      unsigned char *v4 = 50;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      v4[1] = v31;
      if (v31 > 0x7F) {
        int v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        int v32 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v30, v32, a3);
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    char v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    char v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if (*a3 - (void)v4 >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_15380FC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15380FC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15380FC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = sub_188D5A8((unsigned int *)(a1 + 72));
  uint64_t v16 = *(int *)(a1 + 96);
  uint64_t v17 = v15 + v16 + v9 + *(unsigned int *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 104);
  if (v18) {
    uint64_t v19 = (uint64_t *)(v18 + 8);
  }
  else {
    uint64_t v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_15B2F90(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  int v23 = *(_DWORD *)(a1 + 16);
  if ((v23 & 3) != 0)
  {
    if (v23) {
      v17 += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v23 & 2) != 0)
    {
      int v24 = *(_DWORD *)(a1 + 120);
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v24 >= 0) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 11;
      }
      v17 += v26;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    v17 += v30;
  }
  *(_DWORD *)(a1 + 20) = v17;
  return v17;
}

std::string *sub_15382C4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_154B2B4((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (uint64_t *)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_154B2B4((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t data_low = SLODWORD(v3[3].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[3], data_low + v14);
    std::string::size_type size = v3[3].__r_.__value_.__l.__size_;
    LODWORD(v3[3].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 72);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 80), 8 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v19 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 96));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 88), v19, v18, v17, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    int v20 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v17;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v20;
    uint64_t v21 = (int *)v3[4].__r_.__value_.__l.__size_;
    if (*v21 < v20) {
      int *v21 = v20;
    }
  }
  int v22 = *(_DWORD *)(a2 + 16);
  if ((v22 & 3) != 0)
  {
    if (v22) {
      v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
    }
    if ((v22 & 2) != 0) {
      LODWORD(v3[5].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 120);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v22;
  }
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_15384D0()
{
  return 1;
}

void *sub_15384D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitHierarchy");
}

uint64_t sub_15384E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15385B4(uint64_t a1)
{
  sub_15384E8(a1);

  operator delete();
}

uint64_t sub_15385EC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_15386A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      int v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)int v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)int v22 = 0;
  return *(void *)v22;
}

char *sub_1538894(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_15389AC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1538ACC()
{
  return 1;
}

void *sub_1538AD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GlovMetadata");
}

uint64_t sub_1538AE4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_253D000)
  {
    if (*(void *)(a1 + 48))
    {
      sub_15A58BC();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_15A5FF8();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1538C00(uint64_t a1)
{
  sub_1538AE4(a1);

  operator delete();
}

uint64_t sub_1538C38(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_18:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_22;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_18;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_18;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_22:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_26;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_26:
  uint64_t result = sub_15A58F8(*(void *)(result + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_15A6034(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0x60) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1538D58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)unint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 24);
        goto LABEL_21;
      case 2u:
        if (v9 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 32);
        goto LABEL_21;
      case 3u:
        if (v9 != 26) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 40);
LABEL_21:
        int v17 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v35, (uint64_t)a3);
        goto LABEL_51;
      case 4u:
        if (v9 != 34) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void **)(a1 + 48);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15A652C((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v18 = sub_15390E4(a3, (uint64_t)v19, v8);
        goto LABEL_51;
      case 5u:
        if (v9 != 42) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v21 = *(void **)(a1 + 56);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_15A65B4((uint64_t)v22);
          *(void *)(a1 + 56) = v21;
          uint64_t v8 = *(unsigned __int8 **)v35;
        }
        uint64_t v18 = sub_1539174(a3, (uint64_t)v21, v8);
        goto LABEL_51;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x20u;
        uint64_t v23 = (char *)(v8 + 1);
        uint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v24);
          *(void *)unint64_t v35 = v31;
          *(void *)(a1 + 64) = v32;
          if (!v31) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v23 = (char *)(v8 + 2);
LABEL_38:
          *(void *)unint64_t v35 = v23;
          *(void *)(a1 + 64) = v24;
        }
        goto LABEL_52;
      case 7u:
        if (v9 != 56) {
          goto LABEL_44;
        }
        v5 |= 0x40u;
        uint64_t v26 = (char *)(v8 + 1);
        uint64_t v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v8, v27);
          *(void *)unint64_t v35 = v33;
          *(void *)(a1 + 72) = v34;
          if (!v33) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_43:
          *(void *)unint64_t v35 = v26;
          *(void *)(a1 + 72) = v27;
        }
        goto LABEL_52;
      default:
LABEL_44:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v35;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v30, (char *)v8, a3);
LABEL_51:
          *(void *)unint64_t v35 = v18;
          if (!v18) {
            goto LABEL_61;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          *(void *)unint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

uint64_t sub_15390E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15A59B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1539174(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15A60EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1539204(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_15A5C38(v7, v9, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  unsigned char *v4 = 42;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_15A62DC(v10, v12, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_23:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 64);
    unsigned char *v4 = 48;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_29:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 72);
    unsigned char *v4 = 56;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_15394F4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v12 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v15 = sub_15A5DCC(*(void *)(a1 + 48));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v16 = sub_15A63F4(*(void *)(a1 + 56));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_25:
  v3 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x40) != 0) {
LABEL_17:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v17 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v3 += v18;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_15396F4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_21:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_32;
    }
LABEL_24:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      std::string::pointer data = (std::string *)sub_15A652C((uint64_t)v18);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_253F138;
    }
    uint64_t result = sub_12C8694(data, (uint64_t)v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_40;
    }
LABEL_32:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    uint64_t v20 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v20)
    {
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        int v22 = (void *)*v22;
      }
      uint64_t v20 = (std::string *)sub_15A65B4((uint64_t)v22);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v20;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v23 = &off_253F170;
    }
    uint64_t result = sub_11D2930(v20, (uint64_t)v23);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_40:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_15398D4()
{
  return 1;
}

void *sub_15398DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StreamingMetadata");
}

uint64_t sub_15398EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_15399B8(uint64_t a1)
{
  sub_15398EC(a1);

  operator delete();
}

uint64_t sub_15399F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1539AA8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        std::string::size_type v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          std::string::size_type v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        std::string::size_type v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          std::string::size_type v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      std::string::size_type v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        std::string::size_type v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      std::string::size_type v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      std::string::size_type v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)int v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)int v22 = 0;
  return *(void *)v22;
}

char *sub_1539C98(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1539DB0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1539ED0()
{
  return 1;
}

void *sub_1539ED8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceExt.Source");
}

uint64_t sub_1539EE8(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14903FC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1539F94(uint64_t a1)
{
  sub_1539EE8(a1);

  operator delete();
}

uint64_t sub_1539FCC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1420348(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_153A07C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    unint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)uint64_t v24 = v15 + 1;
      std::string::size_type v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_144AEE4(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      uint64_t v15 = (char *)sub_141F6F8(a3, v19, v16);
      *(void *)uint64_t v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_153A27C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_1420864(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_153A3E4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1420ACC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_153A4DC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1491FCC(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_153A5E4()
{
  return 1;
}

void *sub_153A5EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceExt.VendorScore");
}

uint64_t sub_153A5FC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_253D0B8 && *(void *)(a1 + 48))
  {
    sub_1421660();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153A6F8(uint64_t a1)
{
  sub_153A5FC(a1);

  operator delete();
}

uint64_t sub_153A730(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_141F66C(*(void *)(result + 48));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_153A834(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v22 + 2);
      }
    }
    *(void *)int v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 24);
        goto LABEL_27;
      case 2u:
        if (v8 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v14 = *(void *)(a1 + 48);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_144B03C((uint64_t)v15);
          *(void *)(a1 + 48) = v14;
          unint64_t v7 = *(unsigned __int8 **)v22;
        }
        uint64_t v16 = sub_123AA3C(a3, v14, v7);
        goto LABEL_35;
      case 3u:
        if (v8 != 26) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 32);
        goto LABEL_27;
      case 4u:
        if (v8 != 34) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 40);
LABEL_27:
        uint64_t v19 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v19, *(char **)v22, (uint64_t)a3);
        goto LABEL_35;
      default:
LABEL_28:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v22;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v8, v21, (char *)v7, a3);
LABEL_35:
          *(void *)int v22 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            return *(void *)v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v22;
    }
  }
}

unsigned char *sub_153AA9C(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 48);
  unsigned char *v4 = 18;
  unsigned int v10 = *(_DWORD *)(v9 + 20);
  v4[1] = v10;
  if (v10 > 0x7F) {
    uint64_t v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    uint64_t v11 = v4 + 2;
  }
  char v4 = sub_1421A00(v9, (unint64_t)v11, a3);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_5:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_153AC28(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_14:
    uint64_t v10 = sub_1421C28(*(void *)(a1 + 48));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v16 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_153AD9C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_24;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_16;
  }
LABEL_13:
  unint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    uint64_t v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) != 0)
  {
LABEL_16:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      std::string::pointer data = (std::string *)sub_144B03C((uint64_t)v17);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v18 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      uint64_t v18 = &off_2538030;
    }
    uint64_t result = sub_141F818(data, (uint64_t)v18);
  }
LABEL_24:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_153AF00()
{
  return 1;
}

void *sub_153AF08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceExt.UIPVendorInfo");
}

void *sub_153AF18(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154AE28(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153AF98(void *a1)
{
  sub_153AF18(a1);

  operator delete();
}

uint64_t sub_153AFD0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_153B79C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_153B054(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_34:
      uint64_t v26 = v21;
      *(void *)(a1 + 48) = v22;
      int v5 = 1;
      goto LABEL_35;
    }
    uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v22);
    uint64_t v26 = v24;
    *(void *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_42;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    uint64_t v15 = v8 - 1;
    while (1)
    {
      std::string::size_type v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v26 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        BOOL v20 = sub_1548168(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        std::string::size_type v16 = (unsigned __int8 *)v26;
      }
      uint64_t v15 = (char *)sub_153B27C(a3, v19, v16);
      uint64_t v26 = v15;
      if (!v15) {
        goto LABEL_42;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_35;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_42:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

uint64_t sub_153B27C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_153B818(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_153B30C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_153B9C0(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_153B4D0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_153BAAC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_153B5A8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_154B340(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v9 = *(void *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_153B694()
{
  return 1;
}

void *sub_153B69C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceExt.EnrichmentWebModuleInfo");
}

uint64_t sub_153B6AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153B764(uint64_t a1)
{
  sub_153B6AC(a1);

  operator delete();
}

uint64_t sub_153B79C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_153B818(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)BOOL v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      BOOL v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)BOOL v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)BOOL v20 = 0;
  return *(void *)v20;
}

char *sub_153B9C0(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_153BAAC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_153BB88()
{
  return 1;
}

void *sub_153BB90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceExt.EnrichmentVolatileInfo");
}

void *sub_153BBA0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122BA8C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153BC20(void *a1)
{
  sub_153BBA0(a1);

  operator delete();
}

uint64_t sub_153BC58(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_149FADC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_153BCD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          BOOL v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14A23B8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            BOOL v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_11EAAEC(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_153BE74(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_149FD00(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_153BFB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_149FDEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

uint64_t sub_153C068()
{
  return 1;
}

void *sub_153C070@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceExt.MerchantLookupDebugInfo");
}

unsigned char *sub_153C080(uint64_t a1)
{
  uint64_t result = *(unsigned char **)(a1 + 32);
  if (result) {
    uint64_t result = sub_16F42A8((uint64_t)result);
  }
  *(_DWORD *)(a1 + 16) &= ~2u;
  return result;
}

uint64_t sub_153C0B8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253D158 && *(void *)(a1 + 32))
  {
    sub_16F426C();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153C184(uint64_t a1)
{
  sub_153C0B8(a1);

  operator delete();
}

unsigned char *sub_153C1BC(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_16F42A8(*((void *)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  uint64_t v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_153C250(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)BOOL v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1788E34((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_153C410(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)BOOL v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)BOOL v20 = 0;
  return *(void *)v20;
}

uint64_t sub_153C410(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F43A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_153C4A0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16F45D4(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_153C5D0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16F4710(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_153C6B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      unsigned int v9 = *(void **)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = sub_1788E34((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2545E40;
      }
      sub_16F484C((uint64_t)v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_153C7A0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16F496C(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_153C7CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TextBlockExt.LocalizedStringBlock");
}

uint64_t sub_153C7DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253D180 && *(void *)(a1 + 32))
  {
    sub_16F94DC();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153C8A8(uint64_t a1)
{
  sub_153C7DC(a1);

  operator delete();
}

uint64_t sub_153C8E0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_16F9518(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_153C974(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)BOOL v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1789374((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_153CB34(a3, v15, v7);
LABEL_29:
    *(void *)BOOL v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)BOOL v20 = 0;
  return *(void *)v20;
}

uint64_t sub_153CB34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F96CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_153CBC4(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16F9D14(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_153CCF4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16FA150(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_153CDD8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_1789374((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2546098;
      }
      sub_16FA420(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_153CEC4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16FA6E0(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_153CEF0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FactoidExt.LocalizedFactoid");
}

uint64_t sub_153CF00(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253D1A8 && *(void *)(a1 + 32))
  {
    sub_16E2710();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153CFCC(uint64_t a1)
{
  sub_153CF00(a1);

  operator delete();
}

unsigned char *sub_153D004(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_16E274C(*((void *)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_153D098(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)BOOL v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1787FA4((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_153D258(a3, v15, v7);
LABEL_29:
    *(void *)BOOL v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)BOOL v20 = 0;
  return *(void *)v20;
}

uint64_t sub_153D258(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E2848(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_153D2E8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_16E2B1C(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_153D418(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16E2C94(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_153D4FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_1787FA4((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2545640;
      }
      sub_16E2DDC(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_153D5E8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16E2F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_153D614@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BusinessClaimExt.LocalizedBusinessClaim");
}

void *sub_153D624(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 17);
  sub_12C1DB8(a1 + 14);
  sub_12C1DB8(a1 + 11);
  sub_12C1DB8(a1 + 8);
  sub_12C1DB8(a1 + 5);
  sub_12C1DB8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153D6E0(void *a1)
{
  sub_153D624(a1);

  operator delete();
}

uint64_t sub_153D718(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_15B2C80(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 96);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v1 + 104) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_15B2C80(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 96) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 120);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v1 + 128) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_15B2C80(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 120) = 0;
  }
  uint64_t v17 = *(unsigned int *)(v1 + 144);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v1 + 152) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t result = sub_15B2C80(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(v1 + 144) = 0;
  }
  char v21 = *(unsigned char *)(v1 + 8);
  BOOL v20 = (uint64_t *)(v1 + 8);
  if (v21)
  {
    return sub_188B4AC(v20);
  }
  return result;
}

char *sub_153D85C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v49 = a2;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    return v49;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v49 + 1;
    unsigned int v8 = *v49;
    if (*v49 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v49, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v49 + 2;
      }
    }
    unint64_t v49 = v7;
    switch(v8 >> 3)
    {
      case 2u:
        if (v8 != 18) {
          goto LABEL_69;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          unint64_t v12 = (unsigned __int8 *)(v11 + 1);
          unint64_t v49 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 32);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 24), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 24) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_15C1B30(*(void *)(a1 + 16));
            uint64_t v15 = sub_188CDC8(a1 + 16, (uint64_t)v16);
            unint64_t v12 = (unsigned __int8 *)v49;
          }
          uint64_t v11 = (char *)sub_125CF74(a3, v15, v12);
          unint64_t v49 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 18) {
            goto LABEL_76;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_69;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          unint64_t v49 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 56);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 48), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 48) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_15C1B30(*(void *)(a1 + 40));
            uint64_t v21 = sub_188CDC8(a1 + 40, (uint64_t)v22);
            uint64_t v18 = (unsigned __int8 *)v49;
          }
          uint64_t v17 = (char *)sub_125CF74(a3, v21, v18);
          unint64_t v49 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_76;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_69;
        }
        int v23 = v7 - 1;
        while (1)
        {
          uint64_t v24 = (unsigned __int8 *)(v23 + 1);
          unint64_t v49 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 80);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 72), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 72) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            int v28 = sub_15C1B30(*(void *)(a1 + 64));
            uint64_t v27 = sub_188CDC8(a1 + 64, (uint64_t)v28);
            uint64_t v24 = (unsigned __int8 *)v49;
          }
          int v23 = (char *)sub_125CF74(a3, v27, v24);
          unint64_t v49 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_76;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_69;
        }
        BOOL v29 = v7 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          unint64_t v49 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 104);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 96), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 96) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_15C1B30(*(void *)(a1 + 88));
            uint64_t v33 = sub_188CDC8(a1 + 88, (uint64_t)v34);
            uint64_t v30 = (unsigned __int8 *)v49;
          }
          BOOL v29 = (char *)sub_125CF74(a3, v33, v30);
          unint64_t v49 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
            goto LABEL_76;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_69;
        }
        unint64_t v35 = v7 - 1;
        while (1)
        {
          char v36 = (unsigned __int8 *)(v35 + 1);
          unint64_t v49 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 128);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 120), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 120) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            uint64_t v40 = sub_15C1B30(*(void *)(a1 + 112));
            uint64_t v39 = sub_188CDC8(a1 + 112, (uint64_t)v40);
            char v36 = (unsigned __int8 *)v49;
          }
          unint64_t v35 = (char *)sub_125CF74(a3, v39, v36);
          unint64_t v49 = v35;
          if (!v35) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 50) {
            goto LABEL_76;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_69;
        }
        unsigned int v41 = v7 - 1;
        while (1)
        {
          int v42 = (unsigned __int8 *)(v41 + 1);
          unint64_t v49 = v41 + 1;
          uint64_t v43 = *(_DWORD **)(a1 + 152);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 144), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 144) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            BOOL v46 = sub_15C1B30(*(void *)(a1 + 136));
            uint64_t v45 = sub_188CDC8(a1 + 136, (uint64_t)v46);
            int v42 = (unsigned __int8 *)v49;
          }
          unsigned int v41 = (char *)sub_125CF74(a3, v45, v42);
          unint64_t v49 = v41;
          if (!v41) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 58) {
            goto LABEL_76;
          }
        }
      default:
LABEL_69:
        if (v8) {
          BOOL v47 = (v8 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (*v6)
          {
            uint64_t v48 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v49;
          }
          unint64_t v49 = (char *)sub_1885AC0(v8, v48, v7, a3);
          if (!v49) {
            return 0;
          }
LABEL_76:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            return v49;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v49;
    }
  }
}

char *sub_153DD2C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_15B2EA4(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_15B2EA4(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 96);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 104) + 8 * m + 8);
      *__dst = 42;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      __dst[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, __dst + 1);
      }
      else {
        uint64_t v25 = __dst + 2;
      }
      __dst = sub_15B2EA4(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 120);
  if (v26)
  {
    for (int n = 0; n != v26; ++n)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 128) + 8 * n + 8);
      *__dst = 50;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      __dst[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, __dst + 1);
      }
      else {
        uint64_t v30 = __dst + 2;
      }
      __dst = sub_15B2EA4(v28, v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 144);
  if (v31)
  {
    for (iint i = 0; ii != v31; ++ii)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 152) + 8 * ii + 8);
      *__dst = 58;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      __dst[1] = v34;
      if (v34 > 0x7F) {
        unint64_t v35 = sub_188A9CC(v34, __dst + 1);
      }
      else {
        unint64_t v35 = __dst + 2;
      }
      __dst = sub_15B2EA4(v33, v35, a3);
    }
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return __dst;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    uint64_t v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    uint64_t v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if (*a3 - (void)__dst >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(__dst, v39, (int)v40);
    __dst += v41;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v39, v40, __dst);
}

uint64_t sub_153E104(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B2F90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_15B2F90(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 96);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 104);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_15B2F90(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 120);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 128);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_15B2F90(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 144);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *(void *)(a1 + 152);
  if (v38) {
    uint64_t v39 = (uint64_t *)(v38 + 8);
  }
  else {
    uint64_t v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_15B2F90(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(void *)(a1 + 8);
  if (v43)
  {
    unint64_t v45 = v43 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v45 + 31) < 0) {
      uint64_t v46 = *(void *)(v45 + 16);
    }
    else {
      uint64_t v46 = *(unsigned __int8 *)(v45 + 31);
    }
    v37 += v46;
  }
  *(_DWORD *)(a1 + 160) = v37;
  return v37;
}

std::string *sub_153E344(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_12C1E38((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 64), v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 96));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 88), v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    int v22 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v19;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__l.__size_;
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 120);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[4].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 120));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 112), v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__l.__size_ - LODWORD(v3[5].__r_.__value_.__l.__data_));
    int v27 = LODWORD(v3[5].__r_.__value_.__l.__data_) + v24;
    LODWORD(v3[5].__r_.__value_.__l.__data_) = v27;
    uint64_t v28 = (int *)v3[5].__r_.__value_.__l.__size_;
    if (*v28 < v27) {
      *uint64_t v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 144);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4((uint64_t)&v3[5].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 144));
    uint64_t result = sub_12C1E38((std::string *)((char *)v3 + 136), v31, v30, v29, *(_DWORD *)v3[6].__r_.__value_.__l.__size_ - LODWORD(v3[6].__r_.__value_.__l.__data_));
    int v32 = LODWORD(v3[6].__r_.__value_.__l.__data_) + v29;
    LODWORD(v3[6].__r_.__value_.__l.__data_) = v32;
    uint64_t v33 = (int *)v3[6].__r_.__value_.__l.__size_;
    if (*v33 < v32) {
      *uint64_t v33 = v32;
    }
  }
  uint64_t v34 = *(void *)(a2 + 8);
  if (v34)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v34 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_153E608()
{
  return 1;
}

void *sub_153E610@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.IncidentExt.LocalizedIncident");
}

void *sub_153E620(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153E6A0(void *a1)
{
  sub_153E620(a1);

  operator delete();
}

uint64_t sub_153E6D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(unsigned char *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_153E75C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(unsigned char *)(a1 + 48) = v16 != 0;
      int v5 = 1;
      goto LABEL_36;
    }
    int v24 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v26 = v24;
    *(unsigned char *)(a1 + 48) = v25 != 0;
    int v5 = 1;
    if (!v24) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      int v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v26 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_15C1B30(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
        int v19 = (unsigned __int8 *)v26;
      }
      uint64_t v18 = (char *)sub_125CF74(a3, v22, v19);
      uint64_t v26 = v18;
      if (!v18) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_153E994(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B2EA4(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v11 = *(unsigned char *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v11;
    __dst += 2;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return __dst;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)__dst >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(__dst, v15, (int)v16);
    __dst += v17;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, __dst);
}

uint64_t sub_153EB14(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = v2 + 2;
  }
  else {
    uint64_t result = v2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_153EBD0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::value_type v9 = *(unsigned char *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__s.__data_[0] = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_153ECBC()
{
  return 1;
}

void *sub_153ECC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitAttributionExt.ProviderNameLocalization");
}

uint64_t sub_153ECD4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153ED8C(uint64_t a1)
{
  sub_153ECD4(a1);

  operator delete();
}

uint64_t sub_153EDC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_153EE40(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      int v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      BOOL v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_153EFE8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_153F0D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_153F1B0()
{
  return 1;
}

void *sub_153F1B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressObjectExt.LocalizedAddressObject");
}

uint64_t sub_153F1C8(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_153F268(uint64_t a1)
{
  sub_153F1C8(a1);

  operator delete();
}

uint64_t sub_153F2A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}