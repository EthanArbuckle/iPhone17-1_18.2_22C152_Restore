void *sub_1C3608C(void *a1, long long *a2)
{
  void *v3;
  void *v5[3];

  sub_1C360F8((uint64_t)a1, a2, (uint64_t)v5);
  v3 = sub_1C35B9C(a1, v5[0]);
  v5[0] = 0;
  sub_1898588((uint64_t)v5, 0);
  return v3;
}

void sub_1C360E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1898588((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

unint64_t sub_1C360F8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1 + 16;
  v7 = operator new(0x38uLL);
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v6;
  *(unsigned char *)(a3 + 16) = 0;
  void *v7 = 0;
  v7[1] = 0;
  sub_1898520(v7 + 2, a2);
  *(unsigned char *)(a3 + 16) = 1;
  unint64_t result = sub_111EE48(a1 + 24, (uint64_t)(v7 + 2));
  v7[1] = result;
  return result;
}

void sub_1C36174(_Unwind_Exception *a1)
{
  sub_1898588(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1C3618C()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2628080, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1C3D16C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1C3F178()
{
}

void sub_1C3F184()
{
}

void sub_1C3F194()
{
}

void sub_1C3F1A0()
{
}

void sub_1C3F1B0()
{
}

void sub_1C3F1BC()
{
}

void sub_1C3F1CC()
{
}

void sub_1C3F1D8()
{
}

void sub_1C3F1E8()
{
}

void sub_1C3F1F4()
{
}

void sub_1C3F204()
{
}

void sub_1C3F210()
{
}

void sub_1C3F220()
{
}

void sub_1C3F22C()
{
}

void sub_1C3F23C()
{
}

void sub_1C3F248()
{
}

void sub_1C3F258()
{
}

void sub_1C3F264()
{
}

void sub_1C3F274()
{
}

void sub_1C3F280()
{
}

void sub_1C3F290()
{
}

void sub_1C3F29C()
{
}

void sub_1C3F2AC()
{
}

void sub_1C3F2B8()
{
}

void sub_1C3F2C8()
{
}

void sub_1C3F2D4()
{
}

void sub_1C3F2E4()
{
}

void sub_1C3F2F0()
{
}

void sub_1C3F300()
{
}

void sub_1C3F30C()
{
}

void sub_1C3F31C()
{
}

void sub_1C3F328()
{
}

void sub_1C3F338()
{
}

void sub_1C3F344()
{
}

void sub_1C3F354()
{
}

void sub_1C3F360()
{
}

void sub_1C3F370()
{
}

void sub_1C3F37C()
{
}

void sub_1C3F38C()
{
}

void sub_1C3F398()
{
}

void sub_1C3F3A8()
{
}

void sub_1C3F3B4()
{
}

void sub_1C3F3C4()
{
}

void sub_1C3F3D0()
{
}

void sub_1C3F3E0()
{
}

void sub_1C3F3EC()
{
}

void sub_1C3F3FC()
{
}

void sub_1C3F408()
{
}

void sub_1C3F418()
{
}

void sub_1C3F424()
{
}

void sub_1C3F434()
{
}

void sub_1C3F440()
{
}

void sub_1C3F450()
{
}

void sub_1C3F45C()
{
}

void sub_1C3F46C()
{
}

void sub_1C3F478()
{
}

void sub_1C3F488()
{
}

void sub_1C3F494()
{
}

void sub_1C3F4A4()
{
}

void sub_1C3F4B0()
{
}

void sub_1C3F4C0()
{
}

void sub_1C3F4CC()
{
}

void sub_1C3F4DC()
{
}

void sub_1C3F4E8()
{
}

void sub_1C3F4F8()
{
}

void sub_1C3F504()
{
}

void sub_1C3F514()
{
}

void sub_1C3F520()
{
}

void sub_1C3F530()
{
}

void sub_1C3F53C()
{
}

void sub_1C3F54C()
{
}

void sub_1C3F558()
{
}

void sub_1C3F568()
{
}

void sub_1C3F574()
{
}

void sub_1C3F584()
{
}

void sub_1C3F590()
{
}

void sub_1C3F5A0()
{
}

void sub_1C3F5AC()
{
}

void sub_1C3F5BC()
{
}

void sub_1C3F5C8()
{
}

void sub_1C3F5D8()
{
}

void sub_1C3F5E4()
{
}

void sub_1C3F5F4()
{
}

void sub_1C3F600()
{
}

void sub_1C3F610()
{
}

void sub_1C3F61C()
{
}

void sub_1C3F62C()
{
}

void sub_1C3F638()
{
}

void sub_1C3F648()
{
}

void sub_1C3F654()
{
}

void sub_1C3F664()
{
}

void sub_1C3F670()
{
}

void sub_1C3F680()
{
}

void sub_1C3F68C()
{
}

void sub_1C3F69C()
{
}

void sub_1C3F6A8()
{
}

void sub_1C3F6B8()
{
}

void sub_1C3F6C4()
{
}

void sub_1C3F6D4()
{
}

void sub_1C3F6E0()
{
}

void sub_1C3F6F0()
{
}

void sub_1C3F6FC()
{
}

void sub_1C3F70C()
{
}

void sub_1C3F718()
{
}

void sub_1C3F728()
{
}

void sub_1C3F734()
{
}

void sub_1C3F744()
{
}

void sub_1C3F750()
{
}

void sub_1C3F760()
{
}

void sub_1C3F76C()
{
}

void sub_1C3F77C()
{
}

void sub_1C3F788()
{
}

void sub_1C3F798()
{
}

void sub_1C3F7A4()
{
}

void sub_1C3F7B4()
{
}

void sub_1C3F7C0()
{
}

void sub_1C3F7D0()
{
}

void sub_1C3F7DC()
{
}

void sub_1C3F7EC()
{
}

void sub_1C3F7F8()
{
}

void sub_1C3F808()
{
}

void sub_1C3F814()
{
}

void sub_1C3F824()
{
}

void sub_1C3F830()
{
}

void sub_1C3F840()
{
}

void sub_1C3F84C()
{
}

void sub_1C3F85C()
{
}

void sub_1C3F868()
{
}

void sub_1C3F878()
{
}

void sub_1C3F884()
{
}

void sub_1C3F894()
{
}

void sub_1C3F8A0()
{
}

void sub_1C3F8B0()
{
}

void sub_1C3F8BC()
{
}

void sub_1C3F8CC()
{
}

void sub_1C3F8D8()
{
}

void sub_1C3F8E8()
{
}

void sub_1C3F8F4()
{
}

void sub_1C3F904()
{
}

void sub_1C3F910()
{
}

void sub_1C3F920()
{
}

void sub_1C3F92C()
{
}

void sub_1C3F93C()
{
}

void sub_1C3F948()
{
}

void sub_1C3F958()
{
}

void sub_1C3F964()
{
}

void sub_1C3F974()
{
}

void sub_1C3F980()
{
}

void sub_1C3F990()
{
}

void sub_1C3F99C()
{
}

void sub_1C3F9AC()
{
}

void sub_1C3F9B8()
{
}

void sub_1C3F9C8()
{
}

void sub_1C3F9D4()
{
}

void sub_1C3F9E4()
{
}

void sub_1C3F9F0()
{
}

void sub_1C3FA00()
{
}

void sub_1C3FA0C()
{
}

void sub_1C3FA1C()
{
}

void sub_1C3FA28()
{
}

void sub_1C3FA38()
{
}

void sub_1C3FA44()
{
}

void sub_1C3FA54()
{
}

void sub_1C3FA60()
{
}

void sub_1C3FA70()
{
}

void sub_1C3FA7C()
{
}

void sub_1C3FA8C()
{
}

void sub_1C3FA98()
{
}

void sub_1C3FAA8()
{
}

void sub_1C3FAB4()
{
}

void sub_1C3FAC4()
{
}

void sub_1C3FAD0()
{
}

void sub_1C3FAE0()
{
}

void sub_1C3FAEC()
{
}

void sub_1C3FAFC()
{
}

void sub_1C3FB08()
{
}

void sub_1C3FB18()
{
}

void sub_1C3FB24()
{
}

void sub_1C3FB34()
{
}

void sub_1C3FB40()
{
}

void sub_1C3FB50()
{
}

void sub_1C3FB5C()
{
}

void sub_1C3FB6C()
{
}

void sub_1C3FB78()
{
}

void sub_1C3FB88()
{
}

void sub_1C3FB94()
{
}

void sub_1C3FBA4()
{
}

void sub_1C3FBB0()
{
}

void sub_1C3FBC0()
{
}

void sub_1C3FBCC()
{
}

void sub_1C3FBDC()
{
}

void sub_1C3FBE8()
{
}

void sub_1C3FBF8()
{
}

void sub_1C3FC04()
{
}

void sub_1C3FC14()
{
}

void sub_1C3FC20()
{
}

void sub_1C3FC30()
{
}

void sub_1C3FC3C()
{
}

void sub_1C3FC4C()
{
}

void sub_1C3FC58()
{
}

void sub_1C3FC68()
{
}

void sub_1C3FC74()
{
}

void sub_1C3FC84()
{
}

void sub_1C3FC90()
{
}

void sub_1C3FCA0()
{
}

void sub_1C3FCAC()
{
}

void sub_1C3FCBC()
{
}

void sub_1C3FCC8()
{
}

void sub_1C3FCD8()
{
}

void sub_1C3FCE4()
{
}

void sub_1C3FCF4()
{
}

void sub_1C3FD00()
{
}

void sub_1C3FD10()
{
}

void sub_1C3FD1C()
{
}

void sub_1C3FD2C()
{
}

void sub_1C3FD38()
{
}

void sub_1C3FD48()
{
}

void sub_1C3FD54()
{
}

void sub_1C3FD64()
{
}

void sub_1C3FD70()
{
}

void sub_1C3FD80()
{
}

void sub_1C3FD8C()
{
}

void sub_1C3FD9C()
{
}

void sub_1C3FDA8()
{
}

void sub_1C3FDB8()
{
}

void sub_1C3FDC4()
{
}

void sub_1C3FDD4()
{
}

void sub_1C3FDE0()
{
}

void sub_1C3FDF0()
{
}

void sub_1C3FDFC()
{
}

void sub_1C3FE0C()
{
}

void sub_1C3FE18()
{
}

void sub_1C3FE28()
{
}

void sub_1C3FE34()
{
}

void sub_1C3FE44()
{
}

void sub_1C3FE50()
{
}

void sub_1C3FE60()
{
}

void sub_1C3FE6C()
{
}

void sub_1C3FE7C()
{
}

void sub_1C3FE88()
{
}

void sub_1C3FE98()
{
}

void sub_1C3FEA4()
{
}

void sub_1C3FEB4()
{
}

void sub_1C3FEC0()
{
}

void sub_1C3FED0()
{
}

void sub_1C3FEDC()
{
}

void sub_1C3FEEC()
{
}

void sub_1C3FEF8()
{
}

void sub_1C3FF08()
{
}

void sub_1C3FF14()
{
}

void sub_1C3FF24()
{
}

void sub_1C3FF30()
{
}

void sub_1C3FF40()
{
}

void sub_1C3FF4C()
{
}

void sub_1C3FF5C()
{
}

void sub_1C3FF68()
{
}

void sub_1C3FF78()
{
}

void sub_1C3FF84()
{
}

void sub_1C3FF94()
{
}

void sub_1C3FFA0()
{
}

void sub_1C3FFB0()
{
}

void sub_1C3FFBC()
{
}

void sub_1C3FFCC()
{
}

void sub_1C3FFD8()
{
}

void sub_1C3FFE8()
{
}

void sub_1C3FFF4()
{
}

void sub_1C40004()
{
}

void sub_1C40010()
{
}

void sub_1C40020()
{
}

void sub_1C4002C()
{
}

void sub_1C4003C()
{
}

void sub_1C40048()
{
}

void sub_1C40058()
{
}

void sub_1C40064()
{
}

void sub_1C40074()
{
}

void sub_1C40080()
{
}

void sub_1C40090()
{
}

void sub_1C4009C()
{
}

void sub_1C400AC()
{
}

void sub_1C400B8()
{
}

void sub_1C400C4()
{
}

void sub_1C400D0()
{
}

void sub_1C400DC()
{
}

void sub_1C400EC()
{
}

void sub_1C400F8()
{
}

void sub_1C40108()
{
}

void sub_1C40114()
{
}

void sub_1C40124()
{
}

void sub_1C40130()
{
}

void sub_1C40140()
{
}

void sub_1C4014C()
{
}

void sub_1C4015C()
{
}

void sub_1C40168()
{
}

void sub_1C40178()
{
}

void sub_1C40184()
{
}

void sub_1C40194()
{
}

void sub_1C401A0()
{
}

void sub_1C401B0()
{
}

void sub_1C401BC()
{
}

void sub_1C401CC()
{
}

void sub_1C401D8()
{
}

void sub_1C401E8()
{
}

void sub_1C401F4()
{
}

void sub_1C40204()
{
}

void sub_1C40210()
{
}

void sub_1C40220()
{
}

void sub_1C4022C()
{
}

void sub_1C4023C()
{
}

void sub_1C40248()
{
}

void sub_1C40258()
{
}

void sub_1C40264()
{
}

void sub_1C40274()
{
}

void sub_1C40280()
{
}

void sub_1C40290()
{
}

void sub_1C4029C()
{
}

void sub_1C402AC()
{
}

void sub_1C402B8()
{
}

void sub_1C402C8()
{
}

void sub_1C402D4()
{
}

void sub_1C402E4()
{
}

void sub_1C402F0()
{
}

void sub_1C40300()
{
}

void sub_1C4030C()
{
}

void sub_1C4031C()
{
}

void sub_1C40328()
{
}

void sub_1C40338()
{
}

void sub_1C40344()
{
}

void sub_1C40354()
{
}

void sub_1C40360()
{
}

void sub_1C40370()
{
}

void sub_1C4037C()
{
}

void sub_1C4038C()
{
}

void sub_1C40398()
{
}

void sub_1C403A8()
{
}

void sub_1C403B4()
{
}

void sub_1C403C4()
{
}

void sub_1C403D0()
{
}

void sub_1C403E0()
{
}

void sub_1C403EC()
{
}

void sub_1C403FC()
{
}

void sub_1C40408()
{
}

void sub_1C40418()
{
}

void sub_1C40424()
{
}

void sub_1C40434()
{
}

void sub_1C40440()
{
}

void sub_1C40450()
{
}

void sub_1C4045C()
{
}

void sub_1C4046C()
{
}

void sub_1C40478()
{
}

void sub_1C40488()
{
}

void sub_1C40494()
{
}

void sub_1C404A4()
{
}

void sub_1C404B0()
{
}

void sub_1C404C0()
{
}

void sub_1C404CC()
{
}

void sub_1C404DC()
{
}

void sub_1C404E8()
{
}

void sub_1C404F8()
{
}

void sub_1C40504()
{
}

void sub_1C40514()
{
}

void sub_1C40520()
{
}

void sub_1C40530()
{
}

void sub_1C4053C()
{
}

void sub_1C4054C()
{
}

void sub_1C40558()
{
}

void sub_1C40568()
{
}

void sub_1C40574()
{
}

void sub_1C40584()
{
}

void sub_1C40590()
{
}

void sub_1C405A0()
{
}

void sub_1C405AC()
{
}

void sub_1C405BC()
{
}

void sub_1C405C8()
{
}

void sub_1C405D8()
{
}

void sub_1C405E4()
{
}

void sub_1C405F4()
{
}

void sub_1C40600()
{
}

void sub_1C40610()
{
}

void sub_1C4061C()
{
}

void sub_1C4062C()
{
}

void sub_1C40638()
{
}

void sub_1C40648()
{
}

void sub_1C40654()
{
}

void sub_1C40664()
{
}

void sub_1C40670()
{
}

void sub_1C40680()
{
}

void sub_1C4068C()
{
}

void sub_1C4069C()
{
}

void sub_1C406A8()
{
}

void sub_1C406B8()
{
}

void sub_1C406C4()
{
}

void sub_1C406D4()
{
}

void sub_1C406E0()
{
}

void sub_1C406F0()
{
}

void sub_1C406FC()
{
}

void sub_1C4070C()
{
}

void sub_1C40718()
{
}

void sub_1C40728()
{
}

void sub_1C40734()
{
}

void sub_1C40744()
{
}

void sub_1C40750()
{
}

void sub_1C40760()
{
}

void sub_1C4076C()
{
}

void sub_1C4077C()
{
}

void sub_1C40788()
{
}

void sub_1C40798()
{
}

void sub_1C407A4()
{
}

void sub_1C407B4()
{
}

void sub_1C407C0()
{
}

void sub_1C407D0()
{
}

void sub_1C407DC()
{
}

void sub_1C407EC()
{
}

void sub_1C407F8()
{
}

void sub_1C40808()
{
}

void sub_1C40814()
{
}

void sub_1C40824()
{
}

void sub_1C40830()
{
}

void sub_1C40840()
{
}

void sub_1C4084C()
{
}

void sub_1C4085C()
{
}

void sub_1C40868()
{
}

void sub_1C40878()
{
}

void sub_1C40884()
{
}

void sub_1C40894()
{
}

void sub_1C408A0()
{
}

void sub_1C408B0()
{
}

void sub_1C408BC()
{
}

void sub_1C408CC()
{
}

void sub_1C408D8()
{
}

void sub_1C408E8()
{
}

void sub_1C408F4()
{
}

void sub_1C40904()
{
}

void sub_1C40910()
{
}

void sub_1C40920()
{
}

void sub_1C4092C()
{
}

void sub_1C4093C()
{
}

void sub_1C40948()
{
}

void sub_1C40958()
{
}

void sub_1C40964()
{
}

void sub_1C40974()
{
}

void sub_1C40980()
{
}

void sub_1C40990()
{
}

void sub_1C4099C()
{
}

void sub_1C409AC()
{
}

void sub_1C409B8()
{
}

void sub_1C409C8()
{
}

void sub_1C409D4()
{
}

void sub_1C409E4()
{
}

void sub_1C409F0()
{
}

void sub_1C40A00()
{
}

void sub_1C40A0C()
{
}

void sub_1C40A1C()
{
}

void sub_1C40A28()
{
}

void sub_1C40A38()
{
}

void sub_1C40A44()
{
}

void sub_1C40A54()
{
}

void sub_1C40A60()
{
}

void sub_1C40A70()
{
}

void sub_1C40A7C()
{
}

void sub_1C40A8C()
{
}

void sub_1C40A98()
{
}

void sub_1C40AA8()
{
}

void sub_1C40AB4()
{
}

void sub_1C40AC4()
{
}

void sub_1C40AD0()
{
}

void sub_1C40AE0()
{
}

void sub_1C40AEC()
{
}

void sub_1C40AFC()
{
}

void sub_1C40B08()
{
}

void sub_1C40B18()
{
}

void sub_1C40B24()
{
}

void sub_1C40B34()
{
}

void sub_1C40B40()
{
}

void sub_1C40B50()
{
}

void sub_1C40B5C()
{
}

void sub_1C40B6C()
{
}

void sub_1C40B78()
{
}

void sub_1C40B88()
{
}

void sub_1C40B94()
{
}

void sub_1C40BA4()
{
}

void sub_1C40BB0()
{
}

void sub_1C40BC0()
{
}

void sub_1C40BCC()
{
}

void sub_1C40BDC()
{
}

void sub_1C40BE8()
{
}

void sub_1C40BF8()
{
}

void sub_1C40C04()
{
}

void sub_1C40C10()
{
}

void sub_1C40C24()
{
}

void sub_1C40C38()
{
}

void sub_1C40C40()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DCB8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DCB8))
  {
    sub_5E5C(v1, "PRICE_RANGE_INEXPENSIVE");
    sub_5E5C(v2, "PRICE_RANGE_MODERATE");
    sub_5E5C(v3, "PRICE_RANGE_EXPENSIVE");
    sub_5E5C(v4, "PRICE_RANGE_VERY_EXPENSIVE");
    sub_1976294((uint64_t)&unk_254DCA0, v1, 4);
    for (uint64_t i = 0; i != -12; i -= 3)
    {
      if (SHIBYTE(v4[i + 2]) < 0) {
        operator delete((void *)v4[i]);
      }
    }
    __cxa_guard_release(&qword_254DCB8);
  }
}

void sub_1C40D58(_Unwind_Exception *a1)
{
  uint64_t v3 = 0;
  while (1)
  {
    if (*(char *)(v1 + v3 + 95) < 0) {
      operator delete(*(void **)(v1 + v3 + 72));
    }
    v3 -= 24;
    if (v3 == -96)
    {
      __cxa_guard_abort(&qword_254DCB8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1C40DC4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DCD8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DCD8))
  {
    sub_5E5C(v1, "EV_CONNECTOR_TYPE_CHADEMO");
    sub_5E5C(v2, "EV_CONNECTOR_TYPE_J1772");
    sub_5E5C(v3, "EV_CONNECTOR_TYPE_TESLA");
    sub_5E5C(v4, "EV_CONNECTOR_TYPE_CCS1");
    sub_5E5C(v5, "EV_CONNECTOR_TYPE_CCS2");
    sub_5E5C(v6, "EV_CONNECTOR_TYPE_GBT1");
    sub_5E5C(v7, "EV_CONNECTOR_TYPE_GBT2");
    sub_5E5C(v8, "EV_CONNECTOR_TYPE_MENNEKES");
    sub_5E5C(v9, "EV_CONNECTOR_TYPE_COMBO");
    sub_1976294((uint64_t)&unk_254DCC0, v1, 9);
    for (uint64_t i = 0; i != -27; i -= 3)
    {
      if (SHIBYTE(v9[i + 2]) < 0) {
        operator delete((void *)v9[i]);
      }
    }
    __cxa_guard_release(&qword_254DCD8);
  }
}

void sub_1C40F4C(_Unwind_Exception *a1)
{
  uint64_t v3 = 0;
  while (1)
  {
    if (*(char *)(v1 + v3 + 215) < 0) {
      operator delete(*(void **)(v1 + v3 + 192));
    }
    v3 -= 24;
    if (v3 == -216)
    {
      __cxa_guard_abort(&qword_254DCD8);
      _Unwind_Resume(a1);
    }
  }
}

void sub_1C40FB8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DCF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DCF8))
  {
    sub_5E5C(__p, "OPEN_NOW");
    sub_1976294((uint64_t)&unk_254DCE0, (const void **)__p, 1);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_guard_release(&qword_254DCF8);
  }
}

void sub_1C4106C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_254DCF8);
  _Unwind_Resume(a1);
}

void sub_1C4109C()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DD18, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DD18))
  {
    sub_5E5C(__p, "TOP_RATED");
    sub_1976294((uint64_t)&unk_254DD00, (const void **)__p, 1);
    if (v1 < 0) {
      operator delete(__p[0]);
    }
    __cxa_guard_release(&qword_254DD18);
  }
}

void sub_1C41150(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  __cxa_guard_abort(&qword_254DD18);
  _Unwind_Resume(a1);
}

void sub_1C41180()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DD38, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DD38))
  {
    sub_1897AE4((uint64_t *)v1, (const void ***)&unk_254DCA0);
    sub_1897AE4(v2, (const void ***)&unk_254DCC0);
    sub_1897AE4(v3, (const void ***)&unk_254DCE0);
    sub_1897AE4(v4, (const void ***)&unk_254DD00);
    qword_254DD20 = 0;
    qword_254DD28 = 0;
    qword_254DD30 = 0;
    qword_254DD20 = (uint64_t)operator new(0x60uLL);
    qword_254DD28 = qword_254DD20;
    qword_254DD30 = qword_254DD20 + 96;
    uint64_t v0 = 0;
    qword_254DD28 = (uint64_t)sub_19A8248((uint64_t)&qword_254DD30, v1, &v5, (uint64_t *)qword_254DD20);
    do
    {
      sub_2F020((uint64_t)&v4[v0], (char *)v4[v0 + 1]);
      v0 -= 3;
    }
    while (v0 != -12);
    __cxa_guard_release(&qword_254DD38);
  }
}

void sub_1C412C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, uint64_t a11, char a12)
{
  qword_254DD28 = v12;
  sub_19A8370(&a10);
  for (uint64_t i = 0; i != -96; i -= 24)
    sub_2F020((uint64_t)(&a12 + i + 72), *(char **)(&a12 + i + 80));
  __cxa_guard_abort(&qword_254DD38);
  _Unwind_Resume(a1);
}

void sub_1C4134C()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2628038 = 0;
  qword_2628040 = 0;
  qword_2628048 = 0;
  qword_2628038 = (uint64_t)operator new(0x18uLL);
  qword_2628040 = qword_2628038;
  qword_2628048 = qword_2628038 + 24;
  qword_2628040 = (uint64_t)sub_18914E4((uint64_t)&qword_2628048, (long long *)__p, &v2, (char *)qword_2628038);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2628050 = 0;
  qword_2628058 = 0;
  qword_2628060 = 0;
  qword_2628050 = (uint64_t)operator new(0x18uLL);
  qword_2628058 = qword_2628050;
  qword_2628060 = qword_2628050 + 24;
  qword_2628058 = (uint64_t)sub_18914E4((uint64_t)&qword_2628060, (long long *)__p, &v2, (char *)qword_2628050);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2628068 = 0;
  qword_2628070 = 0;
  qword_2628078 = 0;
  qword_2628068 = (uint64_t)operator new(0x18uLL);
  qword_2628070 = qword_2628068;
  qword_2628078 = qword_2628068 + 24;
  qword_2628070 = (uint64_t)sub_18914E4((uint64_t)&qword_2628078, (long long *)__p, &v2, (char *)qword_2628068);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_1C3618C();
}

void sub_1C414F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2628070 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1C41554(uint64_t a1, int a2)
{
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  long long v15 = 0;
  int v2 = *(_DWORD *)(a1 + 80);
  if (v2)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    v5 = (std::string **)sub_188CCE4((uint64_t)&v13, v2);
    sub_122D01C(&v13, v5, v4, v2, *v15 - v14);
    int v6 = v14 + v2;
    LODWORD(v14) = v6;
    v7 = v15;
    if (*v15 < v6) {
      *long long v15 = v6;
    }
    if (v6)
    {
      char v8 = (uint64_t *)(v7 + 2);
      for (uint64_t i = 8 * v6; i; i -= 8)
      {
        sub_1201054((uint64_t)v16, *v8);
        if (v17 <= a2)
        {
          int v10 = v18;
          sub_12010C8(v16);
          if (v10 >= a2)
          {
            uint64_t v11 = 2;
            goto LABEL_11;
          }
        }
        else
        {
          sub_12010C8(v16);
        }
        ++v8;
      }
    }
  }
  uint64_t v11 = 4;
LABEL_11:
  sub_122CB58(&v13);
  return v11;
}

void sub_1C4165C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1C41674(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 832);
  uint64_t v3 = *(void *)(a1 + 840);
  if (v2 == v3) {
    return 0;
  }
  unint64_t v4 = *(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL;
  int v5 = *(char *)(v4 + 23);
  if (v5 >= 0) {
    uint64_t v6 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    uint64_t v6 = *(void *)(v4 + 8);
  }
  while (1)
  {
    uint64_t v7 = *(unsigned __int8 *)(v2 + 23);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = *(unsigned __int8 *)(v2 + 23);
    }
    else {
      uint64_t v8 = *(void *)(v2 + 8);
    }
    if (v8 != v6) {
      goto LABEL_19;
    }
    int v9 = v5 >= 0 ? (unsigned __int8 *)v4 : *(unsigned __int8 **)v4;
    if ((v7 & 0x80) != 0) {
      break;
    }
    if (!*(unsigned char *)(v2 + 23)) {
      return 1;
    }
    uint64_t v10 = 0;
    while (*(unsigned __int8 *)(v2 + v10) == v9[v10])
    {
      if (v7 == ++v10) {
        return 1;
      }
    }
LABEL_19:
    v2 += 24;
    if (v2 == v3) {
      return 0;
    }
  }
  if (memcmp(*(const void **)v2, v9, *(void *)(v2 + 8))) {
    goto LABEL_19;
  }
  return 1;
}

void sub_1C41744(std::string *__str@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v8 = std::stoi(__str, 0, 10);
  uint64_t v39 = 0;
  uint64_t v40 = 0;
  char v41 = 0;
  int v9 = *(_DWORD *)(a2 + 32);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4((uint64_t)&v39, *(_DWORD *)(a2 + 32));
    sub_122CF04(&v39, v11, v10, v9, *v41 - v40);
    int v12 = v40 + v9;
    LODWORD(v40) = v12;
    uint64_t v13 = v41;
    if (*v41 < v12) {
      *char v41 = v12;
    }
    if (v12 >= 1)
    {
      uint64_t v15 = *((void *)v13 + 1);
      uint64_t v14 = (uint64_t *)(v13 + 2);
      int v16 = *(_DWORD *)(v15 + 56);
      uint64_t v17 = 8 * v12;
      int v18 = 0x7FFFFFFF;
      int v19 = v16;
      while (1)
      {
        sub_11FFB0C((uint64_t)v37, *v14);
        int v20 = v8 - v38;
        if (v8 == v38) {
          break;
        }
        if (v38 < v19) {
          int v19 = v38;
        }
        if (v38 > v16) {
          int v16 = v38;
        }
        if (v20 < 0) {
          int v20 = v38 - v8;
        }
        if (v18 >= v20) {
          int v18 = v20;
        }
        sub_11FFBD0((uint64_t)v37);
        ++v14;
        v17 -= 8;
        if (!v17)
        {
          if (v8 < v19 - 1000 || v8 > v16 + 1000)
          {
            int v22 = sub_1C41554(a2, v8);
            if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
            {
              sub_4200(&v29, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
            }
            else
            {
              long long v29 = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
              std::string::size_type v30 = __str->__r_.__value_.__r.__words[2];
            }
            sub_195692C(a4, v22, 0x7FFFFFFF, &v29);
            if ((SHIBYTE(v30) & 0x80000000) == 0) {
              goto LABEL_48;
            }
            int v24 = (void *)v29;
LABEL_27:
            operator delete(v24);
            goto LABEL_48;
          }
          if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
          {
            sub_4200(&v31, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
          }
          else
          {
            long long v31 = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
            std::string::size_type v32 = __str->__r_.__value_.__r.__words[2];
          }
          sub_195692C(a4, 3, v18, &v31);
          if (SHIBYTE(v32) < 0)
          {
            int v24 = (void *)v31;
            goto LABEL_27;
          }
          goto LABEL_48;
        }
      }
      int v25 = SHIBYTE(__str->__r_.__value_.__r.__words[2]);
      if (a3)
      {
        if (v25 < 0)
        {
          sub_4200(&__dst, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
        }
        else
        {
          long long __dst = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
          std::string::size_type v36 = __str->__r_.__value_.__r.__words[2];
        }
        sub_195692C(a4, 1, 0, &__dst);
        if ((SHIBYTE(v36) & 0x80000000) == 0) {
          goto LABEL_42;
        }
        p_dst = &__dst;
      }
      else
      {
        if (v25 < 0)
        {
          sub_4200(&v33, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
        }
        else
        {
          long long v33 = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
          std::string::size_type v34 = __str->__r_.__value_.__r.__words[2];
        }
        sub_195692C(a4, 3, 0, &v33);
        if ((SHIBYTE(v34) & 0x80000000) == 0) {
          goto LABEL_42;
        }
        p_dst = &v33;
      }
      operator delete(*(void **)p_dst);
LABEL_42:
      sub_11FFBD0((uint64_t)v37);
      goto LABEL_48;
    }
  }
  int v23 = sub_1C41554(a2, v8);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)__p = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    std::string::size_type v28 = __str->__r_.__value_.__r.__words[2];
  }
  sub_195692C(a4, v23, 0x7FFFFFFF, (long long *)__p);
  if (SHIBYTE(v28) < 0)
  {
    int v24 = __p[0];
    goto LABEL_27;
  }
LABEL_48:
  sub_122CA58(&v39);
}

void sub_1C41A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,char a44)
{
  sub_11FFBD0((uint64_t)&a44);
  sub_122CA58((void *)(v44 - 112));
  _Unwind_Resume(a1);
}

void *sub_1C41AEC@<X0>(void *result@<X0>, const void **a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = result[8];
  if (v4) {
    uint64_t v5 = v4 + 8;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = *((int *)result + 14);
  uint64_t v7 = v5 + 8 * v6;
  if (v6)
  {
    int v8 = *((char *)a2 + 23);
    if (v8 >= 0) {
      int v9 = (const void *)*((unsigned __int8 *)a2 + 23);
    }
    else {
      int v9 = a2[1];
    }
    if (v8 >= 0) {
      uint64_t v10 = a2;
    }
    else {
      uint64_t v10 = *a2;
    }
    while (1)
    {
      unint64_t v11 = *(void *)(*(void *)v5 + 48) & 0xFFFFFFFFFFFFFFFELL;
      unint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      if (*(char *)(v11 + 23) < 0)
      {
        unint64_t v13 = *(void *)v11;
        uint64_t v14 = *(void *)(v11 + 8);
        if (!v14) {
          goto LABEL_35;
        }
      }
      else
      {
        unint64_t v13 = *(void *)(*(void *)v5 + 48) & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v14 = *(unsigned __int8 *)(v11 + 23);
        if (!*(unsigned char *)(v11 + 23)) {
          goto LABEL_35;
        }
      }
      uint64_t v15 = (unsigned __int8 *)(v13 + v14);
      int v16 = (unsigned __int8 *)v13;
      uint64_t v17 = v15;
      do
      {
        int v18 = v16;
        int v19 = v16;
        while (1)
        {
          int v20 = *v19++;
          if (v20 == 47) {
            break;
          }
          int v18 = v19;
          if (v19 == v15)
          {
            int v18 = v17;
            goto LABEL_21;
          }
        }
        int v16 = v18 + 1;
        uint64_t v17 = v18;
      }
      while (v19 != v15);
LABEL_21:
      if (v18 != v15)
      {
        char v21 = &v18[-v13];
        if (v21 != (unsigned __int8 *)-1)
        {
          if ((v12 & 0x80) != 0)
          {
            if (v9 == (const void *)-1 || (unint64_t v12 = *(void *)(v11 + 8), v12 <= (unint64_t)v21)) {
LABEL_46:
            }
              sub_5AD0();
            unint64_t v11 = *(void *)v11;
          }
          else if ((unint64_t)v21 >= v12 || v9 == (const void *)-1)
          {
            goto LABEL_46;
          }
          int v22 = v21 + 1;
          int v23 = (const void *)(v12 - (void)v22);
          int v24 = &v22[v11];
          size_t v25 = v12 - (unint64_t)v22 >= (unint64_t)v9 ? (size_t)v9 : v12 - (void)v22;
          unint64_t result = (void *)memcmp(v24, v10, v25);
          if (!result && v23 == v9) {
            break;
          }
        }
      }
LABEL_35:
      v5 += 8;
      if (v5 == v7) {
        goto LABEL_40;
      }
    }
  }
  if (v5 == v7)
  {
LABEL_40:
    return sub_5E5C(a3, (char *)&unk_2178514);
  }
  else
  {
    unint64_t v26 = *(void *)(*(void *)v5 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v26 + 23) < 0)
    {
      std::string::size_type v28 = *(void **)v26;
      unint64_t v29 = *(void *)(v26 + 8);
      return sub_4200(a3, v28, v29);
    }
    else
    {
      long long v27 = *(_OWORD *)v26;
      a3[2] = *(void *)(v26 + 16);
      *(_OWORD *)a3 = v27;
    }
  }
  return result;
}

void sub_1C41CD0(std::string *__str@<X1>, uint64_t a2@<X0>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = __str;
  if ((SHIBYTE(__str->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
    if (*((unsigned char *)&__str->__r_.__value_.__s + 23)) {
      goto LABEL_5;
    }
    std::string __dst = *__str;
    goto LABEL_43;
  }
  __str = (std::string *)__str->__r_.__value_.__r.__words[0];
  std::string::size_type size = v5->__r_.__value_.__l.__size_;
  if (!size)
  {
    sub_4200(&__dst, __str, 0);
LABEL_43:
    sub_195692C(a4, 0, 0, (long long *)&__dst);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    size_t v25 = (void *)__dst.__r_.__value_.__r.__words[0];
    goto LABEL_45;
  }
LABEL_5:
  while ((__str->__r_.__value_.__s.__data_[0] & 0x80000000) == 0
       && (_DefaultRuneLocale.__runetype[__str->__r_.__value_.__s.__data_[0]] & 0x400) != 0)
  {
    __str = (std::string *)((char *)__str + 1);
    if (!--size)
    {
      sub_1C41744(v5, a2, 1, (uint64_t)&__stra);
      if (LODWORD(__stra.__r_.__value_.__l.__data_) == 1 || !sub_1C41674(a3, a2))
      {
        uint64_t v24 = v44;
        *(std::string *)a4 = __stra;
        *(void *)(a4 + 24) = v24;
        *(_OWORD *)&__stra.__r_.__value_.__r.__words[1] = 0uLL;
        *(_OWORD *)(a4 + 32) = v45;
        *(void *)(a4 + 48) = v46;
        uint64_t v44 = 0;
        long long v45 = 0uLL;
        uint64_t v46 = 0;
        goto LABEL_40;
      }
      sub_1C41AEC((void *)a2, (const void **)&v5->__r_.__value_.__l.__data_, &__src);
      if (SHIBYTE(v41) < 0)
      {
        if (*((void *)&__src + 1))
        {
          sub_4200(v38, (void *)__src, *((unint64_t *)&__src + 1));
          goto LABEL_65;
        }
      }
      else if (HIBYTE(v41))
      {
        *(_OWORD *)int v38 = __src;
        uint64_t v39 = v41;
LABEL_65:
        sub_195692C(a4, 1, 0, (long long *)v38);
        if (SHIBYTE(v39) < 0) {
          operator delete(v38[0]);
        }
LABEL_68:
        if (SHIBYTE(v41) < 0) {
          operator delete((void *)__src);
        }
        if (SHIBYTE(v46) < 0) {
          operator delete((void *)v45);
        }
LABEL_40:
        if ((SHIBYTE(v44) & 0x80000000) == 0) {
          return;
        }
        size_t v25 = (void *)__stra.__r_.__value_.__l.__size_;
LABEL_45:
        operator delete(v25);
        return;
      }
      uint64_t v27 = v44;
      *(std::string *)a4 = __stra;
      *(void *)(a4 + 24) = v27;
      *(_OWORD *)&__stra.__r_.__value_.__r.__words[1] = 0uLL;
      *(_OWORD *)(a4 + 32) = v45;
      *(void *)(a4 + 48) = v46;
      uint64_t v44 = 0;
      long long v45 = 0uLL;
      uint64_t v46 = 0;
      goto LABEL_68;
    }
  }
  BOOL v9 = sub_1C03170((char *)v5);
  long long __src = 0uLL;
  char v41 = 0;
  int v10 = *(_DWORD *)(a2 + 56);
  if (!v10) {
    goto LABEL_35;
  }
  unint64_t v11 = (uint64_t *)(*(void *)(a2 + 64) + 8);
  unint64_t v12 = (uint64_t *)sub_188CCE4((uint64_t)&__src, *(_DWORD *)(a2 + 56));
  sub_122CF90((uint64_t *)&__src, v12, v11, v10, *v41 - DWORD2(__src));
  int v13 = DWORD2(__src) + v10;
  DWORD2(__src) = v13;
  uint64_t v14 = v41;
  if (*v41 < v13) {
    *char v41 = v13;
  }
  if (!v13)
  {
LABEL_35:
    if (v9)
    {
      if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
      {
        sub_4200(&v34, v5->__r_.__value_.__l.__data_, v5->__r_.__value_.__l.__size_);
      }
      else
      {
        long long v34 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
        std::string::size_type v35 = v5->__r_.__value_.__r.__words[2];
      }
      sub_195692C(a4, 4, 0x7FFFFFFF, &v34);
      if ((SHIBYTE(v35) & 0x80000000) == 0) {
        goto LABEL_84;
      }
      unint64_t v26 = (void *)v34;
LABEL_83:
      operator delete(v26);
      goto LABEL_84;
    }
    if (sub_1C41674(a3, a2))
    {
      sub_1C41AEC((void *)a2, (const void **)&v5->__r_.__value_.__l.__data_, &__stra);
      if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0)
      {
        if (__stra.__r_.__value_.__l.__size_)
        {
          sub_4200(&__p, __stra.__r_.__value_.__l.__data_, __stra.__r_.__value_.__l.__size_);
LABEL_61:
          sub_195692C(a4, 1, 0, (long long *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
LABEL_81:
          if ((SHIBYTE(__stra.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_84;
          }
          unint64_t v26 = (void *)__stra.__r_.__value_.__r.__words[0];
          goto LABEL_83;
        }
        operator delete(__stra.__r_.__value_.__l.__data_);
      }
      else if (*((unsigned char *)&__stra.__r_.__value_.__s + 23))
      {
        std::string __p = __stra;
        goto LABEL_61;
      }
    }
    if ((*(unsigned char *)(a2 + 16) & 8) == 0) {
      goto LABEL_80;
    }
    unint64_t v28 = *(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    int v30 = (char)v29;
    if ((v29 & 0x80u) != 0) {
      uint64_t v29 = *(void *)(v28 + 8);
    }
    if (v29 != 2) {
      goto LABEL_80;
    }
    if (v30 < 0) {
      unint64_t v28 = *(void *)v28;
    }
    if (*(_WORD *)v28 == 22356)
    {
      std::string::size_type v31 = std::string::find(v5, 45, 0);
      if (v31 == -1)
      {
        if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0) {
          sub_4200(&v32, v5->__r_.__value_.__l.__data_, v5->__r_.__value_.__l.__size_);
        }
        else {
          std::string v32 = *v5;
        }
      }
      else
      {
        std::string::basic_string(&v32, v5, 0, v31, (std::allocator<char> *)&v47);
      }
      sub_1C02FDC((uint64_t)&v32, &__stra);
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v32.__r_.__value_.__l.__data_);
      }
      sub_1C41744(&__stra, a2, 0, a4);
    }
    else
    {
LABEL_80:
      sub_1C02FDC((uint64_t)v5, &__stra);
      sub_1C41744(&__stra, a2, 0, a4);
    }
    goto LABEL_81;
  }
  uint64_t v15 = (uint64_t *)(v14 + 2);
  uint64_t v16 = (uint64_t)&v14[2 * v13 + 2];
  while (1)
  {
    sub_12006A8((uint64_t)&__stra, *v15);
    uint64_t v17 = (unsigned __int8 *)(v46 & 0xFFFFFFFFFFFFFFFELL);
    uint64_t v18 = *(unsigned __int8 *)((v46 & 0xFFFFFFFFFFFFFFFELL) + 23);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v17[23];
    }
    else {
      uint64_t v19 = *((void *)v17 + 1);
    }
    std::string::size_type v20 = HIBYTE(v5->__r_.__value_.__r.__words[2]);
    int v21 = (char)v20;
    if ((v20 & 0x80u) != 0) {
      std::string::size_type v20 = v5->__r_.__value_.__l.__size_;
    }
    if (v19 != v20) {
      goto LABEL_32;
    }
    int v22 = v21 >= 0 ? v5 : (std::string *)v5->__r_.__value_.__r.__words[0];
    if ((v18 & 0x80) == 0) {
      break;
    }
    int v23 = memcmp(*(const void **)v17, v22, *(void *)((v46 & 0xFFFFFFFFFFFFFFFELL) + 8));
    sub_1200780((uint64_t)&__stra);
    if (!v23) {
      goto LABEL_51;
    }
LABEL_34:
    if (++v15 == (uint64_t *)v16) {
      goto LABEL_35;
    }
  }
  if (*(unsigned char *)((v46 & 0xFFFFFFFFFFFFFFFELL) + 23))
  {
    while (*v17 == v22->__r_.__value_.__s.__data_[0])
    {
      ++v17;
      int v22 = (std::string *)((char *)v22 + 1);
      if (!--v18) {
        goto LABEL_50;
      }
    }
LABEL_32:
    sub_1200780((uint64_t)&__stra);
    goto LABEL_34;
  }
LABEL_50:
  sub_1200780((uint64_t)&__stra);
LABEL_51:
  if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(&v36, v5->__r_.__value_.__l.__data_, v5->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v36 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    std::string::size_type v37 = v5->__r_.__value_.__r.__words[2];
  }
  sub_195692C(a4, 1, 0, &v36);
  if (SHIBYTE(v37) < 0)
  {
    unint64_t v26 = (void *)v36;
    goto LABEL_83;
  }
LABEL_84:
  sub_122CAD8(&__src);
}

void sub_1C42254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__dst,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
}

double sub_1C423EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(void *)a2 == *(void *)(a2 + 8))
  {
    sub_5E5C(&v56, (char *)&unk_2178514);
    sub_195692C(a4, 0, 0, &v56);
    if ((v57 & 0x80000000) == 0) {
      return result;
    }
    std::string::size_type size = (void *)v56;
    goto LABEL_74;
  }
  if ((*(unsigned char *)(a1 + 16) & 8) != 0)
  {
    unint64_t v8 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    int v10 = (char)v9;
    if ((v9 & 0x80u) != 0) {
      uint64_t v9 = *(void *)(v8 + 8);
    }
    if (v9 == 2)
    {
      if (v10 < 0) {
        unint64_t v8 = *(void *)v8;
      }
      if (*(_WORD *)v8 == 20554)
      {
        uint64_t v48 = sub_1FEA0DC((const std::string **)a2);
        if ((v48 & 0xFF00000000) != 0)
        {
          std::to_string(__p, v48);
          sub_1C41744(__p, a1, 1, (uint64_t)&__str);
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p[0].__r_.__value_.__l.__data_);
          }
          int data = (int)__str.__r_.__value_.__l.__data_;
          if (LODWORD(__str.__r_.__value_.__l.__data_) == 1) {
            goto LABEL_87;
          }
          if (*(void *)(a2 + 8) - *(void *)a2 == 72)
          {
            sub_1C42A50(a1, a2, (uint64_t)__p);
            if (v52 && LODWORD(__p[0].__r_.__value_.__l.__data_) == 1)
            {
              sub_1C42C98(a4, (uint64_t)__p);
              sub_1C43A90((uint64_t)__p);
              if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v55.__r_.__value_.__l.__data_);
              }
              goto LABEL_90;
            }
            sub_1C43A90((uint64_t)__p);
            int data = (int)__str.__r_.__value_.__l.__data_;
          }
          if ((data & 0xFFFFFFFB) != 0)
          {
LABEL_87:
            v50.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_2178514;
            v50.__r_.__value_.__l.__size_ = 0;
            sub_1C02C7C(__p, a2, &v50);
            if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v55.__r_.__value_.__l.__data_);
            }
            std::string v55 = __p[0];
            *(std::string *)a4 = __str;
            *(void *)(a4 + 24) = v54;
            *(_OWORD *)&__str.__r_.__value_.__r.__words[1] = 0uLL;
            uint64_t v54 = 0;
            double result = *(double *)&v55.__r_.__value_.__l.__data_;
            *(std::string *)(a4 + 32) = v55;
            memset(&v55, 0, sizeof(v55));
LABEL_90:
            if (SHIBYTE(v54) < 0)
            {
              std::string::size_type size = (void *)__str.__r_.__value_.__l.__size_;
              goto LABEL_74;
            }
            return result;
          }
          if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v55.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v54) < 0) {
            operator delete((void *)__str.__r_.__value_.__l.__size_);
          }
        }
      }
    }
  }
  unint64_t v11 = *(const std::string **)a2;
  unint64_t v12 = *(const std::string **)(a2 + 8);
  if (v12 == *(const std::string **)a2) {
    sub_66748();
  }
  if (SHIBYTE(v11->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(__p, v11->__r_.__value_.__l.__data_, v11->__r_.__value_.__l.__size_);
    unint64_t v11 = *(const std::string **)a2;
    unint64_t v12 = *(const std::string **)(a2 + 8);
  }
  else
  {
    long long v13 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v13;
  }
  if (v12 == v11) {
    sub_66748();
  }
  if (SHIBYTE(v11->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(&__str, v11->__r_.__value_.__l.__data_, v11->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v16 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v16;
  }
  if ((*(unsigned char *)(a1 + 16) & 8) != 0)
  {
    unint64_t v17 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    int v19 = (char)v18;
    if ((v18 & 0x80u) != 0) {
      uint64_t v18 = *(void *)(v17 + 8);
    }
    if (v18 == 2)
    {
      if (v19 < 0) {
        unint64_t v17 = *(void *)v17;
      }
      if (*(_WORD *)v17 == 22356)
      {
        std::string::size_type v20 = *(const std::string **)a2;
        if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3) >= 3)
        {
          if ((v20->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            size_t v21 = HIBYTE(v20->__r_.__value_.__r.__words[2]);
          }
          else {
            size_t v21 = v20->__r_.__value_.__l.__size_;
          }
          int v22 = &v50;
          sub_188DACC((uint64_t)&v50, v21 + 1);
          if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v22 = (std::string *)v50.__r_.__value_.__r.__words[0];
          }
          if (v21)
          {
            if ((v20->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v23 = v20;
            }
            else {
              int v23 = (const std::string *)v20->__r_.__value_.__r.__words[0];
            }
            memmove(v22, v23, v21);
          }
          *(_WORD *)((char *)&v22->__r_.__value_.__l.__data_ + v21) = 45;
          uint64_t v24 = *(const std::string **)a2;
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3) <= 2) {
            sub_66748();
          }
          std::string::pointer v27 = v24[2].__r_.__value_.__l.__data_;
          size_t v25 = v24 + 2;
          unint64_t v26 = v27;
          int v28 = SHIBYTE(v25->__r_.__value_.__r.__words[2]);
          if (v28 >= 0) {
            uint64_t v29 = (const std::string::value_type *)v25;
          }
          else {
            uint64_t v29 = v26;
          }
          if (v28 >= 0) {
            std::string::size_type v30 = HIBYTE(v25->__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v30 = v25->__r_.__value_.__l.__size_;
          }
          std::string::size_type v31 = std::string::append(&v50, v29, v30);
          std::string::size_type v32 = v31->__r_.__value_.__r.__words[0];
          v58[0] = v31->__r_.__value_.__l.__size_;
          *(void *)((char *)v58 + 7) = *(std::string::size_type *)((char *)&v31->__r_.__value_.__r.__words[1] + 7);
          char v33 = HIBYTE(v31->__r_.__value_.__r.__words[2]);
          v31->__r_.__value_.__l.__size_ = 0;
          v31->__r_.__value_.__r.__words[2] = 0;
          v31->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p[0].__r_.__value_.__l.__data_);
          }
          __p[0].__r_.__value_.__r.__words[0] = v32;
          __p[0].__r_.__value_.__l.__size_ = v58[0];
          *(std::string::size_type *)((char *)&__p[0].__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v58 + 7);
          *((unsigned char *)&__p[0].__r_.__value_.__s + 23) = v33;
          if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v50.__r_.__value_.__l.__data_);
          }
          long long v34 = *(const std::string **)a2;
          if (*(void *)(a2 + 8) == *(void *)a2) {
            sub_66748();
          }
          if ((v34->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            size_t v35 = HIBYTE(v34->__r_.__value_.__r.__words[2]);
          }
          else {
            size_t v35 = v34->__r_.__value_.__l.__size_;
          }
          long long v36 = &v50;
          sub_188DACC((uint64_t)&v50, v35 + 3);
          if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            long long v36 = (std::string *)v50.__r_.__value_.__r.__words[0];
          }
          if (v35)
          {
            if ((v34->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type v37 = v34;
            }
            else {
              std::string::size_type v37 = (const std::string *)v34->__r_.__value_.__r.__words[0];
            }
            memmove(v36, v37, v35);
          }
          *(_DWORD *)((char *)&v36->__r_.__value_.__l.__data_ + v35) = 9157092;
          int v38 = *(const std::string **)a2;
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3) <= 2) {
            sub_66748();
          }
          std::string::pointer v41 = v38[2].__r_.__value_.__l.__data_;
          uint64_t v39 = v38 + 2;
          uint64_t v40 = v41;
          int v42 = SHIBYTE(v39->__r_.__value_.__r.__words[2]);
          if (v42 >= 0) {
            char v43 = (const std::string::value_type *)v39;
          }
          else {
            char v43 = v40;
          }
          if (v42 >= 0) {
            std::string::size_type v44 = HIBYTE(v39->__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v44 = v39->__r_.__value_.__l.__size_;
          }
          long long v45 = std::string::append(&v50, v43, v44);
          std::string::size_type v46 = v45->__r_.__value_.__r.__words[0];
          v58[0] = v45->__r_.__value_.__l.__size_;
          *(void *)((char *)v58 + 7) = *(std::string::size_type *)((char *)&v45->__r_.__value_.__r.__words[1] + 7);
          char v47 = HIBYTE(v45->__r_.__value_.__r.__words[2]);
          v45->__r_.__value_.__l.__size_ = 0;
          v45->__r_.__value_.__r.__words[2] = 0;
          v45->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
          __str.__r_.__value_.__r.__words[0] = v46;
          __str.__r_.__value_.__l.__size_ = v58[0];
          *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v58 + 7);
          *((unsigned char *)&__str.__r_.__value_.__s + 23) = v47;
          if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v50.__r_.__value_.__l.__data_);
          }
        }
      }
    }
  }
  sub_1C41CD0(__p, a1, a3, a4);
  std::string::operator=((std::string *)(a4 + 32), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = (void *)__p[0].__r_.__value_.__r.__words[0];
LABEL_74:
    operator delete(size);
  }
  return result;
}

void sub_1C429A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
}

void sub_1C42A50(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(const std::string **)a2;
  if (*(void *)(a2 + 8) == *(void *)a2) {
    sub_66748();
  }
  if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(&__p, v5->__r_.__value_.__l.__data_, v5->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v7 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    __p.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v7;
  }
  uint64_t v9 = 0;
  v10[0] = 0;
  v10[1] = 0;
  long long v13 = &v9;
  char v14 = 0;
  uint64_t v9 = (std::string *)operator new(0x18uLL);
  v10[0] = v9;
  v10[1] = &v9[1];
  v10[0] = sub_18914E4((uint64_t)&v10[1], (long long *)&__p, &v16, (char *)v9);
  uint64_t v8 = sub_1FEA0DC((const std::string **)&v9);
  long long v13 = &v9;
  sub_1891624((void ***)&v13);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((v8 & 0xFF00000000) == 0) {
    goto LABEL_17;
  }
  std::to_string(&__p, v8);
  sub_1C41744(&__p, a1, 1, (uint64_t)&v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((v9 & 0xFFFFFFFB) == 0)
  {
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v12.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v11) < 0) {
      operator delete(v10[0]);
    }
LABEL_17:
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 56) = 0;
    return;
  }
  if (*(void *)(a2 + 8) == *(void *)a2) {
    sub_66748();
  }
  std::string::operator=(&v12, *(const std::string **)a2);
  *(void *)a3 = v9;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v10;
  *(void *)(a3 + 24) = v11;
  *(std::string *)(a3 + 32) = v12;
  *(unsigned char *)(a3 + 56) = 1;
}

void sub_1C42C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C42C98(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_4200((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
  }
  uint64_t v5 = (unsigned char *)(a1 + 32);
  if (*(char *)(a2 + 55) < 0)
  {
    sub_4200(v5, *(void **)(a2 + 32), *(void *)(a2 + 40));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_1C42D2C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1C42D48@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 == v4)
  {
    uint64_t v9 = (long long *)*a1;
  }
  else
  {
    uint64_t v6 = 0;
    do
    {
      double result = (void *)sub_1BAC0C8(v3);
      if (*(_DWORD *)result > 1u && *(_DWORD *)result != 3) {
        ++v6;
      }
      v3 += 656;
    }
    while (v3 != v4);
    uint64_t v9 = (long long *)*a1;
    uint64_t v3 = a1[1];
    if (v6)
    {
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
      uint64_t v11 = a2;
      while (v9 != (long long *)v3)
      {
        double result = (void *)sub_1BAC0C8((uint64_t)v9);
        if (*(_DWORD *)result <= 3u && *(_DWORD *)result != 2) {
          double result = sub_1C43ADC(&v11, v9);
        }
        v9 += 41;
      }
      return result;
    }
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;

  return sub_1894EF8(a2, (uint64_t)v9, v3, 0x8F9C18F9C18F9C19 * ((v3 - (uint64_t)v9) >> 4));
}

void sub_1C42E5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1894FD8((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1C42E74(std::string *__str@<X1>, uint64_t a2@<X0>, unsigned char *a3@<X8>)
{
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
    if (size)
    {
      long long v7 = (std::string *)__str->__r_.__value_.__r.__words[0];
      goto LABEL_6;
    }
    goto LABEL_27;
  }
  std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if (!*((unsigned char *)&__str->__r_.__value_.__s + 23))
  {
LABEL_27:
    *a3 = 0;
    a3[56] = 0;
    return;
  }
  long long v7 = __str;
LABEL_6:
  while ((v7->__r_.__value_.__s.__data_[0] & 0x80000000) == 0
       && (_DefaultRuneLocale.__runetype[v7->__r_.__value_.__s.__data_[0]] & 0x400) != 0)
  {
    long long v7 = (std::string *)((char *)v7 + 1);
    if (!--size)
    {
      int v8 = std::stoi(__str, 0, 10);
      uint64_t v56 = 0;
      uint64_t v57 = 0;
      char v58 = 0;
      uint64_t v9 = *(int *)(a2 + 32);
      if (v9)
      {
        int v10 = v8;
        uint64_t v11 = *(void *)(a2 + 40);
        std::string v12 = (uint64_t *)sub_188CCE4((uint64_t)&v56, v9);
        sub_122CF04(&v56, v12, (uint64_t *)(v11 + 8), v9, *v58 - v57);
        uint64_t v13 = (int)v57 + v9;
        LODWORD(v57) = v13;
        char v14 = v58;
        if (*v58 < (int)v13) {
          *char v58 = v13;
        }
        uint64_t v15 = (uint64_t *)(v14 + 2);
        if (v13 >= 2)
        {
          long long v16 = (uint64_t *)(v14 + 4);
          uint64_t v17 = 8 * v13 - 8;
          do
          {
            uint64_t v18 = *v15;
            sub_11FFB0C((uint64_t)v63, *v16);
            sub_11FFB0C((uint64_t)&v59, v18);
            if (v10 - v67 >= 0) {
              unsigned int v19 = v10 - v67;
            }
            else {
              unsigned int v19 = v67 - v10;
            }
            if (v10 - v62 >= 0) {
              unsigned int v20 = v10 - v62;
            }
            else {
              unsigned int v20 = v62 - v10;
            }
            sub_11FFBD0((uint64_t)&v59);
            sub_11FFBD0((uint64_t)v63);
            if (v19 < v20) {
              uint64_t v15 = v16;
            }
            ++v16;
            v17 -= 8;
          }
          while (v17);
          char v14 = v58;
          uint64_t v13 = (int)v57;
        }
      }
      else
      {
        uint64_t v13 = 0;
        char v14 = 0;
        uint64_t v15 = 0;
      }
      if (v14) {
        char v43 = v14 + 2;
      }
      else {
        char v43 = 0;
      }
      if (v15 == (uint64_t *)&v43[2 * v13])
      {
        *a3 = 0;
        a3[56] = 0;
      }
      else
      {
        if (*(void *)(*v15 + 48)) {
          std::string::size_type v44 = *(uint64_t (****)())(*v15 + 48);
        }
        else {
          std::string::size_type v44 = &off_253F1E8;
        }
        sub_15B1040(v63, v44);
        uint64_t v45 = *v15;
        uint64_t v46 = *(void *)(*v15 + 40);
        if (v46) {
          char v47 = (uint64_t *)(v46 + 8);
        }
        else {
          char v47 = 0;
        }
        uint64_t v48 = *(int *)(v45 + 32);
        uint64_t v64 = 0;
        uint64_t v65 = 0;
        unint64_t v66 = 0;
        if (v48 == -1 || (sub_188CC60((uint64_t)&v64, v48), v48))
        {
          uint64_t v49 = 8 * v48;
          do
          {
            uint64_t v50 = *v47;
            if (v66 && (uint64_t v51 = (int)v65, (int)v65 < *(_DWORD *)v66))
            {
              LODWORD(v65) = v65 + 1;
              uint64_t v52 = *(void *)(v66 + 8 * v51 + 8);
            }
            else
            {
              char v53 = sub_120800C(v64);
              uint64_t v52 = sub_188CDC8((uint64_t)&v64, (uint64_t)v53);
            }
            sub_11FF8D4(v52, v50);
            ++v47;
            v49 -= 8;
          }
          while (v49);
        }
        sub_1C43B40((uint64_t)a3, (uint64_t)v63);
        sub_122C7D8(&v64);
        sub_15B10B4(v63);
      }
      sub_122CA58(&v56);
      return;
    }
  }
  uint64_t v59 = 0;
  uint64_t v60 = 0;
  char v61 = 0;
  int v21 = *(_DWORD *)(a2 + 56);
  if (v21)
  {
    int v22 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v23 = (uint64_t *)sub_188CCE4((uint64_t)&v59, v21);
    sub_122CF90(&v59, v23, v22, v21, *v61 - v60);
    v21 += v60;
    LODWORD(v60) = v21;
    uint64_t v24 = v61;
    if (*v61 < v21) {
      *char v61 = v21;
    }
  }
  else
  {
    uint64_t v24 = 0;
  }
  if (v24) {
    size_t v25 = (uint64_t *)(v24 + 2);
  }
  else {
    size_t v25 = 0;
  }
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    int64_t v55 = __str->__r_.__value_.__r.__words[2];
  }
  if (v21)
  {
    unint64_t v26 = &v25[v21];
    while (1)
    {
      sub_12006A8((uint64_t)v63, *v25);
      std::string::pointer v27 = (const void **)(v66 & 0xFFFFFFFFFFFFFFFELL);
      uint64_t v28 = *(unsigned __int8 *)((v66 & 0xFFFFFFFFFFFFFFFELL) + 23);
      if ((v28 & 0x80u) == 0) {
        uint64_t v29 = (void *)*(unsigned __int8 *)((v66 & 0xFFFFFFFFFFFFFFFELL) + 23);
      }
      else {
        uint64_t v29 = *(void **)((v66 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      std::string::size_type v30 = (void *)HIBYTE(v55);
      if (v55 < 0) {
        std::string::size_type v30 = __p[1];
      }
      if (v29 == v30)
      {
        if (v55 >= 0) {
          std::string::size_type v31 = __p;
        }
        else {
          std::string::size_type v31 = (void **)__p[0];
        }
        if ((v28 & 0x80) != 0)
        {
          int v32 = memcmp(*v27, v31, *(void *)((v66 & 0xFFFFFFFFFFFFFFFELL) + 8));
          sub_1200780((uint64_t)v63);
          if (!v32) {
            break;
          }
          goto LABEL_53;
        }
        if (!*(unsigned char *)((v66 & 0xFFFFFFFFFFFFFFFELL) + 23))
        {
LABEL_55:
          sub_1200780((uint64_t)v63);
          break;
        }
        while (*(unsigned __int8 *)v27 == *(unsigned __int8 *)v31)
        {
          std::string::pointer v27 = (const void **)((char *)v27 + 1);
          std::string::size_type v31 = (void **)((char *)v31 + 1);
          if (!--v28) {
            goto LABEL_55;
          }
        }
      }
      sub_1200780((uint64_t)v63);
LABEL_53:
      if (++v25 == v26)
      {
        size_t v25 = v26;
        break;
      }
    }
  }
  if (SHIBYTE(v55) < 0) {
    operator delete(__p[0]);
  }
  if (v61) {
    char v33 = v61 + 2;
  }
  else {
    char v33 = 0;
  }
  if (v25 == (uint64_t *)&v33[2 * (int)v60])
  {
    *a3 = 0;
    a3[56] = 0;
  }
  else
  {
    if (*(void *)(*v25 + 56)) {
      long long v34 = *(uint64_t (****)())(*v25 + 56);
    }
    else {
      long long v34 = &off_253F1E8;
    }
    sub_15B1040(v63, v34);
    uint64_t v35 = *(void *)(*v25 + 40);
    if (v35) {
      long long v36 = (uint64_t *)(v35 + 8);
    }
    else {
      long long v36 = 0;
    }
    uint64_t v37 = *(int *)(*v25 + 32);
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    unint64_t v66 = 0;
    if (v37 == -1 || (sub_188CC60((uint64_t)&v64, v37), v37))
    {
      uint64_t v38 = 8 * v37;
      do
      {
        uint64_t v39 = *v36;
        if (v66 && (uint64_t v40 = (int)v65, (int)v65 < *(_DWORD *)v66))
        {
          LODWORD(v65) = v65 + 1;
          uint64_t v41 = *(void *)(v66 + 8 * v40 + 8);
        }
        else
        {
          int v42 = sub_120800C(v64);
          uint64_t v41 = sub_188CDC8((uint64_t)&v64, (uint64_t)v42);
        }
        sub_11FF8D4(v41, v39);
        ++v36;
        v38 -= 8;
      }
      while (v38);
    }
    sub_1C43B40((uint64_t)a3, (uint64_t)v63);
    sub_122C7D8(&v64);
    sub_15B10B4(v63);
  }
  sub_122CAD8(&v59);
}

void sub_1C433A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  sub_15B10B4(&a26);
  sub_122CA58(&a15);
  if (a2 == 1)
  {
    __cxa_begin_catch(a1);
    *unint64_t v26 = 0;
    v26[56] = 0;
    __cxa_end_catch();
    JUMPOUT(0x1C4338CLL);
  }
  _Unwind_Resume(a1);
}

void sub_1C43474(unint64_t **a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  a4[2] = 0;
  a4[1] = 0;
  *a4 = a4 + 1;
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    int64x2_t v8 = vdupq_n_s64(0x7FF8000000000000uLL);
    do
    {
      unint64_t v41 = *v4;
      sub_1915828(v41, a2, v39);
      if (v40)
      {
        *(int64x2_t *)int v10 = v8;
        int64x2_t v37 = v8;
        sub_5E5C(v35, (char *)&unk_2178514);
        sub_195692C((uint64_t)__dst, 0, 0, (long long *)v35);
        uint64_t v33 = 0;
        long long v34 = 0;
        memset(v12, 0, 24);
        LODWORD(v42[0]) = sub_1A9D674(a3);
        sub_19569D0((uint64_t)v38, (uint64_t)v39, v10, (uint64_t)&v37, (uint64_t)__dst, &v33, (uint64_t *)v12, v42);
        v42[0] = (void **)v12;
        sub_1891624(v42);
        if (v34) {
          sub_20A69F0(v34);
        }
        if ((v25[7] & 0x80000000) != 0) {
          operator delete(__p);
        }
        if ((v23[7] & 0x80000000) != 0) {
          operator delete(__dst[1]);
        }
        if (v36 < 0) {
          operator delete(v35[0]);
        }
        sub_1E9FE70(__dst);
        if (!v40) {
          sub_1907A2C();
        }
        sub_5E5C(v10, (char *)&unk_2178514);
        sub_1E9FE74((char *)__dst, (uint64_t)v39, (uint64_t)v10, (uint64_t)v12);
        sub_1CDDFEC((uint64_t)v38, (uint64_t)v12);
        sub_1892A7C((uint64_t)v20, v20[1]);
        if (v19 < 0) {
          operator delete(v18);
        }
        if (v17 < 0) {
          operator delete(v16);
        }
        if (v15 < 0) {
          operator delete(v14);
        }
        if (v13 < 0) {
          operator delete(v12[3]);
        }
        v37.i64[0] = (uint64_t)v12;
        sub_1891624((void ***)&v37);
        if (v11 < 0) {
          operator delete(v10[0]);
        }
        sub_1C43CBC((uint64_t)a4, &v41, &v41, v38);
        if (v32 < 0) {
          operator delete(v31);
        }
        if (v30 < 0) {
          operator delete(v29);
        }
        if (v28 < 0) {
          operator delete(v27);
        }
        v12[0] = (void **)&v26;
        sub_1891624(v12);
        v12[0] = (void **)v25;
        sub_1891624(v12);
        v12[0] = (void **)v23;
        sub_1891624(v12);
        if (v22 < 0) {
          operator delete(__dst[0]);
        }
        sub_18933B8((uint64_t)v38);
        if (v40) {
          sub_1205E4C(v39);
        }
      }
      ++v4;
    }
    while (v4 != v5);
  }
}

void sub_1C43724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  if (LOBYTE(STACK[0x530])) {
    sub_1205E4C(&STACK[0x458]);
  }
  sub_1C124BC(a12, *(void **)(a12 + 8));
  _Unwind_Resume(a1);
}

void sub_1C437AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,std::__shared_weak_count *a59)
{
  *(void *)(v59 - 96) = &a17;
  sub_1891624((void ***)(v59 - 96));
  if (a59) {
    sub_20A69F0(a59);
  }
  sub_1892110((uint64_t)&a37);
  JUMPOUT(0x1C437D4);
}

int *sub_1C437E8@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v3 = *((void *)result + 14);
  if (v3) {
    uint64_t v4 = v3 + 8;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = result[26];
  if (v5)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 8 * v5;
    do
    {
      int64x2_t v8 = (long long *)(*(void *)(*(void *)v4 + 48) & 0xFFFFFFFFFFFFFFFELL);
      if ((unint64_t)v6 >= *(void *)(a2 + 16))
      {
        double result = (int *)sub_1D740((char **)a2, (uint64_t)v8);
        uint64_t v6 = result;
      }
      else
      {
        double result = (int *)sub_1962E70((void *)a2, v8);
        v6 += 6;
      }
      *(void *)(a2 + 8) = v6;
      v4 += 8;
      v7 -= 8;
    }
    while (v7);
  }
  return result;
}

void sub_1C43884(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1891624((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1C4389C(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v3 = *(void *)(a1 + 112);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(int *)(a1 + 104);
  if (v5)
  {
    uint64_t v6 = &v4[v5];
    do
    {
      uint64_t v7 = *v4;
      uint64_t v8 = *(int *)(*v4 + 32);
      if (v8)
      {
        uint64_t v18 = 0;
        uint64_t v19 = 0;
        unsigned int v20 = 0;
        uint64_t v9 = *(void *)(v7 + 40);
        if (v9) {
          int v10 = (uint64_t *)(v9 + 8);
        }
        else {
          int v10 = 0;
        }
        if (v8 != -1) {
          sub_188CC60((uint64_t)&v18, v8);
        }
        uint64_t v11 = 8 * v8;
        do
        {
          uint64_t v12 = *v10;
          if (v20 && (uint64_t v13 = (int)v19, (int)v19 < *v20))
          {
            LODWORD(v19) = v19 + 1;
            char v14 = *(std::string **)&v20[2 * v13 + 2];
          }
          else
          {
            char v15 = sub_128E984(v18);
            char v14 = (std::string *)sub_188CDC8((uint64_t)&v18, (uint64_t)v15);
          }
          sub_128E920(v14, v12);
          ++v10;
          v11 -= 8;
        }
        while (v11);
        unint64_t v16 = a2[1];
        if (v16 >= a2[2])
        {
          uint64_t v17 = sub_1BBB2D8(a2, (uint64_t)&v18);
        }
        else
        {
          sub_1BBB3E0((std::string *)a2[1], (uint64_t)&v18);
          uint64_t v17 = v16 + 24;
          a2[1] = v16 + 24;
        }
        a2[1] = v17;
        sub_122C9D8(&v18);
      }
      ++v4;
    }
    while (v4 != v6);
  }
}

void sub_1C439D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  uint64_t v12 = v11;
  *(void *)(v10 + 8) = v12;
  sub_122C9D8(&a10);
  a10 = (void **)v10;
  sub_1BBB7D8(&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_1C43A10(uint64_t a1, uint64_t a2)
{
  sub_1C437E8((int *)a1, (uint64_t)v6);
  uint64_t v4 = sub_1A02884(v6, a2, *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v7 = (void **)v6;
  sub_1891624(&v7);
  return v4;
}

void sub_1C43A78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1891624((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1C43A90(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    if (*(char *)(a1 + 31) < 0) {
      operator delete(*(void **)(a1 + 8));
    }
  }
  return a1;
}

uint64_t **sub_1C43ADC(uint64_t **a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = (*a1)[1];
  if (v4 >= (*a1)[2])
  {
    uint64_t v5 = sub_1898C18(*a1, a2);
  }
  else
  {
    sub_1891E80((*a1)[1], a2);
    uint64_t v5 = v4 + 656;
    v3[1] = v4 + 656;
  }
  v3[1] = v5;
  return a1;
}

void sub_1C43B38(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1C43B40(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C43C1C((std::string *)a1, a2);
  v4[1].__r_.__value_.__l.__size_ = 0;
  v4[1].__r_.__value_.__r.__words[2] = 0;
  p_std::string::size_type size = (uint64_t *)&v4[1].__r_.__value_.__l.__size_;
  v4[2].__r_.__value_.__r.__words[0] = 0;
  if (*(void *)(a2 + 32))
  {
    if (a2 != a1)
    {
      int v6 = *(_DWORD *)(a2 + 40);
      if (v6)
      {
        uint64_t v7 = *(void *)(a2 + 48);
        uint64_t v8 = (uint64_t *)sub_188CCE4((uint64_t)&v4[1].__r_.__value_.__l.__size_, v6);
        sub_122CC58(p_size, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 48) - *(_DWORD *)(a1 + 40));
        int v9 = *(_DWORD *)(a1 + 40) + v6;
        *(_DWORD *)(a1 + 40) = v9;
        uint64_t v10 = *(int **)(a1 + 48);
        if (*v10 < v9) {
          *uint64_t v10 = v9;
        }
      }
    }
  }
  else
  {
    *(_OWORD *)p_std::string::size_type size = *(_OWORD *)(a2 + 32);
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = 0;
    uint64_t v11 = *(void *)(a1 + 48);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a2 + 48) = v11;
  }
  *(unsigned char *)(a1 + 56) = 1;
  return a1;
}

std::string *sub_1C43C1C(std::string *a1, uint64_t a2)
{
  sub_15B0F64(a1, 0, 0);
  if (a1 != (std::string *)a2)
  {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
    if ((size & 2) != 0)
    {
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v5 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_151CEBC((uint64_t)a1, a2);
    }
    else {
      sub_15B1404(a1, a2);
    }
  }
  return a1;
}

uint64_t *sub_1C43CBC(uint64_t a1, unint64_t *a2, void *a3, long long *a4)
{
  uint64_t v6 = (uint64_t **)(a1 + 8);
  uint64_t v5 = *(uint64_t **)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = (uint64_t *)*v8;
        uint64_t v6 = (uint64_t **)v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = (uint64_t *)v8[1];
      if (!v5)
      {
        uint64_t v6 = (uint64_t **)(v8 + 1);
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = (uint64_t *)(a1 + 8);
LABEL_10:
    sub_1C43D84(a1, a3, a4, (uint64_t)v11);
    sub_11220BC((uint64_t **)a1, (uint64_t)v8, v6, v11[0]);
    uint64_t v8 = v11[0];
    v11[0] = 0;
    sub_1C12708((uint64_t)v11, 0);
  }
  return v8;
}

uint64_t sub_1C43D84@<X0>(uint64_t a1@<X0>, void *a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  uint64_t v8 = operator new(0x2B8uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  v8[4] = *a2;
  uint64_t result = sub_1891E80((uint64_t)(v8 + 5), a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1C43DE4(_Unwind_Exception *a1)
{
  sub_1C12708(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1C43DFC()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26280E0, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1C4ADDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1C4CDE8()
{
}

void sub_1C4CDF4()
{
}

void sub_1C4CE04()
{
}

void sub_1C4CE10()
{
}

void sub_1C4CE20()
{
}

void sub_1C4CE2C()
{
}

void sub_1C4CE3C()
{
}

void sub_1C4CE48()
{
}

void sub_1C4CE58()
{
}

void sub_1C4CE64()
{
}

void sub_1C4CE74()
{
}

void sub_1C4CE80()
{
}

void sub_1C4CE90()
{
}

void sub_1C4CE9C()
{
}

void sub_1C4CEAC()
{
}

void sub_1C4CEB8()
{
}

void sub_1C4CEC8()
{
}

void sub_1C4CED4()
{
}

void sub_1C4CEE4()
{
}

void sub_1C4CEF0()
{
}

void sub_1C4CF00()
{
}

void sub_1C4CF0C()
{
}

void sub_1C4CF1C()
{
}

void sub_1C4CF28()
{
}

void sub_1C4CF38()
{
}

void sub_1C4CF44()
{
}

void sub_1C4CF54()
{
}

void sub_1C4CF60()
{
}

void sub_1C4CF70()
{
}

void sub_1C4CF7C()
{
}

void sub_1C4CF8C()
{
}

void sub_1C4CF98()
{
}

void sub_1C4CFA8()
{
}

void sub_1C4CFB4()
{
}

void sub_1C4CFC4()
{
}

void sub_1C4CFD0()
{
}

void sub_1C4CFE0()
{
}

void sub_1C4CFEC()
{
}

void sub_1C4CFFC()
{
}

void sub_1C4D008()
{
}

void sub_1C4D018()
{
}

void sub_1C4D024()
{
}

void sub_1C4D034()
{
}

void sub_1C4D040()
{
}

void sub_1C4D050()
{
}

void sub_1C4D05C()
{
}

void sub_1C4D06C()
{
}

void sub_1C4D078()
{
}

void sub_1C4D088()
{
}

void sub_1C4D094()
{
}

void sub_1C4D0A4()
{
}

void sub_1C4D0B0()
{
}

void sub_1C4D0C0()
{
}

void sub_1C4D0CC()
{
}

void sub_1C4D0DC()
{
}

void sub_1C4D0E8()
{
}

void sub_1C4D0F8()
{
}

void sub_1C4D104()
{
}

void sub_1C4D114()
{
}

void sub_1C4D120()
{
}

void sub_1C4D130()
{
}

void sub_1C4D13C()
{
}

void sub_1C4D14C()
{
}

void sub_1C4D158()
{
}

void sub_1C4D168()
{
}

void sub_1C4D174()
{
}

void sub_1C4D184()
{
}

void sub_1C4D190()
{
}

void sub_1C4D1A0()
{
}

void sub_1C4D1AC()
{
}

void sub_1C4D1BC()
{
}

void sub_1C4D1C8()
{
}

void sub_1C4D1D8()
{
}

void sub_1C4D1E4()
{
}

void sub_1C4D1F4()
{
}

void sub_1C4D200()
{
}

void sub_1C4D210()
{
}

void sub_1C4D21C()
{
}

void sub_1C4D22C()
{
}

void sub_1C4D238()
{
}

void sub_1C4D248()
{
}

void sub_1C4D254()
{
}

void sub_1C4D264()
{
}

void sub_1C4D270()
{
}

void sub_1C4D280()
{
}

void sub_1C4D28C()
{
}

void sub_1C4D29C()
{
}

void sub_1C4D2A8()
{
}

void sub_1C4D2B8()
{
}

void sub_1C4D2C4()
{
}

void sub_1C4D2D4()
{
}

void sub_1C4D2E0()
{
}

void sub_1C4D2F0()
{
}

void sub_1C4D2FC()
{
}

void sub_1C4D30C()
{
}

void sub_1C4D318()
{
}

void sub_1C4D328()
{
}

void sub_1C4D334()
{
}

void sub_1C4D344()
{
}

void sub_1C4D350()
{
}

void sub_1C4D360()
{
}

void sub_1C4D36C()
{
}

void sub_1C4D37C()
{
}

void sub_1C4D388()
{
}

void sub_1C4D398()
{
}

void sub_1C4D3A4()
{
}

void sub_1C4D3B4()
{
}

void sub_1C4D3C0()
{
}

void sub_1C4D3D0()
{
}

void sub_1C4D3DC()
{
}

void sub_1C4D3EC()
{
}

void sub_1C4D3F8()
{
}

void sub_1C4D408()
{
}

void sub_1C4D414()
{
}

void sub_1C4D424()
{
}

void sub_1C4D430()
{
}

void sub_1C4D440()
{
}

void sub_1C4D44C()
{
}

void sub_1C4D45C()
{
}

void sub_1C4D468()
{
}

void sub_1C4D478()
{
}

void sub_1C4D484()
{
}

void sub_1C4D494()
{
}

void sub_1C4D4A0()
{
}

void sub_1C4D4B0()
{
}

void sub_1C4D4BC()
{
}

void sub_1C4D4CC()
{
}

void sub_1C4D4D8()
{
}

void sub_1C4D4E8()
{
}

void sub_1C4D4F4()
{
}

void sub_1C4D504()
{
}

void sub_1C4D510()
{
}

void sub_1C4D520()
{
}

void sub_1C4D52C()
{
}

void sub_1C4D53C()
{
}

void sub_1C4D548()
{
}

void sub_1C4D558()
{
}

void sub_1C4D564()
{
}

void sub_1C4D574()
{
}

void sub_1C4D580()
{
}

void sub_1C4D590()
{
}

void sub_1C4D59C()
{
}

void sub_1C4D5AC()
{
}

void sub_1C4D5B8()
{
}

void sub_1C4D5C8()
{
}

void sub_1C4D5D4()
{
}

void sub_1C4D5E4()
{
}

void sub_1C4D5F0()
{
}

void sub_1C4D600()
{
}

void sub_1C4D60C()
{
}

void sub_1C4D61C()
{
}

void sub_1C4D628()
{
}

void sub_1C4D638()
{
}

void sub_1C4D644()
{
}

void sub_1C4D654()
{
}

void sub_1C4D660()
{
}

void sub_1C4D670()
{
}

void sub_1C4D67C()
{
}

void sub_1C4D68C()
{
}

void sub_1C4D698()
{
}

void sub_1C4D6A8()
{
}

void sub_1C4D6B4()
{
}

void sub_1C4D6C4()
{
}

void sub_1C4D6D0()
{
}

void sub_1C4D6E0()
{
}

void sub_1C4D6EC()
{
}

void sub_1C4D6FC()
{
}

void sub_1C4D708()
{
}

void sub_1C4D718()
{
}

void sub_1C4D724()
{
}

void sub_1C4D734()
{
}

void sub_1C4D740()
{
}

void sub_1C4D750()
{
}

void sub_1C4D75C()
{
}

void sub_1C4D76C()
{
}

void sub_1C4D778()
{
}

void sub_1C4D788()
{
}

void sub_1C4D794()
{
}

void sub_1C4D7A4()
{
}

void sub_1C4D7B0()
{
}

void sub_1C4D7C0()
{
}

void sub_1C4D7CC()
{
}

void sub_1C4D7DC()
{
}

void sub_1C4D7E8()
{
}

void sub_1C4D7F8()
{
}

void sub_1C4D804()
{
}

void sub_1C4D814()
{
}

void sub_1C4D820()
{
}

void sub_1C4D830()
{
}

void sub_1C4D83C()
{
}

void sub_1C4D84C()
{
}

void sub_1C4D858()
{
}

void sub_1C4D868()
{
}

void sub_1C4D874()
{
}

void sub_1C4D884()
{
}

void sub_1C4D890()
{
}

void sub_1C4D8A0()
{
}

void sub_1C4D8AC()
{
}

void sub_1C4D8BC()
{
}

void sub_1C4D8C8()
{
}

void sub_1C4D8D8()
{
}

void sub_1C4D8E4()
{
}

void sub_1C4D8F4()
{
}

void sub_1C4D900()
{
}

void sub_1C4D910()
{
}

void sub_1C4D91C()
{
}

void sub_1C4D92C()
{
}

void sub_1C4D938()
{
}

void sub_1C4D948()
{
}

void sub_1C4D954()
{
}

void sub_1C4D964()
{
}

void sub_1C4D970()
{
}

void sub_1C4D980()
{
}

void sub_1C4D98C()
{
}

void sub_1C4D99C()
{
}

void sub_1C4D9A8()
{
}

void sub_1C4D9B8()
{
}

void sub_1C4D9C4()
{
}

void sub_1C4D9D4()
{
}

void sub_1C4D9E0()
{
}

void sub_1C4D9F0()
{
}

void sub_1C4D9FC()
{
}

void sub_1C4DA0C()
{
}

void sub_1C4DA18()
{
}

void sub_1C4DA28()
{
}

void sub_1C4DA34()
{
}

void sub_1C4DA44()
{
}

void sub_1C4DA50()
{
}

void sub_1C4DA60()
{
}

void sub_1C4DA6C()
{
}

void sub_1C4DA7C()
{
}

void sub_1C4DA88()
{
}

void sub_1C4DA98()
{
}

void sub_1C4DAA4()
{
}

void sub_1C4DAB4()
{
}

void sub_1C4DAC0()
{
}

void sub_1C4DAD0()
{
}

void sub_1C4DADC()
{
}

void sub_1C4DAEC()
{
}

void sub_1C4DAF8()
{
}

void sub_1C4DB08()
{
}

void sub_1C4DB14()
{
}

void sub_1C4DB24()
{
}

void sub_1C4DB30()
{
}

void sub_1C4DB40()
{
}

void sub_1C4DB4C()
{
}

void sub_1C4DB5C()
{
}

void sub_1C4DB68()
{
}

void sub_1C4DB78()
{
}

void sub_1C4DB84()
{
}

void sub_1C4DB94()
{
}

void sub_1C4DBA0()
{
}

void sub_1C4DBB0()
{
}

void sub_1C4DBBC()
{
}

void sub_1C4DBCC()
{
}

void sub_1C4DBD8()
{
}

void sub_1C4DBE8()
{
}

void sub_1C4DBF4()
{
}

void sub_1C4DC04()
{
}

void sub_1C4DC10()
{
}

void sub_1C4DC20()
{
}

void sub_1C4DC2C()
{
}

void sub_1C4DC3C()
{
}

void sub_1C4DC48()
{
}

void sub_1C4DC58()
{
}

void sub_1C4DC64()
{
}

void sub_1C4DC74()
{
}

void sub_1C4DC80()
{
}

void sub_1C4DC90()
{
}

void sub_1C4DC9C()
{
}

void sub_1C4DCAC()
{
}

void sub_1C4DCB8()
{
}

void sub_1C4DCC8()
{
}

void sub_1C4DCD4()
{
}

void sub_1C4DCE4()
{
}

void sub_1C4DCF0()
{
}

void sub_1C4DD00()
{
}

void sub_1C4DD0C()
{
}

void sub_1C4DD1C()
{
}

void sub_1C4DD28()
{
}

void sub_1C4DD34()
{
}

void sub_1C4DD40()
{
}

void sub_1C4DD4C()
{
}

void sub_1C4DD5C()
{
}

void sub_1C4DD68()
{
}

void sub_1C4DD78()
{
}

void sub_1C4DD84()
{
}

void sub_1C4DD94()
{
}

void sub_1C4DDA0()
{
}

void sub_1C4DDB0()
{
}

void sub_1C4DDBC()
{
}

void sub_1C4DDCC()
{
}

void sub_1C4DDD8()
{
}

void sub_1C4DDE8()
{
}

void sub_1C4DDF4()
{
}

void sub_1C4DE04()
{
}

void sub_1C4DE10()
{
}

void sub_1C4DE20()
{
}

void sub_1C4DE2C()
{
}

void sub_1C4DE3C()
{
}

void sub_1C4DE48()
{
}

void sub_1C4DE58()
{
}

void sub_1C4DE64()
{
}

void sub_1C4DE74()
{
}

void sub_1C4DE80()
{
}

void sub_1C4DE90()
{
}

void sub_1C4DE9C()
{
}

void sub_1C4DEAC()
{
}

void sub_1C4DEB8()
{
}

void sub_1C4DEC8()
{
}

void sub_1C4DED4()
{
}

void sub_1C4DEE4()
{
}

void sub_1C4DEF0()
{
}

void sub_1C4DF00()
{
}

void sub_1C4DF0C()
{
}

void sub_1C4DF1C()
{
}

void sub_1C4DF28()
{
}

void sub_1C4DF38()
{
}

void sub_1C4DF44()
{
}

void sub_1C4DF54()
{
}

void sub_1C4DF60()
{
}

void sub_1C4DF70()
{
}

void sub_1C4DF7C()
{
}

void sub_1C4DF8C()
{
}

void sub_1C4DF98()
{
}

void sub_1C4DFA8()
{
}

void sub_1C4DFB4()
{
}

void sub_1C4DFC4()
{
}

void sub_1C4DFD0()
{
}

void sub_1C4DFE0()
{
}

void sub_1C4DFEC()
{
}

void sub_1C4DFFC()
{
}

void sub_1C4E008()
{
}

void sub_1C4E018()
{
}

void sub_1C4E024()
{
}

void sub_1C4E034()
{
}

void sub_1C4E040()
{
}

void sub_1C4E050()
{
}

void sub_1C4E05C()
{
}

void sub_1C4E06C()
{
}

void sub_1C4E078()
{
}

void sub_1C4E088()
{
}

void sub_1C4E094()
{
}

void sub_1C4E0A4()
{
}

void sub_1C4E0B0()
{
}

void sub_1C4E0C0()
{
}

void sub_1C4E0CC()
{
}

void sub_1C4E0DC()
{
}

void sub_1C4E0E8()
{
}

void sub_1C4E0F8()
{
}

void sub_1C4E104()
{
}

void sub_1C4E114()
{
}

void sub_1C4E120()
{
}

void sub_1C4E130()
{
}

void sub_1C4E13C()
{
}

void sub_1C4E14C()
{
}

void sub_1C4E158()
{
}

void sub_1C4E168()
{
}

void sub_1C4E174()
{
}

void sub_1C4E184()
{
}

void sub_1C4E190()
{
}

void sub_1C4E1A0()
{
}

void sub_1C4E1AC()
{
}

void sub_1C4E1BC()
{
}

void sub_1C4E1C8()
{
}

void sub_1C4E1D8()
{
}

void sub_1C4E1E4()
{
}

void sub_1C4E1F4()
{
}

void sub_1C4E200()
{
}

void sub_1C4E210()
{
}

void sub_1C4E21C()
{
}

void sub_1C4E22C()
{
}

void sub_1C4E238()
{
}

void sub_1C4E248()
{
}

void sub_1C4E254()
{
}

void sub_1C4E264()
{
}

void sub_1C4E270()
{
}

void sub_1C4E280()
{
}

void sub_1C4E28C()
{
}

void sub_1C4E29C()
{
}

void sub_1C4E2A8()
{
}

void sub_1C4E2B8()
{
}

void sub_1C4E2C4()
{
}

void sub_1C4E2D4()
{
}

void sub_1C4E2E0()
{
}

void sub_1C4E2F0()
{
}

void sub_1C4E2FC()
{
}

void sub_1C4E30C()
{
}

void sub_1C4E318()
{
}

void sub_1C4E328()
{
}

void sub_1C4E334()
{
}

void sub_1C4E344()
{
}

void sub_1C4E350()
{
}

void sub_1C4E360()
{
}

void sub_1C4E36C()
{
}

void sub_1C4E37C()
{
}

void sub_1C4E388()
{
}

void sub_1C4E398()
{
}

void sub_1C4E3A4()
{
}

void sub_1C4E3B4()
{
}

void sub_1C4E3C0()
{
}

void sub_1C4E3D0()
{
}

void sub_1C4E3DC()
{
}

void sub_1C4E3EC()
{
}

void sub_1C4E3F8()
{
}

void sub_1C4E408()
{
}

void sub_1C4E414()
{
}

void sub_1C4E424()
{
}

void sub_1C4E430()
{
}

void sub_1C4E440()
{
}

void sub_1C4E44C()
{
}

void sub_1C4E45C()
{
}

void sub_1C4E468()
{
}

void sub_1C4E478()
{
}

void sub_1C4E484()
{
}

void sub_1C4E494()
{
}

void sub_1C4E4A0()
{
}

void sub_1C4E4B0()
{
}

void sub_1C4E4BC()
{
}

void sub_1C4E4CC()
{
}

void sub_1C4E4D8()
{
}

void sub_1C4E4E8()
{
}

void sub_1C4E4F4()
{
}

void sub_1C4E504()
{
}

void sub_1C4E510()
{
}

void sub_1C4E520()
{
}

void sub_1C4E52C()
{
}

void sub_1C4E53C()
{
}

void sub_1C4E548()
{
}

void sub_1C4E558()
{
}

void sub_1C4E564()
{
}

void sub_1C4E574()
{
}

void sub_1C4E580()
{
}

void sub_1C4E590()
{
}

void sub_1C4E59C()
{
}

void sub_1C4E5AC()
{
}

void sub_1C4E5B8()
{
}

void sub_1C4E5C8()
{
}

void sub_1C4E5D4()
{
}

void sub_1C4E5E4()
{
}

void sub_1C4E5F0()
{
}

void sub_1C4E600()
{
}

void sub_1C4E60C()
{
}

void sub_1C4E61C()
{
}

void sub_1C4E628()
{
}

void sub_1C4E638()
{
}

void sub_1C4E644()
{
}

void sub_1C4E654()
{
}

void sub_1C4E660()
{
}

void sub_1C4E670()
{
}

void sub_1C4E67C()
{
}

void sub_1C4E68C()
{
}

void sub_1C4E698()
{
}

void sub_1C4E6A8()
{
}

void sub_1C4E6B4()
{
}

void sub_1C4E6C4()
{
}

void sub_1C4E6D0()
{
}

void sub_1C4E6E0()
{
}

void sub_1C4E6EC()
{
}

void sub_1C4E6FC()
{
}

void sub_1C4E708()
{
}

void sub_1C4E718()
{
}

void sub_1C4E724()
{
}

void sub_1C4E734()
{
}

void sub_1C4E740()
{
}

void sub_1C4E750()
{
}

void sub_1C4E75C()
{
}

void sub_1C4E76C()
{
}

void sub_1C4E778()
{
}

void sub_1C4E788()
{
}

void sub_1C4E794()
{
}

void sub_1C4E7A4()
{
}

void sub_1C4E7B0()
{
}

void sub_1C4E7C0()
{
}

void sub_1C4E7CC()
{
}

void sub_1C4E7DC()
{
}

void sub_1C4E7E8()
{
}

void sub_1C4E7F8()
{
}

void sub_1C4E804()
{
}

void sub_1C4E814()
{
}

void sub_1C4E820()
{
}

void sub_1C4E830()
{
}

void sub_1C4E83C()
{
}

void sub_1C4E84C()
{
}

void sub_1C4E858()
{
}

void sub_1C4E868()
{
}

void sub_1C4E874()
{
}

void sub_1C4E880()
{
}

void sub_1C4E894()
{
}

void sub_1C4E8A8()
{
}

void sub_1C4E8B0()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2628098 = 0;
  qword_26280A0 = 0;
  qword_26280A8 = 0;
  qword_2628098 = (uint64_t)operator new(0x18uLL);
  qword_26280A0 = qword_2628098;
  qword_26280A8 = qword_2628098 + 24;
  qword_26280A0 = (uint64_t)sub_18914E4((uint64_t)&qword_26280A8, (long long *)__p, v4, (char *)qword_2628098);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_26280B0 = 0;
  qword_26280B8 = 0;
  qword_26280C0 = 0;
  qword_26280B0 = (uint64_t)operator new(0x18uLL);
  qword_26280B8 = qword_26280B0;
  qword_26280C0 = qword_26280B0 + 24;
  qword_26280B8 = (uint64_t)sub_18914E4((uint64_t)&qword_26280C0, (long long *)__p, v4, (char *)qword_26280B0);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_26280C8 = 0;
  qword_26280D0 = 0;
  qword_26280D8 = 0;
  qword_26280C8 = (uint64_t)operator new(0x18uLL);
  qword_26280D0 = qword_26280C8;
  qword_26280D8 = qword_26280C8 + 24;
  qword_26280D0 = (uint64_t)sub_18914E4((uint64_t)&qword_26280D8, (long long *)__p, v4, (char *)qword_26280C8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1C43DFC();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26280F8, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_2628120, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_1C4EF6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_1C4F11C(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_DWORD *)(a2 + 32) = 1065353216;
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 != v4)
  {
    do
    {
      uint64_t v5 = sub_69134(v3);
      sub_1C4F2AC(v5, __p);
      if (*(_DWORD *)sub_1BAC0C8(v3) == 4 || *(_DWORD *)sub_1BAC0C8(v3) == 3)
      {
        if (*(_DWORD *)sub_1BAC0C8(v3) == 3)
        {
          char v6 = sub_DF0884((void *)a2, (uint64_t)__p);
          int v7 = v6;
          if (v6)
          {
            int v8 = *((_DWORD *)v6 + 10);
            if (v8 > *(_DWORD *)(sub_1BAC0C8(v3) + 4)) {
              *((_DWORD *)v7 + 10) = *(_DWORD *)(sub_1BAC0C8(v3) + 4);
            }
          }
          else
          {
            int v9 = *(_DWORD *)(sub_1BAC0C8(v3) + 4);
            uint64_t v12 = __p;
            *((_DWORD *)sub_DF0AB4(a2, (uint64_t)__p, (uint64_t)&unk_20F06E0, (long long **)&v12) + 10) = v9;
          }
        }
      }
      else
      {
        uint64_t v12 = __p;
        *((_DWORD *)sub_DF0AB4(a2, (uint64_t)__p, (uint64_t)&unk_20F06E0, (long long **)&v12) + 10) = 0;
      }
      if (v11 < 0) {
        operator delete(__p[0]);
      }
      v3 += 656;
    }
    while (v3 != v4);
  }
}

void sub_1C4F27C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1899364(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_1C4F2AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_6BAC((uint64_t)&v16);
  int v4 = *(char *)(a1 + 47);
  if (v4 >= 0) {
    uint64_t v5 = a1 + 24;
  }
  else {
    uint64_t v5 = *(void *)(a1 + 24);
  }
  if (v4 >= 0) {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 47);
  }
  else {
    uint64_t v6 = *(void *)(a1 + 32);
  }
  int v7 = sub_188FC78(&v16, v5, v6);
  int v8 = sub_188FC78(v7, (uint64_t)", ", 2);
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v10 = a1 + 96;
  uint64_t v9 = v11;
  int v12 = *(char *)(v10 + 23);
  if (v12 >= 0) {
    uint64_t v13 = v10;
  }
  else {
    uint64_t v13 = v9;
  }
  if (v12 >= 0) {
    uint64_t v14 = *(unsigned __int8 *)(v10 + 23);
  }
  else {
    uint64_t v14 = *(void *)(v10 + 8);
  }
  sub_188FC78(v8, v13, v14);
  sub_1121604((uint64_t)v17, a2);
  if (v18 < 0) {
    operator delete((void *)v17[8]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1C4F430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1C4F444(uint64_t a1)
{
  memset(v20, 0, sizeof(v20));
  int v21 = 1065353216;
  uint64_t v17 = 0;
  unint64_t v18 = 0;
  unint64_t v19 = 0;
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v1 = a1 + 56;
  if (v2 == v3)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v10 = *(void *)(a1 + 56);
  }
  else
  {
    do
    {
      if (*(_DWORD *)(v2 + 768))
      {
        unint64_t v5 = v18;
        if (v18 >= v19)
        {
          uint64_t v6 = sub_19C2084(&v17, v2);
        }
        else
        {
          sub_1907A78(v18, v2);
          uint64_t v6 = v5 + 776;
        }
        unint64_t v18 = v6;
      }
      else
      {
        int v7 = (uint64_t *)sub_69134(v2);
        sub_1C4F624(v7, __p);
        if (!sub_1B11FBC(v20, (unsigned __int8 *)__p))
        {
          sub_24AFC((uint64_t)v20, (uint64_t)__p, (uint64_t)__p);
          unint64_t v8 = v18;
          if (v18 >= v19)
          {
            uint64_t v9 = sub_19C2084(&v17, v2);
          }
          else
          {
            sub_1907A78(v18, v2);
            uint64_t v9 = v8 + 776;
          }
          unint64_t v18 = v9;
        }
        if (v16 < 0) {
          operator delete(__p[0]);
        }
      }
      v2 += 776;
    }
    while (v2 != v3);
    uint64_t v2 = *(void *)(a1 + 56);
    uint64_t v10 = *(void *)(a1 + 64);
    uint64_t v11 = v17;
    uint64_t v12 = v18;
  }
  unint64_t v13 = 0xA3A0FD5C5F02A3A1 * ((v12 - v11) >> 3);
  if (0xA3A0FD5C5F02A3A1 * ((v10 - v2) >> 3) != v13) {
    sub_1C4FE80(v1, v11, v12, v13);
  }
  __p[0] = &v17;
  sub_1977124((void ***)__p);
  return sub_1898170((uint64_t)v20);
}

void sub_1C4F5C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, char a18)
{
  *(void *)(v18 - 56) = &a15;
  sub_1977124((void ***)(v18 - 56));
  sub_1898170((uint64_t)&a18);
  _Unwind_Resume(a1);
}

uint64_t sub_1C4F624@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  sub_6BAC((uint64_t)&v5);
  sub_1C4FDA4(*a1, a1[1], (uint64_t)&v5, (uint64_t)", ", v8);
  sub_1121604((uint64_t)v6, a2);
  if (v7 < 0) {
    operator delete((void *)v6[8]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1C4F768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1C4F77C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = (v4 - *a1) >> 4;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (0x8F9C18F9C18F9C19 * v5 > 1)
  {
    sub_1C4F11C(a1, (uint64_t)v19);
    unint64_t v8 = (long long *)*a1;
    uint64_t v9 = (long long *)a1[1];
    while (v8 != v9)
    {
      if (*(_DWORD *)sub_1BAC0C8((uint64_t)v8) == 3)
      {
        uint64_t v10 = sub_69134((uint64_t)v8);
        sub_1C4F2AC(v10, __p);
        uint64_t v11 = sub_DF0F28(v19, (uint64_t)__p);
        if (v11)
        {
          int v12 = *((_DWORD *)v11 + 10);
          if (v12 == *(_DWORD *)(sub_1BAC0C8((uint64_t)v8) + 4))
          {
            unint64_t v13 = a2[1];
            if (v13 >= a2[2])
            {
              uint64_t v14 = sub_1891D60(a2, v8);
            }
            else
            {
              sub_1891E80(a2[1], v8);
              uint64_t v14 = v13 + 656;
              a2[1] = v13 + 656;
            }
            a2[1] = v14;
          }
        }
        if (v18 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        unint64_t v15 = a2[1];
        if (v15 >= a2[2])
        {
          uint64_t v16 = sub_1891D60(a2, v8);
        }
        else
        {
          sub_1891E80(a2[1], v8);
          uint64_t v16 = v15 + 656;
          a2[1] = v15 + 656;
        }
        a2[1] = v16;
      }
      v8 += 41;
    }
    return (void *)sub_1899364((uint64_t)v19);
  }
  else
  {
    return sub_1894EF8(a2, v3, v4, 0x8F9C18F9C18F9C19 * v5);
  }
}

void *sub_1C4F994@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = (v4 - *a1) >> 4;
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  if (0x8F9C18F9C18F9C19 * v5 > 1)
  {
    sub_1C4F11C(a1, (uint64_t)v36);
    memset(v34, 0, sizeof(v34));
    int v35 = 1065353216;
    unint64_t v8 = (long long *)*a1;
    uint64_t v9 = (long long *)a1[1];
    if ((long long *)*a1 != v9)
    {
      do
      {
        if (*(_DWORD *)(sub_2ABCB4((uint64_t)v8) + 184) == 1)
        {
          uint64_t v10 = (uint64_t *)sub_69134((uint64_t)v8);
          sub_1C4F624(v10, v32);
          if (*(_DWORD *)sub_1BAC0C8((uint64_t)v8) == 4 || *(_DWORD *)sub_1BAC0C8((uint64_t)v8) == 3)
          {
            uint64_t v11 = sub_69134((uint64_t)v8);
            sub_1C4F2AC(v11, v30);
            uint64_t v12 = sub_1BAC0C8((uint64_t)v8);
            std::to_string(&v27, *(_DWORD *)(v12 + 4));
            if ((v31 & 0x80u) == 0) {
              unint64_t v13 = v30;
            }
            else {
              unint64_t v13 = (void **)v30[0];
            }
            if ((v31 & 0x80u) == 0) {
              std::string::size_type v14 = v31;
            }
            else {
              std::string::size_type v14 = (std::string::size_type)v30[1];
            }
            unint64_t v15 = std::string::insert(&v27, 0, (const std::string::value_type *)v13, v14);
            long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
            std::string::size_type v29 = v15->__r_.__value_.__r.__words[2];
            *(_OWORD *)std::string __p = v16;
            v15->__r_.__value_.__l.__size_ = 0;
            v15->__r_.__value_.__r.__words[2] = 0;
            v15->__r_.__value_.__r.__words[0] = 0;
            if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v27.__r_.__value_.__l.__data_);
            }
            if (!sub_1B11FBC(v34, (unsigned __int8 *)v32))
            {
              unint64_t v19 = sub_DF0F28(v36, (uint64_t)v30);
              long long v20 = sub_1B11FBC(v34, (unsigned __int8 *)__p);
              if (v19)
              {
                int v21 = v20;
                int v22 = *((_DWORD *)v19 + 10);
                if (v22 == *(_DWORD *)(sub_1BAC0C8((uint64_t)v8) + 4) && !v21)
                {
                  sub_24AFC((uint64_t)v34, (uint64_t)__p, (uint64_t)__p);
                  unint64_t v23 = a2[1];
                  if (v23 >= a2[2])
                  {
                    uint64_t v24 = sub_1891D60(a2, v8);
                  }
                  else
                  {
                    sub_1891E80(a2[1], v8);
                    uint64_t v24 = v23 + 656;
                    a2[1] = v23 + 656;
                  }
                  a2[1] = v24;
                }
              }
            }
            if (SHIBYTE(v29) < 0) {
              operator delete(__p[0]);
            }
            if ((char)v31 < 0) {
              operator delete(v30[0]);
            }
          }
          else if (!sub_1B11FBC(v34, (unsigned __int8 *)v32))
          {
            sub_24AFC((uint64_t)v34, (uint64_t)v32, (uint64_t)v32);
            unint64_t v25 = a2[1];
            if (v25 >= a2[2])
            {
              uint64_t v26 = sub_1891D60(a2, v8);
            }
            else
            {
              sub_1891E80(a2[1], v8);
              uint64_t v26 = v25 + 656;
              a2[1] = v25 + 656;
            }
            a2[1] = v26;
          }
          if (v33 < 0) {
            operator delete(v32[0]);
          }
        }
        else
        {
          unint64_t v17 = a2[1];
          if (v17 >= a2[2])
          {
            uint64_t v18 = sub_1891D60(a2, v8);
          }
          else
          {
            sub_1891E80(a2[1], v8);
            uint64_t v18 = v17 + 656;
            a2[1] = v17 + 656;
          }
          a2[1] = v18;
        }
        v8 += 41;
      }
      while (v8 != v9);
    }
    sub_1898170((uint64_t)v34);
    return (void *)sub_1899364((uint64_t)v36);
  }
  else
  {
    return sub_1894EF8(a2, v3, v4, 0x8F9C18F9C18F9C19 * v5);
  }
}

uint64_t sub_1C4FDA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5 = result;
  uint64_t v8 = a3;
  uint64_t v9 = a4;
  if (result != a2)
  {
    do
    {
      uint64_t result = sub_1C4FE10((uint64_t)&v8, v5);
      v5 += 24;
    }
    while (v5 != a2);
    a3 = v8;
    a4 = v9;
    uint64_t v5 = a2;
  }
  *a5 = v5;
  a5[1] = a3;
  a5[2] = a4;
  return result;
}

uint64_t sub_1C4FE10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    uint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    uint64_t v5 = v4;
  }
  sub_188FC78(v3, a2, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    size_t v7 = strlen(*(const char **)(a1 + 8));
    sub_188FC78(*(void **)a1, v6, v7);
  }
  return a1;
}

uint64_t sub_1C4FE80(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = a1 + 16;
  uint64_t v9 = *(void **)a1;
  if (0xA3A0FD5C5F02A3A1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_1A1A40C((void **)a1);
    if (a4 > 0x54741FAB8BE054) {
      sub_2E00();
    }
    unint64_t v10 = 0x4741FAB8BE054742 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xA3A0FD5C5F02A3A1 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x2A3A0FD5C5F02ALL) {
      unint64_t v11 = 0x54741FAB8BE054;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_19C2444((void *)a1, v11);
    uint64_t result = sub_19C249C(v8, a2, a3, *(void *)(a1 + 8));
    goto LABEL_11;
  }
  if (0xA3A0FD5C5F02A3A1 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3) < a4)
  {
    uint64_t v13 = a2 + 8 * ((uint64_t)(*(void *)(a1 + 8) - (void)v9) >> 3);
    sub_1A1528C(a2, v13, (uint64_t)v9);
    uint64_t result = sub_19C249C(v8, v13, a3, *(void *)(a1 + 8));
LABEL_11:
    *(void *)(a1 + 8) = result;
    return result;
  }
  sub_1A1528C(a2, a3, (uint64_t)v9);
  uint64_t v15 = v14;
  uint64_t result = *(void *)(a1 + 8);
  if (result != v14)
  {
    do
      uint64_t result = sub_1907F60(result - 776);
    while (result != v15);
  }
  *(void *)(a1 + 8) = v15;
  return result;
}

void sub_1C4FFFC(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1C50004(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1C5000C()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2628190, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1C56FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1C58FF8()
{
}

void sub_1C59004()
{
}

void sub_1C59014()
{
}

void sub_1C59020()
{
}

void sub_1C59030()
{
}

void sub_1C5903C()
{
}

void sub_1C5904C()
{
}

void sub_1C59058()
{
}

void sub_1C59068()
{
}

void sub_1C59074()
{
}

void sub_1C59084()
{
}

void sub_1C59090()
{
}

void sub_1C590A0()
{
}

void sub_1C590AC()
{
}

void sub_1C590BC()
{
}

void sub_1C590C8()
{
}

void sub_1C590D8()
{
}

void sub_1C590E4()
{
}

void sub_1C590F4()
{
}

void sub_1C59100()
{
}

void sub_1C59110()
{
}

void sub_1C5911C()
{
}

void sub_1C5912C()
{
}

void sub_1C59138()
{
}

void sub_1C59148()
{
}

void sub_1C59154()
{
}

void sub_1C59164()
{
}

void sub_1C59170()
{
}

void sub_1C59180()
{
}

void sub_1C5918C()
{
}

void sub_1C5919C()
{
}

void sub_1C591A8()
{
}

void sub_1C591B8()
{
}

void sub_1C591C4()
{
}

void sub_1C591D4()
{
}

void sub_1C591E0()
{
}

void sub_1C591F0()
{
}

void sub_1C591FC()
{
}

void sub_1C5920C()
{
}

void sub_1C59218()
{
}

void sub_1C59228()
{
}

void sub_1C59234()
{
}

void sub_1C59244()
{
}

void sub_1C59250()
{
}

void sub_1C59260()
{
}

void sub_1C5926C()
{
}

void sub_1C5927C()
{
}

void sub_1C59288()
{
}

void sub_1C59298()
{
}

void sub_1C592A4()
{
}

void sub_1C592B4()
{
}

void sub_1C592C0()
{
}

void sub_1C592D0()
{
}

void sub_1C592DC()
{
}

void sub_1C592EC()
{
}

void sub_1C592F8()
{
}

void sub_1C59308()
{
}

void sub_1C59314()
{
}

void sub_1C59324()
{
}

void sub_1C59330()
{
}

void sub_1C59340()
{
}

void sub_1C5934C()
{
}

void sub_1C5935C()
{
}

void sub_1C59368()
{
}

void sub_1C59378()
{
}

void sub_1C59384()
{
}

void sub_1C59394()
{
}

void sub_1C593A0()
{
}

void sub_1C593B0()
{
}

void sub_1C593BC()
{
}

void sub_1C593CC()
{
}

void sub_1C593D8()
{
}

void sub_1C593E8()
{
}

void sub_1C593F4()
{
}

void sub_1C59404()
{
}

void sub_1C59410()
{
}

void sub_1C59420()
{
}

void sub_1C5942C()
{
}

void sub_1C5943C()
{
}

void sub_1C59448()
{
}

void sub_1C59458()
{
}

void sub_1C59464()
{
}

void sub_1C59474()
{
}

void sub_1C59480()
{
}

void sub_1C59490()
{
}

void sub_1C5949C()
{
}

void sub_1C594AC()
{
}

void sub_1C594B8()
{
}

void sub_1C594C8()
{
}

void sub_1C594D4()
{
}

void sub_1C594E4()
{
}

void sub_1C594F0()
{
}

void sub_1C59500()
{
}

void sub_1C5950C()
{
}

void sub_1C5951C()
{
}

void sub_1C59528()
{
}

void sub_1C59538()
{
}

void sub_1C59544()
{
}

void sub_1C59554()
{
}

void sub_1C59560()
{
}

void sub_1C59570()
{
}

void sub_1C5957C()
{
}

void sub_1C5958C()
{
}

void sub_1C59598()
{
}

void sub_1C595A8()
{
}

void sub_1C595B4()
{
}

void sub_1C595C4()
{
}

void sub_1C595D0()
{
}

void sub_1C595E0()
{
}

void sub_1C595EC()
{
}

void sub_1C595FC()
{
}

void sub_1C59608()
{
}

void sub_1C59618()
{
}

void sub_1C59624()
{
}

void sub_1C59634()
{
}

void sub_1C59640()
{
}

void sub_1C59650()
{
}

void sub_1C5965C()
{
}

void sub_1C5966C()
{
}

void sub_1C59678()
{
}

void sub_1C59688()
{
}

void sub_1C59694()
{
}

void sub_1C596A4()
{
}

void sub_1C596B0()
{
}

void sub_1C596C0()
{
}

void sub_1C596CC()
{
}

void sub_1C596DC()
{
}

void sub_1C596E8()
{
}

void sub_1C596F8()
{
}

void sub_1C59704()
{
}

void sub_1C59714()
{
}

void sub_1C59720()
{
}

void sub_1C59730()
{
}

void sub_1C5973C()
{
}

void sub_1C5974C()
{
}

void sub_1C59758()
{
}

void sub_1C59768()
{
}

void sub_1C59774()
{
}

void sub_1C59784()
{
}

void sub_1C59790()
{
}

void sub_1C597A0()
{
}

void sub_1C597AC()
{
}

void sub_1C597BC()
{
}

void sub_1C597C8()
{
}

void sub_1C597D8()
{
}

void sub_1C597E4()
{
}

void sub_1C597F4()
{
}

void sub_1C59800()
{
}

void sub_1C59810()
{
}

void sub_1C5981C()
{
}

void sub_1C5982C()
{
}

void sub_1C59838()
{
}

void sub_1C59848()
{
}

void sub_1C59854()
{
}

void sub_1C59864()
{
}

void sub_1C59870()
{
}

void sub_1C59880()
{
}

void sub_1C5988C()
{
}

void sub_1C5989C()
{
}

void sub_1C598A8()
{
}

void sub_1C598B8()
{
}

void sub_1C598C4()
{
}

void sub_1C598D4()
{
}

void sub_1C598E0()
{
}

void sub_1C598F0()
{
}

void sub_1C598FC()
{
}

void sub_1C5990C()
{
}

void sub_1C59918()
{
}

void sub_1C59928()
{
}

void sub_1C59934()
{
}

void sub_1C59944()
{
}

void sub_1C59950()
{
}

void sub_1C59960()
{
}

void sub_1C5996C()
{
}

void sub_1C5997C()
{
}

void sub_1C59988()
{
}

void sub_1C59998()
{
}

void sub_1C599A4()
{
}

void sub_1C599B4()
{
}

void sub_1C599C0()
{
}

void sub_1C599D0()
{
}

void sub_1C599DC()
{
}

void sub_1C599EC()
{
}

void sub_1C599F8()
{
}

void sub_1C59A08()
{
}

void sub_1C59A14()
{
}

void sub_1C59A24()
{
}

void sub_1C59A30()
{
}

void sub_1C59A40()
{
}

void sub_1C59A4C()
{
}

void sub_1C59A5C()
{
}

void sub_1C59A68()
{
}

void sub_1C59A78()
{
}

void sub_1C59A84()
{
}

void sub_1C59A94()
{
}

void sub_1C59AA0()
{
}

void sub_1C59AB0()
{
}

void sub_1C59ABC()
{
}

void sub_1C59ACC()
{
}

void sub_1C59AD8()
{
}

void sub_1C59AE8()
{
}

void sub_1C59AF4()
{
}

void sub_1C59B04()
{
}

void sub_1C59B10()
{
}

void sub_1C59B20()
{
}

void sub_1C59B2C()
{
}

void sub_1C59B3C()
{
}

void sub_1C59B48()
{
}

void sub_1C59B58()
{
}

void sub_1C59B64()
{
}

void sub_1C59B74()
{
}

void sub_1C59B80()
{
}

void sub_1C59B90()
{
}

void sub_1C59B9C()
{
}

void sub_1C59BAC()
{
}

void sub_1C59BB8()
{
}

void sub_1C59BC8()
{
}

void sub_1C59BD4()
{
}

void sub_1C59BE4()
{
}

void sub_1C59BF0()
{
}

void sub_1C59C00()
{
}

void sub_1C59C0C()
{
}

void sub_1C59C1C()
{
}

void sub_1C59C28()
{
}

void sub_1C59C38()
{
}

void sub_1C59C44()
{
}

void sub_1C59C54()
{
}

void sub_1C59C60()
{
}

void sub_1C59C70()
{
}

void sub_1C59C7C()
{
}

void sub_1C59C8C()
{
}

void sub_1C59C98()
{
}

void sub_1C59CA8()
{
}

void sub_1C59CB4()
{
}

void sub_1C59CC4()
{
}

void sub_1C59CD0()
{
}

void sub_1C59CE0()
{
}

void sub_1C59CEC()
{
}

void sub_1C59CFC()
{
}

void sub_1C59D08()
{
}

void sub_1C59D18()
{
}

void sub_1C59D24()
{
}

void sub_1C59D34()
{
}

void sub_1C59D40()
{
}

void sub_1C59D50()
{
}

void sub_1C59D5C()
{
}

void sub_1C59D6C()
{
}

void sub_1C59D78()
{
}

void sub_1C59D88()
{
}

void sub_1C59D94()
{
}

void sub_1C59DA4()
{
}

void sub_1C59DB0()
{
}

void sub_1C59DC0()
{
}

void sub_1C59DCC()
{
}

void sub_1C59DDC()
{
}

void sub_1C59DE8()
{
}

void sub_1C59DF8()
{
}

void sub_1C59E04()
{
}

void sub_1C59E14()
{
}

void sub_1C59E20()
{
}

void sub_1C59E30()
{
}

void sub_1C59E3C()
{
}

void sub_1C59E4C()
{
}

void sub_1C59E58()
{
}

void sub_1C59E68()
{
}

void sub_1C59E74()
{
}

void sub_1C59E84()
{
}

void sub_1C59E90()
{
}

void sub_1C59EA0()
{
}

void sub_1C59EAC()
{
}

void sub_1C59EBC()
{
}

void sub_1C59EC8()
{
}

void sub_1C59ED8()
{
}

void sub_1C59EE4()
{
}

void sub_1C59EF4()
{
}

void sub_1C59F00()
{
}

void sub_1C59F10()
{
}

void sub_1C59F1C()
{
}

void sub_1C59F2C()
{
}

void sub_1C59F38()
{
}

void sub_1C59F44()
{
}

void sub_1C59F50()
{
}

void sub_1C59F5C()
{
}

void sub_1C59F6C()
{
}

void sub_1C59F78()
{
}

void sub_1C59F88()
{
}

void sub_1C59F94()
{
}

void sub_1C59FA4()
{
}

void sub_1C59FB0()
{
}

void sub_1C59FC0()
{
}

void sub_1C59FCC()
{
}

void sub_1C59FDC()
{
}

void sub_1C59FE8()
{
}

void sub_1C59FF8()
{
}

void sub_1C5A004()
{
}

void sub_1C5A014()
{
}

void sub_1C5A020()
{
}

void sub_1C5A030()
{
}

void sub_1C5A03C()
{
}

void sub_1C5A04C()
{
}

void sub_1C5A058()
{
}

void sub_1C5A068()
{
}

void sub_1C5A074()
{
}

void sub_1C5A084()
{
}

void sub_1C5A090()
{
}

void sub_1C5A0A0()
{
}

void sub_1C5A0AC()
{
}

void sub_1C5A0BC()
{
}

void sub_1C5A0C8()
{
}

void sub_1C5A0D8()
{
}

void sub_1C5A0E4()
{
}

void sub_1C5A0F4()
{
}

void sub_1C5A100()
{
}

void sub_1C5A110()
{
}

void sub_1C5A11C()
{
}

void sub_1C5A12C()
{
}

void sub_1C5A138()
{
}

void sub_1C5A148()
{
}

void sub_1C5A154()
{
}

void sub_1C5A164()
{
}

void sub_1C5A170()
{
}

void sub_1C5A180()
{
}

void sub_1C5A18C()
{
}

void sub_1C5A19C()
{
}

void sub_1C5A1A8()
{
}

void sub_1C5A1B8()
{
}

void sub_1C5A1C4()
{
}

void sub_1C5A1D4()
{
}

void sub_1C5A1E0()
{
}

void sub_1C5A1F0()
{
}

void sub_1C5A1FC()
{
}

void sub_1C5A20C()
{
}

void sub_1C5A218()
{
}

void sub_1C5A228()
{
}

void sub_1C5A234()
{
}

void sub_1C5A244()
{
}

void sub_1C5A250()
{
}

void sub_1C5A260()
{
}

void sub_1C5A26C()
{
}

void sub_1C5A27C()
{
}

void sub_1C5A288()
{
}

void sub_1C5A298()
{
}

void sub_1C5A2A4()
{
}

void sub_1C5A2B4()
{
}

void sub_1C5A2C0()
{
}

void sub_1C5A2D0()
{
}

void sub_1C5A2DC()
{
}

void sub_1C5A2EC()
{
}

void sub_1C5A2F8()
{
}

void sub_1C5A308()
{
}

void sub_1C5A314()
{
}

void sub_1C5A324()
{
}

void sub_1C5A330()
{
}

void sub_1C5A340()
{
}

void sub_1C5A34C()
{
}

void sub_1C5A35C()
{
}

void sub_1C5A368()
{
}

void sub_1C5A378()
{
}

void sub_1C5A384()
{
}

void sub_1C5A394()
{
}

void sub_1C5A3A0()
{
}

void sub_1C5A3B0()
{
}

void sub_1C5A3BC()
{
}

void sub_1C5A3CC()
{
}

void sub_1C5A3D8()
{
}

void sub_1C5A3E8()
{
}

void sub_1C5A3F4()
{
}

void sub_1C5A404()
{
}

void sub_1C5A410()
{
}

void sub_1C5A420()
{
}

void sub_1C5A42C()
{
}

void sub_1C5A43C()
{
}

void sub_1C5A448()
{
}

void sub_1C5A458()
{
}

void sub_1C5A464()
{
}

void sub_1C5A474()
{
}

void sub_1C5A480()
{
}

void sub_1C5A490()
{
}

void sub_1C5A49C()
{
}

void sub_1C5A4AC()
{
}

void sub_1C5A4B8()
{
}

void sub_1C5A4C8()
{
}

void sub_1C5A4D4()
{
}

void sub_1C5A4E4()
{
}

void sub_1C5A4F0()
{
}

void sub_1C5A500()
{
}

void sub_1C5A50C()
{
}

void sub_1C5A51C()
{
}

void sub_1C5A528()
{
}

void sub_1C5A538()
{
}

void sub_1C5A544()
{
}

void sub_1C5A554()
{
}

void sub_1C5A560()
{
}

void sub_1C5A570()
{
}

void sub_1C5A57C()
{
}

void sub_1C5A58C()
{
}

void sub_1C5A598()
{
}

void sub_1C5A5A8()
{
}

void sub_1C5A5B4()
{
}

void sub_1C5A5C4()
{
}

void sub_1C5A5D0()
{
}

void sub_1C5A5E0()
{
}

void sub_1C5A5EC()
{
}

void sub_1C5A5FC()
{
}

void sub_1C5A608()
{
}

void sub_1C5A618()
{
}

void sub_1C5A624()
{
}

void sub_1C5A634()
{
}

void sub_1C5A640()
{
}

void sub_1C5A650()
{
}

void sub_1C5A65C()
{
}

void sub_1C5A66C()
{
}

void sub_1C5A678()
{
}

void sub_1C5A688()
{
}

void sub_1C5A694()
{
}

void sub_1C5A6A4()
{
}

void sub_1C5A6B0()
{
}

void sub_1C5A6C0()
{
}

void sub_1C5A6CC()
{
}

void sub_1C5A6DC()
{
}

void sub_1C5A6E8()
{
}

void sub_1C5A6F8()
{
}

void sub_1C5A704()
{
}

void sub_1C5A714()
{
}

void sub_1C5A720()
{
}

void sub_1C5A730()
{
}

void sub_1C5A73C()
{
}

void sub_1C5A74C()
{
}

void sub_1C5A758()
{
}

void sub_1C5A768()
{
}

void sub_1C5A774()
{
}

void sub_1C5A784()
{
}

void sub_1C5A790()
{
}

void sub_1C5A7A0()
{
}

void sub_1C5A7AC()
{
}

void sub_1C5A7BC()
{
}

void sub_1C5A7C8()
{
}

void sub_1C5A7D8()
{
}

void sub_1C5A7E4()
{
}

void sub_1C5A7F4()
{
}

void sub_1C5A800()
{
}

void sub_1C5A810()
{
}

void sub_1C5A81C()
{
}

void sub_1C5A82C()
{
}

void sub_1C5A838()
{
}

void sub_1C5A848()
{
}

void sub_1C5A854()
{
}

void sub_1C5A864()
{
}

void sub_1C5A870()
{
}

void sub_1C5A880()
{
}

void sub_1C5A88C()
{
}

void sub_1C5A89C()
{
}

void sub_1C5A8A8()
{
}

void sub_1C5A8B8()
{
}

void sub_1C5A8C4()
{
}

void sub_1C5A8D4()
{
}

void sub_1C5A8E0()
{
}

void sub_1C5A8F0()
{
}

void sub_1C5A8FC()
{
}

void sub_1C5A90C()
{
}

void sub_1C5A918()
{
}

void sub_1C5A928()
{
}

void sub_1C5A934()
{
}

void sub_1C5A944()
{
}

void sub_1C5A950()
{
}

void sub_1C5A960()
{
}

void sub_1C5A96C()
{
}

void sub_1C5A97C()
{
}

void sub_1C5A988()
{
}

void sub_1C5A998()
{
}

void sub_1C5A9A4()
{
}

void sub_1C5A9B4()
{
}

void sub_1C5A9C0()
{
}

void sub_1C5A9D0()
{
}

void sub_1C5A9DC()
{
}

void sub_1C5A9EC()
{
}

void sub_1C5A9F8()
{
}

void sub_1C5AA08()
{
}

void sub_1C5AA14()
{
}

void sub_1C5AA24()
{
}

void sub_1C5AA30()
{
}

void sub_1C5AA40()
{
}

void sub_1C5AA4C()
{
}

void sub_1C5AA5C()
{
}

void sub_1C5AA68()
{
}

void sub_1C5AA78()
{
}

void sub_1C5AA84()
{
}

void sub_1C5AA90()
{
}

void sub_1C5AAA4()
{
}

void sub_1C5AAB8()
{
}

void sub_1C5AAC0()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2628148 = 0;
  qword_2628150 = 0;
  qword_2628158 = 0;
  qword_2628148 = (uint64_t)operator new(0x18uLL);
  qword_2628150 = qword_2628148;
  qword_2628158 = qword_2628148 + 24;
  qword_2628150 = (uint64_t)sub_18914E4((uint64_t)&qword_2628158, (long long *)__p, v4, (char *)qword_2628148);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2628160 = 0;
  qword_2628168 = 0;
  qword_2628170 = 0;
  qword_2628160 = (uint64_t)operator new(0x18uLL);
  qword_2628168 = qword_2628160;
  qword_2628170 = qword_2628160 + 24;
  qword_2628168 = (uint64_t)sub_18914E4((uint64_t)&qword_2628170, (long long *)__p, v4, (char *)qword_2628160);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2628178 = 0;
  qword_2628180 = 0;
  qword_2628188 = 0;
  qword_2628178 = (uint64_t)operator new(0x18uLL);
  qword_2628180 = qword_2628178;
  qword_2628188 = qword_2628178 + 24;
  qword_2628180 = (uint64_t)sub_18914E4((uint64_t)&qword_2628188, (long long *)__p, v4, (char *)qword_2628178);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1C5000C();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26281A8, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26281D0, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_1C5B17C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void *sub_1C5B32C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = qword_25502A8 + 24 * (((unsigned __int16)result & 0x1FF) - 1);
  if (*(char *)(v2 + 23) < 0) {
    return sub_4200((unsigned char *)a2, *(void **)v2, *(void *)(v2 + 8));
  }
  long long v3 = *(_OWORD *)v2;
  *(void *)(a2 + 16) = *(void *)(v2 + 16);
  *(_OWORD *)a2 = v3;
  return result;
}

BOOL sub_1C5B36C(long long **a1, uint64_t *a2, unsigned char *a3)
{
  if (!*a3) {
    return 0;
  }
  BOOL result = sub_1926AC0(a2, "zh");
  if (result)
  {
    int v5 = *a1;
    char v6 = a1[1];
    if (*a1 == v6)
    {
      int v8 = 0;
      int v7 = 0;
    }
    else
    {
      int v7 = 0;
      int v8 = 0;
      do
      {
        if (*((char *)v5 + 23) < 0)
        {
          sub_4200(__p, *(void **)v5, *((void *)v5 + 1));
        }
        else
        {
          long long v9 = *v5;
          uint64_t v12 = *((void *)v5 + 2);
          *(_OWORD *)std::string __p = v9;
        }
        int v10 = sub_1C02F48((char *)__p);
        if (SHIBYTE(v12) < 0) {
          operator delete(__p[0]);
        }
        v8 += v10;
        v7 += v10 ^ 1;
        int v5 = (long long *)((char *)v5 + 24);
      }
      while (v5 != v6);
    }
    return (double)v7 / (double)(v7 + v8) <= 0.7;
  }
  return result;
}

void sub_1C5B468(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1C5B484@<X0>(uint64_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  if (a2) {
    sub_1C5B4B4();
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  return sub_8A6F8((char *)a3, *a1, a1[1], 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3));
}

void sub_1C5B4B4()
{
}

void sub_1C5B768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,char a28)
{
  uint64_t v30 = v29;
  v28[1] = v30;
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  a21 = v28;
  sub_1891624((void ***)&a21);
  sub_1C5B954((uint64_t)&a28);
  _Unwind_Resume(a1);
}

BOOL sub_1C5B7F4(unsigned __int8 **a1)
{
  return sub_1891CA8(qword_25502A8, qword_25502B0, a1) != qword_25502B0;
}

BOOL sub_1C5B83C(uint64_t a1)
{
  uint64_t v1 = qword_25502A8;
  uint64_t v2 = qword_25502B0;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_4200(__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a1;
    uint64_t v10 = *(void *)(a1 + 16);
  }
  if (v1 != v2)
  {
    while (1)
    {
      if (v10 >= 0) {
        long long v3 = __p;
      }
      else {
        long long v3 = (void **)__p[0];
      }
      if (v10 >= 0) {
        size_t v4 = HIBYTE(v10);
      }
      else {
        size_t v4 = (size_t)__p[1];
      }
      uint64_t v5 = *(unsigned __int8 *)(v1 + 23);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v1;
      }
      else {
        uint64_t v6 = *(void *)v1;
      }
      if ((v5 & 0x80u) != 0) {
        uint64_t v5 = *(void *)(v1 + 8);
      }
      v11[0] = v6;
      v11[1] = v5;
      if (sub_1926C30(v11, v3, v4)) {
        break;
      }
      v1 += 24;
      if (v1 == v2)
      {
        uint64_t v1 = v2;
        break;
      }
    }
  }
  uint64_t v7 = qword_25502B0;
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  return v1 != v7;
}

void sub_1C5B91C(std::codecvt<char16_t, char, mbstate_t> *a1)
{
  std::codecvt<char16_t,char,__mbstate_t>::~codecvt(a1);

  operator delete();
}

uint64_t sub_1C5B954(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1C5B9C4(uint64_t a1@<X0>, __int16 *a2@<X1>, __int16 *a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)(a1 + 184) = 0;
  if (!*(void *)(a1 + 48)) {
    goto LABEL_23;
  }
  uint64_t v7 = a2;
  sub_1C5BE5C((void *)a4, 2 * ((char *)a3 - (char *)a2), 0);
  if (a3 != v7)
  {
    if (*(char *)(a4 + 23) >= 0) {
      unint64_t v8 = 10;
    }
    else {
      unint64_t v8 = (*(void *)(a4 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    sub_1C5BF34(a4, v8, 0);
    long long v9 = *(_OWORD *)(a1 + 136);
    v30[4] = *(_OWORD *)(a1 + 120);
    v30[5] = v9;
    long long v10 = *(_OWORD *)(a1 + 168);
    v30[6] = *(_OWORD *)(a1 + 152);
    v30[7] = v10;
    long long v11 = *(_OWORD *)(a1 + 72);
    v30[0] = *(_OWORD *)(a1 + 56);
    v30[1] = v11;
    __n128 v12 = *(__n128 *)(a1 + 88);
    long long v13 = *(_OWORD *)(a1 + 104);
    uint64_t v14 = *(unsigned __int8 *)(a4 + 23);
    if ((v14 & 0x80u) == 0) {
      int v15 = (char *)a4;
    }
    else {
      int v15 = *(char **)a4;
    }
    if ((v14 & 0x80u) != 0) {
      uint64_t v14 = *(void *)(a4 + 8);
    }
    char v16 = &v15[2 * v14];
    v30[2] = *(_OWORD *)(a1 + 88);
    void v30[3] = v13;
    do
    {
      int v17 = (*(uint64_t (**)(void, _OWORD *, __int16 *, __int16 *, __int16 **, char *, char *, uint64_t *, __n128))(**(void **)(a1 + 48) + 32))(*(void *)(a1 + 48), v30, v7, a3, &v29, v15, v16, &v28, v12);
      BOOL v18 = v29 == v7;
      *(void *)(a1 + 184) += (char *)v29 - (char *)v7;
      if (v18) {
        goto LABEL_34;
      }
      if (v17 != 1)
      {
        if (v17)
        {
          if (v17 != 3)
          {
LABEL_34:
            if ((*(unsigned char *)(a4 + 23) & 0x80) != 0) {
              goto LABEL_35;
            }
            goto LABEL_23;
          }
          if (*(char *)(a4 + 23) >= 0) {
            uint64_t v25 = a4;
          }
          else {
            uint64_t v25 = *(void *)a4;
          }
          sub_1C5BF34(a4, (uint64_t)&v15[-v25] >> 1, 0);
          sub_1C5BC84(a4, v7, a3);
        }
        else
        {
          if (*(char *)(a4 + 23) >= 0) {
            uint64_t v27 = a4;
          }
          else {
            uint64_t v27 = *(void *)a4;
          }
          sub_1C5BF34(a4, (v28 - v27) >> 1, 0);
        }
        return;
      }
      if (*(char *)(a4 + 23) >= 0) {
        uint64_t v19 = a4;
      }
      else {
        uint64_t v19 = *(void *)a4;
      }
      uint64_t v20 = v28 - v19;
      sub_1C5BF34(a4, v28 - v19, 0);
      uint64_t v21 = *(unsigned __int8 *)(a4 + 23);
      char v22 = v21;
      uint64_t v23 = *(void *)a4;
      if ((v21 & 0x80u) == 0) {
        uint64_t v23 = a4;
      }
      int v15 = (char *)(v23 + v20);
      if ((v21 & 0x80u) != 0) {
        uint64_t v21 = *(void *)(a4 + 8);
      }
      char v16 = (char *)(v23 + 2 * v21);
      uint64_t v7 = v29;
    }
    while (v29 < a3);
    if ((v22 & 0x80) == 0) {
      goto LABEL_23;
    }
LABEL_35:
    operator delete(*(void **)a4);
LABEL_23:
    int v24 = (void **)(a1 + 24);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
    {
      if (*(unsigned char *)(a1 + 47))
      {
        *(_OWORD *)a4 = *(_OWORD *)v24;
        *(void *)(a4 + 16) = *(void *)(a1 + 40);
        return;
      }
LABEL_41:
      sub_1C5BE00("wstring_convert: from_bytes error");
    }
    unint64_t v26 = *(void *)(a1 + 32);
    if (!v26) {
      goto LABEL_41;
    }
    sub_1C5C450((unsigned char *)a4, *v24, v26);
  }
}

void sub_1C5BC54(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C5BC84(uint64_t a1, __int16 *a2, __int16 *a3)
{
  size_t v4 = a2;
  LODWORD(v6) = *(char *)(a1 + 23);
  if ((v6 & 0x80000000) != 0)
  {
    uint64_t v7 = (char *)a3 - (char *)a2;
    if (a3 == a2) {
      return a1;
    }
    uint64_t v8 = *(void *)(a1 + 8);
    unint64_t v11 = *(void *)(a1 + 16);
    unint64_t v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    unint64_t v10 = *(void *)a1;
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    uint64_t v7 = (char *)a3 - (char *)a2;
    if (a3 == a2) {
      return a1;
    }
    uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
    unint64_t v9 = 10;
    unint64_t v10 = a1;
  }
  unint64_t v12 = v7 >> 1;
  if (v10 > (unint64_t)v4 || v10 + 2 * v8 + 2 <= (unint64_t)v4)
  {
    if (v9 - v8 < v12)
    {
      sub_1C5C048(a1, v9, v8 - v9 + v12, v8, v8, 0, 0);
      *(void *)(a1 + 8) = v8;
      LOBYTE(v6) = *(unsigned char *)(a1 + 23);
    }
    uint64_t v15 = a1;
    if ((v6 & 0x80) != 0) {
      uint64_t v15 = *(void *)a1;
    }
    char v16 = (__int16 *)(v15 + 2 * v8);
    while (v4 != a3)
    {
      __int16 v17 = *v4++;
      *v16++ = v17;
    }
    *char v16 = 0;
    unint64_t v18 = v12 + v8;
    if (*(char *)(a1 + 23) < 0) {
      *(void *)(a1 + 8) = v18;
    }
    else {
      *(unsigned char *)(a1 + 23) = v18 & 0x7F;
    }
  }
  else
  {
    sub_1C5C234(__p, v4, a3, v12);
    if ((v21 & 0x80u) == 0) {
      long long v13 = __p;
    }
    else {
      long long v13 = (void **)__p[0];
    }
    if ((v21 & 0x80u) == 0) {
      unint64_t v14 = v21;
    }
    else {
      unint64_t v14 = (unint64_t)__p[1];
    }
    sub_1C5C16C(a1, v13, v14);
    if ((char)v21 < 0) {
      operator delete(__p[0]);
    }
  }
  return a1;
}

void sub_1C5BDE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C5BE00(const char *a1)
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  sub_1C5C41C(exception, a1);
}

void sub_1C5BE48(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_1C5BE5C(void *a1, unint64_t a2, __int16 a3)
{
  long long v3 = a1;
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (a2 >= 0xB)
  {
    uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a2 | 3) != 0xB) {
      uint64_t v6 = a2 | 3;
    }
    a1 = sub_1C5BF00((uint64_t)a1, v6 + 1);
    v3[1] = a2;
    v3[2] = v7 | 0x8000000000000000;
    *long long v3 = a1;
  }
  else
  {
    *((unsigned char *)a1 + 23) = a2;
    if (!a2) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = 0;
  do
    *((_WORD *)a1 + v8++) = a3;
  while (a2 != v8);
LABEL_10:
  *((_WORD *)a1 + a2) = 0;
  return v3;
}

void *sub_1C5BF00(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    sub_188D718();
  }
  return operator new(2 * a2);
}

uint64_t sub_1C5BF34(uint64_t result, unint64_t a2, __int16 a3)
{
  if (*(char *)(result + 23) < 0)
  {
    unint64_t v3 = *(void *)(result + 8);
    if (v3 >= a2)
    {
      *(void *)(result + 8) = a2;
      BOOL result = *(void *)result;
      goto LABEL_7;
    }
    return sub_1C5BF78(result, a2 - v3, a3);
  }
  unint64_t v3 = *(unsigned __int8 *)(result + 23);
  if (v3 < a2) {
    return sub_1C5BF78(result, a2 - v3, a3);
  }
  *(unsigned char *)(result + 23) = a2 & 0x7F;
LABEL_7:
  *(_WORD *)(result + 2 * a2) = 0;
  return result;
}

uint64_t sub_1C5BF78(uint64_t a1, unint64_t a2, __int16 a3)
{
  if (a2)
  {
    LODWORD(v6) = *(char *)(a1 + 23);
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 8);
      unint64_t v9 = *(void *)(a1 + 16);
      unint64_t v8 = (v9 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      unint64_t v6 = HIBYTE(v9);
    }
    else
    {
      uint64_t v7 = *(unsigned __int8 *)(a1 + 23);
      unint64_t v8 = 10;
    }
    if (v8 - v7 < a2)
    {
      sub_1C5C048(a1, v8, a2 - v8 + v7, v7, v7, 0, 0);
      *(void *)(a1 + 8) = v7;
      LOBYTE(v6) = *(unsigned char *)(a1 + 23);
    }
    uint64_t v10 = a1;
    if ((v6 & 0x80) != 0) {
      uint64_t v10 = *(void *)a1;
    }
    unint64_t v11 = (_WORD *)(v10 + 2 * v7);
    unint64_t v12 = a2;
    do
    {
      *v11++ = a3;
      --v12;
    }
    while (v12);
    unint64_t v13 = v7 + a2;
    if (*(char *)(a1 + 23) < 0) {
      *(void *)(a1 + 8) = v13;
    }
    else {
      *(unsigned char *)(a1 + 23) = v13 & 0x7F;
    }
    *(_WORD *)(v10 + 2 * v13) = 0;
  }
  return a1;
}

void sub_1C5C048(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (0x7FFFFFFFFFFFFFF7 - a2 < a3) {
    sub_188D690();
  }
  unint64_t v13 = (char *)a1;
  if (*(char *)(a1 + 23) < 0) {
    unint64_t v13 = *(char **)a1;
  }
  unint64_t v14 = a3 + a2;
  if (a3 + a2 <= 2 * a2) {
    unint64_t v14 = 2 * a2;
  }
  uint64_t v15 = (v14 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((v14 | 3) != 0xB) {
    uint64_t v15 = v14 | 3;
  }
  if (v14 >= 0xB) {
    uint64_t v16 = v15 + 1;
  }
  else {
    uint64_t v16 = 11;
  }
  if (a2 <= 0x3FFFFFFFFFFFFFF2) {
    uint64_t v17 = v16;
  }
  else {
    uint64_t v17 = 0x7FFFFFFFFFFFFFF7;
  }
  unint64_t v18 = (char *)sub_1C5BF00(a1, v17);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  if (a5) {
    memmove(v18, v13, 2 * a5);
  }
  if (a4 != a6 + a5) {
    memmove(&v19[2 * a5 + 2 * a7], &v13[2 * a5 + 2 * a6], 2 * (a4 - (a6 + a5)));
  }
  if (a2 != 10) {
    operator delete(v13);
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 16) = v21 | 0x8000000000000000;
}

uint64_t sub_1C5C16C(uint64_t a1, void *__src, unint64_t a3)
{
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v6 = (*(void *)(a1 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else
  {
    unint64_t v6 = 10;
    uint64_t v7 = *(unsigned __int8 *)(a1 + 23);
  }
  if (v6 - v7 >= a3)
  {
    if (a3)
    {
      uint64_t v8 = a1;
      if ((*(unsigned char *)(a1 + 23) & 0x80) != 0) {
        uint64_t v8 = *(void *)a1;
      }
      memmove((void *)(v8 + 2 * v7), __src, 2 * a3);
      unint64_t v9 = v7 + a3;
      if (*(char *)(a1 + 23) < 0) {
        *(void *)(a1 + 8) = v9;
      }
      else {
        *(unsigned char *)(a1 + 23) = v9 & 0x7F;
      }
      *(_WORD *)(v8 + 2 * v9) = 0;
    }
  }
  else
  {
    sub_1C5C2D4(a1, v6, a3 - v6 + v7, v7, v7, 0, a3, __src);
  }
  return a1;
}

void *sub_1C5C234(void *result, __int16 *a2, __int16 *a3, unint64_t a4)
{
  size_t v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (a4 > 0xA)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a4 | 3) != 0xB) {
      uint64_t v8 = a4 | 3;
    }
    BOOL result = sub_1C5BF00((uint64_t)result, v8 + 1);
    v4[1] = a4;
    long long v4[2] = v9 | 0x8000000000000000;
    *size_t v4 = result;
    size_t v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    __int16 v10 = *a2++;
    *(_WORD *)size_t v4 = v10;
    size_t v4 = (void *)((char *)v4 + 2);
  }
  *(_WORD *)size_t v4 = 0;
  return result;
}

void sub_1C5C2D4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, const void *a8)
{
  if (0x7FFFFFFFFFFFFFF6 - a2 < a3) {
    sub_188D690();
  }
  uint64_t v15 = (char *)a1;
  if (*(char *)(a1 + 23) < 0) {
    uint64_t v15 = *(char **)a1;
  }
  unint64_t v16 = a3 + a2;
  if (a3 + a2 <= 2 * a2) {
    unint64_t v16 = 2 * a2;
  }
  uint64_t v17 = (v16 & 0xFFFFFFFFFFFFFFFCLL) + 4;
  if ((v16 | 3) != 0xB) {
    uint64_t v17 = v16 | 3;
  }
  if (v16 >= 0xB) {
    uint64_t v18 = v17 + 1;
  }
  else {
    uint64_t v18 = 11;
  }
  if (a2 > 0x3FFFFFFFFFFFFFF2) {
    uint64_t v19 = 0x7FFFFFFFFFFFFFF7;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v20 = sub_1C5BF00(a1, v19);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  if (a5) {
    memmove(v20, v15, 2 * a5);
  }
  if (a7) {
    memmove(&v21[a5], a8, 2 * a7);
  }
  uint64_t v24 = a4 - (a6 + a5);
  if (v24) {
    memmove(&v21[a5 + a7], &v15[2 * a5 + 2 * a6], 2 * v24);
  }
  if (a2 != 10) {
    operator delete(v15);
  }
  uint64_t v25 = a7 + a5 + v24;
  *(void *)a1 = v21;
  *(void *)(a1 + 8) = v25;
  *(void *)(a1 + 16) = v23 | 0x8000000000000000;
  v21[v25] = 0;
}

std::runtime_error *sub_1C5C41C(std::runtime_error *a1, const char *a2)
{
  BOOL result = std::runtime_error::runtime_error(a1, a2);
  return result;
}

void *sub_1C5C450(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0xA)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_188D690();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFCLL) + 4;
    if ((a3 | 3) != 0xB) {
      uint64_t v6 = a3 | 3;
    }
    uint64_t v7 = sub_1C5BF00((uint64_t)__dst, v6 + 1);
    v5[1] = a3;
    v5[2] = v8 | 0x8000000000000000;
    *uint64_t v5 = v7;
    uint64_t v5 = v7;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, 2 * a3 + 2);
}

void sub_1C5C4F4()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2628240, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1C634D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1C654E0()
{
}

void sub_1C654EC()
{
}

void sub_1C654FC()
{
}

void sub_1C65508()
{
}

void sub_1C65518()
{
}

void sub_1C65524()
{
}

void sub_1C65534()
{
}

void sub_1C65540()
{
}

void sub_1C65550()
{
}

void sub_1C6555C()
{
}

void sub_1C6556C()
{
}

void sub_1C65578()
{
}

void sub_1C65588()
{
}

void sub_1C65594()
{
}

void sub_1C655A4()
{
}

void sub_1C655B0()
{
}

void sub_1C655C0()
{
}

void sub_1C655CC()
{
}

void sub_1C655DC()
{
}

void sub_1C655E8()
{
}

void sub_1C655F8()
{
}

void sub_1C65604()
{
}

void sub_1C65614()
{
}

void sub_1C65620()
{
}

void sub_1C65630()
{
}

void sub_1C6563C()
{
}

void sub_1C6564C()
{
}

void sub_1C65658()
{
}

void sub_1C65668()
{
}

void sub_1C65674()
{
}

void sub_1C65684()
{
}

void sub_1C65690()
{
}

void sub_1C656A0()
{
}

void sub_1C656AC()
{
}

void sub_1C656BC()
{
}

void sub_1C656C8()
{
}

void sub_1C656D8()
{
}

void sub_1C656E4()
{
}

void sub_1C656F4()
{
}

void sub_1C65700()
{
}

void sub_1C65710()
{
}

void sub_1C6571C()
{
}

void sub_1C6572C()
{
}

void sub_1C65738()
{
}

void sub_1C65748()
{
}

void sub_1C65754()
{
}

void sub_1C65764()
{
}

void sub_1C65770()
{
}

void sub_1C65780()
{
}

void sub_1C6578C()
{
}

void sub_1C6579C()
{
}

void sub_1C657A8()
{
}

void sub_1C657B8()
{
}

void sub_1C657C4()
{
}

void sub_1C657D4()
{
}

void sub_1C657E0()
{
}

void sub_1C657F0()
{
}

void sub_1C657FC()
{
}

void sub_1C6580C()
{
}

void sub_1C65818()
{
}

void sub_1C65828()
{
}

void sub_1C65834()
{
}

void sub_1C65844()
{
}

void sub_1C65850()
{
}

void sub_1C65860()
{
}

void sub_1C6586C()
{
}

void sub_1C6587C()
{
}

void sub_1C65888()
{
}

void sub_1C65898()
{
}

void sub_1C658A4()
{
}

void sub_1C658B4()
{
}

void sub_1C658C0()
{
}

void sub_1C658D0()
{
}

void sub_1C658DC()
{
}

void sub_1C658EC()
{
}

void sub_1C658F8()
{
}

void sub_1C65908()
{
}

void sub_1C65914()
{
}

void sub_1C65924()
{
}

void sub_1C65930()
{
}

void sub_1C65940()
{
}

void sub_1C6594C()
{
}

void sub_1C6595C()
{
}

void sub_1C65968()
{
}

void sub_1C65978()
{
}

void sub_1C65984()
{
}

void sub_1C65994()
{
}

void sub_1C659A0()
{
}

void sub_1C659B0()
{
}

void sub_1C659BC()
{
}

void sub_1C659CC()
{
}

void sub_1C659D8()
{
}

void sub_1C659E8()
{
}

void sub_1C659F4()
{
}

void sub_1C65A04()
{
}

void sub_1C65A10()
{
}

void sub_1C65A20()
{
}

void sub_1C65A2C()
{
}

void sub_1C65A3C()
{
}

void sub_1C65A48()
{
}

void sub_1C65A58()
{
}

void sub_1C65A64()
{
}

void sub_1C65A74()
{
}

void sub_1C65A80()
{
}

void sub_1C65A90()
{
}

void sub_1C65A9C()
{
}

void sub_1C65AAC()
{
}

void sub_1C65AB8()
{
}

void sub_1C65AC8()
{
}

void sub_1C65AD4()
{
}

void sub_1C65AE4()
{
}

void sub_1C65AF0()
{
}

void sub_1C65B00()
{
}

void sub_1C65B0C()
{
}

void sub_1C65B1C()
{
}

void sub_1C65B28()
{
}

void sub_1C65B38()
{
}

void sub_1C65B44()
{
}

void sub_1C65B54()
{
}

void sub_1C65B60()
{
}

void sub_1C65B70()
{
}

void sub_1C65B7C()
{
}

void sub_1C65B8C()
{
}

void sub_1C65B98()
{
}

void sub_1C65BA8()
{
}

void sub_1C65BB4()
{
}

void sub_1C65BC4()
{
}

void sub_1C65BD0()
{
}

void sub_1C65BE0()
{
}

void sub_1C65BEC()
{
}

void sub_1C65BFC()
{
}

void sub_1C65C08()
{
}

void sub_1C65C18()
{
}

void sub_1C65C24()
{
}

void sub_1C65C34()
{
}

void sub_1C65C40()
{
}

void sub_1C65C50()
{
}

void sub_1C65C5C()
{
}

void sub_1C65C6C()
{
}

void sub_1C65C78()
{
}

void sub_1C65C88()
{
}

void sub_1C65C94()
{
}

void sub_1C65CA4()
{
}

void sub_1C65CB0()
{
}

void sub_1C65CC0()
{
}

void sub_1C65CCC()
{
}

void sub_1C65CDC()
{
}

void sub_1C65CE8()
{
}

void sub_1C65CF8()
{
}

void sub_1C65D04()
{
}

void sub_1C65D14()
{
}

void sub_1C65D20()
{
}

void sub_1C65D30()
{
}

void sub_1C65D3C()
{
}

void sub_1C65D4C()
{
}

void sub_1C65D58()
{
}

void sub_1C65D68()
{
}

void sub_1C65D74()
{
}

void sub_1C65D84()
{
}

void sub_1C65D90()
{
}

void sub_1C65DA0()
{
}

void sub_1C65DAC()
{
}

void sub_1C65DBC()
{
}

void sub_1C65DC8()
{
}

void sub_1C65DD8()
{
}

void sub_1C65DE4()
{
}

void sub_1C65DF4()
{
}

void sub_1C65E00()
{
}

void sub_1C65E10()
{
}

void sub_1C65E1C()
{
}

void sub_1C65E2C()
{
}

void sub_1C65E38()
{
}

void sub_1C65E48()
{
}

void sub_1C65E54()
{
}

void sub_1C65E64()
{
}

void sub_1C65E70()
{
}

void sub_1C65E80()
{
}

void sub_1C65E8C()
{
}

void sub_1C65E9C()
{
}

void sub_1C65EA8()
{
}

void sub_1C65EB8()
{
}

void sub_1C65EC4()
{
}

void sub_1C65ED4()
{
}

void sub_1C65EE0()
{
}

void sub_1C65EF0()
{
}

void sub_1C65EFC()
{
}

void sub_1C65F0C()
{
}

void sub_1C65F18()
{
}

void sub_1C65F28()
{
}

void sub_1C65F34()
{
}

void sub_1C65F44()
{
}

void sub_1C65F50()
{
}

void sub_1C65F60()
{
}

void sub_1C65F6C()
{
}

void sub_1C65F7C()
{
}

void sub_1C65F88()
{
}

void sub_1C65F98()
{
}

void sub_1C65FA4()
{
}

void sub_1C65FB4()
{
}

void sub_1C65FC0()
{
}

void sub_1C65FD0()
{
}

void sub_1C65FDC()
{
}

void sub_1C65FEC()
{
}

void sub_1C65FF8()
{
}

void sub_1C66008()
{
}

void sub_1C66014()
{
}

void sub_1C66024()
{
}

void sub_1C66030()
{
}

void sub_1C66040()
{
}

void sub_1C6604C()
{
}

void sub_1C6605C()
{
}

void sub_1C66068()
{
}

void sub_1C66078()
{
}

void sub_1C66084()
{
}

void sub_1C66094()
{
}

void sub_1C660A0()
{
}

void sub_1C660B0()
{
}

void sub_1C660BC()
{
}

void sub_1C660CC()
{
}

void sub_1C660D8()
{
}

void sub_1C660E8()
{
}

void sub_1C660F4()
{
}

void sub_1C66104()
{
}

void sub_1C66110()
{
}

void sub_1C66120()
{
}

void sub_1C6612C()
{
}

void sub_1C6613C()
{
}

void sub_1C66148()
{
}

void sub_1C66158()
{
}

void sub_1C66164()
{
}

void sub_1C66174()
{
}

void sub_1C66180()
{
}

void sub_1C66190()
{
}

void sub_1C6619C()
{
}

void sub_1C661AC()
{
}

void sub_1C661B8()
{
}

void sub_1C661C8()
{
}

void sub_1C661D4()
{
}

void sub_1C661E4()
{
}

void sub_1C661F0()
{
}

void sub_1C66200()
{
}

void sub_1C6620C()
{
}

void sub_1C6621C()
{
}

void sub_1C66228()
{
}

void sub_1C66238()
{
}

void sub_1C66244()
{
}

void sub_1C66254()
{
}

void sub_1C66260()
{
}

void sub_1C66270()
{
}

void sub_1C6627C()
{
}

void sub_1C6628C()
{
}

void sub_1C66298()
{
}

void sub_1C662A8()
{
}

void sub_1C662B4()
{
}

void sub_1C662C4()
{
}

void sub_1C662D0()
{
}

void sub_1C662E0()
{
}

void sub_1C662EC()
{
}

void sub_1C662FC()
{
}

void sub_1C66308()
{
}

void sub_1C66318()
{
}

void sub_1C66324()
{
}

void sub_1C66334()
{
}

void sub_1C66340()
{
}

void sub_1C66350()
{
}

void sub_1C6635C()
{
}

void sub_1C6636C()
{
}

void sub_1C66378()
{
}

void sub_1C66388()
{
}

void sub_1C66394()
{
}

void sub_1C663A4()
{
}

void sub_1C663B0()
{
}

void sub_1C663C0()
{
}

void sub_1C663CC()
{
}

void sub_1C663DC()
{
}

void sub_1C663E8()
{
}

void sub_1C663F8()
{
}

void sub_1C66404()
{
}

void sub_1C66414()
{
}

void sub_1C66420()
{
}

void sub_1C6642C()
{
}

void sub_1C66438()
{
}

void sub_1C66444()
{
}

void sub_1C66454()
{
}

void sub_1C66460()
{
}

void sub_1C66470()
{
}

void sub_1C6647C()
{
}

void sub_1C6648C()
{
}

void sub_1C66498()
{
}

void sub_1C664A8()
{
}

void sub_1C664B4()
{
}

void sub_1C664C4()
{
}

void sub_1C664D0()
{
}

void sub_1C664E0()
{
}

void sub_1C664EC()
{
}

void sub_1C664FC()
{
}

void sub_1C66508()
{
}

void sub_1C66518()
{
}

void sub_1C66524()
{
}

void sub_1C66534()
{
}

void sub_1C66540()
{
}

void sub_1C66550()
{
}

void sub_1C6655C()
{
}

void sub_1C6656C()
{
}

void sub_1C66578()
{
}

void sub_1C66588()
{
}

void sub_1C66594()
{
}

void sub_1C665A4()
{
}

void sub_1C665B0()
{
}

void sub_1C665C0()
{
}

void sub_1C665CC()
{
}

void sub_1C665DC()
{
}

void sub_1C665E8()
{
}

void sub_1C665F8()
{
}

void sub_1C66604()
{
}

void sub_1C66614()
{
}

void sub_1C66620()
{
}

void sub_1C66630()
{
}

void sub_1C6663C()
{
}

void sub_1C6664C()
{
}

void sub_1C66658()
{
}

void sub_1C66668()
{
}

void sub_1C66674()
{
}

void sub_1C66684()
{
}

void sub_1C66690()
{
}

void sub_1C666A0()
{
}

void sub_1C666AC()
{
}

void sub_1C666BC()
{
}

void sub_1C666C8()
{
}

void sub_1C666D8()
{
}

void sub_1C666E4()
{
}

void sub_1C666F4()
{
}

void sub_1C66700()
{
}

void sub_1C66710()
{
}

void sub_1C6671C()
{
}

void sub_1C6672C()
{
}

void sub_1C66738()
{
}

void sub_1C66748()
{
}

void sub_1C66754()
{
}

void sub_1C66764()
{
}

void sub_1C66770()
{
}

void sub_1C66780()
{
}

void sub_1C6678C()
{
}

void sub_1C6679C()
{
}

void sub_1C667A8()
{
}

void sub_1C667B8()
{
}

void sub_1C667C4()
{
}

void sub_1C667D4()
{
}

void sub_1C667E0()
{
}

void sub_1C667F0()
{
}

void sub_1C667FC()
{
}

void sub_1C6680C()
{
}

void sub_1C66818()
{
}

void sub_1C66828()
{
}

void sub_1C66834()
{
}

void sub_1C66844()
{
}

void sub_1C66850()
{
}

void sub_1C66860()
{
}

void sub_1C6686C()
{
}

void sub_1C6687C()
{
}

void sub_1C66888()
{
}

void sub_1C66898()
{
}

void sub_1C668A4()
{
}

void sub_1C668B4()
{
}

void sub_1C668C0()
{
}

void sub_1C668D0()
{
}

void sub_1C668DC()
{
}

void sub_1C668EC()
{
}

void sub_1C668F8()
{
}

void sub_1C66908()
{
}

void sub_1C66914()
{
}

void sub_1C66924()
{
}

void sub_1C66930()
{
}

void sub_1C66940()
{
}

void sub_1C6694C()
{
}

void sub_1C6695C()
{
}

void sub_1C66968()
{
}

void sub_1C66978()
{
}

void sub_1C66984()
{
}

void sub_1C66994()
{
}

void sub_1C669A0()
{
}

void sub_1C669B0()
{
}

void sub_1C669BC()
{
}

void sub_1C669CC()
{
}

void sub_1C669D8()
{
}

void sub_1C669E8()
{
}

void sub_1C669F4()
{
}

void sub_1C66A04()
{
}

void sub_1C66A10()
{
}

void sub_1C66A20()
{
}

void sub_1C66A2C()
{
}

void sub_1C66A3C()
{
}

void sub_1C66A48()
{
}

void sub_1C66A58()
{
}

void sub_1C66A64()
{
}

void sub_1C66A74()
{
}

void sub_1C66A80()
{
}

void sub_1C66A90()
{
}

void sub_1C66A9C()
{
}

void sub_1C66AAC()
{
}

void sub_1C66AB8()
{
}

void sub_1C66AC8()
{
}

void sub_1C66AD4()
{
}

void sub_1C66AE4()
{
}

void sub_1C66AF0()
{
}

void sub_1C66B00()
{
}

void sub_1C66B0C()
{
}

void sub_1C66B1C()
{
}

void sub_1C66B28()
{
}

void sub_1C66B38()
{
}

void sub_1C66B44()
{
}

void sub_1C66B54()
{
}

void sub_1C66B60()
{
}

void sub_1C66B70()
{
}

void sub_1C66B7C()
{
}

void sub_1C66B8C()
{
}

void sub_1C66B98()
{
}

void sub_1C66BA8()
{
}

void sub_1C66BB4()
{
}

void sub_1C66BC4()
{
}

void sub_1C66BD0()
{
}

void sub_1C66BE0()
{
}

void sub_1C66BEC()
{
}

void sub_1C66BFC()
{
}

void sub_1C66C08()
{
}

void sub_1C66C18()
{
}

void sub_1C66C24()
{
}

void sub_1C66C34()
{
}

void sub_1C66C40()
{
}

void sub_1C66C50()
{
}

void sub_1C66C5C()
{
}

void sub_1C66C6C()
{
}

void sub_1C66C78()
{
}

void sub_1C66C88()
{
}

void sub_1C66C94()
{
}

void sub_1C66CA4()
{
}

void sub_1C66CB0()
{
}

void sub_1C66CC0()
{
}

void sub_1C66CCC()
{
}

void sub_1C66CDC()
{
}

void sub_1C66CE8()
{
}

void sub_1C66CF8()
{
}

void sub_1C66D04()
{
}

void sub_1C66D14()
{
}

void sub_1C66D20()
{
}

void sub_1C66D30()
{
}

void sub_1C66D3C()
{
}

void sub_1C66D4C()
{
}

void sub_1C66D58()
{
}

void sub_1C66D68()
{
}

void sub_1C66D74()
{
}

void sub_1C66D84()
{
}

void sub_1C66D90()
{
}

void sub_1C66DA0()
{
}

void sub_1C66DAC()
{
}

void sub_1C66DBC()
{
}

void sub_1C66DC8()
{
}

void sub_1C66DD8()
{
}

void sub_1C66DE4()
{
}

void sub_1C66DF4()
{
}

void sub_1C66E00()
{
}

void sub_1C66E10()
{
}

void sub_1C66E1C()
{
}

void sub_1C66E2C()
{
}

void sub_1C66E38()
{
}

void sub_1C66E48()
{
}

void sub_1C66E54()
{
}

void sub_1C66E64()
{
}

void sub_1C66E70()
{
}

void sub_1C66E80()
{
}

void sub_1C66E8C()
{
}

void sub_1C66E9C()
{
}

void sub_1C66EA8()
{
}

void sub_1C66EB8()
{
}

void sub_1C66EC4()
{
}

void sub_1C66ED4()
{
}

void sub_1C66EE0()
{
}

void sub_1C66EF0()
{
}

void sub_1C66EFC()
{
}

void sub_1C66F0C()
{
}

void sub_1C66F18()
{
}

void sub_1C66F28()
{
}

void sub_1C66F34()
{
}

void sub_1C66F44()
{
}

void sub_1C66F50()
{
}

void sub_1C66F60()
{
}

void sub_1C66F6C()
{
}

void sub_1C66F78()
{
}

void sub_1C66F8C()
{
}

void sub_1C66FA0()
{
}

void sub_1C66FA8()
{
  __chkstk_darwin();
  sub_5E5C(&v1, "a");
  sub_5E5C(v2, "ai");
  sub_5E5C(v3, "an");
  sub_5E5C(v4, "ang");
  sub_5E5C(v5, "ao");
  sub_5E5C(v6, "ba");
  sub_5E5C(v7, "bai");
  sub_5E5C(v8, "ban");
  sub_5E5C(v9, "bang");
  sub_5E5C(v10, "bao");
  sub_5E5C(v11, "bei");
  sub_5E5C(v12, "ben");
  sub_5E5C(v13, "beng");
  sub_5E5C(v14, "bi");
  sub_5E5C(v15, "bian");
  sub_5E5C(v16, "biao");
  sub_5E5C(v17, "bie");
  sub_5E5C(v18, "bin");
  sub_5E5C(v19, "bing");
  sub_5E5C(v20, "bo");
  sub_5E5C(v21, "bu");
  sub_5E5C(v22, "ca");
  sub_5E5C(v23, "cai");
  sub_5E5C(v24, "can");
  sub_5E5C(v25, "cang");
  sub_5E5C(v26, "cao");
  sub_5E5C(v27, "ce");
  sub_5E5C(v28, "cen");
  sub_5E5C(v29, "ceng");
  sub_5E5C(v30, "cha");
  sub_5E5C(v31, "chai");
  sub_5E5C(v32, "chan");
  sub_5E5C(v33, "chang");
  sub_5E5C(v34, "chao");
  sub_5E5C(v35, "che");
  sub_5E5C(v36, "chen");
  sub_5E5C(v37, "cheng");
  sub_5E5C(v38, "chi");
  sub_5E5C(v39, "chong");
  sub_5E5C(v40, "chou");
  sub_5E5C(v41, "chu");
  sub_5E5C(v42, "chuai");
  sub_5E5C(v43, "chuan");
  sub_5E5C(v44, "chuang");
  sub_5E5C(v45, "chui");
  sub_5E5C(v46, "chun");
  sub_5E5C(v47, "chuo");
  sub_5E5C(v48, "ci");
  sub_5E5C(v49, "cong");
  sub_5E5C(v50, "cou");
  sub_5E5C(v51, "cu");
  sub_5E5C(v52, "cuan");
  sub_5E5C(v53, "cui");
  sub_5E5C(v54, "cun");
  sub_5E5C(v55, "cuo");
  sub_5E5C(v56, "da");
  sub_5E5C(v57, "dai");
  sub_5E5C(v58, "dan");
  sub_5E5C(v59, "dang");
  sub_5E5C(v60, "dao");
  sub_5E5C(v61, "de");
  sub_5E5C(v62, "dei");
  sub_5E5C(v63, "deng");
  sub_5E5C(v64, "di");
  sub_5E5C(v65, "dia");
  sub_5E5C(v66, "dian");
  sub_5E5C(v67, "diao");
  sub_5E5C(v68, "die");
  sub_5E5C(v69, "ding");
  sub_5E5C(v70, "diu");
  sub_5E5C(v71, "dong");
  sub_5E5C(v72, "dou");
  sub_5E5C(v73, "du");
  sub_5E5C(v74, "duan");
  sub_5E5C(v75, "dui");
  sub_5E5C(v76, "dun");
  sub_5E5C(v77, "duo");
  sub_5E5C(v78, "e");
  sub_5E5C(v79, "en");
  sub_5E5C(v80, "er");
  sub_5E5C(v81, "fa");
  sub_5E5C(v82, "fan");
  sub_5E5C(v83, "fang");
  sub_5E5C(v84, "fei");
  sub_5E5C(v85, "fen");
  sub_5E5C(v86, "feng");
  sub_5E5C(v87, "fo");
  sub_5E5C(v88, "fou");
  sub_5E5C(v89, "fu");
  sub_5E5C(v90, "ga");
  sub_5E5C(v91, "gai");
  sub_5E5C(v92, "gan");
  sub_5E5C(v93, "gang");
  sub_5E5C(v94, "gao");
  sub_5E5C(v95, "ge");
  sub_5E5C(v96, "gei");
  sub_5E5C(v97, "gen");
  sub_5E5C(v98, "geng");
  sub_5E5C(v99, "gong");
  sub_5E5C(v100, "gou");
  sub_5E5C(v101, "gu");
  sub_5E5C(v102, "gua");
  sub_5E5C(v103, "guai");
  sub_5E5C(v104, "guan");
  sub_5E5C(v105, "guang");
  sub_5E5C(v106, "gui");
  sub_5E5C(v107, "gun");
  sub_5E5C(v108, "guo");
  sub_5E5C(v109, "ha");
  sub_5E5C(v110, "hai");
  sub_5E5C(v111, "han");
  sub_5E5C(v112, "hang");
  sub_5E5C(v113, "hao");
  sub_5E5C(v114, "he");
  sub_5E5C(v115, "hei");
  sub_5E5C(v116, "hen");
  sub_5E5C(v117, "heng");
  sub_5E5C(v118, "hong");
  sub_5E5C(v119, "hou");
  sub_5E5C(v120, "hu");
  sub_5E5C(v121, "hua");
  sub_5E5C(v122, "huai");
  sub_5E5C(v123, "huan");
  sub_5E5C(v124, "huang");
  sub_5E5C(v125, "hui");
  sub_5E5C(v126, "hun");
  sub_5E5C(v127, "huo");
  sub_5E5C(v128, "ji");
  sub_5E5C(v129, "jia");
  sub_5E5C(v130, "jian");
  sub_5E5C(v131, "jiang");
  sub_5E5C(v132, "jiao");
  sub_5E5C(v133, "jie");
  sub_5E5C(v134, "jin");
  sub_5E5C(v135, "jing");
  sub_5E5C(v136, "jiong");
  sub_5E5C(v137, "jiu");
  sub_5E5C(v138, "ju");
  sub_5E5C(v139, "juan");
  sub_5E5C(v140, "jue");
  sub_5E5C(v141, "jun");
  sub_5E5C(v142, "ka");
  sub_5E5C(v143, "kai");
  sub_5E5C(v144, "kan");
  sub_5E5C(v145, "kang");
  sub_5E5C(v146, "kao");
  sub_5E5C(v147, "ke");
  sub_5E5C(v148, "ken");
  sub_5E5C(v149, "keng");
  sub_5E5C(v150, "kong");
  sub_5E5C(v151, "kou");
  sub_5E5C(v152, "ku");
  sub_5E5C(v153, "kua");
  sub_5E5C(v154, "kuai");
  sub_5E5C(v155, "kuan");
  sub_5E5C(v156, "kuang");
  sub_5E5C(v157, "kui");
  sub_5E5C(v158, "kun");
  sub_5E5C(v159, "kuo");
  sub_5E5C(v160, "la");
  sub_5E5C(v161, "lai");
  sub_5E5C(v162, "lan");
  sub_5E5C(v163, "lang");
  sub_5E5C(v164, "lao");
  sub_5E5C(v165, "le");
  sub_5E5C(v166, "lei");
  sub_5E5C(v167, "leng");
  sub_5E5C(v168, "li");
  sub_5E5C(v169, "lia");
  sub_5E5C(v170, "lian");
  sub_5E5C(v171, "liang");
  sub_5E5C(v172, "liao");
  sub_5E5C(v173, "lie");
  sub_5E5C(v174, "lin");
  sub_5E5C(v175, "ling");
  sub_5E5C(v176, "liu");
  sub_5E5C(v177, "long");
  sub_5E5C(v178, "lou");
  sub_5E5C(v179, "lu");
  sub_5E5C(v180, "luan");
  sub_5E5C(v181, "lun");
  sub_5E5C(v182, "luo");
  sub_5E5C(v183, "lv");
  sub_5E5C(v184, "lve");
  sub_5E5C(v185, "ma");
  sub_5E5C(v186, "mai");
  sub_5E5C(v187, "man");
  sub_5E5C(v188, "mang");
  sub_5E5C(v189, "mao");
  sub_5E5C(v190, "me");
  sub_5E5C(v191, "mei");
  sub_5E5C(v192, "men");
  sub_5E5C(v193, "meng");
  sub_5E5C(v194, "mi");
  sub_5E5C(v195, "mian");
  sub_5E5C(v196, "miao");
  sub_5E5C(v197, "mie");
  sub_5E5C(v198, "min");
  sub_5E5C(v199, "ming");
  sub_5E5C(v200, "miu");
  sub_5E5C(v201, "mo");
  sub_5E5C(v202, "mou");
  sub_5E5C(v203, "mu");
  sub_5E5C(v204, "na");
  sub_5E5C(v205, "nai");
  sub_5E5C(v206, "nan");
  sub_5E5C(v207, "nang");
  sub_5E5C(v208, "nao");
  sub_5E5C(v209, "ne");
  sub_5E5C(v210, "nei");
  sub_5E5C(v211, "nen");
  sub_5E5C(v212, "neng");
  sub_5E5C(v213, "ni");
  sub_5E5C(v214, "nian");
  sub_5E5C(v215, "niang");
  sub_5E5C(v216, "niao");
  sub_5E5C(v217, "nie");
  sub_5E5C(v218, "nin");
  sub_5E5C(v219, "ning");
  sub_5E5C(v220, "niu");
  sub_5E5C(v221, "nong");
  sub_5E5C(v222, "nu");
  sub_5E5C(v223, "nuan");
  sub_5E5C(v224, "nuo");
  sub_5E5C(v225, "nv");
  sub_5E5C(v226, "nve");
  sub_5E5C(v227, "o");
  sub_5E5C(v228, "ou");
  sub_5E5C(v229, "pa");
  sub_5E5C(v230, "pai");
  sub_5E5C(v231, "pan");
  sub_5E5C(v232, "pang");
  sub_5E5C(v233, "pao");
  sub_5E5C(v234, "pei");
  sub_5E5C(v235, "pen");
  sub_5E5C(v236, "peng");
  sub_5E5C(v237, "pi");
  sub_5E5C(v238, "pian");
  sub_5E5C(v239, "piao");
  sub_5E5C(v240, "pie");
  sub_5E5C(v241, "pin");
  sub_5E5C(v242, "ping");
  sub_5E5C(v243, "po");
  sub_5E5C(v244, "pou");
  sub_5E5C(v245, "pu");
  sub_5E5C(v246, "qi");
  sub_5E5C(v247, "qia");
  sub_5E5C(v248, "qian");
  sub_5E5C(v249, "qiang");
  sub_5E5C(v250, "qiao");
  sub_5E5C(v251, "qie");
  sub_5E5C(v252, "qin");
  sub_5E5C(v253, "qing");
  sub_5E5C(v254, "qiong");
  sub_5E5C(v255, "qiu");
  sub_5E5C(v256, "qu");
  sub_5E5C(v257, "quan");
  sub_5E5C(v258, "que");
  sub_5E5C(v259, "qun");
  sub_5E5C(v260, "ran");
  sub_5E5C(v261, "rang");
  sub_5E5C(v262, "rao");
  sub_5E5C(v263, "re");
  sub_5E5C(v264, "ren");
  sub_5E5C(v265, "reng");
  sub_5E5C(v266, "ri");
  sub_5E5C(v267, "rong");
  sub_5E5C(v268, "rou");
  sub_5E5C(v269, "ru");
  sub_5E5C(v270, "ruan");
  sub_5E5C(v271, "rui");
  sub_5E5C(v272, "run");
  sub_5E5C(v273, "ruo");
  sub_5E5C(v274, "sa");
  sub_5E5C(v275, "sai");
  sub_5E5C(v276, "san");
  sub_5E5C(v277, "sang");
  sub_5E5C(v278, "sao");
  sub_5E5C(v279, "se");
  sub_5E5C(v280, "sen");
  sub_5E5C(v281, "seng");
  sub_5E5C(v282, "sha");
  sub_5E5C(v283, "shai");
  sub_5E5C(v284, "shan");
  sub_5E5C(v285, "shang");
  sub_5E5C(v286, "shao");
  sub_5E5C(v287, "she");
  sub_5E5C(v288, "shei");
  sub_5E5C(v289, "shen");
  sub_5E5C(v290, "sheng");
  sub_5E5C(v291, "shi");
  sub_5E5C(v292, "shou");
  sub_5E5C(v293, "shu");
  sub_5E5C(v294, "shua");
  sub_5E5C(v295, "shuai");
  sub_5E5C(v296, "shuan");
  sub_5E5C(v297, "shuang");
  sub_5E5C(v298, "shui");
  sub_5E5C(v299, "shun");
  sub_5E5C(v300, "shuo");
  sub_5E5C(v301, "si");
  sub_5E5C(v302, "song");
  sub_5E5C(v303, "sou");
  sub_5E5C(v304, "su");
  sub_5E5C(v305, "suan");
  sub_5E5C(v306, "sui");
  sub_5E5C(v307, "sun");
  sub_5E5C(v308, "suo");
  sub_5E5C(v309, "ta");
  sub_5E5C(v310, "tai");
  sub_5E5C(v311, "tan");
  sub_5E5C(v312, "tang");
  sub_5E5C(v313, "tao");
  sub_5E5C(v314, "te");
  sub_5E5C(v315, "teng");
  sub_5E5C(v316, "ti");
  sub_5E5C(v317, "tian");
  sub_5E5C(v318, "tiao");
  sub_5E5C(v319, "tie");
  sub_5E5C(v320, "ting");
  sub_5E5C(v321, "tong");
  sub_5E5C(v322, "tou");
  sub_5E5C(v323, "tu");
  sub_5E5C(v324, "tuan");
  sub_5E5C(v325, "tui");
  sub_5E5C(v326, "tun");
  sub_5E5C(v327, "tuo");
  sub_5E5C(v328, "wa");
  sub_5E5C(v329, "wai");
  sub_5E5C(v330, "wan");
  sub_5E5C(v331, "wang");
  sub_5E5C(v332, "wei");
  sub_5E5C(v333, "wen");
  sub_5E5C(v334, "weng");
  sub_5E5C(v335, "wo");
  sub_5E5C(v336, "wu");
  sub_5E5C(v337, "xi");
  sub_5E5C(v338, "xia");
  sub_5E5C(v339, "xian");
  sub_5E5C(v340, "xiang");
  sub_5E5C(v341, "xiao");
  sub_5E5C(v342, "xie");
  sub_5E5C(v343, "xin");
  sub_5E5C(v344, "xing");
  sub_5E5C(v345, "xiong");
  sub_5E5C(v346, "xiu");
  sub_5E5C(v347, "xu");
  sub_5E5C(v348, "xuan");
  sub_5E5C(v349, "xue");
  sub_5E5C(v350, "xun");
  sub_5E5C(v351, "ya");
  sub_5E5C(v352, "yai");
  sub_5E5C(v353, "yan");
  sub_5E5C(v354, "yang");
  sub_5E5C(v355, "yao");
  sub_5E5C(v356, "ye");
  sub_5E5C(v357, "yi");
  sub_5E5C(v358, "yin");
  sub_5E5C(v359, "ying");
  sub_5E5C(v360, "yo");
  sub_5E5C(v361, "yong");
  sub_5E5C(v362, "you");
  sub_5E5C(v363, "yu");
  sub_5E5C(v364, "yuan");
  sub_5E5C(v365, "yue");
  sub_5E5C(v366, "yun");
  sub_5E5C(v367, "za");
  sub_5E5C(v368, "zai");
  sub_5E5C(v369, "zan");
  sub_5E5C(v370, "zang");
  sub_5E5C(v371, "zao");
  sub_5E5C(v372, "ze");
  sub_5E5C(v373, "zei");
  sub_5E5C(v374, "zen");
  sub_5E5C(v375, "zeng");
  sub_5E5C(v376, "zha");
  sub_5E5C(v377, "zhai");
  sub_5E5C(v378, "zhan");
  sub_5E5C(v379, "zhang");
  sub_5E5C(v380, "zhao");
  sub_5E5C(v381, "zhe");
  sub_5E5C(v382, "zhei");
  sub_5E5C(v383, "zhen");
  sub_5E5C(v384, "zheng");
  sub_5E5C(v385, "zhi");
  sub_5E5C(v386, "zhong");
  sub_5E5C(v387, "zhou");
  sub_5E5C(v388, "zhu");
  sub_5E5C(v389, "zhua");
  sub_5E5C(v390, "zhuai");
  sub_5E5C(v391, "zhuan");
  sub_5E5C(v392, "zhuang");
  sub_5E5C(v393, "zhui");
  sub_5E5C(v394, "zhun");
  sub_5E5C(v395, "zhuo");
  sub_5E5C(v396, "zi");
  sub_5E5C(v397, "zong");
  sub_5E5C(v398, "zou");
  sub_5E5C(v399, "zu");
  sub_5E5C(v400, "zuan");
  sub_5E5C(v401, "zui");
  sub_5E5C(v402, "zun");
  sub_5E5C(v403, "zuo");
  qword_25502A8 = 0;
  qword_25502B0 = 0;
  qword_25502B8 = 0;
  qword_25502A8 = (uint64_t)operator new(0x25C8uLL);
  qword_25502B0 = qword_25502A8;
  qword_25502B8 = qword_25502A8 + 9672;
  uint64_t v0 = 0;
  qword_25502B0 = (uint64_t)sub_18914E4((uint64_t)&qword_25502B8, &v1, &v404, (char *)qword_25502A8);
  do
  {
    if (*((char *)&v404 + v0 * 8 - 1) < 0) {
      operator delete((void *)v403[v0]);
    }
    v0 -= 3;
  }
  while (v0 != -1209);
}

void sub_1C696EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  uint64_t v10 = v9;
  qword_25502B0 = v10;
  sub_1891624(&a9);
  unint64_t v12 = &STACK[0x25D7];
  uint64_t v13 = -9672;
  int v14 = &STACK[0x25D7];
  while (1)
  {
    int v15 = *(char *)v14;
    v14 -= 3;
    if (v15 < 0) {
      operator delete(*(void **)((char *)v12 - 23));
    }
    unint64_t v12 = v14;
    v13 += 24;
    if (!v13) {
      _Unwind_Resume(a1);
    }
  }
}

void *sub_1C69774()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_26281F8 = 0;
  qword_2628200 = 0;
  qword_2628208 = 0;
  qword_26281F8 = (uint64_t)operator new(0x18uLL);
  qword_2628200 = qword_26281F8;
  qword_2628208 = qword_26281F8 + 24;
  qword_2628200 = (uint64_t)sub_18914E4((uint64_t)&qword_2628208, (long long *)__p, &v5, (char *)qword_26281F8);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2628210 = 0;
  qword_2628218 = 0;
  qword_2628220 = 0;
  qword_2628210 = (uint64_t)operator new(0x18uLL);
  qword_2628218 = qword_2628210;
  qword_2628220 = qword_2628210 + 24;
  qword_2628218 = (uint64_t)sub_18914E4((uint64_t)&qword_2628220, (long long *)__p, &v5, (char *)qword_2628210);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2628228 = 0;
  qword_2628230 = 0;
  qword_2628238 = 0;
  qword_2628228 = (uint64_t)operator new(0x18uLL);
  qword_2628230 = qword_2628228;
  qword_2628238 = qword_2628228 + 24;
  qword_2628230 = (uint64_t)sub_18914E4((uint64_t)&qword_2628238, (long long *)__p, &v5, (char *)qword_2628228);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
  sub_1C5C4F4();
  sub_1C66FA8();
  qword_25502C0 = 0;
  qword_25502C8 = 0;
  qword_25502D0 = 0;
  qword_25502C0 = (uint64_t)operator new(0x10E6uLL);
  uint64_t v0 = qword_25502C0 + 4326;
  qword_25502D0 = qword_25502C0 + 4326;
  memcpy((void *)qword_25502C0, &unk_2178530, 0x10E6uLL);
  qword_25502C8 = v0;
  qword_25502E0 = 0;
  qword_25502E8 = 0;
  qword_25502D8 = 0;
  qword_25502D8 = (uint64_t)operator new(0xA34CuLL);
  uint64_t v1 = qword_25502D8 + 41804;
  qword_25502E8 = qword_25502D8 + 41804;
  BOOL result = memcpy((void *)qword_25502D8, &unk_2179616, 0xA34CuLL);
  qword_25502E0 = v1;
  return result;
}

void sub_1C69994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2628230 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1C699F8(uint64_t a1, uint64_t a2)
{
  char v3 = *(_DWORD **)(a1 + 112);
  if (v3 && (uint64_t v4 = *(int *)(a1 + 104), (int)v4 < *v3))
  {
    *(_DWORD *)(a1 + 104) = v4 + 1;
    uint64_t result = *(void *)&v3[2 * v4 + 2];
  }
  else
  {
    uint64_t v6 = a1 + 96;
    uint64_t v7 = sub_1830494(*(void *)(a1 + 96));
    uint64_t result = sub_188CDC8(v6, (uint64_t)v7);
  }
  int v8 = *(_DWORD *)(result + 40);
  uint64_t v9 = (float *)(result + 48);
  float32x2x2_t v10 = *(float32x2x2_t *)a2;
  *(_DWORD *)(result + 40) = v8 | 1;
  v10.val[0].i32[1] = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(result + 40) = v8 | 5;
  v10.val[1].i32[0] = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(result + 40) = v8 | 7;
  v10.val[1].i32[1] = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(result + 40) = v8 | 0xF;
  unint64_t v11 = vextq_s8((int8x16_t)v10, (int8x16_t)v10, 8uLL).u64[0];
  vst2_f32(v9, v10);
  return result;
}

uint64_t sub_1C69AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BA0494(a1, a2, a3);
  sub_1B2C170(a1, a2);
  uint64_t result = sub_1CDE2C8(a2);
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v6 = sub_1CDE2C8(a2);
    if (!*(unsigned char *)(v6 + 16)) {
      sub_1907A2C();
    }
    return sub_1C699F8(a1, v6);
  }
  return result;
}

uint64_t sub_1C69B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BA01F4(a1, a2, a3);
  sub_1B2C0DC(a1, a2);
  uint64_t result = sub_393A90(a2);
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v6 = sub_393A90(a2);
    if (!*(unsigned char *)(v6 + 16)) {
      sub_1907A2C();
    }
    return sub_1C699F8(a1, v6);
  }
  return result;
}

uint64_t sub_1C69BA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v8 = *(void *)(a2 + 64);
  double v9 = 0.0;
  if (v7 != v8)
  {
    int v10 = 0;
    int v11 = 0;
    do
    {
      if (*(_DWORD *)(v7 + 768) == 1)
      {
        uint64_t result = sub_1CDE640(v7);
        if ((*(unsigned char *)(result + 19) & 8) != 0)
        {
          if (*(_DWORD *)(v7 + 768) != 1) {
            sub_11388B8();
          }
          uint64_t result = sub_1CDE640(v7);
          v10 += *(unsigned __int8 *)(result + 244);
        }
        ++v11;
      }
      v7 += 776;
    }
    while (v7 != v8);
    if (v11 > 0) {
      double v9 = (double)v10 / (double)v11 * 100.0;
    }
  }
  BOOL v12 = 0;
  if (v9 >= *(double *)(a4 + 1008))
  {
    uint64_t result = sub_18A53D4(a3);
    if (!result) {
      BOOL v12 = 1;
    }
  }
  *(_DWORD *)(v6 + 40) |= 0x800000u;
  *(_DWORD *)(v6 + 384) = v12;
  return result;
}

__n128 sub_1C69CA4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v4 = *(void *)(a1 + 248);
  if (!v4)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v6 = (void *)(v5 & 0xFFFFFFFFFFFFFFFCLL);
    if (v5) {
      uint64_t v6 = (void *)*v6;
    }
    uint64_t v4 = sub_15C19EC((uint64_t)v6);
    *(void *)(a1 + 248) = v4;
  }
  *(_DWORD *)(v4 + 16) |= 8u;
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(v4 + 16) |= 2u;
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(v4 + 16) |= 4u;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(v4 + 16) |= 1u;
  __n128 result = *(__n128 *)(a2 + 48);
  *(__n128 *)(v4 + 48) = result;
  return result;
}

float sub_1C69D5C(uint64_t a1, float32x2_t *a2, uint64_t a3, unint64_t a4)
{
  *(_DWORD *)(a1 + 40) |= 0x80u;
  uint64_t v7 = *(void *)(a1 + 296);
  if (!v7)
  {
    uint64_t v9 = *(void *)(a1 + 8);
    int v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
    if (v9) {
      int v10 = (void *)*v10;
    }
    sub_129E740((uint64_t)v10);
    uint64_t v7 = v11;
    *(void *)(a1 + 296) = v11;
  }
  int v12 = *(_DWORD *)(v7 + 16) | 3;
  *(_DWORD *)(v7 + 16) = v12;
  int8x16_t v13 = (int8x16_t)vcvtq_f64_f32(a2[9]);
  *(int8x16_t *)(v7 + 24) = vextq_s8(v13, v13, 8uLL);
  if (*(unsigned char *)(a3 + 88))
  {
    double v14 = sub_1C0E3CC((double *)a3);
    int v12 = *(_DWORD *)(v7 + 16);
  }
  else
  {
    double v14 = 0.0;
  }
  *(double *)(v7 + 40) = fmax(v14 * a2[8].f32[0] * 1000.0, a2[8].f32[1]);
  float result = fmaxf(a2[7].f32[0] * (float)a4, a2[7].f32[1]);
  *(_DWORD *)(v7 + 16) = v12 | 0xC;
  *(_DWORD *)(v7 + 48) = (int)result;
  return result;
}

float sub_1C69E48(uint64_t a1, unsigned __int8 *a2, float32x2_t *a3, uint64_t a4, uint64_t a5)
{
  __int32 v10 = a3[10].i32[0];
  *(_DWORD *)(a1 + 40) |= 0x20000u;
  *(_DWORD *)(a1 + 372) = v10;
  if (*(unsigned char *)(a4 + 88)) {
    sub_1C69CA4(a1, a4);
  }
  uint64_t v11 = *(uint64_t (****)())(a5 + 192);
  if (v11) {
    int v12 = *(uint64_t (****)())(a5 + 192);
  }
  else {
    int v12 = &off_254C5C8;
  }
  if ((_BYTE)v12[5])
  {
    int8x16_t v13 = *(_DWORD **)(a1 + 160);
    if (v13 && (uint64_t v14 = *(int *)(a1 + 152), (int)v14 < *v13))
    {
      *(_DWORD *)(a1 + 152) = v14 + 1;
      uint64_t v15 = *(void *)&v13[2 * v14 + 2];
    }
    else
    {
      uint64_t v16 = sub_12BBB40(*(void *)(a1 + 144));
      uint64_t v15 = sub_188CDC8(a1 + 144, v16);
      uint64_t v11 = *(uint64_t (****)())(a5 + 192);
    }
    if (!v11) {
      uint64_t v11 = &off_254C5C8;
    }
    long long v17 = (uint64_t (***)())v11[7];
    if (!v17) {
      long long v17 = &off_2549900;
    }
    char v18 = (long long *)((unint64_t)v17[20] & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(v15 + 16) |= 1u;
    uint64_t v19 = *(void *)(v15 + 8);
    long long v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      long long v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(v15 + 24), v18, v20);
  }
  if (*a2 | a2[1])
  {
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v21 = *(void *)(a1 + 264);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      char v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        char v23 = (void *)*v23;
      }
      uint64_t v21 = sub_18305D4((uint64_t)v23);
      *(void *)(a1 + 264) = v21;
    }
    *(_DWORD *)(v21 + 16) |= 1u;
    *(unsigned char *)(v21 + 24) = 1;
  }
  unint64_t v24 = 0xA3A0FD5C5F02A3A1 * ((uint64_t)(*((void *)a2 + 8) - *((void *)a2 + 7)) >> 3);

  return sub_1C69D5C(a1, a3, a4, v24);
}

uint64_t sub_1C69FFC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = nullsub_1(*a1);
  *(_DWORD *)(a2 + 40) |= 4u;
  uint64_t v7 = *(void *)(a2 + 184);
  if (!v7)
  {
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = (void *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
    if (v8) {
      uint64_t v9 = (void *)*v9;
    }
    uint64_t v7 = sub_1836DF8((uint64_t)v9);
    *(void *)(a2 + 184) = v7;
  }
  *(_DWORD *)(v7 + 40) |= 1u;
  uint64_t v10 = *(void *)(v7 + 56);
  if (!v10)
  {
    uint64_t v11 = *(void *)(v7 + 8);
    int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (void *)*v12;
    }
    uint64_t v10 = sub_18306D8((uint64_t)v12);
    *(void *)(v7 + 56) = v10;
  }
  uint64_t v13 = sub_1C3569C(*a1);
  if (sub_18A51CC(v13)) {
    sub_1B2BD20(v10);
  }
  uint64_t v14 = sub_1C3569C(*a1);
  if (*(unsigned char *)a3)
  {
    sub_5E5C(__p, "search_filter_config");
    uint64_t v15 = sub_1908254((void *)(v6 + 1104), (unsigned __int8 *)__p);
    uint64_t v16 = v15;
    if (v28 < 0)
    {
      operator delete(__p[0]);
      if (!v16) {
        goto LABEL_21;
      }
    }
    else if (!v15)
    {
      goto LABEL_21;
    }
    uint64_t v18 = *((void *)v16 + 5);
    uint64_t v17 = (uint64_t)(v16 + 40);
    if (((*(uint64_t (**)(uint64_t))(*(void *)v18 + 8))(v18) & 1) == 0)
    {
      double v19 = sub_1C35374(*a1);
      sub_1906378(v6, __p, v19, v20);
      if (*(void *)(a3 + 8) != *(void *)(a3 + 16)) {
        sub_19073F0(v14, (uint64_t *)(a3 + 8), (const void **)__p, v17, v10, v6, a3);
      }
      if (v28 < 0) {
        operator delete(__p[0]);
      }
    }
  }
LABEL_21:
  uint64_t v21 = (float32x2_t *)(v6 + 8);
  sub_18EC034(a3, __p);
  sub_1C69E48(v10, (unsigned __int8 *)a3, v21, (uint64_t)__p, v14);
  uint64_t v22 = *(void *)(a3 + 56);
  uint64_t v23 = *(void *)(a3 + 64);
  while (v22 != v23)
  {
    int v24 = *(_DWORD *)(v22 + 768);
    if (v24)
    {
      if (v24 == 2)
      {
        sub_1BA0668(v10, v22, (uint64_t)v21);
      }
      else
      {
        if (v24 != 1)
        {
          exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
          std::logic_error::logic_error(exception, "invalid result type");
        }
        sub_1C69B28(v10, v22, (uint64_t)v21);
      }
    }
    else
    {
      sub_1C69AAC(v10, v22, (uint64_t)v21);
    }
    v22 += 776;
  }
  uint64_t result = sub_1C69BA4(v10, a3, v14, (uint64_t)v21);
  if (v29) {
    return sub_15B1678(__p);
  }
  return result;
}

void sub_1C6A284(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C6A2D4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C3569C(*a1);
  uint64_t v7 = nullsub_1(*a1);
  sub_182E158(a3, 0, 0);
  sub_1C69FFC(a1, a3, (uint64_t)a2);
  sub_1D757C8(v6, a3, (uint64_t)a2, v7);
  uint64_t result = sub_1FF639C(a1, a3, (uint64_t)a2);
  uint64_t v9 = 0x5C5F02A3A0FD5C5FLL * ((uint64_t)(a2[8] - a2[7]) >> 3);
  unint64_t v10 = 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(a2[11] - a2[10]) >> 3);
  *(_DWORD *)(a3 + 40) |= 0x20u;
  if (v10 == v9) {
    int v11 = 20;
  }
  else {
    int v11 = 0;
  }
  *(_DWORD *)(a3 + 208) = v11;
  return result;
}

void sub_1C6A3BC(_Unwind_Exception *a1)
{
  sub_182E7B8(v1);
  _Unwind_Resume(a1);
}

void sub_1C6A3D0()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26282A0, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1C713B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1C733BC()
{
}

void sub_1C733C8()
{
}

void sub_1C733D8()
{
}

void sub_1C733E4()
{
}

void sub_1C733F4()
{
}

void sub_1C73400()
{
}

void sub_1C73410()
{
}

void sub_1C7341C()
{
}

void sub_1C7342C()
{
}

void sub_1C73438()
{
}

void sub_1C73448()
{
}

void sub_1C73454()
{
}

void sub_1C73464()
{
}

void sub_1C73470()
{
}

void sub_1C73480()
{
}

void sub_1C7348C()
{
}

void sub_1C7349C()
{
}

void sub_1C734A8()
{
}

void sub_1C734B8()
{
}

void sub_1C734C4()
{
}

void sub_1C734D4()
{
}

void sub_1C734E0()
{
}

void sub_1C734F0()
{
}

void sub_1C734FC()
{
}

void sub_1C7350C()
{
}

void sub_1C73518()
{
}

void sub_1C73528()
{
}

void sub_1C73534()
{
}

void sub_1C73544()
{
}

void sub_1C73550()
{
}

void sub_1C73560()
{
}

void sub_1C7356C()
{
}

void sub_1C7357C()
{
}

void sub_1C73588()
{
}

void sub_1C73598()
{
}

void sub_1C735A4()
{
}

void sub_1C735B4()
{
}

void sub_1C735C0()
{
}

void sub_1C735D0()
{
}

void sub_1C735DC()
{
}

void sub_1C735EC()
{
}

void sub_1C735F8()
{
}

void sub_1C73608()
{
}

void sub_1C73614()
{
}

void sub_1C73624()
{
}

void sub_1C73630()
{
}

void sub_1C73640()
{
}

void sub_1C7364C()
{
}

void sub_1C7365C()
{
}

void sub_1C73668()
{
}

void sub_1C73678()
{
}

void sub_1C73684()
{
}

void sub_1C73694()
{
}

void sub_1C736A0()
{
}

void sub_1C736B0()
{
}

void sub_1C736BC()
{
}

void sub_1C736CC()
{
}

void sub_1C736D8()
{
}

void sub_1C736E8()
{
}

void sub_1C736F4()
{
}

void sub_1C73704()
{
}

void sub_1C73710()
{
}

void sub_1C73720()
{
}

void sub_1C7372C()
{
}

void sub_1C7373C()
{
}

void sub_1C73748()
{
}

void sub_1C73758()
{
}

void sub_1C73764()
{
}

void sub_1C73774()
{
}

void sub_1C73780()
{
}

void sub_1C73790()
{
}

void sub_1C7379C()
{
}

void sub_1C737AC()
{
}

void sub_1C737B8()
{
}

void sub_1C737C8()
{
}

void sub_1C737D4()
{
}

void sub_1C737E4()
{
}

void sub_1C737F0()
{
}

void sub_1C73800()
{
}

void sub_1C7380C()
{
}

void sub_1C7381C()
{
}

void sub_1C73828()
{
}

void sub_1C73838()
{
}

void sub_1C73844()
{
}

void sub_1C73854()
{
}

void sub_1C73860()
{
}

void sub_1C73870()
{
}

void sub_1C7387C()
{
}

void sub_1C7388C()
{
}

void sub_1C73898()
{
}

void sub_1C738A8()
{
}

void sub_1C738B4()
{
}

void sub_1C738C4()
{
}

void sub_1C738D0()
{
}

void sub_1C738E0()
{
}

void sub_1C738EC()
{
}

void sub_1C738FC()
{
}

void sub_1C73908()
{
}

void sub_1C73918()
{
}

void sub_1C73924()
{
}

void sub_1C73934()
{
}

void sub_1C73940()
{
}

void sub_1C73950()
{
}

void sub_1C7395C()
{
}

void sub_1C7396C()
{
}

void sub_1C73978()
{
}

void sub_1C73988()
{
}

void sub_1C73994()
{
}

void sub_1C739A4()
{
}

void sub_1C739B0()
{
}

void sub_1C739C0()
{
}

void sub_1C739CC()
{
}

void sub_1C739DC()
{
}

void sub_1C739E8()
{
}

void sub_1C739F8()
{
}

void sub_1C73A04()
{
}

void sub_1C73A14()
{
}

void sub_1C73A20()
{
}

void sub_1C73A30()
{
}

void sub_1C73A3C()
{
}

void sub_1C73A4C()
{
}

void sub_1C73A58()
{
}

void sub_1C73A68()
{
}

void sub_1C73A74()
{
}

void sub_1C73A84()
{
}

void sub_1C73A90()
{
}

void sub_1C73AA0()
{
}

void sub_1C73AAC()
{
}

void sub_1C73ABC()
{
}

void sub_1C73AC8()
{
}

void sub_1C73AD8()
{
}

void sub_1C73AE4()
{
}

void sub_1C73AF4()
{
}

void sub_1C73B00()
{
}

void sub_1C73B10()
{
}

void sub_1C73B1C()
{
}

void sub_1C73B2C()
{
}

void sub_1C73B38()
{
}

void sub_1C73B48()
{
}

void sub_1C73B54()
{
}

void sub_1C73B64()
{
}

void sub_1C73B70()
{
}

void sub_1C73B80()
{
}

void sub_1C73B8C()
{
}

void sub_1C73B9C()
{
}

void sub_1C73BA8()
{
}

void sub_1C73BB8()
{
}

void sub_1C73BC4()
{
}

void sub_1C73BD4()
{
}

void sub_1C73BE0()
{
}

void sub_1C73BF0()
{
}

void sub_1C73BFC()
{
}

void sub_1C73C0C()
{
}

void sub_1C73C18()
{
}

void sub_1C73C28()
{
}

void sub_1C73C34()
{
}

void sub_1C73C44()
{
}

void sub_1C73C50()
{
}

void sub_1C73C60()
{
}

void sub_1C73C6C()
{
}

void sub_1C73C7C()
{
}

void sub_1C73C88()
{
}

void sub_1C73C98()
{
}

void sub_1C73CA4()
{
}

void sub_1C73CB4()
{
}

void sub_1C73CC0()
{
}

void sub_1C73CD0()
{
}

void sub_1C73CDC()
{
}

void sub_1C73CEC()
{
}

void sub_1C73CF8()
{
}

void sub_1C73D08()
{
}

void sub_1C73D14()
{
}

void sub_1C73D24()
{
}

void sub_1C73D30()
{
}

void sub_1C73D40()
{
}

void sub_1C73D4C()
{
}

void sub_1C73D5C()
{
}

void sub_1C73D68()
{
}

void sub_1C73D78()
{
}

void sub_1C73D84()
{
}

void sub_1C73D94()
{
}

void sub_1C73DA0()
{
}

void sub_1C73DB0()
{
}

void sub_1C73DBC()
{
}

void sub_1C73DCC()
{
}

void sub_1C73DD8()
{
}

void sub_1C73DE8()
{
}

void sub_1C73DF4()
{
}

void sub_1C73E04()
{
}

void sub_1C73E10()
{
}

void sub_1C73E20()
{
}

void sub_1C73E2C()
{
}

void sub_1C73E3C()
{
}

void sub_1C73E48()
{
}

void sub_1C73E58()
{
}

void sub_1C73E64()
{
}

void sub_1C73E74()
{
}

void sub_1C73E80()
{
}

void sub_1C73E90()
{
}

void sub_1C73E9C()
{
}

void sub_1C73EAC()
{
}

void sub_1C73EB8()
{
}

void sub_1C73EC8()
{
}

void sub_1C73ED4()
{
}

void sub_1C73EE4()
{
}

void sub_1C73EF0()
{
}

void sub_1C73F00()
{
}

void sub_1C73F0C()
{
}

void sub_1C73F1C()
{
}

void sub_1C73F28()
{
}

void sub_1C73F38()
{
}

void sub_1C73F44()
{
}

void sub_1C73F54()
{
}

void sub_1C73F60()
{
}

void sub_1C73F70()
{
}

void sub_1C73F7C()
{
}

void sub_1C73F8C()
{
}

void sub_1C73F98()
{
}

void sub_1C73FA8()
{
}

void sub_1C73FB4()
{
}

void sub_1C73FC4()
{
}

void sub_1C73FD0()
{
}

void sub_1C73FE0()
{
}

void sub_1C73FEC()
{
}

void sub_1C73FFC()
{
}

void sub_1C74008()
{
}

void sub_1C74018()
{
}

void sub_1C74024()
{
}

void sub_1C74034()
{
}

void sub_1C74040()
{
}

void sub_1C74050()
{
}

void sub_1C7405C()
{
}

void sub_1C7406C()
{
}

void sub_1C74078()
{
}

void sub_1C74088()
{
}

void sub_1C74094()
{
}

void sub_1C740A4()
{
}

void sub_1C740B0()
{
}

void sub_1C740C0()
{
}

void sub_1C740CC()
{
}

void sub_1C740DC()
{
}

void sub_1C740E8()
{
}

void sub_1C740F8()
{
}

void sub_1C74104()
{
}

void sub_1C74114()
{
}

void sub_1C74120()
{
}

void sub_1C74130()
{
}

void sub_1C7413C()
{
}

void sub_1C7414C()
{
}

void sub_1C74158()
{
}

void sub_1C74168()
{
}

void sub_1C74174()
{
}

void sub_1C74184()
{
}

void sub_1C74190()
{
}

void sub_1C741A0()
{
}

void sub_1C741AC()
{
}

void sub_1C741BC()
{
}

void sub_1C741C8()
{
}

void sub_1C741D8()
{
}

void sub_1C741E4()
{
}

void sub_1C741F4()
{
}

void sub_1C74200()
{
}

void sub_1C74210()
{
}

void sub_1C7421C()
{
}

void sub_1C7422C()
{
}

void sub_1C74238()
{
}

void sub_1C74248()
{
}

void sub_1C74254()
{
}

void sub_1C74264()
{
}

void sub_1C74270()
{
}

void sub_1C74280()
{
}

void sub_1C7428C()
{
}

void sub_1C7429C()
{
}

void sub_1C742A8()
{
}

void sub_1C742B8()
{
}

void sub_1C742C4()
{
}

void sub_1C742D4()
{
}

void sub_1C742E0()
{
}

void sub_1C742F0()
{
}

void sub_1C742FC()
{
}

void sub_1C74308()
{
}

void sub_1C74314()
{
}

void sub_1C74320()
{
}

void sub_1C74330()
{
}

void sub_1C7433C()
{
}

void sub_1C7434C()
{
}

void sub_1C74358()
{
}

void sub_1C74368()
{
}

void sub_1C74374()
{
}

void sub_1C74384()
{
}

void sub_1C74390()
{
}

void sub_1C743A0()
{
}

void sub_1C743AC()
{
}

void sub_1C743BC()
{
}

void sub_1C743C8()
{
}

void sub_1C743D8()
{
}

void sub_1C743E4()
{
}

void sub_1C743F4()
{
}

void sub_1C74400()
{
}

void sub_1C74410()
{
}

void sub_1C7441C()
{
}

void sub_1C7442C()
{
}

void sub_1C74438()
{
}

void sub_1C74448()
{
}

void sub_1C74454()
{
}

void sub_1C74464()
{
}

void sub_1C74470()
{
}

void sub_1C74480()
{
}

void sub_1C7448C()
{
}

void sub_1C7449C()
{
}

void sub_1C744A8()
{
}

void sub_1C744B8()
{
}

void sub_1C744C4()
{
}

void sub_1C744D4()
{
}

void sub_1C744E0()
{
}

void sub_1C744F0()
{
}

void sub_1C744FC()
{
}

void sub_1C7450C()
{
}

void sub_1C74518()
{
}

void sub_1C74528()
{
}

void sub_1C74534()
{
}

void sub_1C74544()
{
}

void sub_1C74550()
{
}

void sub_1C74560()
{
}

void sub_1C7456C()
{
}

void sub_1C7457C()
{
}

void sub_1C74588()
{
}

void sub_1C74598()
{
}

void sub_1C745A4()
{
}

void sub_1C745B4()
{
}

void sub_1C745C0()
{
}

void sub_1C745D0()
{
}

void sub_1C745DC()
{
}

void sub_1C745EC()
{
}

void sub_1C745F8()
{
}

void sub_1C74608()
{
}

void sub_1C74614()
{
}

void sub_1C74624()
{
}

void sub_1C74630()
{
}

void sub_1C74640()
{
}

void sub_1C7464C()
{
}

void sub_1C7465C()
{
}

void sub_1C74668()
{
}

void sub_1C74678()
{
}

void sub_1C74684()
{
}

void sub_1C74694()
{
}

void sub_1C746A0()
{
}

void sub_1C746B0()
{
}

void sub_1C746BC()
{
}

void sub_1C746CC()
{
}

void sub_1C746D8()
{
}

void sub_1C746E8()
{
}

void sub_1C746F4()
{
}

void sub_1C74704()
{
}

void sub_1C74710()
{
}

void sub_1C74720()
{
}

void sub_1C7472C()
{
}

void sub_1C7473C()
{
}

void sub_1C74748()
{
}

void sub_1C74758()
{
}

void sub_1C74764()
{
}

void sub_1C74774()
{
}

void sub_1C74780()
{
}

void sub_1C74790()
{
}

void sub_1C7479C()
{
}

void sub_1C747AC()
{
}

void sub_1C747B8()
{
}

void sub_1C747C8()
{
}

void sub_1C747D4()
{
}

void sub_1C747E4()
{
}

void sub_1C747F0()
{
}

void sub_1C74800()
{
}

void sub_1C7480C()
{
}

void sub_1C7481C()
{
}

void sub_1C74828()
{
}

void sub_1C74838()
{
}

void sub_1C74844()
{
}

void sub_1C74854()
{
}

void sub_1C74860()
{
}

void sub_1C74870()
{
}

void sub_1C7487C()
{
}

void sub_1C7488C()
{
}

void sub_1C74898()
{
}

void sub_1C748A8()
{
}

void sub_1C748B4()
{
}

void sub_1C748C4()
{
}

void sub_1C748D0()
{
}

void sub_1C748E0()
{
}

void sub_1C748EC()
{
}

void sub_1C748FC()
{
}

void sub_1C74908()
{
}

void sub_1C74918()
{
}

void sub_1C74924()
{
}

void sub_1C74934()
{
}

void sub_1C74940()
{
}

void sub_1C74950()
{
}

void sub_1C7495C()
{
}

void sub_1C7496C()
{
}

void sub_1C74978()
{
}

void sub_1C74988()
{
}

void sub_1C74994()
{
}

void sub_1C749A4()
{
}

void sub_1C749B0()
{
}

void sub_1C749C0()
{
}

void sub_1C749CC()
{
}

void sub_1C749DC()
{
}

void sub_1C749E8()
{
}

void sub_1C749F8()
{
}

void sub_1C74A04()
{
}

void sub_1C74A14()
{
}

void sub_1C74A20()
{
}

void sub_1C74A30()
{
}

void sub_1C74A3C()
{
}

void sub_1C74A4C()
{
}

void sub_1C74A58()
{
}

void sub_1C74A68()
{
}

void sub_1C74A74()
{
}

void sub_1C74A84()
{
}

void sub_1C74A90()
{
}

void sub_1C74AA0()
{
}

void sub_1C74AAC()
{
}

void sub_1C74ABC()
{
}

void sub_1C74AC8()
{
}

void sub_1C74AD8()
{
}

void sub_1C74AE4()
{
}

void sub_1C74AF4()
{
}

void sub_1C74B00()
{
}

void sub_1C74B10()
{
}

void sub_1C74B1C()
{
}

void sub_1C74B2C()
{
}

void sub_1C74B38()
{
}

void sub_1C74B48()
{
}

void sub_1C74B54()
{
}

void sub_1C74B64()
{
}

void sub_1C74B70()
{
}

void sub_1C74B80()
{
}

void sub_1C74B8C()
{
}

void sub_1C74B9C()
{
}

void sub_1C74BA8()
{
}

void sub_1C74BB8()
{
}

void sub_1C74BC4()
{
}

void sub_1C74BD4()
{
}

void sub_1C74BE0()
{
}

void sub_1C74BF0()
{
}

void sub_1C74BFC()
{
}

void sub_1C74C0C()
{
}

void sub_1C74C18()
{
}

void sub_1C74C28()
{
}

void sub_1C74C34()
{
}

void sub_1C74C44()
{
}

void sub_1C74C50()
{
}

void sub_1C74C60()
{
}

void sub_1C74C6C()
{
}

void sub_1C74C7C()
{
}

void sub_1C74C88()
{
}

void sub_1C74C98()
{
}

void sub_1C74CA4()
{
}

void sub_1C74CB4()
{
}

void sub_1C74CC0()
{
}

void sub_1C74CD0()
{
}

void sub_1C74CDC()
{
}

void sub_1C74CEC()
{
}

void sub_1C74CF8()
{
}

void sub_1C74D08()
{
}

void sub_1C74D14()
{
}

void sub_1C74D24()
{
}

void sub_1C74D30()
{
}

void sub_1C74D40()
{
}

void sub_1C74D4C()
{
}

void sub_1C74D5C()
{
}

void sub_1C74D68()
{
}

void sub_1C74D78()
{
}

void sub_1C74D84()
{
}

void sub_1C74D94()
{
}

void sub_1C74DA0()
{
}

void sub_1C74DB0()
{
}

void sub_1C74DBC()
{
}

void sub_1C74DCC()
{
}

void sub_1C74DD8()
{
}

void sub_1C74DE8()
{
}

void sub_1C74DF4()
{
}

void sub_1C74E04()
{
}

void sub_1C74E10()
{
}

void sub_1C74E20()
{
}

void sub_1C74E2C()
{
}

void sub_1C74E3C()
{
}

void sub_1C74E48()
{
}

void sub_1C74E54()
{
}

void sub_1C74E68()
{
}

void sub_1C74E7C()
{
}

void sub_1C74E84()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2628258 = 0;
  qword_2628260 = 0;
  qword_2628268 = 0;
  qword_2628258 = (uint64_t)operator new(0x18uLL);
  qword_2628260 = qword_2628258;
  qword_2628268 = qword_2628258 + 24;
  qword_2628260 = (uint64_t)sub_18914E4((uint64_t)&qword_2628268, (long long *)__p, v4, (char *)qword_2628258);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2628270 = 0;
  qword_2628278 = 0;
  qword_2628280 = 0;
  qword_2628270 = (uint64_t)operator new(0x18uLL);
  qword_2628278 = qword_2628270;
  qword_2628280 = qword_2628270 + 24;
  qword_2628278 = (uint64_t)sub_18914E4((uint64_t)&qword_2628280, (long long *)__p, v4, (char *)qword_2628270);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2628288 = 0;
  qword_2628290 = 0;
  qword_2628298 = 0;
  qword_2628288 = (uint64_t)operator new(0x18uLL);
  qword_2628290 = qword_2628288;
  qword_2628298 = qword_2628288 + 24;
  qword_2628290 = (uint64_t)sub_18914E4((uint64_t)&qword_2628298, (long long *)__p, v4, (char *)qword_2628288);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1C6A3D0();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26282B8, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26282E0, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_1C75540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_1C756F0(long long **a1@<X0>, unsigned __int8 **a2@<X1>, void *a3@<X8>)
{
  int v4 = *a1;
  int v5 = a1[1];
  if (*a1 == v5)
  {
LABEL_6:
    sub_5E5C(a3, (char *)&unk_21839BA);
  }
  else
  {
    while (1)
    {
      sub_1897DF8(__p, v4);
      uint64_t v7 = sub_1891CA8(v10, v11, a2);
      if (v7 != v11) {
        break;
      }
      int v12 = (void **)&v10;
      sub_1891624(&v12);
      if (SHIBYTE(v9) < 0) {
        operator delete(__p[0]);
      }
      v4 += 3;
      if (v4 == v5) {
        goto LABEL_6;
      }
    }
    if (SHIBYTE(v9) < 0)
    {
      sub_4200(a3, __p[0], (unint64_t)__p[1]);
    }
    else
    {
      *(_OWORD *)a3 = *(_OWORD *)__p;
      a3[2] = v9;
    }
    int v12 = (void **)&v10;
    sub_1891624(&v12);
    if (SHIBYTE(v9) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1C757E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1976248((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C757FC()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2628350, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1C7C7DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1C7E7E8()
{
}

void sub_1C7E7F4()
{
}

void sub_1C7E804()
{
}

void sub_1C7E810()
{
}

void sub_1C7E820()
{
}

void sub_1C7E82C()
{
}

void sub_1C7E83C()
{
}

void sub_1C7E848()
{
}

void sub_1C7E858()
{
}

void sub_1C7E864()
{
}

void sub_1C7E874()
{
}

void sub_1C7E880()
{
}

void sub_1C7E890()
{
}

void sub_1C7E89C()
{
}

void sub_1C7E8AC()
{
}

void sub_1C7E8B8()
{
}

void sub_1C7E8C8()
{
}

void sub_1C7E8D4()
{
}

void sub_1C7E8E4()
{
}

void sub_1C7E8F0()
{
}

void sub_1C7E900()
{
}

void sub_1C7E90C()
{
}

void sub_1C7E91C()
{
}

void sub_1C7E928()
{
}

void sub_1C7E938()
{
}

void sub_1C7E944()
{
}

void sub_1C7E954()
{
}

void sub_1C7E960()
{
}

void sub_1C7E970()
{
}

void sub_1C7E97C()
{
}

void sub_1C7E98C()
{
}

void sub_1C7E998()
{
}

void sub_1C7E9A8()
{
}

void sub_1C7E9B4()
{
}

void sub_1C7E9C4()
{
}

void sub_1C7E9D0()
{
}

void sub_1C7E9E0()
{
}

void sub_1C7E9EC()
{
}

void sub_1C7E9FC()
{
}

void sub_1C7EA08()
{
}

void sub_1C7EA18()
{
}

void sub_1C7EA24()
{
}

void sub_1C7EA34()
{
}

void sub_1C7EA40()
{
}

void sub_1C7EA50()
{
}

void sub_1C7EA5C()
{
}

void sub_1C7EA6C()
{
}

void sub_1C7EA78()
{
}

void sub_1C7EA88()
{
}

void sub_1C7EA94()
{
}

void sub_1C7EAA4()
{
}

void sub_1C7EAB0()
{
}

void sub_1C7EAC0()
{
}

void sub_1C7EACC()
{
}

void sub_1C7EADC()
{
}

void sub_1C7EAE8()
{
}

void sub_1C7EAF8()
{
}

void sub_1C7EB04()
{
}

void sub_1C7EB14()
{
}

void sub_1C7EB20()
{
}

void sub_1C7EB30()
{
}

void sub_1C7EB3C()
{
}

void sub_1C7EB4C()
{
}

void sub_1C7EB58()
{
}

void sub_1C7EB68()
{
}

void sub_1C7EB74()
{
}

void sub_1C7EB84()
{
}

void sub_1C7EB90()
{
}

void sub_1C7EBA0()
{
}

void sub_1C7EBAC()
{
}

void sub_1C7EBBC()
{
}

void sub_1C7EBC8()
{
}

void sub_1C7EBD8()
{
}

void sub_1C7EBE4()
{
}

void sub_1C7EBF4()
{
}

void sub_1C7EC00()
{
}

void sub_1C7EC10()
{
}

void sub_1C7EC1C()
{
}

void sub_1C7EC2C()
{
}

void sub_1C7EC38()
{
}

void sub_1C7EC48()
{
}

void sub_1C7EC54()
{
}

void sub_1C7EC64()
{
}

void sub_1C7EC70()
{
}

void sub_1C7EC80()
{
}

void sub_1C7EC8C()
{
}

void sub_1C7EC9C()
{
}

void sub_1C7ECA8()
{
}

void sub_1C7ECB8()
{
}

void sub_1C7ECC4()
{
}

void sub_1C7ECD4()
{
}

void sub_1C7ECE0()
{
}

void sub_1C7ECF0()
{
}

void sub_1C7ECFC()
{
}

void sub_1C7ED0C()
{
}

void sub_1C7ED18()
{
}

void sub_1C7ED28()
{
}

void sub_1C7ED34()
{
}

void sub_1C7ED44()
{
}

void sub_1C7ED50()
{
}

void sub_1C7ED60()
{
}

void sub_1C7ED6C()
{
}

void sub_1C7ED7C()
{
}

void sub_1C7ED88()
{
}

void sub_1C7ED98()
{
}

void sub_1C7EDA4()
{
}

void sub_1C7EDB4()
{
}

void sub_1C7EDC0()
{
}

void sub_1C7EDD0()
{
}

void sub_1C7EDDC()
{
}

void sub_1C7EDEC()
{
}

void sub_1C7EDF8()
{
}

void sub_1C7EE08()
{
}

void sub_1C7EE14()
{
}

void sub_1C7EE24()
{
}

void sub_1C7EE30()
{
}

void sub_1C7EE40()
{
}

void sub_1C7EE4C()
{
}

void sub_1C7EE5C()
{
}

void sub_1C7EE68()
{
}

void sub_1C7EE78()
{
}

void sub_1C7EE84()
{
}

void sub_1C7EE94()
{
}

void sub_1C7EEA0()
{
}

void sub_1C7EEB0()
{
}

void sub_1C7EEBC()
{
}

void sub_1C7EECC()
{
}

void sub_1C7EED8()
{
}

void sub_1C7EEE8()
{
}

void sub_1C7EEF4()
{
}

void sub_1C7EF04()
{
}

void sub_1C7EF10()
{
}

void sub_1C7EF20()
{
}

void sub_1C7EF2C()
{
}

void sub_1C7EF3C()
{
}

void sub_1C7EF48()
{
}

void sub_1C7EF58()
{
}

void sub_1C7EF64()
{
}

void sub_1C7EF74()
{
}

void sub_1C7EF80()
{
}

void sub_1C7EF90()
{
}

void sub_1C7EF9C()
{
}

void sub_1C7EFAC()
{
}

void sub_1C7EFB8()
{
}

void sub_1C7EFC8()
{
}

void sub_1C7EFD4()
{
}

void sub_1C7EFE4()
{
}

void sub_1C7EFF0()
{
}

void sub_1C7F000()
{
}

void sub_1C7F00C()
{
}

void sub_1C7F01C()
{
}

void sub_1C7F028()
{
}

void sub_1C7F038()
{
}

void sub_1C7F044()
{
}

void sub_1C7F054()
{
}

void sub_1C7F060()
{
}

void sub_1C7F070()
{
}

void sub_1C7F07C()
{
}

void sub_1C7F08C()
{
}

void sub_1C7F098()
{
}

void sub_1C7F0A8()
{
}

void sub_1C7F0B4()
{
}

void sub_1C7F0C4()
{
}

void sub_1C7F0D0()
{
}

void sub_1C7F0E0()
{
}

void sub_1C7F0EC()
{
}

void sub_1C7F0FC()
{
}

void sub_1C7F108()
{
}

void sub_1C7F118()
{
}

void sub_1C7F124()
{
}

void sub_1C7F134()
{
}

void sub_1C7F140()
{
}

void sub_1C7F150()
{
}

void sub_1C7F15C()
{
}

void sub_1C7F16C()
{
}

void sub_1C7F178()
{
}

void sub_1C7F188()
{
}

void sub_1C7F194()
{
}

void sub_1C7F1A4()
{
}

void sub_1C7F1B0()
{
}

void sub_1C7F1C0()
{
}

void sub_1C7F1CC()
{
}

void sub_1C7F1DC()
{
}

void sub_1C7F1E8()
{
}

void sub_1C7F1F8()
{
}

void sub_1C7F204()
{
}

void sub_1C7F214()
{
}

void sub_1C7F220()
{
}

void sub_1C7F230()
{
}

void sub_1C7F23C()
{
}

void sub_1C7F24C()
{
}

void sub_1C7F258()
{
}

void sub_1C7F268()
{
}

void sub_1C7F274()
{
}

void sub_1C7F284()
{
}

void sub_1C7F290()
{
}

void sub_1C7F2A0()
{
}

void sub_1C7F2AC()
{
}

void sub_1C7F2BC()
{
}

void sub_1C7F2C8()
{
}

void sub_1C7F2D8()
{
}

void sub_1C7F2E4()
{
}

void sub_1C7F2F4()
{
}

void sub_1C7F300()
{
}

void sub_1C7F310()
{
}

void sub_1C7F31C()
{
}

void sub_1C7F32C()
{
}

void sub_1C7F338()
{
}

void sub_1C7F348()
{
}

void sub_1C7F354()
{
}

void sub_1C7F364()
{
}

void sub_1C7F370()
{
}

void sub_1C7F380()
{
}

void sub_1C7F38C()
{
}

void sub_1C7F39C()
{
}

void sub_1C7F3A8()
{
}

void sub_1C7F3B8()
{
}

void sub_1C7F3C4()
{
}

void sub_1C7F3D4()
{
}

void sub_1C7F3E0()
{
}

void sub_1C7F3F0()
{
}

void sub_1C7F3FC()
{
}

void sub_1C7F40C()
{
}

void sub_1C7F418()
{
}

void sub_1C7F428()
{
}

void sub_1C7F434()
{
}

void sub_1C7F444()
{
}

void sub_1C7F450()
{
}

void sub_1C7F460()
{
}

void sub_1C7F46C()
{
}

void sub_1C7F47C()
{
}

void sub_1C7F488()
{
}

void sub_1C7F498()
{
}

void sub_1C7F4A4()
{
}

void sub_1C7F4B4()
{
}

void sub_1C7F4C0()
{
}

void sub_1C7F4D0()
{
}

void sub_1C7F4DC()
{
}

void sub_1C7F4EC()
{
}

void sub_1C7F4F8()
{
}

void sub_1C7F508()
{
}

void sub_1C7F514()
{
}

void sub_1C7F524()
{
}

void sub_1C7F530()
{
}

void sub_1C7F540()
{
}

void sub_1C7F54C()
{
}

void sub_1C7F55C()
{
}

void sub_1C7F568()
{
}

void sub_1C7F578()
{
}

void sub_1C7F584()
{
}

void sub_1C7F594()
{
}

void sub_1C7F5A0()
{
}

void sub_1C7F5B0()
{
}

void sub_1C7F5BC()
{
}

void sub_1C7F5CC()
{
}

void sub_1C7F5D8()
{
}

void sub_1C7F5E8()
{
}

void sub_1C7F5F4()
{
}

void sub_1C7F604()
{
}

void sub_1C7F610()
{
}

void sub_1C7F620()
{
}

void sub_1C7F62C()
{
}

void sub_1C7F63C()
{
}

void sub_1C7F648()
{
}

void sub_1C7F658()
{
}

void sub_1C7F664()
{
}

void sub_1C7F674()
{
}

void sub_1C7F680()
{
}

void sub_1C7F690()
{
}

void sub_1C7F69C()
{
}

void sub_1C7F6AC()
{
}

void sub_1C7F6B8()
{
}

void sub_1C7F6C8()
{
}

void sub_1C7F6D4()
{
}

void sub_1C7F6E4()
{
}

void sub_1C7F6F0()
{
}

void sub_1C7F700()
{
}

void sub_1C7F70C()
{
}

void sub_1C7F71C()
{
}

void sub_1C7F728()
{
}

void sub_1C7F734()
{
}

void sub_1C7F740()
{
}

void sub_1C7F74C()
{
}

void sub_1C7F75C()
{
}

void sub_1C7F768()
{
}

void sub_1C7F778()
{
}

void sub_1C7F784()
{
}

void sub_1C7F794()
{
}

void sub_1C7F7A0()
{
}

void sub_1C7F7B0()
{
}

void sub_1C7F7BC()
{
}

void sub_1C7F7CC()
{
}

void sub_1C7F7D8()
{
}

void sub_1C7F7E8()
{
}

void sub_1C7F7F4()
{
}

void sub_1C7F804()
{
}

void sub_1C7F810()
{
}

void sub_1C7F820()
{
}

void sub_1C7F82C()
{
}

void sub_1C7F83C()
{
}

void sub_1C7F848()
{
}

void sub_1C7F858()
{
}

void sub_1C7F864()
{
}

void sub_1C7F874()
{
}

void sub_1C7F880()
{
}

void sub_1C7F890()
{
}

void sub_1C7F89C()
{
}

void sub_1C7F8AC()
{
}

void sub_1C7F8B8()
{
}

void sub_1C7F8C8()
{
}

void sub_1C7F8D4()
{
}

void sub_1C7F8E4()
{
}

void sub_1C7F8F0()
{
}

void sub_1C7F900()
{
}

void sub_1C7F90C()
{
}

void sub_1C7F91C()
{
}

void sub_1C7F928()
{
}

void sub_1C7F938()
{
}

void sub_1C7F944()
{
}

void sub_1C7F954()
{
}

void sub_1C7F960()
{
}

void sub_1C7F970()
{
}

void sub_1C7F97C()
{
}

void sub_1C7F98C()
{
}

void sub_1C7F998()
{
}

void sub_1C7F9A8()
{
}

void sub_1C7F9B4()
{
}

void sub_1C7F9C4()
{
}

void sub_1C7F9D0()
{
}

void sub_1C7F9E0()
{
}

void sub_1C7F9EC()
{
}

void sub_1C7F9FC()
{
}

void sub_1C7FA08()
{
}

void sub_1C7FA18()
{
}

void sub_1C7FA24()
{
}

void sub_1C7FA34()
{
}

void sub_1C7FA40()
{
}

void sub_1C7FA50()
{
}

void sub_1C7FA5C()
{
}

void sub_1C7FA6C()
{
}

void sub_1C7FA78()
{
}

void sub_1C7FA88()
{
}

void sub_1C7FA94()
{
}

void sub_1C7FAA4()
{
}

void sub_1C7FAB0()
{
}

void sub_1C7FAC0()
{
}

void sub_1C7FACC()
{
}

void sub_1C7FADC()
{
}

void sub_1C7FAE8()
{
}

void sub_1C7FAF8()
{
}

void sub_1C7FB04()
{
}

void sub_1C7FB14()
{
}

void sub_1C7FB20()
{
}

void sub_1C7FB30()
{
}

void sub_1C7FB3C()
{
}

void sub_1C7FB4C()
{
}

void sub_1C7FB58()
{
}

void sub_1C7FB68()
{
}

void sub_1C7FB74()
{
}

void sub_1C7FB84()
{
}

void sub_1C7FB90()
{
}

void sub_1C7FBA0()
{
}

void sub_1C7FBAC()
{
}

void sub_1C7FBBC()
{
}

void sub_1C7FBC8()
{
}

void sub_1C7FBD8()
{
}

void sub_1C7FBE4()
{
}

void sub_1C7FBF4()
{
}

void sub_1C7FC00()
{
}

void sub_1C7FC10()
{
}

void sub_1C7FC1C()
{
}

void sub_1C7FC2C()
{
}

void sub_1C7FC38()
{
}

void sub_1C7FC48()
{
}

void sub_1C7FC54()
{
}

void sub_1C7FC64()
{
}

void sub_1C7FC70()
{
}

void sub_1C7FC80()
{
}

void sub_1C7FC8C()
{
}

void sub_1C7FC9C()
{
}

void sub_1C7FCA8()
{
}

void sub_1C7FCB8()
{
}

void sub_1C7FCC4()
{
}

void sub_1C7FCD4()
{
}

void sub_1C7FCE0()
{
}

void sub_1C7FCF0()
{
}

void sub_1C7FCFC()
{
}

void sub_1C7FD0C()
{
}

void sub_1C7FD18()
{
}

void sub_1C7FD28()
{
}

void sub_1C7FD34()
{
}

void sub_1C7FD44()
{
}

void sub_1C7FD50()
{
}

void sub_1C7FD60()
{
}

void sub_1C7FD6C()
{
}

void sub_1C7FD7C()
{
}

void sub_1C7FD88()
{
}

void sub_1C7FD98()
{
}

void sub_1C7FDA4()
{
}

void sub_1C7FDB4()
{
}

void sub_1C7FDC0()
{
}

void sub_1C7FDD0()
{
}

void sub_1C7FDDC()
{
}

void sub_1C7FDEC()
{
}

void sub_1C7FDF8()
{
}

void sub_1C7FE08()
{
}

void sub_1C7FE14()
{
}

void sub_1C7FE24()
{
}

void sub_1C7FE30()
{
}

void sub_1C7FE40()
{
}

void sub_1C7FE4C()
{
}

void sub_1C7FE5C()
{
}

void sub_1C7FE68()
{
}

void sub_1C7FE78()
{
}

void sub_1C7FE84()
{
}

void sub_1C7FE94()
{
}

void sub_1C7FEA0()
{
}

void sub_1C7FEB0()
{
}

void sub_1C7FEBC()
{
}

void sub_1C7FECC()
{
}

void sub_1C7FED8()
{
}

void sub_1C7FEE8()
{
}

void sub_1C7FEF4()
{
}

void sub_1C7FF04()
{
}

void sub_1C7FF10()
{
}

void sub_1C7FF20()
{
}

void sub_1C7FF2C()
{
}

void sub_1C7FF3C()
{
}

void sub_1C7FF48()
{
}

void sub_1C7FF58()
{
}

void sub_1C7FF64()
{
}

void sub_1C7FF74()
{
}

void sub_1C7FF80()
{
}

void sub_1C7FF90()
{
}

void sub_1C7FF9C()
{
}

void sub_1C7FFAC()
{
}

void sub_1C7FFB8()
{
}

void sub_1C7FFC8()
{
}

void sub_1C7FFD4()
{
}

void sub_1C7FFE4()
{
}

void sub_1C7FFF0()
{
}

void sub_1C80000()
{
}

void sub_1C8000C()
{
}

void sub_1C8001C()
{
}

void sub_1C80028()
{
}

void sub_1C80038()
{
}

void sub_1C80044()
{
}

void sub_1C80054()
{
}

void sub_1C80060()
{
}

void sub_1C80070()
{
}

void sub_1C8007C()
{
}

void sub_1C8008C()
{
}

void sub_1C80098()
{
}

void sub_1C800A8()
{
}

void sub_1C800B4()
{
}

void sub_1C800C4()
{
}

void sub_1C800D0()
{
}

void sub_1C800E0()
{
}

void sub_1C800EC()
{
}

void sub_1C800FC()
{
}

void sub_1C80108()
{
}

void sub_1C80118()
{
}

void sub_1C80124()
{
}

void sub_1C80134()
{
}

void sub_1C80140()
{
}

void sub_1C80150()
{
}

void sub_1C8015C()
{
}

void sub_1C8016C()
{
}

void sub_1C80178()
{
}

void sub_1C80188()
{
}

void sub_1C80194()
{
}

void sub_1C801A4()
{
}

void sub_1C801B0()
{
}

void sub_1C801C0()
{
}

void sub_1C801CC()
{
}

void sub_1C801DC()
{
}

void sub_1C801E8()
{
}

void sub_1C801F8()
{
}

void sub_1C80204()
{
}

void sub_1C80214()
{
}

void sub_1C80220()
{
}

void sub_1C80230()
{
}

void sub_1C8023C()
{
}

void sub_1C8024C()
{
}

void sub_1C80258()
{
}

void sub_1C80268()
{
}

void sub_1C80274()
{
}

void sub_1C80280()
{
}

void sub_1C80294()
{
}

void sub_1C802A8()
{
}

void sub_1C802B0()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2628308 = 0;
  qword_2628310 = 0;
  qword_2628318 = 0;
  qword_2628308 = (uint64_t)operator new(0x18uLL);
  qword_2628310 = qword_2628308;
  qword_2628318 = qword_2628308 + 24;
  qword_2628310 = (uint64_t)sub_18914E4((uint64_t)&qword_2628318, (long long *)__p, &v2, (char *)qword_2628308);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2628320 = 0;
  qword_2628328 = 0;
  qword_2628330 = 0;
  qword_2628320 = (uint64_t)operator new(0x18uLL);
  qword_2628328 = qword_2628320;
  qword_2628330 = qword_2628320 + 24;
  qword_2628328 = (uint64_t)sub_18914E4((uint64_t)&qword_2628330, (long long *)__p, &v2, (char *)qword_2628320);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2628338 = 0;
  qword_2628340 = 0;
  qword_2628348 = 0;
  qword_2628338 = (uint64_t)operator new(0x18uLL);
  qword_2628340 = qword_2628338;
  qword_2628348 = qword_2628338 + 24;
  qword_2628340 = (uint64_t)sub_18914E4((uint64_t)&qword_2628348, (long long *)__p, &v2, (char *)qword_2628338);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_1C757FC();
}

void sub_1C80454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2628340 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1C804B8(uint64_t a1, void **a2, uint64_t a3)
{
  char v6 = (uint64_t **)(a1 + 40);
  uint64_t v7 = sub_19081D4(a1 + 40, a2);
  if ((void **)(a1 + 48) == v7)
  {
    sub_1C809F8(__p, (long long *)a2, a3);
    sub_1C82258(v6, __p, (uint64_t)__p);
    sub_12127D0((uint64_t)&v11);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
  }
  else if (*((_DWORD *)v7 + 26) < *(_DWORD *)(a3 + 48))
  {
    char v8 = (std::string *)(v7 + 7);
    sub_121302C(v8, a3);
  }
}

void sub_1C80580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1C80594(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1C805D0(void *a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  int v4 = (int *)(a1 + 1);
  int v5 = (int *)*a1;
  if ((void *)*a1 == a1 + 1)
  {
    long long v22 = 0;
    char v23 = 0;
  }
  else
  {
    do
    {
      double v6 = (double)v5[26];
      if ((v5[18] & 4) != 0) {
        double v6 = *((double *)v5 + 12) * v6;
      }
      if (*((char *)v5 + 55) < 0)
      {
        sub_4200(__p, *((void **)v5 + 4), *((void *)v5 + 5));
      }
      else
      {
        *(_OWORD *)std::string __p = *((_OWORD *)v5 + 2);
        unint64_t v27 = *((void *)v5 + 6);
      }
      unint64_t v28 = *(void *)&v6;
      uint64_t v7 = *(__n128 **)(a2 + 8);
      unint64_t v8 = *(void *)(a2 + 16);
      if ((unint64_t)v7 >= v8)
      {
        uint64_t v9 = ((uint64_t)v7 - *(void *)a2) >> 5;
        unint64_t v10 = v9 + 1;
        if ((unint64_t)(v9 + 1) >> 59) {
          sub_2E00();
        }
        uint64_t v11 = v8 - *(void *)a2;
        if (v11 >> 4 > v10) {
          unint64_t v10 = v11 >> 4;
        }
        if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v12 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v12 = v10;
        }
        v29[4] = (uint64_t (*)(long long *, long long *))(a2 + 16);
        char v13 = (uint64_t (*)(long long *, long long *))sub_18B0970(a2 + 16, v12);
        int v14 = (char *)v13 + 32 * v9;
        v29[0] = v13;
        v29[1] = (uint64_t (*)(long long *, long long *))v14;
        void v29[3] = (uint64_t (*)(long long *, long long *))((char *)v13 + 32 * v15);
        long long v16 = *(_OWORD *)__p;
        *((void *)v14 + 2) = v27;
        *(_OWORD *)int v14 = v16;
        __p[1] = 0;
        unint64_t v27 = 0;
        __p[0] = 0;
        *((void *)v14 + 3) = v28;
        v29[2] = (uint64_t (*)(long long *, long long *))(v14 + 32);
        sub_1A5E7B8((uint64_t *)a2, v29);
        uint64_t v17 = *(void *)(a2 + 8);
        sub_1A5E960((uint64_t)v29);
        int v18 = SHIBYTE(v27);
        *(void *)(a2 + 8) = v17;
        if (v18 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        a3 = *(__n128 *)__p;
        v7[1].n128_u64[0] = v27;
        __n128 *v7 = a3;
        __p[1] = 0;
        unint64_t v27 = 0;
        __p[0] = 0;
        a3.n128_u64[0] = v28;
        v7[1].n128_u64[1] = v28;
        *(void *)(a2 + 8) = v7 + 2;
      }
      int v19 = (int *)*((void *)v5 + 1);
      if (v19)
      {
        do
        {
          long long v20 = v19;
          int v19 = *(int **)v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          long long v20 = (int *)*((void *)v5 + 2);
          BOOL v21 = *(void *)v20 == (void)v5;
          int v5 = v20;
        }
        while (!v21);
      }
      int v5 = v20;
    }
    while (v20 != v4);
    long long v22 = *(long long **)a2;
    char v23 = *(long long **)(a2 + 8);
  }
  if ((unint64_t)((char *)v23 - (char *)v22) > 0x20)
  {
    v29[0] = (uint64_t (*)(long long *, long long *))sub_1C80838;
    unint64_t v24 = 126 - 2 * __clz(((char *)v23 - (char *)v22) >> 5);
    if (v23 == v22) {
      uint64_t v25 = 0;
    }
    else {
      uint64_t v25 = v24;
    }
    sub_1C80A74(v22, v23, v29, v25, 1, a3);
  }
}

void sub_1C807F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17)
{
}

BOOL sub_1C80838(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 24) > *(double *)(a2 + 24);
}

void *sub_1C8084C@<X0>(void *result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  if (a2 < 0 || (uint64_t v4 = result[8], (result[9] - v4) >> 5 <= (unint64_t)a2))
  {
    char v7 = 0;
    *(unsigned char *)a3 = 0;
  }
  else
  {
    int v5 = (long long *)(v4 + 32 * a2);
    if (*((char *)v5 + 23) < 0)
    {
      uint64_t result = sub_4200((unsigned char *)a3, *(void **)v5, *((void *)v5 + 1));
    }
    else
    {
      long long v6 = *v5;
      *(void *)(a3 + 16) = *((void *)v5 + 2);
      *(_OWORD *)a3 = v6;
    }
    char v7 = 1;
  }
  *(unsigned char *)(a3 + 24) = v7;
  return result;
}

void *sub_1C808C8@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  long long v2 = (void *)result[5];
  char v3 = result + 6;
  if (v2 != result + 6)
  {
    int v5 = 0;
    do
    {
      long long v6 = (long long *)(v2 + 4);
      if ((unint64_t)v5 >= *(void *)(a2 + 16))
      {
        uint64_t result = sub_1D740((char **)a2, (uint64_t)v6);
        int v5 = result;
      }
      else
      {
        uint64_t result = sub_1962E70((void *)a2, v6);
        v5 += 3;
      }
      *(void *)(a2 + 8) = v5;
      char v7 = (void *)v2[1];
      if (v7)
      {
        do
        {
          unint64_t v8 = v7;
          char v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          unint64_t v8 = (void *)v2[2];
          BOOL v9 = *v8 == (void)v2;
          long long v2 = v8;
        }
        while (!v9);
      }
      long long v2 = v8;
    }
    while (v8 != v3);
  }
  return result;
}

void sub_1C8097C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1891624((void ***)va);
  _Unwind_Resume(a1);
}

void sub_1C80994(void *a1, __n128 a2)
{
  sub_1C805D0(a1 + 5, (uint64_t)&v3, a2);
  sub_1916BC4(a1 + 8);
  *((_OWORD *)a1 + 4) = v3;
  a1[10] = v4;
  uint64_t v4 = 0;
  long long v3 = 0uLL;
  int v5 = (void **)&v3;
  sub_1915C70(&v5);
}

void *sub_1C809F8(void *__dst, long long *a2, uint64_t a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  sub_1212718((uint64_t)(__dst + 3), a3);
  return __dst;
}

void sub_1C80A58(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C80A74(long long *a1, long long *a2, uint64_t (**a3)(long long *, long long *), uint64_t a4, char a5, __n128 a6)
{
void sub_1C80E9C(uint64_t a1, long long *a2, uint64_t (**a3)(long long *, uint64_t))
{
  if ((long long *)a1 != a2)
  {
    long long v5 = (long long *)(a1 + 32);
    if ((long long *)(a1 + 32) != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = a1;
      do
      {
        BOOL v9 = v5;
        if ((*a3)(v5, v8))
        {
          long long v15 = *v9;
          uint64_t v16 = *((void *)v9 + 2);
          *((void *)v9 + 1) = 0;
          *((void *)v9 + 2) = 0;
          *(void *)BOOL v9 = 0;
          uint64_t v17 = *(void *)(v8 + 56);
          uint64_t v10 = v7;
          while (1)
          {
            uint64_t v11 = a1 + v10;
            unint64_t v12 = (void **)(a1 + v10 + 32);
            if (*(char *)(a1 + v10 + 55) < 0) {
              operator delete(*v12);
            }
            *(_OWORD *)unint64_t v12 = *(_OWORD *)v11;
            *(void *)(a1 + v10 + 48) = *(void *)(v11 + 16);
            *(unsigned char *)(v11 + 23) = 0;
            *(unsigned char *)uint64_t v11 = 0;
            *(void *)(v11 + 56) = *(void *)(v11 + 24);
            if (!v10) {
              break;
            }
            char v13 = (*a3)(&v15, a1 + v10 - 32);
            v10 -= 32;
            if ((v13 & 1) == 0)
            {
              uint64_t v14 = a1 + v10 + 32;
              goto LABEL_12;
            }
          }
          uint64_t v14 = a1;
LABEL_12:
          if (*(char *)(v14 + 23) < 0) {
            operator delete(*(void **)v14);
          }
          *(_OWORD *)uint64_t v14 = v15;
          *(void *)(v14 + 16) = v16;
          *(void *)(v14 + 24) = v17;
        }
        long long v5 = v9 + 2;
        v7 += 32;
        uint64_t v8 = (uint64_t)v9;
      }
      while (v9 + 2 != a2);
    }
  }
}

void sub_1C80FE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C80FFC(uint64_t a1, long long *a2, uint64_t (**a3)(long long *, uint64_t))
{
  if ((long long *)a1 != a2)
  {
    uint64_t v4 = a1;
    long long v5 = (long long *)(a1 + 32);
    if ((long long *)(a1 + 32) != a2)
    {
      uint64_t v7 = (void *)(a1 + 56);
      do
      {
        uint64_t v8 = v5;
        if ((*a3)(v5, v4))
        {
          long long v13 = *v8;
          uint64_t v14 = *((void *)v8 + 2);
          *((void *)v8 + 1) = 0;
          *((void *)v8 + 2) = 0;
          *(void *)uint64_t v8 = 0;
          uint64_t v15 = *(void *)(v4 + 56);
          BOOL v9 = v7;
          do
          {
            uint64_t v10 = (void **)(v9 - 3);
            if (*((char *)v9 - 1) < 0) {
              operator delete(*v10);
            }
            *(_OWORD *)uint64_t v10 = *(_OWORD *)(v9 - 7);
            *(v9 - 1) = *(v9 - 5);
            *((unsigned char *)v9 - 33) = 0;
            *((unsigned char *)v9 - 56) = 0;
            *BOOL v9 = *(v9 - 4);
            char v11 = (*a3)(&v13, (uint64_t)(v9 - 11));
            v9 -= 4;
          }
          while ((v11 & 1) != 0);
          unint64_t v12 = (void **)(v9 - 3);
          if (*((char *)v9 - 1) < 0) {
            operator delete(*v12);
          }
          *(_OWORD *)unint64_t v12 = v13;
          *(v9 - 1) = v14;
          *BOOL v9 = v15;
        }
        long long v5 = v8 + 2;
        v7 += 4;
        uint64_t v4 = (uint64_t)v8;
      }
      while (v8 + 2 != a2);
    }
  }
}

void sub_1C81120(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C8113C(long long *a1, long long *a2, long long *a3, uint64_t (**a4)(long long *, long long *))
{
  char v8 = (*a4)(a2, a1);
  uint64_t result = (*a4)(a3, a2);
  if (v8)
  {
    if (result)
    {
      uint64_t v10 = (uint64_t *)a1 + 3;
      uint64_t v11 = *((void *)a1 + 2);
      long long v12 = *a1;
      uint64_t v13 = *((void *)a3 + 2);
      *a1 = *a3;
      *((void *)a1 + 2) = v13;
      *a3 = v12;
      *((void *)a3 + 2) = v11;
      uint64_t v14 = (uint64_t *)a3 + 3;
      uint64_t result = 1;
LABEL_10:
      uint64_t v28 = *v10;
      *uint64_t v10 = *v14;
      *uint64_t v14 = v28;
      return result;
    }
    uint64_t v21 = *((void *)a1 + 2);
    long long v22 = *a1;
    uint64_t v23 = *((void *)a2 + 2);
    *a1 = *a2;
    *((void *)a1 + 2) = v23;
    *a2 = v22;
    *((void *)a2 + 2) = v21;
    uint64_t v10 = (uint64_t *)a2 + 3;
    uint64_t v24 = *((void *)a1 + 3);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v24;
    if ((*a4)(a3, a2))
    {
      uint64_t v25 = *((void *)a2 + 2);
      long long v26 = *a2;
      uint64_t v27 = *((void *)a3 + 2);
      *a2 = *a3;
      *((void *)a2 + 2) = v27;
      *a3 = v26;
      *((void *)a3 + 2) = v25;
      uint64_t v14 = (uint64_t *)a3 + 3;
      goto LABEL_9;
    }
  }
  else
  {
    if (!result) {
      return result;
    }
    uint64_t v15 = *((void *)a2 + 2);
    long long v16 = *a2;
    uint64_t v17 = *((void *)a3 + 2);
    *a2 = *a3;
    *((void *)a2 + 2) = v17;
    *a3 = v16;
    *((void *)a3 + 2) = v15;
    uint64_t v14 = (uint64_t *)a2 + 3;
    *(void *)&long long v16 = *((void *)a2 + 3);
    *((void *)a2 + 3) = *((void *)a3 + 3);
    *((void *)a3 + 3) = v16;
    if ((*a4)(a2, a1))
    {
      uint64_t v18 = *((void *)a1 + 2);
      long long v19 = *a1;
      uint64_t v20 = *((void *)a2 + 2);
      *a1 = *a2;
      *((void *)a1 + 2) = v20;
      *a2 = v19;
      *((void *)a2 + 2) = v18;
      uint64_t v10 = (uint64_t *)a1 + 3;
LABEL_9:
      uint64_t result = 2;
      goto LABEL_10;
    }
  }
  return 1;
}

long long *sub_1C812D8(long long *a1, long long *a2, uint64_t (**a3)(void **, uint64_t))
{
  uint64_t v4 = a2;
  *(_OWORD *)std::string __p = *a1;
  uint64_t v17 = *((void *)a1 + 2);
  *((void *)a1 + 1) = 0;
  *((void *)a1 + 2) = 0;
  *(void *)a1 = 0;
  uint64_t v18 = *((void *)a1 + 3);
  if ((*a3)(__p, (uint64_t)(a2 - 2)))
  {
    char v6 = a1;
    do
      v6 += 2;
    while (((*a3)(__p, (uint64_t)v6) & 1) == 0);
  }
  else
  {
    unint64_t v7 = (unint64_t)(a1 + 2);
    do
    {
      char v6 = (long long *)v7;
      if (v7 >= (unint64_t)v4) {
        break;
      }
      int v8 = (*a3)(__p, v7);
      unint64_t v7 = (unint64_t)(v6 + 2);
    }
    while (!v8);
  }
  if (v6 < v4)
  {
    do
      v4 -= 2;
    while (((*a3)(__p, (uint64_t)v4) & 1) != 0);
  }
  while (v6 < v4)
  {
    long long v9 = *v6;
    uint64_t v20 = *((void *)v6 + 2);
    long long v19 = v9;
    long long v10 = *v4;
    *((void *)v6 + 2) = *((void *)v4 + 2);
    *char v6 = v10;
    long long v11 = v19;
    *((void *)v4 + 2) = v20;
    *uint64_t v4 = v11;
    *(void *)&long long v11 = *((void *)v6 + 3);
    *((void *)v6 + 3) = *((void *)v4 + 3);
    *((void *)v4 + 3) = v11;
    do
      v6 += 2;
    while (!(*a3)(__p, (uint64_t)v6));
    do
      v4 -= 2;
    while (((*a3)(__p, (uint64_t)v4) & 1) != 0);
  }
  long long v12 = (void **)(v6 - 2);
  if (v6 - 2 != a1)
  {
    if (*((char *)a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v13 = *(_OWORD *)v12;
    *((void *)a1 + 2) = *((void *)v6 - 2);
    *a1 = v13;
    *((unsigned char *)v6 - 9) = 0;
    *((unsigned char *)v6 - 32) = 0;
    *((void *)a1 + 3) = *((void *)v6 - 1);
  }
  if (*((char *)v6 - 9) < 0) {
    operator delete(*v12);
  }
  long long v14 = *(_OWORD *)__p;
  *((void *)v6 - 2) = v17;
  *(_OWORD *)long long v12 = v14;
  HIBYTE(v17) = 0;
  LOBYTE(__p[0]) = 0;
  *((void *)v6 - 1) = v18;
  if (SHIBYTE(v17) < 0) {
    operator delete(__p[0]);
  }
  return v6;
}

void sub_1C814A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1C814D8(uint64_t a1, unint64_t a2, uint64_t (**a3)(uint64_t, void **))
{
  uint64_t v6 = 0;
  *(_OWORD *)std::string __p = *(_OWORD *)a1;
  uint64_t v19 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  uint64_t v20 = *(void *)(a1 + 24);
  do
  {
    char v7 = (*a3)(a1 + v6 + 32, __p);
    v6 += 32;
  }
  while ((v7 & 1) != 0);
  unint64_t v8 = a1 + v6;
  if (v6 == 32)
  {
    do
    {
      if (v8 >= a2) {
        break;
      }
      a2 -= 32;
    }
    while (((*a3)(a2, __p) & 1) == 0);
  }
  else
  {
    do
      a2 -= 32;
    while (!(*a3)(a2, __p));
  }
  unint64_t v9 = a1 + v6;
  if (v8 < a2)
  {
    unint64_t v10 = a2;
    do
    {
      long long v21 = *(_OWORD *)v9;
      long long v11 = v21;
      uint64_t v22 = *(void *)(v9 + 16);
      uint64_t v12 = v22;
      uint64_t v13 = *(void *)(v10 + 16);
      *(_OWORD *)unint64_t v9 = *(_OWORD *)v10;
      *(void *)(v9 + 16) = v13;
      *(void *)(v10 + 16) = v12;
      *(_OWORD *)unint64_t v10 = v11;
      *(void *)&long long v11 = *(void *)(v9 + 24);
      *(void *)(v9 + 24) = *(void *)(v10 + 24);
      *(void *)(v10 + 24) = v11;
      do
        v9 += 32;
      while (((*a3)(v9, __p) & 1) != 0);
      do
        v10 -= 32;
      while (!(*a3)(v10, __p));
    }
    while (v9 < v10);
  }
  long long v14 = (void **)(v9 - 32);
  if (v9 - 32 != a1)
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v15 = *(_OWORD *)v14;
    *(void *)(a1 + 16) = *(void *)(v9 - 16);
    *(_OWORD *)a1 = v15;
    *(unsigned char *)(v9 - 9) = 0;
    *(unsigned char *)(v9 - 32) = 0;
    *(void *)(a1 + 24) = *(void *)(v9 - 8);
  }
  if (*(char *)(v9 - 9) < 0) {
    operator delete(*v14);
  }
  long long v16 = *(_OWORD *)__p;
  *(void *)(v9 - 16) = v19;
  *(_OWORD *)long long v14 = v16;
  HIBYTE(v19) = 0;
  LOBYTE(__p[0]) = 0;
  *(void *)(v9 - 8) = v20;
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[0]);
  }
  return v9 - 32;
}

void sub_1C816A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1C816D4(uint64_t a1, uint64_t a2, uint64_t (**a3)(long long *, long long *))
{
  uint64_t v6 = (a2 - a1) >> 5;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      unint64_t v8 = (long long *)(a2 - 32);
      if ((*a3)((long long *)(a2 - 32), (long long *)a1))
      {
        uint64_t v9 = *(void *)(a1 + 16);
        long long v10 = *(_OWORD *)a1;
        uint64_t v11 = *(void *)(a2 - 16);
        *(_OWORD *)a1 = *v8;
        *(void *)(a1 + 16) = v11;
        *unint64_t v8 = v10;
        *(void *)(a2 - 16) = v9;
        *(void *)&long long v10 = *(void *)(a1 + 24);
        *(void *)(a1 + 24) = *(void *)(a2 - 8);
        *(void *)(a2 - 8) = v10;
      }
      return 1;
    case 3:
      sub_1C8113C((long long *)a1, (long long *)(a1 + 32), (long long *)(a2 - 32), a3);
      return 1;
    case 4:
      sub_1C81968(a1, a1 + 32, a1 + 64, a2 - 32, a3);
      return 1;
    case 5:
      sub_1C81A84(a1, a1 + 32, a1 + 64, a1 + 96, a2 - 32, a3);
      return 1;
    default:
      uint64_t v12 = (long long *)(a1 + 64);
      sub_1C8113C((long long *)a1, (long long *)(a1 + 32), (long long *)(a1 + 64), a3);
      uint64_t v13 = a1 + 96;
      if (a1 + 96 == a2) {
        return 1;
      }
      uint64_t v14 = 0;
      int v15 = 0;
      break;
  }
  while (1)
  {
    if ((*a3)((long long *)v13, v12))
    {
      long long v21 = *(_OWORD *)v13;
      uint64_t v22 = *(void *)(v13 + 16);
      *(void *)(v13 + 8) = 0;
      *(void *)(v13 + 16) = 0;
      *(void *)uint64_t v13 = 0;
      uint64_t v23 = *(void *)(v13 + 24);
      uint64_t v16 = v14;
      while (1)
      {
        uint64_t v17 = a1 + v16;
        uint64_t v18 = (void **)(a1 + v16 + 96);
        if (*(char *)(a1 + v16 + 119) < 0) {
          operator delete(*v18);
        }
        *(_OWORD *)uint64_t v18 = *(_OWORD *)(v17 + 64);
        *(void *)(a1 + v16 + 112) = *(void *)(v17 + 80);
        *(unsigned char *)(v17 + 87) = 0;
        *(unsigned char *)(v17 + 64) = 0;
        *(void *)(v17 + 120) = *(void *)(v17 + 88);
        if (v16 == -64) {
          break;
        }
        char v19 = (*a3)(&v21, (long long *)(a1 + v16 + 32));
        v16 -= 32;
        if ((v19 & 1) == 0)
        {
          uint64_t v20 = a1 + v16 + 96;
          goto LABEL_14;
        }
      }
      uint64_t v20 = a1;
LABEL_14:
      if (*(char *)(v20 + 23) < 0) {
        operator delete(*(void **)v20);
      }
      *(_OWORD *)uint64_t v20 = v21;
      *(void *)(v20 + 16) = v22;
      HIBYTE(v22) = 0;
      LOBYTE(v21) = 0;
      *(void *)(v20 + 24) = v23;
      if (++v15 == 8) {
        return v13 + 32 == a2;
      }
    }
    uint64_t v12 = (long long *)v13;
    v14 += 32;
    v13 += 32;
    if (v13 == a2) {
      return 1;
    }
  }
}

void sub_1C81934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1C81968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (**a5)(long long *, long long *))
{
  sub_1C8113C((long long *)a1, (long long *)a2, (long long *)a3, a5);
  if ((*a5)((long long *)a4, (long long *)a3))
  {
    uint64_t v11 = *(void *)(a3 + 16);
    long long v12 = *(_OWORD *)a3;
    uint64_t v13 = *(void *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(void *)(a3 + 16) = v13;
    *(_OWORD *)a4 = v12;
    *(void *)(a4 + 16) = v11;
    *(void *)&long long v12 = *(void *)(a3 + 24);
    *(void *)(a3 + 24) = *(void *)(a4 + 24);
    *(void *)(a4 + 24) = v12;
    if ((*a5)((long long *)a3, (long long *)a2))
    {
      uint64_t v14 = *(void *)(a2 + 16);
      long long v15 = *(_OWORD *)a2;
      uint64_t v16 = *(void *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = v16;
      *(_OWORD *)a3 = v15;
      *(void *)(a3 + 16) = v14;
      *(void *)&long long v15 = *(void *)(a2 + 24);
      *(void *)(a2 + 24) = *(void *)(a3 + 24);
      *(void *)(a3 + 24) = v15;
      if ((*a5)((long long *)a2, (long long *)a1))
      {
        uint64_t v17 = *(void *)(a1 + 16);
        long long v18 = *(_OWORD *)a1;
        uint64_t v19 = *(void *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v19;
        *(_OWORD *)a2 = v18;
        *(void *)(a2 + 16) = v17;
        double result = *(double *)(a1 + 24);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(double *)(a2 + 24) = result;
      }
    }
  }
  return result;
}

double sub_1C81A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (**a6)(long long *, long long *))
{
  double v12 = sub_1C81968(a1, a2, a3, a4, a6);
  if (((unsigned int (*)(uint64_t, uint64_t, double))*a6)(a5, a4, v12))
  {
    uint64_t v14 = *(void *)(a4 + 16);
    long long v15 = *(_OWORD *)a4;
    uint64_t v16 = *(void *)(a5 + 16);
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(void *)(a4 + 16) = v16;
    *(_OWORD *)a5 = v15;
    *(void *)(a5 + 16) = v14;
    *(void *)&long long v15 = *(void *)(a4 + 24);
    *(void *)(a4 + 24) = *(void *)(a5 + 24);
    *(void *)(a5 + 24) = v15;
    if ((*a6)((long long *)a4, (long long *)a3))
    {
      uint64_t v17 = *(void *)(a3 + 16);
      long long v18 = *(_OWORD *)a3;
      uint64_t v19 = *(void *)(a4 + 16);
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(void *)(a3 + 16) = v19;
      *(_OWORD *)a4 = v18;
      *(void *)(a4 + 16) = v17;
      *(void *)&long long v18 = *(void *)(a3 + 24);
      *(void *)(a3 + 24) = *(void *)(a4 + 24);
      *(void *)(a4 + 24) = v18;
      if ((*a6)((long long *)a3, (long long *)a2))
      {
        uint64_t v20 = *(void *)(a2 + 16);
        long long v21 = *(_OWORD *)a2;
        uint64_t v22 = *(void *)(a3 + 16);
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(void *)(a2 + 16) = v22;
        *(_OWORD *)a3 = v21;
        *(void *)(a3 + 16) = v20;
        *(void *)&long long v21 = *(void *)(a2 + 24);
        *(void *)(a2 + 24) = *(void *)(a3 + 24);
        *(void *)(a3 + 24) = v21;
        if ((*a6)((long long *)a2, (long long *)a1))
        {
          uint64_t v23 = *(void *)(a1 + 16);
          long long v24 = *(_OWORD *)a1;
          uint64_t v25 = *(void *)(a2 + 16);
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(void *)(a1 + 16) = v25;
          *(_OWORD *)a2 = v24;
          *(void *)(a2 + 16) = v23;
          double result = *(double *)(a1 + 24);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(double *)(a2 + 24) = result;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C81BE8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int (**a4)(long long *, uint64_t), __n128 a5)
{
  if (a1 != a2)
  {
    uint64_t v7 = a2;
    uint64_t v9 = a2 - a1;
    uint64_t v10 = (a2 - a1) >> 5;
    if (a2 - a1 >= 33)
    {
      unint64_t v11 = (unint64_t)(v10 - 2) >> 1;
      unint64_t v12 = v11 + 1;
      uint64_t v13 = (long long *)(a1 + 32 * v11);
      do
      {
        a5.n128_f64[0] = sub_1C81D30(a1, a4, v10, v13);
        v13 -= 2;
        --v12;
      }
      while (v12);
    }
    uint64_t v14 = v7;
    if (v7 != a3)
    {
      uint64_t v15 = v7;
      do
      {
        if (((unsigned int (*)(uint64_t, uint64_t, __n128))*a4)(v15, a1, a5))
        {
          uint64_t v16 = *(void *)(v15 + 16);
          long long v17 = *(_OWORD *)v15;
          uint64_t v18 = *(void *)(a1 + 16);
          *(_OWORD *)uint64_t v15 = *(_OWORD *)a1;
          *(void *)(v15 + 16) = v18;
          *(_OWORD *)a1 = v17;
          *(void *)(a1 + 16) = v16;
          *(void *)&long long v17 = *(void *)(v15 + 24);
          *(void *)(v15 + 24) = *(void *)(a1 + 24);
          *(void *)(a1 + 24) = v17;
          a5.n128_f64[0] = sub_1C81D30(a1, a4, v10, (long long *)a1);
        }
        v15 += 32;
      }
      while (v15 != a3);
      uint64_t v14 = a3;
    }
    if (v9 >= 33)
    {
      unint64_t v19 = (unint64_t)v9 >> 5;
      do
      {
        sub_1C81EE4(a1, v7, (unsigned int (**)(uint64_t, uint64_t))a4, v19);
        v7 -= 32;
      }
      while (v19-- > 2);
    }
    return v14;
  }
  return a3;
}

double sub_1C81D30(uint64_t a1, unsigned int (**a2)(long long *, uint64_t), uint64_t a3, long long *a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    long long v5 = a4;
    uint64_t v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - a1) >> 5)
    {
      uint64_t v10 = ((uint64_t)a4 - a1) >> 4;
      uint64_t v11 = v10 + 1;
      unint64_t v12 = (long long *)(a1 + 32 * (v10 + 1));
      uint64_t v13 = v10 + 2;
      if (v10 + 2 < a3 && (*a2)(v12, (uint64_t)(v12 + 2)))
      {
        v12 += 2;
        uint64_t v11 = v13;
      }
      if ((((uint64_t (*)(long long *, long long *))*a2)(v12, v5) & 1) == 0)
      {
        long long v19 = *v5;
        uint64_t v20 = *((void *)v5 + 2);
        *((void *)v5 + 1) = 0;
        *((void *)v5 + 2) = 0;
        *(void *)long long v5 = 0;
        double v21 = *((double *)v5 + 3);
        do
        {
          uint64_t v15 = v12;
          if (*((char *)v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          long long v16 = *v12;
          *((void *)v5 + 2) = *((void *)v12 + 2);
          *long long v5 = v16;
          *((unsigned char *)v12 + 23) = 0;
          *(unsigned char *)unint64_t v12 = 0;
          *((void *)v5 + 3) = *((void *)v12 + 3);
          if (v7 < v11) {
            break;
          }
          uint64_t v17 = (2 * v11) | 1;
          unint64_t v12 = (long long *)(a1 + 32 * v17);
          uint64_t v11 = 2 * v11 + 2;
          if (v11 >= a3)
          {
            uint64_t v11 = v17;
          }
          else if ((*a2)((long long *)(a1 + 32 * v17), (uint64_t)(v12 + 2)))
          {
            v12 += 2;
          }
          else
          {
            uint64_t v11 = v17;
          }
          long long v5 = v15;
        }
        while (!(*a2)(v12, (uint64_t)&v19));
        if (*((char *)v15 + 23) < 0) {
          operator delete(*(void **)v15);
        }
        long long v18 = v19;
        *((void *)v15 + 2) = v20;
        *uint64_t v15 = v18;
        double result = v21;
        *((double *)v15 + 3) = v21;
      }
    }
  }
  return result;
}

void sub_1C81EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C81EE4(uint64_t a1, uint64_t a2, unsigned int (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v7 = *(void *)a1;
    *(void *)long long v16 = *(void *)(a1 + 8);
    *(void *)&v16[7] = *(void *)(a1 + 15);
    char v8 = *(unsigned char *)(a1 + 23);
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    uint64_t v9 = *(void *)(a1 + 24);
    uint64_t v10 = sub_1C82058(a1, a3, a4);
    uint64_t v11 = v10;
    unint64_t v12 = (void **)(a2 - 32);
    int v13 = *(char *)(v10 + 23);
    if (v10 == a2 - 32)
    {
      if (v13 < 0) {
        operator delete(*(void **)v10);
      }
      *(void *)uint64_t v11 = v7;
      *(void *)(v11 + 8) = *(void *)v16;
      *(void *)(v11 + 15) = *(void *)&v16[7];
      *(unsigned char *)(v11 + 23) = v8;
      *(void *)(v11 + 24) = v9;
    }
    else
    {
      if (v13 < 0) {
        operator delete(*(void **)v10);
      }
      long long v14 = *(_OWORD *)v12;
      *(void *)(v11 + 16) = *(void *)(a2 - 16);
      *(_OWORD *)uint64_t v11 = v14;
      *(unsigned char *)(a2 - 9) = 0;
      *(unsigned char *)(a2 - 32) = 0;
      *(void *)(v11 + 24) = *(void *)(a2 - 8);
      uint64_t v15 = v11 + 32;
      if (*(char *)(a2 - 9) < 0) {
        operator delete(*v12);
      }
      *(void *)(a2 - 32) = v7;
      *(void *)(a2 - 24) = *(void *)v16;
      *(void *)(a2 - 17) = *(void *)&v16[7];
      *(unsigned char *)(a2 - 9) = v8;
      *(void *)(a2 - 8) = v9;
      sub_1C82130(a1, v15, (uint64_t (**)(long long *, long long *))a3, (v15 - a1) >> 5);
    }
  }
}

void sub_1C82040(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C82058(uint64_t a1, unsigned int (**a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 32 * v6 + 32;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && (*a2)(v9, v9 + 32))
    {
      v9 += 32;
      uint64_t v6 = v11;
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v12 = *(_OWORD *)v9;
    *(void *)(a1 + 16) = *(void *)(v9 + 16);
    *(_OWORD *)a1 = v12;
    *(unsigned char *)(v9 + 23) = 0;
    *(unsigned char *)uint64_t v9 = 0;
    *(void *)(a1 + 24) = *(void *)(v9 + 24);
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

double sub_1C82130(uint64_t a1, uint64_t a2, uint64_t (**a3)(long long *, long long *), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    unint64_t v8 = v4 >> 1;
    uint64_t v9 = (long long *)(a1 + 32 * (v4 >> 1));
    uint64_t v10 = (long long *)(a2 - 32);
    if ((*a3)(v9, (long long *)(a2 - 32)))
    {
      long long v14 = *v10;
      uint64_t v15 = *((void *)v10 + 2);
      *((void *)v10 + 1) = 0;
      *((void *)v10 + 2) = 0;
      *(void *)uint64_t v10 = 0;
      double v16 = *(double *)(a2 - 8);
      do
      {
        long long v12 = v9;
        if (*((char *)v10 + 23) < 0) {
          operator delete(*(void **)v10);
        }
        long long v13 = *v9;
        *((void *)v10 + 2) = *((void *)v9 + 2);
        *uint64_t v10 = v13;
        *((unsigned char *)v9 + 23) = 0;
        *(unsigned char *)uint64_t v9 = 0;
        *((void *)v10 + 3) = *((void *)v9 + 3);
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v9 = (long long *)(a1 + 32 * v8);
        uint64_t v10 = v12;
      }
      while (((*a3)(v9, &v14) & 1) != 0);
      if (*((char *)v12 + 23) < 0) {
        operator delete(*(void **)v12);
      }
      *long long v12 = v14;
      *((void *)v12 + 2) = v15;
      double result = v16;
      *((double *)v12 + 3) = v16;
    }
  }
  return result;
}

void sub_1C8223C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1C82258(uint64_t **a1, void **a2, uint64_t a3)
{
  long long v5 = (void **)sub_1122028((uint64_t)a1, &v11, a2);
  uint64_t v6 = (char *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = (char *)operator new(0x70uLL);
    v9[1] = a1 + 1;
    *((_OWORD *)v6 + 2) = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    sub_1C82320((std::string *)(v6 + 56), a3 + 24);
    char v10 = 1;
    sub_11220BC(a1, v11, v7, (uint64_t *)v6);
    v9[0] = 0;
    sub_19D12A8((uint64_t)v9, 0);
  }
  return v6;
}

std::string *sub_1C82320(std::string *a1, uint64_t a2)
{
  sub_12125C0(a1, 0, 0);
  if (a1 != (std::string *)a2)
  {
    std::string::size_type size = a1->__r_.__value_.__l.__size_;
    if ((size & 2) != 0)
    {
      long long v5 = 0;
    }
    else
    {
      long long v5 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        long long v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_1213080((uint64_t)a1, a2);
    }
    else {
      sub_121302C(a1, a2);
    }
  }
  return a1;
}

uint64_t sub_1C823C0(uint64_t a1, uint64_t *a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  if (*a2 == v4)
  {
    int v5 = 0;
  }
  else
  {
    int v5 = 0;
    do
    {
      if (*(_DWORD *)(v3 + 768) == 1)
      {
        ++v5;
        if (*(unsigned char *)(sub_1CDE92C(v3) + 24))
        {
          uint64_t v6 = sub_1CDE92C(v3);
          if (!*(unsigned char *)(v6 + 24)) {
            sub_1907A2C();
          }
          sub_24AFC(a1, v6, v6);
        }
      }
      v3 += 776;
    }
    while (v3 != v4);
  }
  *(_DWORD *)(a1 + 40) = v5;
  return a1;
}

void sub_1C8246C(_Unwind_Exception *a1)
{
  sub_1898170(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1C82484(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 40) & 8) != 0
    && (uint64_t v1 = *(void *)(a1 + 192), (*(unsigned char *)(v1 + 40) & 1) != 0)
    && (uint64_t v2 = *(void *)(v1 + 56), (*(unsigned char *)(v2 + 40) & 0x20) != 0))
  {
    return *(_DWORD *)(*(void *)(v2 + 200) + 176) == 0;
  }
  else
  {
    return 0;
  }
}

BOOL sub_1C824C0(void *a1)
{
  uint64_t v2 = nullsub_1(*a1) + 1512;
  uint64_t v3 = nullsub_1(*a1);
  return sub_13A8C((void *)(v3 + 1032), v2) != 0;
}

BOOL sub_1C82508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 8) == 0) {
    return sub_1C8255C(a1, a2);
  }
  int v4 = *(_DWORD *)(a3 + 1064);
  if (*(_DWORD *)(a1 + 72) <= v4) {
    return sub_1C8255C(a1, a2);
  }
  int v5 = *(_DWORD *)(a2 + 40);
  if ((v5 & 8) == 0) {
    return sub_1C8255C(a1, a2);
  }
  int v6 = v3 & v5 & 4;
  if (*(_DWORD *)(a2 + 72) <= v4 || v6 == 0) {
    return sub_1C8255C(a1, a2);
  }
  double v8 = *(double *)(a1 + 64);
  double v9 = *(double *)(a2 + 64);
  if (v8 == v9) {
    return sub_1C8255C(a1, a2);
  }
  else {
    return v8 > v9;
  }
}

BOOL sub_1C8255C(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 104);
  double v3 = *(double *)(a2 + 104);
  BOOL v4 = v2 <= v3;
  if (v2 == v3)
  {
    int v5 = *(_DWORD *)(a1 + 40);
    if ((v5 & 4) == 0
      || (*(unsigned char *)(a2 + 40) & 4) == 0
      || (double v6 = *(double *)(a1 + 64), v7 = *(double *)(a2 + 64), v4 = v6 <= v7, v6 == v7))
    {
      if ((v5 & 8) == 0
        || (*(unsigned char *)(a2 + 40) & 8) == 0
        || (v8 = *(_DWORD *)(a1 + 72), v9 = *(_DWORD *)(a2 + 72), BOOL v4 = v8 <= v9, v8 == v9))
      {
        int v10 = sub_1122114((void *)a1, (void **)a2);
        BOOL v4 = (v10 & 0x80) != 0 || v10 << 24 == 0;
      }
    }
  }
  return !v4;
}

void sub_1C825CC(long long **a1)
{
  uint64_t v1 = *a1;
  double v2 = a1[1];
  if (v2 != v1)
  {
    BOOL v4 = sub_1C8262C;
    sub_1C842A8(v1, v2, (uint64_t (**)(long long *, uint64_t))&v4, 126 - 2 * __clz(0xF0F0F0F0F0F0F0F1 * (((char *)v2 - (char *)v1) >> 3)), 1);
  }
}

BOOL sub_1C8262C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 56) > *(double *)(a2 + 56);
}

BOOL sub_1C82640(uint64_t a1, uint64_t a2, char a3, double a4)
{
  int v4 = *(_DWORD *)(a1 + 16);
  if ((~v4 & 0x18) != 0) {
    return 0;
  }
  if ((a3 & 1) == 0)
  {
    int v5 = *(_DWORD *)(a1 + 48);
LABEL_8:
    BOOL v7 = (double)v5 < a4;
    return !v7;
  }
  int v5 = *(_DWORD *)(a1 + 48);
  if ((v4 & 4) == 0 || *(_DWORD *)(a1 + 52) != 2) {
    goto LABEL_8;
  }
  if (v5 < *(_DWORD *)(a2 + 1068)) {
    return 0;
  }
  BOOL v7 = *(double *)(a1 + 40) < *(double *)(a2 + 1072);
  return !v7;
}

void sub_1C826A0(uint64_t a1@<X0>, uint64_t **a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, void *a5@<X8>, double a6@<D0>)
{
  v33[0] = 0;
  v33[1] = 0;
  v31[1] = 0;
  long long v32 = (uint64_t *)v33;
  long long v30 = (uint64_t *)v31;
  v31[0] = 0;
  int v9 = *a2;
  int v10 = a2[1];
  if (*a2 != v10)
  {
    do
    {
      uint64_t v13 = *v9;
      int v14 = *(_DWORD *)(*v9 + 304);
      if (v14 != 1 || *(_DWORD *)(a3 + 740) < 1)
      {
        if (v14 != 4 || *(_DWORD *)(a3 + 736) < 1) {
          goto LABEL_25;
        }
        if (*(_DWORD *)(v13 + 296) != 4) {
          sub_11388B8();
        }
        sub_1C82994((void *)(v13 + 8), v13 + 104, a3, a4, (uint64_t *)&v27, a6);
        uint64_t v17 = (uint64_t)v27;
        long long v18 = v28;
        while ((void *)v17 != v18)
        {
          if (*(void *)(a1 + 24) && sub_13A8C((void *)a1, v17)) {
            sub_1C82B94(&v30, v17);
          }
          v17 += 112;
        }
      }
      else
      {
        if (*(_DWORD *)(v13 + 296) != 2) {
          sub_11388B8();
        }
        sub_1C82994((void *)(v13 + 8), v13 + 160, a3, a4, (uint64_t *)&v27, a6);
        uint64_t v19 = (uint64_t)v27;
        uint64_t v20 = v28;
        while ((void *)v19 != v20)
        {
          if (*(int *)(a1 + 40) >= 1) {
            sub_1C82B94(&v32, v19);
          }
          v19 += 112;
        }
      }
      int v34 = (void **)&v27;
      sub_1C86ED4(&v34);
LABEL_25:
      v9 += 2;
    }
    while (v9 != v10);
  }
  a5[1] = 0;
  double v21 = a5 + 1;
  a5[2] = 0;
  a5[4] = 0;
  uint64_t v22 = a5 + 4;
  *a5 = a5 + 1;
  a5[3] = a5 + 4;
  a5[5] = 0;
  sub_1C82CA0(&v32, *(_DWORD *)(a3 + 740), a3, 0, a4, (uint64_t *)&v27);
  sub_1C87B38((uint64_t)a5, (void *)a5[1]);
  uint64_t v23 = v28;
  *a5 = v27;
  a5[1] = v23;
  uint64_t v24 = v29;
  a5[2] = v29;
  if (v24)
  {
    v23[2] = v21;
    uint64_t v27 = &v28;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v23 = 0;
  }
  else
  {
    *a5 = v21;
  }
  sub_1C87B38((uint64_t)&v27, v23);
  sub_1C82CA0(&v30, *(_DWORD *)(a3 + 736), a3, 1, a4, (uint64_t *)&v27);
  sub_1C87B38((uint64_t)(a5 + 3), (void *)a5[4]);
  uint64_t v25 = v28;
  a5[3] = v27;
  a5[4] = v25;
  uint64_t v26 = v29;
  a5[5] = v29;
  if (v26)
  {
    v25[2] = v22;
    uint64_t v27 = &v28;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v25 = 0;
  }
  else
  {
    a5[3] = v22;
  }
  sub_1C87B38((uint64_t)&v27, v25);
  sub_1C87B38((uint64_t)&v30, v31[0]);
  sub_1C87B38((uint64_t)&v32, v33[0]);
}

void sub_1C82934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13, uint64_t a14, char a15, void *a16)
{
  sub_1C8332C(v16);
  sub_1C87B38((uint64_t)&a12, a13);
  sub_1C87B38((uint64_t)&a15, a16);
  _Unwind_Resume(a1);
}

void sub_1C82994(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  *a5 = 0;
  a5[1] = 0;
  a5[2] = 0;
  if (a1[7])
  {
    BOOL v7 = (std::string *)a1[8];
    int v8 = (std::string *)a1[9];
    if (v7 != v8)
    {
      uint64_t v12 = (uint64_t)(a1 + 5);
      uint64_t v13 = (void **)(a1 + 6);
      do
      {
        int v14 = sub_19081D4(v12, (void **)&v7->__r_.__value_.__l.__data_);
        if (v13 != v14)
        {
          uint64_t v15 = (uint64_t)(v14 + 7);
          if (sub_1C82640((uint64_t)(v14 + 7), a3, a4, a6))
          {
            memset(&v20, 0, sizeof(v20));
            sub_12125C0(&v21, 0, 0);
            memset(v24, 0, sizeof(v24));
            std::string::operator=(&v20, v7);
            if (v24 != (unsigned char *)(a2 + 48)) {
              sub_1998160((uint64_t)v24, *(std::string **)(a2 + 48), *(std::string **)(a2 + 56), (uint64_t)(*(void *)(a2 + 56) - *(void *)(a2 + 48)) >> 6);
            }
            sub_121302C(&v21, v15);
            double v16 = v22;
            if ((v21.__r_.__value_.__s.__data_[16] & 4) == 0) {
              double v16 = 1.0;
            }
            double v25 = v16 * (double)v23;
            unint64_t v17 = a5[1];
            if (v17 >= a5[2])
            {
              uint64_t v18 = sub_1C86788(a5, (long long *)&v20);
            }
            else
            {
              sub_1C868A8((void *)a5[1], (long long *)&v20);
              uint64_t v18 = v17 + 112;
              a5[1] = v17 + 112;
            }
            a5[1] = v18;
            uint64_t v26 = (void **)v24;
            sub_18D522C(&v26);
            sub_12127D0((uint64_t)&v21);
            if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v20.__r_.__value_.__l.__data_);
            }
            if (!a4) {
              break;
            }
          }
        }
        BOOL v7 = (std::string *)((char *)v7 + 32);
      }
      while (v7 != v8);
    }
  }
}

void sub_1C82B48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  v16[1] = v17;
  sub_1C86734((uint64_t)&__p);
  std::string __p = v16;
  sub_1C86ED4((void ***)&__p);
  _Unwind_Resume(a1);
}

void sub_1C82B94(uint64_t **a1, uint64_t a2)
{
  int v4 = sub_19081D4((uint64_t)a1, (void **)a2);
  if (a1 + 1 == (uint64_t **)v4)
  {
    sub_1C86DD4((char *)v7, (long long *)a2, (long long *)a2);
    sub_1C86BE8(a1, v7, (uint64_t)v7);
    uint64_t v13 = (void **)&v12;
    sub_18D522C(&v13);
    sub_12127D0((uint64_t)&v11);
    if (v10 < 0) {
      operator delete(__p);
    }
    if (v8 < 0) {
      operator delete(v7[0]);
    }
  }
  else
  {
    int v5 = v4;
    if (*((double *)v4 + 20) < *(double *)(a2 + 104))
    {
      double v6 = v4 + 7;
      std::string::operator=((std::string *)(v4 + 7), (const std::string *)a2);
      sub_121302C((std::string *)(v5 + 10), a2 + 24);
      if (v6 != (void **)a2) {
        sub_1998160((uint64_t)(v5 + 17), *(std::string **)(a2 + 80), *(std::string **)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 6);
      }
      v5[20] = *(void **)(a2 + 104);
    }
  }
}

void sub_1C82C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1C82CA0(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  char v63 = a4;
  char v62 = a5;
  if (a1[2] <= (unint64_t)a2)
  {
    sub_1C87850(a6, (uint64_t)a1);
  }
  else
  {
    sub_1C86F58(&v60, a2);
    char v10 = (long long *)*a1;
    int v9 = (long long *)(a1 + 1);
    char v8 = v10;
    uint64_t v11 = (uint64_t)v60;
    uint64_t v12 = v61;
    long long v57 = &v63;
    uint64_t v58 = a3;
    int v59 = &v62;
    if (v60 != v61)
    {
      if (v8 == v9)
      {
        int v14 = v60;
      }
      else
      {
        uint64_t v13 = v8;
        int v14 = v60;
        do
        {
          sub_1C870F0(v14, (uint64_t)(v13 + 2));
          uint64_t v15 = (long long *)*((void *)v13 + 1);
          if (v15)
          {
            do
            {
              char v8 = v15;
              uint64_t v15 = *(long long **)v15;
            }
            while (v15);
          }
          else
          {
            do
            {
              char v8 = (long long *)*((void *)v13 + 2);
              BOOL v19 = *(void *)v8 == (void)v13;
              uint64_t v13 = v8;
            }
            while (!v19);
          }
          int v14 = (std::string *)((char *)v14 + 136);
          if (v8 == v9) {
            break;
          }
          uint64_t v13 = v8;
        }
        while (v14 != v12);
      }
      uint64_t v56 = (uint64_t)v14 - v11;
      if ((uint64_t)v14 - v11 >= 137)
      {
        unint64_t v16 = (unint64_t)(((uint64_t)v14 - v11) / 136 - 2) >> 1;
        unint64_t v17 = v16 + 1;
        uint64_t v18 = v11 + 136 * v16;
        do
        {
          sub_1C87158(v11, (uint64_t)&v57, ((uint64_t)v14 - v11) / 136, v18);
          v18 -= 136;
          --v17;
        }
        while (v17);
      }
      if (v8 != v9)
      {
        while (1)
        {
          sub_1C8741C((char *)&__dst, v8 + 2);
          if (*v57) {
            BOOL v19 = *v59 == 0;
          }
          else {
            BOOL v19 = 1;
          }
          if (v19) {
            BOOL v20 = sub_1C8255C((uint64_t)&v74, v11 + 24);
          }
          else {
            BOOL v20 = sub_1C82508((uint64_t)&v74, v11 + 24, v58);
          }
          BOOL v21 = v20;
          v64[0] = &v77;
          sub_18D522C((void ***)v64);
          sub_12127D0((uint64_t)v76);
          if (SHIBYTE(v75) < 0) {
            operator delete((void *)v74);
          }
          if ((SHIBYTE(v73) & 0x80000000) == 0) {
            break;
          }
          operator delete((void *)__dst);
          if (v21) {
            goto LABEL_33;
          }
LABEL_34:
          double v22 = (long long *)*((void *)v8 + 1);
          if (v22)
          {
            do
            {
              int v23 = v22;
              double v22 = *(long long **)v22;
            }
            while (v22);
          }
          else
          {
            do
            {
              int v23 = (long long *)*((void *)v8 + 2);
              BOOL v19 = *(void *)v23 == (void)v8;
              char v8 = v23;
            }
            while (!v19);
          }
          char v8 = v23;
          if (v23 == v9) {
            goto LABEL_40;
          }
        }
        if (!v21) {
          goto LABEL_34;
        }
LABEL_33:
        sub_1C870F0((std::string *)v11, (uint64_t)(v8 + 2));
        sub_1C87158(v11, (uint64_t)&v57, ((uint64_t)v14 - v11) / 136, v11);
        goto LABEL_34;
      }
LABEL_40:
      if (v56 >= 137)
      {
        int64_t v24 = v56 / 0x88uLL;
        long long v55 = (long long *)(v11 + 24);
        do
        {
          long long v25 = *(_OWORD *)v11;
          uint64_t v65 = *(void *)(v11 + 16);
          *(_OWORD *)int v64 = v25;
          *(void *)(v11 + 8) = 0;
          *(void *)(v11 + 16) = 0;
          *(void *)uint64_t v11 = 0;
          long long v26 = *v55;
          uint64_t v67 = *(void *)(v11 + 40);
          long long __p = v26;
          *(void *)(v11 + 32) = 0;
          *(void *)(v11 + 40) = 0;
          *(void *)long long v55 = 0;
          sub_1C82320(v68, v11 + 48);
          uint64_t v27 = 0;
          long long v69 = *(_OWORD *)(v11 + 104);
          uint64_t v70 = *(void *)(v11 + 120);
          *(void *)(v11 + 104) = 0;
          *(void *)(v11 + 112) = 0;
          *(void *)(v11 + 120) = 0;
          uint64_t v71 = *(void *)(v11 + 128);
          uint64_t v28 = v11;
          do
          {
            uint64_t v29 = v28;
            uint64_t v30 = v27 + 1;
            v28 += 136 * (v27 + 1);
            uint64_t v31 = 2 * v27;
            uint64_t v27 = (2 * v27) | 1;
            uint64_t v32 = v31 + 2;
            if (v31 + 2 >= v24) {
              goto LABEL_51;
            }
            uint64_t v33 = v29 + 136 * v30 + 24;
            uint64_t v34 = v28 + 160;
            if (*v57) {
              BOOL v35 = *v59 == 0;
            }
            else {
              BOOL v35 = 1;
            }
            if (v35)
            {
              if (!sub_1C8255C(v33, v34)) {
                goto LABEL_51;
              }
LABEL_50:
              v28 += 136;
              uint64_t v27 = v32;
              goto LABEL_51;
            }
            if (sub_1C82508(v33, v34, v58)) {
              goto LABEL_50;
            }
LABEL_51:
            sub_1C8751C(v29, (long long *)v28);
          }
          while (v27 <= (uint64_t)((unint64_t)(v24 - 2) >> 1));
          int v14 = (std::string *)((char *)v14 - 136);
          if ((std::string *)v28 == v14)
          {
            sub_1C8751C(v28, (long long *)v64);
            goto LABEL_79;
          }
          sub_1C8751C(v28, (long long *)v14);
          sub_1C8751C((uint64_t)v14, (long long *)v64);
          uint64_t v36 = v28 - v11 + 136;
          if (v36 < 137) {
            goto LABEL_79;
          }
          unint64_t v37 = v36 / 0x88uLL - 2;
          unint64_t v38 = v37 >> 1;
          uint64_t v39 = v11 + 136 * (v37 >> 1);
          uint64_t v40 = v39 + 24;
          char v41 = (long long *)(v28 + 24);
          if (*v57 && *v59)
          {
            if (!sub_1C82508(v40, v28 + 24, v58)) {
              goto LABEL_79;
            }
          }
          else if (!sub_1C8255C(v40, v28 + 24))
          {
            goto LABEL_79;
          }
          long long v42 = *(_OWORD *)v28;
          uint64_t v73 = *(void *)(v28 + 16);
          long long __dst = v42;
          *(void *)(v28 + 8) = 0;
          *(void *)(v28 + 16) = 0;
          *(void *)uint64_t v28 = 0;
          long long v43 = *v41;
          uint64_t v75 = *(void *)(v28 + 40);
          long long v74 = v43;
          *(void *)(v28 + 32) = 0;
          *(void *)(v28 + 40) = 0;
          *(void *)char v41 = 0;
          sub_1C82320(v76, v28 + 48);
          long long v77 = *(_OWORD *)(v28 + 104);
          uint64_t v78 = *(void *)(v28 + 120);
          *(void *)(v28 + 104) = 0;
          *(void *)(v28 + 112) = 0;
          *(void *)(v28 + 120) = 0;
          uint64_t v79 = *(void *)(v28 + 128);
          sub_1C8751C(v28, (long long *)(v11 + 136 * (v37 >> 1)));
          if (v37 >= 2)
          {
            long long v45 = v59;
            char v46 = v57;
            uint64_t v54 = v58;
            do
            {
              unint64_t v47 = v38 - 1;
              unint64_t v38 = (v38 - 1) >> 1;
              uint64_t v44 = v11 + 136 * v38;
              uint64_t v48 = v44 + 24;
              if (*v46) {
                BOOL v49 = *v45 == 0;
              }
              else {
                BOOL v49 = 1;
              }
              if (v49)
              {
                if (!sub_1C8255C(v48, (uint64_t)&v74)) {
                  goto LABEL_64;
                }
              }
              else if (!sub_1C82508(v48, (uint64_t)&v74, v54))
              {
                goto LABEL_64;
              }
              sub_1C8751C(v39, (long long *)(v11 + 136 * v38));
              uint64_t v39 = v11 + 136 * v38;
            }
            while (v47 > 1);
          }
          else
          {
LABEL_64:
            uint64_t v44 = v39;
          }
          sub_1C8751C(v44, &__dst);
          uint64_t v80 = (void **)&v77;
          sub_18D522C(&v80);
          sub_12127D0((uint64_t)v76);
          if (SHIBYTE(v75) < 0) {
            operator delete((void *)v74);
          }
          if (SHIBYTE(v73) < 0) {
            operator delete((void *)__dst);
          }
LABEL_79:
          *(void *)&long long __dst = &v69;
          sub_18D522C((void ***)&__dst);
          sub_12127D0((uint64_t)v68);
          if (SHIBYTE(v67) < 0) {
            operator delete((void *)__p);
          }
          if (SHIBYTE(v65) < 0) {
            operator delete(v64[0]);
          }
        }
        while (v24-- > 2);
      }
    }
    a6[2] = 0;
    a6[1] = 0;
    *a6 = (uint64_t)(a6 + 1);
    p_int data = (void **)&v60->__r_.__value_.__l.__data_;
    char v51 = (void **)&v61->__r_.__value_.__l.__data_;
    while (p_data != v51)
    {
      sub_1C87650((uint64_t **)a6, p_data, (long long *)p_data);
      p_data += 17;
    }
    *(void *)&long long __dst = &v60;
    sub_1C8706C((void ***)&__dst);
  }
}

void sub_1C832F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void **a27)
{
  a27 = (void **)&a23;
  sub_1C8706C(&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_1C8332C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C83368@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  memset(v35, 0, sizeof(v35));
  int v36 = 1065353216;
  uint64_t v32 = 0;
  uint64_t v33 = 0;
  unint64_t v34 = 0;
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5) {
    double v6 = (uint64_t *)(v5 + 8);
  }
  else {
    double v6 = 0;
  }
  uint64_t v7 = *(int *)(a1 + 32);
  if (v7)
  {
    char v8 = &v6[v7];
    do
    {
      uint64_t v9 = *v6;
      uint64_t v10 = *(void *)(*v6 + 40);
      if (v10) {
        uint64_t v11 = (long long **)(v10 + 8);
      }
      else {
        uint64_t v11 = 0;
      }
      uint64_t v12 = *(int *)(v9 + 32);
      if (v12)
      {
        uint64_t v13 = 8 * v12;
        do
        {
          int v14 = *v11;
          sub_19DEBBC((char *)__dst, *v11, (long long *)(*(void *)(v9 + 48) & 0xFFFFFFFFFFFFFFFELL));
          sub_1C88008((uint64_t)v35, (unsigned __int8 *)__dst, (uint64_t)__dst);
          if (v31 < 0) {
            operator delete(__p);
          }
          if (SHIBYTE(v29) < 0) {
            operator delete(__dst[0]);
          }
          uint64_t v15 = v33;
          if ((unint64_t)v33 >= v34)
          {
            unint64_t v17 = sub_6E6EC(&v32, (uint64_t)v14);
          }
          else
          {
            if (*((char *)v14 + 23) < 0)
            {
              sub_4200(v33, *(void **)v14, *((void *)v14 + 1));
            }
            else
            {
              long long v16 = *v14;
              *((void *)v33 + 2) = *((void *)v14 + 2);
              *uint64_t v15 = v16;
            }
            unint64_t v17 = (char *)v15 + 24;
          }
          uint64_t v33 = v17;
          ++v11;
          v13 -= 8;
        }
        while (v13);
      }
      ++v6;
    }
    while (v6 != v8);
  }
  uint64_t v18 = (void *)sub_5231C((uint64_t)a2);
  if (v18[1] == *v18)
  {
    sub_6F3150(a2, (uint64_t)__dst);
  }
  else
  {
    BOOL v19 = (long long **)sub_5231C((uint64_t)a2);
    BOOL v20 = *v19;
    if (v19[1] == *v19) {
      sub_66748();
    }
    if (*((char *)v20 + 23) < 0)
    {
      sub_4200(__dst, *(void **)v20, *((void *)v20 + 1));
    }
    else
    {
      long long v21 = *v20;
      uint64_t v29 = *((void *)v20 + 2);
      *(_OWORD *)long long __dst = v21;
    }
  }
  sub_1A02778((uint64_t *)&v32, (uint64_t)a2, (uint64_t)__dst, v26);
  double v22 = sub_31B0D0(v35, (uint64_t)v26);
  if (v22)
  {
    if (*((char *)v22 + 63) < 0)
    {
      sub_4200((unsigned char *)a3, (void *)v22[5], v22[6]);
    }
    else
    {
      long long v23 = *(_OWORD *)(v22 + 5);
      *(void *)(a3 + 16) = v22[7];
      *(_OWORD *)a3 = v23;
    }
    char v24 = 1;
  }
  else
  {
    char v24 = 0;
    *(unsigned char *)a3 = 0;
  }
  *(unsigned char *)(a3 + 24) = v24;
  if (v27 < 0) {
    operator delete(v26[0]);
  }
  if (SHIBYTE(v29) < 0) {
    operator delete(__dst[0]);
  }
  __dst[0] = &v32;
  sub_1891624((void ***)__dst);
  return sub_1C87FCC((uint64_t)v35);
}

void sub_1C835B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  *(void *)(v29 - 88) = &a26;
  sub_1891624((void ***)(v29 - 88));
  sub_1C87FCC((uint64_t)&a29);
  _Unwind_Resume(a1);
}

void sub_1C83634(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, unsigned char *a5@<X8>)
{
  sub_1C83368(a3, a4, (uint64_t)&v17);
  if (v19)
  {
    sub_1A918D4(a1, (uint64_t)&v15);
    int v8 = 1;
    if (!v19) {
      sub_1907A2C();
    }
    sub_1C87B94((char *)__dst, &v8, &v17, &v15, (uint64_t *)(a2 + 80), -1, *(double *)(a2 + 104));
    sub_1C87CAC((uint64_t)a5, (long long *)__dst);
    sub_12168((uint64_t)&v14);
    BOOL v20 = (void **)&v13;
    sub_18D522C(&v20);
    if (v12 < 0) {
      operator delete(__p);
    }
    if (v10 < 0) {
      operator delete(__dst[0]);
    }
    if (v16 < 0) {
      operator delete((void *)v15);
    }
    if (v19)
    {
      if (v18 < 0) {
        operator delete((void *)v17);
      }
    }
  }
  else
  {
    *a5 = 0;
    a5[136] = 0;
  }
}

void sub_1C83750(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v2 - 64))
  {
    if (*(char *)(v2 - 65) < 0) {
      operator delete(*(void **)(v1 + 24));
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C8378C(uint64_t a1)
{
  sub_12168(a1 + 88);
  double v3 = (void **)(a1 + 64);
  sub_18D522C(&v3);
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1C837F0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_1C823C0((uint64_t)v70, a2);
  BOOL v7 = sub_1C824C0(a1);
  sub_1C35694(*a1, &__p);
  uint64_t v8 = nullsub_1(*a1);
  sub_1C826A0((uint64_t)v70, (uint64_t **)&__p, v8 + 8, v7, &v64, a4);
  *(void *)&long long v75 = &__p;
  sub_197A1EC((void ***)&v75);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  if (v66)
  {
    sub_1C35328((char *)*a1, (uint64_t)&v60);
    nullsub_1(*a1);
    uint64_t v9 = nullsub_1(*a1);
    if (v66)
    {
      long long v90 = 0;
      uint64_t v91 = 0;
      int v89 = &v90;
      char v10 = v64;
      if (v64 == (const void **)&v65) {
        goto LABEL_17;
      }
      uint64_t v11 = (void *)(v9 + 1104);
      do
      {
        sub_2F0A4((uint64_t **)&v89, v10 + 4, (uint64_t)(v10 + 4));
        char v12 = (const void **)v10[1];
        if (v12)
        {
          do
          {
            uint64_t v13 = (const void ***)v12;
            char v12 = (const void **)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            uint64_t v13 = (const void ***)v10[2];
            BOOL v14 = *v13 == v10;
            char v10 = (const void **)v13;
          }
          while (!v14);
        }
        char v10 = (const void **)v13;
      }
      while (v13 != &v65);
      if (!v91)
      {
LABEL_17:
        char v61 = 0;
        char v62 = 0;
        unint64_t v63 = 0;
      }
      else
      {
        sub_5E5C(&__p, (char *)&unk_21839BB);
        sub_1CF6248((uint64_t)&v89, v11, &v75);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if ((void)v76)
        {
          if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
            sub_4200(&__dst, v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
          }
          else {
            std::string __dst = v60;
          }
          sub_1D68CFC(&__dst);
          char v61 = 0;
          char v62 = 0;
          unint64_t v63 = 0;
          long long v15 = v64;
          if (v64 != (const void **)&v65)
          {
            while (1)
            {
              char v16 = sub_19081D4((uint64_t)&v75, (void **)v15 + 4);
              long long v17 = v16;
              if ((void **)((char *)&v75 + 8) != v16) {
                break;
              }
LABEL_65:
              unint64_t v34 = (const void **)v15[1];
              if (v34)
              {
                do
                {
                  BOOL v35 = (const void ***)v34;
                  unint64_t v34 = (const void **)*v34;
                }
                while (v34);
              }
              else
              {
                do
                {
                  BOOL v35 = (const void ***)v15[2];
                  BOOL v14 = *v35 == v15;
                  long long v15 = (const void **)v35;
                }
                while (!v14);
              }
              long long v15 = (const void **)v35;
              if (v35 == &v65) {
                goto LABEL_78;
              }
            }
            uint64_t v18 = 13;
            if (((_BYTE)v16[9] & 8) == 0) {
              uint64_t v18 = 11;
            }
            unint64_t v19 = (unint64_t)v16[v18] & 0xFFFFFFFFFFFFFFFELL;
            if (*(char *)(v19 + 23) < 0)
            {
              sub_4200(&v73, *(void **)v19, *(void *)(v19 + 8));
            }
            else
            {
              long long v20 = *(_OWORD *)v19;
              v73.__r_.__value_.__r.__words[2] = *(void *)(v19 + 16);
              *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v20;
            }
            if (((_BYTE)v15[12] & 2) == 0)
            {
LABEL_50:
              uint64_t v29 = sub_19081D4((uint64_t)&v79, (void **)v15 + 4);
              if (&v80 == (void **)v29 || (uint64_t v30 = (int *)v29[7], v30 == v29[8])) {
                int v31 = -1;
              }
              else {
                int v31 = v30[26];
              }
              sub_1A91718((long long *)v17 + 2, (uint64_t)v71);
              LODWORD(v83[0]) = 0;
              sub_1C87B94((char *)&__p, v83, (long long *)&v73, (long long *)v71, (uint64_t *)v15 + 17, v31, *((double *)v15 + 20));
              uint64_t v32 = v62;
              if ((unint64_t)v62 >= v63)
              {
                uint64_t v33 = (std::string *)sub_1C87D50((uint64_t *)&v61, (long long *)&__p);
              }
              else
              {
                sub_19EABE0(v62, (long long *)&__p);
                uint64_t v33 = (std::string *)((char *)v32 + 136);
              }
              char v62 = v33;
              sub_12168((uint64_t)v88);
              v83[0] = (void **)&v87;
              sub_18D522C(v83);
              if (v86 < 0) {
                operator delete(v85);
              }
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (v72 < 0) {
                operator delete(v71[0]);
              }
              if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v73.__r_.__value_.__l.__data_);
              }
              goto LABEL_65;
            }
            if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
              sub_4200(&__p, v73.__r_.__value_.__l.__data_, v73.__r_.__value_.__l.__size_);
            }
            else {
              std::string __p = v73;
            }
            sub_1D68CFC(&__p);
            std::string::size_type size = __dst.__r_.__value_.__l.__size_;
            if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
            }
            std::string::size_type v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
            if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
              std::string::size_type v22 = __p.__r_.__value_.__l.__size_;
            }
            unsigned int v23 = size - v22;
            if ((int)size - (int)v22 < 0) {
              unsigned int v23 = v22 - size;
            }
            if (v23 > 2)
            {
              BOOL v28 = 0;
              if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0) {
                goto LABEL_48;
              }
            }
            else
            {
              p_dst = &__dst;
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
              }
              v71[0] = p_dst;
              v71[1] = (void *)size;
              p_p = &__p;
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              v83[0] = (void **)&p_p->__r_.__value_.__l.__data_;
              v83[1] = (void **)v22;
              BOOL v26 = sub_1C02C3C((uint64_t)v71, (uint64_t)v83);
              std::string::size_type v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
              if (v26)
              {
                BOOL v28 = 1;
                if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) != 0) {
                  goto LABEL_45;
                }
LABEL_48:
                if (v28) {
                  goto LABEL_50;
                }
                goto LABEL_49;
              }
              int v36 = &__p;
              if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              {
                std::string::size_type v27 = __p.__r_.__value_.__l.__size_;
                int v36 = (std::string *)__p.__r_.__value_.__r.__words[0];
              }
              v82[0] = v36;
              v82[1] = v27;
              std::string::size_type v37 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
              unint64_t v38 = &__dst;
              if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
              {
                std::string::size_type v37 = __dst.__r_.__value_.__l.__size_;
                unint64_t v38 = (std::string *)__dst.__r_.__value_.__r.__words[0];
              }
              v81[0] = v38;
              v81[1] = v37;
              BOOL v28 = sub_1C02C3C((uint64_t)v82, (uint64_t)v81);
              if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0) {
                goto LABEL_48;
              }
            }
LABEL_45:
            operator delete(__p.__r_.__value_.__l.__data_);
            if (v28) {
              goto LABEL_50;
            }
LABEL_49:
            std::string::operator=(&v73, (const std::string *)((unint64_t)v15[14] & 0xFFFFFFFFFFFFFFFELL));
            goto LABEL_50;
          }
LABEL_78:
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          char v61 = 0;
          char v62 = 0;
          unint64_t v63 = 0;
        }
        sub_18F8620((uint64_t)&v79, v80);
        sub_18F807C((uint64_t)v78, v78[1]);
        sub_18F7D18((uint64_t)&v76 + 8, v77);
        sub_18F79B4((uint64_t)&v75, *((void **)&v75 + 1));
      }
      sub_2F020((uint64_t)&v89, v90);
    }
    else
    {
      char v61 = 0;
      char v62 = 0;
      unint64_t v63 = 0;
    }
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
    if (v61 != v62) {
      sub_19EAEC4((uint64_t *)a3, *(long long **)(a3 + 8), v61, (uint64_t)v62, 0xF0F0F0F0F0F0F0F1 * (((char *)v62 - (char *)v61) >> 3));
    }
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v61;
    sub_1977040((void ***)&__p);
  }
  if (v69)
  {
    uint64_t v39 = nullsub_1(*a1);
    uint64_t v40 = nullsub_1(*a1);
    if (!v69)
    {
      memset(&__dst, 0, sizeof(__dst));
LABEL_128:
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
      sub_1977040((void ***)&__p);
      goto LABEL_129;
    }
    uint64_t v41 = v40;
    long long v90 = 0;
    uint64_t v91 = 0;
    int v89 = &v90;
    long long v42 = v67;
    if (v67 != (const void **)&v68)
    {
      do
      {
        sub_2F0A4((uint64_t **)&v89, v42 + 4, (uint64_t)(v42 + 4));
        long long v43 = (const void **)v42[1];
        if (v43)
        {
          do
          {
            uint64_t v44 = (const void ***)v43;
            long long v43 = (const void **)*v43;
          }
          while (v43);
        }
        else
        {
          do
          {
            uint64_t v44 = (const void ***)v42[2];
            BOOL v14 = *v44 == v42;
            long long v42 = (const void **)v44;
          }
          while (!v14);
        }
        long long v42 = (const void **)v44;
      }
      while (v44 != &v68);
    }
    sub_5E5C(&__p, "chain_localized_names");
    long long v45 = sub_1908254((void *)(v41 + 1104), (unsigned __int8 *)&__p);
    char v46 = v45;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if (!v46) {
        goto LABEL_102;
      }
    }
    else if (!v45)
    {
      goto LABEL_102;
    }
    if (!(*(unsigned int (**)(void))(**((void **)v46 + 5) + 8))(*((void *)v46 + 5)))
    {
      unint64_t v47 = (void *)*((void *)v46 + 5);
      if (v47
      {
        uint64_t v48 = (std::__shared_weak_count *)*((void *)v46 + 6);
        if (v48) {
          atomic_fetch_add_explicit(&v48->__shared_owners_, 1uLL, memory_order_relaxed);
        }
      }
      else
      {
        uint64_t v48 = 0;
      }
      sub_1BEAD88((uint64_t)v47, (uint64_t)&v75);
      if (v48) {
        sub_20A69F0(v48);
      }
      goto LABEL_110;
    }
LABEL_102:
    long long v75 = 0u;
    long long v76 = 0u;
    LODWORD(v77) = 1065353216;
LABEL_110:
    memset(&__dst, 0, sizeof(__dst));
    if (*((void *)&v76 + 1))
    {
      BOOL v49 = (unsigned __int8 *)v67;
      if (v67 != (const void **)&v68)
      {
        long long v50 = (char *)(v39 + 1184);
        do
        {
          char v51 = sub_1908254(&v75, v49 + 32);
          if (v51)
          {
            sub_1C83634((long long *)v49 + 2, (uint64_t)(v49 + 56), (uint64_t)(v51 + 40), v50, &__p);
            if (v88[48])
            {
              std::string::size_type v52 = __dst.__r_.__value_.__l.__size_;
              if (__dst.__r_.__value_.__l.__size_ >= __dst.__r_.__value_.__r.__words[2])
              {
                std::string::size_type v53 = sub_1C87E58((uint64_t *)&__dst, (long long *)&__p);
              }
              else
              {
                sub_19EABE0((void *)__dst.__r_.__value_.__l.__size_, (long long *)&__p);
                std::string::size_type v53 = v52 + 136;
              }
              __dst.__r_.__value_.__l.__size_ = v53;
            }
            sub_1C87F60((uint64_t)&__p);
          }
          uint64_t v54 = (unsigned __int8 *)*((void *)v49 + 1);
          if (v54)
          {
            do
            {
              long long v55 = v54;
              uint64_t v54 = *(unsigned __int8 **)v54;
            }
            while (v54);
          }
          else
          {
            do
            {
              long long v55 = (unsigned __int8 *)*((void *)v49 + 2);
              BOOL v14 = *(void *)v55 == (void)v49;
              BOOL v49 = v55;
            }
            while (!v14);
          }
          BOOL v49 = v55;
        }
        while (v55 != (unsigned __int8 *)&v68);
      }
    }
    sub_1BEB99C((uint64_t)&v75);
    sub_2F020((uint64_t)&v89, v90);
    if (__dst.__r_.__value_.__r.__words[0] != __dst.__r_.__value_.__l.__size_) {
      sub_19EAEC4((uint64_t *)a3, *(long long **)(a3 + 8), (std::string *)__dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_, 0xF0F0F0F0F0F0F0F1 * ((uint64_t)(__dst.__r_.__value_.__l.__size_ - __dst.__r_.__value_.__r.__words[0]) >> 3));
    }
    goto LABEL_128;
  }
LABEL_129:
  sub_1C825CC((long long **)a3);
  if (*(int *)(nullsub_1(*a1) + 20) >= 1)
  {
    uint64_t v57 = *(void *)a3;
    uint64_t v56 = *(void *)(a3 + 8);
    if (0xF0F0F0F0F0F0F0F1 * ((v56 - v57) >> 3) > *(int *)(nullsub_1(*a1) + 20))
    {
      uint64_t v58 = nullsub_1(*a1);
      sub_19EAAB4((uint64_t *)a3, *(int *)(v58 + 20));
    }
  }
  sub_1C87B38((uint64_t)&v67, v68);
  sub_1C87B38((uint64_t)&v64, v65);
  return sub_1898170((uint64_t)v70);
}

void sub_1C840B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  sub_18F7634((void **)&a44);
  sub_2F020(v44 - 136, *(char **)(v44 - 128));
  if (a17 < 0) {
    operator delete(__p);
  }
  sub_1977040((void ***)&a44);
  sub_1C8332C((uint64_t)&a21);
  sub_1898170((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_1C842A8(long long *a1, long long *a2, uint64_t (**a3)(long long *, uint64_t), uint64_t a4, char a5)
{
void sub_1C846B4(uint64_t a1, void **a2, uint64_t (**a3)(void **, uint64_t))
{
  if ((void **)a1 != a2)
  {
    double v3 = a2;
    char v5 = (void **)(a1 + 136);
    if ((void **)(a1 + 136) != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = a1;
      do
      {
        uint64_t v9 = v5;
        if ((*a3)(v5, v8))
        {
          *(_OWORD *)std::string::size_type v22 = *(_OWORD *)v9;
          char v23 = v9[2];
          v9[1] = 0;
          void v9[2] = 0;
          *uint64_t v9 = 0;
          int v24 = *(_DWORD *)(v8 + 160);
          long long __p = *(_OWORD *)(v8 + 168);
          uint64_t v26 = *(void *)(v8 + 184);
          *(void *)(v8 + 176) = 0;
          *(void *)(v8 + 184) = 0;
          *(void *)(v8 + 168) = 0;
          uint64_t v27 = *(void *)(v8 + 192);
          long long v28 = *(_OWORD *)(v8 + 200);
          uint64_t v29 = *(void *)(v8 + 216);
          *(void *)(v8 + 208) = 0;
          *(void *)(v8 + 216) = 0;
          *(void *)(v8 + 200) = 0;
          sub_1893348((uint64_t)v30, (uint64_t *)(v8 + 224));
          uint64_t v31 = *(void *)(v8 + 264);
          uint64_t v10 = v7;
          while (1)
          {
            uint64_t v11 = a1 + v10;
            uint64_t v12 = (void **)(a1 + v10 + 136);
            if (*(char *)(a1 + v10 + 159) < 0) {
              operator delete(*v12);
            }
            *(_OWORD *)uint64_t v12 = *(_OWORD *)v11;
            *(void *)(a1 + v10 + 152) = *(void *)(v11 + 16);
            *(unsigned char *)(v11 + 23) = 0;
            *(unsigned char *)uint64_t v11 = 0;
            *(_DWORD *)(v11 + 160) = *(_DWORD *)(v11 + 24);
            uint64_t v13 = (void **)(v11 + 168);
            if (*(char *)(v11 + 191) < 0) {
              operator delete(*v13);
            }
            uint64_t v14 = a1 + v10;
            *(_OWORD *)uint64_t v13 = *(_OWORD *)(a1 + v10 + 32);
            *(void *)(v11 + 184) = *(void *)(a1 + v10 + 48);
            *(unsigned char *)(v14 + 55) = 0;
            *(unsigned char *)(v14 + 32) = 0;
            *(void *)(v14 + 192) = *(void *)(a1 + v10 + 56);
            sub_19982B0((void **)(a1 + v10 + 200));
            *(_OWORD *)(v14 + 200) = *(_OWORD *)(v14 + 64);
            *(void *)(v14 + 216) = *(void *)(v14 + 80);
            *(void *)(v14 + 72) = 0;
            *(void *)(v14 + 80) = 0;
            *(void *)(v14 + 64) = 0;
            uint64_t v15 = a1 + v10 + 88;
            sub_1893CA4(v14 + 224, (uint64_t *)(v14 + 88));
            *(void *)(v14 + 264) = *(void *)(v14 + 128);
            if (!v10) {
              break;
            }
            v10 -= 136;
            if (((*a3)(v22, v14 - 136) & 1) == 0)
            {
              uint64_t v16 = a1 + v10 + 136;
              goto LABEL_14;
            }
          }
          uint64_t v16 = a1;
LABEL_14:
          if (*(char *)(v16 + 23) < 0) {
            operator delete(*(void **)v16);
          }
          uint64_t v17 = v14 + 32;
          *(_OWORD *)uint64_t v16 = *(_OWORD *)v22;
          *(void *)(v16 + 16) = v23;
          HIBYTE(v23) = 0;
          LOBYTE(v22[0]) = 0;
          *(_DWORD *)(v16 + 24) = v24;
          if (*(char *)(v16 + 55) < 0) {
            operator delete(*(void **)v17);
          }
          uint64_t v18 = (void **)(v14 + 64);
          *(_OWORD *)uint64_t v17 = __p;
          *(void *)(v17 + 16) = v26;
          HIBYTE(v26) = 0;
          LOBYTE(__p) = 0;
          *(void *)(v16 + 56) = v27;
          sub_19982B0(v18);
          uint64_t v19 = *((void *)&v28 + 1);
          *uint64_t v18 = (void *)v28;
          uint64_t v20 = v29;
          *(void *)(v16 + 72) = v19;
          *(void *)(v16 + 80) = v20;
          uint64_t v29 = 0;
          long long v28 = 0uLL;
          sub_1893CA4(v15, v30);
          *(void *)(v16 + 128) = v31;
          sub_12168((uint64_t)v30);
          uint64_t v32 = (void **)&v28;
          sub_18D522C(&v32);
          if (SHIBYTE(v26) < 0) {
            operator delete((void *)__p);
          }
          double v3 = a2;
          if (SHIBYTE(v23) < 0) {
            operator delete(v22[0]);
          }
        }
        char v5 = v9 + 17;
        v7 += 136;
        uint64_t v8 = (uint64_t)v9;
      }
      while (v9 + 17 != v3);
    }
  }
}

void sub_1C8497C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1C8378C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C84990(void **a1, void **a2, uint64_t (**a3)(void **, void **))
{
  if (a1 != a2)
  {
    int v4 = a1;
    char v5 = a1 + 17;
    if (a1 + 17 != a2)
    {
      uint64_t v7 = a1 - 17;
      do
      {
        uint64_t v8 = v5;
        if ((*a3)(v5, v4))
        {
          *(_OWORD *)uint64_t v15 = *(_OWORD *)v8;
          uint64_t v16 = v8[2];
          v8[1] = 0;
          v8[2] = 0;
          *uint64_t v8 = 0;
          int v17 = *((_DWORD *)v4 + 40);
          long long __p = *(_OWORD *)(v4 + 21);
          uint64_t v19 = v4[23];
          v4[22] = 0;
          v4[23] = 0;
          v4[21] = 0;
          uint64_t v20 = v4[24];
          long long v21 = *(_OWORD *)(v4 + 25);
          std::string::size_type v22 = v4[27];
          v4[26] = 0;
          v4[27] = 0;
          v4[25] = 0;
          sub_1893348((uint64_t)v23, (uint64_t *)v4 + 28);
          int v24 = v4[33];
          uint64_t v9 = v7;
          do
          {
            uint64_t v10 = v9 + 34;
            if (*((char *)v9 + 295) < 0) {
              operator delete(*v10);
            }
            *(_OWORD *)uint64_t v10 = *(_OWORD *)(v9 + 17);
            v9[36] = v9[19];
            *((unsigned char *)v9 + 159) = 0;
            *((unsigned char *)v9 + 136) = 0;
            *((_DWORD *)v9 + 74) = *((_DWORD *)v9 + 40);
            uint64_t v11 = v9 + 38;
            if (*((char *)v9 + 327) < 0) {
              operator delete(*v11);
            }
            *(_OWORD *)uint64_t v11 = *(_OWORD *)(v9 + 21);
            v9[40] = v9[23];
            *((unsigned char *)v9 + 191) = 0;
            *((unsigned char *)v9 + 168) = 0;
            v9[41] = v9[24];
            sub_19982B0(v9 + 42);
            *((_OWORD *)v9 + 21) = *(_OWORD *)(v9 + 25);
            v9[44] = v9[27];
            v9[26] = 0;
            v9[27] = 0;
            v9[25] = 0;
            sub_1893CA4((uint64_t)(v9 + 45), (uint64_t *)v9 + 28);
            v9[50] = v9[33];
            char v12 = (*a3)(v15, v9);
            v9 -= 17;
          }
          while ((v12 & 1) != 0);
          uint64_t v13 = v9 + 34;
          if (*((char *)v9 + 295) < 0) {
            operator delete(*v13);
          }
          uint64_t v14 = v9 + 38;
          *(_OWORD *)uint64_t v13 = *(_OWORD *)v15;
          v9[36] = v16;
          HIBYTE(v16) = 0;
          LOBYTE(v15[0]) = 0;
          *((_DWORD *)v9 + 74) = v17;
          if (*((char *)v9 + 327) < 0) {
            operator delete(*v14);
          }
          *(_OWORD *)uint64_t v14 = __p;
          v9[40] = v19;
          HIBYTE(v19) = 0;
          LOBYTE(__p) = 0;
          v9[41] = v20;
          sub_19982B0(v9 + 42);
          *((_OWORD *)v9 + 21) = v21;
          v9[44] = v22;
          std::string::size_type v22 = 0;
          long long v21 = 0uLL;
          sub_1893CA4((uint64_t)(v9 + 45), v23);
          v9[50] = v24;
          sub_12168((uint64_t)v23);
          long long v25 = (void **)&v21;
          sub_18D522C(&v25);
          if (SHIBYTE(v19) < 0) {
            operator delete((void *)__p);
          }
          if (SHIBYTE(v16) < 0) {
            operator delete(v15[0]);
          }
        }
        char v5 = v8 + 17;
        v7 += 17;
        int v4 = v8;
      }
      while (v8 + 17 != a2);
    }
  }
}

void sub_1C84C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1C84C44(uint64_t a1, long long *a2, long long *a3, uint64_t (**a4)(long long *, uint64_t))
{
  char v8 = (*a4)(a2, a1);
  uint64_t result = (*a4)(a3, (uint64_t)a2);
  if ((v8 & 1) == 0)
  {
    if (!result) {
      return result;
    }
    sub_1C85788((uint64_t)a2, a3);
    if (!(*a4)(a2, a1)) {
      return 1;
    }
    uint64_t v10 = a1;
    uint64_t v11 = a2;
    goto LABEL_9;
  }
  if (!result)
  {
    sub_1C85788(a1, a2);
    if (!(*a4)(a3, (uint64_t)a2)) {
      return 1;
    }
    uint64_t v10 = (uint64_t)a2;
    uint64_t v11 = a3;
LABEL_9:
    sub_1C85788(v10, v11);
    return 2;
  }
  sub_1C85788(a1, a3);
  return 1;
}

unint64_t sub_1C84D24(unint64_t a1, long long *a2, uint64_t (**a3)(void **, unint64_t))
{
  *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
  uint64_t v20 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  int v21 = *(_DWORD *)(a1 + 24);
  *(_OWORD *)long long __p = *(_OWORD *)(a1 + 32);
  uint64_t v23 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v24 = *(void *)(a1 + 56);
  char v6 = (void **)(a1 + 64);
  long long v25 = *(_OWORD *)(a1 + 64);
  uint64_t v26 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = 0;
  uint64_t v7 = a1 + 88;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_1893348((uint64_t)v27, (uint64_t *)(a1 + 88));
  uint64_t v28 = *(void *)(a1 + 128);
  if ((*a3)(v19, (unint64_t)a2 - 136))
  {
    unint64_t v8 = a1;
    do
      v8 += 136;
    while (((*a3)(v19, v8) & 1) == 0);
  }
  else
  {
    unint64_t v9 = a1 + 136;
    do
    {
      unint64_t v8 = v9;
      if (v9 >= (unint64_t)a2) {
        break;
      }
      int v10 = (*a3)(v19, v9);
      unint64_t v9 = v8 + 136;
    }
    while (!v10);
  }
  if (v8 < (unint64_t)a2)
  {
    do
      a2 = (long long *)((char *)a2 - 136);
    while (((*a3)(v19, (unint64_t)a2) & 1) != 0);
  }
  while (v8 < (unint64_t)a2)
  {
    sub_1C85788(v8, a2);
    do
      v8 += 136;
    while (!(*a3)(v19, v8));
    do
      a2 = (long long *)((char *)a2 - 136);
    while (((*a3)(v19, (unint64_t)a2) & 1) != 0);
  }
  uint64_t v11 = (void **)(v8 - 136);
  if (v8 - 136 != a1)
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    char v12 = (void **)(a1 + 32);
    long long v13 = *(_OWORD *)v11;
    *(void *)(a1 + 16) = *(void *)(v8 - 120);
    *(_OWORD *)a1 = v13;
    *(unsigned char *)(v8 - 113) = 0;
    *(unsigned char *)(v8 - 136) = 0;
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(v8 - 112);
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*v12);
    }
    long long v14 = *(_OWORD *)(v8 - 104);
    *(void *)(a1 + 48) = *(void *)(v8 - 88);
    *(_OWORD *)char v12 = v14;
    *(unsigned char *)(v8 - 81) = 0;
    *(unsigned char *)(v8 - 104) = 0;
    *(void *)(a1 + 56) = *(void *)(v8 - 80);
    sub_19982B0(v6);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v8 - 72);
    *(void *)(a1 + 80) = *(void *)(v8 - 56);
    *(void *)(v8 - 72) = 0;
    *(void *)(v8 - 64) = 0;
    *(void *)(v8 - 56) = 0;
    sub_1893CA4(v7, (uint64_t *)(v8 - 48));
    *(void *)(a1 + 128) = *(void *)(v8 - 8);
  }
  if (*(char *)(v8 - 113) < 0) {
    operator delete(*v11);
  }
  long long v15 = *(_OWORD *)v19;
  *(void *)(v8 - 120) = v20;
  *(_OWORD *)uint64_t v11 = v15;
  HIBYTE(v20) = 0;
  LOBYTE(v19[0]) = 0;
  *(_DWORD *)(v8 - 112) = v21;
  uint64_t v16 = (void **)(v8 - 104);
  if (*(char *)(v8 - 81) < 0) {
    operator delete(*v16);
  }
  long long v17 = *(_OWORD *)__p;
  *(void *)(v8 - 88) = v23;
  *(_OWORD *)uint64_t v16 = v17;
  HIBYTE(v23) = 0;
  LOBYTE(__p[0]) = 0;
  *(void *)(v8 - 80) = v24;
  sub_19982B0((void **)(v8 - 72));
  *(_OWORD *)(v8 - 72) = v25;
  *(void *)(v8 - 56) = v26;
  long long v25 = 0uLL;
  uint64_t v26 = 0;
  sub_1893CA4(v8 - 48, v27);
  *(void *)(v8 - 8) = v28;
  sub_12168((uint64_t)v27);
  uint64_t v29 = (void **)&v25;
  sub_18D522C(&v29);
  if (SHIBYTE(v23) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v20) < 0) {
    operator delete(v19[0]);
  }
  return v8;
}

void sub_1C85028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unint64_t sub_1C85050(uint64_t a1, long long *a2, uint64_t (**a3)(uint64_t, void **))
{
  *(_OWORD *)std::string::size_type v22 = *(_OWORD *)a1;
  uint64_t v23 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  int v24 = *(_DWORD *)(a1 + 24);
  uint64_t v6 = a1 + 32;
  *(_OWORD *)long long __p = *(_OWORD *)(a1 + 32);
  uint64_t v26 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v7 = (void **)(a1 + 64);
  long long v28 = *(_OWORD *)(a1 + 64);
  uint64_t v29 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = 0;
  uint64_t v8 = a1 + 88;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_1893348((uint64_t)v30, (uint64_t *)(a1 + 88));
  uint64_t v9 = 0;
  uint64_t v31 = *(void *)(a1 + 128);
  do
  {
    char v10 = (*a3)(a1 + v9 + 136, v22);
    v9 += 136;
  }
  while ((v10 & 1) != 0);
  uint64_t v21 = v8;
  unint64_t v11 = a1 + v9;
  if (v9 == 136)
  {
    do
    {
      if (v11 >= (unint64_t)a2) {
        break;
      }
      a2 = (long long *)((char *)a2 - 136);
    }
    while (((*a3)((uint64_t)a2, v22) & 1) == 0);
  }
  else
  {
    do
      a2 = (long long *)((char *)a2 - 136);
    while (!(*a3)((uint64_t)a2, v22));
  }
  unint64_t v12 = a1 + v9;
  if (v11 < (unint64_t)a2)
  {
    long long v13 = a2;
    do
    {
      sub_1C85788(v12, v13);
      do
        v12 += 136;
      while (((*a3)(v12, v22) & 1) != 0);
      do
        long long v13 = (long long *)((char *)v13 - 136);
      while (!(*a3)((uint64_t)v13, v22));
    }
    while (v12 < (unint64_t)v13);
  }
  long long v14 = (void **)(v12 - 136);
  if (v12 - 136 != a1)
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v15 = *(_OWORD *)v14;
    *(void *)(a1 + 16) = *(void *)(v12 - 120);
    *(_OWORD *)a1 = v15;
    *(unsigned char *)(v12 - 113) = 0;
    *(unsigned char *)(v12 - 136) = 0;
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(v12 - 112);
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)v6);
    }
    long long v16 = *(_OWORD *)(v12 - 104);
    *(void *)(v6 + 16) = *(void *)(v12 - 88);
    *(_OWORD *)uint64_t v6 = v16;
    *(unsigned char *)(v12 - 81) = 0;
    *(unsigned char *)(v12 - 104) = 0;
    *(void *)(a1 + 56) = *(void *)(v12 - 80);
    sub_19982B0(v7);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v12 - 72);
    *(void *)(a1 + 80) = *(void *)(v12 - 56);
    *(void *)(v12 - 72) = 0;
    *(void *)(v12 - 64) = 0;
    *(void *)(v12 - 56) = 0;
    sub_1893CA4(v21, (uint64_t *)(v12 - 48));
    *(void *)(a1 + 128) = *(void *)(v12 - 8);
  }
  if (*(char *)(v12 - 113) < 0) {
    operator delete(*v14);
  }
  long long v17 = *(_OWORD *)v22;
  *(void *)(v12 - 120) = v23;
  *(_OWORD *)long long v14 = v17;
  HIBYTE(v23) = 0;
  LOBYTE(v22[0]) = 0;
  *(_DWORD *)(v12 - 112) = v24;
  uint64_t v18 = (void **)(v12 - 104);
  if (*(char *)(v12 - 81) < 0) {
    operator delete(*v18);
  }
  long long v19 = *(_OWORD *)__p;
  *(void *)(v12 - 88) = v26;
  *(_OWORD *)uint64_t v18 = v19;
  HIBYTE(v26) = 0;
  LOBYTE(__p[0]) = 0;
  *(void *)(v12 - 80) = v27;
  sub_19982B0((void **)(v12 - 72));
  *(_OWORD *)(v12 - 72) = v28;
  *(void *)(v12 - 56) = v29;
  long long v28 = 0uLL;
  uint64_t v29 = 0;
  sub_1893CA4(v12 - 48, v30);
  *(void *)(v12 - 8) = v31;
  sub_12168((uint64_t)v30);
  uint64_t v32 = (void **)&v28;
  sub_18D522C(&v32);
  if (SHIBYTE(v26) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v23) < 0) {
    operator delete(v22[0]);
  }
  return v12 - 136;
}

void sub_1C85370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1C8378C((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_1C85394(long long *a1, long long *a2, uint64_t (**a3)(long long *, uint64_t))
{
  uint64_t v6 = ((char *)a2 - (char *)a1) >> 3;
  BOOL result = 1;
  switch(0xF0F0F0F0F0F0F0F1 * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if ((*a3)((long long *)((char *)a2 - 136), (uint64_t)a1)) {
        sub_1C85788((uint64_t)a1, (long long *)((char *)a2 - 136));
      }
      return 1;
    case 3uLL:
      sub_1C84C44((uint64_t)a1, (long long *)((char *)a1 + 136), (long long *)((char *)a2 - 136), a3);
      return 1;
    case 4uLL:
      sub_1C859BC((uint64_t)a1, (long long *)((char *)a1 + 136), a1 + 17, (long long *)((char *)a2 - 136), a3);
      return 1;
    case 5uLL:
      sub_1C85A84((uint64_t)a1, (long long *)((char *)a1 + 136), a1 + 17, (long long *)((char *)a1 + 408), (long long *)((char *)a2 - 136), a3);
      return 1;
    default:
      uint64_t v8 = a1 + 17;
      sub_1C84C44((uint64_t)a1, (long long *)((char *)a1 + 136), a1 + 17, a3);
      uint64_t v9 = (long long *)((char *)a1 + 408);
      if ((long long *)((char *)a1 + 408) == a2) {
        return 1;
      }
      uint64_t v10 = 0;
      int v11 = 0;
      break;
  }
  while (1)
  {
    if ((*a3)(v9, (uint64_t)v8))
    {
      *(_OWORD *)uint64_t v23 = *v9;
      uint64_t v24 = *((void *)v9 + 2);
      *((void *)v9 + 1) = 0;
      *((void *)v9 + 2) = 0;
      *(void *)uint64_t v9 = 0;
      int v25 = *((_DWORD *)v9 + 6);
      long long __p = v9[2];
      uint64_t v27 = *((void *)v9 + 6);
      *((void *)v9 + 4) = 0;
      *((void *)v9 + 5) = 0;
      *((void *)v9 + 6) = 0;
      uint64_t v28 = *((void *)v9 + 7);
      long long v29 = v9[4];
      uint64_t v30 = *((void *)v9 + 10);
      *((void *)v9 + 8) = 0;
      *((void *)v9 + 9) = 0;
      *((void *)v9 + 10) = 0;
      sub_1893348((uint64_t)v31, (uint64_t *)v9 + 11);
      uint64_t v32 = *((void *)v9 + 16);
      uint64_t v12 = v10;
      while (1)
      {
        long long v13 = (char *)a1 + v12;
        long long v14 = (void **)((char *)a1 + v12 + 408);
        if (*((char *)a1 + v12 + 431) < 0) {
          operator delete(*v14);
        }
        *(_OWORD *)long long v14 = *((_OWORD *)v13 + 17);
        *(void *)((char *)a1 + v12 + 424) = *((void *)v13 + 36);
        v13[295] = 0;
        v13[272] = 0;
        *((_DWORD *)v13 + 108) = *((_DWORD *)v13 + 74);
        long long v15 = (void **)(v13 + 440);
        if (v13[463] < 0) {
          operator delete(*v15);
        }
        long long v16 = (char *)a1 + v12;
        *(_OWORD *)long long v15 = *(long long *)((char *)a1 + v12 + 304);
        *((void *)v13 + 57) = *(void *)((char *)a1 + v12 + 320);
        v16[327] = 0;
        v16[304] = 0;
        *((void *)v16 + 58) = *(void *)((char *)a1 + v12 + 328);
        sub_19982B0((void **)((char *)a1 + v12 + 472));
        *(long long *)((char *)a1 + v12 + 472) = *(long long *)((char *)a1 + v12 + 336);
        *((void *)v16 + 61) = *((void *)v16 + 44);
        *((void *)v16 + 43) = 0;
        *((void *)v16 + 44) = 0;
        *((void *)v16 + 42) = 0;
        uint64_t v17 = (uint64_t)a1 + v12 + 360;
        sub_1893CA4((uint64_t)(v16 + 496), (uint64_t *)v16 + 45);
        *((void *)v16 + 67) = *((void *)v16 + 50);
        if (v12 == -272) {
          break;
        }
        v12 -= 136;
        if (((*a3)((long long *)v23, (uint64_t)(v16 + 136)) & 1) == 0)
        {
          uint64_t v18 = (uint64_t)a1 + v12 + 408;
          goto LABEL_16;
        }
      }
      uint64_t v18 = (uint64_t)a1;
LABEL_16:
      if (*(char *)(v18 + 23) < 0) {
        operator delete(*(void **)v18);
      }
      long long v19 = v16 + 304;
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v23;
      *(void *)(v18 + 16) = v24;
      HIBYTE(v24) = 0;
      LOBYTE(v23[0]) = 0;
      *(_DWORD *)(v18 + 24) = v25;
      if (*(char *)(v18 + 55) < 0) {
        operator delete(*(void **)v19);
      }
      uint64_t v20 = (void **)(v16 + 336);
      *(_OWORD *)long long v19 = __p;
      *((void *)v19 + 2) = v27;
      HIBYTE(v27) = 0;
      LOBYTE(__p) = 0;
      *(void *)(v18 + 56) = v28;
      sub_19982B0(v20);
      uint64_t v21 = *((void *)&v29 + 1);
      *uint64_t v20 = (void *)v29;
      uint64_t v22 = v30;
      *(void *)(v18 + 72) = v21;
      *(void *)(v18 + 80) = v22;
      uint64_t v30 = 0;
      long long v29 = 0uLL;
      sub_1893CA4(v17, v31);
      *(void *)(v18 + 128) = v32;
      sub_12168((uint64_t)v31);
      uint64_t v33 = (void **)&v29;
      sub_18D522C(&v33);
      if (SHIBYTE(v27) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v24) < 0) {
        operator delete(v23[0]);
      }
      if (++v11 == 8) {
        return (long long *)((char *)v9 + 136) == a2;
      }
    }
    uint64_t v8 = v9;
    v10 += 136;
    uint64_t v9 = (long long *)((char *)v9 + 136);
    if (v9 == a2) {
      return 1;
    }
  }
}

void sub_1C8575C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1C8378C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C85788(uint64_t a1, long long *a2)
{
  *(_OWORD *)uint64_t v10 = *(_OWORD *)a1;
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  int v12 = *(_DWORD *)(a1 + 24);
  *(_OWORD *)long long __p = *(_OWORD *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 48);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v15 = *(void *)(a1 + 56);
  int v4 = (void **)(a1 + 64);
  long long v16 = *(_OWORD *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 80);
  *(void *)(a1 + 64) = 0;
  uint64_t v5 = a1 + 88;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_1893348((uint64_t)v18, (uint64_t *)(a1 + 88));
  uint64_t v19 = *(void *)(a1 + 128);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  uint64_t v6 = (void **)(a1 + 32);
  long long v7 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v7;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*v6);
  }
  long long v8 = a2[2];
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(_OWORD *)uint64_t v6 = v8;
  *((unsigned char *)a2 + 55) = 0;
  *((unsigned char *)a2 + 32) = 0;
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  sub_19982B0(v4);
  *(_OWORD *)(a1 + 64) = a2[4];
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 9) = 0;
  *((void *)a2 + 10) = 0;
  sub_1893CA4(v5, (uint64_t *)a2 + 11);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  if (*((char *)a2 + 23) < 0) {
    operator delete(*(void **)a2);
  }
  uint64_t v9 = (void **)(a2 + 2);
  *a2 = *(_OWORD *)v10;
  *((void *)a2 + 2) = v11;
  *((_DWORD *)a2 + 6) = v12;
  if (*((char *)a2 + 55) < 0) {
    operator delete(*v9);
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)__p;
  *((void *)a2 + 6) = v14;
  *((void *)a2 + 7) = v15;
  sub_19982B0((void **)a2 + 8);
  a2[4] = v16;
  *((void *)a2 + 10) = v17;
  uint64_t v17 = 0;
  long long v16 = 0uLL;
  sub_1893CA4((uint64_t)a2 + 88, v18);
  *((void *)a2 + 16) = v19;
  sub_12168((uint64_t)v18);
  uint64_t v20 = (void **)&v16;
  sub_18D522C(&v20);
}

void sub_1C859BC(uint64_t a1, long long *a2, long long *a3, long long *a4, uint64_t (**a5)(long long *, uint64_t))
{
  sub_1C84C44(a1, a2, a3, a5);
  if ((*a5)(a4, (uint64_t)a3))
  {
    sub_1C85788((uint64_t)a3, a4);
    if ((*a5)(a3, (uint64_t)a2))
    {
      sub_1C85788((uint64_t)a2, a3);
      if ((*a5)(a2, a1))
      {
        sub_1C85788(a1, a2);
      }
    }
  }
}

void sub_1C85A84(uint64_t a1, long long *a2, long long *a3, long long *a4, long long *a5, uint64_t (**a6)(long long *, uint64_t))
{
  sub_1C859BC(a1, a2, a3, a4, a6);
  if ((*a6)(a5, (uint64_t)a4))
  {
    sub_1C85788((uint64_t)a4, a5);
    if ((*a6)(a4, (uint64_t)a3))
    {
      sub_1C85788((uint64_t)a3, a4);
      if ((*a6)(a3, (uint64_t)a2))
      {
        sub_1C85788((uint64_t)a2, a3);
        if ((*a6)(a2, a1))
        {
          sub_1C85788(a1, a2);
        }
      }
    }
  }
}

uint64_t sub_1C85B70(long long *a1, long long *a2, uint64_t a3, unsigned int (**a4)(int64_t, uint64_t))
{
  if (a1 != a2)
  {
    uint64_t v6 = (uint64_t)a2;
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = ((char *)a2 - (char *)a1) / 136;
    if ((char *)a2 - (char *)a1 >= 137)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      int v12 = (long long *)((char *)a1 + 136 * v10);
      do
      {
        sub_1C85CAC((uint64_t)a1, a4, v9, v12);
        int v12 = (long long *)((char *)v12 - 136);
        --v11;
      }
      while (v11);
    }
    uint64_t v13 = v6;
    if (v6 != a3)
    {
      uint64_t v14 = v6;
      do
      {
        if ((*a4)(v14, (uint64_t)a1))
        {
          sub_1C85788(v14, a1);
          sub_1C85CAC((uint64_t)a1, a4, v9, a1);
        }
        v14 += 136;
      }
      while (v14 != a3);
      uint64_t v13 = a3;
    }
    if (v8 >= 137)
    {
      unint64_t v15 = v8 / 0x88uLL;
      do
      {
        sub_1C85FF8((uint64_t)a1, v6, a4, v15);
        v6 -= 136;
      }
      while (v15-- > 2);
    }
    return v13;
  }
  return a3;
}

void sub_1C85CAC(uint64_t a1, unsigned int (**a2)(int64_t, uint64_t), uint64_t a3, long long *a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v5 = a4;
    int64_t v20 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= (uint64_t)(0xF0F0F0F0F0F0F0F1 * (((uint64_t)a4 - a1) >> 3)))
    {
      int64_t v9 = (0xE1E1E1E1E1E1E1E2 * (((uint64_t)a4 - a1) >> 3)) | 1;
      unint64_t v10 = (long long *)(a1 + 136 * v9);
      int64_t v11 = 0xE1E1E1E1E1E1E1E2 * (((uint64_t)a4 - a1) >> 3) + 2;
      if (v11 < a3 && (*a2)(a1 + 136 * v9, (uint64_t)v10 + 136))
      {
        unint64_t v10 = (long long *)((char *)v10 + 136);
        int64_t v9 = v11;
      }
      if ((((uint64_t (*)(long long *, long long *))*a2)(v10, v5) & 1) == 0)
      {
        *(_OWORD *)uint64_t v21 = *v5;
        uint64_t v22 = *((void *)v5 + 2);
        *((void *)v5 + 1) = 0;
        *((void *)v5 + 2) = 0;
        *(void *)uint64_t v5 = 0;
        int v23 = *((_DWORD *)v5 + 6);
        *(_OWORD *)long long __p = v5[2];
        uint64_t v25 = *((void *)v5 + 6);
        *((void *)v5 + 4) = 0;
        *((void *)v5 + 5) = 0;
        *((void *)v5 + 6) = 0;
        uint64_t v26 = *((void *)v5 + 7);
        long long v27 = v5[4];
        uint64_t v28 = *((void *)v5 + 10);
        *((void *)v5 + 8) = 0;
        *((void *)v5 + 9) = 0;
        *((void *)v5 + 10) = 0;
        sub_1893348((uint64_t)v29, (uint64_t *)v5 + 11);
        uint64_t v30 = *((void *)v5 + 16);
        do
        {
          int v12 = v10;
          if (*((char *)v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          long long v13 = *v10;
          *((void *)v5 + 2) = *((void *)v10 + 2);
          *uint64_t v5 = v13;
          *((unsigned char *)v10 + 23) = 0;
          *(unsigned char *)unint64_t v10 = 0;
          *((_DWORD *)v5 + 6) = *((_DWORD *)v10 + 6);
          uint64_t v14 = (void **)(v5 + 2);
          if (*((char *)v5 + 55) < 0) {
            operator delete(*v14);
          }
          long long v15 = v12[2];
          *((void *)v5 + 6) = *((void *)v12 + 6);
          *(_OWORD *)uint64_t v14 = v15;
          *((unsigned char *)v12 + 55) = 0;
          *((unsigned char *)v12 + 32) = 0;
          *((void *)v5 + 7) = *((void *)v12 + 7);
          sub_19982B0((void **)v5 + 8);
          v5[4] = v12[4];
          *((void *)v5 + 10) = *((void *)v12 + 10);
          *((void *)v12 + 8) = 0;
          *((void *)v12 + 9) = 0;
          *((void *)v12 + 10) = 0;
          sub_1893CA4((uint64_t)v5 + 88, (uint64_t *)v12 + 11);
          *((void *)v5 + 16) = *((void *)v12 + 16);
          if (v20 < v9) {
            break;
          }
          uint64_t v16 = (2 * v9) | 1;
          unint64_t v10 = (long long *)(a1 + 136 * v16);
          int64_t v9 = 2 * v9 + 2;
          if (v9 >= a3)
          {
            int64_t v9 = v16;
          }
          else if ((*a2)(a1 + 136 * v16, (uint64_t)v10 + 136))
          {
            unint64_t v10 = (long long *)((char *)v10 + 136);
          }
          else
          {
            int64_t v9 = v16;
          }
          uint64_t v5 = v12;
        }
        while (!(*a2)((int64_t)v10, (uint64_t)v21));
        if (*((char *)v12 + 23) < 0) {
          operator delete(*(void **)v12);
        }
        uint64_t v17 = (void **)(v12 + 2);
        long long v18 = *(_OWORD *)v21;
        *((void *)v12 + 2) = v22;
        *int v12 = v18;
        HIBYTE(v22) = 0;
        LOBYTE(v21[0]) = 0;
        *((_DWORD *)v12 + 6) = v23;
        if (*((char *)v12 + 55) < 0) {
          operator delete(*v17);
        }
        long long v19 = *(_OWORD *)__p;
        *((void *)v12 + 6) = v25;
        *(_OWORD *)uint64_t v17 = v19;
        HIBYTE(v25) = 0;
        LOBYTE(__p[0]) = 0;
        *((void *)v12 + 7) = v26;
        sub_19982B0((void **)v12 + 8);
        v12[4] = v27;
        *((void *)v12 + 10) = v28;
        long long v27 = 0uLL;
        uint64_t v28 = 0;
        sub_1893CA4((uint64_t)v12 + 88, v29);
        *((void *)v12 + 16) = v30;
        sub_12168((uint64_t)v29);
        uint64_t v31 = (void **)&v27;
        sub_18D522C(&v31);
        if (SHIBYTE(v25) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v22) < 0) {
          operator delete(v21[0]);
        }
      }
    }
  }
}

void sub_1C85FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1C8378C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C85FF8(uint64_t a1, uint64_t a2, unsigned int (**a3)(uint64_t, uint64_t), uint64_t a4)
{
  if (a4 >= 2)
  {
    *(_OWORD *)long long v19 = *(_OWORD *)a1;
    uint64_t v20 = *(void *)(a1 + 16);
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    int v21 = *(_DWORD *)(a1 + 24);
    *(_OWORD *)long long __p = *(_OWORD *)(a1 + 32);
    uint64_t v23 = *(void *)(a1 + 48);
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    uint64_t v24 = *(void *)(a1 + 56);
    long long v25 = *(_OWORD *)(a1 + 64);
    uint64_t v26 = *(void *)(a1 + 80);
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    sub_1893348((uint64_t)v27, (uint64_t *)(a1 + 88));
    uint64_t v28 = *(void *)(a1 + 128);
    uint64_t v8 = sub_1C86338(a1, a3, a4);
    uint64_t v9 = v8;
    unint64_t v10 = (void **)(a2 - 136);
    int v11 = *(char *)(v8 + 23);
    if (v8 == a2 - 136)
    {
      if (v11 < 0) {
        operator delete(*(void **)v8);
      }
      *(void *)(v9 + 16) = v20;
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v19;
      *(_DWORD *)(v9 + 24) = v21;
      long long v18 = (void **)(v9 + 32);
      if (*(char *)(v9 + 55) < 0) {
        operator delete(*v18);
      }
      *(void *)(v9 + 48) = v23;
      *(_OWORD *)long long v18 = *(_OWORD *)__p;
      *(void *)(v9 + 56) = v24;
      sub_19982B0((void **)(v9 + 64));
      *(_OWORD *)(v9 + 64) = v25;
      *(void *)(v9 + 80) = v26;
      long long v25 = 0uLL;
      uint64_t v26 = 0;
      sub_1893CA4(v9 + 88, v27);
      *(void *)(v9 + 128) = v28;
    }
    else
    {
      if (v11 < 0) {
        operator delete(*(void **)v8);
      }
      long long v12 = *(_OWORD *)v10;
      *(void *)(v9 + 16) = *(void *)(a2 - 120);
      *(_OWORD *)uint64_t v9 = v12;
      *(unsigned char *)(a2 - 113) = 0;
      *(unsigned char *)(a2 - 136) = 0;
      *(_DWORD *)(v9 + 24) = *(_DWORD *)(a2 - 112);
      long long v13 = (void **)(v9 + 32);
      if (*(char *)(v9 + 55) < 0) {
        operator delete(*v13);
      }
      uint64_t v14 = (void **)(a2 - 104);
      long long v15 = *(_OWORD *)(a2 - 104);
      *(void *)(v9 + 48) = *(void *)(a2 - 88);
      *(_OWORD *)long long v13 = v15;
      *(unsigned char *)(a2 - 81) = 0;
      *(unsigned char *)(a2 - 104) = 0;
      *(void *)(v9 + 56) = *(void *)(a2 - 80);
      sub_19982B0((void **)(v9 + 64));
      uint64_t v16 = (void *)(a2 - 72);
      *(_OWORD *)(v9 + 64) = *(_OWORD *)(a2 - 72);
      *(void *)(v9 + 80) = *(void *)(a2 - 56);
      *uint64_t v16 = 0;
      v16[1] = 0;
      v16[2] = 0;
      sub_1893CA4(v9 + 88, (uint64_t *)(a2 - 48));
      *(void *)(v9 + 128) = *(void *)(a2 - 8);
      uint64_t v17 = v9 + 136;
      if (*(char *)(a2 - 113) < 0) {
        operator delete(*v10);
      }
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v19;
      *(void *)(a2 - 120) = v20;
      *(_DWORD *)(a2 - 112) = v21;
      if (*(char *)(a2 - 81) < 0) {
        operator delete(*v14);
      }
      *(_OWORD *)uint64_t v14 = *(_OWORD *)__p;
      *(void *)(a2 - 88) = v23;
      *(void *)(a2 - 80) = v24;
      sub_19982B0((void **)(a2 - 72));
      *(_OWORD *)(a2 - 72) = v25;
      *(void *)(a2 - 56) = v26;
      uint64_t v26 = 0;
      long long v25 = 0uLL;
      sub_1893CA4(a2 - 48, v27);
      *(void *)(a2 - 8) = v28;
      sub_1C86484(a1, v17, (uint64_t (**)(long long *, void **))a3, 0xF0F0F0F0F0F0F0F1 * ((v17 - a1) >> 3));
    }
    sub_12168((uint64_t)v27);
    long long v29 = (void **)&v25;
    sub_18D522C(&v29);
  }
}

void sub_1C86324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1C8378C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1C86338(uint64_t a1, unsigned int (**a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = a1 + 136 * v6 + 136;
    uint64_t v10 = 2 * v6;
    uint64_t v6 = (2 * v6) | 1;
    uint64_t v11 = v10 + 2;
    if (v10 + 2 < a3 && (*a2)(v9, v9 + 136))
    {
      v9 += 136;
      uint64_t v6 = v11;
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v12 = *(_OWORD *)v9;
    *(void *)(a1 + 16) = *(void *)(v9 + 16);
    *(_OWORD *)a1 = v12;
    *(unsigned char *)(v9 + 23) = 0;
    *(unsigned char *)uint64_t v9 = 0;
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(v9 + 24);
    long long v13 = (void **)(a1 + 32);
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*v13);
    }
    long long v14 = *(_OWORD *)(v9 + 32);
    *(void *)(a1 + 48) = *(void *)(v9 + 48);
    *(_OWORD *)long long v13 = v14;
    *(unsigned char *)(v9 + 55) = 0;
    *(unsigned char *)(v9 + 32) = 0;
    *(void *)(a1 + 56) = *(void *)(v9 + 56);
    sub_19982B0((void **)(a1 + 64));
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v9 + 64);
    *(void *)(a1 + 80) = *(void *)(v9 + 80);
    *(void *)(v9 + 64) = 0;
    *(void *)(v9 + 72) = 0;
    *(void *)(v9 + 80) = 0;
    sub_1893CA4(a1 + 88, (uint64_t *)(v9 + 88));
    *(void *)(a1 + 128) = *(void *)(v9 + 128);
    a1 = v9;
  }
  while (v6 <= v8);
  return v9;
}

void sub_1C86484(uint64_t a1, uint64_t a2, uint64_t (**a3)(long long *, void **), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    unint64_t v8 = v4 >> 1;
    uint64_t v9 = (long long *)(a1 + 136 * (v4 >> 1));
    uint64_t v10 = (long long *)(a2 - 136);
    if ((*a3)(v9, (void **)(a2 - 136)))
    {
      *(_OWORD *)uint64_t v16 = *v10;
      uint64_t v17 = *((void *)v10 + 2);
      *((void *)v10 + 1) = 0;
      *((void *)v10 + 2) = 0;
      *(void *)uint64_t v10 = 0;
      int v18 = *(_DWORD *)(a2 - 112);
      *(_OWORD *)long long __p = *(_OWORD *)(a2 - 104);
      uint64_t v20 = *(void *)(a2 - 88);
      *(void *)(a2 - 104) = 0;
      *(void *)(a2 - 96) = 0;
      *(void *)(a2 - 88) = 0;
      uint64_t v21 = *(void *)(a2 - 80);
      long long v22 = *(_OWORD *)(a2 - 72);
      uint64_t v23 = *(void *)(a2 - 56);
      *(void *)(a2 - 72) = 0;
      *(void *)(a2 - 64) = 0;
      *(void *)(a2 - 56) = 0;
      sub_1893348((uint64_t)v24, (uint64_t *)(a2 - 48));
      uint64_t v25 = *(void *)(a2 - 8);
      do
      {
        uint64_t v11 = v9;
        if (*((char *)v10 + 23) < 0) {
          operator delete(*(void **)v10);
        }
        long long v12 = *v9;
        *((void *)v10 + 2) = *((void *)v9 + 2);
        *uint64_t v10 = v12;
        *((unsigned char *)v9 + 23) = 0;
        *(unsigned char *)uint64_t v9 = 0;
        *((_DWORD *)v10 + 6) = *((_DWORD *)v9 + 6);
        long long v13 = (void **)(v10 + 2);
        if (*((char *)v10 + 55) < 0) {
          operator delete(*v13);
        }
        long long v14 = v9[2];
        *((void *)v10 + 6) = *((void *)v9 + 6);
        *(_OWORD *)long long v13 = v14;
        *((unsigned char *)v9 + 55) = 0;
        *((unsigned char *)v9 + 32) = 0;
        *((void *)v10 + 7) = *((void *)v9 + 7);
        sub_19982B0((void **)v10 + 8);
        v10[4] = v9[4];
        *((void *)v10 + 10) = *((void *)v9 + 10);
        *((void *)v9 + 8) = 0;
        *((void *)v9 + 9) = 0;
        *((void *)v9 + 10) = 0;
        sub_1893CA4((uint64_t)v10 + 88, (uint64_t *)v9 + 11);
        *((void *)v10 + 16) = *((void *)v9 + 16);
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v9 = (long long *)(a1 + 136 * v8);
        uint64_t v10 = v11;
      }
      while (((*a3)(v9, v16) & 1) != 0);
      if (*((char *)v11 + 23) < 0) {
        operator delete(*(void **)v11);
      }
      long long v15 = (void **)(v11 + 2);
      *uint64_t v11 = *(_OWORD *)v16;
      *((void *)v11 + 2) = v17;
      HIBYTE(v17) = 0;
      LOBYTE(v16[0]) = 0;
      *((_DWORD *)v11 + 6) = v18;
      if (*((char *)v11 + 55) < 0) {
        operator delete(*v15);
      }
      *(_OWORD *)long long v15 = *(_OWORD *)__p;
      *((void *)v11 + 6) = v20;
      HIBYTE(v20) = 0;
      LOBYTE(__p[0]) = 0;
      *((void *)v11 + 7) = v21;
      sub_19982B0((void **)v11 + 8);
      v11[4] = v22;
      *((void *)v11 + 10) = v23;
      uint64_t v23 = 0;
      long long v22 = 0uLL;
      sub_1893CA4((uint64_t)v11 + 88, v24);
      *((void *)v11 + 16) = v25;
      sub_12168((uint64_t)v24);
      uint64_t v26 = (void **)&v22;
      sub_18D522C(&v26);
      if (SHIBYTE(v20) < 0) {
        operator delete(__p[0]);
      }
      if (SHIBYTE(v17) < 0) {
        operator delete(v16[0]);
      }
    }
  }
}

void sub_1C86720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1C8378C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1C86734(uint64_t a1)
{
  double v3 = (void **)(a1 + 80);
  sub_18D522C(&v3);
  sub_12127D0(a1 + 24);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1C86788(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x6DB6DB6DB6DB6DB7 * ((a1[1] - *a1) >> 4);
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x249249249249249) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x6DB6DB6DB6DB6DB7 * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x124924924924924) {
    unint64_t v9 = 0x249249249249249;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_1C869D8(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  long long v13 = v10;
  long long v14 = &v10[112 * v4];
  uint64_t v16 = &v10[112 * v9];
  sub_1C868A8(v14, a2);
  long long v15 = v14 + 112;
  sub_1C86960(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1C86B34((uint64_t)&v13);
  return v11;
}

void sub_1C86894(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1C86B34((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_1C868A8(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }
  sub_1212718((uint64_t)(__dst + 3), (uint64_t)a2 + 24);
  __dst[10] = 0;
  __dst[11] = 0;
  __dst[12] = 0;
  sub_18D50DC(__dst + 10, *((void *)a2 + 10), *((void *)a2 + 11), (uint64_t)(*((void *)a2 + 11) - *((void *)a2 + 10)) >> 6);
  __dst[13] = *((void *)a2 + 13);
  return __dst;
}

void sub_1C86934(_Unwind_Exception *a1)
{
  sub_12127D0(v2);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1C86960(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1C86A24((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1C869D8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x24924924924924ALL) {
    sub_188D718();
  }
  return operator new(112 * a2);
}

uint64_t sub_1C86A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 != a5)
  {
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = a7 + v11;
      uint64_t v13 = a3 + v11;
      long long v14 = *(_OWORD *)(a3 + v11 - 112);
      *(void *)(v12 - 96) = *(void *)(a3 + v11 - 96);
      *(_OWORD *)(v12 - 112) = v14;
      *(void *)(v13 - 104) = 0;
      *(void *)(v13 - 96) = 0;
      *(void *)(v13 - 112) = 0;
      sub_1C82320((std::string *)(a7 + v11 - 88), a3 + v11 - 88);
      *(void *)(v12 - 32) = 0;
      *(void *)(v12 - 24) = 0;
      *(void *)(v12 - 16) = 0;
      *(_OWORD *)(v12 - 32) = *(_OWORD *)(a3 + v11 - 32);
      *(void *)(v12 - 16) = *(void *)(a3 + v11 - 16);
      *(void *)(v13 - 32) = 0;
      *(void *)(v13 - 24) = 0;
      *(void *)(v13 - 16) = 0;
      *(void *)(v12 - 8) = *(void *)(a3 + v11 - 8);
      v11 -= 112;
    }
    while (a3 + v11 != a5);
  }
  return a6;
}

void sub_1C86AE4(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 80);
  sub_18D522C(&v2);
  sub_12127D0(a1 + 24);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

uint64_t sub_1C86B34(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 112;
    sub_1C86AE4(i - 112);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1C86B84(uint64_t a1)
{
  uint64_t v3 = (void **)(a1 + 104);
  sub_18D522C(&v3);
  sub_12127D0(a1 + 48);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t *sub_1C86BE8(uint64_t **a1, void **a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)sub_1122028((uint64_t)a1, &v10, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    sub_1C86C7C((uint64_t)a1, a3, (uint64_t)v9);
    sub_11220BC(a1, v10, v7, v9[0]);
    uint64_t v6 = v9[0];
    v9[0] = 0;
    sub_1C86D1C((uint64_t)v9, 0);
  }
  return v6;
}

double sub_1C86C7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0xA8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *((_OWORD *)v6 + 2) = *(_OWORD *)a2;
  *((void *)v6 + 6) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a2 + 24);
  *((void *)v6 + 9) = *(void *)(a2 + 40);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  sub_1C82320((std::string *)(v6 + 80), a2 + 48);
  *(_OWORD *)(v6 + 136) = *(_OWORD *)(a2 + 104);
  *((void *)v6 + 19) = *(void *)(a2 + 120);
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = 0;
  *(void *)(a2 + 104) = 0;
  double result = *(double *)(a2 + 128);
  *((double *)v6 + 20) = result;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1C86D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1C86D74((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_1C86D74(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 104);
  sub_18D522C(&v2);
  sub_12127D0(a1 + 48);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

char *sub_1C86DD4(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(__dst + 24, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)(__dst + 24) = v6;
  }
  sub_1212718((uint64_t)(__dst + 48), (uint64_t)a3 + 24);
  *((void *)__dst + 13) = 0;
  *((void *)__dst + 14) = 0;
  *((void *)__dst + 15) = 0;
  sub_18D50DC((void *)__dst + 13, *((void *)a3 + 10), *((void *)a3 + 11), (uint64_t)(*((void *)a3 + 11) - *((void *)a3 + 10)) >> 6);
  *((void *)__dst + 16) = *((void *)a3 + 13);
  return __dst;
}

void sub_1C86E90(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C86ED4(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 112;
        sub_1C86AE4(v4);
      }
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_1C86F58(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1A1A654(a1, a2);
    uint64_t v4 = a1[1];
    uint64_t v5 = 17 * a2;
    unint64_t v6 = v4 + 136 * a2;
    uint64_t v7 = 8 * v5;
    do
    {
      sub_1C86FF4(v4);
      v4 += 136;
      v7 -= 136;
    }
    while (v7);
    a1[1] = v6;
  }
  return a1;
}

void sub_1C86FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t sub_1C86FF4(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  sub_12125C0((void *)(a1 + 48), 0, 0);
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  return a1;
}

void sub_1C87048(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 47) < 0) {
    operator delete(*(void **)(v1 + 24));
  }
  sub_20A682C(v1);
  _Unwind_Resume(a1);
}

void sub_1C8706C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 136;
        sub_1C86D74(v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

std::string *sub_1C870F0(std::string *a1, uint64_t a2)
{
  std::string::operator=(a1, (const std::string *)a2);
  std::string::operator=(a1 + 1, (const std::string *)(a2 + 24));
  sub_121302C(a1 + 2, a2 + 48);
  if (a1 != (std::string *)a2) {
    sub_1998160((uint64_t)&a1[4].__r_.__value_.__l.__size_, *(std::string **)(a2 + 104), *(std::string **)(a2 + 112), (uint64_t)(*(void *)(a2 + 112) - *(void *)(a2 + 104)) >> 6);
  }
  a1[5].__r_.__value_.__l.__size_ = *(void *)(a2 + 128);
  return a1;
}

void sub_1C87158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 < 2) {
    return;
  }
  v39[12] = v4;
  v39[13] = v5;
  int64_t v9 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) < (uint64_t)(0xF0F0F0F0F0F0F0F1 * ((a4 - a1) >> 3))) {
    return;
  }
  int64_t v12 = (0xE1E1E1E1E1E1E1E2 * ((a4 - a1) >> 3)) | 1;
  uint64_t v13 = (long long *)(a1 + 136 * v12);
  int64_t v14 = 0xE1E1E1E1E1E1E1E2 * ((a4 - a1) >> 3) + 2;
  if (v14 < a3)
  {
    uint64_t v15 = a1 + 136 * v12 + 24;
    uint64_t v16 = (uint64_t)(v13 + 10);
    if (**(unsigned char **)a2) {
      BOOL v17 = **(unsigned char **)(a2 + 16) == 0;
    }
    else {
      BOOL v17 = 1;
    }
    if (v17)
    {
      if (!sub_1C8255C(v15, v16)) {
        goto LABEL_11;
      }
    }
    else if (!sub_1C82508(v15, v16, *(void *)(a2 + 8)))
    {
      goto LABEL_11;
    }
    uint64_t v13 = (long long *)((char *)v13 + 136);
    int64_t v12 = v14;
  }
LABEL_11:
  uint64_t v18 = (uint64_t)v13 + 24;
  long long v19 = (long long *)(a4 + 24);
  if (**(unsigned char **)a2) {
    BOOL v20 = **(unsigned char **)(a2 + 16) == 0;
  }
  else {
    BOOL v20 = 1;
  }
  if (v20)
  {
    if (sub_1C8255C(v18, a4 + 24)) {
      return;
    }
  }
  else if (sub_1C82508(v18, a4 + 24, *(void *)(a2 + 8)))
  {
    return;
  }
  long long v21 = *(_OWORD *)a4;
  uint64_t v32 = *(void *)(a4 + 16);
  *(_OWORD *)uint64_t v31 = v21;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  long long v22 = *v19;
  uint64_t v34 = *(void *)(a4 + 40);
  *(_OWORD *)long long __p = v22;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = 0;
  *(void *)long long v19 = 0;
  sub_1C82320(v35, a4 + 48);
  long long v36 = *(_OWORD *)(a4 + 104);
  uint64_t v37 = *(void *)(a4 + 120);
  *(void *)(a4 + 104) = 0;
  *(void *)(a4 + 112) = 0;
  *(void *)(a4 + 120) = 0;
  uint64_t v38 = *(void *)(a4 + 128);
  sub_1C8751C(a4, v13);
  if (v9 >= v12)
  {
    while (1)
    {
      uint64_t v24 = 2 * v12;
      int64_t v12 = (2 * v12) | 1;
      uint64_t v23 = (long long *)(a1 + 136 * v12);
      int64_t v25 = v24 + 2;
      if (v24 + 2 < a3)
      {
        uint64_t v26 = a1 + 136 * v12 + 24;
        uint64_t v27 = (uint64_t)(v23 + 10);
        if (**(unsigned char **)a2) {
          BOOL v28 = **(unsigned char **)(a2 + 16) == 0;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (!sub_1C82508(v26, v27, *(void *)(a2 + 8))) {
            goto LABEL_36;
          }
LABEL_35:
          uint64_t v23 = (long long *)((char *)v23 + 136);
          int64_t v12 = v25;
          goto LABEL_36;
        }
        if (sub_1C8255C(v26, v27)) {
          goto LABEL_35;
        }
      }
LABEL_36:
      uint64_t v29 = (uint64_t)v23 + 24;
      if (**(unsigned char **)a2) {
        BOOL v30 = **(unsigned char **)(a2 + 16) == 0;
      }
      else {
        BOOL v30 = 1;
      }
      if (v30)
      {
        if (sub_1C8255C(v29, (uint64_t)__p)) {
          break;
        }
      }
      else if (sub_1C82508(v29, (uint64_t)__p, *(void *)(a2 + 8)))
      {
        break;
      }
      sub_1C8751C((uint64_t)v13, v23);
      uint64_t v13 = v23;
      if (v9 < v12) {
        goto LABEL_21;
      }
    }
  }
  uint64_t v23 = v13;
LABEL_21:
  sub_1C8751C((uint64_t)v23, (long long *)v31);
  v39[0] = (void **)&v36;
  sub_18D522C(v39);
  sub_12127D0((uint64_t)v35);
  if (SHIBYTE(v34) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v32) < 0) {
    operator delete(v31[0]);
  }
}

char *sub_1C8741C(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    sub_4200(__dst + 24, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)(__dst + 24) = v5;
  }
  sub_1212718((uint64_t)(__dst + 48), (uint64_t)(a2 + 3));
  *((void *)__dst + 13) = 0;
  *((void *)__dst + 14) = 0;
  *((void *)__dst + 15) = 0;
  sub_18D50DC((void *)__dst + 13, *((void *)a2 + 13), *((void *)a2 + 14), (uint64_t)(*((void *)a2 + 14) - *((void *)a2 + 13)) >> 6);
  *((void *)__dst + 16) = *((void *)a2 + 16);
  return __dst;
}

void sub_1C874D8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C8751C(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  sub_1C87578(a1 + 24, (long long *)((char *)a2 + 24));
  return a1;
}

uint64_t sub_1C87578(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  if ((long long *)a1 != a2)
  {
    uint64_t v5 = *(void *)(a1 + 32);
    if ((v5 & 2) != 0)
    {
      unint64_t v6 = 0;
    }
    else
    {
      unint64_t v6 = (void *)(v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (v5) {
        unint64_t v6 = (void *)*v6;
      }
    }
    uint64_t v7 = (std::string *)(a1 + 24);
    uint64_t v8 = (uint64_t)a2 + 24;
    uint64_t v9 = *((void *)a2 + 4);
    if ((v9 & 2) != 0)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
      if (v9) {
        uint64_t v10 = (void *)*v10;
      }
    }
    if (v6 == v10) {
      sub_1213080((uint64_t)v7, v8);
    }
    else {
      sub_121302C(v7, v8);
    }
  }
  sub_19982B0((void **)(a1 + 80));
  *(_OWORD *)(a1 + 80) = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *((void *)a2 + 10) = 0;
  *((void *)a2 + 11) = 0;
  *((void *)a2 + 12) = 0;
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  return a1;
}

uint64_t *sub_1C87650(uint64_t **a1, void **a2, long long *a3)
{
  uint64_t v5 = (uint64_t **)sub_1122028((uint64_t)a1, &v10, a2);
  unint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = v5;
    sub_1C876E4((uint64_t)a1, a3, (uint64_t)v9);
    sub_11220BC(a1, v10, v7, v9[0]);
    unint64_t v6 = v9[0];
    v9[0] = 0;
    sub_1C86D1C((uint64_t)v9, 0);
  }
  return v6;
}

char *sub_1C876E4@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unint64_t v6 = (char *)operator new(0xA8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double result = sub_1C87750(v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1C87738(_Unwind_Exception *a1)
{
  sub_1C86D1C(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_1C87750(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    sub_4200(__dst + 24, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)(__dst + 24) = v5;
  }
  sub_1212718((uint64_t)(__dst + 48), (uint64_t)(a2 + 3));
  *((void *)__dst + 13) = 0;
  *((void *)__dst + 14) = 0;
  *((void *)__dst + 15) = 0;
  sub_18D50DC((void *)__dst + 13, *((void *)a2 + 13), *((void *)a2 + 14), (uint64_t)(*((void *)a2 + 14) - *((void *)a2 + 13)) >> 6);
  *((void *)__dst + 16) = *((void *)a2 + 16);
  return __dst;
}

void sub_1C8780C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1C87850(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1C878A8(a1, *(void ***)a2, (void **)(a2 + 8));
  return a1;
}

void sub_1C87890(_Unwind_Exception *a1)
{
  sub_1C87B38(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1C878A8(uint64_t *result, void **a2, void **a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    uint64_t v6 = (uint64_t)(result + 1);
    do
    {
      double result = sub_1C87934(v5, v6, v4 + 4, (long long *)v4 + 2);
      uint64_t v7 = (void **)v4[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = (void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void **)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_1C87934(uint64_t **a1, uint64_t a2, void **a3, long long *a4)
{
  uint64_t v6 = sub_1895CA8(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    sub_1C879CC((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, (uint64_t)v12, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1C86D1C((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_1C879CC@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0xA8uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  double result = sub_1C87A38(v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1C87A20(_Unwind_Exception *a1)
{
  sub_1C86D1C(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_1C87A38(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }
  if (*((char *)a2 + 47) < 0)
  {
    sub_4200(__dst + 24, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v5 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)(__dst + 24) = v5;
  }
  sub_1212718((uint64_t)(__dst + 48), (uint64_t)(a2 + 3));
  *((void *)__dst + 13) = 0;
  *((void *)__dst + 14) = 0;
  *((void *)__dst + 15) = 0;
  sub_18D50DC((void *)__dst + 13, *((void *)a2 + 13), *((void *)a2 + 14), (uint64_t)(*((void *)a2 + 14) - *((void *)a2 + 13)) >> 6);
  *((void *)__dst + 16) = *((void *)a2 + 16);
  return __dst;
}

void sub_1C87AF4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C87B38(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1C87B38(a1, *a2);
    sub_1C87B38(a1, a2[1]);
    sub_1C86D74((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

char *sub_1C87B94(char *__dst, _DWORD *a2, long long *a3, long long *a4, uint64_t *a5, int a6, double a7)
{
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v13 = *a3;
    *((void *)__dst + 2) = *((void *)a3 + 2);
    *(_OWORD *)std::string __dst = v13;
  }
  *((_DWORD *)__dst + 6) = *a2;
  if (*((char *)a4 + 23) < 0)
  {
    sub_4200(__dst + 32, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v14 = *a4;
    *((void *)__dst + 6) = *((void *)a4 + 2);
    *((_OWORD *)__dst + 2) = v14;
  }
  *((void *)__dst + 8) = 0;
  *((double *)__dst + 7) = a7;
  *((void *)__dst + 9) = 0;
  *((void *)__dst + 10) = 0;
  sub_18D50DC((void *)__dst + 8, *a5, a5[1], (a5[1] - *a5) >> 6);
  *(_OWORD *)(__dst + 104) = 0u;
  *(_OWORD *)(__dst + 88) = 0u;
  *((_DWORD *)__dst + 30) = 1065353216;
  *((_DWORD *)__dst + 33) = a6;
  return __dst;
}

void sub_1C87C78(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C87CAC(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  long long v5 = a2[2];
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(_OWORD *)(a1 + 32) = v5;
  *((void *)a2 + 5) = 0;
  *((void *)a2 + 6) = 0;
  *((void *)a2 + 4) = 0;
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 64) = a2[4];
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  *((void *)a2 + 8) = 0;
  *((void *)a2 + 9) = 0;
  *((void *)a2 + 10) = 0;
  sub_1893348(a1 + 88, (uint64_t *)a2 + 11);
  *(void *)(a1 + 128) = *((void *)a2 + 16);
  *(unsigned char *)(a1 + 136) = 1;
  return a1;
}

uint64_t sub_1C87D50(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xF0F0F0F0F0F0F0F1 * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x1E1E1E1E1E1E1E1) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xF0F0F0F0F0F0F0F1 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0xF0F0F0F0F0F0F0) {
    unint64_t v9 = 0x1E1E1E1E1E1E1E1;
  }
  else {
    unint64_t v9 = v5;
  }
  BOOL v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_19EAD90(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  long long v13 = v10;
  long long v14 = &v10[136 * v4];
  uint64_t v16 = &v10[136 * v9];
  sub_19EABE0(v14, a2);
  uint64_t v15 = v14 + 136;
  sub_19EACFC(a1, &v13);
  uint64_t v11 = a1[1];
  sub_19EAE74((uint64_t)&v13);
  return v11;
}

void sub_1C87E44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19EAE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1C87E58(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xF0F0F0F0F0F0F0F1 * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x1E1E1E1E1E1E1E1) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xF0F0F0F0F0F0F0F1 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0xF0F0F0F0F0F0F0) {
    unint64_t v9 = 0x1E1E1E1E1E1E1E1;
  }
  else {
    unint64_t v9 = v5;
  }
  BOOL v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_19EAD90(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  long long v13 = v10;
  long long v14 = &v10[136 * v4];
  uint64_t v16 = &v10[136 * v9];
  sub_19EABE0(v14, a2);
  uint64_t v15 = v14 + 136;
  sub_19EACFC(a1, &v13);
  uint64_t v11 = a1[1];
  sub_19EAE74((uint64_t)&v13);
  return v11;
}

void sub_1C87F4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19EAE74((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1C87F60(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    sub_12168(a1 + 88);
    uint64_t v3 = (void **)(a1 + 64);
    sub_18D522C(&v3);
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
  }
  return a1;
}

uint64_t sub_1C87FCC(uint64_t a1)
{
  sub_50A0C(a1, *(void ***)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

unsigned __int8 *sub_1C88008(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_111EE48(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    long long v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_111EE88(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v16 = (char *)operator new(0x40uLL);
  v26[0] = v16;
  v26[1] = a1 + 16;
  *(void *)uint64_t v16 = 0;
  *((void *)v16 + 1) = v9;
  *((_OWORD *)v16 + 1) = *(_OWORD *)a3;
  *((void *)v16 + 4) = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(_OWORD *)(v16 + 40) = *(_OWORD *)(a3 + 24);
  *((void *)v16 + 7) = *(void *)(a3 + 40);
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  char v27 = 1;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_19B63C0(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v23 = *(void **)(*(void *)a1 + 8 * v3);
  if (v23)
  {
    *(void *)v26[0] = *v23;
    *uint64_t v23 = v26[0];
  }
  else
  {
    *(void *)v26[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v26[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v26[0])
    {
      unint64_t v24 = *(void *)(*(void *)v26[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v24 >= v10) {
          v24 %= v10;
        }
      }
      else
      {
        v24 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v24) = v26[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v26[0];
  v26[0] = 0;
  ++*v7;
  sub_19B64B0((uint64_t)v26, 0);
  return i;
}

void sub_1C882A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_19B64B0((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void sub_1C882B8()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_26283B0, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1C8F298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1C912A4()
{
}

void sub_1C912B0()
{
}

void sub_1C912C0()
{
}

void sub_1C912CC()
{
}

void sub_1C912DC()
{
}

void sub_1C912E8()
{
}

void sub_1C912F8()
{
}

void sub_1C91304()
{
}

void sub_1C91314()
{
}

void sub_1C91320()
{
}

void sub_1C91330()
{
}

void sub_1C9133C()
{
}

void sub_1C9134C()
{
}

void sub_1C91358()
{
}

void sub_1C91368()
{
}

void sub_1C91374()
{
}

void sub_1C91384()
{
}

void sub_1C91390()
{
}

void sub_1C913A0()
{
}

void sub_1C913AC()
{
}

void sub_1C913BC()
{
}

void sub_1C913C8()
{
}

void sub_1C913D8()
{
}

void sub_1C913E4()
{
}

void sub_1C913F4()
{
}

void sub_1C91400()
{
}

void sub_1C91410()
{
}

void sub_1C9141C()
{
}

void sub_1C9142C()
{
}

void sub_1C91438()
{
}

void sub_1C91448()
{
}

void sub_1C91454()
{
}

void sub_1C91464()
{
}

void sub_1C91470()
{
}

void sub_1C91480()
{
}

void sub_1C9148C()
{
}

void sub_1C9149C()
{
}

void sub_1C914A8()
{
}

void sub_1C914B8()
{
}

void sub_1C914C4()
{
}

void sub_1C914D4()
{
}

void sub_1C914E0()
{
}

void sub_1C914F0()
{
}

void sub_1C914FC()
{
}

void sub_1C9150C()
{
}

void sub_1C91518()
{
}

void sub_1C91528()
{
}

void sub_1C91534()
{
}

void sub_1C91544()
{
}

void sub_1C91550()
{
}

void sub_1C91560()
{
}

void sub_1C9156C()
{
}

void sub_1C9157C()
{
}

void sub_1C91588()
{
}

void sub_1C91598()
{
}

void sub_1C915A4()
{
}

void sub_1C915B4()
{
}

void sub_1C915C0()
{
}

void sub_1C915D0()
{
}

void sub_1C915DC()
{
}

void sub_1C915EC()
{
}

void sub_1C915F8()
{
}

void sub_1C91608()
{
}

void sub_1C91614()
{
}

void sub_1C91624()
{
}

void sub_1C91630()
{
}

void sub_1C91640()
{
}

void sub_1C9164C()
{
}

void sub_1C9165C()
{
}

void sub_1C91668()
{
}

void sub_1C91678()
{
}

void sub_1C91684()
{
}

void sub_1C91694()
{
}

void sub_1C916A0()
{
}

void sub_1C916B0()
{
}

void sub_1C916BC()
{
}

void sub_1C916CC()
{
}

void sub_1C916D8()
{
}

void sub_1C916E8()
{
}

void sub_1C916F4()
{
}

void sub_1C91704()
{
}

void sub_1C91710()
{
}

void sub_1C91720()
{
}

void sub_1C9172C()
{
}

void sub_1C9173C()
{
}

void sub_1C91748()
{
}

void sub_1C91758()
{
}

void sub_1C91764()
{
}

void sub_1C91774()
{
}

void sub_1C91780()
{
}

void sub_1C91790()
{
}

void sub_1C9179C()
{
}

void sub_1C917AC()
{
}

void sub_1C917B8()
{
}

void sub_1C917C8()
{
}

void sub_1C917D4()
{
}

void sub_1C917E4()
{
}

void sub_1C917F0()
{
}

void sub_1C91800()
{
}

void sub_1C9180C()
{
}

void sub_1C9181C()
{
}

void sub_1C91828()
{
}

void sub_1C91838()
{
}

void sub_1C91844()
{
}

void sub_1C91854()
{
}

void sub_1C91860()
{
}

void sub_1C91870()
{
}

void sub_1C9187C()
{
}

void sub_1C9188C()
{
}

void sub_1C91898()
{
}

void sub_1C918A8()
{
}

void sub_1C918B4()
{
}

void sub_1C918C4()
{
}

void sub_1C918D0()
{
}

void sub_1C918E0()
{
}

void sub_1C918EC()
{
}

void sub_1C918FC()
{
}

void sub_1C91908()
{
}

void sub_1C91918()
{
}

void sub_1C91924()
{
}

void sub_1C91934()
{
}

void sub_1C91940()
{
}

void sub_1C91950()
{
}

void sub_1C9195C()
{
}

void sub_1C9196C()
{
}

void sub_1C91978()
{
}

void sub_1C91988()
{
}

void sub_1C91994()
{
}

void sub_1C919A4()
{
}

void sub_1C919B0()
{
}

void sub_1C919C0()
{
}

void sub_1C919CC()
{
}

void sub_1C919DC()
{
}

void sub_1C919E8()
{
}

void sub_1C919F8()
{
}

void sub_1C91A04()
{
}

void sub_1C91A14()
{
}

void sub_1C91A20()
{
}

void sub_1C91A30()
{
}

void sub_1C91A3C()
{
}

void sub_1C91A4C()
{
}

void sub_1C91A58()
{
}

void sub_1C91A68()
{
}

void sub_1C91A74()
{
}

void sub_1C91A84()
{
}

void sub_1C91A90()
{
}

void sub_1C91AA0()
{
}

void sub_1C91AAC()
{
}

void sub_1C91ABC()
{
}

void sub_1C91AC8()
{
}

void sub_1C91AD8()
{
}

void sub_1C91AE4()
{
}

void sub_1C91AF4()
{
}

void sub_1C91B00()
{
}

void sub_1C91B10()
{
}

void sub_1C91B1C()
{
}

void sub_1C91B2C()
{
}

void sub_1C91B38()
{
}

void sub_1C91B48()
{
}

void sub_1C91B54()
{
}

void sub_1C91B64()
{
}

void sub_1C91B70()
{
}

void sub_1C91B80()
{
}

void sub_1C91B8C()
{
}

void sub_1C91B9C()
{
}

void sub_1C91BA8()
{
}

void sub_1C91BB8()
{
}

void sub_1C91BC4()
{
}

void sub_1C91BD4()
{
}

void sub_1C91BE0()
{
}

void sub_1C91BF0()
{
}

void sub_1C91BFC()
{
}

void sub_1C91C0C()
{
}

void sub_1C91C18()
{
}

void sub_1C91C28()
{
}

void sub_1C91C34()
{
}

void sub_1C91C44()
{
}

void sub_1C91C50()
{
}

void sub_1C91C60()
{
}

void sub_1C91C6C()
{
}

void sub_1C91C7C()
{
}

void sub_1C91C88()
{
}

void sub_1C91C98()
{
}

void sub_1C91CA4()
{
}

void sub_1C91CB4()
{
}

void sub_1C91CC0()
{
}

void sub_1C91CD0()
{
}

void sub_1C91CDC()
{
}

void sub_1C91CEC()
{
}

void sub_1C91CF8()
{
}

void sub_1C91D08()
{
}

void sub_1C91D14()
{
}

void sub_1C91D24()
{
}

void sub_1C91D30()
{
}

void sub_1C91D40()
{
}

void sub_1C91D4C()
{
}

void sub_1C91D5C()
{
}

void sub_1C91D68()
{
}

void sub_1C91D78()
{
}

void sub_1C91D84()
{
}

void sub_1C91D94()
{
}

void sub_1C91DA0()
{
}

void sub_1C91DB0()
{
}

void sub_1C91DBC()
{
}

void sub_1C91DCC()
{
}

void sub_1C91DD8()
{
}

void sub_1C91DE8()
{
}

void sub_1C91DF4()
{
}

void sub_1C91E04()
{
}

void sub_1C91E10()
{
}

void sub_1C91E20()
{
}

void sub_1C91E2C()
{
}

void sub_1C91E3C()
{
}

void sub_1C91E48()
{
}

void sub_1C91E58()
{
}

void sub_1C91E64()
{
}

void sub_1C91E74()
{
}

void sub_1C91E80()
{
}

void sub_1C91E90()
{
}

void sub_1C91E9C()
{
}

void sub_1C91EAC()
{
}

void sub_1C91EB8()
{
}

void sub_1C91EC8()
{
}

void sub_1C91ED4()
{
}

void sub_1C91EE4()
{
}

void sub_1C91EF0()
{
}

void sub_1C91F00()
{
}

void sub_1C91F0C()
{
}

void sub_1C91F1C()
{
}

void sub_1C91F28()
{
}

void sub_1C91F38()
{
}

void sub_1C91F44()
{
}

void sub_1C91F54()
{
}

void sub_1C91F60()
{
}

void sub_1C91F70()
{
}

void sub_1C91F7C()
{
}

void sub_1C91F8C()
{
}

void sub_1C91F98()
{
}

void sub_1C91FA8()
{
}

void sub_1C91FB4()
{
}

void sub_1C91FC4()
{
}

void sub_1C91FD0()
{
}

void sub_1C91FE0()
{
}

void sub_1C91FEC()
{
}

void sub_1C91FFC()
{
}

void sub_1C92008()
{
}

void sub_1C92018()
{
}

void sub_1C92024()
{
}

void sub_1C92034()
{
}

void sub_1C92040()
{
}

void sub_1C92050()
{
}

void sub_1C9205C()
{
}

void sub_1C9206C()
{
}

void sub_1C92078()
{
}

void sub_1C92088()
{
}

void sub_1C92094()
{
}

void sub_1C920A4()
{
}

void sub_1C920B0()
{
}

void sub_1C920C0()
{
}

void sub_1C920CC()
{
}

void sub_1C920DC()
{
}

void sub_1C920E8()
{
}

void sub_1C920F8()
{
}

void sub_1C92104()
{
}

void sub_1C92114()
{
}

void sub_1C92120()
{
}

void sub_1C92130()
{
}

void sub_1C9213C()
{
}

void sub_1C9214C()
{
}

void sub_1C92158()
{
}

void sub_1C92168()
{
}

void sub_1C92174()
{
}

void sub_1C92184()
{
}

void sub_1C92190()
{
}

void sub_1C921A0()
{
}

void sub_1C921AC()
{
}

void sub_1C921BC()
{
}

void sub_1C921C8()
{
}

void sub_1C921D8()
{
}

void sub_1C921E4()
{
}

void sub_1C921F0()
{
}

void sub_1C921FC()
{
}

void sub_1C92208()
{
}

void sub_1C92218()
{
}

void sub_1C92224()
{
}

void sub_1C92234()
{
}

void sub_1C92240()
{
}

void sub_1C92250()
{
}

void sub_1C9225C()
{
}

void sub_1C9226C()
{
}

void sub_1C92278()
{
}

void sub_1C92288()
{
}

void sub_1C92294()
{
}

void sub_1C922A4()
{
}

void sub_1C922B0()
{
}

void sub_1C922C0()
{
}

void sub_1C922CC()
{
}

void sub_1C922DC()
{
}

void sub_1C922E8()
{
}

void sub_1C922F8()
{
}

void sub_1C92304()
{
}

void sub_1C92314()
{
}

void sub_1C92320()
{
}

void sub_1C92330()
{
}

void sub_1C9233C()
{
}

void sub_1C9234C()
{
}

void sub_1C92358()
{
}

void sub_1C92368()
{
}

void sub_1C92374()
{
}

void sub_1C92384()
{
}

void sub_1C92390()
{
}

void sub_1C923A0()
{
}

void sub_1C923AC()
{
}

void sub_1C923BC()
{
}

void sub_1C923C8()
{
}

void sub_1C923D8()
{
}

void sub_1C923E4()
{
}

void sub_1C923F4()
{
}

void sub_1C92400()
{
}

void sub_1C92410()
{
}

void sub_1C9241C()
{
}

void sub_1C9242C()
{
}

void sub_1C92438()
{
}

void sub_1C92448()
{
}

void sub_1C92454()
{
}

void sub_1C92464()
{
}

void sub_1C92470()
{
}

void sub_1C92480()
{
}

void sub_1C9248C()
{
}

void sub_1C9249C()
{
}

void sub_1C924A8()
{
}

void sub_1C924B8()
{
}

void sub_1C924C4()
{
}

void sub_1C924D4()
{
}

void sub_1C924E0()
{
}

void sub_1C924F0()
{
}

void sub_1C924FC()
{
}

void sub_1C9250C()
{
}

void sub_1C92518()
{
}

void sub_1C92528()
{
}

void sub_1C92534()
{
}

void sub_1C92544()
{
}

void sub_1C92550()
{
}

void sub_1C92560()
{
}

void sub_1C9256C()
{
}

void sub_1C9257C()
{
}

void sub_1C92588()
{
}

void sub_1C92598()
{
}

void sub_1C925A4()
{
}

void sub_1C925B4()
{
}

void sub_1C925C0()
{
}

void sub_1C925D0()
{
}

void sub_1C925DC()
{
}

void sub_1C925EC()
{
}

void sub_1C925F8()
{
}

void sub_1C92608()
{
}

void sub_1C92614()
{
}

void sub_1C92624()
{
}

void sub_1C92630()
{
}

void sub_1C92640()
{
}

void sub_1C9264C()
{
}

void sub_1C9265C()
{
}

void sub_1C92668()
{
}

void sub_1C92678()
{
}

void sub_1C92684()
{
}

void sub_1C92694()
{
}

void sub_1C926A0()
{
}

void sub_1C926B0()
{
}

void sub_1C926BC()
{
}

void sub_1C926CC()
{
}

void sub_1C926D8()
{
}

void sub_1C926E8()
{
}

void sub_1C926F4()
{
}

void sub_1C92704()
{
}

void sub_1C92710()
{
}

void sub_1C92720()
{
}

void sub_1C9272C()
{
}

void sub_1C9273C()
{
}

void sub_1C92748()
{
}

void sub_1C92758()
{
}

void sub_1C92764()
{
}

void sub_1C92774()
{
}

void sub_1C92780()
{
}

void sub_1C92790()
{
}

void sub_1C9279C()
{
}

void sub_1C927AC()
{
}

void sub_1C927B8()
{
}

void sub_1C927C8()
{
}

void sub_1C927D4()
{
}

void sub_1C927E4()
{
}

void sub_1C927F0()
{
}

void sub_1C92800()
{
}

void sub_1C9280C()
{
}

void sub_1C9281C()
{
}

void sub_1C92828()
{
}

void sub_1C92838()
{
}

void sub_1C92844()
{
}

void sub_1C92854()
{
}

void sub_1C92860()
{
}

void sub_1C92870()
{
}

void sub_1C9287C()
{
}

void sub_1C9288C()
{
}

void sub_1C92898()
{
}

void sub_1C928A8()
{
}

void sub_1C928B4()
{
}

void sub_1C928C4()
{
}

void sub_1C928D0()
{
}

void sub_1C928E0()
{
}

void sub_1C928EC()
{
}

void sub_1C928FC()
{
}

void sub_1C92908()
{
}

void sub_1C92918()
{
}

void sub_1C92924()
{
}

void sub_1C92934()
{
}

void sub_1C92940()
{
}

void sub_1C92950()
{
}

void sub_1C9295C()
{
}

void sub_1C9296C()
{
}

void sub_1C92978()
{
}

void sub_1C92988()
{
}

void sub_1C92994()
{
}

void sub_1C929A4()
{
}

void sub_1C929B0()
{
}

void sub_1C929C0()
{
}

void sub_1C929CC()
{
}

void sub_1C929DC()
{
}

void sub_1C929E8()
{
}

void sub_1C929F8()
{
}

void sub_1C92A04()
{
}

void sub_1C92A14()
{
}

void sub_1C92A20()
{
}

void sub_1C92A30()
{
}

void sub_1C92A3C()
{
}

void sub_1C92A4C()
{
}

void sub_1C92A58()
{
}

void sub_1C92A68()
{
}

void sub_1C92A74()
{
}

void sub_1C92A84()
{
}

void sub_1C92A90()
{
}

void sub_1C92AA0()
{
}

void sub_1C92AAC()
{
}

void sub_1C92ABC()
{
}

void sub_1C92AC8()
{
}

void sub_1C92AD8()
{
}

void sub_1C92AE4()
{
}

void sub_1C92AF4()
{
}

void sub_1C92B00()
{
}

void sub_1C92B10()
{
}

void sub_1C92B1C()
{
}

void sub_1C92B2C()
{
}

void sub_1C92B38()
{
}

void sub_1C92B48()
{
}

void sub_1C92B54()
{
}

void sub_1C92B64()
{
}

void sub_1C92B70()
{
}

void sub_1C92B80()
{
}

void sub_1C92B8C()
{
}

void sub_1C92B9C()
{
}

void sub_1C92BA8()
{
}

void sub_1C92BB8()
{
}

void sub_1C92BC4()
{
}

void sub_1C92BD4()
{
}

void sub_1C92BE0()
{
}

void sub_1C92BF0()
{
}

void sub_1C92BFC()
{
}

void sub_1C92C0C()
{
}

void sub_1C92C18()
{
}

void sub_1C92C28()
{
}

void sub_1C92C34()
{
}

void sub_1C92C44()
{
}

void sub_1C92C50()
{
}

void sub_1C92C60()
{
}

void sub_1C92C6C()
{
}

void sub_1C92C7C()
{
}

void sub_1C92C88()
{
}

void sub_1C92C98()
{
}

void sub_1C92CA4()
{
}

void sub_1C92CB4()
{
}

void sub_1C92CC0()
{
}

void sub_1C92CD0()
{
}

void sub_1C92CDC()
{
}

void sub_1C92CEC()
{
}

void sub_1C92CF8()
{
}

void sub_1C92D08()
{
}

void sub_1C92D14()
{
}

void sub_1C92D24()
{
}

void sub_1C92D30()
{
}

void sub_1C92D3C()
{
}

void sub_1C92D50()
{
}

void sub_1C92D64()
{
}

void sub_1C92D6C()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2628368 = 0;
  qword_2628370 = 0;
  qword_2628378 = 0;
  qword_2628368 = (uint64_t)operator new(0x18uLL);
  qword_2628370 = qword_2628368;
  qword_2628378 = qword_2628368 + 24;
  qword_2628370 = (uint64_t)sub_18914E4((uint64_t)&qword_2628378, (long long *)__p, v4, (char *)qword_2628368);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2628380 = 0;
  qword_2628388 = 0;
  qword_2628390 = 0;
  qword_2628380 = (uint64_t)operator new(0x18uLL);
  qword_2628388 = qword_2628380;
  qword_2628390 = qword_2628380 + 24;
  qword_2628388 = (uint64_t)sub_18914E4((uint64_t)&qword_2628390, (long long *)__p, v4, (char *)qword_2628380);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2628398 = 0;
  qword_26283A0 = 0;
  qword_26283A8 = 0;
  qword_2628398 = (uint64_t)operator new(0x18uLL);
  qword_26283A0 = qword_2628398;
  qword_26283A8 = qword_2628398 + 24;
  qword_26283A0 = (uint64_t)sub_18914E4((uint64_t)&qword_26283A8, (long long *)__p, v4, (char *)qword_2628398);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1C882B8();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_26283C8, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26283F0, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_1C93428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

double sub_1C935D8(std::wstring *__str, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    int v7 = *(_DWORD **)a3;
    uint64_t v6 = *(void *)(a3 + 8);
    if (!v6) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v6 = *(unsigned __int8 *)(a3 + 23);
    int v7 = (_DWORD *)a3;
    if (!*(unsigned char *)(a3 + 23)) {
      goto LABEL_9;
    }
  }
  uint64_t v8 = 4 * v6;
  do
  {
    if (*v7 == 44) {
      _DWORD *v7 = 46;
    }
    ++v7;
    v8 -= 4;
  }
  while (v8);
LABEL_9:
  int v9 = std::stoi(__str, 0, 10);
  if (*(char *)(a3 + 23) < 0)
  {
    if (*(void *)(a3 + 8)) {
      goto LABEL_11;
    }
  }
  else if (*(unsigned char *)(a3 + 23))
  {
LABEL_11:
    double v10 = std::stod((const std::wstring *)a3, 0);
    goto LABEL_14;
  }
  double v10 = 0.0;
LABEL_14:
  if (*(char *)(a2 + 23) < 0)
  {
    if (*(void *)(a2 + 8)) {
      goto LABEL_16;
    }
LABEL_18:
    double v11 = 0.0;
    return (v10 / 3600.0 + v11 / 60.0 + fabs(std::stod(__str, 0))) * (double)((v9 >> 31) | 1);
  }
  if (!*(unsigned char *)(a2 + 23)) {
    goto LABEL_18;
  }
LABEL_16:
  double v11 = std::stod((const std::wstring *)a2, 0);
  return (v10 / 3600.0 + v11 / 60.0 + fabs(std::stod(__str, 0))) * (double)((v9 >> 31) | 1);
}

uint64_t sub_1C93710(int a1)
{
  unsigned int v1 = a1 - 8216;
  BOOL v2 = a1 == 180;
  if (a1 == 96) {
    BOOL v2 = 1;
  }
  BOOL v3 = v1 > 0x1D;
  int v4 = (1 << v1) & 0x2400000B;
  return !v3 && v4 != 0 || v2;
}

double sub_1C9374C(uint64_t a1, uint64_t a2, double a3)
{
  double v3 = a3;
  if (a3 <= 0.0) {
    return v3;
  }
  uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
  char v7 = v6;
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = *(void *)a2;
  }
  if ((v6 & 0x80u) == 0) {
    uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v11 = *(void *)(a2 + 8);
  }
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  if (v11 == 1)
  {
    if (!sub_1C946D8((uint64_t)&v16, (const __int32 *)&unk_2183A18, 1uLL)) {
      return -v3;
    }
    uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
    uint64_t v9 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v7 = *(unsigned char *)(a2 + 23);
  }
  if (v7 < 0)
  {
    uint64_t v12 = v8;
  }
  else
  {
    uint64_t v9 = a2;
    uint64_t v12 = v6;
  }
  uint64_t v16 = v9;
  uint64_t v17 = v12;
  if (v12 == 1)
  {
    if (sub_1C946D8((uint64_t)&v16, (const __int32 *)&unk_2183A20, 1uLL))
    {
      uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
      uint64_t v8 = *(void *)(a2 + 8);
      char v7 = *(unsigned char *)(a2 + 23);
      goto LABEL_17;
    }
    return -v3;
  }
LABEL_17:
  if (v7 < 0) {
    uint64_t v6 = v8;
  }
  if (!v6)
  {
    uint64_t v13 = *(unsigned __int8 *)(a1 + 23);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = *(void *)a1;
    }
    if ((v13 & 0x80u) != 0) {
      uint64_t v13 = *(void *)(a1 + 8);
    }
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    if (v13 == 1 && !sub_1C946D8((uint64_t)&v16, (const __int32 *)&unk_2183A18, 1uLL)) {
      return -v3;
    }
    if (sub_1C9387C((uint64_t *)a1, (__int32 *)&unk_2183A20)) {
      return -v3;
    }
  }
  return v3;
}

BOOL sub_1C9387C(uint64_t *a1, __int32 *a2)
{
  int v3 = *((char *)a1 + 23);
  if (v3 >= 0) {
    int v4 = a1;
  }
  else {
    int v4 = (uint64_t *)*a1;
  }
  if (v3 >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = a1[1];
  }
  v7[0] = v4;
  v7[1] = v5;
  return v5 == wcslen(a2) && sub_1C946D8((uint64_t)v7, a2, v5) == 0;
}

double sub_1C938F8(uint64_t a1, uint64_t a2, double a3)
{
  double v3 = a3;
  if (a3 <= 0.0) {
    return v3;
  }
  uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
  char v7 = v6;
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v10 = a2;
  }
  else {
    uint64_t v10 = *(void *)a2;
  }
  if ((v6 & 0x80u) == 0) {
    uint64_t v11 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v11 = *(void *)(a2 + 8);
  }
  uint64_t v16 = v10;
  uint64_t v17 = v11;
  if (v11 == 1)
  {
    if (!sub_1C946D8((uint64_t)&v16, (const __int32 *)&unk_2183A28, 1uLL)) {
      return -v3;
    }
    uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
    uint64_t v9 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    char v7 = *(unsigned char *)(a2 + 23);
  }
  if (v7 < 0)
  {
    uint64_t v12 = v8;
  }
  else
  {
    uint64_t v9 = a2;
    uint64_t v12 = v6;
  }
  uint64_t v16 = v9;
  uint64_t v17 = v12;
  if (v12 == 1)
  {
    if (sub_1C946D8((uint64_t)&v16, (const __int32 *)&unk_2183A30, 1uLL))
    {
      uint64_t v6 = *(unsigned __int8 *)(a2 + 23);
      uint64_t v8 = *(void *)(a2 + 8);
      char v7 = *(unsigned char *)(a2 + 23);
      goto LABEL_17;
    }
    return -v3;
  }
LABEL_17:
  if (v7 < 0) {
    uint64_t v6 = v8;
  }
  if (!v6)
  {
    uint64_t v13 = *(unsigned __int8 *)(a1 + 23);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = a1;
    }
    else {
      uint64_t v14 = *(void *)a1;
    }
    if ((v13 & 0x80u) != 0) {
      uint64_t v13 = *(void *)(a1 + 8);
    }
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    if (v13 == 1 && !sub_1C946D8((uint64_t)&v16, (const __int32 *)&unk_2183A28, 1uLL)) {
      return -v3;
    }
    if (sub_1C9387C((uint64_t *)a1, (__int32 *)&unk_2183A30)) {
      return -v3;
    }
  }
  return v3;
}

void sub_1C93A28()
{
}

void sub_1C943CC(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,void *__p,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,std::locale a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a2)
  {
    if (__p) {
      operator delete(__p);
    }
    sub_1C9472C(&a58);
    if (a71 < 0) {
      operator delete(a66);
    }
    if (a72)
    {
      a73 = (uint64_t)a72;
      operator delete(a72);
    }
    sub_1C9472C((std::locale *)&STACK[0x228]);
    if (SLOBYTE(STACK[0x27F]) < 0) {
      operator delete((void *)STACK[0x268]);
    }
    sub_1C5B954((uint64_t)&STACK[0x3B8]);
    if (a14 < 0) {
      operator delete(a9);
    }
    if (a21 < 0) {
      operator delete(a16);
    }
    sub_1C5B954((uint64_t)&STACK[0x2F8]);
    __cxa_begin_catch(a1);
    *char v73 = 0;
    v73[40] = 0;
    __cxa_end_catch();
    JUMPOUT(0x1C94390);
  }
  _Unwind_Resume(a1);
}

void sub_1C94610()
{
}

void sub_1C946B4()
{
}

uint64_t sub_1C946D8(uint64_t a1, const __int32 *a2, size_t a3)
{
  size_t v3 = a3;
  size_t v4 = *(void *)(a1 + 8);
  if (a3 >= v4) {
    a3 = *(void *)(a1 + 8);
  }
  if (a3)
  {
    uint64_t result = wmemcmp(*(const __int32 **)a1, a2, a3);
    if (result) {
      return result;
    }
    size_t v4 = *(void *)(a1 + 8);
  }
  BOOL v7 = v4 == v3;
  if (v4 < v3) {
    unsigned int v8 = -1;
  }
  else {
    unsigned int v8 = 1;
  }
  if (v7) {
    return 0;
  }
  else {
    return v8;
  }
}

void sub_1C9472C(std::locale *this)
{
  locale = (std::__shared_weak_count *)this[6].__locale_;
  if (locale) {
    sub_20A69F0(locale);
  }

  std::locale::~locale(this);
}

void sub_1C9476C(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, std::wstring *a4@<X8>)
{
  *(void *)(a1 + 184) = 0;
  if (!*(void *)(a1 + 48)) {
    goto LABEL_23;
  }
  BOOL v7 = a2;
  sub_1C94BA8(a4, 2 * ((char *)a3 - (char *)a2), 0);
  if (a3 != v7)
  {
    if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::wstring::size_type v8 = 4;
    }
    else {
      std::wstring::size_type v8 = (a4->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    std::wstring::resize(a4, v8, 0);
    long long v9 = *(_OWORD *)(a1 + 136);
    v30[4] = *(_OWORD *)(a1 + 120);
    uint64_t v30[5] = v9;
    long long v10 = *(_OWORD *)(a1 + 168);
    v30[6] = *(_OWORD *)(a1 + 152);
    v30[7] = v10;
    long long v11 = *(_OWORD *)(a1 + 72);
    v30[0] = *(_OWORD *)(a1 + 56);
    v30[1] = v11;
    __n128 v12 = *(__n128 *)(a1 + 88);
    long long v13 = *(_OWORD *)(a1 + 104);
    std::wstring::size_type size = HIBYTE(a4->__r_.__value_.__r.__words[2]);
    if ((size & 0x80u) == 0) {
      int v15 = (char *)a4;
    }
    else {
      int v15 = (char *)a4->__r_.__value_.__r.__words[0];
    }
    if ((size & 0x80u) != 0) {
      std::wstring::size_type size = a4->__r_.__value_.__l.__size_;
    }
    uint64_t v16 = &v15[4 * size];
    v30[2] = *(_OWORD *)(a1 + 88);
    void v30[3] = v13;
    do
    {
      int v17 = (*(uint64_t (**)(void, _OWORD *, int *, int *, int **, char *, char *, uint64_t *, __n128))(**(void **)(a1 + 48) + 32))(*(void *)(a1 + 48), v30, v7, a3, &v29, v15, v16, &v28, v12);
      BOOL v18 = v29 == v7;
      *(void *)(a1 + 184) += (char *)v29 - (char *)v7;
      if (v18) {
        goto LABEL_34;
      }
      if (v17 != 1)
      {
        if (v17)
        {
          if (v17 != 3)
          {
LABEL_34:
            if ((*((unsigned char *)&a4->__r_.__value_.__s + 23) & 0x80) != 0) {
              goto LABEL_35;
            }
            goto LABEL_23;
          }
          if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v25 = (char *)a4;
          }
          else {
            int v25 = (char *)a4->__r_.__value_.__r.__words[0];
          }
          std::wstring::resize(a4, (v15 - v25) >> 2, 0);
          sub_1C94A2C(a4, v7, a3);
        }
        else
        {
          if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            int v27 = a4;
          }
          else {
            int v27 = (std::wstring *)a4->__r_.__value_.__r.__words[0];
          }
          std::wstring::resize(a4, (v28 - (uint64_t)v27) >> 2, 0);
        }
        return;
      }
      if ((a4->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v19 = a4;
      }
      else {
        uint64_t v19 = (std::wstring *)a4->__r_.__value_.__r.__words[0];
      }
      uint64_t v20 = v28 - (void)v19;
      std::wstring::resize(a4, (v28 - (uint64_t)v19) >> 1, 0);
      std::wstring::size_type v21 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
      char v22 = v21;
      int v23 = (std::wstring *)a4->__r_.__value_.__r.__words[0];
      if ((v21 & 0x80u) == 0) {
        int v23 = a4;
      }
      int v15 = (char *)v23 + v20;
      if ((v21 & 0x80u) != 0) {
        std::wstring::size_type v21 = a4->__r_.__value_.__l.__size_;
      }
      uint64_t v16 = (char *)v23 + 4 * v21;
      BOOL v7 = v29;
    }
    while (v29 < a3);
    if ((v22 & 0x80) == 0) {
      goto LABEL_23;
    }
LABEL_35:
    operator delete(a4->__r_.__value_.__l.__data_);
LABEL_23:
    int v24 = (void **)(a1 + 24);
    if ((*(char *)(a1 + 47) & 0x80000000) == 0)
    {
      if (*(unsigned char *)(a1 + 47))
      {
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)v24;
        a4->__r_.__value_.__r.__words[2] = *(void *)(a1 + 40);
        return;
      }
LABEL_41:
      sub_1C5BE00("wstring_convert: from_bytes error");
    }
    unint64_t v26 = *(void *)(a1 + 32);
    if (!v26) {
      goto LABEL_41;
    }
    sub_1C9F9B0(a4, *v24, v26);
  }
}

void sub_1C949FC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::wstring *sub_1C94A2C(std::wstring *this, int *a2, int *a3)
{
  size_t v4 = a2;
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    uint64_t v7 = (char *)a3 - (char *)a2;
    if (a3 == a2) {
      return this;
    }
    std::wstring::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::wstring::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    long long v10 = (std::wstring *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    uint64_t v7 = (char *)a3 - (char *)a2;
    if (a3 == a2) {
      return this;
    }
    std::wstring::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::wstring::size_type v9 = 4;
    long long v10 = this;
  }
  unint64_t v12 = v7 >> 2;
  if (v10 > (std::wstring *)v4 || (char *)v10->__r_.__value_.__r.__words + 4 * size + 4 <= (char *)v4)
  {
    if (v9 - size < v12)
    {
      std::wstring::__grow_by(this, v9, size - v9 + v12, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(v6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    int v15 = this;
    if ((v6 & 0x80) != 0) {
      int v15 = (std::wstring *)this->__r_.__value_.__r.__words[0];
    }
    uint64_t v16 = (int *)((char *)v15 + 4 * size);
    while (v4 != a3)
    {
      int v17 = *v4++;
      *v16++ = v17;
    }
    *uint64_t v16 = 0;
    std::wstring::size_type v18 = v12 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v18;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v18 & 0x7F;
    }
  }
  else
  {
    sub_1C94C4C(__p, v4, a3, v12);
    if ((v21 & 0x80u) == 0) {
      long long v13 = __p;
    }
    else {
      long long v13 = (void **)__p[0];
    }
    if ((v21 & 0x80u) == 0) {
      std::wstring::size_type v14 = v21;
    }
    else {
      std::wstring::size_type v14 = (std::wstring::size_type)__p[1];
    }
    std::wstring::append(this, (const std::wstring::value_type *)v13, v14);
    if ((char)v21 < 0) {
      operator delete(__p[0]);
    }
  }
  return this;
}

void sub_1C94B8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1C94BA8(void *a1, unint64_t a2, int a3)
{
  size_t v3 = a1;
  if (a2 >= 0x3FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (a2 >= 5)
  {
    uint64_t v6 = (a2 & 0xFFFFFFFFFFFFFFFELL) + 2;
    if ((a2 | 1) != 5) {
      uint64_t v6 = a2 | 1;
    }
    a1 = sub_1896AFC((uint64_t)a1, v6 + 1);
    v3[1] = a2;
    v3[2] = v7 | 0x8000000000000000;
    *size_t v3 = a1;
  }
  else
  {
    *((unsigned char *)a1 + 23) = a2;
    if (!a2) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = 0;
  do
    *((_DWORD *)a1 + v8++) = a3;
  while (a2 != v8);
LABEL_10:
  *((_DWORD *)a1 + a2) = 0;
  return v3;
}

void *sub_1C94C4C(void *result, int *a2, int *a3, unint64_t a4)
{
  size_t v4 = result;
  if (a4 >= 0x3FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (a4 > 4)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFFELL) + 2;
    if ((a4 | 1) != 5) {
      uint64_t v8 = a4 | 1;
    }
    uint64_t result = sub_1896AFC((uint64_t)result, v8 + 1);
    v4[1] = a4;
    long long v4[2] = v9 | 0x8000000000000000;
    *size_t v4 = result;
    size_t v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    int v10 = *a2++;
    *(_DWORD *)size_t v4 = v10;
    size_t v4 = (void *)((char *)v4 + 4);
  }
  *(_DWORD *)size_t v4 = 0;
  return result;
}

void sub_1C94CEC(std::locale *a1, uint64_t a2, int a3)
{
  size_t v4 = sub_1C94D8C(a1);
  LODWORD(v4[3].__locale_) = a3;
  *(_OWORD *)((char *)&v4[3].__locale_ + 4) = 0u;
  *(_OWORD *)((char *)&v4[5].__locale_ + 4) = 0u;
  HIDWORD(v4[7].__locale_) = 0;
  sub_1C94DEC();
}

void sub_1C94D6C(_Unwind_Exception *a1)
{
  locale = (std::__shared_weak_count *)v1[6].__locale_;
  if (locale) {
    sub_20A69F0(locale);
  }
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

std::locale *sub_1C94D8C(std::locale *a1)
{
  BOOL v2 = std::locale::locale(a1);
  a1[1].__locale_ = (std::locale::__imp *)std::locale::use_facet(v2, &std::ctype<wchar_t>::id);
  a1[2].__locale_ = (std::locale::__imp *)std::locale::use_facet(a1, &std::collate<wchar_t>::id);
  return a1;
}

void sub_1C94DD8(_Unwind_Exception *a1)
{
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

void sub_1C94DEC()
{
}

void sub_1C94FAC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_1C94FE0(uint64_t a1, uint64_t a2)
{
  sub_1C955C8(&v2, a2);
}

int *sub_1C95028(uint64_t a1, int *a2, int *a3)
{
  uint64_t v6 = sub_1C958FC(a1, a2, a3);
  if (v6 == a2) {
    operator new();
  }
  if (v6 == a3) {
    return a3;
  }
  if (*v6 == 124)
  {
    if (v6 + 1 == sub_1C958FC(a1, v6 + 1, a3)) {
      operator new();
    }
    sub_1C95948();
  }
  return v6;
}

int *sub_1C95160(uint64_t a1, int *a2, int *a3)
{
  size_t v3 = a2;
  if (a2 == a3) {
    return a2;
  }
  size_t v4 = a3;
  if (*a2 == 94) {
    sub_1C96214();
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t v6 = v3;
      size_t v3 = (int *)sub_1C9CB54(a1, v3, v4);
    }
    while (v6 != v3);
    if (v6 != v4)
    {
      if (v6 + 1 == v4 && *v6 == 36) {
        sub_1C96298();
      }
      sub_1EFEC();
    }
  }
  return v4;
}

int *sub_1C95210(uint64_t a1, int *a2, int *a3)
{
  uint64_t v6 = sub_1C9D22C(a1, a2, a3);
  if (v6 == a2) {
LABEL_8:
  }
    sub_1EFEC();
  uint64_t v7 = v6;
  if (v6 == a3) {
    return a3;
  }
  if (*v6 == 124)
  {
    if (v6 + 1 != sub_1C9D22C(a1, v6 + 1, a3)) {
      sub_1C95948();
    }
    goto LABEL_8;
  }
  return v7;
}

__int32 *sub_1C952B4(uint64_t a1, __int32 *__s, __int32 *a3)
{
  uint64_t v6 = wmemchr(__s, 10, a3 - __s);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = a3;
  }
  if (v7 == __s) {
    operator new();
  }
  sub_1C95160(a1, __s, v7);
  int v10 = &v7[v7 != a3];
  if (v10 != a3)
  {
    uint64_t v8 = wmemchr(v10, 10, a3 - v10);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = a3;
    }
    if (v9 != v10)
    {
      sub_1C95160(a1, v10, v9);
      sub_1C95948();
    }
    operator new();
  }
  return a3;
}

__int32 *sub_1C95428(uint64_t a1, __int32 *__s, __int32 *a3)
{
  uint64_t v6 = wmemchr(__s, 10, a3 - __s);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = a3;
  }
  if (v7 == __s) {
    operator new();
  }
  sub_1C95210(a1, __s, v7);
  int v10 = &v7[v7 != a3];
  if (v10 != a3)
  {
    uint64_t v8 = wmemchr(v10, 10, a3 - v10);
    if (v8) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = a3;
    }
    if (v9 != v10)
    {
      sub_1C95210(a1, v10, v9);
      sub_1C95948();
    }
    operator new();
  }
  return a3;
}

void sub_1C955A0()
{
}

void sub_1C955B4(uint64_t a1, _DWORD *a2)
{
  *a2 = -1000;
}

void sub_1C955C8(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1C95630(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1C9FA90(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C9564C(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1C95684(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_1C956B4(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

void *sub_1C956F8(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C95764(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1C957F0(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_1C95804(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C95870(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

int *sub_1C958FC(uint64_t a1, int *a2, int *a3)
{
  do
  {
    size_t v5 = a2;
    a2 = sub_1C95A50(a1, a2, a3);
  }
  while (v5 != a2);
  return v5;
}

void sub_1C95948()
{
}

int *sub_1C95A50(uint64_t a1, int *a2, int *a3)
{
  uint64_t result = sub_1C95AF8(a1, a2, a3);
  if (result == a2)
  {
    uint64_t v7 = sub_1C95D10(a1, a2, a3);
    uint64_t result = a2;
    if (v7 != a2)
    {
      return (int *)sub_1C95F08(a1, (unsigned int *)v7, (unsigned int *)a3);
    }
  }
  return result;
}

int *sub_1C95AF8(uint64_t a1, int *a2, int *a3)
{
  if (a2 != a3)
  {
    int v6 = *a2;
    if (*a2 > 91)
    {
      if (v6 == 92)
      {
        if (a2 + 1 != a3)
        {
          int v9 = a2[1];
          if (v9 == 66 || v9 == 98) {
            sub_1C9631C();
          }
        }
      }
      else if (v6 == 94)
      {
        sub_1C96214();
      }
    }
    else
    {
      if (v6 == 36) {
        sub_1C96298();
      }
      if (v6 == 40 && a2 + 1 != a3 && a2[1] == 63 && a2 + 2 != a3)
      {
        int v7 = a2[2];
        if (v7 == 33)
        {
          sub_1C94D8C(v10);
          long long v11 = 0u;
          uint64_t v13 = 0;
          long long v12 = 0u;
          LODWORD(v11) = *(_DWORD *)(a1 + 24);
          sub_1C94DEC(v10, a2 + 3, a3);
          sub_1C963B0();
        }
        if (v7 == 61)
        {
          sub_1C94D8C(v10);
          long long v11 = 0u;
          uint64_t v13 = 0;
          long long v12 = 0u;
          LODWORD(v11) = *(_DWORD *)(a1 + 24);
          sub_1C94DEC(v10, a2 + 3, a3);
          sub_1C963B0();
        }
      }
    }
  }
  return a2;
}

void sub_1C95CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
}

int *sub_1C95D10(uint64_t a1, int *a2, int *a3)
{
  size_t v3 = a2;
  if (a2 != a3)
  {
    int v6 = *a2;
    if (*a2 <= 62)
    {
      if (v6 != 40)
      {
        if (v6 == 46) {
          operator new();
        }
        if ((v6 - 42) >= 2) {
          return sub_1C97C4C(a1, a2, a3);
        }
LABEL_28:
        sub_18618();
      }
      uint64_t v8 = a2 + 1;
      if (a2 + 1 != a3)
      {
        if (a2 + 2 != a3 && *v8 == 63 && a2[2] == 58)
        {
          ++*(_DWORD *)(a1 + 36);
          int v9 = (int *)sub_1C95028(a1, a2 + 3, a3);
          if (v9 != a3 && *v9 == 41)
          {
            --*(_DWORD *)(a1 + 36);
            return v9 + 1;
          }
        }
        else
        {
          sub_1C97B4C(a1);
          ++*(_DWORD *)(a1 + 36);
          int v10 = (int *)sub_1C95028(a1, v8, a3);
          if (v10 != a3)
          {
            long long v11 = v10;
            if (*v10 == 41)
            {
              sub_1C97BD0(a1);
              --*(_DWORD *)(a1 + 36);
              return v11 + 1;
            }
          }
        }
      }
      sub_16B78();
    }
    if (v6 > 91)
    {
      if (v6 == 92) {
        return sub_1C97994(a1, a2, a3);
      }
      if (v6 == 123) {
        goto LABEL_28;
      }
    }
    else
    {
      if (v6 == 91) {
        return sub_1C97A38(a1, a2, a3);
      }
      if (v6 == 63) {
        goto LABEL_28;
      }
    }
    return sub_1C97C4C(a1, a2, a3);
  }
  return v3;
}

unsigned int *sub_1C95F08(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  if (a2 == a3) {
    return a2;
  }
  int v5 = *a2;
  if ((int)*a2 <= 62)
  {
    if (v5 == 42 || (int v6 = a2, v5 == 43)) {
LABEL_18:
    }
      sub_1C9C524();
    return v6;
  }
  if (v5 == 63) {
    goto LABEL_18;
  }
  int v6 = a2;
  if (v5 == 123)
  {
    int v7 = a2 + 1;
    uint64_t v8 = sub_1C9C6B4(a1, a2 + 1, a3, &v13);
    if (v7 == v8) {
      goto LABEL_24;
    }
    if (v8 != a3)
    {
      if (*v8 != 44)
      {
        if (*v8 == 125) {
          goto LABEL_18;
        }
LABEL_24:
        sub_1E770();
      }
      int v9 = v8 + 1;
      if (v8 + 1 == a3) {
        goto LABEL_24;
      }
      if (*v9 == 125) {
        goto LABEL_18;
      }
      int v12 = -1;
      long long v11 = sub_1C9C6B4(a1, v9, a3, &v12);
      if (v9 != v11 && v11 != a3 && *v11 == 125)
      {
        if (v12 >= v13) {
          goto LABEL_18;
        }
        goto LABEL_24;
      }
    }
    sub_1E7C8();
  }
  return v6;
}

void sub_1C96214()
{
}

void sub_1C96298()
{
}

void sub_1C9631C()
{
}

void sub_1C963B0()
{
}

void sub_1C96434()
{
}

void *sub_1C96458(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C964C4(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1C96550(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 92))
  {
    if (*(void *)(a2 + 16) != *(void *)(a2 + 8) || (*(unsigned char *)(a2 + 88) & 1) != 0)
    {
LABEL_12:
      uint64_t v4 = 0;
      *(_DWORD *)a2 = -993;
      goto LABEL_13;
    }
  }
  else
  {
    if (!*(unsigned char *)(result + 16)) {
      goto LABEL_12;
    }
    int v2 = *(_DWORD *)(*(void *)(a2 + 16) - 4);
    if (v2 != 13 && v2 != 10) {
      goto LABEL_12;
    }
  }
  *(_DWORD *)a2 = -994;
  uint64_t v4 = *(void *)(result + 8);
LABEL_13:
  *(void *)(a2 + 80) = v4;
  return result;
}

void *sub_1C965B0(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C9661C(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1C966A8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(int **)(a2 + 16);
  if (v2 == *(int **)(a2 + 24) && (*(unsigned char *)(a2 + 88) & 2) == 0
    || *(unsigned char *)(result + 16) && ((int v3 = *v2, v3 != 13) ? (v4 = v3 == 10) : (v4 = 1), v4))
  {
    *(_DWORD *)a2 = -994;
    uint64_t v5 = *(void *)(result + 8);
  }
  else
  {
    uint64_t v5 = 0;
    *(_DWORD *)a2 = -993;
  }
  *(void *)(a2 + 80) = v5;
  return result;
}

std::locale *sub_1C966F8(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA560;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_1C96784(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA560;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_1C96830(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(unsigned int **)(a2 + 8);
  uint64_t v5 = *(unsigned int **)(a2 + 24);
  if (v4 == v5)
  {
LABEL_13:
    uint64_t result = 0;
    goto LABEL_19;
  }
  int v6 = *(unsigned int **)(a2 + 16);
  if (v6 == v5)
  {
    if ((*(unsigned char *)(a2 + 88) & 8) == 0)
    {
      unsigned int v8 = *(v5 - 1);
LABEL_11:
      if (v8 == 95) {
        uint64_t result = 1;
      }
      else {
        uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), 1280);
      }
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  if (v6 == v4)
  {
    int v7 = *(_DWORD *)(a2 + 88);
    if ((v7 & 0x80) == 0)
    {
      if ((v7 & 4) == 0)
      {
        unsigned int v8 = *v4;
        goto LABEL_11;
      }
      goto LABEL_13;
    }
  }
  uint64_t v9 = *v6;
  if (*(v6 - 1) == 95) {
    int v10 = 1;
  }
  else {
    int v10 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), 1280);
  }
  if (v9 == 95) {
    int v12 = 1;
  }
  else {
    int v12 = (*(uint64_t (**)(void, uint64_t, uint64_t))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), 1280, v9);
  }
  uint64_t result = v10 != v12;
LABEL_19:
  if (*(unsigned __int8 *)(a1 + 40) == result)
  {
    uint64_t v13 = 0;
    int v14 = -993;
  }
  else
  {
    uint64_t v13 = *(void *)(a1 + 8);
    int v14 = -994;
  }
  *(_DWORD *)a2 = v14;
  *(void *)(a2 + 80) = v13;
  return result;
}

uint64_t sub_1C9699C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, int a5)
{
  *(void *)a1 = off_24EA5A8;
  *(void *)(a1 + 8) = a4;
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 40);
  *(void *)(a1 + 64) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 80) = a5;
  *(unsigned char *)(a1 + 84) = a3;
  return a1;
}

std::locale *sub_1C96A2C(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA5A8;
  uint64_t v2 = a1 + 2;
  locale = (std::__shared_weak_count *)a1[8].__locale_;
  if (locale) {
    sub_20A69F0(locale);
  }
  std::locale::~locale(v2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  BOOL v4 = a1[1].__locale_;
  if (v4) {
    (*(void (**)(std::locale::__imp *))(*(void *)v4 + 8))(v4);
  }
  return a1;
}

void sub_1C96ACC(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA5A8;
  uint64_t v2 = a1 + 2;
  locale = (std::__shared_weak_count *)a1[8].__locale_;
  if (locale) {
    sub_20A69F0(locale);
  }
  std::locale::~locale(v2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  BOOL v4 = a1[1].__locale_;
  if (v4) {
    (*(void (**)(std::locale::__imp *))(*(void *)v4 + 8))(v4);
  }

  operator delete();
}

void sub_1C96B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  char v25 = 0;
  long long v26 = 0uLL;
  char v27 = 0;
  char v28 = 0;
  uint64_t v29 = 0;
  long long __p = 0;
  uint64_t v19 = 0;
  unint64_t v4 = (*(_DWORD *)(a1 + 44) + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v20 = 0;
  *(void *)&long long v21 = v5;
  *((void *)&v21 + 1) = v5;
  char v22 = 0;
  sub_1C971E4((char **)&__p, v4, &v21);
  uint64_t v23 = v6;
  uint64_t v24 = v6;
  char v25 = 0;
  long long v26 = v21;
  char v27 = v22;
  uint64_t v29 = v6;
  char v28 = 1;
  uint64_t v7 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a2 + 92)) {
    BOOL v8 = v7 == *(void *)(a2 + 8);
  }
  else {
    BOOL v8 = 0;
  }
  char v9 = v8;
  if (*(unsigned __int8 *)(a1 + 84) == sub_1C96D8C(a1 + 16, v7, *(void *)(a2 + 24), (uint64_t *)&__p, *(_DWORD *)(a2 + 88) & 0xFBF | 0x40u, v9))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
    int v10 = (char *)__p;
    goto LABEL_13;
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(a1 + 8);
  int v10 = (char *)__p;
  unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((v19 - (unsigned char *)__p) >> 3);
  if (v11 < 2)
  {
LABEL_13:
    if (!v10) {
      return;
    }
    goto LABEL_14;
  }
  int v12 = 0;
  int v13 = *(_DWORD *)(a1 + 80);
  uint64_t v14 = *(void *)(a2 + 32);
  unint64_t v15 = 1;
  do
  {
    uint64_t v16 = &v10[24 * v15];
    uint64_t v17 = v14 + 24 * (v13 + v12);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v16;
    *(unsigned char *)(v17 + 16) = v16[16];
    unint64_t v15 = (v12 + 2);
    ++v12;
  }
  while (v11 > v15);
LABEL_14:
  uint64_t v19 = v10;
  operator delete(v10);
}

void sub_1C96CF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1C96D18(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(a1 + 24) = a4;
  BOOL v8 = (_OWORD *)(a1 + 24);
  *(void *)(a1 + 32) = a4;
  *(unsigned char *)(a1 + 40) = 0;
  uint64_t result = sub_1C971E4((char **)a1, a2, (long long *)(a1 + 24));
  *(void *)(a1 + 48) = a3;
  *(void *)(a1 + 56) = a3;
  *(unsigned char *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 72) = *v8;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a1 + 40);
  if ((a5 & 1) == 0) {
    *(void *)(a1 + 104) = a3;
  }
  *(unsigned char *)(a1 + 96) = 1;
  return result;
}

uint64_t sub_1C96D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  int v45 = 0;
  char v46 = 0;
  unint64_t v47 = 0;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    *(void *)&long long v43 = a3;
    *((void *)&v43 + 1) = a3;
    char v44 = 0;
    *(_DWORD *)long long v40 = 0;
    memset(&v40[8], 0, 48);
    *(_OWORD *)long long __p = 0u;
    memset(v42, 0, 21);
    char v46 = (_OWORD *)sub_1C97398((uint64_t *)&v45, (uint64_t)v40);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (*(void *)&v40[32])
    {
      *(void *)&v40[40] = *(void *)&v40[32];
      operator delete(*(void **)&v40[32]);
    }
    char v38 = a4;
    int v13 = v46;
    *((_DWORD *)v46 - 24) = 0;
    *((void *)v13 - 11) = a2;
    *((void *)v13 - 10) = a2;
    *((void *)v13 - 9) = a3;
    sub_1C9735C((uint64_t)(v13 - 4), *(unsigned int *)(a1 + 28), &v43);
    sub_1139150((uint64_t)v46 - 40, *(unsigned int *)(a1 + 32));
    uint64_t v14 = v46;
    *((void *)v46 - 2) = v6;
    uint64_t v39 = a3;
    unint64_t v15 = (unint64_t)(a3 - a2) >> 2;
    *((_DWORD *)v14 - 2) = a5;
    *((unsigned char *)v14 - 4) = a6;
    unsigned int v16 = 1;
    while (2)
    {
      if ((v16 & 0xFFF) != 0 || (int)(v16 >> 12) < (int)v15)
      {
        std::wstring::size_type v18 = v14 - 1;
        uint64_t v17 = *((void *)v14 - 2);
        uint64_t v19 = v14 - 6;
        if (v17) {
          (*(void (**)(uint64_t, _OWORD *))(*(void *)v17 + 16))(v17, v14 - 6);
        }
        switch(*(_DWORD *)v19)
        {
          case 0xFFFFFC18:
            uint64_t v20 = *((void *)v14 - 10);
            if ((a5 & 0x20) != 0 && v20 == a2 || (a5 & 0x1000) != 0 && v20 != v39) {
              goto LABEL_16;
            }
            uint64_t v29 = *v38;
            *(void *)uint64_t v29 = a2;
            *(void *)(v29 + 8) = v20;
            *(unsigned char *)(v29 + 16) = 1;
            uint64_t v30 = *((void *)v14 - 8);
            uint64_t v31 = *((void *)v14 - 7) - v30;
            if (v31)
            {
              unint64_t v32 = 0xAAAAAAAAAAAAAAABLL * (v31 >> 3);
              int v33 = (unsigned char *)(v30 + 16);
              unsigned int v34 = 1;
              do
              {
                uint64_t v35 = v29 + 24 * v34;
                *(_OWORD *)uint64_t v35 = *((_OWORD *)v33 - 1);
                char v36 = *v33;
                v33 += 24;
                *(unsigned char *)(v35 + 16) = v36;
              }
              while (v32 > v34++);
            }
            uint64_t v27 = 1;
            goto LABEL_25;
          case 0xFFFFFC1D:
          case 0xFFFFFC1E:
          case 0xFFFFFC21:
            goto LABEL_23;
          case 0xFFFFFC1F:
LABEL_16:
            long long v21 = v46 - 6;
            sub_1C975EC((void *)v46 - 12);
            char v46 = v21;
            goto LABEL_23;
          case 0xFFFFFC20:
            long long v22 = *(v14 - 5);
            *(_OWORD *)long long v40 = *v19;
            *(_OWORD *)&v40[16] = v22;
            memset(&v40[32], 0, 24);
            sub_1C9781C(&v40[32], *((long long **)v14 - 8), *((long long **)v14 - 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v14 - 7) - *((void *)v14 - 8)) >> 3));
            __p[0] = 0;
            __p[1] = 0;
            v42[0] = 0;
            sub_1C9789C((char *)__p, *((long long **)v14 - 5), *((long long **)v14 - 4), (uint64_t)(*((void *)v14 - 4) - *((void *)v14 - 5)) >> 4);
            uint64_t v23 = *v18;
            *(void *)((char *)&v42[1] + 5) = *(void *)((char *)v14 - 11);
            v42[1] = v23;
            (*(void (**)(void, uint64_t, _OWORD *))(*(void *)*v18 + 24))(*v18, 1, v14 - 6);
            (*(void (**)(void, void, unsigned char *))(*(void *)v42[1] + 24))(v42[1], 0, v40);
            uint64_t v24 = v46;
            if ((unint64_t)v46 >= v47)
            {
              char v46 = (_OWORD *)sub_1C97398((uint64_t *)&v45, (uint64_t)v40);
              if (__p[0])
              {
                __p[1] = __p[0];
                operator delete(__p[0]);
              }
            }
            else
            {
              long long v25 = *(_OWORD *)&v40[16];
              *char v46 = *(_OWORD *)v40;
              v24[1] = v25;
              *((void *)v24 + 4) = 0;
              *((void *)v24 + 5) = 0;
              *((void *)v24 + 6) = 0;
              *((void *)v24 + 7) = 0;
              v24[2] = *(_OWORD *)&v40[32];
              *((void *)v24 + 6) = *(void *)&v40[48];
              memset(&v40[32], 0, 24);
              *((void *)v24 + 8) = 0;
              *((void *)v24 + 9) = 0;
              *(_OWORD *)((char *)v24 + 56) = *(_OWORD *)__p;
              *((void *)v24 + 9) = v42[0];
              __p[0] = 0;
              __p[1] = 0;
              v42[0] = 0;
              uint64_t v26 = v42[1];
              *(void *)((char *)v24 + 85) = *(void *)((char *)&v42[1] + 5);
              *((void *)v24 + 10) = v26;
              char v46 = v24 + 6;
            }
            if (*(void *)&v40[32])
            {
              *(void *)&v40[40] = *(void *)&v40[32];
              operator delete(*(void **)&v40[32]);
            }
LABEL_23:
            uint64_t v14 = v46;
            ++v16;
            if (v45 == v46) {
              goto LABEL_24;
            }
            continue;
          default:
            sub_17BF8();
        }
      }
      break;
    }
    sub_17BA0();
  }
LABEL_24:
  uint64_t v27 = 0;
LABEL_25:
  *(void *)long long v40 = &v45;
  sub_1C97910((void ***)v40);
  return v27;
}

void sub_1C97164(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  sub_17B5C(&a11);
  a11 = v16 - 112;
  sub_1C97910((void ***)&a11);
  _Unwind_Resume(a1);
}

char *sub_1C971E4(char **a1, unint64_t a2, long long *a3)
{
  uint64_t v6 = (uint64_t)a1[2];
  uint64_t result = *a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - (uint64_t)result) >> 3) >= a2)
  {
    unint64_t v15 = a1[1];
    unint64_t v16 = (v15 - result) / 24;
    if (v16 >= a2) {
      uint64_t v17 = a2;
    }
    else {
      uint64_t v17 = (v15 - result) / 24;
    }
    if (v17)
    {
      std::wstring::size_type v18 = result;
      do
      {
        *(_OWORD *)std::wstring::size_type v18 = *a3;
        v18[16] = *((unsigned char *)a3 + 16);
        v18 += 24;
        --v17;
      }
      while (v17);
    }
    if (a2 <= v16)
    {
      a1[1] = &result[24 * a2];
    }
    else
    {
      uint64_t v19 = &v15[24 * (a2 - v16)];
      uint64_t v20 = 24 * a2 - 24 * v16;
      do
      {
        long long v21 = *a3;
        *((void *)v15 + 2) = *((void *)a3 + 2);
        *(_OWORD *)unint64_t v15 = v21;
        v15 += 24;
        v20 -= 24;
      }
      while (v20);
      a1[1] = v19;
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v6 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
    uint64_t v9 = 2 * v8;
    if (2 * v8 <= a2) {
      uint64_t v9 = a2;
    }
    if (v8 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v9;
    }
    uint64_t result = sub_112E848(a1, v10);
    unint64_t v11 = a1[1];
    int v12 = &v11[24 * a2];
    uint64_t v13 = 24 * a2;
    do
    {
      long long v14 = *a3;
      *((void *)v11 + 2) = *((void *)a3 + 2);
      *(_OWORD *)unint64_t v11 = v14;
      v11 += 24;
      v13 -= 24;
    }
    while (v13);
    a1[1] = v12;
  }
  return result;
}

void sub_1C9735C(uint64_t a1, unint64_t a2, long long *a3)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  BOOL v4 = a2 >= v3;
  unint64_t v5 = a2 - v3;
  if (v5 != 0 && v4)
  {
    sub_1C97694((void **)a1, v5, a3);
  }
  else if (!v4)
  {
    *(void *)(a1 + 8) = *(void *)a1 + 24 * a2;
  }
}

uint64_t sub_1C97398(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 5);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 5);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x155555555555555) {
    unint64_t v9 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  v16[4] = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_1978BAC(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  unint64_t v11 = &v10[96 * v4];
  v16[0] = v10;
  v16[1] = v11;
  void v16[3] = &v10[96 * v9];
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v11 = *(_OWORD *)a2;
  *((_OWORD *)v11 + 1) = v12;
  *((void *)v11 + 5) = 0;
  *((void *)v11 + 6) = 0;
  *((void *)v11 + 4) = 0;
  *((_OWORD *)v11 + 2) = *(_OWORD *)(a2 + 32);
  *((void *)v11 + 6) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *((void *)v11 + 7) = 0;
  *((void *)v11 + 8) = 0;
  *((void *)v11 + 9) = 0;
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(a2 + 56);
  *((void *)v11 + 9) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(v11 + 85) = *(void *)(a2 + 85);
  *((void *)v11 + 10) = v13;
  v16[2] = v11 + 96;
  sub_1C974E8(a1, v16);
  uint64_t v14 = a1[1];
  sub_1C97644((uint64_t)v16);
  return v14;
}

void sub_1C974D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1C97644((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1C974E8(uint64_t *a1, void *a2)
{
  sub_1C97560((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v4;
  uint64_t v5 = *a1;
  *a1 = v4;
  a2[1] = v5;
  uint64_t v6 = a1[1];
  a1[1] = a2[2];
  a2[2] = v6;
  uint64_t v7 = a1[2];
  a1[2] = a2[3];
  a2[3] = v7;
  *a2 = a2[1];
}

__n128 sub_1C97560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 != a5)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a7 + v7;
      uint64_t v9 = a3 + v7;
      long long v10 = *(_OWORD *)(a3 + v7 - 80);
      *(_OWORD *)(v8 - 96) = *(_OWORD *)(a3 + v7 - 96);
      *(_OWORD *)(v8 - 80) = v10;
      *(void *)(v8 - 56) = 0;
      *(void *)(v8 - 48) = 0;
      *(void *)(v8 - 64) = 0;
      *(_OWORD *)(v8 - 64) = *(_OWORD *)(a3 + v7 - 64);
      *(void *)(v8 - 48) = *(void *)(a3 + v7 - 48);
      *(void *)(v9 - 64) = 0;
      *(void *)(v9 - 56) = 0;
      *(void *)(v9 - 48) = 0;
      *(void *)(v8 - 40) = 0;
      *(void *)(v8 - 32) = 0;
      *(void *)(v8 - 24) = 0;
      __n128 result = *(__n128 *)(a3 + v7 - 40);
      *(__n128 *)(v8 - 40) = result;
      *(void *)(v8 - 24) = *(void *)(a3 + v7 - 24);
      *(void *)(v9 - 40) = 0;
      *(void *)(v9 - 32) = 0;
      *(void *)(v9 - 24) = 0;
      uint64_t v12 = *(void *)(a3 + v7 - 16);
      *(void *)(v8 - 11) = *(void *)(a3 + v7 - 11);
      *(void *)(v8 - 16) = v12;
      v7 -= 96;
    }
    while (a3 + v7 != a5);
  }
  return result;
}

void sub_1C975EC(void *a1)
{
  uint64_t v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }
}

uint64_t sub_1C97644(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 96;
    sub_1C975EC((void *)(i - 96));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1C97694(void **a1, unint64_t a2, long long *a3)
{
  uint64_t v8 = a1[2];
  uint64_t v6 = (uint64_t)(a1 + 2);
  uint64_t v7 = v8;
  uint64_t v9 = *(void **)(v6 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (unsigned char *)v9) >> 3) >= a2)
  {
    if (a2)
    {
      unint64_t v15 = &v9[3 * a2];
      uint64_t v16 = 24 * a2;
      do
      {
        long long v17 = *a3;
        void v9[2] = *((void *)a3 + 2);
        *(_OWORD *)uint64_t v9 = v17;
        v9 += 3;
        v16 -= 24;
      }
      while (v16);
      uint64_t v9 = v15;
    }
    a1[1] = v9;
  }
  else
  {
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (((char *)v9 - (unsigned char *)*a1) >> 3);
    unint64_t v11 = v10 + a2;
    if (v10 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (unsigned char *)*a1) >> 3);
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x555555555555555) {
      unint64_t v13 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v13 = v11;
    }
    if (v13) {
      uint64_t v14 = (char *)sub_112C518(v6, v13);
    }
    else {
      uint64_t v14 = 0;
    }
    std::wstring::size_type v18 = &v14[24 * v10];
    uint64_t v19 = &v18[24 * a2];
    uint64_t v20 = 24 * a2;
    long long v21 = v18;
    do
    {
      long long v22 = *a3;
      *((void *)v21 + 2) = *((void *)a3 + 2);
      *(_OWORD *)long long v21 = v22;
      v21 += 24;
      v20 -= 24;
    }
    while (v20);
    uint64_t v23 = &v14[24 * v13];
    long long v25 = (char *)*a1;
    uint64_t v24 = (char *)a1[1];
    if (v24 != *a1)
    {
      do
      {
        long long v26 = *(_OWORD *)(v24 - 24);
        *((void *)v18 - 1) = *((void *)v24 - 1);
        *(_OWORD *)(v18 - 24) = v26;
        v18 -= 24;
        v24 -= 24;
      }
      while (v24 != v25);
      uint64_t v24 = (char *)*a1;
    }
    *a1 = v18;
    a1[1] = v19;
    a1[2] = v23;
    if (v24)
    {
      operator delete(v24);
    }
  }
}

char *sub_1C9781C(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    __n128 result = sub_112E848(result, a4);
    uint64_t v7 = *((void *)v6 + 1);
    while (a2 != a3)
    {
      long long v8 = *a2;
      *(void *)(v7 + 16) = *((void *)a2 + 2);
      *(_OWORD *)uint64_t v7 = v8;
      v7 += 24;
      a2 = (long long *)((char *)a2 + 24);
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_1C97880(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1C9789C(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    __n128 result = sub_112DF28(result, a4);
    uint64_t v7 = (_OWORD *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      long long v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_1C978F4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C97910(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 12;
        sub_1C975EC(v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

int *sub_1C97994(uint64_t a1, int *a2, int *a3)
{
  if (a2 == a3 || *a2 != 92) {
    return a2;
  }
  uint64_t v5 = a2 + 1;
  if (a2 + 1 == a3) {
    sub_1894C();
  }
  __n128 result = sub_1C97DB0(a1, a2 + 1, a3);
  if (v5 == result)
  {
    __n128 result = sub_1C97E68(a1, a2 + 1, a3);
    if (v5 == result)
    {
      __n128 result = (int *)sub_1C97F38(a1, a2 + 1, (unsigned int *)a3, 0);
      if (v5 == result) {
        return a2;
      }
    }
  }
  return result;
}

_DWORD *sub_1C97A38(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  if (a2 != a3 && *a2 == 91)
  {
    if (a2 + 1 != a3) {
      sub_1C99238();
    }
    sub_1B95C();
  }
  return a2;
}

uint64_t sub_1C97B4C(uint64_t result)
{
  if ((*(unsigned char *)(result + 24) & 2) == 0) {
    operator new();
  }
  return result;
}

uint64_t sub_1C97BD0(uint64_t result)
{
  if ((*(unsigned char *)(result + 24) & 2) == 0) {
    operator new();
  }
  return result;
}

int *sub_1C97C4C(uint64_t a1, int *a2, int *a3)
{
  if (a2 != a3)
  {
    int v4 = *a2;
    BOOL v5 = (v4 - 36) > 0x3A || ((1 << (v4 - 36)) & 0x7800000080004F1) == 0;
    if (v5 && (v4 - 123) >= 3) {
      sub_1C98478(a1);
    }
  }
  return a2;
}

void *sub_1C97CB8(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C97D24(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

int *sub_1C97DB0(uint64_t a1, int *a2, int *a3)
{
  if (a2 != a3)
  {
    int v4 = *a2;
    unsigned int v5 = *a2 - 48;
    if (v4 == 48) {
      sub_1C98478(a1);
    }
    if ((v4 - 49) <= 8)
    {
      uint64_t v6 = a2 + 1;
      if (v6 == a3) {
        goto LABEL_10;
      }
      do
      {
        int v7 = *v6;
        if ((*v6 - 48) > 9) {
          break;
        }
        if (v5 >= 0x19999999) {
          goto LABEL_13;
        }
        ++v6;
        unsigned int v5 = v7 + 10 * v5 - 48;
      }
      while (v6 != a3);
      if (v5)
      {
LABEL_10:
        if (v5 <= *(_DWORD *)(a1 + 28)) {
          sub_1C985B8(a1);
        }
      }
LABEL_13:
      sub_193B4();
    }
  }
  return a2;
}

int *sub_1C97E68(uint64_t a1, int *a2, int *a3)
{
  if (a2 == a3) {
    return a2;
  }
  int v3 = *a2;
  if (*a2 > 99)
  {
    if (v3 == 119) {
      goto LABEL_12;
    }
    if (v3 == 115) {
LABEL_13:
    }
      sub_1C99238();
    if (v3 != 100) {
      return a2;
    }
LABEL_10:
    sub_1C99238();
  }
  switch(v3)
  {
    case 'D':
      goto LABEL_10;
    case 'S':
      goto LABEL_13;
    case 'W':
LABEL_12:
      sub_1C99238();
  }
  return a2;
}

unsigned int *sub_1C97F38(uint64_t a1, int *a2, unsigned int *a3, uint64_t **a4)
{
  int v4 = (unsigned int *)a2;
  if (a2 == (int *)a3) {
    return v4;
  }
  unsigned int v5 = (uint64_t *)a4;
  uint64_t v7 = a1;
  int v8 = *a2;
  if (*a2 > 101)
  {
    int v9 = 0;
    switch(v8)
    {
      case 'n':
        if (!a4) {
          goto LABEL_77;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = (void *)(&def_332C + 1);
          unsigned int v5 = *a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v22 = 10;
        goto LABEL_88;
      case 'o':
      case 'p':
      case 'q':
      case 's':
      case 'w':
        goto LABEL_57;
      case 'r':
        if (!a4) {
          goto LABEL_77;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = (void *)(&def_332C + 1);
          unsigned int v5 = *a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v22 = 13;
        goto LABEL_88;
      case 't':
        if (!a4) {
          goto LABEL_77;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = (void *)(&def_332C + 1);
          unsigned int v5 = *a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v22 = 9;
        goto LABEL_88;
      case 'u':
        if (a2 + 1 == (int *)a3) {
          goto LABEL_91;
        }
        int v11 = (*(uint64_t (**)(void, void, void))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), a2[1], 0);
        unsigned __int8 v12 = v11;
        int v13 = -48;
        if ((v11 & 0xFFFFFFF8) == 0x30 || (v11 & 0xFFFFFFFE) == 0x38) {
          goto LABEL_34;
        }
        unsigned __int8 v12 = v11 | 0x20;
        if (((v11 | 0x20) - 97) >= 6u) {
          goto LABEL_91;
        }
        int v13 = -87;
LABEL_34:
        v4 += 2;
        if (v4 == a3) {
          goto LABEL_91;
        }
        int v14 = (*(uint64_t (**)(void, void, void))(**(void **)(v7 + 8) + 104))(*(void *)(v7 + 8), *v4, 0);
        int v15 = -48;
        if ((v14 & 0xFFFFFFF8) == 0x30 || (v14 & 0xFFFFFFFE) == 0x38) {
          goto LABEL_39;
        }
        LOBYTE(v14) = v14 | 0x20;
        if ((v14 - 97) >= 6u) {
          goto LABEL_91;
        }
        int v15 = -87;
LABEL_39:
        int v9 = ((v13 + v12) << 8) + 16 * (v15 + v14);
LABEL_40:
        if (v4 + 1 == a3) {
          goto LABEL_91;
        }
        int v16 = (*(uint64_t (**)(void, void, void))(**(void **)(v7 + 8) + 104))(*(void *)(v7 + 8), v4[1], 0);
        unsigned __int8 v17 = v16;
        int v18 = -48;
        if ((v16 & 0xFFFFFFF8) == 0x30 || (v16 & 0xFFFFFFFE) == 0x38) {
          goto LABEL_45;
        }
        unsigned __int8 v17 = v16 | 0x20;
        if (((v16 | 0x20) - 97) >= 6u) {
          goto LABEL_91;
        }
        int v18 = -87;
LABEL_45:
        if (v4 + 2 == a3) {
          goto LABEL_91;
        }
        int v19 = (*(uint64_t (**)(void, void, void))(**(void **)(v7 + 8) + 104))(*(void *)(v7 + 8), v4[2], 0);
        int v20 = -48;
        if ((v19 & 0xFFFFFFF8) == 0x30 || (v19 & 0xFFFFFFFE) == 0x38) {
          goto LABEL_50;
        }
        LOBYTE(v19) = v19 | 0x20;
        if ((v19 - 97) >= 6u) {
          goto LABEL_91;
        }
        int v20 = -87;
LABEL_50:
        if (!v5) {
          sub_1C98478(v7);
        }
        if (*((char *)v5 + 23) < 0)
        {
          v5[1] = 1;
          unsigned int v5 = (uint64_t *)*v5;
        }
        else
        {
          *((unsigned char *)v5 + 23) = 1;
        }
        *(_DWORD *)unsigned int v5 = v20 + v19 + 16 * (v18 + v17 + v9);
        *((_DWORD *)v5 + 1) = 0;
        v4 += 3;
        break;
      case 'v':
        if (!a4) {
          goto LABEL_77;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = (void *)(&def_332C + 1);
          unsigned int v5 = *a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v22 = 11;
        goto LABEL_88;
      case 'x':
        goto LABEL_40;
      default:
        if (v8 != 102) {
          goto LABEL_57;
        }
        if (!a4) {
          goto LABEL_77;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = (void *)(&def_332C + 1);
          unsigned int v5 = *a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v22 = 12;
LABEL_88:
        *unsigned int v5 = v22;
        return ++v4;
    }
    return v4;
  }
  if (v8 == 48)
  {
    if (a4)
    {
      if (*((char *)a4 + 23) < 0)
      {
        a4[1] = (void *)(&def_332C + 1);
        unsigned int v5 = *a4;
      }
      else
      {
        *((unsigned char *)a4 + 23) = 1;
      }
      *unsigned int v5 = 0;
      return ++v4;
    }
LABEL_77:
    sub_1C98478(a1);
  }
  if (v8 != 99)
  {
    if (v8 == 95) {
      goto LABEL_91;
    }
LABEL_57:
    if ((*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8), 1280)) {
LABEL_91:
    }
      sub_1894C();
    unsigned int v21 = *v4;
    if (v5)
    {
      if (*((char *)v5 + 23) < 0)
      {
        v5[1] = 1;
        unsigned int v5 = (uint64_t *)*v5;
      }
      else
      {
        *((unsigned char *)v5 + 23) = 1;
      }
      *(_DWORD *)unsigned int v5 = v21;
      *((_DWORD *)v5 + 1) = 0;
      return ++v4;
    }
    a1 = v7;
    goto LABEL_77;
  }
  if (a2 + 1 == (int *)a3) {
    goto LABEL_91;
  }
  int v10 = a2[1];
  if (v10 < 65 || v10 >= 0x5B && (v10 - 97) > 0x19) {
    goto LABEL_91;
  }
  if (!a4) {
    sub_1C98478(a1);
  }
  if (*((char *)a4 + 23) < 0)
  {
    a4[1] = (void *)(&def_332C + 1);
    unsigned int v5 = *a4;
  }
  else
  {
    *((unsigned char *)a4 + 23) = 1;
  }
  *(_DWORD *)unsigned int v5 = v10 & 0x1F;
  *((_DWORD *)v5 + 1) = 0;
  return (unsigned int *)(a2 + 2);
}

void sub_1C98478(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((v1 & 1) == 0)
  {
    if ((v1 & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

void sub_1C98594()
{
}

void sub_1C985B8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((v1 & 1) == 0)
  {
    if ((v1 & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

uint64_t sub_1C986E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = off_24EA638;
  *(void *)(a1 + 8) = a4;
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 40) = (*(uint64_t (**)(void, uint64_t))(**(void **)(a2 + 8) + 72))(*(void *)(a2 + 8), a3);
  return a1;
}

void sub_1C9877C(_Unwind_Exception *a1)
{
  std::locale::~locale(v2);
  *int v1 = off_24EA4A0;
  uint64_t v4 = v1[1];
  if (v4) {
    sub_1C9FA90(v4);
  }
  _Unwind_Resume(a1);
}

std::locale *sub_1C987BC(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA638;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_1C98848(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA638;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_1C988F4(uint64_t result, uint64_t a2)
{
  int v3 = *(unsigned int **)(a2 + 16);
  if (v3 == *(unsigned int **)(a2 + 24)
    || (uint64_t v4 = result,
        __n128 result = (*(uint64_t (**)(void, void))(**(void **)(result + 24) + 72))(*(void *)(result + 24), *v3), result != *(_DWORD *)(v4 + 40)))
  {
    uint64_t v5 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) += 4;
    uint64_t v5 = *(void *)(v4 + 8);
  }
  *(void *)(a2 + 80) = v5;
  return result;
}

std::locale *sub_1C98988(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA680;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_1C98A14(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA680;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_1C98AC0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(_DWORD **)(a2 + 16);
  if (v2 == *(_DWORD **)(a2 + 24) || *v2 != *(_DWORD *)(result + 40))
  {
    uint64_t v3 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    uint64_t v3 = *(void *)(result + 8);
  }
  *(void *)(a2 + 80) = v3;
  return result;
}

void *sub_1C98B08(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C98B74(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1C98C00(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(_DWORD **)(a2 + 16);
  if (v2 == *(_DWORD **)(a2 + 24) || *v2 != *(_DWORD *)(result + 16))
  {
    uint64_t v3 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    uint64_t v3 = *(void *)(result + 8);
  }
  *(void *)(a2 + 80) = v3;
  return result;
}

std::locale *sub_1C98C48(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA710;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_1C98CD4(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA710;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_1C98D80(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 40) - 1);
  if (*(unsigned char *)(v3 + 16))
  {
    uint64_t v4 = *(void *)(v3 + 8) - *(void *)v3;
    uint64_t v5 = v4 >> 2;
    uint64_t v6 = *(void *)(a2 + 16);
    if (v4 >> 2 <= (*(void *)(a2 + 24) - v6) >> 2)
    {
      uint64_t v8 = result;
      if (v4 < 1)
      {
LABEL_12:
        *(_DWORD *)a2 = -994;
        *(void *)(a2 + 16) = v6 + 4 * v5;
        uint64_t v7 = *(void *)(v8 + 8);
        goto LABEL_13;
      }
      uint64_t v9 = 0;
      if (v5 <= 1) {
        uint64_t v10 = 1;
      }
      else {
        uint64_t v10 = v4 >> 2;
      }
      uint64_t v11 = 4 * v10;
      while (1)
      {
        int v12 = (*(uint64_t (**)(void, void))(**(void **)(v8 + 24) + 72))(*(void *)(v8 + 24), *(unsigned int *)(*(void *)v3 + v9));
        __n128 result = (*(uint64_t (**)(void, void))(**(void **)(v8 + 24) + 72))(*(void *)(v8 + 24), *(unsigned int *)(*(void *)(a2 + 16) + v9));
        if (v12 != result) {
          break;
        }
        v9 += 4;
        if (v11 == v9)
        {
          uint64_t v6 = *(void *)(a2 + 16);
          goto LABEL_12;
        }
      }
    }
  }
  uint64_t v7 = 0;
  *(_DWORD *)a2 = -993;
LABEL_13:
  *(void *)(a2 + 80) = v7;
  return result;
}

std::locale *sub_1C98EB0(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA758;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_1C98F3C(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA758;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_1C98FE8(uint64_t result, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(result + 40) - 1;
  uint64_t v3 = *(void *)(a2 + 32);
  if (*(unsigned char *)(v3 + 24 * v2 + 16))
  {
    uint64_t v4 = (int **)(v3 + 24 * v2);
    uint64_t v5 = *v4;
    uint64_t v6 = (char *)v4[1] - (char *)*v4;
    uint64_t v7 = v6 >> 2;
    uint64_t v8 = *(void *)(a2 + 16);
    if (v6 >> 2 <= (*(void *)(a2 + 24) - v8) >> 2)
    {
      if (v6 < 1)
      {
LABEL_11:
        *(_DWORD *)a2 = -994;
        *(void *)(a2 + 16) = v8 + 4 * v7;
        uint64_t v9 = *(void *)(result + 8);
        goto LABEL_12;
      }
      if (v7 <= 1) {
        uint64_t v10 = 1;
      }
      else {
        uint64_t v10 = v6 >> 2;
      }
      uint64_t v11 = *(int **)(a2 + 16);
      while (1)
      {
        int v13 = *v5++;
        int v12 = v13;
        int v14 = *v11++;
        if (v12 != v14) {
          break;
        }
        if (!--v10) {
          goto LABEL_11;
        }
      }
    }
  }
  uint64_t v9 = 0;
  *(_DWORD *)a2 = -993;
LABEL_12:
  *(void *)(a2 + 80) = v9;
  return result;
}

void *sub_1C99080(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C990EC(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

unsigned int *sub_1C99178(unsigned int *result, uint64_t a2)
{
  unint64_t v2 = result[4];
  uint64_t v3 = *(void *)(a2 + 32);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a2 + 40) - v3) >> 3) < v2) {
    sub_193B4();
  }
  unsigned int v5 = v2 - 1;
  if (*(unsigned char *)(v3 + 24 * v5 + 16)
    && (uint64_t v6 = result,
        uint64_t v7 = v3 + 24 * v5,
        __n128 result = *(unsigned int **)v7,
        int64_t v8 = *(void *)(v7 + 8) - *(void *)v7,
        uint64_t v9 = v8 >> 2,
        uint64_t v10 = *(void *)(a2 + 16),
        v8 >> 2 <= (*(void *)(a2 + 24) - v10) >> 2)
    && (__n128 result = (unsigned int *)memcmp(result, *(const void **)(a2 + 16), v8), !result))
  {
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 16) = v10 + 4 * v9;
    uint64_t v11 = *((void *)v6 + 1);
  }
  else
  {
    uint64_t v11 = 0;
    *(_DWORD *)a2 = -993;
  }
  *(void *)(a2 + 80) = v11;
  return result;
}

void sub_1C99238()
{
}

void sub_1C992B0()
{
}

void sub_1C992D4(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  if (!*(unsigned char *)(a1 + 169))
  {
    unint64_t v12 = *(void *)(a1 + 56);
    int v13 = (void **)(a1 + 40);
    unsigned int v5 = *(char **)(a1 + 48);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v5 < v12) {
        goto LABEL_22;
      }
      uint64_t v6 = (char *)*v13;
      uint64_t v14 = (v5 - (unsigned char *)*v13) >> 2;
      if (!((unint64_t)(v14 + 1) >> 62))
      {
        unint64_t v15 = v12 - (void)v6;
        unint64_t v16 = (uint64_t)(v12 - (void)v6) >> 1;
        if (v16 <= v14 + 1) {
          unint64_t v16 = v14 + 1;
        }
        if (v15 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v16;
        }
        if (v17)
        {
          int v18 = (char *)sub_1896AFC(a1 + 56, v17);
          uint64_t v6 = *(char **)(a1 + 40);
          unsigned int v5 = *(char **)(a1 + 48);
        }
        else
        {
          int v18 = 0;
        }
        int v20 = &v18[4 * v14];
        unsigned int v21 = &v18[4 * v17];
        *(_DWORD *)int v20 = v2;
        int v19 = v20 + 4;
        while (v5 != v6)
        {
          int v28 = *((_DWORD *)v5 - 1);
          v5 -= 4;
          *((_DWORD *)v20 - 1) = v28;
          v20 -= 4;
        }
        goto LABEL_43;
      }
    }
    else
    {
      if ((unint64_t)v5 < v12) {
        goto LABEL_22;
      }
      uint64_t v6 = (char *)*v13;
      uint64_t v23 = (v5 - (unsigned char *)*v13) >> 2;
      if (!((unint64_t)(v23 + 1) >> 62))
      {
        unint64_t v24 = v12 - (void)v6;
        unint64_t v25 = (uint64_t)(v12 - (void)v6) >> 1;
        if (v25 <= v23 + 1) {
          unint64_t v25 = v23 + 1;
        }
        if (v24 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v26 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v26 = v25;
        }
        if (v26)
        {
          uint64_t v27 = (char *)sub_1896AFC(a1 + 56, v26);
          uint64_t v6 = *(char **)(a1 + 40);
          unsigned int v5 = *(char **)(a1 + 48);
        }
        else
        {
          uint64_t v27 = 0;
        }
        int v20 = &v27[4 * v23];
        unsigned int v21 = &v27[4 * v26];
        *(_DWORD *)int v20 = v2;
        int v19 = v20 + 4;
        while (v5 != v6)
        {
          int v29 = *((_DWORD *)v5 - 1);
          v5 -= 4;
          *((_DWORD *)v20 - 1) = v29;
          v20 -= 4;
        }
        goto LABEL_43;
      }
    }
LABEL_46:
    sub_2E00();
  }
  int v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), a2);
  unint64_t v4 = *(void *)(a1 + 56);
  unsigned int v5 = *(char **)(a1 + 48);
  if ((unint64_t)v5 < v4)
  {
LABEL_22:
    *(_DWORD *)unsigned int v5 = v2;
    int v19 = v5 + 4;
    goto LABEL_45;
  }
  uint64_t v6 = *(char **)(a1 + 40);
  uint64_t v7 = (v5 - v6) >> 2;
  if ((unint64_t)(v7 + 1) >> 62) {
    goto LABEL_46;
  }
  unint64_t v8 = v4 - (void)v6;
  unint64_t v9 = (uint64_t)(v4 - (void)v6) >> 1;
  if (v9 <= v7 + 1) {
    unint64_t v9 = v7 + 1;
  }
  if (v8 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v10 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v9;
  }
  if (v10)
  {
    uint64_t v11 = (char *)sub_1896AFC(a1 + 56, v10);
    uint64_t v6 = *(char **)(a1 + 40);
    unsigned int v5 = *(char **)(a1 + 48);
  }
  else
  {
    uint64_t v11 = 0;
  }
  int v20 = &v11[4 * v7];
  unsigned int v21 = &v11[4 * v10];
  *(_DWORD *)int v20 = v2;
  int v19 = v20 + 4;
  while (v5 != v6)
  {
    int v22 = *((_DWORD *)v5 - 1);
    v5 -= 4;
    *((_DWORD *)v20 - 1) = v22;
    v20 -= 4;
  }
LABEL_43:
  *(void *)(a1 + 40) = v20;
  *(void *)(a1 + 48) = v19;
  *(void *)(a1 + 56) = v21;
  if (v6) {
    operator delete(v6);
  }
LABEL_45:
  *(void *)(a1 + 48) = v19;
}

uint64_t sub_1C99504(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  *(void *)a1 = off_24EA7E8;
  *(void *)(a1 + 8) = a3;
  uint64_t v11 = (const std::locale *)(a1 + 16);
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(unsigned char *)(a1 + 168) = a4;
  *(unsigned char *)(a1 + 169) = a5;
  *(unsigned char *)(a1 + 170) = a6;
  std::locale::locale(&v16, v11);
  std::locale::name(&v17, &v16);
  std::string::size_type size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v17.__r_.__value_.__l.__size_;
  }
  if (size == 1)
  {
    int v13 = (std::string *)v17.__r_.__value_.__r.__words[0];
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v13 = &v17;
    }
    BOOL v14 = v13->__r_.__value_.__s.__data_[0] != 67;
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_9;
    }
  }
  else
  {
    BOOL v14 = 1;
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
LABEL_9:
    }
      operator delete(v17.__r_.__value_.__l.__data_);
  }
  std::locale::~locale(&v16);
  *(unsigned char *)(a1 + 171) = v14;
  return a1;
}

void sub_1C99650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10)
{
  std::locale::~locale((std::locale *)&a9);
  a10 = v10 + 17;
  sub_1891624((void ***)&a10);
  unint64_t v15 = (void *)v10[14];
  if (v15)
  {
    v10[15] = v15;
    operator delete(v15);
  }
  sub_1898078((void ***)&a10);
  std::locale v16 = (void *)v10[8];
  if (v16)
  {
    v10[9] = v16;
    operator delete(v16);
  }
  std::string v17 = *v13;
  if (*v13)
  {
    v10[6] = v17;
    operator delete(v17);
  }
  std::locale::~locale(v12);
  *unint64_t v10 = v11;
  uint64_t v18 = v10[1];
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  _Unwind_Resume(a1);
}

void sub_1C996EC(std::locale *a1)
{
  sub_1C99EB8(a1);

  operator delete();
}

void sub_1C99724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4 == v5)
  {
    uint64_t v16 = 0;
    int v14 = *(unsigned __int8 *)(a1 + 168);
    goto LABEL_123;
  }
  if (!*(unsigned char *)(a1 + 171) || v4 + 4 == v5) {
    goto LABEL_23;
  }
  uint64_t v6 = *(unsigned int *)(v4 + 4);
  __c[0] = *(_DWORD *)v4;
  __c[1] = v6;
  if (*(unsigned char *)(a1 + 169))
  {
    __c[0] = (*(uint64_t (**)(void))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24));
    __c[1] = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), v6);
  }
  sub_1C9A0C4(a1 + 16, __c, (int *)&v75, (uint64_t)&__p);
  if (v73 < 0)
  {
    size_t v17 = v72;
    operator delete(__p);
    if (v17) {
      goto LABEL_8;
    }
LABEL_23:
    int v14 = 0;
    uint64_t v16 = 1;
    goto LABEL_24;
  }
  if (!v73) {
    goto LABEL_23;
  }
LABEL_8:
  uint64_t v7 = *(int32x2_t **)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120) - (void)v7;
  if (v8)
  {
    unint64_t v9 = v8 >> 3;
    if (v9 <= 1) {
      unint64_t v9 = 1;
    }
    do
    {
      int32x2_t v10 = vceq_s32(*(int32x2_t *)__c, *v7);
      if (v10.i32[0] & v10.i32[1]) {
        goto LABEL_113;
      }
      ++v7;
    }
    while (--v9);
  }
  if (!*(unsigned char *)(a1 + 170) || *(void *)(a1 + 88) == *(void *)(a1 + 96))
  {
    int v14 = 0;
  }
  else
  {
    sub_1C99FA0(a1 + 16, __c, (int *)&v75);
    uint64_t v11 = *(void *)(a1 + 88);
    if (*(void *)(a1 + 96) == v11)
    {
LABEL_20:
      int v14 = 0;
      int v15 = 0;
    }
    else
    {
      uint64_t v12 = 0;
      unint64_t v13 = 0;
      while ((int)(sub_1C9A05C((uint64_t *)(v11 + v12), (const __int32 *)&__p) << 24) > 0xFFFFFF
           || (int)(sub_1C9A05C((uint64_t *)&__p, (const __int32 *)(*(void *)(a1 + 88) + v12 + 24)) << 24) >= 0x1000000)
      {
        ++v13;
        uint64_t v11 = *(void *)(a1 + 88);
        v12 += 48;
        if (v13 >= 0xAAAAAAAAAAAAAAABLL * ((*(void *)(a1 + 96) - v11) >> 4)) {
          goto LABEL_20;
        }
      }
      int v14 = 1;
      int v15 = 5;
    }
    if (v73 < 0) {
      operator delete(__p);
    }
    if (v14) {
      goto LABEL_105;
    }
  }
  if (*(void *)(a1 + 136) == *(void *)(a1 + 144)) {
    goto LABEL_107;
  }
  sub_1C9A420(a1 + 16, __c, (int *)&v75, (uint64_t)&__p);
  uint64_t v49 = *(void *)(a1 + 136);
  uint64_t v48 = *(void *)(a1 + 144);
  if (v48 == v49)
  {
LABEL_100:
    char v59 = 0;
    int v15 = 0;
    goto LABEL_102;
  }
  uint64_t v50 = 0;
  unint64_t v51 = 0;
  while (1)
  {
    long long v52 = (uint64_t *)(v49 + v50);
    p_p = __p;
    if (v73 < 0)
    {
      size_t v54 = v72;
    }
    else
    {
      p_p = &__p;
      size_t v54 = v73;
    }
    uint64_t v55 = *((unsigned __int8 *)v52 + 23);
    int v56 = (char)v55;
    uint64_t v57 = *v52;
    if ((v55 & 0x80u) != 0) {
      uint64_t v55 = v52[1];
    }
    long long v75 = p_p;
    size_t v76 = v54;
    if (v54 != v55) {
      goto LABEL_99;
    }
    char v58 = (const __int32 *)(v56 >= 0 ? v49 + v50 : v57);
    if (!sub_1C946D8((uint64_t)&v75, v58, v54)) {
      break;
    }
    uint64_t v49 = *(void *)(a1 + 136);
    uint64_t v48 = *(void *)(a1 + 144);
LABEL_99:
    ++v51;
    v50 += 24;
    if (v51 >= 0xAAAAAAAAAAAAAAABLL * ((v48 - v49) >> 3)) {
      goto LABEL_100;
    }
  }
  char v59 = 1;
  int v15 = 5;
  int v14 = 1;
LABEL_102:
  if (v73 < 0) {
    operator delete(__p);
  }
  if ((v59 & 1) == 0)
  {
LABEL_107:
    __int32 v60 = __c[0];
    unsigned int v61 = *(_DWORD *)(a1 + 160);
    if (((*(uint64_t (**)(void, void, void))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), v61, __c[0]) & 1) == 0&& (v60 != 95 || (v61 & 0x80) == 0)|| (__int32 v62 = __c[1], v63 = *(_DWORD *)(a1 + 160), ((*(uint64_t (**)(void, void, void))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), v63, __c[1]) & 1) == 0)&& (v62 != 95 || (v63 & 0x80) == 0))
    {
      __int32 v65 = __c[0];
      unsigned int v66 = *(_DWORD *)(a1 + 164);
      if ((*(uint64_t (**)(void, void, void))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), v66, __c[0]) & 1) != 0|| v65 == 95 && (v66 & 0x80) != 0|| (v67 = __c[1], v68 = *(_DWORD *)(a1 + 164), ((*(uint64_t (**)(void, void, void))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), v68, __c[1]))|| (int v64 = 1, v67 == 95) && (v68 & 0x80) != 0)
      {
        int v64 = v14;
      }
      goto LABEL_121;
    }
LABEL_113:
    int v64 = 1;
LABEL_121:
    int v14 = v64;
    goto LABEL_122;
  }
LABEL_105:
  if (v15)
  {
LABEL_122:
    uint64_t v16 = 2;
    goto LABEL_123;
  }
  uint64_t v16 = 2;
LABEL_24:
  uint64_t v18 = **(unsigned int **)(a2 + 16);
  __c[0] = **(_DWORD **)(a2 + 16);
  if (*(unsigned char *)(a1 + 169))
  {
    uint64_t v18 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), v18);
    __c[0] = v18;
  }
  int v19 = *(int **)(a1 + 40);
  uint64_t v20 = *(void *)(a1 + 48) - (void)v19;
  if (v20)
  {
    unint64_t v21 = v20 >> 2;
    if (v21 <= 1) {
      unint64_t v21 = 1;
    }
    do
    {
      int v22 = *v19++;
      if (v18 == v22) {
        goto LABEL_80;
      }
      --v21;
    }
    while (v21);
  }
  unsigned int v23 = *(_DWORD *)(a1 + 164);
  if (v23 || *(void *)(a1 + 64) != *(void *)(a1 + 72))
  {
    BOOL v24 = ((*(uint64_t (**)(void, void, uint64_t))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), *(unsigned int *)(a1 + 164), v18) & 1) != 0|| (v18 == 95) & (v23 >> 7);
    unint64_t v25 = *(__int32 **)(a1 + 72);
    unint64_t v26 = wmemchr(*(__int32 **)(a1 + 64), __c[0], ((uint64_t)v25 - *(void *)(a1 + 64)) >> 2);
    uint64_t v27 = v26 ? v26 : v25;
    if (!v24 && v27 == *(__int32 **)(a1 + 72))
    {
LABEL_80:
      int v14 = 1;
      goto LABEL_123;
    }
  }
  uint64_t v28 = *(void *)(a1 + 88);
  uint64_t v29 = *(void *)(a1 + 96);
  if (v28 != v29)
  {
    if (*(unsigned char *)(a1 + 170))
    {
      sub_1C99FA0(a1 + 16, __c, &__c[1]);
      uint64_t v28 = *(void *)(a1 + 88);
      uint64_t v29 = *(void *)(a1 + 96);
    }
    else
    {
      char v73 = 1;
      long long __p = (void *)__c[0];
    }
    if (v29 == v28)
    {
LABEL_51:
      char v32 = 0;
    }
    else
    {
      uint64_t v30 = 0;
      unint64_t v31 = 0;
      while ((int)(sub_1C9A05C((uint64_t *)(v28 + v30), (const __int32 *)&__p) << 24) > 0xFFFFFF
           || (int)(sub_1C9A05C((uint64_t *)&__p, (const __int32 *)(*(void *)(a1 + 88) + v30 + 24)) << 24) >= 0x1000000)
      {
        ++v31;
        uint64_t v28 = *(void *)(a1 + 88);
        v30 += 48;
        if (v31 >= 0xAAAAAAAAAAAAAAABLL * ((*(void *)(a1 + 96) - v28) >> 4)) {
          goto LABEL_51;
        }
      }
      char v32 = 1;
      int v14 = 1;
    }
    if (v73 < 0) {
      operator delete(__p);
    }
    if (v32) {
      goto LABEL_123;
    }
  }
  if (*(void *)(a1 + 136) == *(void *)(a1 + 144)) {
    goto LABEL_76;
  }
  sub_1C9A420(a1 + 16, __c, &__c[1], (uint64_t)&__p);
  uint64_t v34 = *(void *)(a1 + 136);
  uint64_t v33 = *(void *)(a1 + 144);
  if (v33 == v34)
  {
LABEL_71:
    char v44 = 0;
    goto LABEL_73;
  }
  uint64_t v35 = 0;
  unint64_t v36 = 0;
  while (2)
  {
    uint64_t v37 = v34 + v35;
    char v38 = __p;
    if (v73 < 0)
    {
      size_t v39 = v72;
    }
    else
    {
      char v38 = &__p;
      size_t v39 = v73;
    }
    uint64_t v40 = *(unsigned __int8 *)(v37 + 23);
    int v41 = (char)v40;
    long long v42 = *(const __int32 **)v37;
    if ((v40 & 0x80u) != 0) {
      uint64_t v40 = *(void *)(v37 + 8);
    }
    long long v75 = v38;
    size_t v76 = v39;
    if (v39 != v40)
    {
LABEL_70:
      ++v36;
      v35 += 24;
      if (v36 >= 0xAAAAAAAAAAAAAAABLL * ((v33 - v34) >> 3)) {
        goto LABEL_71;
      }
      continue;
    }
    break;
  }
  if (v41 >= 0) {
    long long v43 = (const __int32 *)(v34 + v35);
  }
  else {
    long long v43 = v42;
  }
  if (sub_1C946D8((uint64_t)&v75, v43, v39))
  {
    uint64_t v34 = *(void *)(a1 + 136);
    uint64_t v33 = *(void *)(a1 + 144);
    goto LABEL_70;
  }
  char v44 = 1;
  int v14 = 1;
LABEL_73:
  if (v73 < 0) {
    operator delete(__p);
  }
  if ((v44 & 1) == 0)
  {
LABEL_76:
    __int32 v45 = __c[0];
    unsigned int v46 = *(_DWORD *)(a1 + 160);
    if ((*(uint64_t (**)(void, void, void))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24), v46, __c[0]))goto LABEL_80; {
    int v47 = (v46 >> 7) & 1;
    }
    if (v45 != 95) {
      int v47 = 0;
    }
    if (v47 == 1) {
      goto LABEL_80;
    }
  }
LABEL_123:
  if (v14 == *(unsigned __int8 *)(a1 + 168))
  {
    uint64_t v69 = 0;
    int v70 = -993;
  }
  else
  {
    *(void *)(a2 + 16) += 4 * v16;
    uint64_t v69 = *(void *)(a1 + 8);
    int v70 = -995;
  }
  *(_DWORD *)a2 = v70;
  *(void *)(a2 + 80) = v69;
}

std::locale *sub_1C99EB8(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_24EA7E8;
  uint64_t v7 = a1 + 17;
  sub_1891624((void ***)&v7);
  locale = a1[14].__locale_;
  if (locale)
  {
    a1[15].__locale_ = locale;
    operator delete(locale);
  }
  uint64_t v7 = a1 + 11;
  sub_1898078((void ***)&v7);
  uint64_t v3 = a1[8].__locale_;
  if (v3)
  {
    a1[9].__locale_ = v3;
    operator delete(v3);
  }
  uint64_t v4 = a1[5].__locale_;
  if (v4)
  {
    a1[6].__locale_ = v4;
    operator delete(v4);
  }
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_24EA4A0;
  uint64_t v5 = a1[1].__locale_;
  if (v5) {
    (*(void (**)(std::locale::__imp *))(*(void *)v5 + 8))(v5);
  }
  return a1;
}

void sub_1C99FA0(uint64_t a1, int *a2, int *a3)
{
  sub_1C94C4C(__p, a2, a3, a3 - a2);
  unint64_t v4 = v7;
  if ((v7 & 0x80u) == 0) {
    uint64_t v5 = __p;
  }
  else {
    uint64_t v5 = (void **)__p[0];
  }
  if ((v7 & 0x80u) != 0) {
    unint64_t v4 = (unint64_t)__p[1];
  }
  (*(void (**)(void, void **, unint64_t))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v5, (unint64_t)v5 + 4 * v4);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C9A040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1C9A05C(uint64_t *a1, const __int32 *a2)
{
  uint64_t v2 = *((unsigned __int8 *)a1 + 23);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1;
  }
  else {
    uint64_t v3 = (uint64_t *)*a1;
  }
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = a1[1];
  }
  size_t v4 = *((void *)a2 + 1);
  if (*((char *)a2 + 23) >= 0)
  {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const __int32 **)a2;
    size_t v5 = v4;
  }
  v9[0] = v3;
  v9[1] = v2;
  int v6 = sub_1C946D8((uint64_t)v9, a2, v5);
  if (v6 < 0) {
    unsigned int v7 = -1;
  }
  else {
    unsigned int v7 = 1;
  }
  if (v6) {
    return v7;
  }
  else {
    return 0;
  }
}

void sub_1C9A0C4(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  p_p = &__p;
  sub_1C94C4C(&__p, a2, a3, a3 - a2);
  memset(&v18, 0, sizeof(v18));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::wstring::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::wstring::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::reserve(&v18, size);
  std::wstring::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  char v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  std::wstring::size_type v10 = __p.__r_.__value_.__l.__size_;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
  {
    std::wstring::size_type v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else
  {
    std::wstring::size_type v11 = __p.__r_.__value_.__l.__size_;
    p_p = (std::wstring *)__p.__r_.__value_.__r.__words[0];
  }
  if (!v11)
  {
LABEL_12:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    if (v9 < 0) {
      std::wstring::size_type v8 = v10;
    }
    if (!v8) {
      goto LABEL_27;
    }
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v13 = &v18;
    }
    else {
      unint64_t v13 = (std::string *)v18.__r_.__value_.__r.__words[0];
    }
    std::__get_collation_name(&v17, (const char *)v13);
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
    std::string v18 = v17;
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      std::wstring::size_type v14 = v18.__r_.__value_.__l.__size_;
      if (v18.__r_.__value_.__l.__size_)
      {
        int v15 = (std::string *)v18.__r_.__value_.__r.__words[0];
        goto LABEL_26;
      }
    }
    else
    {
      std::wstring::size_type v14 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
      if (*((unsigned char *)&v17.__r_.__value_.__s + 23))
      {
        int v15 = &v18;
LABEL_26:
        sub_1C9A350((std::wstring *)a4, (char *)v15, (char *)v15 + v14, v14);
        goto LABEL_27;
      }
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      if (__p.__r_.__value_.__l.__size_ >= 3) {
        goto LABEL_27;
      }
    }
    else if (HIBYTE(__p.__r_.__value_.__r.__words[2]) >= 3u)
    {
      goto LABEL_27;
    }
    (*(void (**)(std::string *__return_ptr))(**(void **)(a1 + 16) + 32))(&v17);
    if (*(char *)(a4 + 23) < 0) {
      operator delete(*(void **)a4);
    }
    *(std::string *)a4 = v17;
    int v16 = *(char *)(a4 + 23);
    if (v16 < 0)
    {
      if ((*(void *)(a4 + 8) & 0xFFFFFFFFFFFFFFFDLL) != 1)
      {
        **(_DWORD **)a4 = 0;
        *(void *)(a4 + 8) = 0;
        goto LABEL_27;
      }
    }
    else if ((v16 & 0xFD) != 1)
    {
      *(_DWORD *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
      goto LABEL_27;
    }
    std::wstring::operator=((std::wstring *)a4, &__p);
    goto LABEL_27;
  }
  uint64_t v12 = 4 * v11;
  while (p_p->__r_.__value_.__s.__data_[0] < 0x7Fu)
  {
    std::string::push_back(&v18, p_p->__r_.__value_.__s.__data_[0]);
    p_p = (std::wstring *)((char *)p_p + 4);
    v12 -= 4;
    if (!v12)
    {
      std::wstring::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      std::wstring::size_type v10 = __p.__r_.__value_.__l.__size_;
      char v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      goto LABEL_12;
    }
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
LABEL_27:
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1C9A300(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (*(char *)(v24 + 23) < 0) {
    operator delete(*(void **)v24);
  }
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C9A350(std::wstring *this, char *a2, char *a3, std::wstring::size_type a4)
{
  if ((SHIBYTE(this->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::wstring::size_type v8 = this;
    if (a4 <= 4) {
      goto LABEL_11;
    }
    std::wstring::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::wstring::size_type v10 = 4;
    goto LABEL_6;
  }
  unint64_t v11 = this->__r_.__value_.__r.__words[2];
  std::wstring::size_type v10 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
  if (v10 < a4)
  {
    std::wstring::size_type size = this->__r_.__value_.__l.__size_;
LABEL_6:
    std::wstring::__grow_by(this, v10, a4 - v10, size, 0, size, 0);
    this->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v12) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    goto LABEL_8;
  }
  unint64_t v12 = HIBYTE(v11);
LABEL_8:
  std::wstring::size_type v8 = this;
  if ((v12 & 0x80) != 0) {
    std::wstring::size_type v8 = (std::wstring *)this->__r_.__value_.__r.__words[0];
  }
LABEL_11:
  while (a2 != a3)
  {
    std::wstring::value_type v13 = *a2++;
    v8->__r_.__value_.__s.__data_[0] = v13;
    std::wstring::size_type v8 = (std::wstring *)((char *)v8 + 4);
  }
  v8->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    this->__r_.__value_.__l.__size_ = a4;
  }
  else {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = a4 & 0x7F;
  }
}

void sub_1C9A420(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C94C4C(__p, a2, a3, a3 - a2);
  unint64_t v6 = v12;
  if ((v12 & 0x80u) == 0) {
    unsigned int v7 = __p;
  }
  else {
    unsigned int v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) != 0) {
    unint64_t v6 = (unint64_t)__p[1];
  }
  (*(void (**)(void, void **, unint64_t))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v7, (unint64_t)v7 + 4 * v6);
  uint64_t v8 = *(unsigned __int8 *)(a4 + 23);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a4 + 8);
  }
  if (v8 != 1)
  {
    if (v8 == 3)
    {
      if (v9 >= 0) {
        std::wstring::size_type v10 = (_DWORD *)a4;
      }
      else {
        std::wstring::size_type v10 = *(_DWORD **)a4;
      }
      v10[2] = *v10;
    }
    else if (v9 < 0)
    {
      **(_DWORD **)a4 = 0;
      *(void *)(a4 + 8) = 0;
    }
    else
    {
      *(_DWORD *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
    }
  }
  if ((char)v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C9A518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

int *sub_1C9A534(uint64_t a1, int *a2, int *a3, uint64_t *a4)
{
  size_t v4 = a2;
  if (a2 == a3) {
    return a2;
  }
  int v5 = *a2;
  unint64_t v6 = a2;
  if (*a2 == 93) {
    return v6;
  }
  uint64_t v7 = (uint64_t)a4;
  unsigned int v10 = 0;
  uint64_t v11 = 0;
  long long v31 = 0uLL;
  uint64_t v32 = 0;
  if (a2 + 1 != a3 && v5 == 91)
  {
    int v12 = a2[1];
    switch(v12)
    {
      case '.':
        size_t v4 = sub_1C9ABB0(a1, a2 + 2, a3, (uint64_t)&v31);
        unsigned int v10 = HIBYTE(v32);
        uint64_t v11 = *((void *)&v31 + 1);
        break;
      case ':':
        std::wstring::value_type v13 = sub_1C9AAF8(a1, a2 + 2, a3, (uint64_t)a4);
        goto LABEL_12;
      case '=':
        std::wstring::value_type v13 = sub_1C9A918(a1, a2 + 2, a3, a4);
LABEL_12:
        uint64_t v7 = (uint64_t)v13;
        char v14 = 0;
        unint64_t v6 = v4;
        goto LABEL_48;
      default:
        uint64_t v11 = 0;
        unsigned int v10 = 0;
        break;
    }
  }
  int v15 = *(_DWORD *)(a1 + 24) & 0x1F0;
  if ((v10 & 0x80u) == 0) {
    uint64_t v11 = v10;
  }
  if (!v11)
  {
    if ((*(_DWORD *)(a1 + 24) & 0x1B0 | 0x40) == 0x40)
    {
      int v16 = *v4;
      if (*v4 == 92)
      {
        std::string v17 = v4 + 1;
        if (v15) {
          std::string v18 = sub_1C9ADFC(a1, v17, a3, (uint64_t *)&v31);
        }
        else {
          std::string v18 = (int *)sub_1C9AC9C(a1, v17, (unsigned int *)a3, (uint64_t *)&v31, v7);
        }
        size_t v4 = v18;
        goto LABEL_28;
      }
    }
    else
    {
      int v16 = *v4;
    }
    if ((v10 & 0x80) != 0)
    {
      int v19 = (int *)v31;
      *((void *)&v31 + 1) = 1;
    }
    else
    {
      HIBYTE(v32) = 1;
      int v19 = (int *)&v31;
    }
    *int v19 = v16;
    v19[1] = 0;
    ++v4;
  }
LABEL_28:
  if (v4 == a3 || *v4 == 93 || (unint64_t v21 = (unsigned int *)(v4 + 1), v4 + 1 == a3) || *v4 != 45 || *v21 == 93)
  {
    if (SHIBYTE(v32) < 0)
    {
      if (*((void *)&v31 + 1))
      {
        if (*((void *)&v31 + 1) != 1)
        {
          uint64_t v20 = (unsigned int *)v31;
LABEL_46:
          sub_1C9B544(v7, *v20, v20[1]);
          goto LABEL_47;
        }
        uint64_t v20 = (unsigned int *)v31;
        goto LABEL_37;
      }
    }
    else if (HIBYTE(v32))
    {
      uint64_t v20 = (unsigned int *)&v31;
      if (HIBYTE(v32) != 1) {
        goto LABEL_46;
      }
LABEL_37:
      sub_1C992D4(v7, *v20);
    }
LABEL_47:
    char v14 = 1;
    unint64_t v6 = v4;
    goto LABEL_48;
  }
  v29[0] = 0;
  v29[1] = 0;
  uint64_t v30 = 0;
  unint64_t v6 = v4 + 2;
  if (v4 + 2 != a3 && *v21 == 91 && *v6 == 46)
  {
    int v22 = sub_1C9ABB0(a1, v4 + 3, a3, (uint64_t)v29);
LABEL_60:
    unint64_t v6 = v22;
    goto LABEL_61;
  }
  if ((v15 | 0x40) == 0x40)
  {
    unsigned int v24 = *v21;
    if (v24 == 92)
    {
      if (v15) {
        int v22 = sub_1C9ADFC(a1, v4 + 2, a3, (uint64_t *)v29);
      }
      else {
        int v22 = (int *)sub_1C9AC9C(a1, v4 + 2, (unsigned int *)a3, (uint64_t *)v29, v7);
      }
      goto LABEL_60;
    }
  }
  else
  {
    unsigned int v24 = *v21;
  }
  HIBYTE(v30) = 1;
  v29[0] = (void *)v24;
LABEL_61:
  *(_OWORD *)uint64_t v27 = v31;
  uint64_t v28 = v32;
  uint64_t v32 = 0;
  long long v31 = 0uLL;
  *(_OWORD *)std::wstring __p = *(_OWORD *)v29;
  uint64_t v26 = v30;
  v29[0] = 0;
  v29[1] = 0;
  uint64_t v30 = 0;
  sub_1C9B11C(v7, (unsigned int *)v27, (unsigned int *)__p);
  if (SHIBYTE(v26) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v28) < 0) {
    operator delete(v27[0]);
  }
  if (SHIBYTE(v30) < 0) {
    operator delete(v29[0]);
  }
  char v14 = 1;
LABEL_48:
  if (SHIBYTE(v32) < 0) {
    operator delete((void *)v31);
  }
  if (v14) {
    return v6;
  }
  return (int *)v7;
}

void sub_1C9A8A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v28 - 49) < 0) {
    operator delete(*(void **)(v28 - 72));
  }
  _Unwind_Resume(exception_object);
}

int *sub_1C9A918(uint64_t a1, int *a2, int *a3, uint64_t *a4)
{
  if ((char *)a3 - (char *)a2 < 8 || a3 - 1 == a2) {
    goto LABEL_33;
  }
  uint64_t v6 = 4 * ((unint64_t)((char *)a3 - (char *)a2) >> 2) - 8;
  uint64_t v7 = a2;
  uint64_t v8 = a2;
  for (i = a2; ; uint64_t v8 = i)
  {
    int v10 = *i++;
    if (v10 == 61 && v8[1] == 93) {
      break;
    }
    if (!v6) {
      goto LABEL_33;
    }
    ++v7;
    v6 -= 4;
  }
  if (v8 == a3) {
LABEL_33:
  }
    sub_1B95C();
  sub_1C9B7F0(a1, a2, v7, (uint64_t)&v20);
  if (((char)v22 & 0x80000000) == 0)
  {
    uint64_t v11 = v22;
    if (v22)
    {
      int v12 = (int *)&v20;
      goto LABEL_14;
    }
LABEL_34:
    sub_1D280();
  }
  uint64_t v11 = v21;
  if (!v21) {
    goto LABEL_34;
  }
  int v12 = (int *)v20;
LABEL_14:
  sub_1C9BA7C(a1, v12, &v12[v11], (uint64_t)__p);
  unint64_t v13 = v19;
  if ((v19 & 0x80u) != 0) {
    unint64_t v13 = (unint64_t)__p[1];
  }
  if (v13)
  {
    sub_1C9B7AC(a4, (long long *)__p);
  }
  else
  {
    uint64_t v14 = v22;
    if ((v22 & 0x80u) != 0) {
      uint64_t v14 = v21;
    }
    if (v14 == 2)
    {
      int v16 = (unsigned int *)&v20;
      if ((v22 & 0x80u) != 0) {
        int v16 = (unsigned int *)v20;
      }
      sub_1C9B544((uint64_t)a4, *v16, v16[1]);
    }
    else
    {
      if (v14 != 1) {
        sub_1D280();
      }
      int v15 = (unsigned int *)&v20;
      if ((v22 & 0x80u) != 0) {
        int v15 = (unsigned int *)v20;
      }
      sub_1C992D4((uint64_t)a4, *v15);
    }
  }
  if ((char)v19 < 0) {
    operator delete(__p[0]);
  }
  if ((char)v22 < 0) {
    operator delete(v20);
  }
  return v7 + 2;
}

void sub_1C9AAC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

int *sub_1C9AAF8(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  if ((char *)a3 - (char *)a2 < 8 || a3 - 1 == a2) {
    goto LABEL_11;
  }
  uint64_t v5 = 4 * ((unint64_t)((char *)a3 - (char *)a2) >> 2) - 8;
  uint64_t v6 = a2;
  uint64_t v7 = a2;
  for (uint64_t i = a2; ; v7 = i)
  {
    int v9 = *i++;
    if (v9 == 58 && v7[1] == 93) {
      break;
    }
    if (!v5) {
      goto LABEL_11;
    }
    ++v6;
    v5 -= 4;
  }
  if (v7 == a3) {
LABEL_11:
  }
    sub_1B95C();
  int v10 = sub_1C9BE64(a1, a2, v6, *(_DWORD *)(a1 + 24) & 1);
  if (!v10) {
    sub_1D980();
  }
  *(_DWORD *)(a4 + 160) |= v10;
  return v6 + 2;
}

int *sub_1C9ABB0(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  if ((char *)a3 - (char *)a2 < 8 || a3 - 1 == a2) {
    goto LABEL_15;
  }
  uint64_t v5 = 4 * ((unint64_t)((char *)a3 - (char *)a2) >> 2) - 8;
  uint64_t v6 = a2;
  uint64_t v7 = a2;
  for (uint64_t i = a2; ; v7 = i)
  {
    int v9 = *i++;
    if (v9 == 46 && v7[1] == 93) {
      break;
    }
    if (!v5) {
      goto LABEL_15;
    }
    ++v6;
    v5 -= 4;
  }
  if (v7 == a3) {
LABEL_15:
  }
    sub_1B95C();
  sub_1C9B7F0(a1, a2, v6, (uint64_t)&v13);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(_OWORD *)a4 = v13;
  unint64_t v10 = v14;
  *(void *)(a4 + 16) = v14;
  unint64_t v11 = HIBYTE(v10);
  if ((v11 & 0x80u) != 0) {
    unint64_t v11 = *(void *)(a4 + 8);
  }
  if (v11 - 1 >= 2) {
    sub_1D280();
  }
  return v6 + 2;
}

unsigned int *sub_1C9AC9C(uint64_t a1, int *a2, unsigned int *a3, uint64_t *a4, uint64_t a5)
{
  if (a2 == (int *)a3) {
    sub_1894C();
  }
  int v6 = *a2;
  if (*a2 > 97)
  {
    if (v6 > 114)
    {
      if (v6 != 115)
      {
        if (v6 != 119) {
          return sub_1C97F38(a1, a2, a3, (uint64_t **)a4);
        }
        *(_DWORD *)(a5 + 160) |= 0x500u;
        sub_1C992D4(a5, 95);
        return (unsigned int *)(a2 + 1);
      }
      int v8 = *(_DWORD *)(a5 + 160) | 0x4000;
    }
    else
    {
      if (v6 == 98)
      {
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = 1;
          a4 = (uint64_t *)*a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        *a4 = 8;
        return (unsigned int *)(a2 + 1);
      }
      if (v6 != 100) {
        return sub_1C97F38(a1, a2, a3, (uint64_t **)a4);
      }
      int v8 = *(_DWORD *)(a5 + 160) | 0x400;
    }
    *(_DWORD *)(a5 + 160) = v8;
    return (unsigned int *)(a2 + 1);
  }
  if (v6 <= 82)
  {
    if (!v6)
    {
      if (*((char *)a4 + 23) < 0)
      {
        a4[1] = 1;
        a4 = (uint64_t *)*a4;
      }
      else
      {
        *((unsigned char *)a4 + 23) = 1;
      }
      *a4 = 0;
      return (unsigned int *)(a2 + 1);
    }
    if (v6 == 68)
    {
      int v7 = *(_DWORD *)(a5 + 164) | 0x400;
LABEL_22:
      *(_DWORD *)(a5 + 164) = v7;
      return (unsigned int *)(a2 + 1);
    }
    return sub_1C97F38(a1, a2, a3, (uint64_t **)a4);
  }
  if (v6 == 83)
  {
    int v7 = *(_DWORD *)(a5 + 164) | 0x4000;
    goto LABEL_22;
  }
  if (v6 != 87) {
    return sub_1C97F38(a1, a2, a3, (uint64_t **)a4);
  }
  *(_DWORD *)(a5 + 164) |= 0x500u;
  sub_1C9BFE0(a5, 95);
  return (unsigned int *)(a2 + 1);
}

int *sub_1C9ADFC(uint64_t a1, int *a2, int *a3, uint64_t *a4)
{
  if (a2 == a3) {
LABEL_77:
  }
    sub_1894C();
  int v5 = *a2;
  if (v5 > 97)
  {
    switch(v5)
    {
      case 'n':
        if (!a4) {
          goto LABEL_59;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = 1;
          a4 = (uint64_t *)*a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v10 = 10;
        goto LABEL_74;
      case 'o':
      case 'p':
      case 'q':
      case 's':
      case 'u':
        goto LABEL_24;
      case 'r':
        if (!a4) {
          goto LABEL_59;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = 1;
          a4 = (uint64_t *)*a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v10 = 13;
        goto LABEL_74;
      case 't':
        if (!a4) {
          goto LABEL_59;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = 1;
          a4 = (uint64_t *)*a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v10 = 9;
        goto LABEL_74;
      case 'v':
        if (!a4) {
          goto LABEL_59;
        }
        if (*((char *)a4 + 23) < 0)
        {
          a4[1] = 1;
          a4 = (uint64_t *)*a4;
        }
        else
        {
          *((unsigned char *)a4 + 23) = 1;
        }
        uint64_t v10 = 11;
        goto LABEL_74;
      default:
        if (v5 == 98)
        {
          if (!a4) {
            goto LABEL_59;
          }
          if (*((char *)a4 + 23) < 0)
          {
            a4[1] = 1;
            a4 = (uint64_t *)*a4;
          }
          else
          {
            *((unsigned char *)a4 + 23) = 1;
          }
          uint64_t v10 = 8;
        }
        else
        {
          if (v5 != 102) {
            goto LABEL_24;
          }
          if (!a4) {
            goto LABEL_59;
          }
          if (*((char *)a4 + 23) < 0)
          {
            a4[1] = 1;
            a4 = (uint64_t *)*a4;
          }
          else
          {
            *((unsigned char *)a4 + 23) = 1;
          }
          uint64_t v10 = 12;
        }
        break;
    }
    goto LABEL_74;
  }
  if (v5 > 91)
  {
    if (v5 == 92) {
      goto LABEL_16;
    }
    if (v5 != 97) {
      goto LABEL_24;
    }
    if (!a4) {
      goto LABEL_59;
    }
    if (*((char *)a4 + 23) < 0)
    {
      a4[1] = 1;
      a4 = (uint64_t *)*a4;
    }
    else
    {
      *((unsigned char *)a4 + 23) = 1;
    }
    uint64_t v10 = 7;
LABEL_74:
    *a4 = v10;
    return a2 + 1;
  }
  if (v5 == 34 || v5 == 47)
  {
LABEL_16:
    if (a4)
    {
      if (*((char *)a4 + 23) < 0)
      {
        a4[1] = 1;
        a4 = (uint64_t *)*a4;
      }
      else
      {
        *((unsigned char *)a4 + 23) = 1;
      }
      *(_DWORD *)a4 = v5;
      *((_DWORD *)a4 + 1) = 0;
      return a2 + 1;
    }
LABEL_59:
    sub_1C98478(a1);
  }
LABEL_24:
  if ((v5 & 0xFFFFFFF8) != 0x30) {
    goto LABEL_77;
  }
  int v6 = v5 - 48;
  int v7 = a2 + 1;
  if (a2 + 1 == a3)
  {
LABEL_47:
    int v7 = a3;
    goto LABEL_48;
  }
  if ((*v7 & 0xFFFFFFF8) == 0x30)
  {
    int v6 = *v7 + 8 * v6 - 48;
    int v8 = a2 + 2;
    if (a2 + 2 != a3)
    {
      unsigned int v9 = *v8 & 0xFFFFFFF8;
      if (v9 == 48) {
        int v7 = a2 + 3;
      }
      else {
        int v7 = a2 + 2;
      }
      if (v9 == 48) {
        int v6 = *v8 + 8 * v6 - 48;
      }
      goto LABEL_48;
    }
    goto LABEL_47;
  }
LABEL_48:
  if (!a4) {
    sub_1C98478(a1);
  }
  if (*((char *)a4 + 23) < 0)
  {
    a4[1] = 1;
    a4 = (uint64_t *)*a4;
  }
  else
  {
    *((unsigned char *)a4 + 23) = 1;
  }
  *(_DWORD *)a4 = v6;
  *((_DWORD *)a4 + 1) = 0;
  return v7;
}

void sub_1C9B11C(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  uint64_t v3 = a3;
  size_t v4 = a2;
  if (*(unsigned char *)(a1 + 170))
  {
    if (*(unsigned char *)(a1 + 169))
    {
      for (unint64_t i = 0; ; ++i)
      {
        unint64_t v7 = *((char *)v4 + 23) < 0 ? *((void *)v4 + 1) : *((unsigned __int8 *)v4 + 23);
        if (i >= v7) {
          break;
        }
        int v8 = v4;
        if ((*((unsigned char *)v4 + 23) & 0x80) != 0) {
          int v8 = *(unsigned int **)v4;
        }
        unsigned int v9 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), v8[i]);
        uint64_t v10 = v4;
        if (*((char *)v4 + 23) < 0) {
          uint64_t v10 = *(unsigned int **)v4;
        }
        v10[i] = v9;
      }
      for (unint64_t j = 0; ; ++j)
      {
        unint64_t v12 = *((char *)v3 + 23) < 0 ? *((void *)v3 + 1) : *((unsigned __int8 *)v3 + 23);
        if (j >= v12) {
          break;
        }
        long long v13 = v3;
        if ((*((unsigned char *)v3 + 23) & 0x80) != 0) {
          long long v13 = *(unsigned int **)v3;
        }
        unsigned int v14 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), v13[j]);
        int v15 = v3;
        if (*((char *)v3 + 23) < 0) {
          int v15 = *(unsigned int **)v3;
        }
        v15[j] = v14;
      }
    }
    else
    {
      for (unint64_t k = 0; ; ++k)
      {
        unint64_t v18 = *((char *)a2 + 23) < 0 ? *((void *)a2 + 1) : *((unsigned __int8 *)a2 + 23);
        if (k >= v18) {
          break;
        }
        unsigned __int8 v19 = a2;
        if ((*((unsigned char *)a2 + 23) & 0x80) != 0) {
          unsigned __int8 v19 = *(unsigned int **)a2;
        }
        uint64_t v20 = a2;
        if ((*((unsigned char *)a2 + 23) & 0x80) != 0) {
          uint64_t v20 = *(unsigned int **)a2;
        }
        v20[k] = v19[k];
      }
      for (unint64_t m = 0; ; ++m)
      {
        unint64_t v22 = *((char *)a3 + 23) < 0 ? *((void *)a3 + 1) : *((unsigned __int8 *)a3 + 23);
        if (m >= v22) {
          break;
        }
        unsigned int v23 = a3;
        if ((*((unsigned char *)a3 + 23) & 0x80) != 0) {
          unsigned int v23 = *(unsigned int **)a3;
        }
        unsigned int v24 = a3;
        if ((*((unsigned char *)a3 + 23) & 0x80) != 0) {
          unsigned int v24 = *(unsigned int **)a3;
        }
        v24[m] = v23[m];
      }
    }
    if (*((char *)v4 + 23) < 0)
    {
      uint64_t v26 = v4;
      size_t v4 = *(unsigned int **)v4;
      uint64_t v25 = *((void *)v26 + 1);
    }
    else
    {
      uint64_t v25 = *((unsigned __int8 *)v4 + 23);
    }
    sub_1C9C210(a1 + 16, (int *)v4, (int *)&v4[v25]);
    if (*((char *)v3 + 23) < 0)
    {
      uint64_t v28 = v3;
      uint64_t v3 = *(unsigned int **)v3;
      uint64_t v27 = *((void *)v28 + 1);
    }
    else
    {
      uint64_t v27 = *((unsigned __int8 *)v3 + 23);
    }
    sub_1C9C210(a1 + 16, (int *)v3, (int *)&v3[v27]);
    *(_OWORD *)uint64_t v40 = v38;
    uint64_t v41 = v39;
    *(_OWORD *)std::wstring __p = *(_OWORD *)v36;
    uint64_t v43 = v37;
    sub_19B5B00((char **)(a1 + 88), (long long *)v40);
    if (SHIBYTE(v43) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v41) < 0) {
      operator delete(v40[0]);
    }
  }
  else
  {
    if (*((char *)a2 + 23) < 0) {
      uint64_t v16 = *((void *)a2 + 1);
    }
    else {
      uint64_t v16 = *((unsigned __int8 *)a2 + 23);
    }
    if (v16 != 1
      || (*((char *)a3 + 23) < 0 ? (uint64_t v29 = *((void *)a3 + 1)) : (uint64_t v29 = *((unsigned __int8 *)a3 + 23)), v29 != 1))
    {
      sub_1E17C();
    }
    if (*(unsigned char *)(a1 + 169))
    {
      uint64_t v30 = a2;
      if ((*((unsigned char *)a2 + 23) & 0x80) != 0) {
        uint64_t v30 = *(unsigned int **)a2;
      }
      int v31 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), *v30);
      uint64_t v32 = v4;
      if (*((char *)v4 + 23) < 0) {
        uint64_t v32 = *(_DWORD **)v4;
      }
      *uint64_t v32 = v31;
      uint64_t v33 = v3;
      if (*((char *)v3 + 23) < 0) {
        uint64_t v33 = *(unsigned int **)v3;
      }
      int v34 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), *v33);
      uint64_t v35 = v3;
      if (*((char *)v3 + 23) < 0) {
        uint64_t v35 = *(_DWORD **)v3;
      }
      *uint64_t v35 = v34;
    }
    *(_OWORD *)uint64_t v40 = *(_OWORD *)v4;
    uint64_t v41 = *((void *)v4 + 2);
    *((void *)v4 + 1) = 0;
    *((void *)v4 + 2) = 0;
    *(void *)size_t v4 = 0;
    *(_OWORD *)std::wstring __p = *(_OWORD *)v3;
    uint64_t v43 = *((void *)v3 + 2);
    *(void *)uint64_t v3 = 0;
    *((void *)v3 + 1) = 0;
    *((void *)v3 + 2) = 0;
    sub_19B5B00((char **)(a1 + 88), (long long *)v40);
    if (SHIBYTE(v43) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v41) < 0) {
      operator delete(v40[0]);
    }
  }
}

void sub_1C9B4F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
}

void sub_1C9B544(uint64_t a1, unsigned int a2, uint64_t a3)
{
  if (!*(unsigned char *)(a1 + 169))
  {
    uint64_t v17 = a1 + 128;
    unint64_t v18 = *(void *)(a1 + 128);
    uint64_t v10 = (char **)(a1 + 112);
    unint64_t v8 = a2 | (unint64_t)(a3 << 32);
    unsigned int v9 = *(unint64_t **)(a1 + 120);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v9 < v18) {
        goto LABEL_22;
      }
      uint64_t v19 = ((char *)v9 - *v10) >> 3;
      if (!((unint64_t)(v19 + 1) >> 61))
      {
        uint64_t v20 = v18 - (void)*v10;
        uint64_t v21 = v20 >> 2;
        if (v20 >> 2 <= (unint64_t)(v19 + 1)) {
          uint64_t v21 = v19 + 1;
        }
        if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v22 = v21;
        }
        if (v22) {
          unsigned int v23 = (char *)sub_1122DC0(v17, v22);
        }
        else {
          unsigned int v23 = 0;
        }
        uint64_t v25 = &v23[8 * v19];
        uint64_t v26 = &v23[8 * v22];
        *(void *)uint64_t v25 = v8;
        unsigned int v24 = v25 + 8;
        uint64_t v35 = *(char **)(a1 + 112);
        uint64_t v27 = *(char **)(a1 + 120);
        if (v27 == v35) {
          goto LABEL_43;
        }
        do
        {
          uint64_t v36 = *((void *)v27 - 1);
          v27 -= 8;
          *((void *)v25 - 1) = v36;
          v25 -= 8;
        }
        while (v27 != v35);
        goto LABEL_42;
      }
    }
    else
    {
      if ((unint64_t)v9 < v18) {
        goto LABEL_22;
      }
      uint64_t v30 = ((char *)v9 - *v10) >> 3;
      if (!((unint64_t)(v30 + 1) >> 61))
      {
        uint64_t v31 = v18 - (void)*v10;
        uint64_t v32 = v31 >> 2;
        if (v31 >> 2 <= (unint64_t)(v30 + 1)) {
          uint64_t v32 = v30 + 1;
        }
        if ((unint64_t)v31 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v33 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v33 = v32;
        }
        if (v33) {
          int v34 = (char *)sub_1122DC0(v17, v33);
        }
        else {
          int v34 = 0;
        }
        uint64_t v25 = &v34[8 * v30];
        uint64_t v26 = &v34[8 * v33];
        *(void *)uint64_t v25 = v8;
        unsigned int v24 = v25 + 8;
        uint64_t v37 = *(char **)(a1 + 112);
        uint64_t v27 = *(char **)(a1 + 120);
        if (v27 == v37) {
          goto LABEL_43;
        }
        do
        {
          uint64_t v38 = *((void *)v27 - 1);
          v27 -= 8;
          *((void *)v25 - 1) = v38;
          v25 -= 8;
        }
        while (v27 != v37);
        goto LABEL_42;
      }
    }
LABEL_46:
    sub_2E00();
  }
  unsigned int v5 = (*(uint64_t (**)(void))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24));
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), a3);
  unint64_t v7 = *(void *)(a1 + 128);
  unint64_t v8 = v5 | (unint64_t)(v6 << 32);
  unsigned int v9 = *(unint64_t **)(a1 + 120);
  if ((unint64_t)v9 < v7)
  {
LABEL_22:
    *unsigned int v9 = v8;
    unsigned int v24 = v9 + 1;
    goto LABEL_45;
  }
  uint64_t v10 = (char **)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 112);
  uint64_t v12 = ((uint64_t)v9 - v11) >> 3;
  if ((unint64_t)(v12 + 1) >> 61) {
    goto LABEL_46;
  }
  uint64_t v13 = v7 - v11;
  uint64_t v14 = v13 >> 2;
  if (v13 >> 2 <= (unint64_t)(v12 + 1)) {
    uint64_t v14 = v12 + 1;
  }
  if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v15 = v14;
  }
  if (v15) {
    uint64_t v16 = (char *)sub_1122DC0(a1 + 128, v15);
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v25 = &v16[8 * v12];
  uint64_t v26 = &v16[8 * v15];
  *(void *)uint64_t v25 = v8;
  unsigned int v24 = v25 + 8;
  uint64_t v28 = *(char **)(a1 + 112);
  uint64_t v27 = *(char **)(a1 + 120);
  if (v27 == v28) {
    goto LABEL_43;
  }
  do
  {
    uint64_t v29 = *((void *)v27 - 1);
    v27 -= 8;
    *((void *)v25 - 1) = v29;
    v25 -= 8;
  }
  while (v27 != v28);
LABEL_42:
  uint64_t v27 = *v10;
LABEL_43:
  *(void *)(a1 + 112) = v25;
  *(void *)(a1 + 120) = v24;
  *(void *)(a1 + 128) = v26;
  if (v27) {
    operator delete(v27);
  }
LABEL_45:
  *(void *)(a1 + 120) = v24;
}

uint64_t sub_1C9B7AC(uint64_t *a1, long long *a2)
{
  uint64_t v3 = a1 + 17;
  unint64_t v4 = a1[18];
  if (v4 >= a1[19])
  {
    uint64_t result = sub_1C9BBF0(v3, a2);
  }
  else
  {
    sub_1C9BB90(v3, a2);
    uint64_t result = v4 + 24;
  }
  a1[18] = result;
  return result;
}

void sub_1C9B7F0(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  p_p = &__p;
  sub_1C94C4C(&__p, a2, a3, a3 - a2);
  memset(&v18, 0, sizeof(v18));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::wstring::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::wstring::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::reserve(&v18, size);
  std::wstring::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  char v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  std::wstring::size_type v10 = __p.__r_.__value_.__l.__size_;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
  {
    std::wstring::size_type v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else
  {
    std::wstring::size_type v11 = __p.__r_.__value_.__l.__size_;
    p_p = (std::wstring *)__p.__r_.__value_.__r.__words[0];
  }
  if (!v11)
  {
LABEL_12:
    *(void *)a4 = 0;
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 16) = 0;
    if (v9 < 0) {
      std::wstring::size_type v8 = v10;
    }
    if (!v8) {
      goto LABEL_27;
    }
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v13 = &v18;
    }
    else {
      uint64_t v13 = (std::string *)v18.__r_.__value_.__r.__words[0];
    }
    std::__get_collation_name(&v17, (const char *)v13);
    if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
    std::string v18 = v17;
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      std::wstring::size_type v14 = v18.__r_.__value_.__l.__size_;
      if (v18.__r_.__value_.__l.__size_)
      {
        unint64_t v15 = (std::string *)v18.__r_.__value_.__r.__words[0];
        goto LABEL_26;
      }
    }
    else
    {
      std::wstring::size_type v14 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
      if (*((unsigned char *)&v17.__r_.__value_.__s + 23))
      {
        unint64_t v15 = &v18;
LABEL_26:
        sub_1C9A350((std::wstring *)a4, (char *)v15, (char *)v15 + v14, v14);
        goto LABEL_27;
      }
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      if (__p.__r_.__value_.__l.__size_ >= 3) {
        goto LABEL_27;
      }
    }
    else if (HIBYTE(__p.__r_.__value_.__r.__words[2]) >= 3u)
    {
      goto LABEL_27;
    }
    (*(void (**)(std::string *__return_ptr))(**(void **)(a1 + 16) + 32))(&v17);
    if (*(char *)(a4 + 23) < 0) {
      operator delete(*(void **)a4);
    }
    *(std::string *)a4 = v17;
    int v16 = *(char *)(a4 + 23);
    if (v16 < 0)
    {
      if ((*(void *)(a4 + 8) & 0xFFFFFFFFFFFFFFFDLL) != 1)
      {
        **(_DWORD **)a4 = 0;
        *(void *)(a4 + 8) = 0;
        goto LABEL_27;
      }
    }
    else if ((v16 & 0xFD) != 1)
    {
      *(_DWORD *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
      goto LABEL_27;
    }
    std::wstring::operator=((std::wstring *)a4, &__p);
    goto LABEL_27;
  }
  uint64_t v12 = 4 * v11;
  while (p_p->__r_.__value_.__s.__data_[0] < 0x7Fu)
  {
    std::string::push_back(&v18, p_p->__r_.__value_.__s.__data_[0]);
    p_p = (std::wstring *)((char *)p_p + 4);
    v12 -= 4;
    if (!v12)
    {
      std::wstring::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      std::wstring::size_type v10 = __p.__r_.__value_.__l.__size_;
      char v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      goto LABEL_12;
    }
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
LABEL_27:
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1C9BA2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (*(char *)(v24 + 23) < 0) {
    operator delete(*(void **)v24);
  }
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C9BA7C(uint64_t a1@<X0>, int *a2@<X1>, int *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C94C4C(__p, a2, a3, a3 - a2);
  unint64_t v6 = v12;
  if ((v12 & 0x80u) == 0) {
    unint64_t v7 = __p;
  }
  else {
    unint64_t v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) != 0) {
    unint64_t v6 = (unint64_t)__p[1];
  }
  (*(void (**)(void, void **, unint64_t))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v7, (unint64_t)v7 + 4 * v6);
  uint64_t v8 = *(unsigned __int8 *)(a4 + 23);
  int v9 = (char)v8;
  if ((v8 & 0x80u) != 0) {
    uint64_t v8 = *(void *)(a4 + 8);
  }
  if (v8 != 1)
  {
    if (v8 == 3)
    {
      if (v9 >= 0) {
        std::wstring::size_type v10 = (_DWORD *)a4;
      }
      else {
        std::wstring::size_type v10 = *(_DWORD **)a4;
      }
      v10[2] = *v10;
    }
    else if (v9 < 0)
    {
      **(_DWORD **)a4 = 0;
      *(void *)(a4 + 8) = 0;
    }
    else
    {
      *(_DWORD *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
    }
  }
  if ((char)v12 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C9BB74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1C9BB90(void *result, long long *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t result = sub_1C9F9B0((unsigned char *)result[1], *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  v2[1] = v3 + 24;
  return result;
}

void sub_1C9BBE8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1C9BBF0(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  std::string v18 = a1 + 2;
  if (v9) {
    std::wstring::size_type v10 = (char *)sub_112C518(v7, v9);
  }
  else {
    std::wstring::size_type v10 = 0;
  }
  std::wstring::size_type v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  int v16 = v11;
  std::string v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_1C9F9B0(v11, *(void **)a2, *((void *)a2 + 1));
    std::wstring::size_type v11 = v16;
  }
  else
  {
    long long v12 = *a2;
    *((void *)v11 + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::wstring::size_type v11 = v12;
  }
  int v16 = v11 + 24;
  sub_1C9BD14(a1, v15);
  uint64_t v13 = a1[1];
  sub_188FFD0((uint64_t)v15);
  return v13;
}

void sub_1C9BD00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_188FFD0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1C9BD14(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1C9BD8C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1C9BD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_1C9BE2C((uint64_t)v12);
  return a6;
}

uint64_t sub_1C9BE2C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_188FF88(a1);
  }
  return a1;
}

uint64_t sub_1C9BE64(uint64_t a1, int *a2, int *a3, BOOL a4)
{
  sub_1C94C4C(&v16, a2, a3, a3 - a2);
  std::string::size_type v6 = v18;
  if ((v18 & 0x80u) == 0) {
    uint64_t v7 = &v16;
  }
  else {
    uint64_t v7 = v16;
  }
  if ((v18 & 0x80u) != 0) {
    std::string::size_type v6 = v17;
  }
  (*(void (**)(void, void *, std::string::size_type))(**(void **)(a1 + 8) + 80))(*(void *)(a1 + 8), v7, (std::string::size_type)v7 + 4 * v6);
  memset(&__p, 0, sizeof(__p));
  if ((v18 & 0x80u) == 0) {
    std::string::size_type v8 = v18;
  }
  else {
    std::string::size_type v8 = v17;
  }
  std::string::reserve(&__p, v8);
  std::string::size_type v9 = v18;
  if ((v18 & 0x80u) == 0) {
    long long v10 = &v16;
  }
  else {
    long long v10 = v16;
  }
  if ((v18 & 0x80u) != 0) {
    std::string::size_type v9 = v17;
  }
  if (v9)
  {
    uint64_t v11 = 4 * v9;
    while (*v10 <= 0x7Eu)
    {
      std::string::push_back(&__p, *v10++);
      v11 -= 4;
      if (!v11) {
        goto LABEL_18;
      }
    }
    uint64_t classname = 0;
  }
  else
  {
LABEL_18:
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    uint64_t classname = std::__get_classname((const char *)p_p, a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if ((char)v18 < 0) {
    operator delete(v16);
  }
  return classname;
}

void sub_1C9BFA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1C9BFE0(uint64_t a1, uint64_t a2)
{
  int v2 = a2;
  if (!*(unsigned char *)(a1 + 169))
  {
    unint64_t v12 = *(void *)(a1 + 80);
    char v13 = (void **)(a1 + 64);
    uint64_t v5 = *(char **)(a1 + 72);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v5 < v12) {
        goto LABEL_22;
      }
      std::string::size_type v6 = (char *)*v13;
      uint64_t v14 = (v5 - (unsigned char *)*v13) >> 2;
      if (!((unint64_t)(v14 + 1) >> 62))
      {
        unint64_t v15 = v12 - (void)v6;
        unint64_t v16 = (uint64_t)(v12 - (void)v6) >> 1;
        if (v16 <= v14 + 1) {
          unint64_t v16 = v14 + 1;
        }
        if (v15 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v17 = v16;
        }
        if (v17)
        {
          unsigned __int8 v18 = (char *)sub_1896AFC(a1 + 80, v17);
          std::string::size_type v6 = *(char **)(a1 + 64);
          uint64_t v5 = *(char **)(a1 + 72);
        }
        else
        {
          unsigned __int8 v18 = 0;
        }
        uint64_t v20 = &v18[4 * v14];
        uint64_t v21 = &v18[4 * v17];
        *(_DWORD *)uint64_t v20 = v2;
        uint64_t v19 = v20 + 4;
        while (v5 != v6)
        {
          int v28 = *((_DWORD *)v5 - 1);
          v5 -= 4;
          *((_DWORD *)v20 - 1) = v28;
          v20 -= 4;
        }
        goto LABEL_43;
      }
    }
    else
    {
      if ((unint64_t)v5 < v12) {
        goto LABEL_22;
      }
      std::string::size_type v6 = (char *)*v13;
      uint64_t v23 = (v5 - (unsigned char *)*v13) >> 2;
      if (!((unint64_t)(v23 + 1) >> 62))
      {
        unint64_t v24 = v12 - (void)v6;
        unint64_t v25 = (uint64_t)(v12 - (void)v6) >> 1;
        if (v25 <= v23 + 1) {
          unint64_t v25 = v23 + 1;
        }
        if (v24 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v26 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v26 = v25;
        }
        if (v26)
        {
          uint64_t v27 = (char *)sub_1896AFC(a1 + 80, v26);
          std::string::size_type v6 = *(char **)(a1 + 64);
          uint64_t v5 = *(char **)(a1 + 72);
        }
        else
        {
          uint64_t v27 = 0;
        }
        uint64_t v20 = &v27[4 * v23];
        uint64_t v21 = &v27[4 * v26];
        *(_DWORD *)uint64_t v20 = v2;
        uint64_t v19 = v20 + 4;
        while (v5 != v6)
        {
          int v29 = *((_DWORD *)v5 - 1);
          v5 -= 4;
          *((_DWORD *)v20 - 1) = v29;
          v20 -= 4;
        }
        goto LABEL_43;
      }
    }
LABEL_46:
    sub_2E00();
  }
  int v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 72))(*(void *)(a1 + 24), a2);
  unint64_t v4 = *(void *)(a1 + 80);
  uint64_t v5 = *(char **)(a1 + 72);
  if ((unint64_t)v5 < v4)
  {
LABEL_22:
    *(_DWORD *)uint64_t v5 = v2;
    uint64_t v19 = v5 + 4;
    goto LABEL_45;
  }
  std::string::size_type v6 = *(char **)(a1 + 64);
  uint64_t v7 = (v5 - v6) >> 2;
  if ((unint64_t)(v7 + 1) >> 62) {
    goto LABEL_46;
  }
  unint64_t v8 = v4 - (void)v6;
  unint64_t v9 = (uint64_t)(v4 - (void)v6) >> 1;
  if (v9 <= v7 + 1) {
    unint64_t v9 = v7 + 1;
  }
  if (v8 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v10 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v9;
  }
  if (v10)
  {
    uint64_t v11 = (char *)sub_1896AFC(a1 + 80, v10);
    std::string::size_type v6 = *(char **)(a1 + 64);
    uint64_t v5 = *(char **)(a1 + 72);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v20 = &v11[4 * v7];
  uint64_t v21 = &v11[4 * v10];
  *(_DWORD *)uint64_t v20 = v2;
  uint64_t v19 = v20 + 4;
  while (v5 != v6)
  {
    int v22 = *((_DWORD *)v5 - 1);
    v5 -= 4;
    *((_DWORD *)v20 - 1) = v22;
    v20 -= 4;
  }
LABEL_43:
  *(void *)(a1 + 64) = v20;
  *(void *)(a1 + 72) = v19;
  *(void *)(a1 + 80) = v21;
  if (v6) {
    operator delete(v6);
  }
LABEL_45:
  *(void *)(a1 + 72) = v19;
}

void sub_1C9C210(uint64_t a1, int *a2, int *a3)
{
  sub_1C94C4C(__p, a2, a3, a3 - a2);
  unint64_t v4 = v7;
  if ((v7 & 0x80u) == 0) {
    uint64_t v5 = __p;
  }
  else {
    uint64_t v5 = (void **)__p[0];
  }
  if ((v7 & 0x80u) != 0) {
    unint64_t v4 = (unint64_t)__p[1];
  }
  (*(void (**)(void, void **, unint64_t))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v5, (unint64_t)v5 + 4 * v4);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1C9C2B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1C9C2CC(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C9C338(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1C9C3C4(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(*(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - 1)) = *(void *)(a2 + 16);
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_1C9C3F4(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C9C460(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1C9C4EC(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  uint64_t v2 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - 1);
  *(void *)(v2 + 8) = *(void *)(a2 + 16);
  *(unsigned char *)(v2 + 16) = 1;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void sub_1C9C524()
{
}

void sub_1C9C67C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

unsigned int *sub_1C9C6B4(uint64_t a1, unsigned int *a2, unsigned int *a3, int *a4)
{
  unint64_t v4 = a2;
  if (a2 != a3)
  {
    int v8 = (*(uint64_t (**)(void, void, void))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), *a2, 0);
    if ((v8 & 0xFFFFFFF8) == 0x30 || (v8 & 0xFFFFFFFE) == 0x38)
    {
      *a4 = v8 - 48;
      if (++v4 == a3)
      {
        return a3;
      }
      else
      {
        while (1)
        {
          int v9 = (*(uint64_t (**)(void, void, void))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), *v4, 0);
          if ((v9 & 0xFFFFFFF8) != 0x30 && (v9 & 0xFFFFFFFE) != 0x38) {
            break;
          }
          if (*a4 >= 214748364) {
            sub_1E770();
          }
          *a4 = 10 * *a4 + v9 - 48;
          if (++v4 == a3) {
            return a3;
          }
        }
      }
    }
  }
  return v4;
}

void sub_1C9C7E4(void *a1)
{
  sub_1C9C93C(a1);

  operator delete();
}

unsigned int *sub_1C9C81C(unsigned int *result, void *a2)
{
  uint64_t v2 = result[10];
  uint64_t v3 = a2[7];
  unint64_t v4 = (unint64_t *)(v3 + 16 * v2);
  if (*(_DWORD *)a2 == -991)
  {
    unint64_t v5 = *v4 + 1;
    *unint64_t v4 = v5;
    unint64_t v6 = *((void *)result + 3);
    unint64_t v7 = *((void *)result + 4);
    BOOL v8 = v5 < v7;
    if (v5 < v7 && v5 >= v6)
    {
      uint64_t v10 = *(void *)(v3 + 16 * v2 + 8);
      BOOL v8 = v5 < v7 && v10 != a2[2];
    }
    if (!v8 || v5 < v6)
    {
      *(_DWORD *)a2 = -994;
      if (!v8) {
        goto LABEL_25;
      }
LABEL_22:
      a2[10] = *((void *)result + 1);
      return sub_1C9C9F0(result, a2);
    }
    goto LABEL_23;
  }
  *unint64_t v4 = 0;
  if (*((void *)result + 4))
  {
    if (*((void *)result + 3))
    {
      *(_DWORD *)a2 = -994;
      goto LABEL_22;
    }
LABEL_23:
    *(_DWORD *)a2 = -992;
    return result;
  }
  *(_DWORD *)a2 = -994;
LABEL_25:
  a2[10] = *((void *)result + 2);
  return result;
}

unsigned int *sub_1C9C8D0(unsigned int *result, int a2, void *a3)
{
  *(_DWORD *)a3 = -994;
  if (*((unsigned __int8 *)result + 52) == a2)
  {
    a3[10] = *((void *)result + 2);
  }
  else
  {
    a3[10] = *((void *)result + 1);
    return sub_1C9C9F0(result, a3);
  }
  return result;
}

void sub_1C9C904(void *a1)
{
  sub_1C9C93C(a1);

  operator delete();
}

void *sub_1C9C93C(void *a1)
{
  *a1 = off_24EA920;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = off_24EA4A0;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}

unsigned int *sub_1C9C9F0(unsigned int *result, void *a2)
{
  unsigned int v2 = result[11];
  *(void *)(a2[7] + 16 * result[10] + 8) = a2[2];
  unsigned int v3 = result[12];
  if (v2 != v3)
  {
    uint64_t v4 = v2 - 1;
    uint64_t v5 = a2[3];
    uint64_t v6 = v3 - 1 - v4;
    uint64_t v7 = a2[4] + 24 * v4 + 8;
    do
    {
      *(void *)(v7 - 8) = v5;
      *(void *)uint64_t v7 = v5;
      *(unsigned char *)(v7 + 8) = 0;
      v7 += 24;
      --v6;
    }
    while (v6);
  }
  return result;
}

void sub_1C9CA48()
{
}

uint64_t sub_1C9CA5C(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -991;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void sub_1C9CA74(void *a1)
{
  sub_1C9C93C(a1);

  operator delete();
}

void sub_1C9CAAC(uint64_t a1, _DWORD *a2)
{
  *a2 = -992;
}

uint64_t sub_1C9CAB8(uint64_t result, int a2, uint64_t a3)
{
  *(_DWORD *)a3 = -994;
  uint64_t v3 = 8;
  if (a2) {
    uint64_t v3 = 16;
  }
  *(void *)(a3 + 80) = *(void *)(result + v3);
  return result;
}

void sub_1C9CAE0()
{
}

uint64_t sub_1C9CAF4(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

uint64_t sub_1C9CB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  do
  {
    uint64_t v5 = a2;
    a2 = sub_1C9CB54(a1, a2, a3);
  }
  while (v5 != a2);
  return v5;
}

unsigned int *sub_1C9CB54(uint64_t a1, int *a2, int *a3)
{
  if (a2 == a3) {
    return (unsigned int *)a2;
  }
  uint64_t v6 = sub_1C9CBF0(a1, a2, a3);
  if (v6 == a2) {
    return (unsigned int *)a2;
  }

  return sub_1C9CD04(a1, (unsigned int *)v6, (unsigned int *)a3);
}

int *sub_1C9CBF0(uint64_t a1, int *a2, int *a3)
{
  uint64_t v6 = sub_1C9CEA8(a1, a2, a3);
  uint64_t v7 = v6;
  if (a2 == v6 && a2 != a3 && a2 + 1 != a3)
  {
    uint64_t v9 = (uint64_t)v6;
    if (*a2 == 92) {
      uint64_t v9 = (uint64_t)&a2[2 * (a2[1] == 40)];
    }
    if ((int *)v9 == a2)
    {
      if (*a2 == 92)
      {
        int v11 = sub_1C9D188(a1, a2[1]);
        uint64_t v12 = 2;
        if (!v11) {
          uint64_t v12 = 0;
        }
        return &a2[v12];
      }
    }
    else
    {
      sub_1C97B4C(a1);
      uint64_t v10 = (int *)sub_1C9CB08(a1, v9, (uint64_t)a3);
      if (v10 == a3 || v10 + 1 == a3 || *v10 != 92 || v10[1] != 41) {
        sub_16B78();
      }
      uint64_t v7 = v10 + 2;
      sub_1C97BD0(a1);
    }
  }
  return v7;
}

unsigned int *sub_1C9CD04(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  if (a2 != a3)
  {
    if (*a2 == 42) {
      sub_1C9C524();
    }
    if (a2 + 1 != a3 && *a2 == 92 && a2[1] == 123)
    {
      uint64_t v5 = a2 + 2;
      int v11 = 0;
      uint64_t v6 = sub_1C9C6B4(a1, a2 + 2, a3, &v11);
      if (v5 == v6) {
        goto LABEL_16;
      }
      if (v6 != a3)
      {
        uint64_t v7 = v6 + 1;
        if (*v6 == 44)
        {
          int v10 = -1;
          BOOL v8 = sub_1C9C6B4(a1, v7, a3, &v10);
          if (v8 != a3 && v8 + 1 != a3 && *v8 == 92 && v8[1] == 125)
          {
            if (v10 != -1 && v10 < v11) {
LABEL_16:
            }
              sub_1E770();
LABEL_20:
            sub_1C9C524();
          }
        }
        else if (v7 != a3 && *v6 == 92 && *v7 == 125)
        {
          goto LABEL_20;
        }
      }
      sub_1E7C8();
    }
  }
  return a2;
}

int *sub_1C9CEA8(uint64_t a1, int *a2, int *a3)
{
  if (a2 == a3)
  {
    uint64_t result = sub_1C9CFDC(a1, a2, a3);
    if (result != a2) {
      return result;
    }
    goto LABEL_12;
  }
  int v6 = *a2;
  if ((a2 + 1 != a3 || v6 != 36)
    && ((v6 - 46) > 0x2E || ((1 << (v6 - 46)) & 0x600000000001) == 0))
  {
    sub_1C98478(a1);
  }
  uint64_t result = sub_1C9CFDC(a1, a2, a3);
  if (result == a2)
  {
    if (*a2 == 46) {
      operator new();
    }
LABEL_12:
    return sub_1C97A38(a1, a2, a3);
  }
  return result;
}

_DWORD *sub_1C9CFDC(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  if (a2 != a3 && a2 + 1 != a3 && *a2 == 92)
  {
    int v4 = a2[1];
    if ((v4 - 36) <= 0x3A && ((1 << (v4 - 36)) & 0x580000000000441) != 0) {
      sub_1C98478(a1);
    }
  }
  return a2;
}

void *sub_1C9D050(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1C9D0BC(void *a1)
{
  *a1 = off_24EA4A0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1C9D148(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(_DWORD **)(a2 + 16);
  if (v2 == *(_DWORD **)(a2 + 24) || !*v2)
  {
    uint64_t v3 = 0;
    *(_DWORD *)a2 = -993;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    uint64_t v3 = *(void *)(result + 8);
  }
  *(void *)(a2 + 80) = v3;
  return result;
}

uint64_t sub_1C9D188(uint64_t a1, uint64_t a2)
{
  int v3 = (*(uint64_t (**)(void, uint64_t, void))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), a2, 0);
  if ((v3 & 0xFFFFFFF8) == 0x30 || (uint64_t result = 0, (v3 & 0xFFFFFFFE) == 0x38))
  {
    if (v3 - 49 <= 8)
    {
      if (v3 - 48 <= *(_DWORD *)(a1 + 28)) {
        sub_1C985B8(a1);
      }
      sub_193B4();
    }
    return 0;
  }
  return result;
}

int *sub_1C9D22C(uint64_t a1, int *a2, int *a3)
{
  int v6 = (int *)sub_1C9D28C(a1, a2, a3);
  if (v6 == a2) {
    sub_1EFEC();
  }
  do
  {
    uint64_t v7 = v6;
    int v6 = (int *)sub_1C9D28C(a1, v6, a3);
  }
  while (v7 != v6);
  return v7;
}

unsigned int *sub_1C9D28C(uint64_t a1, int *a2, int *a3)
{
  int v6 = sub_1C9D3D0(a1, a2, a3);
  uint64_t v7 = (unsigned int *)v6;
  if (v6 == a2 && v6 != a3)
  {
    int v8 = *a2;
    if (*a2 == 36) {
      sub_1C96298();
    }
    if (v8 != 40)
    {
      if (v8 == 94) {
        sub_1C96214();
      }
      return (unsigned int *)a2;
    }
    sub_1C97B4C(a1);
    ++*(_DWORD *)(a1 + 36);
    uint64_t v9 = (int *)sub_1C95210(a1, a2 + 1, a3);
    if (v9 == a3 || (int v10 = v9, *v9 != 41)) {
      sub_16B78();
    }
    sub_1C97BD0(a1);
    --*(_DWORD *)(a1 + 36);
    uint64_t v7 = (unsigned int *)(v10 + 1);
  }
  if (v7 == (unsigned int *)a2) {
    return (unsigned int *)a2;
  }

  return sub_1C95F08(a1, v7, (unsigned int *)a3);
}

int *sub_1C9D3D0(uint64_t a1, int *a2, int *a3)
{
  uint64_t result = sub_1C9D4B8(a1, a2, a3);
  if (result == a2)
  {
    uint64_t result = sub_1C9D540(a1, a2, a3);
    if (result == a2)
    {
      if (a2 != a3 && *a2 == 46) {
        operator new();
      }
      return sub_1C97A38(a1, a2, a3);
    }
  }
  return result;
}

int *sub_1C9D4B8(uint64_t a1, int *a2, int *a3)
{
  if (a2 != a3)
  {
    int v4 = *a2;
    uint64_t v5 = (v4 - 36);
    if (v5 > 0x3A) {
      goto LABEL_8;
    }
    if (((1 << (v4 - 36)) & 0x5800000080004D1) != 0) {
      return a2;
    }
    if (v5 == 5)
    {
      if (*(_DWORD *)(a1 + 36)) {
        return a2;
      }
    }
    else
    {
LABEL_8:
      if ((v4 - 123) < 2) {
        return a2;
      }
    }
    sub_1C98478(a1);
  }
  return a2;
}

int *sub_1C9D540(uint64_t a1, int *a2, int *a3)
{
  int v3 = a2;
  if (a2 != a3)
  {
    int v4 = a2 + 1;
    if (v3 + 1 != a3 && *v3 == 92)
    {
      BOOL v5 = (*v4 - 36) > 0x3A || ((1 << (*v4 - 36)) & 0x5800000080004F1) == 0;
      if (!v5 || (*v4 - 123) < 3) {
        sub_1C98478(a1);
      }
      if ((*(_DWORD *)(a1 + 24) & 0x1F0) == 0x40)
      {
        return sub_1C9ADFC(a1, v4, a3, 0);
      }
      else
      {
        int v7 = sub_1C9D188(a1, *v4);
        uint64_t v8 = 8;
        if (!v7) {
          uint64_t v8 = 0;
        }
        return (int *)((char *)v3 + v8);
      }
    }
  }
  return v3;
}

uint64_t sub_1C9D604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if ((a5 & 0x80) != 0) {
    int v9 = a5 & 0xFFA;
  }
  else {
    int v9 = a5;
  }
  sub_1C96D18(a4, *(_DWORD *)(a1 + 28) + 1, a2, a3, (unsigned __int16)(v9 & 0x800) >> 11);
  if (sub_1C9D970(a1, a2, a3, (uint64_t *)a4, v9, (v9 & 0x800) == 0))
  {
    if (*(void *)(a4 + 8) == *(void *)a4) {
      int v10 = (uint64_t *)(a4 + 24);
    }
    else {
      int v10 = *(uint64_t **)a4;
    }
LABEL_8:
    uint64_t v11 = *v10;
    *(void *)(a4 + 56) = *v10;
    *(unsigned char *)(a4 + 64) = *(void *)(a4 + 48) != v11;
    uint64_t v12 = v10[1];
    *(void *)(a4 + 72) = v12;
    *(unsigned char *)(a4 + 88) = v12 != *(void *)(a4 + 80);
    return 1;
  }
  if (a2 != a3 && (v9 & 0x40) == 0)
  {
    int v14 = v9 | 0x80;
    uint64_t v15 = a2 + 4;
    if (v15 != a3)
    {
      while (1)
      {
        sub_1C971E4((char **)a4, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3), (long long *)(a4 + 24));
        int v16 = sub_1C9D970(a1, v15, a3, (uint64_t *)a4, v14, 0);
        uint64_t v18 = *(void *)a4;
        uint64_t v17 = *(void *)(a4 + 8);
        if (v16) {
          break;
        }
        sub_1C971E4((char **)a4, 0xAAAAAAAAAAAAAAABLL * ((v17 - v18) >> 3), (long long *)(a4 + 24));
        v15 += 4;
        if (v15 == a3) {
          goto LABEL_14;
        }
      }
      if (v17 == v18) {
        int v10 = (uint64_t *)(a4 + 24);
      }
      else {
        int v10 = *(uint64_t **)a4;
      }
      goto LABEL_8;
    }
LABEL_14:
    sub_1C971E4((char **)a4, 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 3), (long long *)(a4 + 24));
    if (sub_1C9D970(a1, a3, a3, (uint64_t *)a4, v14, 0))
    {
      if (*(void *)(a4 + 8) == *(void *)a4) {
        int v10 = (uint64_t *)(a4 + 24);
      }
      else {
        int v10 = *(uint64_t **)a4;
      }
      goto LABEL_8;
    }
  }
  uint64_t result = 0;
  *(void *)(a4 + 8) = *(void *)a4;
  return result;
}

void sub_1C9D7E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  uint64_t v10 = a4[6];
  sub_1C9F748(a1, 0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3));
  uint64_t v11 = *(void *)a1;
  if (*(void *)(a1 + 8) != *(void *)a1)
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0;
    uint64_t v15 = *a4;
    uint64_t v14 = a4[1];
    do
    {
      unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((v14 - v15) >> 3);
      uint64_t v17 = (void *)(v15 + v12);
      if (v16 <= v13) {
        uint64_t v18 = a4 + 3;
      }
      else {
        uint64_t v18 = v17;
      }
      *(void *)(v11 + v12) = a2 + *v18 - v10;
      if (0xAAAAAAAAAAAAAAABLL * ((a4[1] - *a4) >> 3) <= v13) {
        uint64_t v19 = a4 + 3;
      }
      else {
        uint64_t v19 = (uint64_t *)(*a4 + v12);
      }
      *(void *)(*(void *)a1 + v12 + 8) = a2 + v19[1] - v10;
      uint64_t v15 = *a4;
      uint64_t v14 = a4[1];
      if (0xAAAAAAAAAAAAAAABLL * ((v14 - *a4) >> 3) <= v13) {
        uint64_t v20 = a4 + 3;
      }
      else {
        uint64_t v20 = (uint64_t *)(*a4 + v12);
      }
      char v21 = *((unsigned char *)v20 + 16);
      uint64_t v11 = *(void *)a1;
      uint64_t v22 = *(void *)(a1 + 8);
      *(unsigned char *)(*(void *)a1 + v12 + 16) = v21;
      ++v13;
      v12 += 24;
    }
    while (v13 < 0xAAAAAAAAAAAAAAABLL * ((v22 - v11) >> 3));
  }
  *(void *)(a1 + 24) = a3;
  *(void *)(a1 + 32) = a3;
  *(unsigned char *)(a1 + 40) = 0;
  uint64_t v23 = a2 + a4[6] - v10;
  *(void *)(a1 + 48) = v23;
  *(void *)(a1 + 56) = a2 + a4[7] - v10;
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a4 + 64);
  *(void *)(a1 + 72) = a2 + a4[9] - v10;
  *(void *)(a1 + 80) = a2 + a4[10] - v10;
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a4 + 88);
  if ((a5 & 1) == 0) {
    *(void *)(a1 + 104) = v23;
  }
  *(unsigned char *)(a1 + 96) = *((unsigned char *)a4 + 96);
}

uint64_t sub_1C9D970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  if ((*(_WORD *)(a1 + 24) & 0x1F0) == 0) {
    return sub_1C96D8C(a1, a2, a3, a4, a5, a6);
  }
  if (*(_DWORD *)(a1 + 28)) {
    return sub_1C9DF44(a1, a2, a3, a4, a5, a6);
  }
  return sub_1C9D990(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C9D990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  long long v63 = 0u;
  long long v64 = 0u;
  long long v62 = 0u;
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6)
  {
    *(_DWORD *)char v58 = 0;
    memset(&v58[8], 0, 32);
    long long v59 = 0uLL;
    *(_OWORD *)std::string __p = 0uLL;
    memset(v61, 0, 21);
    sub_1C9E4FC(&v62, (uint64_t)v58);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    unint64_t v51 = a4;
    if (*(void *)&v58[32])
    {
      *(void *)&long long v59 = *(void *)&v58[32];
      operator delete(*(void **)&v58[32]);
    }
    uint64_t v12 = *((void *)&v62 + 1);
    unint64_t v13 = *((void *)&v64 + 1) + v64 - 1;
    unint64_t v14 = v13 / 0x2A;
    uint64_t v15 = *(void *)(*((void *)&v62 + 1) + 8 * (v13 / 0x2A));
    unint64_t v16 = 3 * (v13 % 0x2A);
    uint64_t v17 = v15 + 32 * v16;
    *(_DWORD *)uint64_t v17 = 0;
    *(void *)(v17 + 8) = a2;
    *(void *)(*(void *)(v12 + 8 * v14) + 32 * v16 + 16) = a2;
    *(void *)(*(void *)(v12 + 8 * v14) + 32 * v16 + 24) = a3;
    sub_1139150(*(void *)(v12 + 8 * v14) + 32 * v16 + 56, *(unsigned int *)(a1 + 32));
    char v56 = 0;
    unsigned int v18 = 0;
    uint64_t v54 = 0;
    uint64_t v55 = a2;
    uint64_t v53 = a3;
    uint64_t v19 = *((void *)&v64 + 1);
    uint64_t v20 = *((void *)&v62 + 1);
    unint64_t v21 = *((void *)&v64 + 1) + v64 - 1;
    unint64_t v22 = v21 / 0x2A;
    unint64_t v23 = 3 * (v21 % 0x2A);
    *(void *)(*(void *)(*((void *)&v62 + 1) + 8 * v22) + 32 * v23 + 80) = v6;
    uint64_t v24 = (a3 - a2) >> 2;
    uint64_t v25 = *(void *)(v20 + 8 * v22) + 32 * v23;
    unint64_t v26 = (unint64_t)(a3 - a2) >> 2;
    *(_DWORD *)(v25 + 88) = a5;
    *(unsigned char *)(v25 + 92) = a6;
    uint64_t v52 = v24;
    while (2)
    {
      if ((++v18 & 0xFFF) == 0 && (int)(v18 >> 12) >= (int)v26) {
        sub_17BA0();
      }
      unint64_t v28 = v19 + v64 - 1;
      uint64_t v29 = *(void *)(*((void *)&v62 + 1) + 8 * (v28 / 0x2A));
      unint64_t v30 = v28 % 0x2A;
      uint64_t v31 = v29 + 96 * (v28 % 0x2A);
      unint64_t v33 = (void *)(v31 + 80);
      uint64_t v32 = *(void *)(v31 + 80);
      if (v32) {
        (*(void (**)(uint64_t, unint64_t))(*(void *)v32 + 16))(v32, v29 + 96 * v30);
      }
      switch(*(_DWORD *)v31)
      {
        case 0xFFFFFC18:
          uint64_t v34 = *(void *)(v29 + 96 * v30 + 16);
          BOOL v36 = (a5 & 0x1000) == 0 || v34 == v53;
          BOOL v37 = v34 != v55 || (a5 & 0x20) == 0;
          if (!v37 || !v36) {
            goto LABEL_37;
          }
          uint64_t v38 = v54;
          if ((v56 & (v54 >= (v34 - *(void *)(v29 + 96 * v30 + 8)) >> 2)) == 0) {
            uint64_t v38 = (v34 - *(void *)(v29 + 96 * v30 + 8)) >> 2;
          }
          if (v38 != v52)
          {
            uint64_t v54 = v38;
            sub_1C9E600(&v62);
            char v56 = 1;
            goto LABEL_38;
          }
          uint64_t v39 = (void **)*((void *)&v62 + 1);
          uint64_t v40 = v63;
          if ((void)v63 == *((void *)&v62 + 1))
          {
            uint64_t v40 = *((void *)&v62 + 1);
          }
          else
          {
            uint64_t v41 = (void *)(*((void *)&v62 + 1) + 8 * ((unint64_t)v64 / 0x2A));
            long long v42 = (void *)(*v41 + 96 * ((unint64_t)v64 % 0x2A));
            unint64_t v43 = *(void *)(*((void *)&v62 + 1) + 8 * ((*((void *)&v64 + 1) + (void)v64) / 0x2AuLL))
                + 96 * ((*((void *)&v64 + 1) + (void)v64) % 0x2AuLL);
            if (v42 != (void *)v43)
            {
              do
              {
                sub_1C975EC(v42);
                v42 += 12;
                if ((uint32_t *)((char *)v42 - *v41) == &stru_FB8.dylib.name.offset)
                {
                  char v44 = (void *)v41[1];
                  ++v41;
                  long long v42 = v44;
                }
              }
              while (v42 != (void *)v43);
              uint64_t v39 = (void **)*((void *)&v62 + 1);
              uint64_t v40 = v63;
            }
          }
          *((void *)&v64 + 1) = 0;
          unint64_t v47 = v40 - (void)v39;
          if (v47 >= 0x11)
          {
            do
            {
              operator delete(*v39);
              uint64_t v39 = (void **)(*((void *)&v62 + 1) + 8);
              *((void *)&v62 + 1) = v39;
              unint64_t v47 = v63 - (void)v39;
            }
            while ((void)v63 - (void)v39 > 0x10uLL);
          }
          if (v47 >> 3 == 1)
          {
            uint64_t v48 = 21;
          }
          else
          {
            if (v47 >> 3 != 2) {
              goto LABEL_53;
            }
            uint64_t v48 = 42;
          }
          *(void *)&long long v64 = v48;
LABEL_53:
          char v56 = 1;
          uint64_t v54 = v52;
LABEL_38:
          uint64_t v19 = *((void *)&v64 + 1);
          if (*((void *)&v64 + 1)) {
            continue;
          }
          if (v56)
          {
            uint64_t v49 = *v51;
            *(void *)uint64_t v49 = v55;
            *(void *)(v49 + 8) = v55 + 4 * v54;
            uint64_t v6 = 1;
            *(unsigned char *)(v49 + 16) = 1;
          }
          else
          {
            uint64_t v6 = 0;
          }
          break;
        case 0xFFFFFC19:
        case 0xFFFFFC1E:
        case 0xFFFFFC21:
          goto LABEL_38;
        case 0xFFFFFC1D:
          sub_1C9E688((uint64_t)&v62, v29 + 96 * v30);
          goto LABEL_37;
        case 0xFFFFFC1F:
LABEL_37:
          sub_1C9E600(&v62);
          goto LABEL_38;
        case 0xFFFFFC20:
          long long v45 = *(_OWORD *)(v31 + 16);
          *(_OWORD *)char v58 = *(_OWORD *)v31;
          *(_OWORD *)&v58[16] = v45;
          long long v59 = 0uLL;
          *(void *)&v58[32] = 0;
          sub_1C9781C(&v58[32], *(long long **)(v29 + 96 * v30 + 32), *(long long **)(v29 + 96 * v30 + 40), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(v29 + 96 * v30 + 40) - *(void *)(v29 + 96 * v30 + 32)) >> 3));
          __p[0] = 0;
          __p[1] = 0;
          v61[0] = 0;
          sub_1C9789C((char *)__p, *(long long **)(v29 + 96 * v30 + 56), *(long long **)(v29 + 96 * v30 + 64), (uint64_t)(*(void *)(v29 + 96 * v30 + 64) - *(void *)(v29 + 96 * v30 + 56)) >> 4);
          uint64_t v46 = *v33;
          *(void *)((char *)&v61[1] + 5) = *(void *)(v31 + 85);
          v61[1] = v46;
          (*(void (**)(void, uint64_t, unint64_t))(*(void *)*v33 + 24))(*v33, 1, v29 + 96 * v30);
          (*(void (**)(void, void, unsigned char *))(*(void *)v61[1] + 24))(v61[1], 0, v58);
          sub_1C9E4FC(&v62, (uint64_t)v58);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
          if (*(void *)&v58[32])
          {
            *(void *)&long long v59 = *(void *)&v58[32];
            operator delete(*(void **)&v58[32]);
          }
          goto LABEL_38;
        default:
          sub_17BF8();
      }
      break;
    }
  }
  sub_1C9F294(&v62);
  return v6;
}

void sub_1C9DECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22)
{
  sub_1C9F294((void *)(v22 - 144));
  _Unwind_Resume(a1);
}

uint64_t sub_1C9DF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  long long v59 = 0;
  __int32 v60 = 0;
  unint64_t v61 = 0;
  *(_DWORD *)char v56 = 0;
  memset(&v56[8], 0, 32);
  long long v57 = 0u;
  memset(v58, 0, 37);
  uint64_t v6 = *(void *)(a1 + 40);
  if (!v6) {
    goto LABEL_43;
  }
  *(void *)&long long v54 = a3;
  *((void *)&v54 + 1) = a3;
  char v55 = 0;
  *(_DWORD *)unint64_t v51 = 0;
  memset(&v51[8], 0, 48);
  *(_OWORD *)std::string __p = 0uLL;
  memset(v53, 0, 21);
  __int32 v60 = (_OWORD *)sub_1C97398((uint64_t *)&v59, (uint64_t)v51);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (*(void *)&v51[32])
  {
    *(void *)&v51[40] = *(void *)&v51[32];
    operator delete(*(void **)&v51[32]);
  }
  uint64_t v46 = a4;
  uint64_t v12 = v60;
  *((_DWORD *)v60 - 24) = 0;
  *((void *)v12 - 11) = a2;
  *((void *)v12 - 10) = a2;
  *((void *)v12 - 9) = a3;
  sub_1C9735C((uint64_t)(v12 - 4), *(unsigned int *)(a1 + 28), &v54);
  sub_1139150((uint64_t)v60 - 40, *(unsigned int *)(a1 + 32));
  uint64_t v48 = a3;
  uint64_t v49 = 0;
  char v13 = 0;
  unsigned int v14 = 0;
  unint64_t v15 = a3 - a2;
  uint64_t v16 = (a3 - a2) >> 2;
  uint64_t v17 = v60;
  *((void *)v60 - 2) = v6;
  unint64_t v18 = v15 >> 2;
  *((_DWORD *)v17 - 2) = a5;
  *((unsigned char *)v17 - 4) = a6;
  uint64_t v47 = v16;
  do
  {
    BOOL v19 = (++v14 & 0xFFF) != 0 || (int)(v14 >> 12) < (int)v18;
    if (!v19) {
      sub_17BA0();
    }
    unint64_t v21 = v17 - 1;
    uint64_t v20 = *((void *)v17 - 2);
    uint64_t v22 = v17 - 6;
    if (v20) {
      (*(void (**)(uint64_t, _OWORD *))(*(void *)v20 + 16))(v20, v17 - 6);
    }
    switch(*(_DWORD *)v22)
    {
      case 0xFFFFFC18:
        uint64_t v23 = *((void *)v17 - 10);
        if ((a5 & 0x20) != 0 && v23 == a2 || (a5 & 0x1000) != 0 && v23 != v48) {
          goto LABEL_19;
        }
        char v30 = v13;
        uint64_t v31 = v23 - *((void *)v17 - 11);
        uint64_t v32 = v49;
        if ((v30 & (v49 >= v31 >> 2)) == 0)
        {
          long long v33 = *(v17 - 5);
          *(_OWORD *)char v56 = *(_OWORD *)v22;
          *(_OWORD *)&v56[16] = v33;
          if (v56 != v22)
          {
            sub_1C9F440(&v56[32], *((long long **)v17 - 8), *((long long **)v17 - 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v17 - 7) - *((void *)v17 - 8)) >> 3));
            sub_1C9F5F8(v58, *((uint64_t **)v17 - 5), *((uint64_t **)v17 - 4), (uint64_t)(*((void *)v17 - 4) - *((void *)v17 - 5)) >> 4);
          }
          uint64_t v32 = v31 >> 2;
          uint64_t v34 = (void *)*v21;
          *(void **)((char *)&v58[3] + 5) = *(void **)((char *)v17 - 11);
          void v58[3] = v34;
        }
        uint64_t v35 = v60;
        if (v32 == v47)
        {
          uint64_t v36 = (uint64_t)v59;
          while (v35 != (void *)v36)
          {
            v35 -= 12;
            sub_1C975EC(v35);
          }
          __int32 v60 = (_OWORD *)v36;
          char v13 = 1;
          uint64_t v49 = v47;
        }
        else
        {
          uint64_t v49 = v32;
          BOOL v37 = v60 - 6;
          sub_1C975EC((void *)v60 - 12);
          __int32 v60 = v37;
          char v13 = 1;
        }
        break;
      case 0xFFFFFC1D:
      case 0xFFFFFC1E:
      case 0xFFFFFC21:
        break;
      case 0xFFFFFC1F:
LABEL_19:
        uint64_t v24 = v60 - 6;
        sub_1C975EC((void *)v60 - 12);
        __int32 v60 = v24;
        break;
      case 0xFFFFFC20:
        long long v25 = *(v17 - 5);
        *(_OWORD *)unint64_t v51 = *(_OWORD *)v22;
        *(_OWORD *)&v51[16] = v25;
        memset(&v51[32], 0, 24);
        sub_1C9781C(&v51[32], *((long long **)v17 - 8), *((long long **)v17 - 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)v17 - 7) - *((void *)v17 - 8)) >> 3));
        __p[0] = 0;
        __p[1] = 0;
        v53[0] = 0;
        sub_1C9789C((char *)__p, *((long long **)v17 - 5), *((long long **)v17 - 4), (uint64_t)(*((void *)v17 - 4) - *((void *)v17 - 5)) >> 4);
        unint64_t v26 = (void *)*v21;
        *(void *)((char *)&v53[1] + 5) = *(void *)((char *)v17 - 11);
        v53[1] = v26;
        (*(void (**)(void, uint64_t, _OWORD *))(*(void *)*v21 + 24))(*v21, 1, v17 - 6);
        (*(void (**)(void, void, unsigned char *))(*(void *)v53[1] + 24))(v53[1], 0, v51);
        uint64_t v27 = v60;
        if ((unint64_t)v60 >= v61)
        {
          __int32 v60 = (_OWORD *)sub_1C97398((uint64_t *)&v59, (uint64_t)v51);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v28 = *(_OWORD *)&v51[16];
          *__int32 v60 = *(_OWORD *)v51;
          v27[1] = v28;
          *((void *)v27 + 4) = 0;
          *((void *)v27 + 5) = 0;
          *((void *)v27 + 6) = 0;
          *((void *)v27 + 7) = 0;
          v27[2] = *(_OWORD *)&v51[32];
          *((void *)v27 + 6) = *(void *)&v51[48];
          memset(&v51[32], 0, 24);
          *((void *)v27 + 8) = 0;
          *((void *)v27 + 9) = 0;
          *(_OWORD *)((char *)v27 + 56) = *(_OWORD *)__p;
          *((void *)v27 + 9) = v53[0];
          __p[0] = 0;
          __p[1] = 0;
          v53[0] = 0;
          uint64_t v29 = v53[1];
          *(void *)((char *)v27 + 85) = *(void *)((char *)&v53[1] + 5);
          *((void *)v27 + 10) = v29;
          __int32 v60 = v27 + 6;
        }
        if (*(void *)&v51[32])
        {
          *(void *)&v51[40] = *(void *)&v51[32];
          operator delete(*(void **)&v51[32]);
        }
        break;
      default:
        sub_17BF8();
    }
    uint64_t v17 = v60;
  }
  while (v59 != v60);
  if (v13)
  {
    uint64_t v38 = *v46;
    *(void *)uint64_t v38 = a2;
    *(void *)(v38 + 8) = a2 + 4 * v49;
    *(unsigned char *)(v38 + 16) = 1;
    if ((void)v57 != *(void *)&v56[32])
    {
      unint64_t v39 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v57 - *(void *)&v56[32]) >> 3);
      uint64_t v40 = (unsigned char *)(*(void *)&v56[32] + 16);
      unsigned int v41 = 1;
      do
      {
        uint64_t v42 = v38 + 24 * v41;
        *(_OWORD *)uint64_t v42 = *((_OWORD *)v40 - 1);
        char v43 = *v40;
        v40 += 24;
        *(unsigned char *)(v42 + 16) = v43;
        BOOL v19 = v39 > v41++;
      }
      while (v19);
    }
    uint64_t v44 = 1;
  }
  else
  {
LABEL_43:
    uint64_t v44 = 0;
  }
  if (v58[0])
  {
    v58[1] = v58[0];
    operator delete(v58[0]);
  }
  if (*(void *)&v56[32])
  {
    *(void *)&long long v57 = *(void *)&v56[32];
    operator delete(*(void **)&v56[32]);
  }
  *(void *)char v56 = &v59;
  sub_1C97910((void ***)v56);
  return v44;
}

void sub_1C9E474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  sub_17B5C(&a17);
  sub_17B5C(&a33);
  a33 = v33 - 120;
  sub_1C97910((void ***)&a33);
  _Unwind_Resume(a1);
}

__n128 sub_1C9E4FC(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 42 * ((v4 - v5) >> 3) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_1C9E77C(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  unint64_t v8 = *(void *)(v5 + 8 * (v7 / 0x2A)) + 96 * (v7 % 0x2A);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  *(_OWORD *)(v8 + 16) = v9;
  *(void *)(v8 + 40) = 0;
  *(void *)(v8 + 48) = 0;
  *(void *)(v8 + 32) = 0;
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(v8 + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(v8 + 56) = 0;
  *(void *)(v8 + 64) = 0;
  *(void *)(v8 + 72) = 0;
  __n128 result = *(__n128 *)(a2 + 56);
  *(__n128 *)(v8 + 56) = result;
  *(void *)(v8 + 72) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(v8 + 85) = *(void *)(a2 + 85);
  *(void *)(v8 + 80) = v11;
  ++a1[5];
  return result;
}

uint64_t sub_1C9E600(void *a1)
{
  unint64_t v2 = a1[5] + a1[4] - 1;
  sub_1C975EC((void *)(*(void *)(a1[1] + 8 * (v2 / 0x2A)) + 96 * (v2 % 0x2A)));
  --a1[5];

  return sub_1C9EF00(a1, 1);
}

int64x2_t sub_1C9E688(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    sub_1C9EF78((void **)a1);
    unint64_t v4 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = (void *)(v5 + 8 * (v4 / 0x2A));
  uint64_t v7 = *v6 + 96 * (v4 % 0x2A);
  if (*(void *)(a1 + 16) == v5) {
    uint64_t v7 = 0;
  }
  if (v7 == *v6) {
    uint64_t v7 = *(v6 - 1) + 4032;
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v7 - 96) = *(_OWORD *)a2;
  *(_OWORD *)(v7 - 80) = v8;
  *(void *)(v7 - 56) = 0;
  *(void *)(v7 - 48) = 0;
  *(void *)(v7 - 64) = 0;
  *(_OWORD *)(v7 - 64) = *(_OWORD *)(a2 + 32);
  *(void *)(v7 - 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(v7 - 40) = 0;
  *(void *)(v7 - 32) = 0;
  *(void *)(v7 - 24) = 0;
  *(_OWORD *)(v7 - 40) = *(_OWORD *)(a2 + 56);
  *(void *)(v7 - 24) = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(v7 - 11) = *(void *)(a2 + 85);
  *(void *)(v7 - 16) = v9;
  int64x2_t result = vaddq_s64(*(int64x2_t *)(a1 + 32), (int64x2_t)xmmword_20B9410);
  *(int64x2_t *)(a1 + 32) = result;
  return result;
}

void sub_1C9E77C(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x2A;
  unint64_t v4 = v2 - 42;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    long long v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)long long v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1122DC0(v5, v33);
      uint64_t v35 = &v34[8 * (v33 >> 2)];
      BOOL v37 = &v34[8 * v36];
      uint64_t v38 = (uint64_t *)a1[1];
      long long v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        long long v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        unsigned int v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)unsigned int v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    BOOL v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    long long v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0xFC0uLL);
      sub_1C9EA94(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0xFC0uLL);
    sub_1C9EBAC((uint64_t)a1, &v54);
    uint64_t v44 = (void *)a1[1];
    long long v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      uint64_t v34 = (char *)sub_1122DC0((uint64_t)(a1 + 3), v46);
      uint64_t v35 = &v34[8 * (v46 >> 2)];
      BOOL v37 = &v34[8 * v47];
      uint64_t v48 = (uint64_t *)a1[1];
      long long v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        long long v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        unint64_t v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)unint64_t v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      char v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        long long v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  char v56 = a1 + 3;
  *(void *)&long long v54 = sub_1122DC0((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  uint64_t v53 = operator new(0xFC0uLL);
  sub_1C9ECCC(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_1C9EDE4((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_1C9EA48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1C9EA94(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    uint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      BOOL v19 = (char *)sub_1122DC0(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      uint64_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

void sub_1C9EBAC(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)sub_1122DC0(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_1C9ECCC(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)sub_1122DC0(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_1C9EDE4(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)sub_1122DC0(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

uint64_t sub_1C9EF00(void *a1, int a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = a1[2];
  if (v2 == v3) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = 42 * ((v2 - v3) >> 3) - 1;
  }
  unint64_t v5 = v4 - (a1[5] + a1[4]);
  if (v5 < 0x2A) {
    a2 = 1;
  }
  if (v5 < 0x54) {
    int v7 = a2;
  }
  else {
    int v7 = 0;
  }
  if ((v7 & 1) == 0)
  {
    operator delete(*(void **)(v2 - 8));
    a1[2] -= 8;
  }
  return v7 ^ 1u;
}

void sub_1C9EF78(void **a1)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  unint64_t v4 = (v3 - v2) >> 3;
  if (v3 == v2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = 42 * v4 - 1;
  }
  uint64_t v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(void)a1[5]] < 0x2A)
  {
    uint64_t v7 = (uint64_t)(a1 + 3);
    uint64_t v8 = a1[3];
    uint64_t v9 = *a1;
    uint64_t v10 = v8 - (unsigned char *)*a1;
    if (v4 >= v10 >> 3)
    {
      if (v8 == v9) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = v10 >> 2;
      }
      unint64_t v46 = a1 + 3;
      std::string __p = sub_1122DC0(v7, v11);
      char v43 = (char *)__p;
      uint64_t v44 = (char *)__p;
      uint64_t v45 = (char *)__p + 8 * v12;
      unsigned int v41 = operator new(0xFC0uLL);
      sub_1C9ECCC(&__p, &v41);
      uint64_t v13 = (char *)a1[1];
      uint64_t v14 = v44;
      if (v13 == a1[2])
      {
        unint64_t v33 = (char *)a1[1];
      }
      else
      {
        do
        {
          if (v14 == v45)
          {
            int64_t v15 = v43 - (unsigned char *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p) {
                unint64_t v23 = 1;
              }
              else {
                unint64_t v23 = (v14 - (unsigned char *)__p) >> 2;
              }
              uint64_t v24 = (char *)sub_1122DC0((uint64_t)v46, v23);
              uint64_t v26 = v43;
              uint64_t v14 = &v24[8 * (v23 >> 2)];
              uint64_t v27 = v44 - v43;
              if (v44 != v43)
              {
                uint64_t v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v28 = 8 * (v27 >> 3);
                uint64_t v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  uint64_t v30 = *(void *)v26;
                  v26 += 8;
                  *(void *)uint64_t v29 = v30;
                  v29 += 8;
                  v28 -= 8;
                }
                while (v28);
              }
              long long v31 = __p;
              std::string __p = v24;
              char v43 = &v24[8 * (v23 >> 2)];
              uint64_t v44 = v14;
              uint64_t v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                uint64_t v14 = v44;
              }
            }
            else
            {
              uint64_t v16 = v15 >> 3;
              BOOL v17 = v15 >> 3 < -1;
              uint64_t v18 = (v15 >> 3) + 2;
              if (v17) {
                uint64_t v19 = v18;
              }
              else {
                uint64_t v19 = v16 + 1;
              }
              uint64_t v20 = &v43[-8 * (v19 >> 1)];
              int64_t v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                uint64_t v14 = v43;
              }
              uint64_t v22 = &v14[-8 * (v19 >> 1)];
              uint64_t v14 = &v20[v21];
              char v43 = v22;
              uint64_t v44 = &v20[v21];
            }
          }
          uint64_t v32 = *(void *)v13;
          v13 += 8;
          *(void *)uint64_t v14 = v32;
          uint64_t v14 = v44 + 8;
          v44 += 8;
        }
        while (v13 != a1[2]);
        unint64_t v33 = (char *)a1[1];
      }
      uint64_t v36 = *a1;
      BOOL v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      std::string __p = v36;
      char v43 = v33;
      uint64_t v38 = (char *)a1[3];
      uint64_t v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      uint64_t v44 = v13;
      uint64_t v45 = v38;
      if (v14 - v37 == 8) {
        uint64_t v40 = 21;
      }
      else {
        uint64_t v40 = (uint64_t)a1[4] + 42;
      }
      a1[4] = (void *)v40;
      if (v13 != v33) {
        uint64_t v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8];
      }
      if (v36) {
        operator delete(v36);
      }
    }
    else
    {
      if (v2 == v9)
      {
        std::string __p = operator new(0xFC0uLL);
        sub_1C9EA94(a1, &__p);
        uint64_t v34 = a1[2];
        std::string __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }
      else
      {
        std::string __p = operator new(0xFC0uLL);
      }
      sub_1C9EBAC((uint64_t)a1, &__p);
      if ((unsigned char *)a1[2] - (unsigned char *)a1[1] == 8) {
        uint64_t v35 = 21;
      }
      else {
        uint64_t v35 = (uint64_t)a1[4] + 42;
      }
      a1[4] = (void *)v35;
    }
  }
  else
  {
    a1[4] = v6 + 42;
    std::string __p = (void *)*((void *)v3 - 1);
    a1[2] = v3 - 8;
    sub_1C9EBAC((uint64_t)a1, &__p);
  }
}

void sub_1C9F248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  operator delete(v12);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1C9F294(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v3 == v2)
  {
    unint64_t v4 = a1 + 5;
    uint64_t v3 = (void **)a1[1];
  }
  else
  {
    unint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    uint64_t v6 = &v2[v5 / 0x2A];
    uint64_t v7 = (char *)*v6 + 96 * (v5 % 0x2A);
    unint64_t v8 = (unint64_t)v2[(a1[5] + v5) / 0x2A] + 96 * ((a1[5] + v5) % 0x2A);
    if (v7 != (char *)v8)
    {
      do
      {
        sub_1C975EC(v7);
        v7 += 96;
        if (v7 - (unsigned char *)*v6 == 4032)
        {
          uint64_t v9 = (char *)v6[1];
          ++v6;
          uint64_t v7 = v9;
        }
      }
      while (v7 != (char *)v8);
      uint64_t v2 = (void **)a1[1];
      uint64_t v3 = (void **)a1[2];
    }
  }
  *unint64_t v4 = 0;
  unint64_t v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v10 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 21;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 42;
  }
  a1[4] = v12;
LABEL_16:
  while (v2 != v3)
  {
    uint64_t v13 = *v2++;
    operator delete(v13);
  }

  return sub_1C9F3F0((uint64_t)a1);
}

uint64_t sub_1C9F3F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

char *sub_1C9F440(void *a1, long long *a2, long long *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = a1[2];
  int64x2_t result = (char *)*a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v8 - (uint64_t)result) >> 3) >= a4)
  {
    uint64_t v19 = (char *)a1[1];
    uint64_t v14 = a1 + 1;
    uint64_t v13 = v19;
    unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((v19 - result) >> 3);
    if (v20 >= a4)
    {
      uint64_t v25 = result;
      if (a2 != a3)
      {
        uint64_t v26 = result;
        do
        {
          *(_OWORD *)uint64_t v26 = *v6;
          v26[16] = *((unsigned char *)v6 + 16);
          v25 += 24;
          uint64_t v6 = (long long *)((char *)v6 + 24);
          v26 += 24;
        }
        while (v6 != a3);
      }
      int64_t v18 = v25 - result;
      uint64_t v13 = result;
    }
    else
    {
      int64_t v21 = (long long *)((char *)a2 + 24 * v20);
      if (v13 != result)
      {
        do
        {
          *(_OWORD *)int64x2_t result = *v6;
          result[16] = *((unsigned char *)v6 + 16);
          uint64_t v6 = (long long *)((char *)v6 + 24);
          result += 24;
        }
        while (v6 != v21);
      }
      uint64_t v22 = v13;
      if (v21 != a3)
      {
        unint64_t v23 = v13;
        do
        {
          long long v24 = *v21;
          *((void *)v23 + 2) = *((void *)v21 + 2);
          *(_OWORD *)unint64_t v23 = v24;
          v23 += 24;
          int64_t v21 = (long long *)((char *)v21 + 24);
          v22 += 24;
        }
        while (v21 != a3);
      }
      int64_t v18 = v22 - v13;
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * (v8 >> 3);
    uint64_t v11 = 2 * v10;
    if (2 * v10 <= a4) {
      uint64_t v11 = a4;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v12 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v12 = v11;
    }
    int64x2_t result = sub_112E848(a1, v12);
    int64_t v15 = (char *)a1[1];
    uint64_t v14 = a1 + 1;
    uint64_t v13 = v15;
    uint64_t v16 = v15;
    if (v6 != a3)
    {
      uint64_t v16 = v13;
      do
      {
        long long v17 = *v6;
        *((void *)v16 + 2) = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v16 = v17;
        v16 += 24;
        uint64_t v6 = (long long *)((char *)v6 + 24);
      }
      while (v6 != a3);
    }
    int64_t v18 = v16 - v13;
  }
  *uint64_t v14 = &v13[v18];
  return result;
}

char *sub_1C9F5F8(void *a1, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = a1[2];
  int64x2_t result = (char *)*a1;
  if (a4 <= (v8 - (uint64_t)result) >> 4)
  {
    int64_t v18 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    unint64_t v12 = v18;
    unint64_t v19 = (v18 - result) >> 4;
    if (v19 >= a4)
    {
      uint64_t v26 = result;
      if (a2 != a3)
      {
        uint64_t v27 = result;
        do
        {
          uint64_t v28 = *v6;
          uint64_t v29 = v6[1];
          v6 += 2;
          *(void *)uint64_t v27 = v28;
          *((void *)v27 + 1) = v29;
          v27 += 16;
          v26 += 16;
        }
        while (v6 != a3);
      }
      long long v17 = (char *)(v26 - result);
      unint64_t v12 = result;
    }
    else
    {
      unint64_t v20 = (long long *)&a2[2 * v19];
      if (v12 != result)
      {
        do
        {
          uint64_t v21 = *v6;
          uint64_t v22 = v6[1];
          v6 += 2;
          *(void *)int64x2_t result = v21;
          *((void *)result + 1) = v22;
          result += 16;
        }
        while (v6 != (uint64_t *)v20);
      }
      unint64_t v23 = v12;
      if (v20 != (long long *)a3)
      {
        long long v24 = v12;
        do
        {
          long long v25 = *v20++;
          *(_OWORD *)long long v24 = v25;
          v24 += 16;
          v23 += 16;
        }
        while (v20 != (long long *)a3);
      }
      long long v17 = (char *)(v23 - v12);
    }
  }
  else
  {
    if (result)
    {
      a1[1] = result;
      operator delete(result);
      uint64_t v8 = 0;
      *a1 = 0;
      a1[1] = 0;
      a1[2] = 0;
    }
    if (a4 >> 60) {
      sub_2E00();
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    int64x2_t result = sub_112DF28(a1, v11);
    uint64_t v14 = (char *)a1[1];
    uint64_t v13 = a1 + 1;
    unint64_t v12 = v14;
    int64_t v15 = v14;
    if (v6 != a3)
    {
      int64_t v15 = v12;
      do
      {
        long long v16 = *(_OWORD *)v6;
        v6 += 2;
        *(_OWORD *)int64_t v15 = v16;
        v15 += 16;
      }
      while (v6 != a3);
    }
    long long v17 = (char *)(v15 - v12);
  }
  *uint64_t v13 = &v17[(void)v12];
  return result;
}

void sub_1C9F748(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3);
  BOOL v3 = a2 >= v2;
  unint64_t v4 = a2 - v2;
  if (v4 != 0 && v3)
  {
    sub_1C9F784((void **)a1, v4);
  }
  else if (!v3)
  {
    *(void *)(a1 + 8) = *(void *)a1 + 24 * a2;
  }
}

void sub_1C9F784(void **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  uint64_t v7 = *(void **)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - (unsigned char *)v7) >> 3) >= a2)
  {
    if (a2)
    {
      uint64_t v13 = &v7[3 * a2];
      uint64_t v14 = 24 * a2;
      do
      {
        void *v7 = 0;
        v7[1] = 0;
        *((unsigned char *)v7 + 16) = 0;
        v7 += 3;
        v14 -= 24;
      }
      while (v14);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (((char *)v7 - (unsigned char *)*a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - (unsigned char *)*a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11) {
      unint64_t v12 = (char *)sub_112C518(v4, v11);
    }
    else {
      unint64_t v12 = 0;
    }
    int64_t v15 = &v12[24 * v8];
    long long v16 = &v15[24 * a2];
    uint64_t v17 = 24 * a2;
    int64_t v18 = v15;
    do
    {
      *(void *)int64_t v18 = 0;
      *((void *)v18 + 1) = 0;
      v18[16] = 0;
      v18 += 24;
      v17 -= 24;
    }
    while (v17);
    unint64_t v19 = &v12[24 * v11];
    uint64_t v21 = (char *)*a1;
    unint64_t v20 = (char *)a1[1];
    if (v20 != *a1)
    {
      do
      {
        long long v22 = *(_OWORD *)(v20 - 24);
        *((void *)v15 - 1) = *((void *)v20 - 1);
        *(_OWORD *)(v15 - 24) = v22;
        v15 -= 24;
        v20 -= 24;
      }
      while (v20 != v21);
      unint64_t v20 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v16;
    a1[2] = v19;
    if (v20)
    {
      operator delete(v20);
    }
  }
}

void *sub_1C9F900@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (*((unsigned char *)result + 16)) {
    return sub_1C94C4C(a2, (int *)*result, (int *)result[1], (uint64_t)(result[1] - *result) >> 2);
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return result;
}

uint64_t sub_1C9F928(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 40) = 0;
  if (*(unsigned char *)(a2 + 24))
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    sub_5E5C((void *)(a1 + 16), *(char **)(a2 + 16));
    *(unsigned char *)(a1 + 40) = 1;
  }
  return a1;
}

void sub_1C9F98C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 40))
  {
    if (*(char *)(v1 + 39) < 0) {
      operator delete(*v2);
    }
  }
  _Unwind_Resume(exception_object);
}

void *sub_1C9F9B0(unsigned char *__dst, void *__src, unint64_t a3)
{
  unint64_t v5 = __dst;
  if (a3 > 4)
  {
    if (a3 >= 0x3FFFFFFFFFFFFFF8) {
      sub_188D690();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFFELL) + 2;
    if ((a3 | 1) != 5) {
      uint64_t v6 = a3 | 1;
    }
    uint64_t v7 = sub_1896AFC((uint64_t)__dst, v6 + 1);
    v5[1] = a3;
    v5[2] = v8 | 0x8000000000000000;
    *unint64_t v5 = v7;
    unint64_t v5 = v7;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, 4 * a3 + 4);
}

void sub_1C9FA58(std::codecvt<wchar_t, char, mbstate_t> *a1)
{
  std::codecvt<wchar_t,char,__mbstate_t>::~codecvt(a1);

  operator delete();
}

uint64_t sub_1C9FA90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

void sub_1C9FAB4(unint64_t **a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  a3[2] = 0;
  a3[1] = 0;
  *a3 = a3 + 1;
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  if (*a1 != v5)
  {
    do
    {
      unint64_t v9 = *v4;
      sub_1915714(v9, a2, v7);
      if (v8)
      {
        sub_1C9FB84((uint64_t)a3, &v9, &v9, (uint64_t)v7);
        if (v8) {
          sub_1226044(v7);
        }
      }
      ++v4;
    }
    while (v4 != v5);
  }
}

void sub_1C9FB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  if (a41) {
    sub_1226044(&a10);
  }
  sub_18F9134(v41, *(void **)(v41 + 8));
  _Unwind_Resume(a1);
}

char *sub_1C9FB84(uint64_t a1, unint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        char v8 = (char *)v5;
        unint64_t v9 = *(void *)(v5 + 32);
        if (v7 >= v9) {
          break;
        }
        uint64_t v5 = *(void *)v8;
        uint64_t v6 = (uint64_t **)v8;
        if (!*(void *)v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      uint64_t v5 = *((void *)v8 + 1);
      if (!v5)
      {
        uint64_t v6 = (uint64_t **)(v8 + 8);
        goto LABEL_10;
      }
    }
  }
  else
  {
    char v8 = (char *)(a1 + 8);
LABEL_10:
    sub_1C9FC4C(a1, a3, a4, (uint64_t)v11);
    sub_11220BC((uint64_t **)a1, (uint64_t)v8, v6, (uint64_t *)v11[0]);
    char v8 = v11[0];
    v11[0] = 0;
    sub_18F90DC(v11, 0);
  }
  return v8;
}

uint64_t sub_1C9FC4C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 8;
  char v8 = operator new(0x120uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  v8[4] = *a2;
  uint64_t result = sub_1225DE4(v8 + 5, a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1C9FCAC(_Unwind_Exception *a1)
{
  sub_18F90DC(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1C9FCC4()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2628460, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1CA6CA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1CA8CB0()
{
}

void sub_1CA8CBC()
{
}

void sub_1CA8CCC()
{
}

void sub_1CA8CD8()
{
}

void sub_1CA8CE8()
{
}

void sub_1CA8CF4()
{
}

void sub_1CA8D04()
{
}

void sub_1CA8D10()
{
}

void sub_1CA8D20()
{
}

void sub_1CA8D2C()
{
}

void sub_1CA8D3C()
{
}

void sub_1CA8D48()
{
}

void sub_1CA8D58()
{
}

void sub_1CA8D64()
{
}

void sub_1CA8D74()
{
}

void sub_1CA8D80()
{
}

void sub_1CA8D90()
{
}

void sub_1CA8D9C()
{
}

void sub_1CA8DAC()
{
}

void sub_1CA8DB8()
{
}

void sub_1CA8DC8()
{
}

void sub_1CA8DD4()
{
}

void sub_1CA8DE4()
{
}

void sub_1CA8DF0()
{
}

void sub_1CA8E00()
{
}

void sub_1CA8E0C()
{
}

void sub_1CA8E1C()
{
}

void sub_1CA8E28()
{
}

void sub_1CA8E38()
{
}

void sub_1CA8E44()
{
}

void sub_1CA8E54()
{
}

void sub_1CA8E60()
{
}

void sub_1CA8E70()
{
}

void sub_1CA8E7C()
{
}

void sub_1CA8E8C()
{
}

void sub_1CA8E98()
{
}

void sub_1CA8EA8()
{
}

void sub_1CA8EB4()
{
}

void sub_1CA8EC4()
{
}

void sub_1CA8ED0()
{
}

void sub_1CA8EE0()
{
}

void sub_1CA8EEC()
{
}

void sub_1CA8EFC()
{
}

void sub_1CA8F08()
{
}

void sub_1CA8F18()
{
}

void sub_1CA8F24()
{
}

void sub_1CA8F34()
{
}

void sub_1CA8F40()
{
}

void sub_1CA8F50()
{
}

void sub_1CA8F5C()
{
}

void sub_1CA8F6C()
{
}

void sub_1CA8F78()
{
}

void sub_1CA8F88()
{
}

void sub_1CA8F94()
{
}

void sub_1CA8FA4()
{
}

void sub_1CA8FB0()
{
}

void sub_1CA8FC0()
{
}

void sub_1CA8FCC()
{
}

void sub_1CA8FDC()
{
}

void sub_1CA8FE8()
{
}

void sub_1CA8FF8()
{
}

void sub_1CA9004()
{
}

void sub_1CA9014()
{
}

void sub_1CA9020()
{
}

void sub_1CA9030()
{
}

void sub_1CA903C()
{
}

void sub_1CA904C()
{
}

void sub_1CA9058()
{
}

void sub_1CA9068()
{
}

void sub_1CA9074()
{
}

void sub_1CA9084()
{
}

void sub_1CA9090()
{
}

void sub_1CA90A0()
{
}

void sub_1CA90AC()
{
}

void sub_1CA90BC()
{
}

void sub_1CA90C8()
{
}

void sub_1CA90D8()
{
}

void sub_1CA90E4()
{
}

void sub_1CA90F4()
{
}

void sub_1CA9100()
{
}

void sub_1CA9110()
{
}

void sub_1CA911C()
{
}

void sub_1CA912C()
{
}

void sub_1CA9138()
{
}

void sub_1CA9148()
{
}

void sub_1CA9154()
{
}

void sub_1CA9164()
{
}

void sub_1CA9170()
{
}

void sub_1CA9180()
{
}

void sub_1CA918C()
{
}

void sub_1CA919C()
{
}

void sub_1CA91A8()
{
}

void sub_1CA91B8()
{
}

void sub_1CA91C4()
{
}

void sub_1CA91D4()
{
}

void sub_1CA91E0()
{
}

void sub_1CA91F0()
{
}

void sub_1CA91FC()
{
}

void sub_1CA920C()
{
}

void sub_1CA9218()
{
}

void sub_1CA9228()
{
}

void sub_1CA9234()
{
}

void sub_1CA9244()
{
}

void sub_1CA9250()
{
}

void sub_1CA9260()
{
}

void sub_1CA926C()
{
}

void sub_1CA927C()
{
}

void sub_1CA9288()
{
}

void sub_1CA9298()
{
}

void sub_1CA92A4()
{
}

void sub_1CA92B4()
{
}

void sub_1CA92C0()
{
}

void sub_1CA92D0()
{
}

void sub_1CA92DC()
{
}

void sub_1CA92EC()
{
}

void sub_1CA92F8()
{
}

void sub_1CA9308()
{
}

void sub_1CA9314()
{
}

void sub_1CA9324()
{
}

void sub_1CA9330()
{
}

void sub_1CA9340()
{
}

void sub_1CA934C()
{
}

void sub_1CA935C()
{
}

void sub_1CA9368()
{
}

void sub_1CA9378()
{
}

void sub_1CA9384()
{
}

void sub_1CA9394()
{
}

void sub_1CA93A0()
{
}

void sub_1CA93B0()
{
}

void sub_1CA93BC()
{
}

void sub_1CA93CC()
{
}

void sub_1CA93D8()
{
}

void sub_1CA93E8()
{
}

void sub_1CA93F4()
{
}

void sub_1CA9404()
{
}

void sub_1CA9410()
{
}

void sub_1CA9420()
{
}

void sub_1CA942C()
{
}

void sub_1CA943C()
{
}

void sub_1CA9448()
{
}

void sub_1CA9458()
{
}

void sub_1CA9464()
{
}

void sub_1CA9474()
{
}

void sub_1CA9480()
{
}

void sub_1CA9490()
{
}

void sub_1CA949C()
{
}

void sub_1CA94AC()
{
}

void sub_1CA94B8()
{
}

void sub_1CA94C8()
{
}

void sub_1CA94D4()
{
}

void sub_1CA94E4()
{
}

void sub_1CA94F0()
{
}

void sub_1CA9500()
{
}

void sub_1CA950C()
{
}

void sub_1CA951C()
{
}

void sub_1CA9528()
{
}

void sub_1CA9538()
{
}

void sub_1CA9544()
{
}

void sub_1CA9554()
{
}

void sub_1CA9560()
{
}

void sub_1CA9570()
{
}

void sub_1CA957C()
{
}

void sub_1CA958C()
{
}

void sub_1CA9598()
{
}

void sub_1CA95A8()
{
}

void sub_1CA95B4()
{
}

void sub_1CA95C4()
{
}

void sub_1CA95D0()
{
}

void sub_1CA95E0()
{
}

void sub_1CA95EC()
{
}

void sub_1CA95FC()
{
}

void sub_1CA9608()
{
}

void sub_1CA9618()
{
}

void sub_1CA9624()
{
}

void sub_1CA9634()
{
}

void sub_1CA9640()
{
}

void sub_1CA9650()
{
}

void sub_1CA965C()
{
}

void sub_1CA966C()
{
}

void sub_1CA9678()
{
}

void sub_1CA9688()
{
}

void sub_1CA9694()
{
}

void sub_1CA96A4()
{
}

void sub_1CA96B0()
{
}

void sub_1CA96C0()
{
}

void sub_1CA96CC()
{
}

void sub_1CA96DC()
{
}

void sub_1CA96E8()
{
}

void sub_1CA96F8()
{
}

void sub_1CA9704()
{
}

void sub_1CA9714()
{
}

void sub_1CA9720()
{
}

void sub_1CA9730()
{
}

void sub_1CA973C()
{
}

void sub_1CA974C()
{
}

void sub_1CA9758()
{
}

void sub_1CA9768()
{
}

void sub_1CA9774()
{
}

void sub_1CA9784()
{
}

void sub_1CA9790()
{
}

void sub_1CA97A0()
{
}

void sub_1CA97AC()
{
}

void sub_1CA97BC()
{
}

void sub_1CA97C8()
{
}

void sub_1CA97D8()
{
}

void sub_1CA97E4()
{
}

void sub_1CA97F4()
{
}

void sub_1CA9800()
{
}

void sub_1CA9810()
{
}

void sub_1CA981C()
{
}

void sub_1CA982C()
{
}

void sub_1CA9838()
{
}

void sub_1CA9848()
{
}

void sub_1CA9854()
{
}

void sub_1CA9864()
{
}

void sub_1CA9870()
{
}

void sub_1CA9880()
{
}

void sub_1CA988C()
{
}

void sub_1CA989C()
{
}

void sub_1CA98A8()
{
}

void sub_1CA98B8()
{
}

void sub_1CA98C4()
{
}

void sub_1CA98D4()
{
}

void sub_1CA98E0()
{
}

void sub_1CA98F0()
{
}

void sub_1CA98FC()
{
}

void sub_1CA990C()
{
}

void sub_1CA9918()
{
}

void sub_1CA9928()
{
}

void sub_1CA9934()
{
}

void sub_1CA9944()
{
}

void sub_1CA9950()
{
}

void sub_1CA9960()
{
}

void sub_1CA996C()
{
}

void sub_1CA997C()
{
}

void sub_1CA9988()
{
}

void sub_1CA9998()
{
}

void sub_1CA99A4()
{
}

void sub_1CA99B4()
{
}

void sub_1CA99C0()
{
}

void sub_1CA99D0()
{
}

void sub_1CA99DC()
{
}

void sub_1CA99EC()
{
}

void sub_1CA99F8()
{
}

void sub_1CA9A08()
{
}

void sub_1CA9A14()
{
}

void sub_1CA9A24()
{
}

void sub_1CA9A30()
{
}

void sub_1CA9A40()
{
}

void sub_1CA9A4C()
{
}

void sub_1CA9A5C()
{
}

void sub_1CA9A68()
{
}

void sub_1CA9A78()
{
}

void sub_1CA9A84()
{
}

void sub_1CA9A94()
{
}

void sub_1CA9AA0()
{
}

void sub_1CA9AB0()
{
}

void sub_1CA9ABC()
{
}

void sub_1CA9ACC()
{
}

void sub_1CA9AD8()
{
}

void sub_1CA9AE8()
{
}

void sub_1CA9AF4()
{
}

void sub_1CA9B04()
{
}

void sub_1CA9B10()
{
}

void sub_1CA9B20()
{
}

void sub_1CA9B2C()
{
}

void sub_1CA9B3C()
{
}

void sub_1CA9B48()
{
}

void sub_1CA9B58()
{
}

void sub_1CA9B64()
{
}

void sub_1CA9B74()
{
}

void sub_1CA9B80()
{
}

void sub_1CA9B90()
{
}

void sub_1CA9B9C()
{
}

void sub_1CA9BAC()
{
}

void sub_1CA9BB8()
{
}

void sub_1CA9BC8()
{
}

void sub_1CA9BD4()
{
}

void sub_1CA9BE4()
{
}

void sub_1CA9BF0()
{
}

void sub_1CA9BFC()
{
}

void sub_1CA9C08()
{
}

void sub_1CA9C14()
{
}

void sub_1CA9C24()
{
}

void sub_1CA9C30()
{
}

void sub_1CA9C40()
{
}

void sub_1CA9C4C()
{
}

void sub_1CA9C5C()
{
}

void sub_1CA9C68()
{
}

void sub_1CA9C78()
{
}

void sub_1CA9C84()
{
}

void sub_1CA9C94()
{
}

void sub_1CA9CA0()
{
}

void sub_1CA9CB0()
{
}

void sub_1CA9CBC()
{
}

void sub_1CA9CCC()
{
}

void sub_1CA9CD8()
{
}

void sub_1CA9CE8()
{
}

void sub_1CA9CF4()
{
}

void sub_1CA9D04()
{
}

void sub_1CA9D10()
{
}

void sub_1CA9D20()
{
}

void sub_1CA9D2C()
{
}

void sub_1CA9D3C()
{
}

void sub_1CA9D48()
{
}

void sub_1CA9D58()
{
}

void sub_1CA9D64()
{
}

void sub_1CA9D74()
{
}

void sub_1CA9D80()
{
}

void sub_1CA9D90()
{
}

void sub_1CA9D9C()
{
}

void sub_1CA9DAC()
{
}

void sub_1CA9DB8()
{
}

void sub_1CA9DC8()
{
}

void sub_1CA9DD4()
{
}

void sub_1CA9DE4()
{
}

void sub_1CA9DF0()
{
}

void sub_1CA9E00()
{
}

void sub_1CA9E0C()
{
}

void sub_1CA9E1C()
{
}

void sub_1CA9E28()
{
}

void sub_1CA9E38()
{
}

void sub_1CA9E44()
{
}

void sub_1CA9E54()
{
}

void sub_1CA9E60()
{
}

void sub_1CA9E70()
{
}

void sub_1CA9E7C()
{
}

void sub_1CA9E8C()
{
}

void sub_1CA9E98()
{
}

void sub_1CA9EA8()
{
}

void sub_1CA9EB4()
{
}

void sub_1CA9EC4()
{
}

void sub_1CA9ED0()
{
}

void sub_1CA9EE0()
{
}

void sub_1CA9EEC()
{
}

void sub_1CA9EFC()
{
}

void sub_1CA9F08()
{
}

void sub_1CA9F18()
{
}

void sub_1CA9F24()
{
}

void sub_1CA9F34()
{
}

void sub_1CA9F40()
{
}

void sub_1CA9F50()
{
}

void sub_1CA9F5C()
{
}

void sub_1CA9F6C()
{
}

void sub_1CA9F78()
{
}

void sub_1CA9F88()
{
}

void sub_1CA9F94()
{
}

void sub_1CA9FA4()
{
}

void sub_1CA9FB0()
{
}

void sub_1CA9FC0()
{
}

void sub_1CA9FCC()
{
}

void sub_1CA9FDC()
{
}

void sub_1CA9FE8()
{
}

void sub_1CA9FF8()
{
}

void sub_1CAA004()
{
}

void sub_1CAA014()
{
}

void sub_1CAA020()
{
}

void sub_1CAA030()
{
}

void sub_1CAA03C()
{
}

void sub_1CAA04C()
{
}

void sub_1CAA058()
{
}

void sub_1CAA068()
{
}

void sub_1CAA074()
{
}

void sub_1CAA084()
{
}

void sub_1CAA090()
{
}

void sub_1CAA0A0()
{
}

void sub_1CAA0AC()
{
}

void sub_1CAA0BC()
{
}

void sub_1CAA0C8()
{
}

void sub_1CAA0D8()
{
}

void sub_1CAA0E4()
{
}

void sub_1CAA0F4()
{
}

void sub_1CAA100()
{
}

void sub_1CAA110()
{
}

void sub_1CAA11C()
{
}

void sub_1CAA12C()
{
}

void sub_1CAA138()
{
}

void sub_1CAA148()
{
}

void sub_1CAA154()
{
}

void sub_1CAA164()
{
}

void sub_1CAA170()
{
}

void sub_1CAA180()
{
}

void sub_1CAA18C()
{
}

void sub_1CAA19C()
{
}

void sub_1CAA1A8()
{
}

void sub_1CAA1B8()
{
}

void sub_1CAA1C4()
{
}

void sub_1CAA1D4()
{
}

void sub_1CAA1E0()
{
}

void sub_1CAA1F0()
{
}

void sub_1CAA1FC()
{
}

void sub_1CAA20C()
{
}

void sub_1CAA218()
{
}

void sub_1CAA228()
{
}

void sub_1CAA234()
{
}

void sub_1CAA244()
{
}

void sub_1CAA250()
{
}

void sub_1CAA260()
{
}

void sub_1CAA26C()
{
}

void sub_1CAA27C()
{
}

void sub_1CAA288()
{
}

void sub_1CAA298()
{
}

void sub_1CAA2A4()
{
}

void sub_1CAA2B4()
{
}

void sub_1CAA2C0()
{
}

void sub_1CAA2D0()
{
}

void sub_1CAA2DC()
{
}

void sub_1CAA2EC()
{
}

void sub_1CAA2F8()
{
}

void sub_1CAA308()
{
}

void sub_1CAA314()
{
}

void sub_1CAA324()
{
}

void sub_1CAA330()
{
}

void sub_1CAA340()
{
}

void sub_1CAA34C()
{
}

void sub_1CAA35C()
{
}

void sub_1CAA368()
{
}

void sub_1CAA378()
{
}

void sub_1CAA384()
{
}

void sub_1CAA394()
{
}

void sub_1CAA3A0()
{
}

void sub_1CAA3B0()
{
}

void sub_1CAA3BC()
{
}

void sub_1CAA3CC()
{
}

void sub_1CAA3D8()
{
}

void sub_1CAA3E8()
{
}

void sub_1CAA3F4()
{
}

void sub_1CAA404()
{
}

void sub_1CAA410()
{
}

void sub_1CAA420()
{
}

void sub_1CAA42C()
{
}

void sub_1CAA43C()
{
}

void sub_1CAA448()
{
}

void sub_1CAA458()
{
}

void sub_1CAA464()
{
}

void sub_1CAA474()
{
}

void sub_1CAA480()
{
}

void sub_1CAA490()
{
}

void sub_1CAA49C()
{
}

void sub_1CAA4AC()
{
}

void sub_1CAA4B8()
{
}

void sub_1CAA4C8()
{
}

void sub_1CAA4D4()
{
}

void sub_1CAA4E4()
{
}

void sub_1CAA4F0()
{
}

void sub_1CAA500()
{
}

void sub_1CAA50C()
{
}

void sub_1CAA51C()
{
}

void sub_1CAA528()
{
}

void sub_1CAA538()
{
}

void sub_1CAA544()
{
}

void sub_1CAA554()
{
}

void sub_1CAA560()
{
}

void sub_1CAA570()
{
}

void sub_1CAA57C()
{
}

void sub_1CAA58C()
{
}

void sub_1CAA598()
{
}

void sub_1CAA5A8()
{
}

void sub_1CAA5B4()
{
}

void sub_1CAA5C4()
{
}

void sub_1CAA5D0()
{
}

void sub_1CAA5E0()
{
}

void sub_1CAA5EC()
{
}

void sub_1CAA5FC()
{
}

void sub_1CAA608()
{
}

void sub_1CAA618()
{
}

void sub_1CAA624()
{
}

void sub_1CAA634()
{
}

void sub_1CAA640()
{
}

void sub_1CAA650()
{
}

void sub_1CAA65C()
{
}

void sub_1CAA66C()
{
}

void sub_1CAA678()
{
}

void sub_1CAA688()
{
}

void sub_1CAA694()
{
}

void sub_1CAA6A4()
{
}

void sub_1CAA6B0()
{
}

void sub_1CAA6C0()
{
}

void sub_1CAA6CC()
{
}

void sub_1CAA6DC()
{
}

void sub_1CAA6E8()
{
}

void sub_1CAA6F8()
{
}

void sub_1CAA704()
{
}

void sub_1CAA714()
{
}

void sub_1CAA720()
{
}

void sub_1CAA730()
{
}

void sub_1CAA73C()
{
}

void sub_1CAA748()
{
}

void sub_1CAA75C()
{
}

void sub_1CAA770()
{
}

void sub_1CAA778()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2628418 = 0;
  qword_2628420 = 0;
  qword_2628428 = 0;
  qword_2628418 = (uint64_t)operator new(0x18uLL);
  qword_2628420 = qword_2628418;
  qword_2628428 = qword_2628418 + 24;
  qword_2628420 = (uint64_t)sub_18914E4((uint64_t)&qword_2628428, (long long *)__p, v4, (char *)qword_2628418);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2628430 = 0;
  qword_2628438 = 0;
  qword_2628440 = 0;
  qword_2628430 = (uint64_t)operator new(0x18uLL);
  qword_2628438 = qword_2628430;
  qword_2628440 = qword_2628430 + 24;
  qword_2628438 = (uint64_t)sub_18914E4((uint64_t)&qword_2628440, (long long *)__p, v4, (char *)qword_2628430);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2628448 = 0;
  qword_2628450 = 0;
  qword_2628458 = 0;
  qword_2628448 = (uint64_t)operator new(0x18uLL);
  qword_2628450 = qword_2628448;
  qword_2628458 = qword_2628448 + 24;
  qword_2628450 = (uint64_t)sub_18914E4((uint64_t)&qword_2628458, (long long *)__p, v4, (char *)qword_2628448);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1C9FCC4();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_2628478, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_26284A0, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_1CAAE34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void sub_1CAAFE4(char **a1@<X0>, uint64_t a2@<X8>)
{
  sub_1CAB174(a1, 58, (char **)&__p);
  memset(v16, 0, 7);
  if ((unint64_t)(v18 - (unsigned char *)__p) < 0x11)
  {
    int v6 = 0;
    unint64_t v7 = 0;
    LOBYTE(v8) = 2;
    int v9 = &loc_6E64 + 1;
LABEL_12:
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v7;
    *(_DWORD *)(a2 + 16) = v16[0];
    *(_DWORD *)(a2 + 19) = *(_DWORD *)((char *)v16 + 3);
    *(unsigned char *)(a2 + 23) = v8;
    *(_DWORD *)(a2 + 24) = v6;
    goto LABEL_13;
  }
  size_t v3 = *((void *)__p + 3);
  if (v3 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  int v4 = (const void *)*((void *)__p + 2);
  if (v3 >= 0x17)
  {
    uint64_t v10 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17) {
      uint64_t v10 = v3 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_dst = operator new(v10 + 1);
    size_t v14 = v3;
    unint64_t v15 = v11 | 0x8000000000000000;
    std::string __dst = p_dst;
    goto LABEL_10;
  }
  HIBYTE(v15) = *((void *)__p + 3);
  p_dst = &__dst;
  if (v3) {
LABEL_10:
  }
    memmove(p_dst, v4, v3);
  *((unsigned char *)p_dst + v3) = 0;
  unint64_t v12 = *(const char **)__p;
  int v9 = __dst;
  unint64_t v7 = v14;
  v16[0] = v15;
  *(_DWORD *)((char *)v16 + 3) = *(_DWORD *)((char *)&v15 + 3);
  int v8 = SHIBYTE(v15);
  int v6 = atoi(v12);
  if ((v8 & 0x80000000) == 0) {
    goto LABEL_12;
  }
  sub_4200((unsigned char *)a2, v9, v7);
  *(_DWORD *)(a2 + 24) = v6;
  operator delete(v9);
LABEL_13:
  if (__p)
  {
    char v18 = __p;
    operator delete(__p);
  }
}

void sub_1CAB148(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  operator delete(v15);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_1CAB174(char **a1@<X0>, int a2@<W1>, char **a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  int v6 = a1[1];
  if (v6)
  {
    uint64_t v7 = 0;
    int v8 = *a1;
    do
    {
      int v9 = *v8++;
      if (v9 == a2) {
        ++v7;
      }
      --v6;
    }
    while (v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  sub_112B114((void **)a3, v7 + 1);
  uint64_t v10 = *a1;
  size_t v11 = (size_t)a1[1];
  unint64_t v12 = &v10[v11];
  int v13 = (char *)memchr(v10, a2, v11);
  if (v13) {
    size_t v14 = v13;
  }
  else {
    size_t v14 = &v10[v11];
  }
  uint64_t v15 = v14 - v10;
  if (v15 != v11)
  {
    uint64_t v19 = &v10[v15];
    long long v20 = a3 + 2;
    int v21 = a3[1];
    do
    {
      uint64_t v22 = v19 - v10;
      if ((unint64_t)v21 >= *v20)
      {
        uint64_t v23 = (v21 - *a3) >> 4;
        if ((unint64_t)(v23 + 1) >> 60) {
          sub_2E00();
        }
        uint64_t v24 = *v20 - (void)*a3;
        uint64_t v25 = v24 >> 3;
        if (v24 >> 3 <= (unint64_t)(v23 + 1)) {
          uint64_t v25 = v23 + 1;
        }
        if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v26 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v26 = v25;
        }
        int v27 = (char *)sub_1121C00((uint64_t)(a3 + 2), v26);
        int v29 = &v27[16 * v23];
        *(void *)int v29 = v10;
        *((void *)v29 + 1) = v22;
        int v31 = *a3;
        long long v30 = a3[1];
        long long v32 = v29;
        if (v30 != *a3)
        {
          do
          {
            *((_OWORD *)v32 - 1) = *((_OWORD *)v30 - 1);
            v32 -= 16;
            v30 -= 16;
          }
          while (v30 != v31);
          long long v30 = *a3;
        }
        int v21 = v29 + 16;
        *a3 = v32;
        a3[1] = v29 + 16;
        a3[2] = &v27[16 * v28];
        if (v30) {
          operator delete(v30);
        }
      }
      else
      {
        *(void *)int v21 = v10;
        *((void *)v21 + 1) = v22;
        v21 += 16;
      }
      a3[1] = v21;
      uint64_t v10 = v19 + 1;
      size_t v33 = v12 - (v19 + 1);
      int v34 = (char *)memchr(v19 + 1, a2, v33);
      if (v34) {
        uint64_t v19 = v34;
      }
      else {
        uint64_t v19 = v12;
      }
    }
    while (v19 != v12);
    if ((unint64_t)v21 < *v20)
    {
      *(void *)int v21 = v10;
      *((void *)v21 + 1) = v33;
      char v18 = v21 + 16;
      goto LABEL_55;
    }
    uint64_t v35 = (v21 - *a3) >> 4;
    if ((unint64_t)(v35 + 1) >> 60) {
      sub_2E00();
    }
    uint64_t v36 = *v20 - (void)*a3;
    uint64_t v37 = v36 >> 3;
    if (v36 >> 3 <= (unint64_t)(v35 + 1)) {
      uint64_t v37 = v35 + 1;
    }
    if ((unint64_t)v36 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v38 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v38 = v37;
    }
    int v39 = (char *)sub_1121C00((uint64_t)(a3 + 2), v38);
    long long v40 = &v39[16 * v35];
    long long v42 = &v39[16 * v41];
    *(void *)long long v40 = v10;
    *((void *)v40 + 1) = v33;
    char v18 = v40 + 16;
    int v44 = *a3;
    int v43 = a3[1];
    if (v43 == *a3)
    {
LABEL_53:
      *a3 = v40;
      a3[1] = v18;
      a3[2] = v42;
      if (v43) {
        operator delete(v43);
      }
      goto LABEL_55;
    }
    do
    {
      *((_OWORD *)v40 - 1) = *((_OWORD *)v43 - 1);
      v40 -= 16;
      v43 -= 16;
    }
    while (v43 != v44);
LABEL_52:
    int v43 = *a3;
    goto LABEL_53;
  }
  if (!v11) {
    return;
  }
  unint64_t v16 = (unint64_t)a3[2];
  uint64_t v17 = a3[1];
  if ((unint64_t)v17 >= v16)
  {
    uint64_t v45 = (v17 - *a3) >> 4;
    unint64_t v46 = v45 + 1;
    if ((unint64_t)(v45 + 1) >> 60) {
      sub_2E00();
    }
    uint64_t v47 = v16 - (void)*a3;
    if (v47 >> 3 > v46) {
      unint64_t v46 = v47 >> 3;
    }
    if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v48 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v48 = v46;
    }
    int v49 = (char *)sub_1121C00((uint64_t)(a3 + 2), v48);
    long long v40 = &v49[16 * v45];
    long long v42 = &v49[16 * v50];
    *(void *)long long v40 = v10;
    *((void *)v40 + 1) = v11;
    char v18 = v40 + 16;
    int v51 = *a3;
    int v43 = a3[1];
    if (v43 == *a3) {
      goto LABEL_53;
    }
    do
    {
      *((_OWORD *)v40 - 1) = *((_OWORD *)v43 - 1);
      v40 -= 16;
      v43 -= 16;
    }
    while (v43 != v51);
    goto LABEL_52;
  }
  *(void *)uint64_t v17 = v10;
  *((void *)v17 + 1) = v11;
  char v18 = v17 + 16;
LABEL_55:
  a3[1] = v18;
}

void sub_1CAB474(_Unwind_Exception *exception_object)
{
  size_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1CAB4A0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  size_t v3 = (char *)*(unsigned __int8 *)(a1 + 23);
  if ((char)v3 >= 0) {
    int v4 = (char *)a1;
  }
  else {
    int v4 = *(char **)a1;
  }
  if ((char)v3 < 0) {
    size_t v3 = *(char **)(a1 + 8);
  }
  uint64_t v25 = v4;
  unint64_t v26 = v3;
  sub_1CAB174(&v25, 44, &v23);
  int v5 = (char **)v23;
  int v6 = v24;
  if (v23 != v24)
  {
    do
    {
      sub_1CAAFE4(v5, (uint64_t)__p);
      unint64_t v7 = a2[1];
      unint64_t v8 = a2[2];
      if (v7 >= v8)
      {
        uint64_t v10 = (uint64_t)(v7 - *a2) >> 5;
        unint64_t v11 = v10 + 1;
        if ((unint64_t)(v10 + 1) >> 59) {
          sub_2E00();
        }
        uint64_t v12 = v8 - *a2;
        if (v12 >> 4 > v11) {
          unint64_t v11 = v12 >> 4;
        }
        if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFE0) {
          unint64_t v13 = 0x7FFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v13 = v11;
        }
        int v29 = a2 + 2;
        size_t v14 = (char *)sub_18B0970((uint64_t)(a2 + 2), v13);
        uint64_t v15 = &v14[32 * v10];
        uint64_t v25 = v14;
        unint64_t v26 = v15;
        uint64_t v28 = &v14[32 * v16];
        long long v17 = *(_OWORD *)__p;
        *((void *)v15 + 2) = v21;
        *(_OWORD *)uint64_t v15 = v17;
        __p[1] = 0;
        uint64_t v21 = 0;
        __p[0] = 0;
        *((void *)v15 + 3) = v22;
        int v27 = v15 + 32;
        sub_1CAB964(a2, &v25);
        uint64_t v18 = a2[1];
        sub_1A5E960((uint64_t)&v25);
        int v19 = SHIBYTE(v21);
        a2[1] = v18;
        if (v19 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        long long v9 = *(_OWORD *)__p;
        *(void *)(v7 + 16) = v21;
        *(_OWORD *)unint64_t v7 = v9;
        __p[1] = 0;
        uint64_t v21 = 0;
        __p[0] = 0;
        *(void *)(v7 + 24) = v22;
        a2[1] = v7 + 32;
      }
      v5 += 2;
    }
    while (v5 != (char **)v6);
    int v5 = (char **)v23;
  }
  if (v5)
  {
    uint64_t v24 = (char *)v5;
    operator delete(v5);
  }
}

void sub_1CAB63C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, char a19)
{
}

void sub_1CAB698(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = 0;
  int v29 = 0;
  unint64_t v30 = 0;
  v27[0] = 0;
  v27[1] = 0;
  unint64_t v26 = (uint64_t *)v27;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  uint64_t v5 = *(int *)(a1 + 8);
  if (v5)
  {
    int v6 = &v4[v5];
    do
    {
      uint64_t v7 = *v4;
      unint64_t v8 = *(void *)(*v4 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        sub_4200(__dst, *(void **)v8, *(void *)(v8 + 8));
      }
      else
      {
        long long v9 = *(_OWORD *)v8;
        uint64_t v25 = *(void *)(v8 + 16);
        *(_OWORD *)std::string __dst = v9;
      }
      unint64_t v10 = *(void *)(v7 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        sub_4200(v22, *(void **)v10, *(void *)(v10 + 8));
      }
      else
      {
        long long v11 = *(_OWORD *)v10;
        uint64_t v23 = *(void *)(v10 + 16);
        *(_OWORD *)uint64_t v22 = v11;
      }
      sub_1CAB4A0((uint64_t)__dst, v21);
      uint64_t v12 = v21[0];
      uint64_t v13 = v21[1];
      while (v12 != v13)
      {
        size_t v14 = v29;
        if ((unint64_t)v29 >= v30)
        {
          uint64_t v16 = sub_1D740(&v28, v12);
        }
        else
        {
          if (*(char *)(v12 + 23) < 0)
          {
            sub_4200(v29, *(void **)v12, *(void *)(v12 + 8));
          }
          else
          {
            long long v15 = *(_OWORD *)v12;
            *((void *)v29 + 2) = *(void *)(v12 + 16);
            *size_t v14 = v15;
          }
          uint64_t v16 = (char *)v14 + 24;
        }
        int v29 = v16;
        int v31 = (long long *)v12;
        long long v17 = sub_1CAC210(&v26, (void **)v12, (uint64_t)&unk_20F06E0, &v31);
        LODWORD(v18) = *(_DWORD *)(v12 + 24);
        if (SHIBYTE(v23) < 0)
        {
          sub_4200(&__p, v22[0], (unint64_t)v22[1]);
        }
        else
        {
          long long __p = *(_OWORD *)v22;
          uint64_t v20 = v23;
        }
        sub_1CAC354((uint64_t **)v17 + 7, (int *)&v18);
        if (SHIBYTE(v20) < 0) {
          operator delete((void *)__p);
        }
        v12 += 32;
      }
      uint64_t v18 = (void **)v21;
      sub_1915C70(&v18);
      if (SHIBYTE(v23) < 0) {
        operator delete(v22[0]);
      }
      if (SHIBYTE(v25) < 0) {
        operator delete(__dst[0]);
      }
      ++v4;
    }
    while (v4 != v6);
  }
  sub_1CABAC0(a2, (uint64_t *)&v28, (uint64_t)&v26);
  sub_1BBB0E4((uint64_t)&v26, v27[0]);
  uint64_t v18 = (void **)&v28;
  sub_1891624(&v18);
}

void sub_1CAB8C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,char a34,void *a35)
{
  sub_1BBB0E4((uint64_t)&a34, a35);
  a10 = v35 - 120;
  sub_1891624((void ***)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_1CAB964(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1CAB9DC((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1CAB9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      long long v8 = *(_OWORD *)(a3 - 32);
      *(void *)(v7 - 16) = *(void *)(a3 - 16);
      *(_OWORD *)(v7 - 32) = v8;
      *(void *)(a3 - 24) = 0;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 32) = 0;
      *(void *)(v7 - 8) = *(void *)(a3 - 8);
      uint64_t v7 = *((void *)&v14 + 1) - 32;
      *((void *)&v14 + 1) -= 32;
      a3 -= 32;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_1CABA88((uint64_t)v11);
  return v9;
}

uint64_t sub_1CABA88(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1A5E918(a1);
  }
  return a1;
}

uint64_t sub_1CABAC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_8A6F8((char *)a1, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
  sub_1CABB3C((uint64_t *)(a1 + 24), a3);
  return a1;
}

void sub_1CABB24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1891624((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1CABB3C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1CABB94(a1, *(void ***)a2, (void **)(a2 + 8));
  return a1;
}

void sub_1CABB7C(_Unwind_Exception *a1)
{
  sub_1BBB0E4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1CABB94(uint64_t *result, void **a2, void **a3)
{
  if (a2 != a3)
  {
    int v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = (uint64_t)(result + 1);
    do
    {
      uint64_t result = sub_1CABC20(v5, v6, v4 + 4, (long long *)v4 + 2);
      uint64_t v7 = (void **)v4[1];
      if (v7)
      {
        do
        {
          long long v8 = v7;
          uint64_t v7 = (void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (void **)v4[2];
          BOOL v9 = *v8 == v4;
          int v4 = v8;
        }
        while (!v9);
      }
      int v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_1CABC20(uint64_t **a1, uint64_t a2, void **a3, long long *a4)
{
  uint64_t v6 = sub_1895CA8(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    sub_1CABCB8((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, (uint64_t)v12, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1CAC1B8((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_1CABCB8@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_1CABD24(v6 + 4, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1CABD0C(_Unwind_Exception *a1)
{
  sub_1CAC1B8(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_1CABD24(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v4;
  }
  sub_1CABD9C(__dst + 3, (uint64_t)a2 + 24);
  return __dst;
}

void sub_1CABD80(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1CABD9C(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1CABDF4(a1, *(unsigned int **)a2, (unsigned int *)(a2 + 8));
  return a1;
}

void sub_1CABDDC(_Unwind_Exception *a1)
{
  sub_1BBB194(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1CABDF4(uint64_t *result, unsigned int *a2, unsigned int *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = result + 1;
    do
    {
      uint64_t result = sub_1CABE80(v5, v6, v4 + 8, (uint64_t)(v4 + 8));
      uint64_t v7 = (unsigned int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          long long v8 = v7;
          uint64_t v7 = *(unsigned int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (unsigned int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_1CABE80(uint64_t **a1, uint64_t *a2, unsigned int *a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1CABF04(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1CAC0AC((uint64_t)a1, a4, (uint64_t)&v8);
    sub_11220BC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

uint64_t *sub_1CABF04(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, unsigned int *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (unsigned int v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    long long v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      unint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      uint64_t v9 = (uint64_t *)*a2;
      do
      {
        unint64_t v10 = v9;
        uint64_t v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      long long v13 = a2;
      do
      {
        unint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        long long v13 = v10;
      }
      while (v14);
    }
    unsigned int v15 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          long long v17 = (uint64_t *)v16;
          unsigned int v18 = *(_DWORD *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      long long v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    char v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      char v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    int v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      int v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 8))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = (uint64_t *)v20;
          unsigned int v22 = *(_DWORD *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          uint64_t v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        uint64_t v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      uint64_t v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

void *sub_1CAC0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unsigned int v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  v6[8] = *(_DWORD *)a2;
  uint64_t result = v6 + 10;
  if (*(char *)(a2 + 31) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1CAC13C(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1CAC158(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1CAC158(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 63) < 0) {
      operator delete(__p[5]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_1CAC1B8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1BBB140((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

uint64_t *sub_1CAC210(uint64_t **a1, void **a2, uint64_t a3, long long **a4)
{
  unsigned int v6 = (uint64_t **)sub_1122028((uint64_t)a1, &v11, a2);
  unsigned int v7 = *v6;
  if (!*v6)
  {
    long long v8 = v6;
    sub_1CAC2BC((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, v11, v8, v10[0]);
    unsigned int v7 = v10[0];
    v10[0] = 0;
    sub_1CAC1B8((uint64_t)v10, 0);
  }
  return v7;
}

unsigned char *sub_1CAC2BC@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  unsigned int v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 4;
  long long v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    v6[6] = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  v6[8] = 0;
  v6[9] = 0;
  v6[7] = v6 + 8;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1CAC33C(_Unwind_Exception *a1)
{
  sub_1CAC1B8(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t **sub_1CAC354(uint64_t **a1, int *a2)
{
  long long v4 = (char *)operator new(0x40uLL);
  uint64_t v5 = *((void *)a2 + 3);
  long long v6 = *(_OWORD *)(a2 + 2);
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *((void *)a2 + 3) = 0;
  unsigned int v7 = a1 + 1;
  long long v8 = a1[1];
  long long v13 = a1 + 1;
  unsigned int v9 = *a2;
  *((_DWORD *)v4 + 8) = *a2;
  *(_OWORD *)(v4 + 40) = v6;
  *((void *)v4 + 7) = v5;
  char v14 = 1;
  if (v8)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v10 = (uint64_t **)v8;
        unsigned int v11 = *((_DWORD *)v8 + 8);
        if (v9 >= v11) {
          break;
        }
        long long v8 = *v10;
        unsigned int v7 = v10;
        if (!*v10) {
          goto LABEL_9;
        }
      }
      if (v11 >= v9) {
        break;
      }
      long long v8 = v10[1];
      if (!v8)
      {
        unsigned int v7 = v10 + 1;
        goto LABEL_9;
      }
    }
    sub_1CAC158((uint64_t)&v13, (void **)v4);
    return v10;
  }
  else
  {
    unint64_t v10 = a1 + 1;
LABEL_9:
    sub_11220BC(a1, (uint64_t)v10, v7, (uint64_t *)v4);
  }
  return (uint64_t **)v4;
}

void sub_1CAC440()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2628510, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_1CB3420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_1CB542C()
{
}

void sub_1CB5438()
{
}

void sub_1CB5448()
{
}

void sub_1CB5454()
{
}

void sub_1CB5464()
{
}

void sub_1CB5470()
{
}

void sub_1CB5480()
{
}

void sub_1CB548C()
{
}

void sub_1CB549C()
{
}

void sub_1CB54A8()
{
}

void sub_1CB54B8()
{
}

void sub_1CB54C4()
{
}

void sub_1CB54D4()
{
}

void sub_1CB54E0()
{
}

void sub_1CB54F0()
{
}

void sub_1CB54FC()
{
}

void sub_1CB550C()
{
}

void sub_1CB5518()
{
}

void sub_1CB5528()
{
}

void sub_1CB5534()
{
}

void sub_1CB5544()
{
}

void sub_1CB5550()
{
}

void sub_1CB5560()
{
}

void sub_1CB556C()
{
}

void sub_1CB557C()
{
}

void sub_1CB5588()
{
}

void sub_1CB5598()
{
}

void sub_1CB55A4()
{
}

void sub_1CB55B4()
{
}

void sub_1CB55C0()
{
}

void sub_1CB55D0()
{
}

void sub_1CB55DC()
{
}

void sub_1CB55EC()
{
}

void sub_1CB55F8()
{
}

void sub_1CB5608()
{
}

void sub_1CB5614()
{
}

void sub_1CB5624()
{
}

void sub_1CB5630()
{
}

void sub_1CB5640()
{
}

void sub_1CB564C()
{
}

void sub_1CB565C()
{
}

void sub_1CB5668()
{
}

void sub_1CB5678()
{
}

void sub_1CB5684()
{
}

void sub_1CB5694()
{
}

void sub_1CB56A0()
{
}

void sub_1CB56B0()
{
}

void sub_1CB56BC()
{
}

void sub_1CB56CC()
{
}

void sub_1CB56D8()
{
}

void sub_1CB56E8()
{
}

void sub_1CB56F4()
{
}

void sub_1CB5704()
{
}

void sub_1CB5710()
{
}

void sub_1CB5720()
{
}

void sub_1CB572C()
{
}

void sub_1CB573C()
{
}

void sub_1CB5748()
{
}

void sub_1CB5758()
{
}

void sub_1CB5764()
{
}

void sub_1CB5774()
{
}

void sub_1CB5780()
{
}

void sub_1CB5790()
{
}

void sub_1CB579C()
{
}

void sub_1CB57AC()
{
}

void sub_1CB57B8()
{
}

void sub_1CB57C8()
{
}

void sub_1CB57D4()
{
}

void sub_1CB57E4()
{
}

void sub_1CB57F0()
{
}

void sub_1CB5800()
{
}

void sub_1CB580C()
{
}

void sub_1CB581C()
{
}

void sub_1CB5828()
{
}

void sub_1CB5838()
{
}

void sub_1CB5844()
{
}

void sub_1CB5854()
{
}

void sub_1CB5860()
{
}

void sub_1CB5870()
{
}

void sub_1CB587C()
{
}

void sub_1CB588C()
{
}

void sub_1CB5898()
{
}

void sub_1CB58A8()
{
}

void sub_1CB58B4()
{
}

void sub_1CB58C4()
{
}

void sub_1CB58D0()
{
}

void sub_1CB58E0()
{
}

void sub_1CB58EC()
{
}

void sub_1CB58FC()
{
}

void sub_1CB5908()
{
}

void sub_1CB5918()
{
}

void sub_1CB5924()
{
}

void sub_1CB5934()
{
}

void sub_1CB5940()
{
}

void sub_1CB5950()
{
}

void sub_1CB595C()
{
}

void sub_1CB596C()
{
}

void sub_1CB5978()
{
}

void sub_1CB5988()
{
}

void sub_1CB5994()
{
}

void sub_1CB59A4()
{
}

void sub_1CB59B0()
{
}

void sub_1CB59C0()
{
}

void sub_1CB59CC()
{
}

void sub_1CB59DC()
{
}

void sub_1CB59E8()
{
}

void sub_1CB59F8()
{
}

void sub_1CB5A04()
{
}

void sub_1CB5A14()
{
}

void sub_1CB5A20()
{
}

void sub_1CB5A30()
{
}

void sub_1CB5A3C()
{
}

void sub_1CB5A4C()
{
}

void sub_1CB5A58()
{
}

void sub_1CB5A68()
{
}

void sub_1CB5A74()
{
}

void sub_1CB5A84()
{
}

void sub_1CB5A90()
{
}

void sub_1CB5AA0()
{
}

void sub_1CB5AAC()
{
}

void sub_1CB5ABC()
{
}

void sub_1CB5AC8()
{
}

void sub_1CB5AD8()
{
}

void sub_1CB5AE4()
{
}

void sub_1CB5AF4()
{
}

void sub_1CB5B00()
{
}

void sub_1CB5B10()
{
}

void sub_1CB5B1C()
{
}

void sub_1CB5B2C()
{
}

void sub_1CB5B38()
{
}

void sub_1CB5B48()
{
}

void sub_1CB5B54()
{
}

void sub_1CB5B64()
{
}

void sub_1CB5B70()
{
}

void sub_1CB5B80()
{
}

void sub_1CB5B8C()
{
}

void sub_1CB5B9C()
{
}

void sub_1CB5BA8()
{
}

void sub_1CB5BB8()
{
}

void sub_1CB5BC4()
{
}

void sub_1CB5BD4()
{
}

void sub_1CB5BE0()
{
}

void sub_1CB5BF0()
{
}

void sub_1CB5BFC()
{
}

void sub_1CB5C0C()
{
}

void sub_1CB5C18()
{
}

void sub_1CB5C28()
{
}

void sub_1CB5C34()
{
}

void sub_1CB5C44()
{
}

void sub_1CB5C50()
{
}

void sub_1CB5C60()
{
}

void sub_1CB5C6C()
{
}

void sub_1CB5C7C()
{
}

void sub_1CB5C88()
{
}

void sub_1CB5C98()
{
}

void sub_1CB5CA4()
{
}

void sub_1CB5CB4()
{
}

void sub_1CB5CC0()
{
}

void sub_1CB5CD0()
{
}

void sub_1CB5CDC()
{
}

void sub_1CB5CEC()
{
}

void sub_1CB5CF8()
{
}

void sub_1CB5D08()
{
}

void sub_1CB5D14()
{
}

void sub_1CB5D24()
{
}

void sub_1CB5D30()
{
}

void sub_1CB5D40()
{
}

void sub_1CB5D4C()
{
}

void sub_1CB5D5C()
{
}

void sub_1CB5D68()
{
}

void sub_1CB5D78()
{
}

void sub_1CB5D84()
{
}

void sub_1CB5D94()
{
}

void sub_1CB5DA0()
{
}

void sub_1CB5DB0()
{
}

void sub_1CB5DBC()
{
}

void sub_1CB5DCC()
{
}

void sub_1CB5DD8()
{
}

void sub_1CB5DE8()
{
}

void sub_1CB5DF4()
{
}

void sub_1CB5E04()
{
}

void sub_1CB5E10()
{
}

void sub_1CB5E20()
{
}

void sub_1CB5E2C()
{
}

void sub_1CB5E3C()
{
}

void sub_1CB5E48()
{
}

void sub_1CB5E58()
{
}

void sub_1CB5E64()
{
}

void sub_1CB5E74()
{
}

void sub_1CB5E80()
{
}

void sub_1CB5E90()
{
}

void sub_1CB5E9C()
{
}

void sub_1CB5EAC()
{
}

void sub_1CB5EB8()
{
}

void sub_1CB5EC8()
{
}

void sub_1CB5ED4()
{
}

void sub_1CB5EE4()
{
}

void sub_1CB5EF0()
{
}

void sub_1CB5F00()
{
}

void sub_1CB5F0C()
{
}

void sub_1CB5F1C()
{
}

void sub_1CB5F28()
{
}

void sub_1CB5F38()
{
}

void sub_1CB5F44()
{
}

void sub_1CB5F54()
{
}

void sub_1CB5F60()
{
}

void sub_1CB5F70()
{
}

void sub_1CB5F7C()
{
}

void sub_1CB5F8C()
{
}

void sub_1CB5F98()
{
}

void sub_1CB5FA8()
{
}

void sub_1CB5FB4()
{
}

void sub_1CB5FC4()
{
}

void sub_1CB5FD0()
{
}

void sub_1CB5FE0()
{
}

void sub_1CB5FEC()
{
}

void sub_1CB5FFC()
{
}

void sub_1CB6008()
{
}

void sub_1CB6018()
{
}

void sub_1CB6024()
{
}

void sub_1CB6034()
{
}

void sub_1CB6040()
{
}

void sub_1CB6050()
{
}

void sub_1CB605C()
{
}

void sub_1CB606C()
{
}

void sub_1CB6078()
{
}

void sub_1CB6088()
{
}

void sub_1CB6094()
{
}

void sub_1CB60A4()
{
}

void sub_1CB60B0()
{
}

void sub_1CB60C0()
{
}

void sub_1CB60CC()
{
}

void sub_1CB60DC()
{
}

void sub_1CB60E8()
{
}

void sub_1CB60F8()
{
}

void sub_1CB6104()
{
}

void sub_1CB6114()
{
}

void sub_1CB6120()
{
}

void sub_1CB6130()
{
}

void sub_1CB613C()
{
}

void sub_1CB614C()
{
}

void sub_1CB6158()
{
}

void sub_1CB6168()
{
}

void sub_1CB6174()
{
}

void sub_1CB6184()
{
}

void sub_1CB6190()
{
}

void sub_1CB61A0()
{
}

void sub_1CB61AC()
{
}

void sub_1CB61BC()
{
}

void sub_1CB61C8()
{
}

void sub_1CB61D8()
{
}

void sub_1CB61E4()
{
}

void sub_1CB61F4()
{
}

void sub_1CB6200()
{
}

void sub_1CB6210()
{
}

void sub_1CB621C()
{
}

void sub_1CB622C()
{
}

void sub_1CB6238()
{
}

void sub_1CB6248()
{
}

void sub_1CB6254()
{
}

void sub_1CB6264()
{
}

void sub_1CB6270()
{
}

void sub_1CB6280()
{
}

void sub_1CB628C()
{
}

void sub_1CB629C()
{
}

void sub_1CB62A8()
{
}

void sub_1CB62B8()
{
}

void sub_1CB62C4()
{
}

void sub_1CB62D4()
{
}

void sub_1CB62E0()
{
}

void sub_1CB62F0()
{
}

void sub_1CB62FC()
{
}

void sub_1CB630C()
{
}

void sub_1CB6318()
{
}

void sub_1CB6328()
{
}

void sub_1CB6334()
{
}

void sub_1CB6344()
{
}

void sub_1CB6350()
{
}

void sub_1CB6360()
{
}

void sub_1CB636C()
{
}

void sub_1CB6378()
{
}

void sub_1CB6384()
{
}

void sub_1CB6390()
{
}

void sub_1CB63A0()
{
}

void sub_1CB63AC()
{
}

void sub_1CB63BC()
{
}

void sub_1CB63C8()
{
}

void sub_1CB63D8()
{
}

void sub_1CB63E4()
{
}

void sub_1CB63F4()
{
}

void sub_1CB6400()
{
}

void sub_1CB6410()
{
}

void sub_1CB641C()
{
}

void sub_1CB642C()
{
}

void sub_1CB6438()
{
}

void sub_1CB6448()
{
}

void sub_1CB6454()
{
}

void sub_1CB6464()
{
}

void sub_1CB6470()
{
}

void sub_1CB6480()
{
}

void sub_1CB648C()
{
}

void sub_1CB649C()
{
}

void sub_1CB64A8()
{
}

void sub_1CB64B8()
{
}

void sub_1CB64C4()
{
}

void sub_1CB64D4()
{
}

void sub_1CB64E0()
{
}

void sub_1CB64F0()
{
}

void sub_1CB64FC()
{
}

void sub_1CB650C()
{
}

void sub_1CB6518()
{
}

void sub_1CB6528()
{
}

void sub_1CB6534()
{
}

void sub_1CB6544()
{
}

void sub_1CB6550()
{
}

void sub_1CB6560()
{
}

void sub_1CB656C()
{
}

void sub_1CB657C()
{
}

void sub_1CB6588()
{
}

void sub_1CB6598()
{
}

void sub_1CB65A4()
{
}

void sub_1CB65B4()
{
}

void sub_1CB65C0()
{
}

void sub_1CB65D0()
{
}

void sub_1CB65DC()
{
}

void sub_1CB65EC()
{
}

void sub_1CB65F8()
{
}

void sub_1CB6608()
{
}

void sub_1CB6614()
{
}

void sub_1CB6624()
{
}

void sub_1CB6630()
{
}

void sub_1CB6640()
{
}

void sub_1CB664C()
{
}

void sub_1CB665C()
{
}

void sub_1CB6668()
{
}

void sub_1CB6678()
{
}

void sub_1CB6684()
{
}

void sub_1CB6694()
{
}

void sub_1CB66A0()
{
}

void sub_1CB66B0()
{
}

void sub_1CB66BC()
{
}

void sub_1CB66CC()
{
}

void sub_1CB66D8()
{
}

void sub_1CB66E8()
{
}

void sub_1CB66F4()
{
}

void sub_1CB6704()
{
}

void sub_1CB6710()
{
}

void sub_1CB6720()
{
}

void sub_1CB672C()
{
}

void sub_1CB673C()
{
}

void sub_1CB6748()
{
}

void sub_1CB6758()
{
}

void sub_1CB6764()
{
}

void sub_1CB6774()
{
}

void sub_1CB6780()
{
}

void sub_1CB6790()
{
}

void sub_1CB679C()
{
}

void sub_1CB67AC()
{
}

void sub_1CB67B8()
{
}

void sub_1CB67C8()
{
}

void sub_1CB67D4()
{
}

void sub_1CB67E4()
{
}

void sub_1CB67F0()
{
}

void sub_1CB6800()
{
}

void sub_1CB680C()
{
}

void sub_1CB681C()
{
}

void sub_1CB6828()
{
}

void sub_1CB6838()
{
}

void sub_1CB6844()
{
}

void sub_1CB6854()
{
}

void sub_1CB6860()
{
}

void sub_1CB6870()
{
}

void sub_1CB687C()
{
}

void sub_1CB688C()
{
}

void sub_1CB6898()
{
}

void sub_1CB68A8()
{
}

void sub_1CB68B4()
{
}

void sub_1CB68C4()
{
}

void sub_1CB68D0()
{
}

void sub_1CB68E0()
{
}

void sub_1CB68EC()
{
}

void sub_1CB68FC()
{
}

void sub_1CB6908()
{
}

void sub_1CB6918()
{
}

void sub_1CB6924()
{
}

void sub_1CB6934()
{
}

void sub_1CB6940()
{
}

void sub_1CB6950()
{
}

void sub_1CB695C()
{
}

void sub_1CB696C()
{
}

void sub_1CB6978()
{
}

void sub_1CB6988()
{
}

void sub_1CB6994()
{
}

void sub_1CB69A4()
{
}

void sub_1CB69B0()
{
}

void sub_1CB69C0()
{
}

void sub_1CB69CC()
{
}

void sub_1CB69DC()
{
}

void sub_1CB69E8()
{
}

void sub_1CB69F8()
{
}

void sub_1CB6A04()
{
}