void sub_202E4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,char a56)
{
  uint64_t v56;

  if (a33 < 0)
  {
    operator delete(__p);
    if ((a54 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a47 & 0x80000000) == 0)
      {
LABEL_8:
        sub_21793C(v56 - 248);
        _Unwind_Resume(a1);
      }
LABEL_7:
      operator delete(a42);
      goto LABEL_8;
    }
  }
  else if ((a54 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a49);
  if ((a47 & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_2030A8(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_2030C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  memset(&v105, 0, 144);
  char v102 = 1;
  uint64_t v103 = a1;
  v104 = &v105;
  uint64_t v6 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) == v6) {
    uint64_t v6 = a1 + 40;
  }
  else {
    *(void *)(a1 + 24) = v6 + 40;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v6;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v6 + 8));
  *(void *)(a1 + 136) = *(void *)(v6 + 32);
  if (*(_DWORD *)(a1 + 104) != 40)
  {
    std::operator+<char>();
    v8 = std::string::append(&v90, "'");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    memset(&v88, 0, sizeof(v88));
    std::string::push_back(&v88, 51);
    std::string::push_back(&v88, 54);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 50);
    std::string::size_type size = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v11 = &v88;
    }
    else {
      v11 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v88.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      v12 = (std::string *)((char *)v11 + size - 1);
      if (v12 > v11)
      {
        v13 = &v11->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v14 = *(v13 - 1);
          *(v13 - 1) = v12->__r_.__value_.__s.__data_[0];
          v12->__r_.__value_.__s.__data_[0] = v14;
          v12 = (std::string *)((char *)v12 - 1);
          BOOL v15 = v13++ >= (char *)v12;
        }
        while (!v15);
      }
    }
    v16 = std::string::insert(&v88, 0, "exprtk.hpp:");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v89.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
    v93.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v94 = -1;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long __p = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    int v95 = 1;
    int v92 = *(_DWORD *)(a1 + 104);
    std::string::operator=(&v93, (const std::string *)(a1 + 112));
    uint64_t v94 = *(void *)(a1 + 136);
    std::string::operator=((std::string *)&v96, &__str);
    std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
    uint64_t v18 = *(void *)(a1 + 568);
    uint64_t v19 = *(void *)(a1 + 560);
    uint64_t v20 = 30 * ((v18 - v19) >> 3) - 1;
    if (v18 == v19) {
      uint64_t v20 = 0;
    }
    if (v20 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
    {
      sub_B4B88(a1 + 552);
      uint64_t v19 = *(void *)(a1 + 560);
      uint64_t v18 = *(void *)(a1 + 568);
    }
    if (v18 == v19)
    {
      uint64_t v22 = 0;
    }
    else
    {
      unint64_t v21 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
      uint64_t v22 = *(void *)(v19 + 8 * (v21 / 0x1E)) + 136 * (v21 % 0x1E);
    }
LABEL_59:
    sub_B5158(v22, (uint64_t)&v92);
    ++*(void *)(a1 + 592);
    if (SBYTE7(v100) < 0)
    {
      operator delete((void *)__p);
      if ((SHIBYTE(v98) & 0x80000000) == 0)
      {
LABEL_61:
        if ((SBYTE7(v97) & 0x80000000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_70;
      }
    }
    else if ((SHIBYTE(v98) & 0x80000000) == 0)
    {
      goto LABEL_61;
    }
    operator delete(*((void **)&v97 + 1));
    if ((SBYTE7(v97) & 0x80000000) == 0)
    {
LABEL_62:
      if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_63;
      }
      goto LABEL_71;
    }
LABEL_70:
    operator delete((void *)v96);
    if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_63:
      if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_72;
    }
LABEL_71:
    operator delete(v93.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_64:
      if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_73;
    }
LABEL_72:
    operator delete(v89.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_65:
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_66;
      }
      goto LABEL_74;
    }
LABEL_73:
    operator delete(v88.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_66:
      if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_120;
      }
LABEL_75:
      v53 = (void *)v90.__r_.__value_.__r.__words[0];
      goto LABEL_133;
    }
LABEL_74:
    operator delete(__str.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_75;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) == v7) {
    uint64_t v7 = a1 + 40;
  }
  else {
    *(void *)(a1 + 24) = v7 + 40;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v7;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v7 + 8));
  unint64_t v23 = 0;
  *(void *)(a1 + 136) = *(void *)(v7 + 32);
  uint64_t v24 = a1 + 40;
  do
  {
    uint64_t v25 = sub_B7FE4(a1, 0);
    v105.i64[v23] = v25;
    if (!v25)
    {
      sub_B1D70(v23, (unint64_t)&v87);
      v28 = std::string::insert(&v87, 0, "ERR019 - Failed to parse argument ");
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v88.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      v30 = std::string::append(&v88, " for function: '");
      long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v89.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      int v32 = *(char *)(a3 + 23);
      if (v32 >= 0) {
        v33 = (const std::string::value_type *)a3;
      }
      else {
        v33 = *(const std::string::value_type **)a3;
      }
      if (v32 >= 0) {
        std::string::size_type v34 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        std::string::size_type v34 = *(void *)(a3 + 8);
      }
      v35 = std::string::append(&v89, v33, v34);
      long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
      v90.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v36;
      v35->__r_.__value_.__l.__size_ = 0;
      v35->__r_.__value_.__r.__words[2] = 0;
      v35->__r_.__value_.__r.__words[0] = 0;
      v37 = std::string::append(&v90, "'");
      long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
      __str.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v38;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      memset(&v85, 0, sizeof(v85));
      std::string::push_back(&v85, 56);
      std::string::push_back(&v85, 55);
      std::string::push_back(&v85, 49);
      std::string::push_back(&v85, 49);
      std::string::push_back(&v85, 50);
      std::string::size_type v39 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v40 = &v85;
      }
      else {
        v40 = (std::string *)v85.__r_.__value_.__r.__words[0];
      }
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v39 = v85.__r_.__value_.__l.__size_;
      }
      if (v39)
      {
        v41 = (std::string *)((char *)v40 + v39 - 1);
        if (v41 > v40)
        {
          v42 = &v40->__r_.__value_.__s.__data_[1];
          do
          {
            std::string::value_type v43 = *(v42 - 1);
            *(v42 - 1) = v41->__r_.__value_.__s.__data_[0];
            v41->__r_.__value_.__s.__data_[0] = v43;
            v41 = (std::string *)((char *)v41 - 1);
            BOOL v15 = v42++ >= (char *)v41;
          }
          while (!v15);
        }
      }
      v44 = std::string::insert(&v85, 0, "exprtk.hpp:");
      long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      v86.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
      v93.__r_.__value_.__s.__data_[0] = 0;
      uint64_t v94 = -1;
      long long v96 = 0u;
      long long v97 = 0u;
      long long v98 = 0u;
      long long __p = 0u;
      long long v100 = 0u;
      uint64_t v101 = 0;
      int v95 = 1;
      int v92 = *(_DWORD *)(a1 + 104);
      std::string::operator=(&v93, (const std::string *)(a1 + 112));
      uint64_t v94 = *(void *)(a1 + 136);
      std::string::operator=((std::string *)&v96, &__str);
      std::string::operator=((std::string *)((char *)&v97 + 8), &v86);
      uint64_t v46 = *(void *)(a1 + 568);
      uint64_t v47 = *(void *)(a1 + 560);
      uint64_t v48 = 30 * ((v46 - v47) >> 3) - 1;
      if (v46 == v47) {
        uint64_t v48 = 0;
      }
      if (v48 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
      {
        sub_B4B88(a1 + 552);
        uint64_t v47 = *(void *)(a1 + 560);
        uint64_t v46 = *(void *)(a1 + 568);
      }
      if (v46 == v47)
      {
        uint64_t v50 = 0;
      }
      else
      {
        unint64_t v49 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
        uint64_t v50 = *(void *)(v47 + 8 * (v49 / 0x1E)) + 136 * (v49 % 0x1E);
      }
      sub_B5158(v50, (uint64_t)&v92);
      ++*(void *)(a1 + 592);
      if (SBYTE7(v100) < 0)
      {
        operator delete((void *)__p);
        if ((SHIBYTE(v98) & 0x80000000) == 0)
        {
LABEL_111:
          if ((SBYTE7(v97) & 0x80000000) == 0) {
            goto LABEL_112;
          }
          goto LABEL_124;
        }
      }
      else if ((SHIBYTE(v98) & 0x80000000) == 0)
      {
        goto LABEL_111;
      }
      operator delete(*((void **)&v97 + 1));
      if ((SBYTE7(v97) & 0x80000000) == 0)
      {
LABEL_112:
        if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_113;
        }
        goto LABEL_125;
      }
LABEL_124:
      operator delete((void *)v96);
      if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_113:
        if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_114;
        }
        goto LABEL_126;
      }
LABEL_125:
      operator delete(v93.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_114:
        if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_115;
        }
        goto LABEL_127;
      }
LABEL_126:
      operator delete(v86.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_115:
        if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_116;
        }
        goto LABEL_128;
      }
LABEL_127:
      operator delete(v85.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_116:
        if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_117;
        }
        goto LABEL_129;
      }
LABEL_128:
      operator delete(__str.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_117:
        if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_118;
        }
        goto LABEL_130;
      }
LABEL_129:
      operator delete(v90.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_118:
        if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_119;
        }
        goto LABEL_131;
      }
LABEL_130:
      operator delete(v89.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_119:
        if ((SHIBYTE(v87.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_120;
        }
LABEL_132:
        v53 = (void *)v87.__r_.__value_.__r.__words[0];
LABEL_133:
        operator delete(v53);
        if (!v102) {
          return 0;
        }
        goto LABEL_134;
      }
LABEL_131:
      operator delete(v88.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v87.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_120:
        if (!v102) {
          return 0;
        }
LABEL_134:
        uint64_t v80 = 0;
        v81 = v104;
        while (1)
        {
          uint64_t v82 = v81->i64[v80];
          if (!v82 || (*(unsigned int (**)(uint64_t))(*(void *)v82 + 32))(v82) == 17) {
            goto LABEL_136;
          }
          uint64_t v83 = v81->i64[v80];
          if (v83)
          {
            if ((*(unsigned int (**)(uint64_t))(*(void *)v83 + 32))(v83) == 18) {
              goto LABEL_136;
            }
            uint64_t v84 = v81->i64[v80];
            if (v84) {
              (*(void (**)(uint64_t))(*(void *)v84 + 8))(v84);
            }
          }
          v81->i64[v80] = 0;
LABEL_136:
          if (++v80 == 18) {
            return 0;
          }
        }
      }
      goto LABEL_132;
    }
    if (v23 <= 0x10)
    {
      if (*(_DWORD *)(a1 + 104) != 44)
      {
        std::operator+<char>();
        v54 = std::string::append(&v90, "'");
        long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
        __str.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v55;
        v54->__r_.__value_.__l.__size_ = 0;
        v54->__r_.__value_.__r.__words[2] = 0;
        v54->__r_.__value_.__r.__words[0] = 0;
        memset(&v88, 0, sizeof(v88));
        std::string::push_back(&v88, 48);
        std::string::push_back(&v88, 57);
        std::string::push_back(&v88, 49);
        std::string::push_back(&v88, 49);
        std::string::push_back(&v88, 50);
        std::string::size_type v56 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
        if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v57 = &v88;
        }
        else {
          v57 = (std::string *)v88.__r_.__value_.__r.__words[0];
        }
        if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v56 = v88.__r_.__value_.__l.__size_;
        }
        if (v56)
        {
          v58 = (std::string *)((char *)v57 + v56 - 1);
          if (v58 > v57)
          {
            v59 = &v57->__r_.__value_.__s.__data_[1];
            do
            {
              std::string::value_type v60 = *(v59 - 1);
              *(v59 - 1) = v58->__r_.__value_.__s.__data_[0];
              v58->__r_.__value_.__s.__data_[0] = v60;
              v58 = (std::string *)((char *)v58 - 1);
              BOOL v15 = v59++ >= (char *)v58;
            }
            while (!v15);
          }
        }
        v61 = std::string::insert(&v88, 0, "exprtk.hpp:");
        long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
        v89.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v62;
        v61->__r_.__value_.__l.__size_ = 0;
        v61->__r_.__value_.__r.__words[2] = 0;
        v61->__r_.__value_.__r.__words[0] = 0;
        *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
        v93.__r_.__value_.__s.__data_[0] = 0;
        uint64_t v94 = -1;
        long long v96 = 0u;
        long long v97 = 0u;
        long long v98 = 0u;
        long long __p = 0u;
        long long v100 = 0u;
        uint64_t v101 = 0;
        int v95 = 1;
        int v92 = *(_DWORD *)(a1 + 104);
        std::string::operator=(&v93, (const std::string *)(a1 + 112));
        uint64_t v94 = *(void *)(a1 + 136);
        std::string::operator=((std::string *)&v96, &__str);
        std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
        uint64_t v63 = *(void *)(a1 + 568);
        uint64_t v64 = *(void *)(a1 + 560);
        uint64_t v65 = 30 * ((v63 - v64) >> 3) - 1;
        if (v63 == v64) {
          uint64_t v65 = 0;
        }
        if (v65 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
        {
          sub_B4B88(a1 + 552);
          uint64_t v64 = *(void *)(a1 + 560);
          uint64_t v63 = *(void *)(a1 + 568);
        }
        if (v63 == v64)
        {
          uint64_t v22 = 0;
        }
        else
        {
          unint64_t v66 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
          uint64_t v22 = *(void *)(v64 + 8 * (v66 / 0x1E)) + 136 * (v66 % 0x1E);
        }
        goto LABEL_59;
      }
      uint64_t v26 = *(void *)(a1 + 24);
      uint64_t v27 = a1 + 40;
      if (*(void *)(a1 + 8) != v26)
      {
        *(void *)(a1 + 24) = v26 + 40;
        uint64_t v27 = v26;
      }
      *(_DWORD *)(a1 + 104) = *(_DWORD *)v27;
      std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v27 + 8));
      *(void *)(a1 + 136) = *(void *)(v27 + 32);
    }
    ++v23;
  }
  while (v23 != 18);
  if (*(_DWORD *)(a1 + 104) != 41)
  {
    std::operator+<char>();
    v67 = std::string::append(&v90, "'");
    long long v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v67->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v68;
    v67->__r_.__value_.__l.__size_ = 0;
    v67->__r_.__value_.__r.__words[2] = 0;
    v67->__r_.__value_.__r.__words[0] = 0;
    memset(&v88, 0, sizeof(v88));
    std::string::push_back(&v88, 51);
    std::string::push_back(&v88, 48);
    std::string::push_back(&v88, 50);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 50);
    std::string::size_type v69 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v70 = &v88;
    }
    else {
      v70 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v69 = v88.__r_.__value_.__l.__size_;
    }
    if (v69)
    {
      v71 = (std::string *)((char *)v70 + v69 - 1);
      if (v71 > v70)
      {
        v72 = &v70->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v73 = *(v72 - 1);
          *(v72 - 1) = v71->__r_.__value_.__s.__data_[0];
          v71->__r_.__value_.__s.__data_[0] = v73;
          v71 = (std::string *)((char *)v71 - 1);
          BOOL v15 = v72++ >= (char *)v71;
        }
        while (!v15);
      }
    }
    v74 = std::string::insert(&v88, 0, "exprtk.hpp:");
    long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
    v89.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v75;
    v74->__r_.__value_.__l.__size_ = 0;
    v74->__r_.__value_.__r.__words[2] = 0;
    v74->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
    v93.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v94 = -1;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long __p = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    int v95 = 1;
    int v92 = *(_DWORD *)(a1 + 104);
    std::string::operator=(&v93, (const std::string *)(a1 + 112));
    uint64_t v94 = *(void *)(a1 + 136);
    std::string::operator=((std::string *)&v96, &__str);
    std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
    uint64_t v76 = *(void *)(a1 + 568);
    uint64_t v77 = *(void *)(a1 + 560);
    uint64_t v78 = 30 * ((v76 - v77) >> 3) - 1;
    if (v76 == v77) {
      uint64_t v78 = 0;
    }
    if (v78 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
    {
      sub_B4B88(a1 + 552);
      uint64_t v77 = *(void *)(a1 + 560);
      uint64_t v76 = *(void *)(a1 + 568);
    }
    if (v76 == v77)
    {
      uint64_t v22 = 0;
    }
    else
    {
      unint64_t v79 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
      uint64_t v22 = *(void *)(v77 + 8 * (v79 / 0x1E)) + 136 * (v79 % 0x1E);
    }
    goto LABEL_59;
  }
  uint64_t v51 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) != v51)
  {
    *(void *)(a1 + 24) = v51 + 40;
    uint64_t v24 = v51;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v24;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v24 + 8));
  *(void *)(a1 + 136) = *(void *)(v24 + 32);
  return sub_218B84(a1 + 344, a2, &v105);
}

void sub_203DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a42 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0)
      {
LABEL_8:
        sub_218EBC((uint64_t)&a61);
        _Unwind_Resume(a1);
      }
LABEL_7:
      operator delete(a30);
      goto LABEL_8;
    }
  }
  else if ((a42 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a37);
  if ((a35 & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_204034(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_20404C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v106 = 0;
  memset(&v105, 0, 144);
  char v102 = 1;
  uint64_t v103 = a1;
  v104 = &v105;
  uint64_t v6 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) == v6) {
    uint64_t v6 = a1 + 40;
  }
  else {
    *(void *)(a1 + 24) = v6 + 40;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v6;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v6 + 8));
  *(void *)(a1 + 136) = *(void *)(v6 + 32);
  if (*(_DWORD *)(a1 + 104) != 40)
  {
    std::operator+<char>();
    v8 = std::string::append(&v90, "'");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    memset(&v88, 0, sizeof(v88));
    std::string::push_back(&v88, 51);
    std::string::push_back(&v88, 54);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 50);
    std::string::size_type size = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v11 = &v88;
    }
    else {
      v11 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v88.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      v12 = (std::string *)((char *)v11 + size - 1);
      if (v12 > v11)
      {
        v13 = &v11->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v14 = *(v13 - 1);
          *(v13 - 1) = v12->__r_.__value_.__s.__data_[0];
          v12->__r_.__value_.__s.__data_[0] = v14;
          v12 = (std::string *)((char *)v12 - 1);
          BOOL v15 = v13++ >= (char *)v12;
        }
        while (!v15);
      }
    }
    v16 = std::string::insert(&v88, 0, "exprtk.hpp:");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v89.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
    v93.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v94 = -1;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long __p = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    int v95 = 1;
    int v92 = *(_DWORD *)(a1 + 104);
    std::string::operator=(&v93, (const std::string *)(a1 + 112));
    uint64_t v94 = *(void *)(a1 + 136);
    std::string::operator=((std::string *)&v96, &__str);
    std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
    uint64_t v18 = *(void *)(a1 + 568);
    uint64_t v19 = *(void *)(a1 + 560);
    uint64_t v20 = 30 * ((v18 - v19) >> 3) - 1;
    if (v18 == v19) {
      uint64_t v20 = 0;
    }
    if (v20 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
    {
      sub_B4B88(a1 + 552);
      uint64_t v19 = *(void *)(a1 + 560);
      uint64_t v18 = *(void *)(a1 + 568);
    }
    if (v18 == v19)
    {
      uint64_t v22 = 0;
    }
    else
    {
      unint64_t v21 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
      uint64_t v22 = *(void *)(v19 + 8 * (v21 / 0x1E)) + 136 * (v21 % 0x1E);
    }
LABEL_59:
    sub_B5158(v22, (uint64_t)&v92);
    ++*(void *)(a1 + 592);
    if (SBYTE7(v100) < 0)
    {
      operator delete((void *)__p);
      if ((SHIBYTE(v98) & 0x80000000) == 0)
      {
LABEL_61:
        if ((SBYTE7(v97) & 0x80000000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_70;
      }
    }
    else if ((SHIBYTE(v98) & 0x80000000) == 0)
    {
      goto LABEL_61;
    }
    operator delete(*((void **)&v97 + 1));
    if ((SBYTE7(v97) & 0x80000000) == 0)
    {
LABEL_62:
      if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_63;
      }
      goto LABEL_71;
    }
LABEL_70:
    operator delete((void *)v96);
    if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_63:
      if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_72;
    }
LABEL_71:
    operator delete(v93.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_64:
      if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_73;
    }
LABEL_72:
    operator delete(v89.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_65:
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_66;
      }
      goto LABEL_74;
    }
LABEL_73:
    operator delete(v88.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_66:
      if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_120;
      }
LABEL_75:
      v53 = (void *)v90.__r_.__value_.__r.__words[0];
      goto LABEL_133;
    }
LABEL_74:
    operator delete(__str.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_75;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) == v7) {
    uint64_t v7 = a1 + 40;
  }
  else {
    *(void *)(a1 + 24) = v7 + 40;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v7;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v7 + 8));
  unint64_t v23 = 0;
  *(void *)(a1 + 136) = *(void *)(v7 + 32);
  uint64_t v24 = a1 + 40;
  do
  {
    uint64_t v25 = sub_B7FE4(a1, 0);
    v105.i64[v23] = v25;
    if (!v25)
    {
      sub_B1D70(v23, (unint64_t)&v87);
      v28 = std::string::insert(&v87, 0, "ERR019 - Failed to parse argument ");
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v88.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      v30 = std::string::append(&v88, " for function: '");
      long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v89.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      int v32 = *(char *)(a3 + 23);
      if (v32 >= 0) {
        v33 = (const std::string::value_type *)a3;
      }
      else {
        v33 = *(const std::string::value_type **)a3;
      }
      if (v32 >= 0) {
        std::string::size_type v34 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        std::string::size_type v34 = *(void *)(a3 + 8);
      }
      v35 = std::string::append(&v89, v33, v34);
      long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
      v90.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v36;
      v35->__r_.__value_.__l.__size_ = 0;
      v35->__r_.__value_.__r.__words[2] = 0;
      v35->__r_.__value_.__r.__words[0] = 0;
      v37 = std::string::append(&v90, "'");
      long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
      __str.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v38;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      memset(&v85, 0, sizeof(v85));
      std::string::push_back(&v85, 56);
      std::string::push_back(&v85, 55);
      std::string::push_back(&v85, 49);
      std::string::push_back(&v85, 49);
      std::string::push_back(&v85, 50);
      std::string::size_type v39 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v40 = &v85;
      }
      else {
        v40 = (std::string *)v85.__r_.__value_.__r.__words[0];
      }
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v39 = v85.__r_.__value_.__l.__size_;
      }
      if (v39)
      {
        v41 = (std::string *)((char *)v40 + v39 - 1);
        if (v41 > v40)
        {
          v42 = &v40->__r_.__value_.__s.__data_[1];
          do
          {
            std::string::value_type v43 = *(v42 - 1);
            *(v42 - 1) = v41->__r_.__value_.__s.__data_[0];
            v41->__r_.__value_.__s.__data_[0] = v43;
            v41 = (std::string *)((char *)v41 - 1);
            BOOL v15 = v42++ >= (char *)v41;
          }
          while (!v15);
        }
      }
      v44 = std::string::insert(&v85, 0, "exprtk.hpp:");
      long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      v86.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
      v93.__r_.__value_.__s.__data_[0] = 0;
      uint64_t v94 = -1;
      long long v96 = 0u;
      long long v97 = 0u;
      long long v98 = 0u;
      long long __p = 0u;
      long long v100 = 0u;
      uint64_t v101 = 0;
      int v95 = 1;
      int v92 = *(_DWORD *)(a1 + 104);
      std::string::operator=(&v93, (const std::string *)(a1 + 112));
      uint64_t v94 = *(void *)(a1 + 136);
      std::string::operator=((std::string *)&v96, &__str);
      std::string::operator=((std::string *)((char *)&v97 + 8), &v86);
      uint64_t v46 = *(void *)(a1 + 568);
      uint64_t v47 = *(void *)(a1 + 560);
      uint64_t v48 = 30 * ((v46 - v47) >> 3) - 1;
      if (v46 == v47) {
        uint64_t v48 = 0;
      }
      if (v48 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
      {
        sub_B4B88(a1 + 552);
        uint64_t v47 = *(void *)(a1 + 560);
        uint64_t v46 = *(void *)(a1 + 568);
      }
      if (v46 == v47)
      {
        uint64_t v50 = 0;
      }
      else
      {
        unint64_t v49 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
        uint64_t v50 = *(void *)(v47 + 8 * (v49 / 0x1E)) + 136 * (v49 % 0x1E);
      }
      sub_B5158(v50, (uint64_t)&v92);
      ++*(void *)(a1 + 592);
      if (SBYTE7(v100) < 0)
      {
        operator delete((void *)__p);
        if ((SHIBYTE(v98) & 0x80000000) == 0)
        {
LABEL_111:
          if ((SBYTE7(v97) & 0x80000000) == 0) {
            goto LABEL_112;
          }
          goto LABEL_124;
        }
      }
      else if ((SHIBYTE(v98) & 0x80000000) == 0)
      {
        goto LABEL_111;
      }
      operator delete(*((void **)&v97 + 1));
      if ((SBYTE7(v97) & 0x80000000) == 0)
      {
LABEL_112:
        if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_113;
        }
        goto LABEL_125;
      }
LABEL_124:
      operator delete((void *)v96);
      if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_113:
        if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_114;
        }
        goto LABEL_126;
      }
LABEL_125:
      operator delete(v93.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_114:
        if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_115;
        }
        goto LABEL_127;
      }
LABEL_126:
      operator delete(v86.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_115:
        if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_116;
        }
        goto LABEL_128;
      }
LABEL_127:
      operator delete(v85.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_116:
        if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_117;
        }
        goto LABEL_129;
      }
LABEL_128:
      operator delete(__str.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_117:
        if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_118;
        }
        goto LABEL_130;
      }
LABEL_129:
      operator delete(v90.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_118:
        if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_119;
        }
        goto LABEL_131;
      }
LABEL_130:
      operator delete(v89.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_119:
        if ((SHIBYTE(v87.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_120;
        }
LABEL_132:
        v53 = (void *)v87.__r_.__value_.__r.__words[0];
LABEL_133:
        operator delete(v53);
        if (!v102) {
          return 0;
        }
        goto LABEL_134;
      }
LABEL_131:
      operator delete(v88.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v87.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_120:
        if (!v102) {
          return 0;
        }
LABEL_134:
        uint64_t v80 = 0;
        v81 = v104;
        while (1)
        {
          uint64_t v82 = v81->i64[v80];
          if (!v82 || (*(unsigned int (**)(uint64_t))(*(void *)v82 + 32))(v82) == 17) {
            goto LABEL_136;
          }
          uint64_t v83 = v81->i64[v80];
          if (v83)
          {
            if ((*(unsigned int (**)(uint64_t))(*(void *)v83 + 32))(v83) == 18) {
              goto LABEL_136;
            }
            uint64_t v84 = v81->i64[v80];
            if (v84) {
              (*(void (**)(uint64_t))(*(void *)v84 + 8))(v84);
            }
          }
          v81->i64[v80] = 0;
LABEL_136:
          if (++v80 == 19) {
            return 0;
          }
        }
      }
      goto LABEL_132;
    }
    if (v23 <= 0x11)
    {
      if (*(_DWORD *)(a1 + 104) != 44)
      {
        std::operator+<char>();
        v54 = std::string::append(&v90, "'");
        long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
        __str.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v55;
        v54->__r_.__value_.__l.__size_ = 0;
        v54->__r_.__value_.__r.__words[2] = 0;
        v54->__r_.__value_.__r.__words[0] = 0;
        memset(&v88, 0, sizeof(v88));
        std::string::push_back(&v88, 48);
        std::string::push_back(&v88, 57);
        std::string::push_back(&v88, 49);
        std::string::push_back(&v88, 49);
        std::string::push_back(&v88, 50);
        std::string::size_type v56 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
        if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v57 = &v88;
        }
        else {
          v57 = (std::string *)v88.__r_.__value_.__r.__words[0];
        }
        if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v56 = v88.__r_.__value_.__l.__size_;
        }
        if (v56)
        {
          v58 = (std::string *)((char *)v57 + v56 - 1);
          if (v58 > v57)
          {
            v59 = &v57->__r_.__value_.__s.__data_[1];
            do
            {
              std::string::value_type v60 = *(v59 - 1);
              *(v59 - 1) = v58->__r_.__value_.__s.__data_[0];
              v58->__r_.__value_.__s.__data_[0] = v60;
              v58 = (std::string *)((char *)v58 - 1);
              BOOL v15 = v59++ >= (char *)v58;
            }
            while (!v15);
          }
        }
        v61 = std::string::insert(&v88, 0, "exprtk.hpp:");
        long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
        v89.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v62;
        v61->__r_.__value_.__l.__size_ = 0;
        v61->__r_.__value_.__r.__words[2] = 0;
        v61->__r_.__value_.__r.__words[0] = 0;
        *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
        v93.__r_.__value_.__s.__data_[0] = 0;
        uint64_t v94 = -1;
        long long v96 = 0u;
        long long v97 = 0u;
        long long v98 = 0u;
        long long __p = 0u;
        long long v100 = 0u;
        uint64_t v101 = 0;
        int v95 = 1;
        int v92 = *(_DWORD *)(a1 + 104);
        std::string::operator=(&v93, (const std::string *)(a1 + 112));
        uint64_t v94 = *(void *)(a1 + 136);
        std::string::operator=((std::string *)&v96, &__str);
        std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
        uint64_t v63 = *(void *)(a1 + 568);
        uint64_t v64 = *(void *)(a1 + 560);
        uint64_t v65 = 30 * ((v63 - v64) >> 3) - 1;
        if (v63 == v64) {
          uint64_t v65 = 0;
        }
        if (v65 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
        {
          sub_B4B88(a1 + 552);
          uint64_t v64 = *(void *)(a1 + 560);
          uint64_t v63 = *(void *)(a1 + 568);
        }
        if (v63 == v64)
        {
          uint64_t v22 = 0;
        }
        else
        {
          unint64_t v66 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
          uint64_t v22 = *(void *)(v64 + 8 * (v66 / 0x1E)) + 136 * (v66 % 0x1E);
        }
        goto LABEL_59;
      }
      uint64_t v26 = *(void *)(a1 + 24);
      uint64_t v27 = a1 + 40;
      if (*(void *)(a1 + 8) != v26)
      {
        *(void *)(a1 + 24) = v26 + 40;
        uint64_t v27 = v26;
      }
      *(_DWORD *)(a1 + 104) = *(_DWORD *)v27;
      std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v27 + 8));
      *(void *)(a1 + 136) = *(void *)(v27 + 32);
    }
    ++v23;
  }
  while (v23 != 19);
  if (*(_DWORD *)(a1 + 104) != 41)
  {
    std::operator+<char>();
    v67 = std::string::append(&v90, "'");
    long long v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v67->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v68;
    v67->__r_.__value_.__l.__size_ = 0;
    v67->__r_.__value_.__r.__words[2] = 0;
    v67->__r_.__value_.__r.__words[0] = 0;
    memset(&v88, 0, sizeof(v88));
    std::string::push_back(&v88, 51);
    std::string::push_back(&v88, 48);
    std::string::push_back(&v88, 50);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 50);
    std::string::size_type v69 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v70 = &v88;
    }
    else {
      v70 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v69 = v88.__r_.__value_.__l.__size_;
    }
    if (v69)
    {
      v71 = (std::string *)((char *)v70 + v69 - 1);
      if (v71 > v70)
      {
        v72 = &v70->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v73 = *(v72 - 1);
          *(v72 - 1) = v71->__r_.__value_.__s.__data_[0];
          v71->__r_.__value_.__s.__data_[0] = v73;
          v71 = (std::string *)((char *)v71 - 1);
          BOOL v15 = v72++ >= (char *)v71;
        }
        while (!v15);
      }
    }
    v74 = std::string::insert(&v88, 0, "exprtk.hpp:");
    long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
    v89.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v75;
    v74->__r_.__value_.__l.__size_ = 0;
    v74->__r_.__value_.__r.__words[2] = 0;
    v74->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
    v93.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v94 = -1;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long __p = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    int v95 = 1;
    int v92 = *(_DWORD *)(a1 + 104);
    std::string::operator=(&v93, (const std::string *)(a1 + 112));
    uint64_t v94 = *(void *)(a1 + 136);
    std::string::operator=((std::string *)&v96, &__str);
    std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
    uint64_t v76 = *(void *)(a1 + 568);
    uint64_t v77 = *(void *)(a1 + 560);
    uint64_t v78 = 30 * ((v76 - v77) >> 3) - 1;
    if (v76 == v77) {
      uint64_t v78 = 0;
    }
    if (v78 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
    {
      sub_B4B88(a1 + 552);
      uint64_t v77 = *(void *)(a1 + 560);
      uint64_t v76 = *(void *)(a1 + 568);
    }
    if (v76 == v77)
    {
      uint64_t v22 = 0;
    }
    else
    {
      unint64_t v79 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
      uint64_t v22 = *(void *)(v77 + 8 * (v79 / 0x1E)) + 136 * (v79 % 0x1E);
    }
    goto LABEL_59;
  }
  uint64_t v51 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) != v51)
  {
    *(void *)(a1 + 24) = v51 + 40;
    uint64_t v24 = v51;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v24;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v24 + 8));
  *(void *)(a1 + 136) = *(void *)(v24 + 32);
  return sub_219E1C(a1 + 344, a2, &v105);
}

void sub_204D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a42 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0)
      {
LABEL_8:
        sub_21A15C((uint64_t)&a61);
        _Unwind_Resume(a1);
      }
LABEL_7:
      operator delete(a30);
      goto LABEL_8;
    }
  }
  else if ((a42 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a37);
  if ((a35 & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_204FC4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

uint64_t sub_204FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  memset(&v105, 0, 160);
  char v102 = 1;
  uint64_t v103 = a1;
  v104 = &v105;
  uint64_t v6 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) == v6) {
    uint64_t v6 = a1 + 40;
  }
  else {
    *(void *)(a1 + 24) = v6 + 40;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v6;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v6 + 8));
  *(void *)(a1 + 136) = *(void *)(v6 + 32);
  if (*(_DWORD *)(a1 + 104) != 40)
  {
    std::operator+<char>();
    v8 = std::string::append(&v90, "'");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    memset(&v88, 0, sizeof(v88));
    std::string::push_back(&v88, 51);
    std::string::push_back(&v88, 54);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 50);
    std::string::size_type size = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v11 = &v88;
    }
    else {
      v11 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v88.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      v12 = (std::string *)((char *)v11 + size - 1);
      if (v12 > v11)
      {
        v13 = &v11->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v14 = *(v13 - 1);
          *(v13 - 1) = v12->__r_.__value_.__s.__data_[0];
          v12->__r_.__value_.__s.__data_[0] = v14;
          v12 = (std::string *)((char *)v12 - 1);
          BOOL v15 = v13++ >= (char *)v12;
        }
        while (!v15);
      }
    }
    v16 = std::string::insert(&v88, 0, "exprtk.hpp:");
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v89.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
    v93.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v94 = -1;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long __p = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    int v95 = 1;
    int v92 = *(_DWORD *)(a1 + 104);
    std::string::operator=(&v93, (const std::string *)(a1 + 112));
    uint64_t v94 = *(void *)(a1 + 136);
    std::string::operator=((std::string *)&v96, &__str);
    std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
    uint64_t v18 = *(void *)(a1 + 568);
    uint64_t v19 = *(void *)(a1 + 560);
    uint64_t v20 = 30 * ((v18 - v19) >> 3) - 1;
    if (v18 == v19) {
      uint64_t v20 = 0;
    }
    if (v20 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
    {
      sub_B4B88(a1 + 552);
      uint64_t v19 = *(void *)(a1 + 560);
      uint64_t v18 = *(void *)(a1 + 568);
    }
    if (v18 == v19)
    {
      uint64_t v22 = 0;
    }
    else
    {
      unint64_t v21 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
      uint64_t v22 = *(void *)(v19 + 8 * (v21 / 0x1E)) + 136 * (v21 % 0x1E);
    }
LABEL_59:
    sub_B5158(v22, (uint64_t)&v92);
    ++*(void *)(a1 + 592);
    if (SBYTE7(v100) < 0)
    {
      operator delete((void *)__p);
      if ((SHIBYTE(v98) & 0x80000000) == 0)
      {
LABEL_61:
        if ((SBYTE7(v97) & 0x80000000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_70;
      }
    }
    else if ((SHIBYTE(v98) & 0x80000000) == 0)
    {
      goto LABEL_61;
    }
    operator delete(*((void **)&v97 + 1));
    if ((SBYTE7(v97) & 0x80000000) == 0)
    {
LABEL_62:
      if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_63;
      }
      goto LABEL_71;
    }
LABEL_70:
    operator delete((void *)v96);
    if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_63:
      if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_64;
      }
      goto LABEL_72;
    }
LABEL_71:
    operator delete(v93.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_64:
      if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_65;
      }
      goto LABEL_73;
    }
LABEL_72:
    operator delete(v89.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_65:
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_66;
      }
      goto LABEL_74;
    }
LABEL_73:
    operator delete(v88.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_66:
      if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_120;
      }
LABEL_75:
      v53 = (void *)v90.__r_.__value_.__r.__words[0];
      goto LABEL_133;
    }
LABEL_74:
    operator delete(__str.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_75;
  }
  uint64_t v7 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) == v7) {
    uint64_t v7 = a1 + 40;
  }
  else {
    *(void *)(a1 + 24) = v7 + 40;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v7;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v7 + 8));
  unint64_t v23 = 0;
  *(void *)(a1 + 136) = *(void *)(v7 + 32);
  uint64_t v24 = a1 + 40;
  do
  {
    uint64_t v25 = sub_B7FE4(a1, 0);
    v105.i64[v23] = v25;
    if (!v25)
    {
      sub_B1D70(v23, (unint64_t)&v87);
      v28 = std::string::insert(&v87, 0, "ERR019 - Failed to parse argument ");
      long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
      v88.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v29;
      v28->__r_.__value_.__l.__size_ = 0;
      v28->__r_.__value_.__r.__words[2] = 0;
      v28->__r_.__value_.__r.__words[0] = 0;
      v30 = std::string::append(&v88, " for function: '");
      long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
      v89.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v31;
      v30->__r_.__value_.__l.__size_ = 0;
      v30->__r_.__value_.__r.__words[2] = 0;
      v30->__r_.__value_.__r.__words[0] = 0;
      int v32 = *(char *)(a3 + 23);
      if (v32 >= 0) {
        v33 = (const std::string::value_type *)a3;
      }
      else {
        v33 = *(const std::string::value_type **)a3;
      }
      if (v32 >= 0) {
        std::string::size_type v34 = *(unsigned __int8 *)(a3 + 23);
      }
      else {
        std::string::size_type v34 = *(void *)(a3 + 8);
      }
      v35 = std::string::append(&v89, v33, v34);
      long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
      v90.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v90.__r_.__value_.__l.__data_ = v36;
      v35->__r_.__value_.__l.__size_ = 0;
      v35->__r_.__value_.__r.__words[2] = 0;
      v35->__r_.__value_.__r.__words[0] = 0;
      v37 = std::string::append(&v90, "'");
      long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
      __str.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v38;
      v37->__r_.__value_.__l.__size_ = 0;
      v37->__r_.__value_.__r.__words[2] = 0;
      v37->__r_.__value_.__r.__words[0] = 0;
      memset(&v85, 0, sizeof(v85));
      std::string::push_back(&v85, 56);
      std::string::push_back(&v85, 55);
      std::string::push_back(&v85, 49);
      std::string::push_back(&v85, 49);
      std::string::push_back(&v85, 50);
      std::string::size_type v39 = HIBYTE(v85.__r_.__value_.__r.__words[2]);
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        v40 = &v85;
      }
      else {
        v40 = (std::string *)v85.__r_.__value_.__r.__words[0];
      }
      if ((v85.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v39 = v85.__r_.__value_.__l.__size_;
      }
      if (v39)
      {
        v41 = (std::string *)((char *)v40 + v39 - 1);
        if (v41 > v40)
        {
          v42 = &v40->__r_.__value_.__s.__data_[1];
          do
          {
            std::string::value_type v43 = *(v42 - 1);
            *(v42 - 1) = v41->__r_.__value_.__s.__data_[0];
            v41->__r_.__value_.__s.__data_[0] = v43;
            v41 = (std::string *)((char *)v41 - 1);
            BOOL v15 = v42++ >= (char *)v41;
          }
          while (!v15);
        }
      }
      v44 = std::string::insert(&v85, 0, "exprtk.hpp:");
      long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      v86.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
      v93.__r_.__value_.__s.__data_[0] = 0;
      uint64_t v94 = -1;
      long long v96 = 0u;
      long long v97 = 0u;
      long long v98 = 0u;
      long long __p = 0u;
      long long v100 = 0u;
      uint64_t v101 = 0;
      int v95 = 1;
      int v92 = *(_DWORD *)(a1 + 104);
      std::string::operator=(&v93, (const std::string *)(a1 + 112));
      uint64_t v94 = *(void *)(a1 + 136);
      std::string::operator=((std::string *)&v96, &__str);
      std::string::operator=((std::string *)((char *)&v97 + 8), &v86);
      uint64_t v46 = *(void *)(a1 + 568);
      uint64_t v47 = *(void *)(a1 + 560);
      uint64_t v48 = 30 * ((v46 - v47) >> 3) - 1;
      if (v46 == v47) {
        uint64_t v48 = 0;
      }
      if (v48 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
      {
        sub_B4B88(a1 + 552);
        uint64_t v47 = *(void *)(a1 + 560);
        uint64_t v46 = *(void *)(a1 + 568);
      }
      if (v46 == v47)
      {
        uint64_t v50 = 0;
      }
      else
      {
        unint64_t v49 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
        uint64_t v50 = *(void *)(v47 + 8 * (v49 / 0x1E)) + 136 * (v49 % 0x1E);
      }
      sub_B5158(v50, (uint64_t)&v92);
      ++*(void *)(a1 + 592);
      if (SBYTE7(v100) < 0)
      {
        operator delete((void *)__p);
        if ((SHIBYTE(v98) & 0x80000000) == 0)
        {
LABEL_111:
          if ((SBYTE7(v97) & 0x80000000) == 0) {
            goto LABEL_112;
          }
          goto LABEL_124;
        }
      }
      else if ((SHIBYTE(v98) & 0x80000000) == 0)
      {
        goto LABEL_111;
      }
      operator delete(*((void **)&v97 + 1));
      if ((SBYTE7(v97) & 0x80000000) == 0)
      {
LABEL_112:
        if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_113;
        }
        goto LABEL_125;
      }
LABEL_124:
      operator delete((void *)v96);
      if ((SHIBYTE(v93.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_113:
        if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_114;
        }
        goto LABEL_126;
      }
LABEL_125:
      operator delete(v93.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v86.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_114:
        if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_115;
        }
        goto LABEL_127;
      }
LABEL_126:
      operator delete(v86.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_115:
        if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_116;
        }
        goto LABEL_128;
      }
LABEL_127:
      operator delete(v85.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_116:
        if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_117;
        }
        goto LABEL_129;
      }
LABEL_128:
      operator delete(__str.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v90.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_117:
        if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_118;
        }
        goto LABEL_130;
      }
LABEL_129:
      operator delete(v90.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v89.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_118:
        if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_119;
        }
        goto LABEL_131;
      }
LABEL_130:
      operator delete(v89.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v88.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_119:
        if ((SHIBYTE(v87.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_120;
        }
LABEL_132:
        v53 = (void *)v87.__r_.__value_.__r.__words[0];
LABEL_133:
        operator delete(v53);
        if (!v102) {
          return 0;
        }
        goto LABEL_134;
      }
LABEL_131:
      operator delete(v88.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v87.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_120:
        if (!v102) {
          return 0;
        }
LABEL_134:
        uint64_t v80 = 0;
        v81 = v104;
        while (1)
        {
          uint64_t v82 = v81->i64[v80];
          if (!v82 || (*(unsigned int (**)(uint64_t))(*(void *)v82 + 32))(v82) == 17) {
            goto LABEL_136;
          }
          uint64_t v83 = v81->i64[v80];
          if (v83)
          {
            if ((*(unsigned int (**)(uint64_t))(*(void *)v83 + 32))(v83) == 18) {
              goto LABEL_136;
            }
            uint64_t v84 = v81->i64[v80];
            if (v84) {
              (*(void (**)(uint64_t))(*(void *)v84 + 8))(v84);
            }
          }
          v81->i64[v80] = 0;
LABEL_136:
          if (++v80 == 20) {
            return 0;
          }
        }
      }
      goto LABEL_132;
    }
    if (v23 <= 0x12)
    {
      if (*(_DWORD *)(a1 + 104) != 44)
      {
        std::operator+<char>();
        v54 = std::string::append(&v90, "'");
        long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
        __str.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v55;
        v54->__r_.__value_.__l.__size_ = 0;
        v54->__r_.__value_.__r.__words[2] = 0;
        v54->__r_.__value_.__r.__words[0] = 0;
        memset(&v88, 0, sizeof(v88));
        std::string::push_back(&v88, 48);
        std::string::push_back(&v88, 57);
        std::string::push_back(&v88, 49);
        std::string::push_back(&v88, 49);
        std::string::push_back(&v88, 50);
        std::string::size_type v56 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
        if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v57 = &v88;
        }
        else {
          v57 = (std::string *)v88.__r_.__value_.__r.__words[0];
        }
        if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v56 = v88.__r_.__value_.__l.__size_;
        }
        if (v56)
        {
          v58 = (std::string *)((char *)v57 + v56 - 1);
          if (v58 > v57)
          {
            v59 = &v57->__r_.__value_.__s.__data_[1];
            do
            {
              std::string::value_type v60 = *(v59 - 1);
              *(v59 - 1) = v58->__r_.__value_.__s.__data_[0];
              v58->__r_.__value_.__s.__data_[0] = v60;
              v58 = (std::string *)((char *)v58 - 1);
              BOOL v15 = v59++ >= (char *)v58;
            }
            while (!v15);
          }
        }
        v61 = std::string::insert(&v88, 0, "exprtk.hpp:");
        long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
        v89.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v62;
        v61->__r_.__value_.__l.__size_ = 0;
        v61->__r_.__value_.__r.__words[2] = 0;
        v61->__r_.__value_.__r.__words[0] = 0;
        *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
        v93.__r_.__value_.__s.__data_[0] = 0;
        uint64_t v94 = -1;
        long long v96 = 0u;
        long long v97 = 0u;
        long long v98 = 0u;
        long long __p = 0u;
        long long v100 = 0u;
        uint64_t v101 = 0;
        int v95 = 1;
        int v92 = *(_DWORD *)(a1 + 104);
        std::string::operator=(&v93, (const std::string *)(a1 + 112));
        uint64_t v94 = *(void *)(a1 + 136);
        std::string::operator=((std::string *)&v96, &__str);
        std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
        uint64_t v63 = *(void *)(a1 + 568);
        uint64_t v64 = *(void *)(a1 + 560);
        uint64_t v65 = 30 * ((v63 - v64) >> 3) - 1;
        if (v63 == v64) {
          uint64_t v65 = 0;
        }
        if (v65 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
        {
          sub_B4B88(a1 + 552);
          uint64_t v64 = *(void *)(a1 + 560);
          uint64_t v63 = *(void *)(a1 + 568);
        }
        if (v63 == v64)
        {
          uint64_t v22 = 0;
        }
        else
        {
          unint64_t v66 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
          uint64_t v22 = *(void *)(v64 + 8 * (v66 / 0x1E)) + 136 * (v66 % 0x1E);
        }
        goto LABEL_59;
      }
      uint64_t v26 = *(void *)(a1 + 24);
      uint64_t v27 = a1 + 40;
      if (*(void *)(a1 + 8) != v26)
      {
        *(void *)(a1 + 24) = v26 + 40;
        uint64_t v27 = v26;
      }
      *(_DWORD *)(a1 + 104) = *(_DWORD *)v27;
      std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v27 + 8));
      *(void *)(a1 + 136) = *(void *)(v27 + 32);
    }
    ++v23;
  }
  while (v23 != 20);
  if (*(_DWORD *)(a1 + 104) != 41)
  {
    std::operator+<char>();
    v67 = std::string::append(&v90, "'");
    long long v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v67->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v68;
    v67->__r_.__value_.__l.__size_ = 0;
    v67->__r_.__value_.__r.__words[2] = 0;
    v67->__r_.__value_.__r.__words[0] = 0;
    memset(&v88, 0, sizeof(v88));
    std::string::push_back(&v88, 51);
    std::string::push_back(&v88, 48);
    std::string::push_back(&v88, 50);
    std::string::push_back(&v88, 49);
    std::string::push_back(&v88, 50);
    std::string::size_type v69 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v70 = &v88;
    }
    else {
      v70 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v69 = v88.__r_.__value_.__l.__size_;
    }
    if (v69)
    {
      v71 = (std::string *)((char *)v70 + v69 - 1);
      if (v71 > v70)
      {
        v72 = &v70->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v73 = *(v72 - 1);
          *(v72 - 1) = v71->__r_.__value_.__s.__data_[0];
          v71->__r_.__value_.__s.__data_[0] = v73;
          v71 = (std::string *)((char *)v71 - 1);
          BOOL v15 = v72++ >= (char *)v71;
        }
        while (!v15);
      }
    }
    v74 = std::string::insert(&v88, 0, "exprtk.hpp:");
    long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
    v89.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v89.__r_.__value_.__l.__data_ = v75;
    v74->__r_.__value_.__l.__size_ = 0;
    v74->__r_.__value_.__r.__words[2] = 0;
    v74->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v93.__r_.__value_.__s + 23) = 0;
    v93.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v94 = -1;
    long long v96 = 0u;
    long long v97 = 0u;
    long long v98 = 0u;
    long long __p = 0u;
    long long v100 = 0u;
    uint64_t v101 = 0;
    int v95 = 1;
    int v92 = *(_DWORD *)(a1 + 104);
    std::string::operator=(&v93, (const std::string *)(a1 + 112));
    uint64_t v94 = *(void *)(a1 + 136);
    std::string::operator=((std::string *)&v96, &__str);
    std::string::operator=((std::string *)((char *)&v97 + 8), &v89);
    uint64_t v76 = *(void *)(a1 + 568);
    uint64_t v77 = *(void *)(a1 + 560);
    uint64_t v78 = 30 * ((v76 - v77) >> 3) - 1;
    if (v76 == v77) {
      uint64_t v78 = 0;
    }
    if (v78 == *(void *)(a1 + 592) + *(void *)(a1 + 584))
    {
      sub_B4B88(a1 + 552);
      uint64_t v77 = *(void *)(a1 + 560);
      uint64_t v76 = *(void *)(a1 + 568);
    }
    if (v76 == v77)
    {
      uint64_t v22 = 0;
    }
    else
    {
      unint64_t v79 = *(void *)(a1 + 592) + *(void *)(a1 + 584);
      uint64_t v22 = *(void *)(v77 + 8 * (v79 / 0x1E)) + 136 * (v79 % 0x1E);
    }
    goto LABEL_59;
  }
  uint64_t v51 = *(void *)(a1 + 24);
  if (*(void *)(a1 + 8) != v51)
  {
    *(void *)(a1 + 24) = v51 + 40;
    uint64_t v24 = v51;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)v24;
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(v24 + 8));
  *(void *)(a1 + 136) = *(void *)(v24 + 32);
  return sub_21B130(a1 + 344, a2, &v105);
}

void sub_205CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  if (a24 < 0)
  {
    operator delete(__p);
    if ((a42 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0)
      {
LABEL_8:
        sub_21B498((uint64_t)&a61);
        _Unwind_Resume(a1);
      }
LABEL_7:
      operator delete(a30);
      goto LABEL_8;
    }
  }
  else if ((a42 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a37);
  if ((a35 & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

void sub_205F50(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_58CC(exception_object);
}

void sub_205F6C()
{
}

double sub_205F80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (!v1) {
    return NAN;
  }
  (*(void (**)(void))(*(void *)v1 + 16))();
  return result;
}

uint64_t sub_205FB8()
{
  return 28;
}

uint64_t sub_205FC0(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    v2 = *(void **)(a1 + 16);
    if (*v2)
    {
      if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 17)
      {
        if (!*v2)
        {
LABEL_8:
          void *v2 = 0;
          return a1;
        }
        if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 18)
        {
          if (*v2) {
            (*(void (**)(void))(*(void *)*v2 + 8))(*v2);
          }
          goto LABEL_8;
        }
      }
    }
  }
  return a1;
}

uint64_t sub_20608C(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3) {
    operator new();
  }
  return 0;
}

uint64_t sub_2063C8(uint64_t a1)
{
  *(void *)a1 = off_242B108;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_206444(uint64_t a1)
{
  *(void *)a1 = off_242B108;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *(void *)(a1 + 24) = 0;
  }

  operator delete();
}

double sub_2064E0(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  (*(void (**)(void, double *))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8), &v3);
  return result;
}

uint64_t sub_2065B4()
{
  return 28;
}

uint64_t sub_2065BC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result = sub_2069C0(a1, a2, a3);
  if (result)
  {
    uint64_t v6 = result;
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
      return v6;
    }
    uint64_t result = 0;
    uint64_t v7 = *a3;
    if (*a3)
    {
      if (a3[1])
      {
        uint64_t v8 = *(void *)(a2 + 32);
        int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 32))(*a3);
        if (v8 == 2)
        {
          if (v9 == 17)
          {
            *(void *)(v6 + 24) = *a3;
            *(unsigned char *)(v6 + 32) = 0;
            uint64_t v10 = a3[1];
            if (v10)
            {
LABEL_10:
              BOOL v11 = (*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) != 17
                 && (*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) != 18;
              *(void *)(v6 + 40) = a3[1];
              *(unsigned char *)(v6 + 48) = v11;
              return v6;
            }
          }
          else
          {
            BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
            *(void *)(v6 + 24) = *a3;
            *(unsigned char *)(v6 + 32) = v12;
            uint64_t v10 = a3[1];
            if (v10) {
              goto LABEL_10;
            }
          }
          uint64_t result = *a3;
          if (!*a3) {
            return result;
          }
          if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 17)
          {
            if (*a3)
            {
              if ((*(unsigned int (**)(uint64_t))(*(void *)*a3 + 32))(*a3) == 18) {
                goto LABEL_29;
              }
              if (*a3) {
                (*(void (**)(uint64_t))(*(void *)*a3 + 8))(*a3);
              }
            }
            *a3 = 0;
          }
LABEL_29:
          uint64_t result = a3[1];
          if (!result) {
            return result;
          }
          if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 17) {
            return 0;
          }
          uint64_t v14 = a3[1];
          if (v14)
          {
            if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 18) {
              return 0;
            }
            goto LABEL_40;
          }
          goto LABEL_42;
        }
        if (v9 != 17)
        {
          if (*a3)
          {
            if ((*(unsigned int (**)(uint64_t))(*(void *)*a3 + 32))(*a3) == 18) {
              goto LABEL_18;
            }
            if (*a3) {
              (*(void (**)(uint64_t))(*(void *)*a3 + 8))(*a3);
            }
          }
          *a3 = 0;
        }
LABEL_18:
        uint64_t result = a3[1];
        if (!result) {
          return result;
        }
        if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 17) {
          return 0;
        }
        uint64_t v13 = a3[1];
        if (v13)
        {
          if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) == 18) {
            return 0;
          }
LABEL_40:
          uint64_t v15 = a3[1];
          if (v15) {
            (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
          }
        }
LABEL_42:
        uint64_t result = 0;
        a3[1] = 0;
      }
    }
  }
  return result;
}

uint64_t sub_2069C0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *a3;
  uint64_t v4 = a3[1];
  if (*a3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6) {
    operator new();
  }
  if (v5)
  {
    if ((*(unsigned int (**)(void))(*(void *)v5 + 32))(*a3) != 17)
    {
      if (!*a3)
      {
LABEL_12:
        *a3 = 0;
        goto LABEL_13;
      }
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
      {
        if (*a3) {
          (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
        }
        goto LABEL_12;
      }
    }
LABEL_13:
    uint64_t v4 = a3[1];
  }
  if (v4 && (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 17)
  {
    uint64_t v7 = a3[1];
    if (v7)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 18) {
        return 0;
      }
      uint64_t v8 = a3[1];
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
      }
    }
    a3[1] = 0;
  }
  return 0;
}

uint64_t sub_206F58(uint64_t a1)
{
  *(void *)a1 = off_242B158;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v5 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5) {
      goto LABEL_16;
    }
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  *(void *)(a1 + 24) = 0;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    BOOL v7 = *(unsigned char *)(a1 + 48) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    return a1;
  }
LABEL_16:
  (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_207034(uint64_t a1)
{
  *(void *)a1 = off_242B158;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    BOOL v5 = *(unsigned char *)(a1 + 48) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    *(void *)(a1 + 40) = 0;
  }

  operator delete();
}

double sub_20710C(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  (*(void (**)(void, double *, double *))(**(void **)(a1 + 8) + 32))(*(void *)(a1 + 8), &v3, &v4);
  return result;
}

uint64_t sub_207214()
{
  return 28;
}

uint64_t sub_20721C(uint64_t a1)
{
  if (!*(unsigned char *)a1) {
    return a1;
  }
  uint64_t v2 = *(void **)(a1 + 16);
  if (*v2 && (*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 17)
  {
    if (!*v2)
    {
LABEL_8:
      void *v2 = 0;
      goto LABEL_9;
    }
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 18)
    {
      if (*v2) {
        (*(void (**)(void))(*(void *)*v2 + 8))(*v2);
      }
      goto LABEL_8;
    }
  }
LABEL_9:
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 8);
  if (v4 && (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 17)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    if (!v5)
    {
LABEL_15:
      *(void *)(v3 + 8) = 0;
      return a1;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18)
    {
      uint64_t v6 = *(void *)(v3 + 8);
      if (v6) {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      }
      goto LABEL_15;
    }
  }
  return a1;
}

uint64_t sub_207384(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3) {
    BOOL v3 = a3[1] == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3 && a3[2] != 0) {
    operator new();
  }
  sub_1BD9D0(*(void *)(a1 + 8), a3);
  return 0;
}

uint64_t sub_207658(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 17)
  {
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  else
  {
    BOOL v9 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v9;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  BOOL v10 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
  *(void *)(a1 + 56) = a2[2];
  *(unsigned char *)(a1 + 64) = v10;
  return 1;
}

uint64_t sub_207834(uint64_t a1)
{
  *(void *)a1 = off_242B1A8;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (!v3)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *(void *)(a1 + 24) = 0;
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v9 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_21;
    }
LABEL_11:
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6) {
      BOOL v7 = *(unsigned char *)(a1 + 64) == 0;
    }
    else {
      BOOL v7 = 1;
    }
    if (!v7) {
      goto LABEL_25;
    }
    return a1;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    BOOL v5 = *(unsigned char *)(a1 + 48) == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5) {
    goto LABEL_11;
  }
LABEL_21:
  (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  *(void *)(a1 + 40) = 0;
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6) {
    BOOL v10 = *(unsigned char *)(a1 + 64) == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10) {
    return a1;
  }
LABEL_25:
  (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_207960(uint64_t a1)
{
  *(void *)a1 = off_242B1A8;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v5 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_23:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      *(void *)(a1 + 40) = 0;
      uint64_t v6 = *(void *)(a1 + 56);
      if (v6) {
        BOOL v9 = *(unsigned char *)(a1 + 64) == 0;
      }
      else {
        BOOL v9 = 1;
      }
      if (!v9)
      {
LABEL_15:
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        *(void *)(a1 + 56) = 0;
      }
LABEL_16:
      operator delete();
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *(void *)(a1 + 24) = 0;
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v8 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v8 = 1;
    }
    if (!v8) {
      goto LABEL_23;
    }
  }
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6) {
    BOOL v7 = *(unsigned char *)(a1 + 64) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7) {
    goto LABEL_15;
  }
  goto LABEL_16;
}

double sub_207AA0(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  (*(void (**)(void, double *, double *, double *))(**(void **)(a1 + 8) + 40))(*(void *)(a1 + 8), &v3, &v4, &v5);
  return result;
}

uint64_t sub_207BE4()
{
  return 28;
}

uint64_t sub_207BEC(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])))) & 1) == 0) {
    operator new();
  }
  sub_1BE7C8(*(void *)(a1 + 8), a3);
  return 0;
}

uint64_t sub_207EEC(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
  {
    BOOL v8 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v8;
    uint64_t v7 = a2[2];
    if (v7) {
      goto LABEL_10;
    }
    return 0;
  }
  *(void *)(a1 + 40) = a2[1];
  *(unsigned char *)(a1 + 48) = 0;
  uint64_t v7 = a2[2];
  if (!v7) {
    return 0;
  }
LABEL_10:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
  {
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = 0;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  else
  {
    BOOL v11 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = v11;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
  *(void *)(a1 + 72) = a2[3];
  *(unsigned char *)(a1 + 80) = v12;
  return 1;
}

void sub_20815C(uint64_t a1)
{
  sub_208314(a1);

  operator delete();
}

double sub_208194(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  (*(void (**)(void, double *, double *, double *, double *))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6);
  return result;
}

uint64_t sub_20830C()
{
  return 28;
}

uint64_t sub_208314(uint64_t a1)
{
  *(void *)a1 = off_242B1F8;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v5 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      *(void *)(a1 + 40) = 0;
      uint64_t v6 = *(void *)(a1 + 56);
      if (v6) {
        BOOL v11 = *(unsigned char *)(a1 + 64) == 0;
      }
      else {
        BOOL v11 = 1;
      }
      if (!v11) {
        goto LABEL_26;
      }
LABEL_16:
      uint64_t v8 = *(void *)(a1 + 72);
      if (v8) {
        goto LABEL_27;
      }
      return a1;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *(void *)(a1 + 24) = 0;
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v10 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v10 = 1;
    }
    if (!v10) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6) {
    BOOL v7 = *(unsigned char *)(a1 + 64) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7) {
    goto LABEL_16;
  }
LABEL_26:
  (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  *(void *)(a1 + 56) = 0;
  uint64_t v8 = *(void *)(a1 + 72);
  if (!v8) {
    return a1;
  }
LABEL_27:
  if (!*(unsigned char *)(a1 + 80)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  *(void *)(a1 + 72) = 0;
  return a1;
}

uint64_t sub_208480(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])))) & 1) == 0
    && a3[2].i64[0])
  {
    operator new();
  }
  sub_2087DC(*(void *)(a1 + 8), a3);
  return 0;
}

uint64_t sub_2087DC(uint64_t a1, void *a2)
{
  if (*a2 && (*(unsigned int (**)(void))(*(void *)*a2 + 32))(*a2) != 17)
  {
    if (!*a2)
    {
LABEL_7:
      *a2 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a2 + 32))(*a2) != 18)
    {
      if (*a2) {
        (*(void (**)(void))(*(void *)*a2 + 8))(*a2);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v3 = a2[1];
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3) != 17)
  {
    uint64_t v4 = a2[1];
    if (!v4)
    {
LABEL_14:
      a2[1] = 0;
      goto LABEL_15;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 18)
    {
      uint64_t v5 = a2[1];
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
      }
      goto LABEL_14;
    }
  }
LABEL_15:
  uint64_t v6 = a2[2];
  if (v6 && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 17)
  {
    uint64_t v7 = a2[2];
    if (!v7)
    {
LABEL_21:
      a2[2] = 0;
      goto LABEL_22;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18)
    {
      uint64_t v8 = a2[2];
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
      }
      goto LABEL_21;
    }
  }
LABEL_22:
  uint64_t v9 = a2[3];
  if (v9 && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    uint64_t v10 = a2[3];
    if (!v10)
    {
LABEL_28:
      a2[3] = 0;
      goto LABEL_29;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) != 18)
    {
      uint64_t v11 = a2[3];
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
      goto LABEL_28;
    }
  }
LABEL_29:
  uint64_t result = a2[4];
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result != 17)
    {
      uint64_t result = a2[4];
      if (result)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
        if (result == 18) {
          return result;
        }
        uint64_t result = a2[4];
        if (result) {
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
        }
      }
      a2[4] = 0;
    }
  }
  return result;
}

uint64_t sub_208AF4(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 17)
  {
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  else
  {
    BOOL v8 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v8;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 17)
  {
    BOOL v10 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = v10;
    uint64_t v9 = a2[3];
    if (v9) {
      goto LABEL_14;
    }
    return 0;
  }
  *(void *)(a1 + 56) = a2[2];
  *(unsigned char *)(a1 + 64) = 0;
  uint64_t v9 = a2[3];
  if (!v9) {
    return 0;
  }
LABEL_14:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17)
  {
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = 0;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  else
  {
    BOOL v13 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = v13;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  BOOL v14 = (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 18;
  *(void *)(a1 + 88) = a2[4];
  *(unsigned char *)(a1 + 96) = v14;
  return 1;
}

void sub_208DF4(uint64_t a1)
{
  sub_208FE8(a1);

  operator delete();
}

double sub_208E2C(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  (*(void (**)(void, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 56))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7);
  return result;
}

uint64_t sub_208FE0()
{
  return 28;
}

uint64_t sub_208FE8(uint64_t a1)
{
  *(void *)a1 = off_242B248;
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    BOOL v3 = *(unsigned char *)(a1 + 32) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v5 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      *(void *)(a1 + 40) = 0;
      uint64_t v6 = *(void *)(a1 + 56);
      if (v6) {
        BOOL v10 = *(unsigned char *)(a1 + 64) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *(void *)(a1 + 24) = 0;
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4) {
      BOOL v9 = *(unsigned char *)(a1 + 48) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = *(void *)(a1 + 56);
  if (v6) {
    BOOL v7 = *(unsigned char *)(a1 + 64) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    *(void *)(a1 + 56) = 0;
    uint64_t v8 = *(void *)(a1 + 72);
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = *(void *)(a1 + 72);
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*(unsigned char *)(a1 + 80))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    *(void *)(a1 + 72) = 0;
  }
LABEL_29:
  uint64_t v11 = *(void *)(a1 + 88);
  if (v11 && *(unsigned char *)(a1 + 96))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    *(void *)(a1 + 88) = 0;
  }
  return a1;
}

uint64_t sub_209180(uint64_t a1)
{
  if (!*(unsigned char *)a1) {
    return a1;
  }
  uint64_t v2 = *(void **)(a1 + 16);
  if (*v2 && (*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 17)
  {
    if (!*v2)
    {
LABEL_8:
      void *v2 = 0;
      goto LABEL_9;
    }
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 18)
    {
      if (*v2) {
        (*(void (**)(void))(*(void *)*v2 + 8))(*v2);
      }
      goto LABEL_8;
    }
  }
LABEL_9:
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 8);
  if (v4 && (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 17)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    if (!v5)
    {
LABEL_15:
      *(void *)(v3 + 8) = 0;
      goto LABEL_16;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18)
    {
      uint64_t v6 = *(void *)(v3 + 8);
      if (v6) {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8 && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 17)
  {
    uint64_t v9 = *(void *)(v7 + 16);
    if (!v9)
    {
LABEL_22:
      *(void *)(v7 + 16) = 0;
      goto LABEL_23;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18)
    {
      uint64_t v10 = *(void *)(v7 + 16);
      if (v10) {
        (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
      }
      goto LABEL_22;
    }
  }
LABEL_23:
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(v11 + 24);
  if (v12 && (*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) != 17)
  {
    uint64_t v13 = *(void *)(v11 + 24);
    if (!v13)
    {
LABEL_29:
      *(void *)(v11 + 24) = 0;
      goto LABEL_30;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18)
    {
      uint64_t v14 = *(void *)(v11 + 24);
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
      }
      goto LABEL_29;
    }
  }
LABEL_30:
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(v15 + 32);
  if (v16 && (*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) != 17)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    if (!v17)
    {
LABEL_36:
      *(void *)(v15 + 32) = 0;
      return a1;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v17 + 32))(v17) != 18)
    {
      uint64_t v18 = *(void *)(v15 + 32);
      if (v18) {
        (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
      }
      goto LABEL_36;
    }
  }
  return a1;
}

uint64_t sub_2094BC(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])))) & 1) == 0)
  {
    if (a3[2].i64[0]) {
      BOOL v3 = a3[2].i64[1] == 0;
    }
    else {
      BOOL v3 = 1;
    }
    if (!v3) {
      operator new();
    }
  }
  sub_20985C(*(void *)(a1 + 8), a3);
  return 0;
}

uint64_t sub_20985C(uint64_t a1, void *a2)
{
  if (*a2 && (*(unsigned int (**)(void))(*(void *)*a2 + 32))(*a2) != 17)
  {
    if (!*a2)
    {
LABEL_7:
      *a2 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a2 + 32))(*a2) != 18)
    {
      if (*a2) {
        (*(void (**)(void))(*(void *)*a2 + 8))(*a2);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v3 = a2[1];
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3) != 17)
  {
    uint64_t v4 = a2[1];
    if (!v4)
    {
LABEL_14:
      a2[1] = 0;
      goto LABEL_15;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 18)
    {
      uint64_t v5 = a2[1];
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
      }
      goto LABEL_14;
    }
  }
LABEL_15:
  uint64_t v6 = a2[2];
  if (v6 && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 17)
  {
    uint64_t v7 = a2[2];
    if (!v7)
    {
LABEL_21:
      a2[2] = 0;
      goto LABEL_22;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18)
    {
      uint64_t v8 = a2[2];
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
      }
      goto LABEL_21;
    }
  }
LABEL_22:
  uint64_t v9 = a2[3];
  if (v9 && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    uint64_t v10 = a2[3];
    if (!v10)
    {
LABEL_28:
      a2[3] = 0;
      goto LABEL_29;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) != 18)
    {
      uint64_t v11 = a2[3];
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
      goto LABEL_28;
    }
  }
LABEL_29:
  uint64_t v12 = a2[4];
  if (v12 && (*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) != 17)
  {
    uint64_t v13 = a2[4];
    if (!v13)
    {
LABEL_35:
      a2[4] = 0;
      goto LABEL_36;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18)
    {
      uint64_t v14 = a2[4];
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
      }
      goto LABEL_35;
    }
  }
LABEL_36:
  uint64_t result = a2[5];
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result != 17)
    {
      uint64_t result = a2[5];
      if (result)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
        if (result == 18) {
          return result;
        }
        uint64_t result = a2[5];
        if (result) {
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
        }
      }
      a2[5] = 0;
    }
  }
  return result;
}

uint64_t sub_209C0C(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 17)
  {
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  else
  {
    BOOL v8 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v8;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
  {
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = 0;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  else
  {
    BOOL v10 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = v10;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = v12;
    uint64_t v11 = a2[4];
    if (v11) {
      goto LABEL_18;
    }
    return 0;
  }
  *(void *)(a1 + 72) = a2[3];
  *(unsigned char *)(a1 + 80) = 0;
  uint64_t v11 = a2[4];
  if (!v11) {
    return 0;
  }
LABEL_18:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) == 17)
  {
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = 0;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  else
  {
    BOOL v15 = (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 18;
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = v15;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  BOOL v16 = (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18;
  *(void *)(a1 + 104) = a2[5];
  *(unsigned char *)(a1 + 112) = v16;
  return 1;
}

void *sub_209F98(void *a1)
{
  *a1 = off_242B298;
  sub_20A230(a1 + 3);
  return a1;
}

void sub_209FDC(void *a1)
{
  *a1 = off_242B298;
  sub_20A230(a1 + 3);

  operator delete();
}

double sub_20A040(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8)
                                                                                             + 64))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8);
  return result;
}

uint64_t sub_20A228()
{
  return 28;
}

uint64_t sub_20A230(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t result = a1[10];
  if (result)
  {
    if (*((unsigned char *)a1 + 88))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[10] = 0;
    }
  }
  return result;
}

uint64_t sub_20A3E0(uint64_t a1)
{
  if (!*(unsigned char *)a1) {
    return a1;
  }
  uint64_t v2 = *(void **)(a1 + 16);
  if (*v2 && (*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 17)
  {
    if (!*v2)
    {
LABEL_8:
      void *v2 = 0;
      goto LABEL_9;
    }
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 18)
    {
      if (*v2) {
        (*(void (**)(void))(*(void *)*v2 + 8))(*v2);
      }
      goto LABEL_8;
    }
  }
LABEL_9:
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 8);
  if (v4 && (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 17)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    if (!v5)
    {
LABEL_15:
      *(void *)(v3 + 8) = 0;
      goto LABEL_16;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18)
    {
      uint64_t v6 = *(void *)(v3 + 8);
      if (v6) {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8 && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 17)
  {
    uint64_t v9 = *(void *)(v7 + 16);
    if (!v9)
    {
LABEL_22:
      *(void *)(v7 + 16) = 0;
      goto LABEL_23;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18)
    {
      uint64_t v10 = *(void *)(v7 + 16);
      if (v10) {
        (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
      }
      goto LABEL_22;
    }
  }
LABEL_23:
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(v11 + 24);
  if (v12 && (*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) != 17)
  {
    uint64_t v13 = *(void *)(v11 + 24);
    if (!v13)
    {
LABEL_29:
      *(void *)(v11 + 24) = 0;
      goto LABEL_30;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18)
    {
      uint64_t v14 = *(void *)(v11 + 24);
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
      }
      goto LABEL_29;
    }
  }
LABEL_30:
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(v15 + 32);
  if (v16 && (*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) != 17)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    if (!v17)
    {
LABEL_36:
      *(void *)(v15 + 32) = 0;
      goto LABEL_37;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v17 + 32))(v17) != 18)
    {
      uint64_t v18 = *(void *)(v15 + 32);
      if (v18) {
        (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
      }
      goto LABEL_36;
    }
  }
LABEL_37:
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(v19 + 40);
  if (v20 && (*(unsigned int (**)(uint64_t))(*(void *)v20 + 32))(v20) != 17)
  {
    uint64_t v21 = *(void *)(v19 + 40);
    if (!v21)
    {
LABEL_43:
      *(void *)(v19 + 40) = 0;
      return a1;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v21 + 32))(v21) != 18)
    {
      uint64_t v22 = *(void *)(v19 + 40);
      if (v22) {
        (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
      }
      goto LABEL_43;
    }
  }
  return a1;
}

uint64_t sub_20A7B8(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])))) & 1) == 0)
  {
    if (a3[2].i64[0]) {
      BOOL v3 = a3[2].i64[1] == 0;
    }
    else {
      BOOL v3 = 1;
    }
    if (!v3 && a3[3].i64[0] != 0) {
      operator new();
    }
  }
  sub_20AA40(*(void *)(a1 + 8), a3);
  return 0;
}

uint64_t sub_20AA40(uint64_t a1, void *a2)
{
  if (*a2 && (*(unsigned int (**)(void))(*(void *)*a2 + 32))(*a2) != 17)
  {
    if (!*a2)
    {
LABEL_7:
      *a2 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a2 + 32))(*a2) != 18)
    {
      if (*a2) {
        (*(void (**)(void))(*(void *)*a2 + 8))(*a2);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v3 = a2[1];
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3) != 17)
  {
    uint64_t v4 = a2[1];
    if (!v4)
    {
LABEL_14:
      a2[1] = 0;
      goto LABEL_15;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 18)
    {
      uint64_t v5 = a2[1];
      if (v5) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
      }
      goto LABEL_14;
    }
  }
LABEL_15:
  uint64_t v6 = a2[2];
  if (v6 && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 17)
  {
    uint64_t v7 = a2[2];
    if (!v7)
    {
LABEL_21:
      a2[2] = 0;
      goto LABEL_22;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18)
    {
      uint64_t v8 = a2[2];
      if (v8) {
        (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
      }
      goto LABEL_21;
    }
  }
LABEL_22:
  uint64_t v9 = a2[3];
  if (v9 && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    uint64_t v10 = a2[3];
    if (!v10)
    {
LABEL_28:
      a2[3] = 0;
      goto LABEL_29;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) != 18)
    {
      uint64_t v11 = a2[3];
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
      goto LABEL_28;
    }
  }
LABEL_29:
  uint64_t v12 = a2[4];
  if (v12 && (*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) != 17)
  {
    uint64_t v13 = a2[4];
    if (!v13)
    {
LABEL_35:
      a2[4] = 0;
      goto LABEL_36;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18)
    {
      uint64_t v14 = a2[4];
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
      }
      goto LABEL_35;
    }
  }
LABEL_36:
  uint64_t v15 = a2[5];
  if (v15 && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17)
  {
    uint64_t v16 = a2[5];
    if (!v16)
    {
LABEL_42:
      a2[5] = 0;
      goto LABEL_43;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) != 18)
    {
      uint64_t v17 = a2[5];
      if (v17) {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
      }
      goto LABEL_42;
    }
  }
LABEL_43:
  uint64_t result = a2[6];
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result != 17)
    {
      uint64_t result = a2[6];
      if (result)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
        if (result == 18) {
          return result;
        }
        uint64_t result = a2[6];
        if (result) {
          uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
        }
      }
      a2[6] = 0;
    }
  }
  return result;
}

uint64_t sub_20AE88(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 17)
  {
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  else
  {
    BOOL v8 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v8;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
  {
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = 0;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  else
  {
    BOOL v10 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = v10;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17)
  {
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = 0;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  else
  {
    BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = v12;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 17)
  {
    BOOL v14 = (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 18;
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = v14;
    uint64_t v13 = a2[5];
    if (v13) {
      goto LABEL_22;
    }
    return 0;
  }
  *(void *)(a1 + 88) = a2[4];
  *(unsigned char *)(a1 + 96) = 0;
  uint64_t v13 = a2[5];
  if (!v13) {
    return 0;
  }
LABEL_22:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) == 17)
  {
    *(void *)(a1 + 104) = a2[5];
    *(unsigned char *)(a1 + 112) = 0;
    uint64_t v15 = a2[6];
    if (!v15) {
      return 0;
    }
  }
  else
  {
    BOOL v17 = (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18;
    *(void *)(a1 + 104) = a2[5];
    *(unsigned char *)(a1 + 112) = v17;
    uint64_t v15 = a2[6];
    if (!v15) {
      return 0;
    }
  }
  BOOL v18 = (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 18;
  *(void *)(a1 + 120) = a2[6];
  *(unsigned char *)(a1 + 128) = v18;
  return 1;
}

uint64_t sub_20B2A4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[6];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_20B440(void *a1)
{
  *a1 = off_242B2E8;
  sub_20B714(a1 + 3);
  return a1;
}

void sub_20B484(void *a1)
{
  *a1 = off_242B2E8;
  sub_20B714(a1 + 3);

  operator delete();
}

double sub_20B4E8(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  double v9 = (*(double (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 72))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9);
  return result;
}

uint64_t sub_20B70C()
{
  return 28;
}

uint64_t sub_20B714(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t result = a1[12];
  if (result)
  {
    if (*((unsigned char *)a1 + 104))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[12] = 0;
    }
  }
  return result;
}

uint64_t sub_20B8FC(uint64_t a1)
{
  if (!*(unsigned char *)a1) {
    return a1;
  }
  uint64_t v2 = *(void **)(a1 + 16);
  if (*v2 && (*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 17)
  {
    if (!*v2)
    {
LABEL_8:
      void *v2 = 0;
      goto LABEL_9;
    }
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2) != 18)
    {
      if (*v2) {
        (*(void (**)(void))(*(void *)*v2 + 8))(*v2);
      }
      goto LABEL_8;
    }
  }
LABEL_9:
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 + 8);
  if (v4 && (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) != 17)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    if (!v5)
    {
LABEL_15:
      *(void *)(v3 + 8) = 0;
      goto LABEL_16;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18)
    {
      uint64_t v6 = *(void *)(v3 + 8);
      if (v6) {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      }
      goto LABEL_15;
    }
  }
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8 && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 17)
  {
    uint64_t v9 = *(void *)(v7 + 16);
    if (!v9)
    {
LABEL_22:
      *(void *)(v7 + 16) = 0;
      goto LABEL_23;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18)
    {
      uint64_t v10 = *(void *)(v7 + 16);
      if (v10) {
        (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
      }
      goto LABEL_22;
    }
  }
LABEL_23:
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(v11 + 24);
  if (v12 && (*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) != 17)
  {
    uint64_t v13 = *(void *)(v11 + 24);
    if (!v13)
    {
LABEL_29:
      *(void *)(v11 + 24) = 0;
      goto LABEL_30;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18)
    {
      uint64_t v14 = *(void *)(v11 + 24);
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
      }
      goto LABEL_29;
    }
  }
LABEL_30:
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(v15 + 32);
  if (v16 && (*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) != 17)
  {
    uint64_t v17 = *(void *)(v15 + 32);
    if (!v17)
    {
LABEL_36:
      *(void *)(v15 + 32) = 0;
      goto LABEL_37;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v17 + 32))(v17) != 18)
    {
      uint64_t v18 = *(void *)(v15 + 32);
      if (v18) {
        (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
      }
      goto LABEL_36;
    }
  }
LABEL_37:
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(v19 + 40);
  if (v20 && (*(unsigned int (**)(uint64_t))(*(void *)v20 + 32))(v20) != 17)
  {
    uint64_t v21 = *(void *)(v19 + 40);
    if (!v21)
    {
LABEL_43:
      *(void *)(v19 + 40) = 0;
      goto LABEL_44;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v21 + 32))(v21) != 18)
    {
      uint64_t v22 = *(void *)(v19 + 40);
      if (v22) {
        (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
      }
      goto LABEL_43;
    }
  }
LABEL_44:
  uint64_t v23 = *(void *)(a1 + 16);
  uint64_t v24 = *(void *)(v23 + 48);
  if (v24 && (*(unsigned int (**)(uint64_t))(*(void *)v24 + 32))(v24) != 17)
  {
    uint64_t v25 = *(void *)(v23 + 48);
    if (!v25)
    {
LABEL_50:
      *(void *)(v23 + 48) = 0;
      return a1;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 18)
    {
      uint64_t v26 = *(void *)(v23 + 48);
      if (v26) {
        (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
      }
      goto LABEL_50;
    }
  }
  return a1;
}

uint64_t sub_20BD70(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t v5 = sub_20C098(a1, a2, a3);
  uint64_t v6 = v5;
  if (!v5 || (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 2) {
    return v6;
  }
  if (vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))))return 0; {
  if (*(void *)(a2 + 32) == 8)
  }
  {
    if (sub_20C47C(v6, a3)) {
      return v6;
    }
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = a3->i64[v8];
      if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
        goto LABEL_10;
      }
      uint64_t v10 = a3->i64[v8];
      if (v10)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
          goto LABEL_10;
        }
        uint64_t v11 = a3->i64[v8];
        if (v11) {
          (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
        }
      }
      a3->i64[v8] = 0;
LABEL_10:
      uint64_t v6 = 0;
      if (++v8 == 8) {
        return v6;
      }
    }
  }
  for (uint64_t i = 0; i != 8; ++i)
  {
    uint64_t v13 = a3->i64[i];
    if (v13 && (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 17)
    {
      uint64_t v14 = a3->i64[i];
      if (!v14) {
        goto LABEL_18;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) != 18)
      {
        uint64_t v15 = a3->i64[i];
        if (v15) {
          (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
        }
LABEL_18:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_20BFAC(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 64; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_20C098(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0)operator new(); {
  for (uint64_t i = 0; i != 8; ++i)
  }
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_3;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_3:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_20C47C(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 17)
  {
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  else
  {
    BOOL v8 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v8;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
  {
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = 0;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  else
  {
    BOOL v10 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = v10;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17)
  {
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = 0;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  else
  {
    BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = v12;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) == 17)
  {
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = 0;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  else
  {
    BOOL v14 = (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 18;
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = v14;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 17)
  {
    BOOL v16 = (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18;
    *(void *)(a1 + 104) = a2[5];
    *(unsigned char *)(a1 + 112) = v16;
    uint64_t v15 = a2[6];
    if (v15) {
      goto LABEL_26;
    }
    return 0;
  }
  *(void *)(a1 + 104) = a2[5];
  *(unsigned char *)(a1 + 112) = 0;
  uint64_t v15 = a2[6];
  if (!v15) {
    return 0;
  }
LABEL_26:
  BOOL v17 = (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 18;
  *(void *)(a1 + 120) = a2[6];
  *(unsigned char *)(a1 + 128) = v17;
  uint64_t v18 = a2[7];
  if (!v18) {
    return 0;
  }
  BOOL v19 = (*(unsigned int (**)(void))(*(void *)v18 + 32))(a2[7]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) != 18;
  *(void *)(a1 + 136) = a2[7];
  *(unsigned char *)(a1 + 144) = v19;
  return 1;
}

uint64_t sub_20C918(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[7];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_20CAE8(void *a1)
{
  *a1 = off_242B338;
  sub_20CDF4(a1 + 3);
  return a1;
}

void sub_20CB2C(void *a1)
{
  *a1 = off_242B338;
  sub_20CDF4(a1 + 3);

  operator delete();
}

double sub_20CB90(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  double v9 = (*(double (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  double v10 = (*(double (**)(void))(**(void **)(a1 + 136) + 16))(*(void *)(a1 + 136));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 80))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10);
  return result;
}

uint64_t sub_20CDEC()
{
  return 28;
}

uint64_t sub_20CDF4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t result = a1[14];
  if (result)
  {
    if (*((unsigned char *)a1 + 120))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[14] = 0;
    }
  }
  return result;
}

uint64_t sub_20D014(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_20D340(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) != 0|| !a3[4].i64[0])
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 9)
  {
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = a3->i64[v12];
      if (!v13 || (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) == 17) {
        goto LABEL_20;
      }
      uint64_t v14 = a3->i64[v12];
      if (v14)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 18) {
          goto LABEL_20;
        }
        uint64_t v15 = a3->i64[v12];
        if (v15) {
          (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
        }
      }
      a3->i64[v12] = 0;
LABEL_20:
      if (++v12 == 9) {
        return 0;
      }
    }
  }
  char v7 = sub_20D730(v6, a3);
  uint64_t result = v6;
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = a3->i64[v8];
      if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
        goto LABEL_11;
      }
      uint64_t v10 = a3->i64[v8];
      if (v10)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
          goto LABEL_11;
        }
        uint64_t v11 = a3->i64[v8];
        if (v11) {
          (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
        }
      }
      a3->i64[v8] = 0;
LABEL_11:
      if (++v8 == 9) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_20D254(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 72; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_20D340(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0&& a3[4].i64[0])
  {
    operator new();
  }
  for (uint64_t i = 0; i != 9; ++i)
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_5;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_5:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_20D730(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 17)
  {
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  else
  {
    BOOL v8 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v8;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
  {
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = 0;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  else
  {
    BOOL v10 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = v10;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17)
  {
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = 0;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  else
  {
    BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = v12;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) == 17)
  {
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = 0;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  else
  {
    BOOL v14 = (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 18;
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = v14;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 17)
  {
    BOOL v16 = (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18;
    *(void *)(a1 + 104) = a2[5];
    *(unsigned char *)(a1 + 112) = v16;
    uint64_t v15 = a2[6];
    if (v15) {
      goto LABEL_26;
    }
    return 0;
  }
  *(void *)(a1 + 104) = a2[5];
  *(unsigned char *)(a1 + 112) = 0;
  uint64_t v15 = a2[6];
  if (!v15) {
    return 0;
  }
LABEL_26:
  BOOL v17 = (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 18;
  *(void *)(a1 + 120) = a2[6];
  *(unsigned char *)(a1 + 128) = v17;
  uint64_t v18 = a2[7];
  if (!v18) {
    return 0;
  }
  BOOL v19 = (*(unsigned int (**)(void))(*(void *)v18 + 32))(a2[7]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) != 18;
  *(void *)(a1 + 136) = a2[7];
  *(unsigned char *)(a1 + 144) = v19;
  uint64_t v20 = a2[8];
  if (!v20) {
    return 0;
  }
  BOOL v21 = (*(unsigned int (**)(void))(*(void *)v20 + 32))(a2[8]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v20 + 32))(v20) != 18;
  *(void *)(a1 + 152) = a2[8];
  *(unsigned char *)(a1 + 160) = v21;
  return 1;
}

uint64_t sub_20DC48(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[8];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_20DE4C(void *a1)
{
  *a1 = off_242B388;
  sub_20E190(a1 + 3);
  return a1;
}

void sub_20DE90(void *a1)
{
  *a1 = off_242B388;
  sub_20E190(a1 + 3);

  operator delete();
}

double sub_20DEF4(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  double v9 = (*(double (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  double v10 = (*(double (**)(void))(**(void **)(a1 + 136) + 16))(*(void *)(a1 + 136));
  double v11 = (*(double (**)(void))(**(void **)(a1 + 152) + 16))(*(void *)(a1 + 152));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 88))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11);
  return result;
}

uint64_t sub_20E188()
{
  return 28;
}

uint64_t sub_20E190(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t result = a1[16];
  if (result)
  {
    if (*((unsigned char *)a1 + 136))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[16] = 0;
    }
  }
  return result;
}

uint64_t sub_20E3E8(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_20E71C(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) != 0|| !a3[4].i64[0]|| !a3[4].i64[1])
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 10)
  {
    uint64_t v12 = 0;
    while (1)
    {
      uint64_t v13 = a3->i64[v12];
      if (!v13 || (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) == 17) {
        goto LABEL_21;
      }
      uint64_t v14 = a3->i64[v12];
      if (v14)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 18) {
          goto LABEL_21;
        }
        uint64_t v15 = a3->i64[v12];
        if (v15) {
          (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
        }
      }
      a3->i64[v12] = 0;
LABEL_21:
      if (++v12 == 10) {
        return 0;
      }
    }
  }
  char v7 = sub_20EB1C(v6, a3);
  uint64_t result = v6;
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = a3->i64[v8];
      if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
        goto LABEL_12;
      }
      uint64_t v10 = a3->i64[v8];
      if (v10)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
          goto LABEL_12;
        }
        uint64_t v11 = a3->i64[v8];
        if (v11) {
          (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
        }
      }
      a3->i64[v8] = 0;
LABEL_12:
      if (++v8 == 10) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_20E630(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 80; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_20E71C(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0&& a3[4].i64[0]&& a3[4].i64[1] != 0)
  {
    operator new();
  }
  for (uint64_t i = 0; i != 10; ++i)
  {
    uint64_t v6 = a3->i64[i];
    if (v6 && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 17)
    {
      uint64_t v7 = a3->i64[i];
      if (!v7) {
        goto LABEL_8;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18)
      {
        uint64_t v8 = a3->i64[i];
        if (v8) {
          (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
        }
LABEL_8:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_20EB1C(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (!*a2) {
    return 0;
  }
  if ((*(unsigned int (**)(void))(*(void *)v2 + 32))(*a2) == 17)
  {
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = 0;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  else
  {
    BOOL v6 = (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2) != 18;
    *(void *)(a1 + 24) = *a2;
    *(unsigned char *)(a1 + 32) = v6;
    uint64_t v5 = a2[1];
    if (!v5) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 17)
  {
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = 0;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  else
  {
    BOOL v8 = (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 18;
    *(void *)(a1 + 40) = a2[1];
    *(unsigned char *)(a1 + 48) = v8;
    uint64_t v7 = a2[2];
    if (!v7) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
  {
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = 0;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  else
  {
    BOOL v10 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(a1 + 56) = a2[2];
    *(unsigned char *)(a1 + 64) = v10;
    uint64_t v9 = a2[3];
    if (!v9) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17)
  {
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = 0;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  else
  {
    BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
    *(void *)(a1 + 72) = a2[3];
    *(unsigned char *)(a1 + 80) = v12;
    uint64_t v11 = a2[4];
    if (!v11) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) == 17)
  {
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = 0;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  else
  {
    BOOL v14 = (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 18;
    *(void *)(a1 + 88) = a2[4];
    *(unsigned char *)(a1 + 96) = v14;
    uint64_t v13 = a2[5];
    if (!v13) {
      return 0;
    }
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 17)
  {
    BOOL v16 = (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18;
    *(void *)(a1 + 104) = a2[5];
    *(unsigned char *)(a1 + 112) = v16;
    uint64_t v15 = a2[6];
    if (v15) {
      goto LABEL_26;
    }
    return 0;
  }
  *(void *)(a1 + 104) = a2[5];
  *(unsigned char *)(a1 + 112) = 0;
  uint64_t v15 = a2[6];
  if (!v15) {
    return 0;
  }
LABEL_26:
  BOOL v17 = (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 18;
  *(void *)(a1 + 120) = a2[6];
  *(unsigned char *)(a1 + 128) = v17;
  uint64_t v18 = a2[7];
  if (!v18) {
    return 0;
  }
  BOOL v19 = (*(unsigned int (**)(void))(*(void *)v18 + 32))(a2[7]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) != 18;
  *(void *)(a1 + 136) = a2[7];
  *(unsigned char *)(a1 + 144) = v19;
  uint64_t v20 = a2[8];
  if (!v20) {
    return 0;
  }
  BOOL v21 = (*(unsigned int (**)(void))(*(void *)v20 + 32))(a2[8]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v20 + 32))(v20) != 18;
  *(void *)(a1 + 152) = a2[8];
  *(unsigned char *)(a1 + 160) = v21;
  uint64_t v22 = a2[9];
  if (!v22) {
    return 0;
  }
  BOOL v23 = (*(unsigned int (**)(void))(*(void *)v22 + 32))(a2[9]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v22 + 32))(v22) != 18;
  *(void *)(a1 + 168) = a2[9];
  *(unsigned char *)(a1 + 176) = v23;
  return 1;
}

uint64_t sub_20F0B0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[9];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_20F2E8(void *a1)
{
  *a1 = off_242B3D8;
  sub_20F660(a1 + 3);
  return a1;
}

void sub_20F32C(void *a1)
{
  *a1 = off_242B3D8;
  sub_20F660(a1 + 3);

  operator delete();
}

double sub_20F390(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  double v9 = (*(double (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  double v10 = (*(double (**)(void))(**(void **)(a1 + 136) + 16))(*(void *)(a1 + 136));
  double v11 = (*(double (**)(void))(**(void **)(a1 + 152) + 16))(*(void *)(a1 + 152));
  double v12 = (*(double (**)(void))(**(void **)(a1 + 168) + 16))(*(void *)(a1 + 168));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 96))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12);
  return result;
}

uint64_t sub_20F658()
{
  return 28;
}

uint64_t sub_20F660(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t result = a1[18];
  if (result)
  {
    if (*((unsigned char *)a1 + 152))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[18] = 0;
    }
  }
  return result;
}

uint64_t sub_20F8F0(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_21018C(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) != 0|| !a3[4].i64[0]|| !a3[4].i64[1]|| !a3[5].i64[0])
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 11)
  {
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = a3->i64[v9];
      if (!v10 || (*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 17) {
        goto LABEL_15;
      }
      uint64_t v11 = a3->i64[v9];
      if (v11)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) == 18) {
          goto LABEL_15;
        }
        uint64_t v12 = a3->i64[v9];
        if (v12) {
          (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
        }
      }
      a3->i64[v9] = 0;
LABEL_15:
      if (++v9 == 11) {
        return 0;
      }
    }
  }
  uint64_t v7 = a3->i64[0];
  if ((*(unsigned int (**)(uint64_t, __n128))(*(void *)a3->i64[0] + 32))(a3->i64[0], *(__n128 *)a3) == 17)
  {
    *(void *)(v6 + 24) = a3->i64[0];
    *(unsigned char *)(v6 + 32) = 0;
    uint64_t v8 = a3->i64[1];
    if (!v8) {
      goto LABEL_61;
    }
  }
  else
  {
    BOOL v13 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
    *(void *)(v6 + 24) = a3->i64[0];
    *(unsigned char *)(v6 + 32) = v13;
    uint64_t v8 = a3->i64[1];
    if (!v8)
    {
LABEL_61:
      uint64_t v33 = 0;
      while (1)
      {
        uint64_t v34 = a3->i64[v33];
        if (!v34 || (*(unsigned int (**)(uint64_t))(*(void *)v34 + 32))(v34) == 17) {
          goto LABEL_63;
        }
        uint64_t v35 = a3->i64[v33];
        if (v35)
        {
          if ((*(unsigned int (**)(uint64_t))(*(void *)v35 + 32))(v35) == 18) {
            goto LABEL_63;
          }
          uint64_t v36 = a3->i64[v33];
          if (v36) {
            (*(void (**)(uint64_t))(*(void *)v36 + 8))(v36);
          }
        }
        a3->i64[v33] = 0;
LABEL_63:
        if (++v33 == 11) {
          return 0;
        }
      }
    }
  }
  BOOL v14 = (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 18;
  *(void *)(v6 + 40) = a3->i64[1];
  *(unsigned char *)(v6 + 48) = v14;
  uint64_t v15 = a3[1].i64[0];
  if (!v15) {
    goto LABEL_61;
  }
  BOOL v16 = (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(a3[1].i64[0]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 18;
  *(void *)(v6 + 56) = a3[1].i64[0];
  *(unsigned char *)(v6 + 64) = v16;
  uint64_t v17 = a3[1].i64[1];
  if (!v17) {
    goto LABEL_61;
  }
  BOOL v18 = (*(unsigned int (**)(uint64_t))(*(void *)v17 + 32))(a3[1].i64[1]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v17 + 32))(v17) != 18;
  *(void *)(v6 + 72) = a3[1].i64[1];
  *(unsigned char *)(v6 + 80) = v18;
  uint64_t v19 = a3[2].i64[0];
  if (!v19) {
    goto LABEL_61;
  }
  BOOL v20 = (*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(a3[2].i64[0]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) != 18;
  *(void *)(v6 + 88) = a3[2].i64[0];
  *(unsigned char *)(v6 + 96) = v20;
  uint64_t v21 = a3[2].i64[1];
  if (!v21) {
    goto LABEL_61;
  }
  BOOL v22 = (*(unsigned int (**)(uint64_t))(*(void *)v21 + 32))(a3[2].i64[1]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v21 + 32))(v21) != 18;
  *(void *)(v6 + 104) = a3[2].i64[1];
  *(unsigned char *)(v6 + 112) = v22;
  uint64_t v23 = a3[3].i64[0];
  if (!v23) {
    goto LABEL_61;
  }
  BOOL v24 = (*(unsigned int (**)(uint64_t))(*(void *)v23 + 32))(a3[3].i64[0]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v23 + 32))(v23) != 18;
  *(void *)(v6 + 120) = a3[3].i64[0];
  *(unsigned char *)(v6 + 128) = v24;
  uint64_t v25 = a3[3].i64[1];
  if (!v25) {
    goto LABEL_61;
  }
  BOOL v26 = (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(a3[3].i64[1]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 18;
  *(void *)(v6 + 136) = a3[3].i64[1];
  *(unsigned char *)(v6 + 144) = v26;
  uint64_t v27 = a3[4].i64[0];
  if (!v27) {
    goto LABEL_61;
  }
  BOOL v28 = (*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(a3[4].i64[0]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) != 18;
  *(void *)(v6 + 152) = a3[4].i64[0];
  *(unsigned char *)(v6 + 160) = v28;
  uint64_t v29 = a3[4].i64[1];
  if (!v29) {
    goto LABEL_61;
  }
  BOOL v30 = (*(unsigned int (**)(uint64_t))(*(void *)v29 + 32))(a3[4].i64[1]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v29 + 32))(v29) != 18;
  *(void *)(v6 + 168) = a3[4].i64[1];
  *(unsigned char *)(v6 + 176) = v30;
  uint64_t v31 = a3[5].i64[0];
  if (!v31) {
    goto LABEL_61;
  }
  BOOL v32 = (*(unsigned int (**)(uint64_t))(*(void *)v31 + 32))(a3[5].i64[0]) != 17
     && (*(unsigned int (**)(uint64_t))(*(void *)v31 + 32))(v31) != 18;
  *(void *)(v6 + 184) = a3[5].i64[0];
  *(unsigned char *)(v6 + 192) = v32;
  return v6;
}

uint64_t sub_2100A0(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 88; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_21018C(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0)
  {
    BOOL v4 = !a3[4].i64[0] || a3[4].i64[1] == 0;
    if (!v4 && a3[5].i64[0] != 0) {
      operator new();
    }
  }
  for (uint64_t i = 0; i != 11; ++i)
  {
    uint64_t v7 = a3->i64[i];
    if (v7 && (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 17)
    {
      uint64_t v8 = a3->i64[i];
      if (!v8) {
        goto LABEL_11;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 18)
      {
        uint64_t v9 = a3->i64[i];
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
LABEL_11:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_210AE4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[10];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_210D50(void *a1)
{
  *a1 = off_242B428;
  sub_2110FC(a1 + 3);
  return a1;
}

void sub_210D94(void *a1)
{
  *a1 = off_242B428;
  sub_2110FC(a1 + 3);

  operator delete();
}

double sub_210DF8(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  double v9 = (*(double (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  double v10 = (*(double (**)(void))(**(void **)(a1 + 136) + 16))(*(void *)(a1 + 136));
  double v11 = (*(double (**)(void))(**(void **)(a1 + 152) + 16))(*(void *)(a1 + 152));
  double v12 = (*(double (**)(void))(**(void **)(a1 + 168) + 16))(*(void *)(a1 + 168));
  double v13 = (*(double (**)(void))(**(void **)(a1 + 184) + 16))(*(void *)(a1 + 184));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 104))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13);
  return result;
}

uint64_t sub_2110F4()
{
  return 28;
}

uint64_t sub_2110FC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t v16 = a1[18];
  if (v16 && *((unsigned char *)a1 + 152))
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    a1[18] = 0;
  }
  uint64_t result = a1[20];
  if (result)
  {
    if (*((unsigned char *)a1 + 168))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[20] = 0;
    }
  }
  return result;
}

uint64_t sub_2113C4(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_2117F4(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) != 0|| (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) != 0)
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 12)
  {
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = a3->i64[v17];
      if (!v18 || (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) == 17) {
        goto LABEL_26;
      }
      uint64_t v19 = a3->i64[v17];
      if (v19)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) == 18) {
          goto LABEL_26;
        }
        uint64_t v20 = a3->i64[v17];
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
      }
      a3->i64[v17] = 0;
LABEL_26:
      if (++v17 == 12) {
        return 0;
      }
    }
  }
  uint64_t v7 = a3->i64[0];
  uint64_t v8 = (BOOL *)(v6 + 32);
  BOOL v9 = &a3->i64[1];
  unint64_t v10 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
    {
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = 0;
      if (v10 == 10) {
        return v6;
      }
    }
    else
    {
      BOOL v11 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = v11;
      if (v10 == 10) {
        return v6;
      }
    }
    uint64_t v12 = *v9++;
    uint64_t v7 = v12;
    ++v10;
    v8 += 16;
  }
  while (v12);
  uint64_t result = v6;
  if (v10 <= 0xA)
  {
    for (uint64_t i = 0; i != 12; ++i)
    {
      uint64_t v14 = a3->i64[i];
      if (!v14 || (*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 17) {
        goto LABEL_17;
      }
      uint64_t v15 = a3->i64[i];
      if (v15)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 18) {
          goto LABEL_17;
        }
        uint64_t v16 = a3->i64[i];
        if (v16) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
        }
      }
      a3->i64[i] = 0;
LABEL_17:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_211708(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 96; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_2117F4(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0&& (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) == 0)
  {
    operator new();
  }
  for (uint64_t i = 0; i != 12; ++i)
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_5;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_5:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_211CA4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[11];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_211F44(void *a1)
{
  *a1 = off_242B478;
  sub_212324(a1 + 3);
  return a1;
}

void sub_211F88(void *a1)
{
  *a1 = off_242B478;
  sub_212324(a1 + 3);

  operator delete();
}

double sub_211FEC(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  double v9 = (*(double (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  double v10 = (*(double (**)(void))(**(void **)(a1 + 136) + 16))(*(void *)(a1 + 136));
  double v11 = (*(double (**)(void))(**(void **)(a1 + 152) + 16))(*(void *)(a1 + 152));
  double v12 = (*(double (**)(void))(**(void **)(a1 + 168) + 16))(*(void *)(a1 + 168));
  double v13 = (*(double (**)(void))(**(void **)(a1 + 184) + 16))(*(void *)(a1 + 184));
  double v14 = (*(double (**)(void))(**(void **)(a1 + 200) + 16))(*(void *)(a1 + 200));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14);
  return result;
}

uint64_t sub_21231C()
{
  return 28;
}

uint64_t sub_212324(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t v16 = a1[18];
  if (v16 && *((unsigned char *)a1 + 152))
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    a1[18] = 0;
  }
  uint64_t v17 = a1[20];
  if (v17 && *((unsigned char *)a1 + 168))
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    a1[20] = 0;
  }
  uint64_t result = a1[22];
  if (result)
  {
    if (*((unsigned char *)a1 + 184))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[22] = 0;
    }
  }
  return result;
}

uint64_t sub_212624(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_212A60(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if (vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))))return result; {
  if ((vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) != 0|| a3[6].i64[0] == 0)
  }
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 13)
  {
    uint64_t v18 = 0;
    while (1)
    {
      uint64_t v19 = a3->i64[v18];
      if (!v19 || (*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) == 17) {
        goto LABEL_29;
      }
      uint64_t v20 = a3->i64[v18];
      if (v20)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v20 + 32))(v20) == 18) {
          goto LABEL_29;
        }
        uint64_t v21 = a3->i64[v18];
        if (v21) {
          (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
        }
      }
      a3->i64[v18] = 0;
LABEL_29:
      if (++v18 == 13) {
        return 0;
      }
    }
  }
  uint64_t v8 = a3->i64[0];
  BOOL v9 = (BOOL *)(v6 + 32);
  BOOL v10 = &a3->i64[1];
  unint64_t v11 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) == 17)
    {
      *((void *)v9 - 1) = *(v10 - 1);
      *BOOL v9 = 0;
      if (v11 == 11) {
        return v6;
      }
    }
    else
    {
      BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 18;
      *((void *)v9 - 1) = *(v10 - 1);
      *BOOL v9 = v12;
      if (v11 == 11) {
        return v6;
      }
    }
    uint64_t v13 = *v10++;
    uint64_t v8 = v13;
    ++v11;
    v9 += 16;
  }
  while (v13);
  uint64_t result = v6;
  if (v11 <= 0xB)
  {
    for (uint64_t i = 0; i != 13; ++i)
    {
      uint64_t v15 = a3->i64[i];
      if (!v15 || (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 17) {
        goto LABEL_20;
      }
      uint64_t v16 = a3->i64[i];
      if (v16)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) == 18) {
          goto LABEL_20;
        }
        uint64_t v17 = a3->i64[i];
        if (v17) {
          (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
        }
      }
      a3->i64[i] = 0;
LABEL_20:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_212974(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 104; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_212A60(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0&& (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) == 0&& a3[6].i64[0] != 0)
  {
    operator new();
  }
  for (uint64_t i = 0; i != 13; ++i)
  {
    uint64_t v6 = a3->i64[i];
    if (v6 && (*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 17)
    {
      uint64_t v7 = a3->i64[i];
      if (!v7) {
        goto LABEL_8;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18)
      {
        uint64_t v8 = a3->i64[i];
        if (v8) {
          (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
        }
LABEL_8:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_212F24(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[12];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_2131F8(void *a1)
{
  *a1 = off_242B4C8;
  sub_21360C(a1 + 3);
  return a1;
}

void sub_21323C(void *a1)
{
  *a1 = off_242B4C8;
  sub_21360C(a1 + 3);

  operator delete();
}

double sub_2132A0(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  double v3 = (*(double (**)(void))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24));
  double v4 = (*(double (**)(void))(**(void **)(a1 + 40) + 16))(*(void *)(a1 + 40));
  double v5 = (*(double (**)(void))(**(void **)(a1 + 56) + 16))(*(void *)(a1 + 56));
  double v6 = (*(double (**)(void))(**(void **)(a1 + 72) + 16))(*(void *)(a1 + 72));
  double v7 = (*(double (**)(void))(**(void **)(a1 + 88) + 16))(*(void *)(a1 + 88));
  double v8 = (*(double (**)(void))(**(void **)(a1 + 104) + 16))(*(void *)(a1 + 104));
  double v9 = (*(double (**)(void))(**(void **)(a1 + 120) + 16))(*(void *)(a1 + 120));
  double v10 = (*(double (**)(void))(**(void **)(a1 + 136) + 16))(*(void *)(a1 + 136));
  double v11 = (*(double (**)(void))(**(void **)(a1 + 152) + 16))(*(void *)(a1 + 152));
  double v12 = (*(double (**)(void))(**(void **)(a1 + 168) + 16))(*(void *)(a1 + 168));
  double v13 = (*(double (**)(void))(**(void **)(a1 + 184) + 16))(*(void *)(a1 + 184));
  double v14 = (*(double (**)(void))(**(void **)(a1 + 200) + 16))(*(void *)(a1 + 200));
  double v15 = (*(double (**)(void))(**(void **)(a1 + 216) + 16))(*(void *)(a1 + 216));
  (*(void (**)(void, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *, double *))(**(void **)(a1 + 8) + 120))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15);
  return result;
}

uint64_t sub_213604()
{
  return 28;
}

uint64_t sub_21360C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t v16 = a1[18];
  if (v16 && *((unsigned char *)a1 + 152))
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    a1[18] = 0;
  }
  uint64_t v17 = a1[20];
  if (v17 && *((unsigned char *)a1 + 168))
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    a1[20] = 0;
  }
  uint64_t v18 = a1[22];
  if (v18 && *((unsigned char *)a1 + 184))
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    a1[22] = 0;
  }
  uint64_t result = a1[24];
  if (result)
  {
    if (*((unsigned char *)a1 + 200))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[24] = 0;
    }
  }
  return result;
}

uint64_t sub_213944(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_213D84(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if (vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))))return result; {
  BOOL v7 = (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) != 0|| a3[6].i64[0] == 0;
  }
  if (v7 || a3[6].i64[1] == 0) {
    return result;
  }
  if (*(void *)(a2 + 32) != 14)
  {
    uint64_t v19 = 0;
    while (1)
    {
      uint64_t v20 = a3->i64[v19];
      if (!v20 || (*(unsigned int (**)(uint64_t))(*(void *)v20 + 32))(v20) == 17) {
        goto LABEL_32;
      }
      uint64_t v21 = a3->i64[v19];
      if (v21)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v21 + 32))(v21) == 18) {
          goto LABEL_32;
        }
        uint64_t v22 = a3->i64[v19];
        if (v22) {
          (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
        }
      }
      a3->i64[v19] = 0;
LABEL_32:
      if (++v19 == 14) {
        return 0;
      }
    }
  }
  uint64_t v9 = a3->i64[0];
  BOOL v10 = (BOOL *)(v6 + 32);
  uint64_t v11 = &a3->i64[1];
  unint64_t v12 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17)
    {
      *((void *)v10 - 1) = *(v11 - 1);
      *BOOL v10 = 0;
      if (v12 == 12) {
        return v6;
      }
    }
    else
    {
      BOOL v13 = (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18;
      *((void *)v10 - 1) = *(v11 - 1);
      *BOOL v10 = v13;
      if (v12 == 12) {
        return v6;
      }
    }
    uint64_t v14 = *v11++;
    uint64_t v9 = v14;
    ++v12;
    v10 += 16;
  }
  while (v14);
  uint64_t result = v6;
  if (v12 <= 0xC)
  {
    for (uint64_t i = 0; i != 14; ++i)
    {
      uint64_t v16 = a3->i64[i];
      if (!v16 || (*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) == 17) {
        goto LABEL_23;
      }
      uint64_t v17 = a3->i64[i];
      if (v17)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v17 + 32))(v17) == 18) {
          goto LABEL_23;
        }
        uint64_t v18 = a3->i64[i];
        if (v18) {
          (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
        }
      }
      a3->i64[i] = 0;
LABEL_23:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_213C98(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 112; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_213D84(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0)
  {
    BOOL v4 = (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) != 0|| a3[6].i64[0] == 0;
    if (!v4 && a3[6].i64[1] != 0) {
      operator new();
    }
  }
  for (uint64_t i = 0; i != 14; ++i)
  {
    uint64_t v7 = a3->i64[i];
    if (v7 && (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 17)
    {
      uint64_t v8 = a3->i64[i];
      if (!v8) {
        goto LABEL_11;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 18)
      {
        uint64_t v9 = a3->i64[i];
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
LABEL_11:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_214254(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[12];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[13];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_21455C(void *a1)
{
  *a1 = off_242B518;
  sub_214708(a1 + 3);
  return a1;
}

void sub_2145A0(void *a1)
{
  *a1 = off_242B518;
  sub_214708(a1 + 3);

  operator delete();
}

double sub_214604(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  sub_214A78(&v3, (void **)(a1 + 24));
  (*(void (**)(void, double *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(**(void **)(a1 + 8) + 128))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15, &v16);
  return result;
}

uint64_t sub_214700()
{
  return 28;
}

uint64_t sub_214708(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t v16 = a1[18];
  if (v16 && *((unsigned char *)a1 + 152))
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    a1[18] = 0;
  }
  uint64_t v17 = a1[20];
  if (v17 && *((unsigned char *)a1 + 168))
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    a1[20] = 0;
  }
  uint64_t v18 = a1[22];
  if (v18 && *((unsigned char *)a1 + 184))
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    a1[22] = 0;
  }
  uint64_t v19 = a1[24];
  if (v19 && *((unsigned char *)a1 + 200))
  {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    a1[24] = 0;
  }
  uint64_t result = a1[26];
  if (result)
  {
    if (*((unsigned char *)a1 + 216))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[26] = 0;
    }
  }
  return result;
}

void sub_214A78(double *a1, void **a2)
{
  *a1 = (*(double (**)(void))(**a2 + 16))();
  a1[1] = (*(double (**)(void *))(*a2[2] + 16))(a2[2]);
  a1[2] = (*(double (**)(void *))(*a2[4] + 16))(a2[4]);
  a1[3] = (*(double (**)(void *))(*a2[6] + 16))(a2[6]);
  a1[4] = (*(double (**)(void *))(*a2[8] + 16))(a2[8]);
  a1[5] = (*(double (**)(void *))(*a2[10] + 16))(a2[10]);
  a1[6] = (*(double (**)(void *))(*a2[12] + 16))(a2[12]);
  a1[7] = (*(double (**)(void *))(*a2[14] + 16))(a2[14]);
  a1[8] = (*(double (**)(void *))(*a2[16] + 16))(a2[16]);
  a1[9] = (*(double (**)(void *))(*a2[18] + 16))(a2[18]);
  a1[10] = (*(double (**)(void *))(*a2[20] + 16))(a2[20]);
  a1[11] = (*(double (**)(void *))(*a2[22] + 16))(a2[22]);
  a1[12] = (*(double (**)(void *))(*a2[24] + 16))(a2[24]);
  a1[13] = (*(double (**)(void *))(*a2[26] + 16))(a2[26]);
}

uint64_t sub_214D04(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_21514C(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if (vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))))return result; {
  BOOL v7 = (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) != 0|| a3[6].i64[0] == 0;
  }
  BOOL v8 = v7 || a3[6].i64[1] == 0;
  if (v8 || a3[7].i64[0] == 0) {
    return result;
  }
  if (*(void *)(a2 + 32) != 15)
  {
    uint64_t v20 = 0;
    while (1)
    {
      uint64_t v21 = a3->i64[v20];
      if (!v21 || (*(unsigned int (**)(uint64_t))(*(void *)v21 + 32))(v21) == 17) {
        goto LABEL_35;
      }
      uint64_t v22 = a3->i64[v20];
      if (v22)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v22 + 32))(v22) == 18) {
          goto LABEL_35;
        }
        uint64_t v23 = a3->i64[v20];
        if (v23) {
          (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
        }
      }
      a3->i64[v20] = 0;
LABEL_35:
      if (++v20 == 15) {
        return 0;
      }
    }
  }
  uint64_t v10 = a3->i64[0];
  uint64_t v11 = (BOOL *)(v6 + 32);
  uint64_t v12 = &a3->i64[1];
  unint64_t v13 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 17)
    {
      *((void *)v11 - 1) = *(v12 - 1);
      BOOL *v11 = 0;
      if (v13 == 13) {
        return v6;
      }
    }
    else
    {
      BOOL v14 = (*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) != 18;
      *((void *)v11 - 1) = *(v12 - 1);
      BOOL *v11 = v14;
      if (v13 == 13) {
        return v6;
      }
    }
    uint64_t v15 = *v12++;
    uint64_t v10 = v15;
    ++v13;
    v11 += 16;
  }
  while (v15);
  uint64_t result = v6;
  if (v13 <= 0xD)
  {
    for (uint64_t i = 0; i != 15; ++i)
    {
      uint64_t v17 = a3->i64[i];
      if (!v17 || (*(unsigned int (**)(uint64_t))(*(void *)v17 + 32))(v17) == 17) {
        goto LABEL_26;
      }
      uint64_t v18 = a3->i64[i];
      if (v18)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) == 18) {
          goto LABEL_26;
        }
        uint64_t v19 = a3->i64[i];
        if (v19) {
          (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
        }
      }
      a3->i64[i] = 0;
LABEL_26:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_215060(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 120; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_21514C(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxv_u8((uint8x8_t)vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))))) & 1) == 0)
  {
    BOOL v4 = (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int8x16_t)xmmword_20B8880)) & 0xF) != 0|| a3[6].i64[0] == 0;
    BOOL v5 = v4 || a3[6].i64[1] == 0;
    if (!v5 && a3[7].i64[0] != 0) {
      operator new();
    }
  }
  for (uint64_t i = 0; i != 15; ++i)
  {
    uint64_t v8 = a3->i64[i];
    if (v8 && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 17)
    {
      uint64_t v9 = a3->i64[i];
      if (!v9) {
        goto LABEL_14;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 18)
      {
        uint64_t v10 = a3->i64[i];
        if (v10) {
          (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
        }
LABEL_14:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_21562C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[12];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[13];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[14];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_215968(void *a1)
{
  *a1 = off_242B568;
  sub_215B18(a1 + 3);
  return a1;
}

void sub_2159AC(void *a1)
{
  *a1 = off_242B568;
  sub_215B18(a1 + 3);

  operator delete();
}

double sub_215A10(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  sub_215EC0(&v3, (void **)(a1 + 24));
  (*(void (**)(void, double *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(**(void **)(a1 + 8) + 136))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15, &v16, &v17);
  return result;
}

uint64_t sub_215B10()
{
  return 28;
}

uint64_t sub_215B18(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t v16 = a1[18];
  if (v16 && *((unsigned char *)a1 + 152))
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    a1[18] = 0;
  }
  uint64_t v17 = a1[20];
  if (v17 && *((unsigned char *)a1 + 168))
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    a1[20] = 0;
  }
  uint64_t v18 = a1[22];
  if (v18 && *((unsigned char *)a1 + 184))
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    a1[22] = 0;
  }
  uint64_t v19 = a1[24];
  if (v19 && *((unsigned char *)a1 + 200))
  {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    a1[24] = 0;
  }
  uint64_t v20 = a1[26];
  if (v20 && *((unsigned char *)a1 + 216))
  {
    (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    a1[26] = 0;
  }
  uint64_t result = a1[28];
  if (result)
  {
    if (*((unsigned char *)a1 + 232))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[28] = 0;
    }
  }
  return result;
}

void sub_215EC0(double *a1, void **a2)
{
  *a1 = (*(double (**)(void))(**a2 + 16))();
  a1[1] = (*(double (**)(void *))(*a2[2] + 16))(a2[2]);
  a1[2] = (*(double (**)(void *))(*a2[4] + 16))(a2[4]);
  a1[3] = (*(double (**)(void *))(*a2[6] + 16))(a2[6]);
  a1[4] = (*(double (**)(void *))(*a2[8] + 16))(a2[8]);
  a1[5] = (*(double (**)(void *))(*a2[10] + 16))(a2[10]);
  a1[6] = (*(double (**)(void *))(*a2[12] + 16))(a2[12]);
  a1[7] = (*(double (**)(void *))(*a2[14] + 16))(a2[14]);
  a1[8] = (*(double (**)(void *))(*a2[16] + 16))(a2[16]);
  a1[9] = (*(double (**)(void *))(*a2[18] + 16))(a2[18]);
  a1[10] = (*(double (**)(void *))(*a2[20] + 16))(a2[20]);
  a1[11] = (*(double (**)(void *))(*a2[22] + 16))(a2[22]);
  a1[12] = (*(double (**)(void *))(*a2[24] + 16))(a2[24]);
  a1[13] = (*(double (**)(void *))(*a2[26] + 16))(a2[26]);
  a1[14] = (*(double (**)(void *))(*a2[28] + 16))(a2[28]);
}

uint64_t sub_216178(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t v5 = sub_216564(a1, a2, a3);
  uint64_t v6 = v5;
  if (!v5 || (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 2) {
    return v6;
  }
  if (vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))))return 0; {
  if (*(void *)(a2 + 32) == 16)
  }
  {
    uint64_t v8 = a3->i64[0];
    BOOL v9 = (BOOL *)(v6 + 32);
    BOOL v10 = &a3->i64[1];
    unint64_t v11 = -1;
    do
    {
      BOOL v12 = (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 17
         && (*(unsigned int (**)(uint64_t))(*(void *)v8 + 32))(v8) != 18;
      *((void *)v9 - 1) = *(v10 - 1);
      *BOOL v9 = v12;
      if (v11 == 14) {
        return v6;
      }
      uint64_t v13 = *v10++;
      uint64_t v8 = v13;
      ++v11;
      v9 += 16;
    }
    while (v13);
    if (v11 > 0xE) {
      return v6;
    }
    uint64_t v14 = 0;
    while (1)
    {
      uint64_t v15 = a3->i64[v14];
      if (!v15 || (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 17) {
        goto LABEL_16;
      }
      uint64_t v16 = a3->i64[v14];
      if (v16)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) == 18) {
          goto LABEL_16;
        }
        uint64_t v17 = a3->i64[v14];
        if (v17) {
          (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
        }
      }
      a3->i64[v14] = 0;
LABEL_16:
      uint64_t v6 = 0;
      if (++v14 == 16) {
        return v6;
      }
    }
  }
  for (uint64_t i = 0; i != 16; ++i)
  {
    uint64_t v19 = a3->i64[i];
    if (v19 && (*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) != 17)
    {
      uint64_t v20 = a3->i64[i];
      if (!v20) {
        goto LABEL_24;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v20 + 32))(v20) != 18)
      {
        uint64_t v21 = a3->i64[i];
        if (v21) {
          (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
        }
LABEL_24:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_216478(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 128; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_216564(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) == 0)operator new(); {
  for (uint64_t i = 0; i != 16; ++i)
  }
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_3;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_3:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_216A20(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[12];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[13];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[14];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[15];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_216D90(void *a1)
{
  *a1 = off_242B5B8;
  sub_216F48(a1 + 3);
  return a1;
}

void sub_216DD4(void *a1)
{
  *a1 = off_242B5B8;
  sub_216F48(a1 + 3);

  operator delete();
}

double sub_216E38(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  sub_217328(&v3, (void **)(a1 + 24));
  (*(void (**)(void, double *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(**(void **)(a1 + 8) + 144))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15, &v16, &v17, &v18);
  return result;
}

uint64_t sub_216F40()
{
  return 28;
}

uint64_t sub_216F48(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t v16 = a1[18];
  if (v16 && *((unsigned char *)a1 + 152))
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    a1[18] = 0;
  }
  uint64_t v17 = a1[20];
  if (v17 && *((unsigned char *)a1 + 168))
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    a1[20] = 0;
  }
  uint64_t v18 = a1[22];
  if (v18 && *((unsigned char *)a1 + 184))
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    a1[22] = 0;
  }
  uint64_t v19 = a1[24];
  if (v19 && *((unsigned char *)a1 + 200))
  {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    a1[24] = 0;
  }
  uint64_t v20 = a1[26];
  if (v20 && *((unsigned char *)a1 + 216))
  {
    (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    a1[26] = 0;
  }
  uint64_t v21 = a1[28];
  if (v21 && *((unsigned char *)a1 + 232))
  {
    (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    a1[28] = 0;
  }
  uint64_t result = a1[30];
  if (result)
  {
    if (*((unsigned char *)a1 + 248))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[30] = 0;
    }
  }
  return result;
}

void sub_217328(double *a1, void **a2)
{
  *a1 = (*(double (**)(void))(**a2 + 16))();
  a1[1] = (*(double (**)(void *))(*a2[2] + 16))(a2[2]);
  a1[2] = (*(double (**)(void *))(*a2[4] + 16))(a2[4]);
  a1[3] = (*(double (**)(void *))(*a2[6] + 16))(a2[6]);
  a1[4] = (*(double (**)(void *))(*a2[8] + 16))(a2[8]);
  a1[5] = (*(double (**)(void *))(*a2[10] + 16))(a2[10]);
  a1[6] = (*(double (**)(void *))(*a2[12] + 16))(a2[12]);
  a1[7] = (*(double (**)(void *))(*a2[14] + 16))(a2[14]);
  a1[8] = (*(double (**)(void *))(*a2[16] + 16))(a2[16]);
  a1[9] = (*(double (**)(void *))(*a2[18] + 16))(a2[18]);
  a1[10] = (*(double (**)(void *))(*a2[20] + 16))(a2[20]);
  a1[11] = (*(double (**)(void *))(*a2[22] + 16))(a2[22]);
  a1[12] = (*(double (**)(void *))(*a2[24] + 16))(a2[24]);
  a1[13] = (*(double (**)(void *))(*a2[26] + 16))(a2[26]);
  a1[14] = (*(double (**)(void *))(*a2[28] + 16))(a2[28]);
  a1[15] = (*(double (**)(void *))(*a2[30] + 16))(a2[30]);
}

uint64_t sub_21760C(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_217A28(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) != 0|| !a3[8].i64[0])
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 17)
  {
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = a3->i64[v17];
      if (!v18 || (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) == 17) {
        goto LABEL_26;
      }
      uint64_t v19 = a3->i64[v17];
      if (v19)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) == 18) {
          goto LABEL_26;
        }
        uint64_t v20 = a3->i64[v17];
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
      }
      a3->i64[v17] = 0;
LABEL_26:
      if (++v17 == 17) {
        return 0;
      }
    }
  }
  uint64_t v7 = a3->i64[0];
  uint64_t v8 = (BOOL *)(v6 + 32);
  BOOL v9 = &a3->i64[1];
  unint64_t v10 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
    {
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = 0;
      if (v10 == 15) {
        return v6;
      }
    }
    else
    {
      BOOL v11 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = v11;
      if (v10 == 15) {
        return v6;
      }
    }
    uint64_t v12 = *v9++;
    uint64_t v7 = v12;
    ++v10;
    v8 += 16;
  }
  while (v12);
  uint64_t result = v6;
  if (v10 <= 0xF)
  {
    for (uint64_t i = 0; i != 17; ++i)
    {
      uint64_t v14 = a3->i64[i];
      if (!v14 || (*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 17) {
        goto LABEL_17;
      }
      uint64_t v15 = a3->i64[i];
      if (v15)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 18) {
          goto LABEL_17;
        }
        uint64_t v16 = a3->i64[i];
        if (v16) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
        }
      }
      a3->i64[i] = 0;
LABEL_17:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_21793C(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 136; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_217A28(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) == 0&& a3[8].i64[0])
  {
    operator new();
  }
  for (uint64_t i = 0; i != 17; ++i)
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_5;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_5:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_217EF4(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[12];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[13];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[14];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[15];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[16];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_218298(void *a1)
{
  *a1 = off_242B608;
  sub_21845C(a1 + 3);
  return a1;
}

void sub_2182DC(void *a1)
{
  *a1 = off_242B608;
  sub_21845C(a1 + 3);

  operator delete();
}

double sub_218340(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  sub_218874(&v3, (void **)(a1 + 24));
  (*(void (**)(void, double *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(**(void **)(a1 + 8) + 152))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15, &v16, &v17, &v18, &v19);
  return result;
}

uint64_t sub_218454()
{
  return 28;
}

uint64_t sub_21845C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2) {
    BOOL v3 = *((unsigned char *)a1 + 8) == 0;
  }
  else {
    BOOL v3 = 1;
  }
  if (v3)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v5 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v5 = 1;
    }
    if (!v5)
    {
LABEL_22:
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      a1[2] = 0;
      uint64_t v6 = a1[4];
      if (v6) {
        BOOL v10 = *((unsigned char *)a1 + 40) == 0;
      }
      else {
        BOOL v10 = 1;
      }
      if (!v10) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
  }
  else
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    *a1 = 0;
    uint64_t v4 = a1[2];
    if (v4) {
      BOOL v9 = *((unsigned char *)a1 + 24) == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9) {
      goto LABEL_22;
    }
  }
  uint64_t v6 = a1[4];
  if (v6) {
    BOOL v7 = *((unsigned char *)a1 + 40) == 0;
  }
  else {
    BOOL v7 = 1;
  }
  if (!v7)
  {
LABEL_26:
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    a1[4] = 0;
    uint64_t v8 = a1[6];
    if (!v8) {
      goto LABEL_29;
    }
    goto LABEL_27;
  }
LABEL_16:
  uint64_t v8 = a1[6];
  if (!v8) {
    goto LABEL_29;
  }
LABEL_27:
  if (*((unsigned char *)a1 + 56))
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    a1[6] = 0;
  }
LABEL_29:
  uint64_t v11 = a1[8];
  if (v11 && *((unsigned char *)a1 + 72))
  {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    a1[8] = 0;
  }
  uint64_t v12 = a1[10];
  if (v12 && *((unsigned char *)a1 + 88))
  {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    a1[10] = 0;
  }
  uint64_t v13 = a1[12];
  if (v13 && *((unsigned char *)a1 + 104))
  {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    a1[12] = 0;
  }
  uint64_t v14 = a1[14];
  if (v14 && *((unsigned char *)a1 + 120))
  {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    a1[14] = 0;
  }
  uint64_t v15 = a1[16];
  if (v15 && *((unsigned char *)a1 + 136))
  {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    a1[16] = 0;
  }
  uint64_t v16 = a1[18];
  if (v16 && *((unsigned char *)a1 + 152))
  {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    a1[18] = 0;
  }
  uint64_t v17 = a1[20];
  if (v17 && *((unsigned char *)a1 + 168))
  {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    a1[20] = 0;
  }
  uint64_t v18 = a1[22];
  if (v18 && *((unsigned char *)a1 + 184))
  {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    a1[22] = 0;
  }
  uint64_t v19 = a1[24];
  if (v19 && *((unsigned char *)a1 + 200))
  {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    a1[24] = 0;
  }
  uint64_t v20 = a1[26];
  if (v20 && *((unsigned char *)a1 + 216))
  {
    (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    a1[26] = 0;
  }
  uint64_t v21 = a1[28];
  if (v21 && *((unsigned char *)a1 + 232))
  {
    (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    a1[28] = 0;
  }
  uint64_t v22 = a1[30];
  if (v22 && *((unsigned char *)a1 + 248))
  {
    (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    a1[30] = 0;
  }
  uint64_t result = a1[32];
  if (result)
  {
    if (*((unsigned char *)a1 + 264))
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
      a1[32] = 0;
    }
  }
  return result;
}

void sub_218874(double *a1, void **a2)
{
  *a1 = (*(double (**)(void))(**a2 + 16))();
  a1[1] = (*(double (**)(void *))(*a2[2] + 16))(a2[2]);
  a1[2] = (*(double (**)(void *))(*a2[4] + 16))(a2[4]);
  a1[3] = (*(double (**)(void *))(*a2[6] + 16))(a2[6]);
  a1[4] = (*(double (**)(void *))(*a2[8] + 16))(a2[8]);
  a1[5] = (*(double (**)(void *))(*a2[10] + 16))(a2[10]);
  a1[6] = (*(double (**)(void *))(*a2[12] + 16))(a2[12]);
  a1[7] = (*(double (**)(void *))(*a2[14] + 16))(a2[14]);
  a1[8] = (*(double (**)(void *))(*a2[16] + 16))(a2[16]);
  a1[9] = (*(double (**)(void *))(*a2[18] + 16))(a2[18]);
  a1[10] = (*(double (**)(void *))(*a2[20] + 16))(a2[20]);
  a1[11] = (*(double (**)(void *))(*a2[22] + 16))(a2[22]);
  a1[12] = (*(double (**)(void *))(*a2[24] + 16))(a2[24]);
  a1[13] = (*(double (**)(void *))(*a2[26] + 16))(a2[26]);
  a1[14] = (*(double (**)(void *))(*a2[28] + 16))(a2[28]);
  a1[15] = (*(double (**)(void *))(*a2[30] + 16))(a2[30]);
  a1[16] = (*(double (**)(void *))(*a2[32] + 16))(a2[32]);
}

uint64_t sub_218B84(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_218FA8(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) != 0|| !a3[8].i64[0]|| !a3[8].i64[1])
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 18)
  {
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = a3->i64[v17];
      if (!v18 || (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) == 17) {
        goto LABEL_27;
      }
      uint64_t v19 = a3->i64[v17];
      if (v19)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) == 18) {
          goto LABEL_27;
        }
        uint64_t v20 = a3->i64[v17];
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
      }
      a3->i64[v17] = 0;
LABEL_27:
      if (++v17 == 18) {
        return 0;
      }
    }
  }
  uint64_t v7 = a3->i64[0];
  uint64_t v8 = (BOOL *)(v6 + 32);
  BOOL v9 = &a3->i64[1];
  unint64_t v10 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
    {
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = 0;
      if (v10 == 16) {
        return v6;
      }
    }
    else
    {
      BOOL v11 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = v11;
      if (v10 == 16) {
        return v6;
      }
    }
    uint64_t v12 = *v9++;
    uint64_t v7 = v12;
    ++v10;
    v8 += 16;
  }
  while (v12);
  uint64_t result = v6;
  if (v10 <= 0x10)
  {
    for (uint64_t i = 0; i != 18; ++i)
    {
      uint64_t v14 = a3->i64[i];
      if (!v14 || (*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 17) {
        goto LABEL_18;
      }
      uint64_t v15 = a3->i64[i];
      if (v15)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 18) {
          goto LABEL_18;
        }
        uint64_t v16 = a3->i64[i];
        if (v16) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
        }
      }
      a3->i64[i] = 0;
LABEL_18:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_218EBC(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 144; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_218FA8(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) == 0&& a3[8].i64[0]&& a3[8].i64[1])
  {
    operator new();
  }
  for (uint64_t i = 0; i != 18; ++i)
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_6;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_6:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_219484(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[12];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[13];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[14];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[15];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[16];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[17];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_21985C(void *a1)
{
  uint64_t v2 = 0;
  *a1 = off_242B658;
  do
  {
    uint64_t v3 = &a1[v2];
    uint64_t v4 = a1[v2 + 3];
    if (v4 && *((unsigned char *)v3 + 32))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      v3[3] = 0;
    }
    v2 += 2;
  }
  while (v2 != 36);
  return a1;
}

void sub_2198F8(void *a1)
{
  uint64_t v2 = 0;
  *a1 = off_242B658;
  while (1)
  {
    uint64_t v3 = &a1[v2];
    uint64_t v4 = a1[v2 + 3];
    if (v4 && *((unsigned char *)v3 + 32))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      v3[3] = 0;
    }
    v2 += 2;
    if (v2 == 36)
    {
      operator delete();
    }
  }
}

double sub_2199B4(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  sub_219AE0(&v3, (void **)(a1 + 24));
  (*(void (**)(void, double *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(**(void **)(a1 + 8) + 160))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15, &v16, &v17, &v18, &v19, &v20);
  return result;
}

uint64_t sub_219AD8()
{
  return 28;
}

void sub_219AE0(double *a1, void **a2)
{
  *a1 = (*(double (**)(void))(**a2 + 16))();
  a1[1] = (*(double (**)(void *))(*a2[2] + 16))(a2[2]);
  a1[2] = (*(double (**)(void *))(*a2[4] + 16))(a2[4]);
  a1[3] = (*(double (**)(void *))(*a2[6] + 16))(a2[6]);
  a1[4] = (*(double (**)(void *))(*a2[8] + 16))(a2[8]);
  a1[5] = (*(double (**)(void *))(*a2[10] + 16))(a2[10]);
  a1[6] = (*(double (**)(void *))(*a2[12] + 16))(a2[12]);
  a1[7] = (*(double (**)(void *))(*a2[14] + 16))(a2[14]);
  a1[8] = (*(double (**)(void *))(*a2[16] + 16))(a2[16]);
  a1[9] = (*(double (**)(void *))(*a2[18] + 16))(a2[18]);
  a1[10] = (*(double (**)(void *))(*a2[20] + 16))(a2[20]);
  a1[11] = (*(double (**)(void *))(*a2[22] + 16))(a2[22]);
  a1[12] = (*(double (**)(void *))(*a2[24] + 16))(a2[24]);
  a1[13] = (*(double (**)(void *))(*a2[26] + 16))(a2[26]);
  a1[14] = (*(double (**)(void *))(*a2[28] + 16))(a2[28]);
  a1[15] = (*(double (**)(void *))(*a2[30] + 16))(a2[30]);
  a1[16] = (*(double (**)(void *))(*a2[32] + 16))(a2[32]);
  a1[17] = (*(double (**)(void *))(*a2[34] + 16))(a2[34]);
}

uint64_t sub_219E1C(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_21A248(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) != 0|| !a3[8].i64[0]|| !a3[8].i64[1]|| !a3[9].i64[0])
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 19)
  {
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = a3->i64[v17];
      if (!v18 || (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) == 17) {
        goto LABEL_28;
      }
      uint64_t v19 = a3->i64[v17];
      if (v19)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) == 18) {
          goto LABEL_28;
        }
        uint64_t v20 = a3->i64[v17];
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
      }
      a3->i64[v17] = 0;
LABEL_28:
      if (++v17 == 19) {
        return 0;
      }
    }
  }
  uint64_t v7 = a3->i64[0];
  uint64_t v8 = (BOOL *)(v6 + 32);
  uint64_t v9 = &a3->i64[1];
  unint64_t v10 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
    {
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = 0;
      if (v10 == 17) {
        return v6;
      }
    }
    else
    {
      BOOL v11 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = v11;
      if (v10 == 17) {
        return v6;
      }
    }
    uint64_t v12 = *v9++;
    uint64_t v7 = v12;
    ++v10;
    v8 += 16;
  }
  while (v12);
  uint64_t result = v6;
  if (v10 <= 0x11)
  {
    for (uint64_t i = 0; i != 19; ++i)
    {
      uint64_t v14 = a3->i64[i];
      if (!v14 || (*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 17) {
        goto LABEL_19;
      }
      uint64_t v15 = a3->i64[i];
      if (v15)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 18) {
          goto LABEL_19;
        }
        uint64_t v16 = a3->i64[i];
        if (v16) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
        }
      }
      a3->i64[i] = 0;
LABEL_19:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_21A15C(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 152; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_21A248(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) == 0&& a3[8].i64[0]&& a3[8].i64[1]&& a3[9].i64[0])
  {
    operator new();
  }
  for (uint64_t i = 0; i != 19; ++i)
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_7;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_7:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_21A734(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[12];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[13];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[14];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[15];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[16];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[17];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[18];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_21AB40(void *a1)
{
  uint64_t v2 = 0;
  *a1 = off_242B6A8;
  do
  {
    uint64_t v3 = &a1[v2];
    uint64_t v4 = a1[v2 + 3];
    if (v4 && *((unsigned char *)v3 + 32))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      v3[3] = 0;
    }
    v2 += 2;
  }
  while (v2 != 38);
  return a1;
}

void sub_21ABDC(void *a1)
{
  uint64_t v2 = 0;
  *a1 = off_242B6A8;
  while (1)
  {
    uint64_t v3 = &a1[v2];
    uint64_t v4 = a1[v2 + 3];
    if (v4 && *((unsigned char *)v3 + 32))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      v3[3] = 0;
    }
    v2 += 2;
    if (v2 == 38)
    {
      operator delete();
    }
  }
}

double sub_21AC98(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  sub_21ADC8(&v3, (void **)(a1 + 24));
  (*(void (**)(void, double *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(**(void **)(a1 + 8) + 168))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15, &v16, &v17, &v18, &v19, &v20,
    &v21);
  return result;
}

uint64_t sub_21ADC0()
{
  return 28;
}

void sub_21ADC8(double *a1, void **a2)
{
  *a1 = (*(double (**)(void))(**a2 + 16))();
  a1[1] = (*(double (**)(void *))(*a2[2] + 16))(a2[2]);
  a1[2] = (*(double (**)(void *))(*a2[4] + 16))(a2[4]);
  a1[3] = (*(double (**)(void *))(*a2[6] + 16))(a2[6]);
  a1[4] = (*(double (**)(void *))(*a2[8] + 16))(a2[8]);
  a1[5] = (*(double (**)(void *))(*a2[10] + 16))(a2[10]);
  a1[6] = (*(double (**)(void *))(*a2[12] + 16))(a2[12]);
  a1[7] = (*(double (**)(void *))(*a2[14] + 16))(a2[14]);
  a1[8] = (*(double (**)(void *))(*a2[16] + 16))(a2[16]);
  a1[9] = (*(double (**)(void *))(*a2[18] + 16))(a2[18]);
  a1[10] = (*(double (**)(void *))(*a2[20] + 16))(a2[20]);
  a1[11] = (*(double (**)(void *))(*a2[22] + 16))(a2[22]);
  a1[12] = (*(double (**)(void *))(*a2[24] + 16))(a2[24]);
  a1[13] = (*(double (**)(void *))(*a2[26] + 16))(a2[26]);
  a1[14] = (*(double (**)(void *))(*a2[28] + 16))(a2[28]);
  a1[15] = (*(double (**)(void *))(*a2[30] + 16))(a2[30]);
  a1[16] = (*(double (**)(void *))(*a2[32] + 16))(a2[32]);
  a1[17] = (*(double (**)(void *))(*a2[34] + 16))(a2[34]);
  a1[18] = (*(double (**)(void *))(*a2[36] + 16))(a2[36]);
}

uint64_t sub_21B130(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  uint64_t result = sub_21B584(a1, a2, a3);
  if (!result) {
    return result;
  }
  uint64_t v6 = result;
  if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2) {
    return v6;
  }
  uint64_t result = 0;
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) != 0|| (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[8]), (int32x4_t)vceqzq_s64(a3[9])), (int8x16_t)xmmword_20B8880)) & 0xF) != 0)
  {
    return result;
  }
  if (*(void *)(a2 + 32) != 20)
  {
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = a3->i64[v17];
      if (!v18 || (*(unsigned int (**)(uint64_t))(*(void *)v18 + 32))(v18) == 17) {
        goto LABEL_26;
      }
      uint64_t v19 = a3->i64[v17];
      if (v19)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v19 + 32))(v19) == 18) {
          goto LABEL_26;
        }
        uint64_t v20 = a3->i64[v17];
        if (v20) {
          (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
        }
      }
      a3->i64[v17] = 0;
LABEL_26:
      if (++v17 == 20) {
        return 0;
      }
    }
  }
  uint64_t v7 = a3->i64[0];
  uint64_t v8 = (BOOL *)(v6 + 32);
  uint64_t v9 = &a3->i64[1];
  unint64_t v10 = -1;
  do
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 17)
    {
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = 0;
      if (v10 == 18) {
        return v6;
      }
    }
    else
    {
      BOOL v11 = (*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) != 18;
      *((void *)v8 - 1) = *(v9 - 1);
      BOOL *v8 = v11;
      if (v10 == 18) {
        return v6;
      }
    }
    uint64_t v12 = *v9++;
    uint64_t v7 = v12;
    ++v10;
    v8 += 16;
  }
  while (v12);
  uint64_t result = v6;
  if (v10 <= 0x12)
  {
    for (uint64_t i = 0; i != 20; ++i)
    {
      uint64_t v14 = a3->i64[i];
      if (!v14 || (*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) == 17) {
        goto LABEL_17;
      }
      uint64_t v15 = a3->i64[i];
      if (v15)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) == 18) {
          goto LABEL_17;
        }
        uint64_t v16 = a3->i64[i];
        if (v16) {
          (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
        }
      }
      a3->i64[i] = 0;
LABEL_17:
      uint64_t result = 0;
    }
  }
  return result;
}

uint64_t sub_21B498(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    for (uint64_t i = 0; i != 160; i += 8)
    {
      uint64_t v3 = *(void *)(a1 + 16);
      uint64_t v4 = *(void *)(v3 + i);
      if (!v4 || (*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4) == 17) {
        continue;
      }
      uint64_t v5 = *(void *)(v3 + i);
      if (v5)
      {
        if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) == 18) {
          continue;
        }
        uint64_t v6 = *(void *)(v3 + i);
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        }
      }
      *(void *)(v3 + i) = 0;
    }
  }
  return a1;
}

uint64_t sub_21B584(uint64_t a1, uint64_t a2, int64x2_t *a3)
{
  if ((vmaxvq_u8((uint8x16_t)vuzp1q_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(*a3), (int32x4_t)vceqzq_s64(a3[1])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[2]), (int32x4_t)vceqzq_s64(a3[3]))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[4]), (int32x4_t)vceqzq_s64(a3[5])), (int16x8_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[6]), (int32x4_t)vceqzq_s64(a3[7]))))) & 1) == 0&& (vaddvq_s32((int32x4_t)vandq_s8((int8x16_t)vuzp1q_s32((int32x4_t)vceqzq_s64(a3[8]), (int32x4_t)vceqzq_s64(a3[9])), (int8x16_t)xmmword_20B8880)) & 0xF) == 0)
  {
    operator new();
  }
  for (uint64_t i = 0; i != 20; ++i)
  {
    uint64_t v5 = a3->i64[i];
    if (v5 && (*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5) != 17)
    {
      uint64_t v6 = a3->i64[i];
      if (!v6) {
        goto LABEL_5;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) != 18)
      {
        uint64_t v7 = a3->i64[i];
        if (v7) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
LABEL_5:
        a3->i64[i] = 0;
        continue;
      }
    }
  }
  return 0;
}

uint64_t sub_21BA98(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[1];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[2];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[3];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[4];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[5];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[6];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[7];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[8];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[9];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[10];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[11];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[12];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[13];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[14];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[15];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[16];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[17];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) != 2) {
      return 0;
    }
    uint64_t result = a2[18];
    if (!result) {
      return result;
    }
    if ((*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2)
    {
      uint64_t result = a2[19];
      if (result) {
        return (*(unsigned int (**)(uint64_t))(*(void *)result + 32))(result) == 2;
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

void *sub_21BED8(void *a1)
{
  uint64_t v2 = 0;
  *a1 = off_242B6F8;
  do
  {
    uint64_t v3 = &a1[v2];
    uint64_t v4 = a1[v2 + 3];
    if (v4 && *((unsigned char *)v3 + 32))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      v3[3] = 0;
    }
    v2 += 2;
  }
  while (v2 != 40);
  return a1;
}

void sub_21BF74(void *a1)
{
  uint64_t v2 = 0;
  *a1 = off_242B6F8;
  while (1)
  {
    uint64_t v3 = &a1[v2];
    uint64_t v4 = a1[v2 + 3];
    if (v4 && *((unsigned char *)v3 + 32))
    {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
      v3[3] = 0;
    }
    v2 += 2;
    if (v2 == 40)
    {
      operator delete();
    }
  }
}

double sub_21C030(uint64_t a1)
{
  if (!*(void *)(a1 + 8)) {
    return NAN;
  }
  sub_21C170(&v3, (void **)(a1 + 24));
  (*(void (**)(void, double *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *, uint64_t *))(**(void **)(a1 + 8) + 176))(*(void *)(a1 + 8), &v3, &v4, &v5, &v6, &v7, &v8, &v9, &v10, &v11, &v12, &v13, &v14, &v15, &v16, &v17, &v18, &v19, &v20,
    &v21,
    &v22);
  return result;
}

uint64_t sub_21C168()
{
  return 28;
}

void sub_21C170(double *a1, void **a2)
{
  *a1 = (*(double (**)(void))(**a2 + 16))();
  a1[1] = (*(double (**)(void *))(*a2[2] + 16))(a2[2]);
  a1[2] = (*(double (**)(void *))(*a2[4] + 16))(a2[4]);
  a1[3] = (*(double (**)(void *))(*a2[6] + 16))(a2[6]);
  a1[4] = (*(double (**)(void *))(*a2[8] + 16))(a2[8]);
  a1[5] = (*(double (**)(void *))(*a2[10] + 16))(a2[10]);
  a1[6] = (*(double (**)(void *))(*a2[12] + 16))(a2[12]);
  a1[7] = (*(double (**)(void *))(*a2[14] + 16))(a2[14]);
  a1[8] = (*(double (**)(void *))(*a2[16] + 16))(a2[16]);
  a1[9] = (*(double (**)(void *))(*a2[18] + 16))(a2[18]);
  a1[10] = (*(double (**)(void *))(*a2[20] + 16))(a2[20]);
  a1[11] = (*(double (**)(void *))(*a2[22] + 16))(a2[22]);
  a1[12] = (*(double (**)(void *))(*a2[24] + 16))(a2[24]);
  a1[13] = (*(double (**)(void *))(*a2[26] + 16))(a2[26]);
  a1[14] = (*(double (**)(void *))(*a2[28] + 16))(a2[28]);
  a1[15] = (*(double (**)(void *))(*a2[30] + 16))(a2[30]);
  a1[16] = (*(double (**)(void *))(*a2[32] + 16))(a2[32]);
  a1[17] = (*(double (**)(void *))(*a2[34] + 16))(a2[34]);
  a1[18] = (*(double (**)(void *))(*a2[36] + 16))(a2[36]);
  a1[19] = (*(double (**)(void *))(*a2[38] + 16))(a2[38]);
}

uint64_t sub_21C504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)a3;
  uint64_t v5 = *(void *)(a3 + 8) - *(void *)a3;
  if (!v5) {
    goto LABEL_19;
  }
  unint64_t v6 = v5 >> 3;
  uint64_t v7 = v6 <= 1 ? 1 : v6;
  if (*v4)
  {
    uint64_t v8 = 1;
    do
    {
      unint64_t v9 = v8;
      if (v7 == v8) {
        break;
      }
    }
    while (v4[v8++]);
    if (v9 >= v6) {
LABEL_19:
    }
      operator new();
  }
  unint64_t v11 = 0;
  do
  {
    uint64_t v12 = v4[v11];
    if (v12 && (*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) != 17)
    {
      uint64_t v13 = v4[v11];
      if (!v13) {
        goto LABEL_11;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 18)
      {
        uint64_t v14 = v4[v11];
        if (v14) {
          (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
        }
LABEL_11:
        v4[v11] = 0;
      }
    }
    ++v11;
    uint64_t v4 = *(void **)a3;
  }
  while (v11 < (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
  *(void *)(a3 + 8) = v4;
  return 0;
}

void sub_21C7E0()
{
}

void *sub_21C804(void *a1, uint64_t a2, uint64_t a3)
{
  a1[2] = 0;
  *a1 = off_242B730;
  a1[1] = a2;
  a1[3] = 0;
  a1[4] = 0;
  unint64_t v6 = *(const void **)a3;
  uint64_t v5 = *(void *)(a3 + 8);
  int64_t v7 = v5 - *(void *)a3;
  if (v5 != *(void *)a3)
  {
    if (v7 < 0) {
      sub_2E00();
    }
    uint64_t v8 = (char *)operator new(v5 - *(void *)a3);
    a1[2] = v8;
    a1[3] = v8;
    unint64_t v9 = &v8[8 * (v7 >> 3)];
    a1[4] = v9;
    memcpy(v8, v6, v7);
    a1[3] = v9;
  }
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = 0;
  unint64_t v11 = *(const void **)a3;
  uint64_t v10 = *(void *)(a3 + 8);
  uint64_t v14 = 0x7FF8000000000000;
  uint64_t v12 = v10 - (void)v11;
  if (v12) {
    sub_96D18((uint64_t)(a1 + 5), v12 >> 3, &v14);
  }
  return a1;
}

void sub_21C8E0(_Unwind_Exception *exception_object)
{
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 48) = v5;
    operator delete(v5);
    unint64_t v6 = *v2;
    if (!*v2) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    unint64_t v6 = *v2;
    if (!*v2) {
      goto LABEL_3;
    }
  }
  *(void *)(v1 + 24) = v6;
  operator delete(v6);
  _Unwind_Resume(exception_object);
}

void sub_21C930(void *a1)
{
  sub_21CA48(a1);

  operator delete();
}

double sub_21C968(void *a1)
{
  uint64_t v2 = a1[1];
  if (!v2) {
    return NAN;
  }
  uint64_t v3 = a1[2];
  if (a1[3] != v3)
  {
    unint64_t v4 = 0;
    do
    {
      *(double *)(a1[5] + 8 * v4) = (*(double (**)(void))(**(void **)(v3 + 8 * v4) + 16))(*(void *)(v3 + 8 * v4));
      ++v4;
      uint64_t v3 = a1[2];
    }
    while (v4 < (a1[3] - v3) >> 3);
    uint64_t v2 = a1[1];
  }
  uint64_t v5 = *(void (**)(void))(*(void *)v2 + 16);

  v5();
  return result;
}

uint64_t sub_21CA40()
{
  return 29;
}

void *sub_21CA48(void *a1)
{
  *a1 = off_242B730;
  uint64_t v2 = (void *)a1[3];
  if (v2 != (void *)a1[2])
  {
    unint64_t v3 = 0;
    uint64_t v2 = (void *)a1[2];
    do
    {
      uint64_t v4 = v2[v3];
      if (v4)
      {
        int v5 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
        uint64_t v2 = (void *)a1[2];
        if (v5 != 17)
        {
          uint64_t v6 = v2[v3];
          if (v6) {
            (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
          }
          v2[v3] = 0;
          uint64_t v2 = (void *)a1[2];
        }
      }
      ++v3;
    }
    while (v3 < (uint64_t)(a1[3] - (void)v2) >> 3);
  }
  int64_t v7 = (void *)a1[5];
  if (v7)
  {
    a1[6] = v7;
    operator delete(v7);
    uint64_t v2 = (void *)a1[2];
  }
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_21CB54(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, int a5)
{
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = a2;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200((unsigned char *)(a1 + 16), *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *(void *)(a1 + 32) = *((void *)a3 + 2);
    *(_OWORD *)(a1 + 16) = v8;
  }
  *(_DWORD *)(a1 + 40) = a5;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  sub_21DD54(a1, a4);
  return a1;
}

void sub_21CBDC(_Unwind_Exception *exception_object)
{
  if (*v3) {
    sub_20A68AC(v1, *v3, (void **)(v1 + 48));
  }
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_21CC0C(void *a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3 = a1[6];
  if (v3 == a1[7]) {
    return 1;
  }
  std::string v93 = a3;
  unint64_t v6 = 0;
  v112 = 0;
  v113 = 0;
  v114 = 0;
  do
  {
    while (1)
    {
      __str.__r_.__value_.__s.__data_[0] = 0;
      uint64_t v102 = 0;
      BOOL v8 = sub_21F46C((unsigned char *)(v3 + 32 * v6 + 8), (char *)a2, &v102, &__str);
      if (v8)
      {
        *std::string v93 = v6;
        uint64_t v20 = v112;
        if (!v112) {
          return v8;
        }
        goto LABEL_107;
      }
      uint64_t v9 = v102;
      uint64_t v10 = __str.__r_.__value_.__s.__data_[0];
      unint64_t v11 = v113;
      if (v113 >= v114) {
        break;
      }
      *(void *)v113 = v102;
      *((void *)v11 + 1) = v10;
      int64_t v7 = v11 + 16;
      v113 = v11 + 16;
      ++v6;
      uint64_t v3 = a1[6];
      if (v6 >= (a1[7] - v3) >> 5) {
        goto LABEL_26;
      }
    }
    uint64_t v12 = v112;
    uint64_t v13 = (v113 - v112) >> 4;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 60) {
      sub_2E00();
    }
    uint64_t v15 = v114 - v112;
    if ((v114 - v112) >> 3 > v14) {
      unint64_t v14 = v15 >> 3;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v16 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      if (v16 >> 60) {
        sub_188D718();
      }
      uint64_t v17 = (char *)operator new(16 * v16);
      uint64_t v18 = &v17[16 * v13];
      *(void *)uint64_t v18 = v9;
      *((void *)v18 + 1) = v10;
      uint64_t v19 = v18;
      if (v11 == v12)
      {
LABEL_15:
        v112 = v19;
        v114 = &v17[16 * v16];
        if (!v11) {
          goto LABEL_17;
        }
LABEL_16:
        operator delete(v11);
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v17 = 0;
      uint64_t v18 = (char *)(16 * v13);
      *(void *)uint64_t v18 = v102;
      *((void *)v18 + 1) = v10;
      uint64_t v19 = v18;
      if (v11 == v12) {
        goto LABEL_15;
      }
    }
    do
    {
      *((_OWORD *)v19 - 1) = *((_OWORD *)v11 - 1);
      v19 -= 16;
      v11 -= 16;
    }
    while (v11 != v12);
    unint64_t v11 = v112;
    v112 = v19;
    v114 = &v17[16 * v16];
    if (v11) {
      goto LABEL_16;
    }
LABEL_17:
    int64_t v7 = v18 + 16;
    v113 = v18 + 16;
    ++v6;
    uint64_t v3 = a1[6];
  }
  while (v6 < (a1[7] - v3) >> 5);
LABEL_26:
  uint64_t v21 = v7 - v112;
  if (v21 == 16)
  {
    uint64_t v22 = a1[1];
    std::operator+<char>();
    uint64_t v23 = std::string::append(&v96, "', Expected '");
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v97.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v97.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    uint64_t v25 = a1[6];
    BOOL v28 = *(const std::string::value_type **)(v25 + 8);
    uint64_t v26 = v25 + 8;
    uint64_t v27 = v28;
    int v29 = *(char *)(v26 + 23);
    if (v29 >= 0) {
      BOOL v30 = (const std::string::value_type *)v26;
    }
    else {
      BOOL v30 = v27;
    }
    if (v29 >= 0) {
      std::string::size_type v31 = *(unsigned __int8 *)(v26 + 23);
    }
    else {
      std::string::size_type v31 = *(void *)(v26 + 8);
    }
    BOOL v32 = std::string::append(&v97, v30, v31);
    long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v98.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    uint64_t v34 = std::string::append(&v98, "'  call set: '");
    long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    v99.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v99.__r_.__value_.__l.__data_ = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    int v36 = *(char *)(a2 + 23);
    if (v36 >= 0) {
      v37 = (const std::string::value_type *)a2;
    }
    else {
      v37 = *(const std::string::value_type **)a2;
    }
    if (v36 >= 0) {
      std::string::size_type v38 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v38 = *(void *)(a2 + 8);
    }
    std::string::size_type v39 = std::string::append(&v99, v37, v38);
    long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
    v100.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v100.__r_.__value_.__l.__data_ = v40;
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    v41 = std::string::append(&v100, "'");
    long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v42;
    v41->__r_.__value_.__l.__size_ = 0;
    v41->__r_.__value_.__r.__words[2] = 0;
    v41->__r_.__value_.__r.__words[0] = 0;
    memset(&v94, 0, sizeof(v94));
    std::string::push_back(&v94, 57);
    std::string::push_back(&v94, 50);
    std::string::push_back(&v94, 52);
    std::string::push_back(&v94, 51);
    std::string::push_back(&v94, 50);
    std::string::size_type size = HIBYTE(v94.__r_.__value_.__r.__words[2]);
    if ((v94.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v44 = &v94;
    }
    else {
      v44 = (std::string *)v94.__r_.__value_.__r.__words[0];
    }
    if ((v94.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = v94.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      long long v45 = (std::string *)((char *)v44 + size - 1);
      if (v45 > v44)
      {
        uint64_t v46 = &v44->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v47 = *(v46 - 1);
          *(v46 - 1) = v45->__r_.__value_.__s.__data_[0];
          v45->__r_.__value_.__s.__data_[0] = v47;
          long long v45 = (std::string *)((char *)v45 - 1);
          BOOL v48 = v46++ >= (char *)v45;
        }
        while (!v48);
      }
    }
    unint64_t v49 = std::string::insert(&v94, 0, "exprtk.hpp:");
    long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
    v95.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v95.__r_.__value_.__l.__data_ = v50;
    v49->__r_.__value_.__l.__size_ = 0;
    v49->__r_.__value_.__r.__words[2] = 0;
    v49->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v103.__r_.__value_.__s + 23) = 0;
    v103.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v104 = -1;
    long long v106 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    long long __p = 0u;
    long long v110 = 0u;
    uint64_t v111 = 0;
    int v105 = 1;
    LODWORD(v102) = *(_DWORD *)(v22 + 104);
    std::string::operator=(&v103, (const std::string *)(v22 + 112));
    uint64_t v104 = *(void *)(v22 + 136);
    std::string::operator=((std::string *)&v106, &__str);
    std::string::operator=((std::string *)((char *)&v107 + 8), &v95);
    uint64_t v51 = *(void *)(v22 + 568);
    uint64_t v52 = *(void *)(v22 + 560);
    uint64_t v53 = 30 * ((v51 - v52) >> 3) - 1;
    if (v51 == v52) {
      uint64_t v53 = 0;
    }
    if (v53 == *(void *)(v22 + 592) + *(void *)(v22 + 584))
    {
      sub_B4B88(v22 + 552);
      uint64_t v52 = *(void *)(v22 + 560);
      uint64_t v51 = *(void *)(v22 + 568);
    }
    if (v51 == v52)
    {
      uint64_t v55 = 0;
    }
    else
    {
      unint64_t v54 = *(void *)(v22 + 592) + *(void *)(v22 + 584);
      uint64_t v55 = *(void *)(v52 + 8 * (v54 / 0x1E)) + 136 * (v54 % 0x1E);
    }
  }
  else
  {
    if ((unint64_t)v21 < 0x11)
    {
      uint64_t v56 = 0;
    }
    else
    {
      uint64_t v56 = 0;
      unint64_t v57 = v21 >> 4;
      if (v57 <= 2) {
        unint64_t v57 = 2;
      }
      v58 = (unint64_t *)(v112 + 16);
      for (uint64_t i = 1; i != v57; ++i)
      {
        unint64_t v60 = *v58;
        v58 += 2;
        if (v60 > *(void *)&v112[16 * v56]) {
          uint64_t v56 = i;
        }
      }
    }
    uint64_t v22 = a1[1];
    std::operator+<char>();
    v61 = std::string::append(&v96, "', Best match: '");
    long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
    v97.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v97.__r_.__value_.__l.__data_ = v62;
    v61->__r_.__value_.__l.__size_ = 0;
    v61->__r_.__value_.__r.__words[2] = 0;
    v61->__r_.__value_.__r.__words[0] = 0;
    uint64_t v63 = a1[6] + 32 * v56;
    unint64_t v66 = *(const std::string::value_type **)(v63 + 8);
    uint64_t v64 = v63 + 8;
    uint64_t v65 = v66;
    int v67 = *(char *)(v64 + 23);
    if (v67 >= 0) {
      long long v68 = (const std::string::value_type *)v64;
    }
    else {
      long long v68 = v65;
    }
    if (v67 >= 0) {
      std::string::size_type v69 = *(unsigned __int8 *)(v64 + 23);
    }
    else {
      std::string::size_type v69 = *(void *)(v64 + 8);
    }
    v70 = std::string::append(&v97, v68, v69);
    long long v71 = *(_OWORD *)&v70->__r_.__value_.__l.__data_;
    v98.__r_.__value_.__r.__words[2] = v70->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v98.__r_.__value_.__l.__data_ = v71;
    v70->__r_.__value_.__l.__size_ = 0;
    v70->__r_.__value_.__r.__words[2] = 0;
    v70->__r_.__value_.__r.__words[0] = 0;
    v72 = std::string::append(&v98, "'  call set: '");
    long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
    v99.__r_.__value_.__r.__words[2] = v72->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v99.__r_.__value_.__l.__data_ = v73;
    v72->__r_.__value_.__l.__size_ = 0;
    v72->__r_.__value_.__r.__words[2] = 0;
    v72->__r_.__value_.__r.__words[0] = 0;
    int v74 = *(char *)(a2 + 23);
    if (v74 >= 0) {
      long long v75 = (const std::string::value_type *)a2;
    }
    else {
      long long v75 = *(const std::string::value_type **)a2;
    }
    if (v74 >= 0) {
      std::string::size_type v76 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      std::string::size_type v76 = *(void *)(a2 + 8);
    }
    uint64_t v77 = std::string::append(&v99, v75, v76);
    long long v78 = *(_OWORD *)&v77->__r_.__value_.__l.__data_;
    v100.__r_.__value_.__r.__words[2] = v77->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v100.__r_.__value_.__l.__data_ = v78;
    v77->__r_.__value_.__l.__size_ = 0;
    v77->__r_.__value_.__r.__words[2] = 0;
    v77->__r_.__value_.__r.__words[0] = 0;
    unint64_t v79 = std::string::append(&v100, "'");
    long long v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v79->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v80;
    v79->__r_.__value_.__l.__size_ = 0;
    v79->__r_.__value_.__r.__words[2] = 0;
    v79->__r_.__value_.__r.__words[0] = 0;
    memset(&v94, 0, sizeof(v94));
    std::string::push_back(&v94, 49);
    std::string::push_back(&v94, 53);
    std::string::push_back(&v94, 52);
    std::string::push_back(&v94, 51);
    std::string::push_back(&v94, 50);
    std::string::size_type v81 = HIBYTE(v94.__r_.__value_.__r.__words[2]);
    if ((v94.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v82 = &v94;
    }
    else {
      uint64_t v82 = (std::string *)v94.__r_.__value_.__r.__words[0];
    }
    if ((v94.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v81 = v94.__r_.__value_.__l.__size_;
    }
    if (v81)
    {
      uint64_t v83 = (std::string *)((char *)v82 + v81 - 1);
      if (v83 > v82)
      {
        uint64_t v84 = &v82->__r_.__value_.__s.__data_[1];
        do
        {
          std::string::value_type v85 = *(v84 - 1);
          *(v84 - 1) = v83->__r_.__value_.__s.__data_[0];
          v83->__r_.__value_.__s.__data_[0] = v85;
          uint64_t v83 = (std::string *)((char *)v83 - 1);
          BOOL v48 = v84++ >= (char *)v83;
        }
        while (!v48);
      }
    }
    std::string v86 = std::string::insert(&v94, 0, "exprtk.hpp:");
    long long v87 = *(_OWORD *)&v86->__r_.__value_.__l.__data_;
    v95.__r_.__value_.__r.__words[2] = v86->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v95.__r_.__value_.__l.__data_ = v87;
    v86->__r_.__value_.__l.__size_ = 0;
    v86->__r_.__value_.__r.__words[2] = 0;
    v86->__r_.__value_.__r.__words[0] = 0;
    *((unsigned char *)&v103.__r_.__value_.__s + 23) = 0;
    v103.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v104 = -1;
    long long v106 = 0u;
    long long v107 = 0u;
    long long v108 = 0u;
    long long __p = 0u;
    long long v110 = 0u;
    uint64_t v111 = 0;
    int v105 = 1;
    LODWORD(v102) = *(_DWORD *)(v22 + 104);
    std::string::operator=(&v103, (const std::string *)(v22 + 112));
    uint64_t v104 = *(void *)(v22 + 136);
    std::string::operator=((std::string *)&v106, &__str);
    std::string::operator=((std::string *)((char *)&v107 + 8), &v95);
    uint64_t v88 = *(void *)(v22 + 568);
    uint64_t v89 = *(void *)(v22 + 560);
    uint64_t v90 = 30 * ((v88 - v89) >> 3) - 1;
    if (v88 == v89) {
      uint64_t v90 = 0;
    }
    if (v90 == *(void *)(v22 + 592) + *(void *)(v22 + 584))
    {
      sub_B4B88(v22 + 552);
      uint64_t v89 = *(void *)(v22 + 560);
      uint64_t v88 = *(void *)(v22 + 568);
    }
    if (v88 == v89)
    {
      uint64_t v55 = 0;
    }
    else
    {
      unint64_t v91 = *(void *)(v22 + 592) + *(void *)(v22 + 584);
      uint64_t v55 = *(void *)(v89 + 8 * (v91 / 0x1E)) + 136 * (v91 % 0x1E);
    }
  }
  sub_B5158(v55, (uint64_t)&v102);
  ++*(void *)(v22 + 592);
  if (SBYTE7(v110) < 0)
  {
    operator delete((void *)__p);
    if (SHIBYTE(v108) < 0) {
      goto LABEL_110;
    }
LABEL_96:
    if ((SBYTE7(v107) & 0x80000000) == 0) {
      goto LABEL_97;
    }
LABEL_111:
    operator delete((void *)v106);
    if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_112;
    }
LABEL_98:
    if ((SHIBYTE(v95.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_99;
    }
LABEL_113:
    operator delete(v95.__r_.__value_.__l.__data_);
    if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_114;
    }
LABEL_100:
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_101;
    }
LABEL_115:
    operator delete(__str.__r_.__value_.__l.__data_);
    if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_116;
    }
LABEL_102:
    if ((SHIBYTE(v99.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_103;
    }
LABEL_117:
    operator delete(v99.__r_.__value_.__l.__data_);
    if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_118;
    }
LABEL_104:
    if ((SHIBYTE(v97.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_105;
    }
LABEL_119:
    operator delete(v97.__r_.__value_.__l.__data_);
    if (SHIBYTE(v96.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_120;
    }
LABEL_106:
    uint64_t v20 = v112;
    if (!v112) {
      return v8;
    }
LABEL_107:
    operator delete(v20);
    return v8;
  }
  if ((SHIBYTE(v108) & 0x80000000) == 0) {
    goto LABEL_96;
  }
LABEL_110:
  operator delete(*((void **)&v107 + 1));
  if (SBYTE7(v107) < 0) {
    goto LABEL_111;
  }
LABEL_97:
  if ((SHIBYTE(v103.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_98;
  }
LABEL_112:
  operator delete(v103.__r_.__value_.__l.__data_);
  if (SHIBYTE(v95.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_113;
  }
LABEL_99:
  if ((SHIBYTE(v94.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_100;
  }
LABEL_114:
  operator delete(v94.__r_.__value_.__l.__data_);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_115;
  }
LABEL_101:
  if ((SHIBYTE(v100.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_102;
  }
LABEL_116:
  operator delete(v100.__r_.__value_.__l.__data_);
  if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_117;
  }
LABEL_103:
  if ((SHIBYTE(v98.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_104;
  }
LABEL_118:
  operator delete(v98.__r_.__value_.__l.__data_);
  if (SHIBYTE(v97.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_119;
  }
LABEL_105:
  if ((SHIBYTE(v96.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_106;
  }
LABEL_120:
  operator delete(v96.__r_.__value_.__l.__data_);
  uint64_t v20 = v112;
  if (v112) {
    goto LABEL_107;
  }
  return v8;
}

void sub_21D51C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,void *a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,char a63)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a61 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a54 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a61 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a56);
  if ((a54 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a49);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_8:
    uint64_t v65 = *(void **)(v63 - 120);
    if (!v65) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a22);
  uint64_t v65 = *(void **)(v63 - 120);
  if (!v65) {
LABEL_9:
  }
    _Unwind_Resume(exception_object);
LABEL_17:
  *(void *)(v63 - 112) = v65;
  operator delete(v65);
  _Unwind_Resume(exception_object);
}

uint64_t sub_21D714(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  int v5 = *(void **)a3;
  uint64_t v6 = *(void *)(a3 + 8) - *(void *)a3;
  if (!v6) {
    goto LABEL_19;
  }
  unint64_t v7 = v6 >> 3;
  uint64_t v8 = v7 <= 1 ? 1 : v7;
  if (*v5)
  {
    uint64_t v9 = 1;
    do
    {
      unint64_t v10 = v9;
      if (v8 == v9) {
        break;
      }
    }
    while (v5[v9++]);
    if (v10 >= v7)
    {
LABEL_19:
      if (*a4 != -1) {
        operator new();
      }
      operator new();
    }
  }
  unint64_t v12 = 0;
  do
  {
    uint64_t v13 = v5[v12];
    if (v13 && (*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) != 17)
    {
      uint64_t v14 = v5[v12];
      if (!v14) {
        goto LABEL_11;
      }
      if ((*(unsigned int (**)(uint64_t))(*(void *)v14 + 32))(v14) != 18)
      {
        uint64_t v15 = v5[v12];
        if (v15) {
          (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
        }
LABEL_11:
        v5[v12] = 0;
      }
    }
    ++v12;
    int v5 = *(void **)a3;
  }
  while (v12 < (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
  *(void *)(a3 + 8) = v5;
  return 0;
}

void sub_21DC70()
{
  uint64_t v2 = *v1;
  if (*v1)
  {
    *(void *)(v0 + 48) = v2;
    operator delete(v2);
  }
  sub_20A6920((void **)(v0 + 16), v0);
}

void sub_21DC98()
{
}

uint64_t sub_21DCBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    uint64_t v4 = *(void **)(a1 + 48);
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 1) < 0) {
          operator delete(*(void **)(v3 - 24));
        }
        v3 -= 32;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 48);
    }
    *(void *)(a1 + 56) = v2;
    operator delete(v4);
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

void sub_21DD54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  if (!v2) {
    return;
  }
  sub_21EC78((unsigned __int8 *)a2, 0x7Cu, (uint64_t)&v138);
  v137[0] = 0;
  v137[1] = 0;
  int v105 = v137;
  v136 = v137;
  uint64_t v4 = v138;
  if (v139 == (void **)v138)
  {
    sub_2F020((uint64_t)&v136, 0);
    uint64_t v102 = (void **)v138;
    if (!v138) {
      return;
    }
    goto LABEL_178;
  }
  unint64_t v5 = 0;
  do
  {
    long long v134 = 0uLL;
    uint64_t v135 = 0;
    uint64_t v6 = &v4[24 * v5];
    if (v6[23] < 0)
    {
      sub_4200(&__s, *(void **)v6, *((void *)v6 + 1));
    }
    else
    {
      long long v7 = *(_OWORD *)v6;
      __s.__r_.__value_.__r.__words[2] = *((void *)v6 + 2);
      *(_OWORD *)&__s.__r_.__value_.__l.__data_ = v7;
    }
    char v8 = sub_21EFD0(a1, &__s, (uint64_t)&v133);
    char v9 = v8;
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__s.__r_.__value_.__l.__data_);
      if (v9) {
        goto LABEL_11;
      }
LABEL_88:
      *(unsigned char *)a1 = 0;
      uint64_t v81 = *(void *)(a1 + 8);
      std::operator+<char>();
      uint64_t v82 = std::string::append(&v119, "' for function: ");
      long long v83 = *(_OWORD *)&v82->__r_.__value_.__l.__data_;
      v120.__r_.__value_.__r.__words[2] = v82->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v120.__r_.__value_.__l.__data_ = v83;
      v82->__r_.__value_.__l.__size_ = 0;
      v82->__r_.__value_.__r.__words[2] = 0;
      v82->__r_.__value_.__r.__words[0] = 0;
      char v84 = *(unsigned char *)(a1 + 39);
      if (v84 >= 0) {
        std::string::value_type v85 = (const std::string::value_type *)(a1 + 16);
      }
      else {
        std::string::value_type v85 = *(const std::string::value_type **)(a1 + 16);
      }
      if (v84 >= 0) {
        std::string::size_type v86 = *(unsigned __int8 *)(a1 + 39);
      }
      else {
        std::string::size_type v86 = *(void *)(a1 + 24);
      }
      long long v87 = std::string::append(&v120, v85, v86);
      long long v88 = *(_OWORD *)&v87->__r_.__value_.__l.__data_;
      __str.__r_.__value_.__r.__words[2] = v87->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v88;
      v87->__r_.__value_.__l.__size_ = 0;
      v87->__r_.__value_.__r.__words[2] = 0;
      v87->__r_.__value_.__r.__words[0] = 0;
      memset(&v117, 0, sizeof(v117));
      std::string::push_back(&v117, 50);
      std::string::push_back(&v117, 57);
      std::string::push_back(&v117, 53);
      std::string::push_back(&v117, 51);
      std::string::push_back(&v117, 50);
      std::string::size_type size = HIBYTE(v117.__r_.__value_.__r.__words[2]);
      uint64_t v90 = &v117;
      if ((v117.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      {
        std::string::size_type size = v117.__r_.__value_.__l.__size_;
        uint64_t v90 = (std::string *)v117.__r_.__value_.__r.__words[0];
      }
      if (size)
      {
        unint64_t v91 = (std::string *)((char *)v90 + size - 1);
        if (v91 > v90)
        {
          int v92 = &v90->__r_.__value_.__s.__data_[1];
          do
          {
            std::string::value_type v93 = *(v92 - 1);
            *(v92 - 1) = v91->__r_.__value_.__s.__data_[0];
            v91->__r_.__value_.__s.__data_[0] = v93;
            unint64_t v91 = (std::string *)((char *)v91 - 1);
            BOOL v70 = v92++ >= (char *)v91;
          }
          while (!v70);
        }
      }
      std::string v94 = std::string::insert(&v117, 0, "exprtk.hpp:");
      long long v95 = *(_OWORD *)&v94->__r_.__value_.__l.__data_;
      v118.__r_.__value_.__r.__words[2] = v94->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v118.__r_.__value_.__l.__data_ = v95;
      v94->__r_.__value_.__l.__size_ = 0;
      v94->__r_.__value_.__r.__words[2] = 0;
      v94->__r_.__value_.__r.__words[0] = 0;
      *((unsigned char *)&v123.__r_.__value_.__s + 23) = 0;
      v123.__r_.__value_.__s.__data_[0] = 0;
      uint64_t v124 = -1;
      long long v126 = 0u;
      long long v127 = 0u;
      long long v128 = 0u;
      long long __p = 0u;
      long long v130 = 0u;
      uint64_t v131 = 0;
      int v125 = 1;
      int v122 = *(_DWORD *)(v81 + 104);
      std::string::operator=(&v123, (const std::string *)(v81 + 112));
      uint64_t v124 = *(void *)(v81 + 136);
      std::string::operator=((std::string *)&v126, &__str);
      std::string::operator=((std::string *)((char *)&v127 + 8), &v118);
      uint64_t v96 = *(void *)(v81 + 568);
      uint64_t v97 = *(void *)(v81 + 560);
      uint64_t v98 = 30 * ((v96 - v97) >> 3) - 1;
      if (v96 == v97) {
        uint64_t v98 = 0;
      }
      if (v98 == *(void *)(v81 + 592) + *(void *)(v81 + 584))
      {
        sub_B4B88(v81 + 552);
        uint64_t v97 = *(void *)(v81 + 560);
        uint64_t v96 = *(void *)(v81 + 568);
      }
      if (v96 == v97)
      {
        uint64_t v100 = 0;
      }
      else
      {
        unint64_t v99 = *(void *)(v81 + 592) + *(void *)(v81 + 584);
        uint64_t v100 = *(void *)(v97 + 8 * (v99 / 0x1E)) + 136 * (v99 % 0x1E);
      }
      sub_B5158(v100, (uint64_t)&v122);
      ++*(void *)(v81 + 592);
      if (SBYTE7(v130) < 0)
      {
        operator delete((void *)__p);
        if ((SHIBYTE(v128) & 0x80000000) == 0)
        {
LABEL_112:
          if ((SBYTE7(v127) & 0x80000000) == 0) {
            goto LABEL_113;
          }
          goto LABEL_122;
        }
      }
      else if ((SHIBYTE(v128) & 0x80000000) == 0)
      {
        goto LABEL_112;
      }
      operator delete(*((void **)&v127 + 1));
      if ((SBYTE7(v127) & 0x80000000) == 0)
      {
LABEL_113:
        if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_114;
        }
        goto LABEL_123;
      }
LABEL_122:
      operator delete((void *)v126);
      if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_114:
        if ((SHIBYTE(v118.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_115;
        }
        goto LABEL_124;
      }
LABEL_123:
      operator delete(v123.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v118.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_115:
        if ((SHIBYTE(v117.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_116;
        }
        goto LABEL_125;
      }
LABEL_124:
      operator delete(v118.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v117.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_116:
        if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_117;
        }
        goto LABEL_126;
      }
LABEL_125:
      operator delete(v117.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_117:
        if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_118;
        }
        goto LABEL_127;
      }
LABEL_126:
      operator delete(__str.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_118:
        if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_151;
        }
LABEL_128:
        operator delete(v119.__r_.__value_.__l.__data_);
        goto LABEL_151;
      }
LABEL_127:
      operator delete(v120.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_151;
      }
      goto LABEL_128;
    }
    if ((v8 & 1) == 0) {
      goto LABEL_88;
    }
LABEL_11:
    unint64_t v10 = v137[0];
    if (v137[0])
    {
      unint64_t v11 = &v138[24 * v5];
      int v12 = v11[23];
      size_t v13 = v12 >= 0 ? v11[23] : *((void *)v11 + 1);
      uint64_t v14 = v12 >= 0 ? &v138[24 * v5] : *(char **)v11;
      uint64_t v15 = v105;
      do
      {
        unint64_t v16 = v10;
        uint64_t v17 = v15;
        uint64_t v19 = v10 + 32;
        uint64_t v18 = (char *)*((void *)v10 + 4);
        int v20 = v16[55];
        if (v20 >= 0) {
          size_t v21 = v16[55];
        }
        else {
          size_t v21 = *((void *)v16 + 5);
        }
        if (v20 >= 0) {
          uint64_t v22 = v19;
        }
        else {
          uint64_t v22 = v18;
        }
        if (v13 >= v21) {
          size_t v23 = v21;
        }
        else {
          size_t v23 = v13;
        }
        int v24 = memcmp(v22, v14, v23);
        BOOL v25 = v24 < 0;
        if (!v24) {
          BOOL v25 = v21 < v13;
        }
        uint64_t v26 = (char **)(v16 + 8);
        if (v25)
        {
          uint64_t v15 = v17;
        }
        else
        {
          uint64_t v26 = (char **)v16;
          uint64_t v15 = (char **)v16;
        }
        unint64_t v10 = *v26;
      }
      while (v10);
      if (v15 != v105)
      {
        uint64_t v27 = (char *)(v17 + 4);
        BOOL v28 = !v25;
        if (v25) {
          int v29 = (char *)v17;
        }
        else {
          int v29 = v16;
        }
        if (v28) {
          uint64_t v27 = v19;
        }
        int v30 = *((char *)v15 + 55);
        BOOL v32 = (char *)*((void *)v29 + 4);
        size_t v31 = *((void *)v29 + 5);
        if (v30 >= 0) {
          size_t v33 = *((unsigned __int8 *)v15 + 55);
        }
        else {
          size_t v33 = v31;
        }
        if (v30 >= 0) {
          uint64_t v34 = v27;
        }
        else {
          uint64_t v34 = v32;
        }
        if (v33 >= v13) {
          size_t v35 = v13;
        }
        else {
          size_t v35 = v33;
        }
        int v36 = memcmp(v14, v34, v35);
        BOOL v37 = v13 >= v33;
        if (v36) {
          BOOL v37 = v36 >= 0;
        }
        if (v37)
        {
          *(unsigned char *)a1 = 0;
          uint64_t v38 = *(void *)(a1 + 8);
          std::operator+<char>();
          std::string::size_type v39 = std::string::append(&v112, "' has a parameter sequence conflict between ");
          long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
          v113.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v113.__r_.__value_.__l.__data_ = v40;
          v39->__r_.__value_.__l.__size_ = 0;
          v39->__r_.__value_.__r.__words[2] = 0;
          v39->__r_.__value_.__r.__words[0] = 0;
          v41 = std::string::append(&v113, "pseq_idx[");
          long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
          v114.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v114.__r_.__value_.__l.__data_ = v42;
          v41->__r_.__value_.__l.__size_ = 0;
          v41->__r_.__value_.__r.__words[2] = 0;
          v41->__r_.__value_.__r.__words[0] = 0;
          sub_B1D70(*((_DWORD *)v15 + 14), (unint64_t)v110);
          if ((v111 & 0x80u) == 0) {
            std::string::value_type v43 = v110;
          }
          else {
            std::string::value_type v43 = (void **)v110[0];
          }
          if ((v111 & 0x80u) == 0) {
            std::string::size_type v44 = v111;
          }
          else {
            std::string::size_type v44 = (std::string::size_type)v110[1];
          }
          long long v45 = std::string::append(&v114, (const std::string::value_type *)v43, v44);
          long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
          v115.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v115.__r_.__value_.__l.__data_ = v46;
          v45->__r_.__value_.__l.__size_ = 0;
          v45->__r_.__value_.__r.__words[2] = 0;
          v45->__r_.__value_.__r.__words[0] = 0;
          std::string::value_type v47 = std::string::append(&v115, "] and");
          long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
          v116.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v116.__r_.__value_.__l.__data_ = v48;
          v47->__r_.__value_.__l.__size_ = 0;
          v47->__r_.__value_.__r.__words[2] = 0;
          v47->__r_.__value_.__r.__words[0] = 0;
          unint64_t v49 = std::string::append(&v116, "pseq_idx[");
          long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
          v117.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v117.__r_.__value_.__l.__data_ = v50;
          v49->__r_.__value_.__l.__size_ = 0;
          v49->__r_.__value_.__r.__words[2] = 0;
          v49->__r_.__value_.__r.__words[0] = 0;
          sub_B1D70(v5, (unint64_t)v108);
          if ((v109 & 0x80u) == 0) {
            uint64_t v51 = v108;
          }
          else {
            uint64_t v51 = (void **)v108[0];
          }
          if ((v109 & 0x80u) == 0) {
            std::string::size_type v52 = v109;
          }
          else {
            std::string::size_type v52 = (std::string::size_type)v108[1];
          }
          uint64_t v53 = std::string::append(&v117, (const std::string::value_type *)v51, v52);
          long long v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
          v118.__r_.__value_.__r.__words[2] = v53->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v118.__r_.__value_.__l.__data_ = v54;
          v53->__r_.__value_.__l.__size_ = 0;
          v53->__r_.__value_.__r.__words[2] = 0;
          v53->__r_.__value_.__r.__words[0] = 0;
          uint64_t v55 = std::string::append(&v118, "] ");
          long long v56 = *(_OWORD *)&v55->__r_.__value_.__l.__data_;
          v119.__r_.__value_.__r.__words[2] = v55->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v56;
          v55->__r_.__value_.__l.__size_ = 0;
          v55->__r_.__value_.__r.__words[2] = 0;
          v55->__r_.__value_.__r.__words[0] = 0;
          unint64_t v57 = std::string::append(&v119, "param seq: ");
          long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
          v120.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v120.__r_.__value_.__l.__data_ = v58;
          v57->__r_.__value_.__l.__size_ = 0;
          v57->__r_.__value_.__r.__words[2] = 0;
          v57->__r_.__value_.__r.__words[0] = 0;
          v59 = &v138[24 * v5];
          int v60 = v59[23];
          if (v60 >= 0) {
            v61 = &v138[24 * v5];
          }
          else {
            v61 = *(const std::string::value_type **)v59;
          }
          if (v60 >= 0) {
            std::string::size_type v62 = v59[23];
          }
          else {
            std::string::size_type v62 = *((void *)v59 + 1);
          }
          uint64_t v63 = std::string::append(&v120, v61, v62);
          long long v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
          __str.__r_.__value_.__r.__words[2] = v63->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v64;
          v63->__r_.__value_.__l.__size_ = 0;
          v63->__r_.__value_.__r.__words[2] = 0;
          v63->__r_.__value_.__r.__words[0] = 0;
          memset(&v106, 0, sizeof(v106));
          std::string::push_back(&v106, 48);
          std::string::push_back(&v106, 49);
          std::string::push_back(&v106, 54);
          std::string::push_back(&v106, 51);
          std::string::push_back(&v106, 50);
          std::string::size_type v65 = HIBYTE(v106.__r_.__value_.__r.__words[2]);
          unint64_t v66 = &v106;
          if ((v106.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
          {
            std::string::size_type v65 = v106.__r_.__value_.__l.__size_;
            unint64_t v66 = (std::string *)v106.__r_.__value_.__r.__words[0];
          }
          if (v65)
          {
            int v67 = (std::string *)((char *)v66 + v65 - 1);
            if (v67 > v66)
            {
              long long v68 = &v66->__r_.__value_.__s.__data_[1];
              do
              {
                std::string::value_type v69 = *(v68 - 1);
                *(v68 - 1) = v67->__r_.__value_.__s.__data_[0];
                v67->__r_.__value_.__s.__data_[0] = v69;
                int v67 = (std::string *)((char *)v67 - 1);
                BOOL v70 = v68++ >= (char *)v67;
              }
              while (!v70);
            }
          }
          long long v71 = std::string::insert(&v106, 0, "exprtk.hpp:");
          long long v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
          v107.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v72;
          v71->__r_.__value_.__l.__size_ = 0;
          v71->__r_.__value_.__r.__words[2] = 0;
          v71->__r_.__value_.__r.__words[0] = 0;
          *((unsigned char *)&v123.__r_.__value_.__s + 23) = 0;
          v123.__r_.__value_.__s.__data_[0] = 0;
          uint64_t v124 = -1;
          long long v126 = 0u;
          long long v127 = 0u;
          long long v128 = 0u;
          long long __p = 0u;
          long long v130 = 0u;
          uint64_t v131 = 0;
          int v125 = 1;
          int v122 = *(_DWORD *)(v38 + 104);
          std::string::operator=(&v123, (const std::string *)(v38 + 112));
          uint64_t v124 = *(void *)(v38 + 136);
          std::string::operator=((std::string *)&v126, &__str);
          std::string::operator=((std::string *)((char *)&v127 + 8), &v107);
          uint64_t v73 = *(void *)(v38 + 568);
          uint64_t v74 = *(void *)(v38 + 560);
          uint64_t v75 = 30 * ((v73 - v74) >> 3) - 1;
          if (v73 == v74) {
            uint64_t v75 = 0;
          }
          if (v75 == *(void *)(v38 + 592) + *(void *)(v38 + 584))
          {
            sub_B4B88(v38 + 552);
            uint64_t v74 = *(void *)(v38 + 560);
            uint64_t v73 = *(void *)(v38 + 568);
          }
          if (v73 == v74)
          {
            uint64_t v77 = 0;
          }
          else
          {
            unint64_t v76 = *(void *)(v38 + 592) + *(void *)(v38 + 584);
            uint64_t v77 = *(void *)(v74 + 8 * (v76 / 0x1E)) + 136 * (v76 % 0x1E);
          }
          sub_B5158(v77, (uint64_t)&v122);
          ++*(void *)(v38 + 592);
          if (SBYTE7(v130) < 0)
          {
            operator delete((void *)__p);
            if ((SHIBYTE(v128) & 0x80000000) == 0)
            {
LABEL_135:
              if ((SBYTE7(v127) & 0x80000000) == 0) {
                goto LABEL_136;
              }
              goto LABEL_158;
            }
          }
          else if ((SHIBYTE(v128) & 0x80000000) == 0)
          {
            goto LABEL_135;
          }
          operator delete(*((void **)&v127 + 1));
          if ((SBYTE7(v127) & 0x80000000) == 0)
          {
LABEL_136:
            if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_137;
            }
            goto LABEL_159;
          }
LABEL_158:
          operator delete((void *)v126);
          if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_137:
            if ((SHIBYTE(v107.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_138;
            }
            goto LABEL_160;
          }
LABEL_159:
          operator delete(v123.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v107.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_138:
            if ((SHIBYTE(v106.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_139;
            }
            goto LABEL_161;
          }
LABEL_160:
          operator delete(v107.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v106.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_139:
            if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_140;
            }
            goto LABEL_162;
          }
LABEL_161:
          operator delete(v106.__r_.__value_.__l.__data_);
          if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_140:
            if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_141;
            }
            goto LABEL_163;
          }
LABEL_162:
          operator delete(__str.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_141:
            if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_142;
            }
            goto LABEL_164;
          }
LABEL_163:
          operator delete(v120.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_142:
            if ((SHIBYTE(v118.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_143;
            }
            goto LABEL_165;
          }
LABEL_164:
          operator delete(v119.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v118.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_143:
            if (((char)v109 & 0x80000000) == 0) {
              goto LABEL_144;
            }
            goto LABEL_166;
          }
LABEL_165:
          operator delete(v118.__r_.__value_.__l.__data_);
          if (((char)v109 & 0x80000000) == 0)
          {
LABEL_144:
            if ((SHIBYTE(v117.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_145;
            }
            goto LABEL_167;
          }
LABEL_166:
          operator delete(v108[0]);
          if ((SHIBYTE(v117.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_145:
            if ((SHIBYTE(v116.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_146;
            }
            goto LABEL_168;
          }
LABEL_167:
          operator delete(v117.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v116.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_146:
            if ((SHIBYTE(v115.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_147;
            }
            goto LABEL_169;
          }
LABEL_168:
          operator delete(v116.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v115.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_147:
            if (((char)v111 & 0x80000000) == 0) {
              goto LABEL_148;
            }
            goto LABEL_170;
          }
LABEL_169:
          operator delete(v115.__r_.__value_.__l.__data_);
          if (((char)v111 & 0x80000000) == 0)
          {
LABEL_148:
            if ((SHIBYTE(v114.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_149;
            }
            goto LABEL_171;
          }
LABEL_170:
          operator delete(v110[0]);
          if ((SHIBYTE(v114.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_149:
            if ((SHIBYTE(v113.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_150;
            }
            goto LABEL_172;
          }
LABEL_171:
          operator delete(v114.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v113.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_150:
            if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0) {
              goto LABEL_173;
            }
LABEL_151:
            char v101 = 0;
            if (SHIBYTE(v135) < 0) {
              goto LABEL_152;
            }
            goto LABEL_153;
          }
LABEL_172:
          operator delete(v113.__r_.__value_.__l.__data_);
          if (SHIBYTE(v112.__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_173:
            operator delete(v112.__r_.__value_.__l.__data_);
            char v101 = 0;
            if ((SHIBYTE(v135) & 0x80000000) == 0) {
              goto LABEL_153;
            }
LABEL_152:
            operator delete((void *)v134);
            goto LABEL_153;
          }
          goto LABEL_151;
        }
      }
    }
    unint64_t v78 = *(void *)(a1 + 56);
    if (v78 >= *(void *)(a1 + 64))
    {
      *(void *)(a1 + 56) = sub_21F248((char **)(a1 + 48), (uint64_t)&v133);
      char v101 = 1;
      if (SHIBYTE(v135) < 0) {
        goto LABEL_152;
      }
    }
    else
    {
      *(_DWORD *)unint64_t v78 = v133;
      unint64_t v79 = (unsigned char *)(v78 + 8);
      if (SHIBYTE(v135) < 0)
      {
        sub_4200(v79, (void *)v134, *((unint64_t *)&v134 + 1));
      }
      else
      {
        long long v80 = v134;
        *(void *)(v78 + 24) = v135;
        *(_OWORD *)unint64_t v79 = v80;
      }
      *(void *)(a1 + 56) = v78 + 32;
      *(void *)(a1 + 56) = v78 + 32;
      char v101 = 1;
      if (SHIBYTE(v135) < 0) {
        goto LABEL_152;
      }
    }
LABEL_153:
    if ((v101 & 1) == 0) {
      break;
    }
    ++v5;
    uint64_t v4 = v138;
  }
  while (v5 < 0xAAAAAAAAAAAAAAABLL * (((char *)v139 - v138) >> 3));
  sub_2F020((uint64_t)&v136, v137[0]);
  uint64_t v102 = (void **)v138;
  if (!v138) {
    return;
  }
LABEL_178:
  std::string v103 = v139;
  uint64_t v104 = v102;
  if (v139 != v102)
  {
    do
    {
      if (*((char *)v103 - 1) < 0) {
        operator delete(*(v103 - 3));
      }
      v103 -= 3;
    }
    while (v103 != v102);
    uint64_t v104 = (void **)v138;
  }
  v139 = v102;
  operator delete(v104);
}

void sub_21E928(_Unwind_Exception *a1)
{
  *(void *)(v1 + 56) = v2;
  if (*(char *)(v3 - 145) < 0) {
    operator delete(*(void **)(v3 - 168));
  }
  sub_2F020(v3 - 144, *(char **)(v3 - 136));
  sub_1A668((void **)(v3 - 120));
  _Unwind_Resume(a1);
}

void sub_21EC78(unsigned __int8 *a1@<X1>, unsigned __int8 a2@<W2>, uint64_t a3@<X8>)
{
  int v4 = (char)a1[23];
  uint64_t v5 = a1[23];
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)a3 = 0;
  uint64_t v6 = *(unsigned __int8 **)a1;
  uint64_t v7 = *((void *)a1 + 1);
  if (v4 >= 0) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = *((void *)a1 + 1);
  }
  if (v8)
  {
    int v10 = a2;
    if (v4 >= 0) {
      unint64_t v11 = a1;
    }
    else {
      unint64_t v11 = *(unsigned __int8 **)a1;
    }
    int v12 = v11;
    while (*v12 != v10)
    {
      ++v12;
LABEL_10:
      if ((v5 & 0x80u) == 0) {
        size_t v13 = a1;
      }
      else {
        size_t v13 = v6;
      }
      if ((v5 & 0x80u) == 0) {
        uint64_t v14 = v5;
      }
      else {
        uint64_t v14 = v7;
      }
      if (v12 == &v13[v14])
      {
        if (v11 == v12) {
          return;
        }
        unint64_t v30 = v12 - v11;
        if ((unint64_t)(v12 - v11) > 0x7FFFFFFFFFFFFFF7) {
          sub_188D690();
        }
        if (v30 <= 0x16)
        {
          HIBYTE(v46) = (_BYTE)v12 - (_BYTE)v11;
          size_t v31 = __p;
          goto LABEL_51;
        }
        uint64_t v32 = (v30 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v30 | 7) != 0x17) {
          uint64_t v32 = v30 | 7;
        }
        uint64_t v33 = v32 + 1;
        size_t v31 = operator new(v32 + 1);
        __p[1] = (void *)(v12 - v11);
        unint64_t v46 = v33 | 0x8000000000000000;
        __p[0] = v31;
        if (v30 < 0x20 || (unint64_t)((char *)v31 - (char *)v11) < 0x20)
        {
LABEL_51:
          uint64_t v34 = v31;
          size_t v35 = v11;
        }
        else
        {
          uint64_t v34 = (char *)v31 + (v30 & 0xFFFFFFFFFFFFFFE0);
          size_t v35 = &v11[v30 & 0xFFFFFFFFFFFFFFE0];
          int v36 = (long long *)(v11 + 16);
          BOOL v37 = v31 + 1;
          unint64_t v38 = v30 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v39 = *v36;
            *(v37 - 1) = *(v36 - 1);
            _OWORD *v37 = v39;
            v36 += 2;
            v37 += 2;
            v38 -= 32;
          }
          while (v38);
          if (v30 == (v30 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_53:
            *uint64_t v34 = 0;
            unint64_t v41 = *(void *)(a3 + 8);
            if (v41 >= *(void *)(a3 + 16))
            {
              std::string::value_type v43 = sub_6E8C4((void **)a3, (uint64_t)__p);
              int v44 = SHIBYTE(v46);
              *(void *)(a3 + 8) = v43;
              if (v44 < 0) {
                operator delete(__p[0]);
              }
            }
            else
            {
              long long v42 = *(_OWORD *)__p;
              *(void *)(v41 + 16) = v46;
              *(_OWORD *)unint64_t v41 = v42;
              *(void *)(a3 + 8) = v41 + 24;
            }
            return;
          }
        }
        do
        {
          char v40 = *v35++;
          *v34++ = v40;
        }
        while (v35 != v12);
        goto LABEL_53;
      }
    }
    unint64_t v15 = v12 - v11;
    if ((unint64_t)(v12 - v11) > 0x7FFFFFFFFFFFFFF7) {
      sub_188D690();
    }
    if (v15 > 0x16)
    {
      uint64_t v23 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v15 | 7) != 0x17) {
        uint64_t v23 = v15 | 7;
      }
      uint64_t v24 = v23 + 1;
      unint64_t v16 = operator new(v23 + 1);
      __p[1] = (void *)(v12 - v11);
      unint64_t v46 = v24 | 0x8000000000000000;
      __p[0] = v16;
      if (v11 != v12) {
        goto LABEL_21;
      }
    }
    else
    {
      HIBYTE(v46) = (_BYTE)v12 - (_BYTE)v11;
      unint64_t v16 = __p;
      if (v11 != v12)
      {
LABEL_21:
        if (v15 < 0x20 || (unint64_t)((char *)v16 - (char *)v11) < 0x20)
        {
          uint64_t v17 = v16;
          uint64_t v18 = v11;
        }
        else
        {
          uint64_t v17 = (char *)v16 + (v15 & 0xFFFFFFFFFFFFFFE0);
          uint64_t v18 = &v11[v15 & 0xFFFFFFFFFFFFFFE0];
          uint64_t v19 = (long long *)(v11 + 16);
          int v20 = v16 + 1;
          unint64_t v21 = v15 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *(v20 - 1) = *(v19 - 1);
            *int v20 = v22;
            v19 += 2;
            v20 += 2;
            v21 -= 32;
          }
          while (v21);
          if (v15 == (v15 & 0xFFFFFFFFFFFFFFE0)) {
            goto LABEL_33;
          }
        }
        do
        {
          char v25 = *v18++;
          *v17++ = v25;
        }
        while (v18 != v12);
LABEL_33:
        *uint64_t v17 = 0;
        unint64_t v26 = *(void *)(a3 + 8);
        if (v26 >= *(void *)(a3 + 16))
        {
          BOOL v28 = sub_6E8C4((void **)a3, (uint64_t)__p);
          int v29 = SHIBYTE(v46);
          *(void *)(a3 + 8) = v28;
          if (v29 < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v27 = *(_OWORD *)__p;
          *(void *)(v26 + 16) = v46;
          *(_OWORD *)unint64_t v26 = v27;
          *(void *)(a3 + 8) = v26 + 24;
        }
        ++v12;
        uint64_t v5 = a1[23];
        uint64_t v6 = *(unsigned __int8 **)a1;
        uint64_t v7 = *((void *)a1 + 1);
        unint64_t v11 = v12;
        goto LABEL_10;
      }
    }
    uint64_t v17 = v16;
    goto LABEL_33;
  }
}

void sub_21EF6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    sub_1A668(v15);
    _Unwind_Resume(a1);
  }
  sub_1A668(v15);
  _Unwind_Resume(a1);
}

uint64_t sub_21EFD0(uint64_t a1, std::string *__s, uint64_t a3)
{
  int v5 = *(_DWORD *)(a1 + 40);
  *(_DWORD *)a3 = v5;
  unsigned int v6 = HIBYTE(__s->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__s->__r_.__value_.__r.__words[2]) < 0)
  {
    if (__s->__r_.__value_.__l.__size_ <= 2) {
      goto LABEL_15;
    }
    if (*(unsigned char *)(__s->__r_.__value_.__r.__words[0] + 1) != 58) {
      goto LABEL_4;
    }
  }
  else
  {
    if (v6 <= 2) {
      goto LABEL_5;
    }
    if (__s->__r_.__value_.__s.__data_[1] != 58)
    {
LABEL_4:
      if ((v6 & 0x80) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  if (v5 != 32) {
    return 0;
  }
  if ((v6 & 0x80) != 0)
  {
    int v10 = *__s->__r_.__value_.__l.__data_;
    if ((v10 - 83) > 1) {
      return 0;
    }
  }
  else
  {
    int v10 = __s->__r_.__value_.__s.__data_[0];
    if ((v10 - 83) > 1) {
      return 0;
    }
  }
  *(_DWORD *)a3 = v10;
  std::string::erase(__s, 0, 2uLL);
  unsigned int v6 = HIBYTE(__s->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80) == 0)
  {
LABEL_5:
    int v7 = 0;
    uint64_t size = v6;
    char v9 = __s;
    if (v6 < 2uLL) {
      goto LABEL_20;
    }
    goto LABEL_16;
  }
LABEL_15:
  char v9 = (std::string *)__s->__r_.__value_.__r.__words[0];
  uint64_t size = __s->__r_.__value_.__l.__size_;
  int v7 = 1;
  if (size < 2) {
    goto LABEL_20;
  }
LABEL_16:
  unint64_t v11 = (char *)v9 + size;
  int v12 = v9;
  do
  {
    size_t v13 = (char *)memchr(v12, 63, size - 1);
    if (!v13) {
      break;
    }
    if (*(_WORD *)v13 == 10815)
    {
      if (v13 != v11 && v13 - (char *)v9 != -1) {
        return 0;
      }
      break;
    }
    int v12 = (std::string *)(v13 + 1);
    uint64_t size = v11 - (char *)v12;
  }
  while (v11 - (char *)v12 >= 2);
LABEL_20:
  if (v7)
  {
    unint64_t v15 = (std::string *)__s->__r_.__value_.__r.__words[0];
    uint64_t v14 = __s->__r_.__value_.__l.__size_;
    if (v14 < 2) {
      goto LABEL_34;
    }
LABEL_24:
    unint64_t v16 = (char *)v15 + v14;
    uint64_t v17 = v15;
    while (1)
    {
      uint64_t v18 = (char *)memchr(v17, 42, v14 - 1);
      if (!v18) {
        goto LABEL_34;
      }
      if (*(_WORD *)v18 == 10794)
      {
        if (v18 != v16 && v18 - (char *)v15 != -1) {
          return 0;
        }
        goto LABEL_34;
      }
      uint64_t v17 = (std::string *)(v18 + 1);
      uint64_t v14 = v16 - (char *)v17;
      if (v16 - (char *)v17 < 2) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v14 = v6;
  unint64_t v15 = __s;
  if (v6 >= 2uLL) {
    goto LABEL_24;
  }
LABEL_34:
  if (v7)
  {
    uint64_t v19 = (std::string *)__s->__r_.__value_.__r.__words[0];
    std::string::size_type v20 = __s->__r_.__value_.__l.__size_;
    if (!v20) {
      goto LABEL_48;
    }
  }
  else
  {
    std::string::size_type v20 = v6;
    uint64_t v19 = __s;
    if (!v6)
    {
LABEL_48:
      std::string::operator=((std::string *)(a3 + 8), __s);
      return 1;
    }
  }
  uint64_t v21 = 0;
  while (memchr("STV*?|", v19->__r_.__value_.__s.__data_[v21], 6uLL))
  {
    if (v20 == ++v21) {
      goto LABEL_48;
    }
  }
  if (v21 == -1) {
    goto LABEL_48;
  }
  if (v7)
  {
    if (__s->__r_.__value_.__l.__size_ != 1) {
      return 0;
    }
    long long v22 = (std::string *)__s->__r_.__value_.__r.__words[0];
  }
  else
  {
    long long v22 = __s;
    if (v6 != 1) {
      return 0;
    }
  }
  if (v22->__r_.__value_.__s.__data_[0] == 90) {
    goto LABEL_48;
  }
  return 0;
}

char *sub_21F248(char **a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  int v4 = a1[1];
  uint64_t v5 = (v4 - *a1) >> 5;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59) {
    sub_2E00();
  }
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 4 > v6) {
    unint64_t v6 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v6;
  }
  if (v9)
  {
    if (v9 >> 59) {
      sub_188D718();
    }
    int v10 = (char *)operator new(32 * v9);
  }
  else
  {
    int v10 = 0;
  }
  unint64_t v11 = &v10[32 * v5];
  uint64_t v19 = v11;
  std::string::size_type v20 = v11;
  uint64_t v21 = &v10[32 * v9];
  *(_DWORD *)unint64_t v11 = *(_DWORD *)a2;
  int v12 = v11 + 8;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_4200(v12, *(void **)(a2 + 8), *(void *)(a2 + 16));
    uint64_t v3 = *a1;
    int v4 = a1[1];
    unint64_t v11 = v19;
    size_t v13 = v20 + 32;
    if (v4 == *a1)
    {
LABEL_17:
      unint64_t v16 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)int v12 = *(_OWORD *)(a2 + 8);
    *((void *)v11 + 3) = *(void *)(a2 + 24);
    size_t v13 = v11 + 32;
    if (v4 == v3) {
      goto LABEL_17;
    }
  }
  do
  {
    int v14 = *((_DWORD *)v4 - 8);
    v4 -= 32;
    *((_DWORD *)v11 - 8) = v14;
    v11 -= 32;
    long long v15 = *(_OWORD *)(v4 + 8);
    *((void *)v11 + 3) = *((void *)v4 + 3);
    *(_OWORD *)(v11 + 8) = v15;
    *((void *)v4 + 2) = 0;
    *((void *)v4 + 3) = 0;
    *((void *)v4 + 1) = 0;
  }
  while (v4 != v3);
  unint64_t v16 = *a1;
  uint64_t v3 = a1[1];
LABEL_18:
  *a1 = v11;
  a1[1] = v13;
  a1[2] = v21;
  if (v3 == v16)
  {
    if (v3) {
LABEL_20:
    }
      operator delete(v3);
  }
  else
  {
    do
    {
      uint64_t v18 = v3 - 32;
      if (*(v3 - 1) < 0) {
        operator delete(*((void **)v3 - 3));
      }
      v3 -= 32;
    }
    while (v18 != v16);
    uint64_t v3 = v16;
    if (v16) {
      goto LABEL_20;
    }
  }
  return v13;
}

void sub_21F3F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_21F404((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_21F404(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v5 = v2 - 32;
      *(void *)(a1 + 16) = v2 - 32;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v5 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

BOOL sub_21F46C(unsigned char *a1, char *a2, void *a3, unsigned char *a4)
{
  int v4 = a2[23];
  uint64_t v5 = *((void *)a2 + 1);
  if (v4 >= 0) {
    uint64_t v5 = a2[23];
  }
  uint64_t v6 = a1[23];
  if (!v5)
  {
    if ((v6 & 0x80) != 0)
    {
      if (*((void *)a1 + 1) != 1) {
        return 0;
      }
      a1 = *(unsigned char **)a1;
    }
    else if (v6 != 1)
    {
      return 0;
    }
    return *a1 == 90;
  }
  if ((v6 & 0x80) != 0)
  {
    int v10 = *(unsigned char **)a1;
    if (**(unsigned char **)a1 == 42) {
      return 0;
    }
  }
  else
  {
    int v10 = a1;
    if (*a1 == 42) {
      return 0;
    }
  }
  if (v4 >= 0) {
    unint64_t v11 = a2;
  }
  else {
    unint64_t v11 = *(char **)a2;
  }
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a1 + 1);
  }
  int v12 = &v10[v6];
  size_t v13 = &v11[v5];
  if (!v6)
  {
LABEL_29:
    if (v13 == v11)
    {
      if (v12 == v10) {
        return 1;
      }
      return *v10 == 42;
    }
    return 0;
  }
  while (1)
  {
    int v14 = *v10;
    if (v14 != 63) {
      break;
    }
LABEL_26:
    ++v11;
LABEL_27:
    ++v10;
    if (v13 == v11 || v12 == v10) {
      goto LABEL_29;
    }
  }
  if (v14 != 42)
  {
    __darwin_ct_rune_t v17 = __toupper((char)v14);
    if (v17 != __toupper(*v11))
    {
LABEL_41:
      if (a2[23] >= 0) {
        std::string::size_type v20 = a2;
      }
      else {
        std::string::size_type v20 = *(char **)a2;
      }
      *a3 = v11 - v20;
      char v21 = __toupper((char)*v10);
      BOOL result = 0;
      *a4 = v21;
      return result;
    }
    goto LABEL_26;
  }
  __darwin_ct_rune_t v15 = __toupper((char)*(v10 - 1));
  if (v15 << 24 == 704643072) {
    goto LABEL_41;
  }
  if (v11 != v13)
  {
    int v16 = (char)v15;
    while (v16 == __toupper(*v11))
    {
      if (++v11 == v13) {
        goto LABEL_32;
      }
    }
    goto LABEL_27;
  }
LABEL_32:
  if (v12 != ++v10) {
    return *v10 == 42;
  }
  return 1;
}

void sub_21F640(void *a1)
{
  sub_21FD98(a1);

  operator delete();
}

double sub_21F678(void *a1)
{
  if (!a1[1] || !(*(unsigned int (**)(void *))(*a1 + 48))(a1)) {
    return NAN;
  }
  uint64_t v2 = *(void (**)(void))(*(void *)a1[1] + 16);

  v2();
  return result;
}

uint64_t sub_21F714()
{
  return 30;
}

uint64_t sub_21F71C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = (void *)(a1 + 88);
  unint64_t v7 = (v3 - v2) >> 3;
  *(void *)&long long v41 = 0;
  unint64_t v8 = (v5 - v4) >> 3;
  if (v7 <= v8)
  {
    if (v7 < v8) {
      *(void *)(a1 + 96) = v4 + 8 * v7;
    }
  }
  else
  {
    sub_96D18(a1 + 88, v7 - v8, (uint64_t *)&v41);
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
    unint64_t v7 = (v3 - v2) >> 3;
  }
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  unint64_t v11 = (uint64_t *)(a1 + 16);
  long long v41 = 0uLL;
  LODWORD(v42) = 0;
  unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((v10 - v9) >> 3);
  if (v7 <= v12)
  {
    if (v7 < v12) {
      *(void *)(a1 + 24) = v9 + 24 * v7;
    }
  }
  else
  {
    sub_21FEA0((void **)(a1 + 16), v7 - v12, &v41);
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
    unint64_t v7 = (v3 - v2) >> 3;
  }
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v43 = 0;
  long long v41 = 0u;
  long long v42 = 0u;
  unint64_t v15 = 0xCCCCCCCCCCCCCCCDLL * ((v14 - v13) >> 3);
  if (v7 <= v15)
  {
    if (v7 < v15) {
      *(void *)(a1 + 120) = v13 + 40 * v7;
    }
  }
  else
  {
    sub_220054((void **)(a1 + 112), v7 - v15, &v41);
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
    unint64_t v7 = (v3 - v2) >> 3;
  }
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 72);
  *(void *)&long long v41 = 0;
  BYTE8(v41) = 0;
  unint64_t v18 = (v17 - v16) >> 4;
  if (v7 <= v18)
  {
    if (v7 < v18) {
      *(void *)(a1 + 72) = v16 + 16 * v7;
    }
  }
  else
  {
    sub_220218((char **)(a1 + 64), v7 - v18, &v41);
    uint64_t v2 = *(void *)(a1 + 40);
    uint64_t v3 = *(void *)(a1 + 48);
  }
  uint64_t v19 = 1;
  if (v3 != v2)
  {
    unint64_t v20 = 0;
    do
    {
      uint64_t v23 = *(void *)(v2 + 8 * v20);
      if (!v23) {
        return 0;
      }
      uint64_t v24 = *v11;
      char v25 = (void *)(*v11 + 24 * v20);
      int v26 = (*(uint64_t (**)(uint64_t))(*(void *)v23 + 32))(v23);
      if ((v26 - 124) > 0x11 || ((1 << (v26 - 124)) & 0x3C5E1) == 0)
      {
        uint64_t v35 = *(void *)(*(void *)(a1 + 40) + 8 * v20);
        if (v35 && (*(unsigned int (**)(uint64_t))(*(void *)v35 + 32))(v35) == 17)
        {
          int v36 = *(const void **)(*(void *)(a1 + 40) + 8 * v20);
          if (!v36) {
            return 0;
          }
          if (!v37) {
            return 0;
          }
          uint64_t v38 = v24 + 24 * v20;
          *(void *)(v38 + 8) = 1;
          *char v25 = (*(uint64_t (**)(void *))(*(void *)v37 + 40))(v37);
          *(_DWORD *)(v38 + 16) = 1;
        }
        else
        {
          uint64_t v39 = v24 + 24 * v20;
          *(void *)(v39 + 8) = 1;
          *char v25 = *v6 + 8 * v20;
          *(_DWORD *)(v39 + 16) = 1;
        }
      }
      else
      {
        BOOL v28 = *(const void **)(*(void *)(a1 + 40) + 8 * v20);
        if (!v28) {
          return 0;
        }
        if (!v29) {
          return 0;
        }
        unint64_t v30 = v29;
        uint64_t v31 = v24 + 24 * v20;
        *(void *)(v31 + 8) = (*(uint64_t (**)(void *))(*(void *)v29 + 16))(v29);
        *char v25 = *(void *)(*(void *)(*(uint64_t (**)(void *))(*(void *)v30 + 40))(v30) + 16);
        *(_DWORD *)(v31 + 16) = 2;
        uint64_t v32 = (*(uint64_t (**)(void *))(*(void *)v30 + 32))(v30);
        (*(void (**)(void, void *))(***(void ***)(v32 + 16) + 24))(**(void **)(v32 + 16), v25);
      }
      uint64_t v33 = *(void *)(a1 + 40);
      uint64_t v34 = *(void *)(v33 + 8 * v20);
      if (v34) {
        BOOL v21 = (*(unsigned int (**)(void))(*(void *)v34 + 32))(*(void *)(v33 + 8 * v20)) != 17
      }
           && (*(unsigned int (**)(uint64_t))(*(void *)v34 + 32))(v34) != 18;
      else {
        BOOL v21 = 1;
      }
      uint64_t v22 = *(void *)(a1 + 64) + 16 * v20;
      *(void *)uint64_t v22 = *(void *)(v33 + 8 * v20);
      *(unsigned char *)(v22 + 8) = v21;
      ++v20;
      uint64_t v2 = *(void *)(a1 + 40);
    }
    while (v20 < (*(void *)(a1 + 48) - v2) >> 3);
    return 1;
  }
  return v19;
}

uint64_t sub_21FBB8(void *a1)
{
  uint64_t v1 = a1[8];
  if (a1[9] == v1) {
    return 1;
  }
  uint64_t v3 = 0;
  unint64_t v4 = 0;
  do
  {
    *(double *)(a1[11] + 8 * v4++) = (*(double (**)(void))(**(void **)(v1 + v3) + 16))(*(void *)(v1 + v3));
    uint64_t v1 = a1[8];
    uint64_t v5 = a1[9];
    v3 += 16;
  }
  while (v4 < (v5 - v1) >> 4);
  if (v5 == v1) {
    return 1;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  unint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = a1[14];
    uint64_t v10 = *(void *)(v9 + v7);
    if (v10) {
      break;
    }
LABEL_6:
    ++v8;
    v7 += 40;
    v6 += 24;
    if (v8 >= (v5 - v1) >> 4) {
      return 1;
    }
  }
  if (*(unsigned char *)(v10 + 32))
  {
    unint64_t v11 = *(void *)(v10 + 40);
    if (*(unsigned char *)(v10 + 48))
    {
LABEL_10:
      unint64_t v12 = *(void *)(v10 + 56);
      goto LABEL_17;
    }
  }
  else
  {
    if (!*(unsigned char *)v10) {
      return 0;
    }
    double v13 = (*(double (**)(void))(**(void **)(v10 + 8) + 16))(*(void *)(v10 + 8));
    if (v13 < 0.0) {
      return 0;
    }
    unint64_t v11 = (uint64_t)v13;
    if (*(unsigned char *)(v10 + 48)) {
      goto LABEL_10;
    }
  }
  if (!*(unsigned char *)(v10 + 16)) {
    return 0;
  }
  double v14 = (*(double (**)(void))(**(void **)(v10 + 24) + 16))(*(void *)(v10 + 24));
  if (v14 < 0.0) {
    return 0;
  }
  unint64_t v12 = (uint64_t)v14;
LABEL_17:
  uint64_t v15 = *(void *)(v9 + v7 + 16);
  if (v12 == -1 && v15 != -1) {
    unint64_t v12 = v15 - 1;
  }
  *(void *)(v10 + 64) = v11;
  *(void *)(v10 + 72) = v12;
  if (v11 <= v12)
  {
    uint64_t v17 = (void *)(a1[2] + v6);
    *uint64_t v17 = *(void *)(v9 + v7 + 8) + *(void *)(v9 + v7 + 24) * v11;
    v17[1] = v12 - v11 + 1;
    uint64_t v1 = a1[8];
    uint64_t v5 = a1[9];
    goto LABEL_6;
  }
  return 0;
}

void *sub_21FD98(void *a1)
{
  *a1 = off_242B780;
  uint64_t v3 = a1[8];
  uint64_t v2 = a1[9];
  if (v2 != v3)
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(v3 + v4);
      if (v6 && *(unsigned char *)(v3 + v4 + 8))
      {
        (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
        *(void *)(v3 + v4) = 0;
        uint64_t v3 = a1[8];
        uint64_t v2 = a1[9];
      }
      ++v5;
      v4 += 16;
    }
    while (v5 < (v2 - v3) >> 4);
  }
  uint64_t v7 = (void *)a1[14];
  if (v7)
  {
    a1[15] = v7;
    operator delete(v7);
  }
  unint64_t v8 = (void *)a1[11];
  if (v8)
  {
    a1[12] = v8;
    operator delete(v8);
  }
  uint64_t v9 = (void *)a1[8];
  if (v9)
  {
    a1[9] = v9;
    operator delete(v9);
  }
  uint64_t v10 = (void *)a1[5];
  if (v10)
  {
    a1[6] = v10;
    operator delete(v10);
  }
  unint64_t v11 = (void *)a1[2];
  if (v11)
  {
    a1[3] = v11;
    operator delete(v11);
  }
  return a1;
}

void sub_21FEA0(void **a1, unint64_t a2, long long *a3)
{
  uint64_t v7 = (char *)a1[1];
  uint64_t v6 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      double v13 = &v7[24 * a2];
      uint64_t v14 = 24 * a2;
      do
      {
        long long v15 = *a3;
        *((void *)v7 + 2) = *((void *)a3 + 2);
        *(_OWORD *)uint64_t v7 = v15;
        v7 += 24;
        v14 -= 24;
      }
      while (v14);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (unsigned char *)*a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_2E00();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v6 - (unsigned char *)*a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      if (v11 > 0xAAAAAAAAAAAAAAALL) {
        sub_188D718();
      }
      unint64_t v12 = (char *)operator new(24 * v11);
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v16 = &v12[24 * v8];
    uint64_t v17 = 24 * a2;
    unint64_t v18 = &v16[24 * a2];
    uint64_t v19 = v16;
    do
    {
      long long v20 = *a3;
      *((void *)v19 + 2) = *((void *)a3 + 2);
      *(_OWORD *)uint64_t v19 = v20;
      v19 += 24;
      v17 -= 24;
    }
    while (v17);
    BOOL v21 = (char *)*a1;
    if (v7 != *a1)
    {
      do
      {
        long long v22 = *(_OWORD *)(v7 - 24);
        *((_DWORD *)v16 - 2) = *((_DWORD *)v7 - 2);
        *(_OWORD *)(v16 - 24) = v22;
        v16 -= 24;
        v7 -= 24;
      }
      while (v7 != v21);
      uint64_t v7 = (char *)*a1;
    }
    *a1 = v16;
    a1[1] = v18;
    a1[2] = &v12[24 * v11];
    if (v7)
    {
      operator delete(v7);
    }
  }
}

void sub_220054(void **a1, unint64_t a2, long long *a3)
{
  uint64_t v7 = (char *)a1[1];
  uint64_t v6 = a1[2];
  if (0xCCCCCCCCCCCCCCCDLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      double v13 = &v7[40 * a2];
      uint64_t v14 = 40 * a2;
      do
      {
        long long v15 = *a3;
        long long v16 = a3[1];
        *((void *)v7 + 4) = *((void *)a3 + 4);
        *(_OWORD *)uint64_t v7 = v15;
        *((_OWORD *)v7 + 1) = v16;
        v7 += 40;
        v14 -= 40;
      }
      while (v14);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xCCCCCCCCCCCCCCCDLL * ((v7 - (unsigned char *)*a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0x666666666666666) {
      sub_2E00();
    }
    unint64_t v10 = 0xCCCCCCCCCCCCCCCDLL * ((v6 - (unsigned char *)*a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x333333333333333) {
      unint64_t v11 = 0x666666666666666;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      if (v11 > 0x666666666666666) {
        sub_188D718();
      }
      unint64_t v12 = (char *)operator new(40 * v11);
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v17 = &v12[40 * v8];
    uint64_t v18 = 40 * a2;
    uint64_t v19 = &v17[40 * a2];
    long long v20 = v17;
    do
    {
      long long v21 = *a3;
      long long v22 = a3[1];
      *((void *)v20 + 4) = *((void *)a3 + 4);
      *(_OWORD *)long long v20 = v21;
      *((_OWORD *)v20 + 1) = v22;
      v20 += 40;
      v18 -= 40;
    }
    while (v18);
    uint64_t v23 = (char *)*a1;
    if (v7 != *a1)
    {
      do
      {
        long long v24 = *(_OWORD *)(v7 - 40);
        long long v25 = *(_OWORD *)(v7 - 24);
        *((void *)v17 - 1) = *((void *)v7 - 1);
        *(_OWORD *)(v17 - 24) = v25;
        *(_OWORD *)(v17 - 40) = v24;
        v17 -= 40;
        v7 -= 40;
      }
      while (v7 != v23);
      uint64_t v7 = (char *)*a1;
    }
    *a1 = v17;
    a1[1] = v19;
    a1[2] = &v12[40 * v11];
    if (v7)
    {
      operator delete(v7);
    }
  }
}

void sub_220218(char **a1, unint64_t a2, _OWORD *a3)
{
  uint64_t v7 = a1[1];
  uint64_t v6 = a1[2];
  if (a2 <= (v6 - v7) >> 4)
  {
    if (a2)
    {
      uint64_t v13 = 16 * a2;
      uint64_t v14 = &v7[16 * a2];
      do
      {
        *(_OWORD *)uint64_t v7 = *a3;
        v7 += 16;
        v13 -= 16;
      }
      while (v13);
      uint64_t v7 = v14;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = (v7 - *a1) >> 4;
    if ((v8 + a2) >> 60) {
      sub_2E00();
    }
    uint64_t v9 = v6 - *a1;
    uint64_t v10 = v9 >> 3;
    if (v9 >> 3 <= v8 + a2) {
      uint64_t v10 = v8 + a2;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    if (v11)
    {
      if (v11 >> 60) {
        sub_188D718();
      }
      unint64_t v12 = (char *)operator new(16 * v11);
    }
    else
    {
      unint64_t v12 = 0;
    }
    long long v15 = &v12[16 * v8];
    uint64_t v16 = 16 * a2;
    uint64_t v17 = &v15[16 * a2];
    uint64_t v18 = v15;
    do
    {
      *(_OWORD *)uint64_t v18 = *a3;
      v18 += 16;
      v16 -= 16;
    }
    while (v16);
    uint64_t v19 = *a1;
    if (v7 != *a1)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v7 - 1);
        v15 -= 16;
        v7 -= 16;
      }
      while (v7 != v19);
      uint64_t v7 = *a1;
    }
    *a1 = v15;
    a1[1] = v17;
    a1[2] = &v12[16 * v11];
    if (v7)
    {
      operator delete(v7);
    }
  }
}

uint64_t sub_22036C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)a1 = off_242B780;
  *(void *)(a1 + 8) = a2;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  uint64_t v7 = *(const void **)a4;
  uint64_t v6 = *(void *)(a4 + 8);
  int64_t v8 = v6 - *(void *)a4;
  if (v6 != *(void *)a4)
  {
    if (v8 < 0) {
      sub_2E00();
    }
    uint64_t v9 = (char *)operator new(v6 - *(void *)a4);
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v9;
    uint64_t v10 = &v9[8 * (v8 >> 3)];
    *(void *)(a1 + 56) = v10;
    memcpy(v9, v7, v8);
    *(void *)(a1 + 48) = v10;
  }
  *(void *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)a1 = &off_242B7E0;
  *(void *)(a1 + 136) = *a3;
  return a1;
}

void sub_22044C(_Unwind_Exception *exception_object)
{
  unint64_t v5 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 48) = v5;
    operator delete(v5);
    uint64_t v6 = *v3;
    if (!*v3) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v6 = *v3;
    if (!*v3) {
      goto LABEL_3;
    }
  }
  *(void *)(v1 + 24) = v6;
  operator delete(v6);
  _Unwind_Resume(exception_object);
}

void sub_22048C(void *a1)
{
  sub_21FD98(a1);

  operator delete();
}

double sub_2204C4(void *a1)
{
  if (!a1[1] || !sub_21FBB8(a1)) {
    return NAN;
  }
  uint64_t v2 = *(void (**)(void))(*(void *)a1[1] + 32);

  v2();
  return result;
}

uint64_t sub_220544()
{
  return 30;
}

BOOL sub_22054C(uint64_t a1, int a2)
{
  if (!*(void *)(a1 + 104)) {
    return 0;
  }
  uint64_t v3 = a1 + 88;
  switch(a2)
  {
    case 2:
      char v8 = 1;
      __int16 v4 = 43;
      goto LABEL_10;
    case 3:
      char v8 = 1;
      __int16 v4 = 45;
      goto LABEL_10;
    case 4:
      char v8 = 1;
      __int16 v4 = 42;
      goto LABEL_10;
    case 5:
      char v8 = 1;
      __int16 v4 = 47;
      goto LABEL_10;
    case 6:
      char v8 = 1;
      __int16 v4 = 37;
LABEL_10:
      LOWORD(__p) = v4;
      break;
    default:
      char v8 = 0;
      LOBYTE(__p) = 0;
      break;
  }
  BOOL v6 = a1 + 96 != (void)sub_ADE40(v3, (uint64_t)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  return v6;
}

void sub_22065C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_22068C(uint64_t a1, _DWORD *a2)
{
  if (!*(void *)(a1 + 152)) {
    return 0;
  }
  uint64_t v3 = a1 + 136;
  switch(*a2)
  {
    case 0xE:
      char v8 = 1;
      LOWORD(__p) = 60;
      break;
    case 0xF:
      char v8 = 2;
      __int16 v6 = 15676;
      goto LABEL_13;
    case 0x10:
      char v8 = 2;
      __int16 v6 = 15677;
      goto LABEL_13;
    case 0x11:
      char v8 = 1;
      LOWORD(__p) = 61;
      break;
    case 0x12:
      char v8 = 2;
      __int16 v6 = 15649;
      goto LABEL_13;
    case 0x13:
      char v8 = 2;
      __int16 v6 = 15932;
      goto LABEL_13;
    case 0x14:
      char v8 = 2;
      __int16 v6 = 15678;
LABEL_13:
      LOWORD(__p) = v6;
      BYTE2(__p) = 0;
      break;
    case 0x15:
      char v8 = 1;
      LOWORD(__p) = 62;
      break;
    default:
      char v8 = 0;
      LOBYTE(__p) = 0;
      break;
  }
  BOOL v4 = a1 + 144 != (void)sub_ADE40(v3, (uint64_t)&__p);
  if ((v8 & 0x80000000) == 0) {
    return v4;
  }
  operator delete(__p);
  return v4;
}

void sub_2207CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_220808(uint64_t a1, int a2)
{
  if (!*(void *)(a1 + 128)) {
    return 0;
  }
  uint64_t v3 = a1 + 112;
  switch(a2)
  {
    case 'Q':
      char v8 = 2;
      __int16 v4 = 15674;
      goto LABEL_12;
    case 'R':
      char v8 = 2;
      __int16 v4 = 15659;
      goto LABEL_12;
    case 'S':
      char v8 = 2;
      __int16 v4 = 15661;
      goto LABEL_12;
    case 'T':
      char v8 = 2;
      __int16 v4 = 15658;
      goto LABEL_12;
    case 'U':
      char v8 = 2;
      __int16 v4 = 15663;
      goto LABEL_12;
    case 'V':
      char v8 = 2;
      __int16 v4 = 15653;
LABEL_12:
      LOWORD(__p) = v4;
      BYTE2(__p) = 0;
      break;
    default:
      char v8 = 0;
      LOBYTE(__p) = 0;
      break;
  }
  BOOL v5 = a1 + 120 != (void)sub_ADE40(v3, (uint64_t)&__p);
  if ((v8 & 0x80000000) == 0) {
    return v5;
  }
  operator delete(__p);
  return v5;
}

void sub_220918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22094C(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    uint64_t v2 = *(uint64_t **)(a1 + 16);
    uint64_t v3 = *v2;
    if (*v2 != v2[1])
    {
      unint64_t v4 = 0;
      while (1)
      {
        uint64_t v6 = *(void *)(v3 + 8 * v4);
        if (!v6 || (*(unsigned int (**)(uint64_t))(*(void *)v6 + 32))(v6) == 17) {
          goto LABEL_5;
        }
        uint64_t v7 = *(void *)(v3 + 8 * v4);
        if (v7)
        {
          if ((*(unsigned int (**)(uint64_t))(*(void *)v7 + 32))(v7) == 18) {
            goto LABEL_5;
          }
          uint64_t v8 = *(void *)(v3 + 8 * v4);
          if (v8) {
            (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
          }
        }
        *(void *)(v3 + 8 * v4) = 0;
LABEL_5:
        ++v4;
        BOOL v5 = *(uint64_t **)(a1 + 16);
        uint64_t v3 = *v5;
        if (v4 >= (v5[1] - *v5) >> 3)
        {
          v5[1] = v3;
          return a1;
        }
      }
    }
  }
  return a1;
}

void sub_220A54(uint64_t a1)
{
  if (*(void *)a1)
  {
    uint64_t v1 = *(void *)(*(void *)a1 + 8);
    if (v1)
    {
      uint64_t v3 = *(void *)(*(void *)a1 + 8);
      if (*(void *)(v1 + 16))
      {
        unint64_t v4 = (void *)(v1 + 8);
        BOOL v5 = *(void **)v1;
        if (v1 + 8 != *(void *)v1)
        {
          do
          {
            uint64_t v15 = v5[8];
            if (v15) {
              (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
            }
            uint64_t v16 = (void *)v5[1];
            if (v16)
            {
              do
              {
                uint64_t v17 = v16;
                uint64_t v16 = (void *)*v16;
              }
              while (v16);
            }
            else
            {
              do
              {
                uint64_t v17 = (void *)v5[2];
                BOOL v18 = *v17 == (void)v5;
                BOOL v5 = v17;
              }
              while (!v18);
            }
            BOOL v5 = v17;
          }
          while (v4 != v17);
        }
        sub_2F020(v1, *(char **)(v1 + 8));
        *(void *)(v1 + 8) = 0;
        *(void *)(v1 + 16) = 0;
        *(void *)uint64_t v1 = v4;
        uint64_t v3 = *(void *)(*(void *)a1 + 8);
      }
      *(void *)(v1 + 24) = 0;
      uint64_t v6 = (void *)v3;
      if (*(void *)(v3 + 48))
      {
        sub_2F020(v3 + 32, *(char **)(v3 + 40));
        *(void *)(v3 + 32) = v3 + 40;
        *(void *)(v3 + 40) = 0;
        *(void *)(v3 + 48) = 0;
        uint64_t v6 = *(void **)(*(void *)a1 + 8);
      }
      *(void *)(v3 + 56) = 0;
      uint64_t v7 = v6;
      if (v6[26])
      {
        uint64_t v8 = (void *)v6[24];
        uint64_t v9 = v6 + 25;
        if (v6 + 25 != v8)
        {
          do
          {
            if (v8[8]) {
              operator delete();
            }
            uint64_t v19 = (void *)v8[1];
            if (v19)
            {
              do
              {
                long long v20 = v19;
                uint64_t v19 = (void *)*v19;
              }
              while (v19);
            }
            else
            {
              do
              {
                long long v20 = (void *)v8[2];
                BOOL v18 = *v20 == (void)v8;
                uint64_t v8 = v20;
              }
              while (!v18);
            }
            uint64_t v8 = v20;
          }
          while (v9 != v20);
        }
        sub_2F020((uint64_t)(v6 + 24), (char *)v6[25]);
        v6[25] = 0;
        v6[26] = 0;
        v6[24] = v9;
        uint64_t v7 = *(void **)(*(void *)a1 + 8);
      }
      v6[27] = 0;
      if (v7[30])
      {
        uint64_t v10 = v7 + 28;
        uint64_t v12 = v7[28];
        unint64_t v11 = (uint64_t *)v7[29];
        uint64_t v13 = *v11;
        *(void *)(v13 + 8) = *(void *)(v12 + 8);
        **(void **)(v12 + 8) = v13;
        v7[30] = 0;
        if (v11 != v7 + 28)
        {
          do
          {
            uint64_t v14 = (uint64_t *)v11[1];
            operator delete(v11);
            unint64_t v11 = v14;
          }
          while (v14 != v10);
        }
      }
    }
  }
}

uint64_t sub_220C44(uint64_t a1)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = a1 + 40;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 64) = a1 + 72;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a1 + 104;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 192) = a1 + 200;
  *(void *)(a1 + 128) = a1 + 136;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 160) = a1 + 168;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = a1 + 224;
  *(void *)(a1 + 232) = a1 + 224;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = a1 + 248;
  *(void *)(a1 + 256) = a1 + 248;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 272) = a1 + 280;
  uint64_t v2 = (uint64_t **)(a1 + 272);
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  sub_2F0A4((uint64_t **)(a1 + 272), (const void **)&dword_2556530, (uint64_t)&dword_2556530);
  sub_2F0A4(v2, (const void **)&dword_2556548, (uint64_t)&dword_2556548);
  sub_2F0A4(v2, (const void **)&qword_2556560, (uint64_t)&qword_2556560);
  sub_2F0A4(v2, (const void **)&dword_2556578, (uint64_t)&dword_2556578);
  sub_2F0A4(v2, (const void **)&dword_2556590, (uint64_t)&dword_2556590);
  sub_2F0A4(v2, (const void **)&word_25565A8, (uint64_t)&word_25565A8);
  sub_2F0A4(v2, (const void **)&word_25565C0, (uint64_t)&word_25565C0);
  sub_2F0A4(v2, (const void **)&dword_25565D8, (uint64_t)&dword_25565D8);
  sub_2F0A4(v2, (const void **)&dword_25565F0, (uint64_t)&dword_25565F0);
  sub_2F0A4(v2, (const void **)&word_2556608, (uint64_t)&word_2556608);
  sub_2F0A4(v2, (const void **)&dword_2556620, (uint64_t)&dword_2556620);
  sub_2F0A4(v2, (const void **)&word_2556638, (uint64_t)&word_2556638);
  sub_2F0A4(v2, (const void **)&dword_2556650, (uint64_t)&dword_2556650);
  sub_2F0A4(v2, (const void **)&dword_2556668, (uint64_t)&dword_2556668);
  sub_2F0A4(v2, (const void **)&dword_2556680, (uint64_t)&dword_2556680);
  sub_2F0A4(v2, (const void **)&dword_2556698, (uint64_t)&dword_2556698);
  sub_2F0A4(v2, (const void **)&word_25566B0, (uint64_t)&word_25566B0);
  sub_2F0A4(v2, (const void **)&dword_25566C8, (uint64_t)&dword_25566C8);
  sub_2F0A4(v2, (const void **)&dword_25566E0, (uint64_t)&dword_25566E0);
  sub_2F0A4(v2, (const void **)&word_25566F8, (uint64_t)&word_25566F8);
  sub_2F0A4(v2, (const void **)&word_2556710, (uint64_t)&word_2556710);
  sub_2F0A4(v2, (const void **)&dword_2556728, (uint64_t)&dword_2556728);
  sub_2F0A4(v2, (const void **)&dword_2556740, (uint64_t)&dword_2556740);
  sub_2F0A4(v2, (const void **)&dword_2556758, (uint64_t)&dword_2556758);
  sub_2F0A4(v2, (const void **)&dword_2556770, (uint64_t)&dword_2556770);
  sub_2F0A4(v2, (const void **)&word_2556788, (uint64_t)&word_2556788);
  sub_2F0A4(v2, (const void **)&dword_25567A0, (uint64_t)&dword_25567A0);
  sub_2F0A4(v2, (const void **)&dword_25567B8, (uint64_t)&dword_25567B8);
  sub_2F0A4(v2, (const void **)&word_25567D0, (uint64_t)&word_25567D0);
  sub_2F0A4(v2, (const void **)&word_25567E8, (uint64_t)&word_25567E8);
  sub_2F0A4(v2, (const void **)&word_2556800, (uint64_t)&word_2556800);
  for (uint64_t i = 0; i != 1044; i += 12)
    sub_2F0A4(v2, (const void **)&word_25559A8[i], (uint64_t)&word_25559A8[i]);
  return a1;
}

void sub_220FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v19 = *(void **)(v13 + 104);
  if (v19)
  {
    *(void *)(v10 + 304) = v19;
    operator delete(v19);
  }
  sub_2F020(v17, *(char **)(v10 + 280));
  sub_221078(v16);
  sub_2210FC(v15);
  sub_2F020(v13, *(char **)(v10 + 200));
  sub_2F020(v14, *(char **)(v10 + 168));
  sub_2F020(v12, *(char **)(v10 + 136));
  sub_2F020(v11, *(char **)(v10 + 104));
  sub_2F020(a9, *(char **)(v10 + 72));
  sub_2F020(a10, *(char **)(v10 + 40));
  sub_2F020(v10, *(char **)(v10 + 8));
  _Unwind_Resume(a1);
}

char *sub_221078(char *a1)
{
  if (*((void *)a1 + 2))
  {
    uint64_t v2 = *(void *)a1;
    uint64_t v3 = (char *)*((void *)a1 + 1);
    uint64_t v4 = *(void *)v3;
    *(void *)(v4 + 8) = *(void *)(*(void *)a1 + 8);
    **(void **)(v2 + 8) = v4;
    *((void *)a1 + 2) = 0;
    if (v3 != a1)
    {
      do
      {
        uint64_t v6 = (char *)*((void *)v3 + 1);
        if (v3[39] < 0) {
          operator delete(*((void **)v3 + 2));
        }
        operator delete(v3);
        uint64_t v3 = v6;
      }
      while (v6 != a1);
    }
  }
  return a1;
}

uint64_t *sub_2210FC(uint64_t *a1)
{
  if (a1[2])
  {
    uint64_t v3 = *a1;
    uint64_t v2 = (uint64_t *)a1[1];
    uint64_t v4 = *v2;
    *(void *)(v4 + 8) = *(void *)(*a1 + 8);
    **(void **)(v3 + 8) = v4;
    a1[2] = 0;
    if (v2 != a1)
    {
      do
      {
        BOOL v5 = (uint64_t *)v2[1];
        operator delete(v2);
        uint64_t v2 = v5;
      }
      while (v5 != a1);
    }
  }
  return a1;
}

uint64_t sub_221160(uint64_t a1, uint64_t *a2)
{
  *(unsigned char *)(a1 + 71) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 135) = 0;
  *(unsigned char *)(a1 + 112) = 0;
  *(void *)(a1 + 72) = -1;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  *(void *)(a1 + 136) = -1;
  *(_DWORD *)(a1 + 144) = 0;
  *(unsigned char *)(a1 + 175) = 0;
  *(unsigned char *)(a1 + 152) = 0;
  *(void *)(a1 + 176) = -1;
  sub_22B950(a1 + 184, a2);
  *(_OWORD *)(a1 + 368) = 0u;
  *(void *)(a1 + 360) = a1 + 368;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(void *)(a1 + 469) = 0;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(void *)(a1 + 640) = 0;
  *(unsigned char *)(a1 + 652) = 1;
  *(void *)(a1 + 656) = 0;
  *(_DWORD *)(a1 + 648) = 0;
  *(unsigned char *)(a1 + 664) = 0;
  *(_OWORD *)(a1 + 672) = 0u;
  *(void *)(a1 + 688) = off_242B840;
  *(_DWORD *)(a1 + 696) = 0;
  *(_OWORD *)(a1 + 712) = 0u;
  *(void *)(a1 + 704) = a1 + 712;
  *(_OWORD *)(a1 + 736) = 0u;
  *(void *)(a1 + 728) = a1 + 736;
  *(_OWORD *)(a1 + 760) = 0u;
  *(void *)(a1 + 752) = a1 + 760;
  *(_OWORD *)(a1 + 784) = 0u;
  *(void *)(a1 + 776) = a1 + 784;
  *(_OWORD *)(a1 + 808) = 0u;
  *(void *)(a1 + 800) = a1 + 808;
  *(void *)(a1 + 824) = a1 + 832;
  *(void *)(a1 + 864) = 0;
  *(_OWORD *)(a1 + 832) = 0u;
  *(_OWORD *)(a1 + 848) = 0u;
  *(void *)(a1 + 872) = a1;
  *(void *)(a1 + 888) = 0;
  *(void *)(a1 + 880) = 0;
  *(void *)(a1 + 896) = 0;
  *(unsigned char *)(a1 + 927) = 3;
  *(_DWORD *)(a1 + 904) = 4144959;
  *(void *)(a1 + 928) = -1;
  *(void *)(a1 + 936) = -1;
  *(void *)(a1 + 944) = -1;
  *(void *)(a1 + 960) = 0;
  *(void *)(a1 + 952) = 0;
  *(void *)(a1 + 965) = 0;
  *(_OWORD *)(a1 + 1088) = 0u;
  *(_OWORD *)(a1 + 1072) = 0u;
  *(_OWORD *)(a1 + 1056) = 0u;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1008) = 0u;
  *(_OWORD *)(a1 + 1024) = 0u;
  *(_OWORD *)(a1 + 976) = 0u;
  *(_OWORD *)(a1 + 992) = 0u;
  *(void *)(a1 + 1144) = 2;
  *(void *)(a1 + 1136) = off_242B880;
  *(void *)(a1 + 1168) = 0;
  *(void *)(a1 + 1160) = 0;
  *(void *)(a1 + 1152) = a1 + 1160;
  *(void *)(a1 + 1184) = 2;
  *(void *)(a1 + 1176) = off_242B918;
  *(void *)(a1 + 1200) = 3;
  *(void *)(a1 + 1192) = off_242B918;
  *(void *)(a1 + 1208) = off_242B998;
  *(void *)(a1 + 1232) = 0;
  *(void *)(a1 + 1224) = 0;
  *(void *)(a1 + 1216) = a1 + 1224;
  *(void *)(a1 + 1248) = 1;
  *(void *)(a1 + 1240) = off_242BA10;
  *(unsigned char *)(a1 + 1256) = 1;
  *(unsigned char *)(a1 + 1343) = 0;
  *(unsigned char *)(a1 + 1320) = 0;
  *(_DWORD *)(a1 + 1312) = 0;
  *(_OWORD *)(a1 + 1296) = 0u;
  *(_OWORD *)(a1 + 1280) = 0u;
  *(_OWORD *)(a1 + 1264) = 0u;
  *(void *)(a1 + 1344) = -1;
  *(void *)(a1 + 1360) = 1;
  *(void *)(a1 + 1352) = off_242BA70;
  *(_OWORD *)(a1 + 1368) = 0u;
  *(_OWORD *)(a1 + 1384) = 0u;
  sub_22DE08(a1 + 1400);
  sub_22F490(a1 + 1464);
  sub_221658(a1);
  sub_2222D0(a1 + 704);
  sub_222FD4(a1, (uint64_t **)(a1 + 728));
  sub_224864(a1, (uint64_t **)(a1 + 752));
  sub_2253CC(a1, (uint64_t **)(a1 + 776));
  sub_2260E4(a1, (uint64_t **)(a1 + 800));
  sub_226FB4(a1, (uint64_t **)(a1 + 824));
  sub_22A178(a1 + 344);
  *(void *)(a1 + 384) = a1 + 728;
  *(void *)(a1 + 392) = a1 + 752;
  *(void *)(a1 + 400) = a1 + 776;
  *(void *)(a1 + 408) = a1 + 800;
  *(void *)(a1 + 416) = a1 + 824;
  *(void *)(a1 + 424) = a1;
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a1 + 190);
  return a1;
}

void sub_2214F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _Unwind_Exception *exception_object, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char **a18, void **a19, void **a20,char **a21,char **a22,uint64_t a23)
{
  sub_22B4F4(v27);
  *(void *)(v23 + 1352) = v26;
  uint64_t v33 = *(void **)(v23 + 1376);
  if (v33)
  {
    *(void *)(v23 + 1384) = v33;
    operator delete(v33);
  }
  sub_22B5FC(a14);
  *(void *)(v23 + 1208) = a15;
  sub_23052C(v23 + 1216, *(void *)(v23 + 1224));
  *(void *)(v23 + 1136) = a16;
  sub_2F020(v23 + 1152, *(char **)(v23 + 1160));
  sub_22B700(v23 + 1008);
  sub_22B764(a17);
  if (*(char *)(v23 + 871) < 0) {
    operator delete(*(void **)(v23 + 848));
  }
  sub_2F020(*(void *)(v32 - 104), *a18);
  sub_2F020(v24, *v29);
  sub_22EFF4(*(void *)(v32 - 96), *a19);
  sub_22EFF4(v30, *v28);
  sub_22EFF4(*(void *)(v32 - 88), *a20);
  sub_2F020(a23, *v31);
  sub_284F54(v23 + 600);
  sub_22B808((void **)(v23 + 552));
  sub_28501C((void *)(v23 + 464));
  sub_A95BC(v25);
  sub_2F020(v23 + 360, *a21);
  sub_A4E60(a22);
  sub_22B880(v23);
  _Unwind_Resume(a1);
}

void sub_221658(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 191)) {
    *(unsigned char *)(a1 + 472) = 1;
  }
  if (*(unsigned char *)(a1 + 192)) {
    *(unsigned char *)(a1 + 473) = 1;
  }
  if (*(unsigned char *)(a1 + 193)) {
    *(unsigned char *)(a1 + 474) = 1;
  }
  if (*(unsigned char *)(a1 + 184))
  {
    uint64_t v2 = a1 + 1208;
    sub_23052C(a1 + 1216, *(void *)(a1 + 1224));
    *(void *)(a1 + 1216) = a1 + 1224;
    *(void *)(a1 + 1232) = 0;
    *(void *)(a1 + 1224) = 0;
    char v137 = 4;
    strcpy((char *)v136, "true");
    char v135 = 1;
    LOWORD(__p[0]) = 49;
    sub_23042C(a1 + 1208, (long long *)v136, (long long *)__p, 7);
    if (v135 < 0)
    {
      operator delete(__p[0]);
      if ((v137 & 0x80000000) == 0) {
        goto LABEL_10;
      }
    }
    else if ((v137 & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete(v136[0]);
LABEL_10:
    char v137 = 5;
    strcpy((char *)v136, "false");
    char v135 = 1;
    LOWORD(__p[0]) = 48;
    sub_23042C(a1 + 1208, (long long *)v136, (long long *)__p, 7);
    if (v135 < 0)
    {
      operator delete(__p[0]);
      if ((v137 & 0x80000000) == 0)
      {
LABEL_12:
        uint64_t v3 = *(void **)(a1 + 1032);
        *(void *)(a1 + 1040) = v3;
        unint64_t v4 = *(void *)(a1 + 1048);
        if ((unint64_t)v3 < v4)
        {
LABEL_13:
          *uint64_t v3 = v2;
          BOOL v5 = v3 + 1;
LABEL_25:
          *(void *)(a1 + 1040) = v5;
          goto LABEL_26;
        }
LABEL_18:
        uint64_t v6 = v4 - (void)v3;
        uint64_t v7 = v6 >> 2;
        if ((unint64_t)(v6 >> 2) <= 1) {
          uint64_t v7 = 1;
        }
        BOOL v8 = (unint64_t)v6 >= 0x7FFFFFFFFFFFFFF8;
        unint64_t v9 = 0x1FFFFFFFFFFFFFFFLL;
        if (!v8) {
          unint64_t v9 = v7;
        }
        if (v9 >> 61) {
          goto LABEL_189;
        }
        uint64_t v10 = v9;
        uint64_t v11 = operator new(8 * v9);
        uint64_t v12 = &v11[v10];
        *(void *)(a1 + 1032) = v11;
        void *v11 = v2;
        BOOL v5 = v11 + 1;
        *(void *)(a1 + 1040) = v11 + 1;
        *(void *)(a1 + 1048) = v12;
        if (v3) {
          operator delete(v3);
        }
        goto LABEL_25;
      }
    }
    else if ((v137 & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(v136[0]);
    uint64_t v3 = *(void **)(a1 + 1032);
    *(void *)(a1 + 1040) = v3;
    unint64_t v4 = *(void *)(a1 + 1048);
    if ((unint64_t)v3 < v4) {
      goto LABEL_13;
    }
    goto LABEL_18;
  }
LABEL_26:
  if (*(unsigned char *)(a1 + 189))
  {
    uint64_t v13 = a1 + 1136;
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556530, (uint64_t)&dword_2556530);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556548, (uint64_t)&dword_2556548);
    sub_B1764(a1 + 1152, (uint64_t)&qword_2556560, (uint64_t)&qword_2556560);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556578, (uint64_t)&dword_2556578);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556590, (uint64_t)&dword_2556590);
    sub_B1764(a1 + 1152, (uint64_t)&word_25565A8, (uint64_t)&word_25565A8);
    sub_B1764(a1 + 1152, (uint64_t)&word_25565C0, (uint64_t)&word_25565C0);
    sub_B1764(a1 + 1152, (uint64_t)&dword_25565D8, (uint64_t)&dword_25565D8);
    sub_B1764(a1 + 1152, (uint64_t)&dword_25565F0, (uint64_t)&dword_25565F0);
    sub_B1764(a1 + 1152, (uint64_t)&word_2556608, (uint64_t)&word_2556608);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556620, (uint64_t)&dword_2556620);
    sub_B1764(a1 + 1152, (uint64_t)&word_2556638, (uint64_t)&word_2556638);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556650, (uint64_t)&dword_2556650);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556668, (uint64_t)&dword_2556668);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556680, (uint64_t)&dword_2556680);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556698, (uint64_t)&dword_2556698);
    sub_B1764(a1 + 1152, (uint64_t)&word_25566B0, (uint64_t)&word_25566B0);
    sub_B1764(a1 + 1152, (uint64_t)&dword_25566C8, (uint64_t)&dword_25566C8);
    sub_B1764(a1 + 1152, (uint64_t)&dword_25566E0, (uint64_t)&dword_25566E0);
    sub_B1764(a1 + 1152, (uint64_t)&word_25566F8, (uint64_t)&word_25566F8);
    sub_B1764(a1 + 1152, (uint64_t)&word_2556710, (uint64_t)&word_2556710);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556728, (uint64_t)&dword_2556728);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556740, (uint64_t)&dword_2556740);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556758, (uint64_t)&dword_2556758);
    sub_B1764(a1 + 1152, (uint64_t)&dword_2556770, (uint64_t)&dword_2556770);
    sub_B1764(a1 + 1152, (uint64_t)&word_2556788, (uint64_t)&word_2556788);
    sub_B1764(a1 + 1152, (uint64_t)&dword_25567A0, (uint64_t)&dword_25567A0);
    sub_B1764(a1 + 1152, (uint64_t)&dword_25567B8, (uint64_t)&dword_25567B8);
    sub_B1764(a1 + 1152, (uint64_t)&word_25567D0, (uint64_t)&word_25567D0);
    sub_B1764(a1 + 1152, (uint64_t)&word_25567E8, (uint64_t)&word_25567E8);
    sub_B1764(a1 + 1152, (uint64_t)&word_2556800, (uint64_t)&word_2556800);
    uint64_t v14 = *(void **)(a1 + 1080);
    *(void *)(a1 + 1088) = v14;
    unint64_t v15 = *(void *)(a1 + 1096);
    if ((unint64_t)v14 >= v15)
    {
      uint64_t v17 = v15 - (void)v14;
      uint64_t v18 = v17 >> 2;
      if ((unint64_t)(v17 >> 2) <= 1) {
        uint64_t v18 = 1;
      }
      BOOL v8 = (unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8;
      unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
      if (!v8) {
        unint64_t v19 = v18;
      }
      if (v19 >> 61) {
        goto LABEL_189;
      }
      uint64_t v20 = v19;
      long long v21 = operator new(8 * v19);
      long long v22 = &v21[v20];
      *(void *)(a1 + 1080) = v21;
      *long long v21 = v13;
      uint64_t v16 = v21 + 1;
      *(void *)(a1 + 1088) = v21 + 1;
      *(void *)(a1 + 1096) = v22;
      if (v14) {
        operator delete(v14);
      }
    }
    else
    {
      *uint64_t v14 = v13;
      uint64_t v16 = v14 + 1;
    }
    *(void *)(a1 + 1088) = v16;
  }
  if (!*(unsigned char *)(a1 + 185)) {
    goto LABEL_194;
  }
  uint64_t v23 = *(char **)(a1 + 1056);
  *(void *)(a1 + 1064) = v23;
  uint64_t v24 = a1 + 1176;
  unint64_t v25 = *(void *)(a1 + 1072);
  if ((unint64_t)v23 >= v25)
  {
    uint64_t v27 = v25 - (void)v23;
    uint64_t v28 = v27 >> 2;
    if ((unint64_t)(v27 >> 2) <= 1) {
      uint64_t v28 = 1;
    }
    BOOL v8 = (unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8;
    unint64_t v29 = 0x1FFFFFFFFFFFFFFFLL;
    if (!v8) {
      unint64_t v29 = v28;
    }
    if (v29 >> 61) {
      goto LABEL_189;
    }
    uint64_t v30 = v29;
    uint64_t v31 = operator new(8 * v29);
    uint64_t v32 = &v31[v30];
    *(void *)(a1 + 1056) = v31;
    *uint64_t v31 = v24;
    uint64_t v26 = (char *)(v31 + 1);
    *(void *)(a1 + 1064) = v31 + 1;
    *(void *)(a1 + 1072) = v32;
    if (v23) {
      operator delete(v23);
    }
  }
  else
  {
    *(void *)uint64_t v23 = v24;
    uint64_t v26 = v23 + 8;
  }
  *(void *)(a1 + 1064) = v26;
  uint64_t v33 = a1 + 1192;
  uint64_t v34 = *(char **)(a1 + 1056);
  if (v34 == v26)
  {
LABEL_51:
    uint64_t v35 = v26;
  }
  else
  {
    uint64_t v35 = *(char **)(a1 + 1056);
    int v36 = v35;
    while (*(void *)v36 != v33)
    {
      v36 += 8;
      v35 += 8;
      if (v36 == v26) {
        goto LABEL_51;
      }
    }
  }
  if (v26 != v35)
  {
LABEL_194:
    if (*(unsigned char *)(a1 + 186)) {
      goto LABEL_54;
    }
    goto LABEL_90;
  }
  unint64_t v49 = *(void *)(a1 + 1072);
  if ((unint64_t)v26 < v49)
  {
    *(void *)uint64_t v26 = v33;
    uint64_t v50 = (uint64_t)(v26 + 8);
    goto LABEL_89;
  }
  uint64_t v51 = (char *)(v26 - v34);
  uint64_t v52 = (v26 - v34) >> 3;
  unint64_t v53 = v52 + 1;
  if ((unint64_t)(v52 + 1) >> 61) {
    sub_2E00();
  }
  uint64_t v54 = v49 - (void)v34;
  if (v54 >> 2 > v53) {
    unint64_t v53 = v54 >> 2;
  }
  if ((unint64_t)v54 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v55 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v55 = v53;
  }
  if (v55)
  {
    if (v55 >> 61) {
      goto LABEL_189;
    }
    long long v56 = (char *)operator new(8 * v55);
    unint64_t v57 = &v56[8 * v52];
    long long v58 = &v56[8 * v55];
    *(void *)unint64_t v57 = v33;
    uint64_t v50 = (uint64_t)(v57 + 8);
    if (v34 != v26)
    {
LABEL_77:
      if ((unint64_t)(v51 - 8) >= 0x58)
      {
        if ((unint64_t)(v34 - v56) >= 0x20)
        {
          unint64_t v60 = ((unint64_t)(v51 - 8) >> 3) + 1;
          uint64_t v61 = 8 * (v60 & 0x3FFFFFFFFFFFFFFCLL);
          v59 = &v26[-v61];
          v57 -= v61;
          std::string::size_type v62 = &v56[8 * v52 - 16];
          uint64_t v63 = v26 - 16;
          uint64_t v64 = v60 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v65 = *(_OWORD *)v63;
            *((_OWORD *)v62 - 1) = *((_OWORD *)v63 - 1);
            *(_OWORD *)std::string::size_type v62 = v65;
            v62 -= 32;
            v63 -= 32;
            v64 -= 4;
          }
          while (v64);
          if (v60 == (v60 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_87:
            uint64_t v26 = *(char **)(a1 + 1056);
            *(void *)(a1 + 1056) = v57;
            *(void *)(a1 + 1064) = v50;
            *(void *)(a1 + 1072) = v58;
            if (!v26) {
              goto LABEL_89;
            }
            goto LABEL_88;
          }
        }
        else
        {
          v59 = v26;
        }
      }
      else
      {
        v59 = v26;
      }
      do
      {
        uint64_t v66 = *((void *)v59 - 1);
        v59 -= 8;
        *((void *)v57 - 1) = v66;
        v57 -= 8;
      }
      while (v59 != v34);
      goto LABEL_87;
    }
  }
  else
  {
    long long v56 = 0;
    unint64_t v57 = (char *)(8 * v52);
    long long v58 = 0;
    *(void *)(8 * v52) = v33;
    uint64_t v50 = 8 * v52 + 8;
    if (v34 != v26) {
      goto LABEL_77;
    }
  }
  *(void *)(a1 + 1056) = v57;
  *(void *)(a1 + 1064) = v50;
  *(void *)(a1 + 1072) = v58;
LABEL_88:
  operator delete(v26);
LABEL_89:
  *(void *)(a1 + 1064) = v50;
  if (*(unsigned char *)(a1 + 186))
  {
LABEL_54:
    BOOL v37 = *(char **)(a1 + 1008);
    *(void *)(a1 + 1016) = v37;
    uint64_t v38 = a1 + 1352;
    unint64_t v39 = *(void *)(a1 + 1024);
    if ((unint64_t)v37 >= v39)
    {
      uint64_t v43 = v39 - (void)v37;
      uint64_t v44 = v43 >> 2;
      if ((unint64_t)(v43 >> 2) <= 1) {
        uint64_t v44 = 1;
      }
      BOOL v8 = (unint64_t)v43 >= 0x7FFFFFFFFFFFFFF8;
      unint64_t v45 = 0x1FFFFFFFFFFFFFFFLL;
      if (!v8) {
        unint64_t v45 = v44;
      }
      if (v45 >> 61) {
        goto LABEL_189;
      }
      uint64_t v46 = v45;
      std::string::value_type v47 = operator new(8 * v45);
      long long v48 = &v47[v46];
      *(void *)(a1 + 1008) = v47;
      *std::string::value_type v47 = v38;
      char v40 = (char *)(v47 + 1);
      *(void *)(a1 + 1016) = v47 + 1;
      *(void *)(a1 + 1024) = v48;
      if (v37) {
        operator delete(v37);
      }
      long long v41 = (void **)(a1 + 1008);
      long long v42 = (uint64_t *)(a1 + 1016);
      *(void *)(a1 + 1016) = v40;
      if (!*(unsigned char *)(a1 + 187)) {
        goto LABEL_99;
      }
    }
    else
    {
      *(void *)BOOL v37 = v38;
      char v40 = v37 + 8;
      long long v41 = (void **)(a1 + 1008);
      long long v42 = (uint64_t *)(a1 + 1016);
      *(void *)(a1 + 1016) = v40;
      if (!*(unsigned char *)(a1 + 187)) {
        goto LABEL_99;
      }
    }
LABEL_93:
    uint64_t v68 = a1 + 1240;
    std::string::value_type v69 = *(char **)(a1 + 1008);
    if (v69 == v40)
    {
LABEL_97:
      BOOL v70 = v40;
    }
    else
    {
      BOOL v70 = *(char **)(a1 + 1008);
      long long v71 = v70;
      while (*(void *)v71 != v68)
      {
        v71 += 8;
        v70 += 8;
        if (v71 == v40) {
          goto LABEL_97;
        }
      }
    }
    if (v40 != v70)
    {
LABEL_99:
      if (!*(unsigned char *)(a1 + 188)) {
        return;
      }
LABEL_100:
      uint64_t v72 = a1 + 1400;
      uint64_t v73 = *(char **)(a1 + 1008);
      if (v73 == v40)
      {
LABEL_104:
        uint64_t v74 = v40;
      }
      else
      {
        uint64_t v74 = *(char **)(a1 + 1008);
        uint64_t v75 = v74;
        while (*(void *)v75 != v72)
        {
          v75 += 8;
          v74 += 8;
          if (v75 == v40) {
            goto LABEL_104;
          }
        }
      }
      if (v40 != v74)
      {
        uint64_t v76 = (uint64_t)v40;
        uint64_t v77 = a1 + 1464;
        unint64_t v78 = v40;
        if (v73 == v40) {
          goto LABEL_163;
        }
        goto LABEL_159;
      }
      unint64_t v81 = *(void *)(a1 + 1024);
      if ((unint64_t)v40 < v81)
      {
        *(void *)char v40 = v72;
        uint64_t v76 = (uint64_t)(v40 + 8);
        goto LABEL_158;
      }
      int64_t v90 = v40 - v73;
      uint64_t v91 = (v40 - v73) >> 3;
      unint64_t v92 = v91 + 1;
      if ((unint64_t)(v91 + 1) >> 61) {
        goto LABEL_190;
      }
      uint64_t v93 = v81 - (void)v73;
      if (v93 >> 2 > v92) {
        unint64_t v92 = v93 >> 2;
      }
      if ((unint64_t)v93 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v94 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v94 = v92;
      }
      if (v94)
      {
        if (v94 >> 61) {
          goto LABEL_189;
        }
        long long v95 = operator new(8 * v94);
        uint64_t v96 = &v95[8 * v91];
        uint64_t v97 = &v95[8 * v94];
        *uint64_t v96 = v72;
        uint64_t v76 = (uint64_t)(v96 + 1);
        if (v73 == v40) {
          goto LABEL_156;
        }
      }
      else
      {
        long long v95 = 0;
        uint64_t v96 = (void *)(8 * v91);
        uint64_t v97 = 0;
        *(void *)(8 * v91) = v72;
        uint64_t v76 = 8 * v91 + 8;
        if (v73 == v40) {
          goto LABEL_156;
        }
      }
      if ((unint64_t)(v90 - 8) >= 0x58)
      {
        if ((unint64_t)(v73 - v95) >= 0x20)
        {
          unint64_t v107 = ((unint64_t)(v90 - 8) >> 3) + 1;
          uint64_t v108 = 8 * (v107 & 0x3FFFFFFFFFFFFFFCLL);
          unint64_t v99 = &v40[-v108];
          uint64_t v96 = (void *)((char *)v96 - v108);
          unsigned __int8 v109 = &v95[8 * v91 - 16];
          long long v110 = v40 - 16;
          uint64_t v111 = v107 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v112 = *(_OWORD *)v110;
            *(v109 - 1) = *((_OWORD *)v110 - 1);
            *unsigned __int8 v109 = v112;
            v109 -= 2;
            v110 -= 32;
            v111 -= 4;
          }
          while (v111);
          if (v107 == (v107 & 0x3FFFFFFFFFFFFFFCLL)) {
            goto LABEL_155;
          }
        }
        else
        {
          unint64_t v99 = v40;
        }
      }
      else
      {
        unint64_t v99 = v40;
      }
      do
      {
        uint64_t v113 = *((void *)v99 - 1);
        v99 -= 8;
        *--uint64_t v96 = v113;
      }
      while (v99 != v73);
LABEL_155:
      char v40 = v73;
LABEL_156:
      *(void *)(a1 + 1008) = v96;
      *(void *)(a1 + 1016) = v76;
      *(void *)(a1 + 1024) = v97;
      if (v40) {
        operator delete(v40);
      }
LABEL_158:
      uint64_t *v42 = v76;
      uint64_t v73 = (char *)*v41;
      char v40 = (char *)v76;
      uint64_t v77 = a1 + 1464;
      unint64_t v78 = (char *)v76;
      if (*v41 == (void *)v76) {
        goto LABEL_163;
      }
LABEL_159:
      unint64_t v78 = v73;
      std::string v114 = v73;
      while (*(void *)v114 != v77)
      {
        v114 += 8;
        v78 += 8;
        if (v114 == v40)
        {
          unint64_t v78 = (char *)v76;
          break;
        }
      }
LABEL_163:
      if (v40 != v78) {
        return;
      }
      unint64_t v115 = *(void *)(a1 + 1024);
      if ((unint64_t)v40 < v115)
      {
        *(void *)char v40 = v77;
        uint64_t v116 = (uint64_t)(v40 + 8);
LABEL_187:
        uint64_t *v42 = v116;
        return;
      }
      uint64_t v117 = v76 - (void)v73;
      uint64_t v118 = (v76 - (uint64_t)v73) >> 3;
      unint64_t v119 = v118 + 1;
      if (!((unint64_t)(v118 + 1) >> 61))
      {
        uint64_t v120 = v115 - (void)v73;
        if (v120 >> 2 > v119) {
          unint64_t v119 = v120 >> 2;
        }
        if ((unint64_t)v120 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v121 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v121 = v119;
        }
        if (!v121)
        {
          int v122 = 0;
          std::string v123 = (void *)(8 * v118);
          uint64_t v124 = 0;
          *(void *)(8 * v118) = v77;
          uint64_t v116 = 8 * v118 + 8;
          if (v73 == v40) {
            goto LABEL_185;
          }
LABEL_177:
          unint64_t v125 = v40 - v73 - 8;
          if (v125 >= 0x58)
          {
            if ((unint64_t)(v40 - v122 - v117) >= 0x20)
            {
              uint64_t v127 = (v125 >> 3) + 1;
              uint64_t v128 = 8 * (v127 & 0x3FFFFFFFFFFFFFFCLL);
              long long v126 = &v40[-v128];
              std::string v123 = (void *)((char *)v123 - v128);
              v129 = &v122[8 * v118 - 16];
              long long v130 = v40 - 16;
              uint64_t v131 = v127 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v132 = *(_OWORD *)v130;
                *(v129 - 1) = *((_OWORD *)v130 - 1);
                _OWORD *v129 = v132;
                v129 -= 2;
                v130 -= 32;
                v131 -= 4;
              }
              while (v131);
              if (v127 == (v127 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_185;
              }
            }
            else
            {
              long long v126 = v40;
            }
          }
          else
          {
            long long v126 = v40;
          }
          do
          {
            uint64_t v133 = *((void *)v126 - 1);
            v126 -= 8;
            *--std::string v123 = v133;
          }
          while (v126 != v73);
LABEL_185:
          *(void *)(a1 + 1008) = v123;
          *(void *)(a1 + 1016) = v116;
          *(void *)(a1 + 1024) = v124;
          if (v73) {
            operator delete(v73);
          }
          goto LABEL_187;
        }
        if (!(v121 >> 61))
        {
          int v122 = operator new(8 * v121);
          std::string v123 = &v122[8 * v118];
          uint64_t v124 = &v122[8 * v121];
          *std::string v123 = v77;
          uint64_t v116 = (uint64_t)(v123 + 1);
          if (v73 == v40) {
            goto LABEL_185;
          }
          goto LABEL_177;
        }
LABEL_189:
        sub_188D718();
      }
LABEL_190:
      sub_2E00();
    }
    unint64_t v79 = *(void *)(a1 + 1024);
    if ((unint64_t)v40 < v79)
    {
      *(void *)char v40 = v68;
      uint64_t v80 = (uint64_t)(v40 + 8);
      goto LABEL_149;
    }
    uint64_t v82 = (char *)(v40 - v69);
    uint64_t v83 = (v40 - v69) >> 3;
    unint64_t v84 = v83 + 1;
    if ((unint64_t)(v83 + 1) >> 61) {
      goto LABEL_190;
    }
    uint64_t v85 = v79 - (void)v69;
    if (v85 >> 2 > v84) {
      unint64_t v84 = v85 >> 2;
    }
    if ((unint64_t)v85 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v86 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v86 = v84;
    }
    if (v86)
    {
      if (v86 >> 61) {
        goto LABEL_189;
      }
      long long v87 = (char *)operator new(8 * v86);
      long long v88 = &v87[8 * v83];
      uint64_t v89 = &v87[8 * v86];
      *(void *)long long v88 = v68;
      uint64_t v80 = (uint64_t)(v88 + 8);
      if (v69 == v40) {
        goto LABEL_147;
      }
    }
    else
    {
      long long v87 = 0;
      long long v88 = (char *)(8 * v83);
      uint64_t v89 = 0;
      *(void *)(8 * v83) = v68;
      uint64_t v80 = 8 * v83 + 8;
      if (v69 == v40) {
        goto LABEL_147;
      }
    }
    if ((unint64_t)(v82 - 8) >= 0x58)
    {
      if ((unint64_t)(v69 - v87) >= 0x20)
      {
        unint64_t v100 = ((unint64_t)(v82 - 8) >> 3) + 1;
        uint64_t v101 = 8 * (v100 & 0x3FFFFFFFFFFFFFFCLL);
        uint64_t v98 = &v40[-v101];
        v88 -= v101;
        uint64_t v102 = &v87[8 * v83 - 16];
        std::string v103 = v40 - 16;
        uint64_t v104 = v100 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v105 = *(_OWORD *)v103;
          *((_OWORD *)v102 - 1) = *((_OWORD *)v103 - 1);
          *(_OWORD *)uint64_t v102 = v105;
          v102 -= 32;
          v103 -= 32;
          v104 -= 4;
        }
        while (v104);
        if (v100 == (v100 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_146;
        }
      }
      else
      {
        uint64_t v98 = v40;
      }
    }
    else
    {
      uint64_t v98 = v40;
    }
    do
    {
      uint64_t v106 = *((void *)v98 - 1);
      v98 -= 8;
      *((void *)v88 - 1) = v106;
      v88 -= 8;
    }
    while (v98 != v69);
LABEL_146:
    char v40 = v69;
LABEL_147:
    *(void *)(a1 + 1008) = v88;
    *(void *)(a1 + 1016) = v80;
    *(void *)(a1 + 1024) = v89;
    if (v40) {
      operator delete(v40);
    }
LABEL_149:
    uint64_t *v42 = v80;
    char v40 = (char *)v80;
    if (!*(unsigned char *)(a1 + 188)) {
      return;
    }
    goto LABEL_100;
  }
LABEL_90:
  int v67 = *(unsigned __int8 *)(a1 + 187);
  if (*(unsigned char *)(a1 + 187) || *(unsigned char *)(a1 + 188))
  {
    long long v41 = (void **)(a1 + 1008);
    long long v42 = (uint64_t *)(a1 + 1016);
    char v40 = *(char **)(a1 + 1008);
    *(void *)(a1 + 1016) = v40;
    if (!v67) {
      goto LABEL_99;
    }
    goto LABEL_93;
  }
}

void sub_222290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_2222D0(uint64_t a1)
{
  __p[0] = &loc_736260 + 1;
  char v3 = 3;
  uint64_t v4 = 0x100000022;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1936679777;
  char v3 = 4;
  uint64_t v4 = 0x100000023;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x68736F6361;
  char v3 = 5;
  uint64_t v4 = 0x100000024;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1852404577;
  char v3 = 4;
  uint64_t v4 = 0x100000025;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x686E697361;
  char v3 = 5;
  uint64_t v4 = 0x100000026;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1851880545;
  char v3 = 4;
  uint64_t v4 = 0x100000027;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x686E617461;
  char v3 = 5;
  uint64_t v4 = 0x100000028;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1818846563;
  char v3 = 4;
  uint64_t v4 = 0x100000029;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_736F60 + 3;
  char v3 = 3;
  uint64_t v4 = 0x10000002ALL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1752395619;
  char v3 = 4;
  uint64_t v4 = 0x10000002BLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_707864 + 1;
  char v3 = 3;
  uint64_t v4 = 0x10000002CLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x316D707865;
  char v3 = 5;
  uint64_t v4 = 0x10000002DLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x726F6F6C66;
  char v3 = 5;
  uint64_t v4 = 0x10000002ELL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_676F6C;
  char v3 = 3;
  uint64_t v4 = 0x10000002FLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x3031676F6CLL;
  char v3 = 5;
  uint64_t v4 = 0x100000030;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)845639532;
  char v3 = 4;
  uint64_t v4 = 0x100000031;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x7031676F6CLL;
  char v3 = 5;
  uint64_t v4 = 0x100000032;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x646E756F72;
  char v3 = 5;
  uint64_t v4 = 0x100000036;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_6E6970 + 3;
  char v3 = 3;
  uint64_t v4 = 0x10000003ALL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1668180339;
  char v3 = 4;
  uint64_t v4 = 0x10000003BLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1752066419;
  char v3 = 4;
  uint64_t v4 = 0x10000003CLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_636570 + 3;
  char v3 = 3;
  uint64_t v4 = 0x10000003DLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_637360 + 3;
  char v3 = 3;
  uint64_t v4 = 0x10000003ELL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1953657203;
  char v3 = 4;
  uint64_t v4 = 0x100000039;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_6E6174;
  char v3 = 3;
  uint64_t v4 = 0x10000003FLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1752064372;
  char v3 = 4;
  uint64_t v4 = 0x100000040;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_746F60 + 3;
  char v3 = 3;
  uint64_t v4 = 0x100000041;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x67656432646172;
  char v3 = 7;
  uint64_t v4 = 0x100000046;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x64617232676564;
  char v3 = 7;
  uint64_t v4 = 0x100000047;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "deg2grad");
  char v3 = 8;
  uint64_t v4 = 0x100000048;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "grad2deg");
  char v3 = 8;
  uint64_t v4 = 0x100000049;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_6E6770 + 3;
  char v3 = 3;
  uint64_t v4 = 0x100000045;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_746F6C + 2;
  char v3 = 3;
  uint64_t v4 = 0x10000004BLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_667264 + 1;
  char v3 = 3;
  uint64_t v4 = 0x10000004CLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1667658341;
  char v3 = 4;
  uint64_t v4 = 0x10000004DLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1717855086;
  char v3 = 4;
  uint64_t v4 = 0x10000004ELL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1667330662;
  char v3 = 4;
  uint64_t v4 = 0x10000004FLL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x636E757274;
  char v3 = 5;
  uint64_t v4 = 0x100000050;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x326E617461;
  char v3 = 5;
  uint64_t v4 = 0x200000008;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_646F6C + 1;
  char v3 = 3;
  uint64_t v4 = 0x200000006;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1852272492;
  char v3 = 4;
  uint64_t v4 = 0x200000033;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_776F70;
  char v3 = 3;
  uint64_t v4 = 0x200000007;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)1953460082;
  char v3 = 4;
  uint64_t v4 = 0x200000038;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x6E646E756F72;
  char v3 = 6;
  uint64_t v4 = 0x200000037;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x6C61757165;
  char v3 = 5;
  uint64_t v4 = 0x200000011;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  strcpy((char *)__p, "not_equal");
  char v3 = 9;
  uint64_t v4 = 0x200000013;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x746F707968;
  char v3 = 5;
  uint64_t v4 = 0x20000004ALL;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_726870 + 3;
  char v3 = 3;
  uint64_t v4 = 0x200000020;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = &loc_6C6870 + 3;
  char v3 = 3;
  uint64_t v4 = 0x200000021;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x706D616C63;
  char v3 = 5;
  uint64_t v4 = 0x300000042;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x706D616C6369;
  char v3 = 6;
  uint64_t v4 = 0x300000043;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = (void *)0x65676E61726E69;
  char v3 = 7;
  uint64_t v4 = 0x300000044;
  sub_2306CC(a1, (uint64_t)__p);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
}

void sub_222EEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_222FD4(uint64_t a1, uint64_t **a2)
{
  uint64_t v4 = a2 + 1;
  char v3 = a2[1];
  BOOL v5 = a2 + 1;
  uint64_t v6 = a2 + 1;
  if (v3)
  {
    uint64_t v7 = a2[1];
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (uint64_t **)v7;
        int v8 = *((_DWORD *)v7 + 8);
        if (v8 < 35) {
          break;
        }
        uint64_t v7 = *v6;
        BOOL v5 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      if (v8 == 34) {
        break;
      }
      uint64_t v7 = v6[1];
      if (!v7)
      {
        BOOL v5 = v6 + 1;
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    unint64_t v9 = operator new(0x30uLL);
    v9[8] = 34;
    *((void *)v9 + 5) = sub_E103C;
    *(void *)unint64_t v9 = 0;
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = v6;
    *BOOL v5 = (uint64_t *)v9;
    uint64_t v10 = (uint64_t *)**a2;
    if (v10)
    {
      *a2 = v10;
      uint64_t v11 = *v5;
    }
    else
    {
      uint64_t v11 = (uint64_t *)v9;
    }
    sub_2F250(a2[1], v11);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v12 = v4;
  uint64_t v13 = v4;
  if (v3)
  {
    uint64_t v14 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v13 = (uint64_t **)v14;
        int v15 = *((_DWORD *)v14 + 8);
        if (v15 < 36) {
          break;
        }
        uint64_t v14 = *v13;
        uint64_t v12 = v13;
        if (!*v13) {
          goto LABEL_19;
        }
      }
      if (v15 == 35) {
        break;
      }
      uint64_t v14 = v13[1];
      if (!v14)
      {
        uint64_t v12 = v13 + 1;
        goto LABEL_19;
      }
    }
  }
  else
  {
LABEL_19:
    uint64_t v16 = operator new(0x30uLL);
    v16[8] = 35;
    *((void *)v16 + 5) = sub_E108C;
    *(void *)uint64_t v16 = 0;
    *((void *)v16 + 1) = 0;
    *((void *)v16 + 2) = v13;
    void *v12 = (uint64_t *)v16;
    uint64_t v17 = (uint64_t *)**a2;
    if (v17)
    {
      *a2 = v17;
      uint64_t v18 = *v12;
    }
    else
    {
      uint64_t v18 = (uint64_t *)v16;
    }
    sub_2F250(a2[1], v18);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  unint64_t v19 = v4;
  uint64_t v20 = v4;
  if (v3)
  {
    long long v21 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v20 = (uint64_t **)v21;
        int v22 = *((_DWORD *)v21 + 8);
        if (v22 < 37) {
          break;
        }
        long long v21 = *v20;
        unint64_t v19 = v20;
        if (!*v20) {
          goto LABEL_30;
        }
      }
      if (v22 == 36) {
        break;
      }
      long long v21 = v20[1];
      if (!v21)
      {
        unint64_t v19 = v20 + 1;
        goto LABEL_30;
      }
    }
  }
  else
  {
LABEL_30:
    uint64_t v23 = operator new(0x30uLL);
    v23[8] = 36;
    *((void *)v23 + 5) = sub_E10E4;
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    *((void *)v23 + 2) = v20;
    *unint64_t v19 = (uint64_t *)v23;
    uint64_t v24 = (uint64_t *)**a2;
    if (v24)
    {
      *a2 = v24;
      unint64_t v25 = *v19;
    }
    else
    {
      unint64_t v25 = (uint64_t *)v23;
    }
    sub_2F250(a2[1], v25);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v26 = v4;
  uint64_t v27 = v4;
  if (v3)
  {
    uint64_t v28 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v27 = (uint64_t **)v28;
        int v29 = *((_DWORD *)v28 + 8);
        if (v29 < 38) {
          break;
        }
        uint64_t v28 = *v27;
        uint64_t v26 = v27;
        if (!*v27) {
          goto LABEL_41;
        }
      }
      if (v29 == 37) {
        break;
      }
      uint64_t v28 = v27[1];
      if (!v28)
      {
        uint64_t v26 = v27 + 1;
        goto LABEL_41;
      }
    }
  }
  else
  {
LABEL_41:
    uint64_t v30 = operator new(0x30uLL);
    v30[8] = 37;
    *((void *)v30 + 5) = sub_E113C;
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    *((void *)v30 + 2) = v27;
    *uint64_t v26 = (uint64_t *)v30;
    uint64_t v31 = (uint64_t *)**a2;
    if (v31)
    {
      *a2 = v31;
      uint64_t v32 = *v26;
    }
    else
    {
      uint64_t v32 = (uint64_t *)v30;
    }
    sub_2F250(a2[1], v32);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v33 = v4;
  uint64_t v34 = v4;
  if (v3)
  {
    uint64_t v35 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v34 = (uint64_t **)v35;
        int v36 = *((_DWORD *)v35 + 8);
        if (v36 < 39) {
          break;
        }
        uint64_t v35 = *v34;
        uint64_t v33 = v34;
        if (!*v34) {
          goto LABEL_52;
        }
      }
      if (v36 == 38) {
        break;
      }
      uint64_t v35 = v34[1];
      if (!v35)
      {
        uint64_t v33 = v34 + 1;
        goto LABEL_52;
      }
    }
  }
  else
  {
LABEL_52:
    BOOL v37 = operator new(0x30uLL);
    v37[8] = 38;
    *((void *)v37 + 5) = sub_E1194;
    *(void *)BOOL v37 = 0;
    *((void *)v37 + 1) = 0;
    *((void *)v37 + 2) = v34;
    void *v33 = (uint64_t *)v37;
    uint64_t v38 = (uint64_t *)**a2;
    if (v38)
    {
      *a2 = v38;
      unint64_t v39 = *v33;
    }
    else
    {
      unint64_t v39 = (uint64_t *)v37;
    }
    sub_2F250(a2[1], v39);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  char v40 = v4;
  long long v41 = v4;
  if (v3)
  {
    long long v42 = v3;
    while (1)
    {
      while (1)
      {
        long long v41 = (uint64_t **)v42;
        int v43 = *((_DWORD *)v42 + 8);
        if (v43 < 41) {
          break;
        }
        long long v42 = *v41;
        char v40 = v41;
        if (!*v41) {
          goto LABEL_63;
        }
      }
      if (v43 == 40) {
        break;
      }
      long long v42 = v41[1];
      if (!v42)
      {
        char v40 = v41 + 1;
        goto LABEL_63;
      }
    }
  }
  else
  {
LABEL_63:
    uint64_t v44 = operator new(0x30uLL);
    v44[8] = 40;
    *((void *)v44 + 5) = sub_E126C;
    *(void *)uint64_t v44 = 0;
    *((void *)v44 + 1) = 0;
    *((void *)v44 + 2) = v41;
    char *v40 = (uint64_t *)v44;
    unint64_t v45 = (uint64_t *)**a2;
    if (v45)
    {
      *a2 = v45;
      uint64_t v46 = *v40;
    }
    else
    {
      uint64_t v46 = (uint64_t *)v44;
    }
    sub_2F250(a2[1], v46);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::value_type v47 = v4;
  long long v48 = v4;
  if (v3)
  {
    unint64_t v49 = v3;
    while (1)
    {
      while (1)
      {
        long long v48 = (uint64_t **)v49;
        int v50 = *((_DWORD *)v49 + 8);
        if (v50 < 42) {
          break;
        }
        unint64_t v49 = *v48;
        std::string::value_type v47 = v48;
        if (!*v48) {
          goto LABEL_74;
        }
      }
      if (v50 == 41) {
        break;
      }
      unint64_t v49 = v48[1];
      if (!v49)
      {
        std::string::value_type v47 = v48 + 1;
        goto LABEL_74;
      }
    }
  }
  else
  {
LABEL_74:
    uint64_t v51 = operator new(0x30uLL);
    v51[8] = 41;
    *((void *)v51 + 5) = sub_E12F8;
    *(void *)uint64_t v51 = 0;
    *((void *)v51 + 1) = 0;
    *((void *)v51 + 2) = v48;
    *std::string::value_type v47 = (uint64_t *)v51;
    uint64_t v52 = (uint64_t *)**a2;
    if (v52)
    {
      *a2 = v52;
      unint64_t v53 = *v47;
    }
    else
    {
      unint64_t v53 = (uint64_t *)v51;
    }
    sub_2F250(a2[1], v53);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v54 = v4;
  unint64_t v55 = v4;
  if (v3)
  {
    long long v56 = v3;
    while (1)
    {
      while (1)
      {
        unint64_t v55 = (uint64_t **)v56;
        int v57 = *((_DWORD *)v56 + 8);
        if (v57 < 43) {
          break;
        }
        long long v56 = *v55;
        uint64_t v54 = v55;
        if (!*v55) {
          goto LABEL_85;
        }
      }
      if (v57 == 42) {
        break;
      }
      long long v56 = v55[1];
      if (!v56)
      {
        uint64_t v54 = v55 + 1;
        goto LABEL_85;
      }
    }
  }
  else
  {
LABEL_85:
    long long v58 = operator new(0x30uLL);
    v58[8] = 42;
    *((void *)v58 + 5) = sub_E1340;
    *(void *)long long v58 = 0;
    *((void *)v58 + 1) = 0;
    *((void *)v58 + 2) = v55;
    std::string *v54 = (uint64_t *)v58;
    v59 = (uint64_t *)**a2;
    if (v59)
    {
      *a2 = v59;
      unint64_t v60 = *v54;
    }
    else
    {
      unint64_t v60 = (uint64_t *)v58;
    }
    sub_2F250(a2[1], v60);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v61 = v4;
  std::string::size_type v62 = v4;
  if (v3)
  {
    uint64_t v63 = v3;
    while (1)
    {
      while (1)
      {
        std::string::size_type v62 = (uint64_t **)v63;
        int v64 = *((_DWORD *)v63 + 8);
        if (v64 < 44) {
          break;
        }
        uint64_t v63 = *v62;
        uint64_t v61 = v62;
        if (!*v62) {
          goto LABEL_96;
        }
      }
      if (v64 == 43) {
        break;
      }
      uint64_t v63 = v62[1];
      if (!v63)
      {
        uint64_t v61 = v62 + 1;
        goto LABEL_96;
      }
    }
  }
  else
  {
LABEL_96:
    long long v65 = operator new(0x30uLL);
    v65[8] = 43;
    *((void *)v65 + 5) = sub_E1384;
    *(void *)long long v65 = 0;
    *((void *)v65 + 1) = 0;
    *((void *)v65 + 2) = v62;
    const std::string::value_type *v61 = (uint64_t *)v65;
    uint64_t v66 = (uint64_t *)**a2;
    if (v66)
    {
      *a2 = v66;
      int v67 = *v61;
    }
    else
    {
      int v67 = (uint64_t *)v65;
    }
    sub_2F250(a2[1], v67);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v68 = v4;
  std::string::value_type v69 = v4;
  if (v3)
  {
    BOOL v70 = v3;
    while (1)
    {
      while (1)
      {
        std::string::value_type v69 = (uint64_t **)v70;
        int v71 = *((_DWORD *)v70 + 8);
        if (v71 < 45) {
          break;
        }
        BOOL v70 = *v69;
        uint64_t v68 = v69;
        if (!*v69) {
          goto LABEL_107;
        }
      }
      if (v71 == 44) {
        break;
      }
      BOOL v70 = v69[1];
      if (!v70)
      {
        uint64_t v68 = v69 + 1;
        goto LABEL_107;
      }
    }
  }
  else
  {
LABEL_107:
    uint64_t v72 = operator new(0x30uLL);
    v72[8] = 44;
    *((void *)v72 + 5) = sub_E13C8;
    *(void *)uint64_t v72 = 0;
    *((void *)v72 + 1) = 0;
    *((void *)v72 + 2) = v69;
    *uint64_t v68 = (uint64_t *)v72;
    uint64_t v73 = (uint64_t *)**a2;
    if (v73)
    {
      *a2 = v73;
      uint64_t v74 = *v68;
    }
    else
    {
      uint64_t v74 = (uint64_t *)v72;
    }
    sub_2F250(a2[1], v74);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v75 = v4;
  uint64_t v76 = v4;
  if (v3)
  {
    uint64_t v77 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v76 = (uint64_t **)v77;
        int v78 = *((_DWORD *)v77 + 8);
        if (v78 < 46) {
          break;
        }
        uint64_t v77 = *v76;
        uint64_t v75 = v76;
        if (!*v76) {
          goto LABEL_118;
        }
      }
      if (v78 == 45) {
        break;
      }
      uint64_t v77 = v76[1];
      if (!v77)
      {
        uint64_t v75 = v76 + 1;
        goto LABEL_118;
      }
    }
  }
  else
  {
LABEL_118:
    unint64_t v79 = operator new(0x30uLL);
    v79[8] = 45;
    *((void *)v79 + 5) = sub_E145C;
    *(void *)unint64_t v79 = 0;
    *((void *)v79 + 1) = 0;
    *((void *)v79 + 2) = v76;
    *uint64_t v75 = (uint64_t *)v79;
    uint64_t v80 = (uint64_t *)**a2;
    if (v80)
    {
      *a2 = v80;
      unint64_t v81 = *v75;
    }
    else
    {
      unint64_t v81 = (uint64_t *)v79;
    }
    sub_2F250(a2[1], v81);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v82 = v4;
  uint64_t v83 = v4;
  if (v3)
  {
    unint64_t v84 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v83 = (uint64_t **)v84;
        int v85 = *((_DWORD *)v84 + 8);
        if (v85 < 47) {
          break;
        }
        unint64_t v84 = *v83;
        uint64_t v82 = v83;
        if (!*v83) {
          goto LABEL_129;
        }
      }
      if (v85 == 46) {
        break;
      }
      unint64_t v84 = v83[1];
      if (!v84)
      {
        uint64_t v82 = v83 + 1;
        goto LABEL_129;
      }
    }
  }
  else
  {
LABEL_129:
    unint64_t v86 = operator new(0x30uLL);
    v86[8] = 46;
    *((void *)v86 + 5) = sub_E14F4;
    *(void *)unint64_t v86 = 0;
    *((void *)v86 + 1) = 0;
    *((void *)v86 + 2) = v83;
    *uint64_t v82 = (uint64_t *)v86;
    long long v87 = (uint64_t *)**a2;
    if (v87)
    {
      *a2 = v87;
      long long v88 = *v82;
    }
    else
    {
      long long v88 = (uint64_t *)v86;
    }
    sub_2F250(a2[1], v88);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v89 = v4;
  int64_t v90 = v4;
  if (v3)
  {
    uint64_t v91 = v3;
    while (1)
    {
      while (1)
      {
        int64_t v90 = (uint64_t **)v91;
        int v92 = *((_DWORD *)v91 + 8);
        if (v92 < 48) {
          break;
        }
        uint64_t v91 = *v90;
        uint64_t v89 = v90;
        if (!*v90) {
          goto LABEL_140;
        }
      }
      if (v92 == 47) {
        break;
      }
      uint64_t v91 = v90[1];
      if (!v91)
      {
        uint64_t v89 = v90 + 1;
        goto LABEL_140;
      }
    }
  }
  else
  {
LABEL_140:
    uint64_t v93 = operator new(0x30uLL);
    v93[8] = 47;
    *((void *)v93 + 5) = sub_E153C;
    *(void *)uint64_t v93 = 0;
    *((void *)v93 + 1) = 0;
    *((void *)v93 + 2) = v90;
    *uint64_t v89 = (uint64_t *)v93;
    unint64_t v94 = (uint64_t *)**a2;
    if (v94)
    {
      *a2 = v94;
      long long v95 = *v89;
    }
    else
    {
      long long v95 = (uint64_t *)v93;
    }
    sub_2F250(a2[1], v95);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v96 = v4;
  uint64_t v97 = v4;
  if (v3)
  {
    uint64_t v98 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v97 = (uint64_t **)v98;
        int v99 = *((_DWORD *)v98 + 8);
        if (v99 < 49) {
          break;
        }
        uint64_t v98 = *v97;
        uint64_t v96 = v97;
        if (!*v97) {
          goto LABEL_151;
        }
      }
      if (v99 == 48) {
        break;
      }
      uint64_t v98 = v97[1];
      if (!v98)
      {
        uint64_t v96 = v97 + 1;
        goto LABEL_151;
      }
    }
  }
  else
  {
LABEL_151:
    unint64_t v100 = operator new(0x30uLL);
    v100[8] = 48;
    *((void *)v100 + 5) = sub_E1580;
    *(void *)unint64_t v100 = 0;
    *((void *)v100 + 1) = 0;
    *((void *)v100 + 2) = v97;
    *uint64_t v96 = (uint64_t *)v100;
    uint64_t v101 = (uint64_t *)**a2;
    if (v101)
    {
      *a2 = v101;
      uint64_t v102 = *v96;
    }
    else
    {
      uint64_t v102 = (uint64_t *)v100;
    }
    sub_2F250(a2[1], v102);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string v103 = v4;
  uint64_t v104 = v4;
  if (v3)
  {
    long long v105 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v104 = (uint64_t **)v105;
        int v106 = *((_DWORD *)v105 + 8);
        if (v106 < 50) {
          break;
        }
        long long v105 = *v104;
        std::string v103 = v104;
        if (!*v104) {
          goto LABEL_162;
        }
      }
      if (v106 == 49) {
        break;
      }
      long long v105 = v104[1];
      if (!v105)
      {
        std::string v103 = v104 + 1;
        goto LABEL_162;
      }
    }
  }
  else
  {
LABEL_162:
    unint64_t v107 = operator new(0x30uLL);
    v107[8] = 49;
    *((void *)v107 + 5) = sub_E15E4;
    *(void *)unint64_t v107 = 0;
    *((void *)v107 + 1) = 0;
    *((void *)v107 + 2) = v104;
    *std::string v103 = (uint64_t *)v107;
    uint64_t v108 = (uint64_t *)**a2;
    if (v108)
    {
      *a2 = v108;
      unsigned __int8 v109 = *v103;
    }
    else
    {
      unsigned __int8 v109 = (uint64_t *)v107;
    }
    sub_2F250(a2[1], v109);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  long long v110 = v4;
  uint64_t v111 = v4;
  if (v3)
  {
    long long v112 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v111 = (uint64_t **)v112;
        int v113 = *((_DWORD *)v112 + 8);
        if (v113 < 51) {
          break;
        }
        long long v112 = *v111;
        long long v110 = v111;
        if (!*v111) {
          goto LABEL_173;
        }
      }
      if (v113 == 50) {
        break;
      }
      long long v112 = v111[1];
      if (!v112)
      {
        long long v110 = v111 + 1;
        goto LABEL_173;
      }
    }
  }
  else
  {
LABEL_173:
    std::string v114 = operator new(0x30uLL);
    v114[8] = 50;
    *((void *)v114 + 5) = sub_E169C;
    *(void *)std::string v114 = 0;
    *((void *)v114 + 1) = 0;
    *((void *)v114 + 2) = v111;
    *long long v110 = (uint64_t *)v114;
    unint64_t v115 = (uint64_t *)**a2;
    if (v115)
    {
      *a2 = v115;
      uint64_t v116 = *v110;
    }
    else
    {
      uint64_t v116 = (uint64_t *)v114;
    }
    sub_2F250(a2[1], v116);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v117 = v4;
  uint64_t v118 = v4;
  if (v3)
  {
    unint64_t v119 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v118 = (uint64_t **)v119;
        int v120 = *((_DWORD *)v119 + 8);
        if (v120 < 53) {
          break;
        }
        unint64_t v119 = *v118;
        uint64_t v117 = v118;
        if (!*v118) {
          goto LABEL_184;
        }
      }
      if (v120 == 52) {
        break;
      }
      unint64_t v119 = v118[1];
      if (!v119)
      {
        uint64_t v117 = v118 + 1;
        goto LABEL_184;
      }
    }
  }
  else
  {
LABEL_184:
    unint64_t v121 = operator new(0x30uLL);
    v121[8] = 52;
    *((void *)v121 + 5) = sub_E1738;
    *(void *)unint64_t v121 = 0;
    *((void *)v121 + 1) = 0;
    *((void *)v121 + 2) = v118;
    *uint64_t v117 = (uint64_t *)v121;
    int v122 = (uint64_t *)**a2;
    if (v122)
    {
      *a2 = v122;
      std::string v123 = *v117;
    }
    else
    {
      std::string v123 = (uint64_t *)v121;
    }
    sub_2F250(a2[1], v123);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v124 = v4;
  unint64_t v125 = v4;
  if (v3)
  {
    long long v126 = v3;
    while (1)
    {
      while (1)
      {
        unint64_t v125 = (uint64_t **)v126;
        int v127 = *((_DWORD *)v126 + 8);
        if (v127 < 54) {
          break;
        }
        long long v126 = *v125;
        uint64_t v124 = v125;
        if (!*v125) {
          goto LABEL_195;
        }
      }
      if (v127 == 53) {
        break;
      }
      long long v126 = v125[1];
      if (!v126)
      {
        uint64_t v124 = v125 + 1;
        goto LABEL_195;
      }
    }
  }
  else
  {
LABEL_195:
    uint64_t v128 = operator new(0x30uLL);
    v128[8] = 53;
    *((void *)v128 + 5) = sub_E1780;
    *(void *)uint64_t v128 = 0;
    *((void *)v128 + 1) = 0;
    *((void *)v128 + 2) = v125;
    *uint64_t v124 = (uint64_t *)v128;
    v129 = (uint64_t *)**a2;
    if (v129)
    {
      *a2 = v129;
      long long v130 = *v124;
    }
    else
    {
      long long v130 = (uint64_t *)v128;
    }
    sub_2F250(a2[1], v130);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v131 = v4;
  long long v132 = v4;
  if (v3)
  {
    uint64_t v133 = v3;
    while (1)
    {
      while (1)
      {
        long long v132 = (uint64_t **)v133;
        int v134 = *((_DWORD *)v133 + 8);
        if (v134 < 55) {
          break;
        }
        uint64_t v133 = *v132;
        uint64_t v131 = v132;
        if (!*v132) {
          goto LABEL_206;
        }
      }
      if (v134 == 54) {
        break;
      }
      uint64_t v133 = v132[1];
      if (!v133)
      {
        uint64_t v131 = v132 + 1;
        goto LABEL_206;
      }
    }
  }
  else
  {
LABEL_206:
    char v135 = operator new(0x30uLL);
    v135[8] = 54;
    *((void *)v135 + 5) = sub_E17E4;
    *(void *)char v135 = 0;
    *((void *)v135 + 1) = 0;
    *((void *)v135 + 2) = v132;
    *uint64_t v131 = (uint64_t *)v135;
    v136 = (uint64_t *)**a2;
    if (v136)
    {
      *a2 = v136;
      char v137 = *v131;
    }
    else
    {
      char v137 = (uint64_t *)v135;
    }
    sub_2F250(a2[1], v137);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v138 = v4;
  v139 = v4;
  if (v3)
  {
    v140 = v3;
    while (1)
    {
      while (1)
      {
        v139 = (uint64_t **)v140;
        int v141 = *((_DWORD *)v140 + 8);
        if (v141 < 59) {
          break;
        }
        v140 = *v139;
        v138 = v139;
        if (!*v139) {
          goto LABEL_217;
        }
      }
      if (v141 == 58) {
        break;
      }
      v140 = v139[1];
      if (!v140)
      {
        v138 = v139 + 1;
        goto LABEL_217;
      }
    }
  }
  else
  {
LABEL_217:
    v142 = operator new(0x30uLL);
    v142[8] = 58;
    *((void *)v142 + 5) = sub_E1848;
    *(void *)v142 = 0;
    *((void *)v142 + 1) = 0;
    *((void *)v142 + 2) = v139;
    char *v138 = (uint64_t *)v142;
    v143 = (uint64_t *)**a2;
    if (v143)
    {
      *a2 = v143;
      v144 = *v138;
    }
    else
    {
      v144 = (uint64_t *)v142;
    }
    sub_2F250(a2[1], v144);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v145 = v4;
  v146 = v4;
  if (v3)
  {
    v147 = v3;
    while (1)
    {
      while (1)
      {
        v146 = (uint64_t **)v147;
        int v148 = *((_DWORD *)v147 + 8);
        if (v148 < 60) {
          break;
        }
        v147 = *v146;
        v145 = v146;
        if (!*v146) {
          goto LABEL_228;
        }
      }
      if (v148 == 59) {
        break;
      }
      v147 = v146[1];
      if (!v147)
      {
        v145 = v146 + 1;
        goto LABEL_228;
      }
    }
  }
  else
  {
LABEL_228:
    v149 = operator new(0x30uLL);
    v149[8] = 59;
    *((void *)v149 + 5) = sub_E18C8;
    *(void *)v149 = 0;
    *((void *)v149 + 1) = 0;
    *((void *)v149 + 2) = v146;
    *v145 = (uint64_t *)v149;
    v150 = (uint64_t *)**a2;
    if (v150)
    {
      *a2 = v150;
      v151 = *v145;
    }
    else
    {
      v151 = (uint64_t *)v149;
    }
    sub_2F250(a2[1], v151);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v152 = v4;
  v153 = v4;
  if (v3)
  {
    v154 = v3;
    while (1)
    {
      while (1)
      {
        v153 = (uint64_t **)v154;
        int v155 = *((_DWORD *)v154 + 8);
        if (v155 < 61) {
          break;
        }
        v154 = *v153;
        v152 = v153;
        if (!*v153) {
          goto LABEL_239;
        }
      }
      if (v155 == 60) {
        break;
      }
      v154 = v153[1];
      if (!v154)
      {
        v152 = v153 + 1;
        goto LABEL_239;
      }
    }
  }
  else
  {
LABEL_239:
    v156 = operator new(0x30uLL);
    v156[8] = 60;
    *((void *)v156 + 5) = sub_E1948;
    *(void *)v156 = 0;
    *((void *)v156 + 1) = 0;
    *((void *)v156 + 2) = v153;
    *v152 = (uint64_t *)v156;
    v157 = (uint64_t *)**a2;
    if (v157)
    {
      *a2 = v157;
      v158 = *v152;
    }
    else
    {
      v158 = (uint64_t *)v156;
    }
    sub_2F250(a2[1], v158);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v159 = v4;
  v160 = v4;
  if (v3)
  {
    while (1)
    {
      while (1)
      {
        v160 = (uint64_t **)v3;
        int v161 = *((_DWORD *)v3 + 8);
        if (v161 < 58) {
          break;
        }
        char v3 = *v160;
        v159 = v160;
        if (!*v160) {
          goto LABEL_250;
        }
      }
      if (v161 == 57) {
        break;
      }
      char v3 = v160[1];
      if (!v3)
      {
        v159 = v160 + 1;
        goto LABEL_250;
      }
    }
  }
  else
  {
LABEL_250:
    v162 = operator new(0x30uLL);
    v162[8] = 57;
    *((void *)v162 + 5) = sub_E1990;
    *(void *)v162 = 0;
    *((void *)v162 + 1) = 0;
    *((void *)v162 + 2) = v160;
    *v159 = (uint64_t *)v162;
    v163 = (uint64_t *)**a2;
    if (v163)
    {
      *a2 = v163;
      v164 = *v159;
    }
    else
    {
      v164 = (uint64_t *)v162;
    }
    sub_2F250(a2[1], v164);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v165 = *v4;
  v166 = v4;
  v167 = v4;
  if (*v4)
  {
    v168 = *v4;
    while (1)
    {
      while (1)
      {
        v167 = (uint64_t **)v168;
        int v169 = *((_DWORD *)v168 + 8);
        if (v169 < 64) {
          break;
        }
        v168 = *v167;
        v166 = v167;
        if (!*v167) {
          goto LABEL_261;
        }
      }
      if (v169 == 63) {
        break;
      }
      v168 = v167[1];
      if (!v168)
      {
        v166 = v167 + 1;
        goto LABEL_261;
      }
    }
  }
  else
  {
LABEL_261:
    v170 = operator new(0x30uLL);
    v170[8] = 63;
    *((void *)v170 + 5) = sub_E19D8;
    *(void *)v170 = 0;
    *((void *)v170 + 1) = 0;
    *((void *)v170 + 2) = v167;
    *v166 = (uint64_t *)v170;
    v171 = (uint64_t *)**a2;
    if (v171)
    {
      *a2 = v171;
      v172 = *v166;
    }
    else
    {
      v172 = (uint64_t *)v170;
    }
    sub_2F250(a2[1], v172);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v173 = v4;
  v174 = v4;
  if (v165)
  {
    v175 = v165;
    while (1)
    {
      while (1)
      {
        v174 = (uint64_t **)v175;
        int v176 = *((_DWORD *)v175 + 8);
        if (v176 < 65) {
          break;
        }
        v175 = *v174;
        v173 = v174;
        if (!*v174) {
          goto LABEL_272;
        }
      }
      if (v176 == 64) {
        break;
      }
      v175 = v174[1];
      if (!v175)
      {
        v173 = v174 + 1;
        goto LABEL_272;
      }
    }
  }
  else
  {
LABEL_272:
    v177 = operator new(0x30uLL);
    v177[8] = 64;
    *((void *)v177 + 5) = sub_E1A1C;
    *(void *)v177 = 0;
    *((void *)v177 + 1) = 0;
    *((void *)v177 + 2) = v174;
    *v173 = (uint64_t *)v177;
    v178 = (uint64_t *)**a2;
    if (v178)
    {
      *a2 = v178;
      v179 = *v173;
    }
    else
    {
      v179 = (uint64_t *)v177;
    }
    sub_2F250(a2[1], v179);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v180 = v4;
  v181 = v4;
  if (v165)
  {
    v182 = v165;
    while (1)
    {
      while (1)
      {
        v181 = (uint64_t **)v182;
        int v183 = *((_DWORD *)v182 + 8);
        if (v183 < 66) {
          break;
        }
        v182 = *v181;
        v180 = v181;
        if (!*v181) {
          goto LABEL_283;
        }
      }
      if (v183 == 65) {
        break;
      }
      v182 = v181[1];
      if (!v182)
      {
        v180 = v181 + 1;
        goto LABEL_283;
      }
    }
  }
  else
  {
LABEL_283:
    v184 = operator new(0x30uLL);
    v184[8] = 65;
    *((void *)v184 + 5) = sub_E1A7C;
    *(void *)v184 = 0;
    *((void *)v184 + 1) = 0;
    *((void *)v184 + 2) = v181;
    *v180 = (uint64_t *)v184;
    v185 = (uint64_t *)**a2;
    if (v185)
    {
      *a2 = v185;
      v186 = *v180;
    }
    else
    {
      v186 = (uint64_t *)v184;
    }
    sub_2F250(a2[1], v186);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v187 = v4;
  v188 = v4;
  if (v165)
  {
    v189 = v165;
    while (1)
    {
      while (1)
      {
        v188 = (uint64_t **)v189;
        int v190 = *((_DWORD *)v189 + 8);
        if (v190 < 62) {
          break;
        }
        v189 = *v188;
        v187 = v188;
        if (!*v188) {
          goto LABEL_294;
        }
      }
      if (v190 == 61) {
        break;
      }
      v189 = v188[1];
      if (!v189)
      {
        v187 = v188 + 1;
        goto LABEL_294;
      }
    }
  }
  else
  {
LABEL_294:
    v191 = operator new(0x30uLL);
    v191[8] = 61;
    *((void *)v191 + 5) = sub_E1AF8;
    *(void *)v191 = 0;
    *((void *)v191 + 1) = 0;
    *((void *)v191 + 2) = v188;
    *v187 = (uint64_t *)v191;
    v192 = (uint64_t *)**a2;
    if (v192)
    {
      *a2 = v192;
      v193 = *v187;
    }
    else
    {
      v193 = (uint64_t *)v191;
    }
    sub_2F250(a2[1], v193);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v194 = v4;
  v195 = v4;
  if (v165)
  {
    v196 = v165;
    while (1)
    {
      while (1)
      {
        v195 = (uint64_t **)v196;
        int v197 = *((_DWORD *)v196 + 8);
        if (v197 < 63) {
          break;
        }
        v196 = *v195;
        v194 = v195;
        if (!*v195) {
          goto LABEL_305;
        }
      }
      if (v197 == 62) {
        break;
      }
      v196 = v195[1];
      if (!v196)
      {
        v194 = v195 + 1;
        goto LABEL_305;
      }
    }
  }
  else
  {
LABEL_305:
    v198 = operator new(0x30uLL);
    v198[8] = 62;
    *((void *)v198 + 5) = sub_E1B74;
    *(void *)v198 = 0;
    *((void *)v198 + 1) = 0;
    *((void *)v198 + 2) = v195;
    *v194 = (uint64_t *)v198;
    v199 = (uint64_t *)**a2;
    if (v199)
    {
      *a2 = v199;
      v200 = *v194;
    }
    else
    {
      v200 = (uint64_t *)v198;
    }
    sub_2F250(a2[1], v200);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v201 = v4;
  v202 = v4;
  if (v165)
  {
    v203 = v165;
    while (1)
    {
      while (1)
      {
        v202 = (uint64_t **)v203;
        int v204 = *((_DWORD *)v203 + 8);
        if (v204 < 71) {
          break;
        }
        v203 = *v202;
        v201 = v202;
        if (!*v202) {
          goto LABEL_316;
        }
      }
      if (v204 == 70) {
        break;
      }
      v203 = v202[1];
      if (!v203)
      {
        v201 = v202 + 1;
        goto LABEL_316;
      }
    }
  }
  else
  {
LABEL_316:
    v205 = operator new(0x30uLL);
    v205[8] = 70;
    *((void *)v205 + 5) = sub_E1BE0;
    *(void *)v205 = 0;
    *((void *)v205 + 1) = 0;
    *((void *)v205 + 2) = v202;
    *v201 = (uint64_t *)v205;
    v206 = (uint64_t *)**a2;
    if (v206)
    {
      *a2 = v206;
      v207 = *v201;
    }
    else
    {
      v207 = (uint64_t *)v205;
    }
    sub_2F250(a2[1], v207);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v208 = v4;
  v209 = v4;
  if (v165)
  {
    v210 = v165;
    while (1)
    {
      while (1)
      {
        v209 = (uint64_t **)v210;
        int v211 = *((_DWORD *)v210 + 8);
        if (v211 < 72) {
          break;
        }
        v210 = *v209;
        v208 = v209;
        if (!*v209) {
          goto LABEL_327;
        }
      }
      if (v211 == 71) {
        break;
      }
      v210 = v209[1];
      if (!v210)
      {
        v208 = v209 + 1;
        goto LABEL_327;
      }
    }
  }
  else
  {
LABEL_327:
    v212 = operator new(0x30uLL);
    v212[8] = 71;
    *((void *)v212 + 5) = sub_E1C3C;
    *(void *)v212 = 0;
    *((void *)v212 + 1) = 0;
    *((void *)v212 + 2) = v209;
    *v208 = (uint64_t *)v212;
    v213 = (uint64_t *)**a2;
    if (v213)
    {
      *a2 = v213;
      v214 = *v208;
    }
    else
    {
      v214 = (uint64_t *)v212;
    }
    sub_2F250(a2[1], v214);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v215 = v4;
  v216 = v4;
  if (v165)
  {
    v217 = v165;
    while (1)
    {
      while (1)
      {
        v216 = (uint64_t **)v217;
        int v218 = *((_DWORD *)v217 + 8);
        if (v218 < 73) {
          break;
        }
        v217 = *v216;
        v215 = v216;
        if (!*v216) {
          goto LABEL_338;
        }
      }
      if (v218 == 72) {
        break;
      }
      v217 = v216[1];
      if (!v217)
      {
        v215 = v216 + 1;
        goto LABEL_338;
      }
    }
  }
  else
  {
LABEL_338:
    v219 = operator new(0x30uLL);
    v219[8] = 72;
    *((void *)v219 + 5) = sub_E1C98;
    *(void *)v219 = 0;
    *((void *)v219 + 1) = 0;
    *((void *)v219 + 2) = v216;
    *v215 = (uint64_t *)v219;
    v220 = (uint64_t *)**a2;
    if (v220)
    {
      *a2 = v220;
      v221 = *v215;
    }
    else
    {
      v221 = (uint64_t *)v219;
    }
    sub_2F250(a2[1], v221);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v222 = v4;
  v223 = v4;
  if (v165)
  {
    v224 = v165;
    while (1)
    {
      while (1)
      {
        v223 = (uint64_t **)v224;
        int v225 = *((_DWORD *)v224 + 8);
        if (v225 < 74) {
          break;
        }
        v224 = *v223;
        v222 = v223;
        if (!*v223) {
          goto LABEL_349;
        }
      }
      if (v225 == 73) {
        break;
      }
      v224 = v223[1];
      if (!v224)
      {
        v222 = v223 + 1;
        goto LABEL_349;
      }
    }
  }
  else
  {
LABEL_349:
    v226 = operator new(0x30uLL);
    v226[8] = 73;
    *((void *)v226 + 5) = sub_E1CF4;
    *(void *)v226 = 0;
    *((void *)v226 + 1) = 0;
    *((void *)v226 + 2) = v223;
    *v222 = (uint64_t *)v226;
    v227 = (uint64_t *)**a2;
    if (v227)
    {
      *a2 = v227;
      v228 = *v222;
    }
    else
    {
      v228 = (uint64_t *)v226;
    }
    sub_2F250(a2[1], v228);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v229 = v4;
  v230 = v4;
  if (v165)
  {
    v231 = v165;
    while (1)
    {
      while (1)
      {
        v230 = (uint64_t **)v231;
        int v232 = *((_DWORD *)v231 + 8);
        if (v232 < 76) {
          break;
        }
        v231 = *v230;
        v229 = v230;
        if (!*v230) {
          goto LABEL_360;
        }
      }
      if (v232 == 75) {
        break;
      }
      v231 = v230[1];
      if (!v231)
      {
        v229 = v230 + 1;
        goto LABEL_360;
      }
    }
  }
  else
  {
LABEL_360:
    v233 = operator new(0x30uLL);
    v233[8] = 75;
    *((void *)v233 + 5) = sub_E1D54;
    *(void *)v233 = 0;
    *((void *)v233 + 1) = 0;
    *((void *)v233 + 2) = v230;
    *v229 = (uint64_t *)v233;
    v234 = (uint64_t *)**a2;
    if (v234)
    {
      *a2 = v234;
      v235 = *v229;
    }
    else
    {
      v235 = (uint64_t *)v233;
    }
    sub_2F250(a2[1], v235);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v236 = v4;
  v237 = v4;
  if (v165)
  {
    v238 = v165;
    while (1)
    {
      while (1)
      {
        v237 = (uint64_t **)v238;
        int v239 = *((_DWORD *)v238 + 8);
        if (v239 < 70) {
          break;
        }
        v238 = *v237;
        v236 = v237;
        if (!*v237) {
          goto LABEL_371;
        }
      }
      if (v239 == 69) {
        break;
      }
      v238 = v237[1];
      if (!v238)
      {
        v236 = v237 + 1;
        goto LABEL_371;
      }
    }
  }
  else
  {
LABEL_371:
    v240 = operator new(0x30uLL);
    v240[8] = 69;
    *((void *)v240 + 5) = sub_E1DC0;
    *(void *)v240 = 0;
    *((void *)v240 + 1) = 0;
    *((void *)v240 + 2) = v237;
    *v236 = (uint64_t *)v240;
    v241 = (uint64_t *)**a2;
    if (v241)
    {
      *a2 = v241;
      v242 = *v236;
    }
    else
    {
      v242 = (uint64_t *)v240;
    }
    sub_2F250(a2[1], v242);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v243 = v4;
  v244 = v4;
  if (v165)
  {
    v245 = v165;
    while (1)
    {
      while (1)
      {
        v244 = (uint64_t **)v245;
        int v246 = *((_DWORD *)v245 + 8);
        if (v246 < 77) {
          break;
        }
        v245 = *v244;
        v243 = v244;
        if (!*v244) {
          goto LABEL_382;
        }
      }
      if (v246 == 76) {
        break;
      }
      v245 = v244[1];
      if (!v245)
      {
        v243 = v244 + 1;
        goto LABEL_382;
      }
    }
  }
  else
  {
LABEL_382:
    v247 = operator new(0x30uLL);
    v247[8] = 76;
    *((void *)v247 + 5) = sub_E1E1C;
    *(void *)v247 = 0;
    *((void *)v247 + 1) = 0;
    *((void *)v247 + 2) = v244;
    *v243 = (uint64_t *)v247;
    v248 = (uint64_t *)**a2;
    if (v248)
    {
      *a2 = v248;
      v249 = *v243;
    }
    else
    {
      v249 = (uint64_t *)v247;
    }
    sub_2F250(a2[1], v249);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v250 = v4;
  v251 = v4;
  if (v165)
  {
    v252 = v165;
    while (1)
    {
      while (1)
      {
        v251 = (uint64_t **)v252;
        int v253 = *((_DWORD *)v252 + 8);
        if (v253 < 78) {
          break;
        }
        v252 = *v251;
        v250 = v251;
        if (!*v251) {
          goto LABEL_393;
        }
      }
      if (v253 == 77) {
        break;
      }
      v252 = v251[1];
      if (!v252)
      {
        v250 = v251 + 1;
        goto LABEL_393;
      }
    }
  }
  else
  {
LABEL_393:
    v254 = operator new(0x30uLL);
    v254[8] = 77;
    *((void *)v254 + 5) = sub_E1E60;
    *(void *)v254 = 0;
    *((void *)v254 + 1) = 0;
    *((void *)v254 + 2) = v251;
    *v250 = (uint64_t *)v254;
    v255 = (uint64_t *)**a2;
    if (v255)
    {
      *a2 = v255;
      v256 = *v250;
    }
    else
    {
      v256 = (uint64_t *)v254;
    }
    sub_2F250(a2[1], v256);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v257 = v4;
  v258 = v4;
  if (v165)
  {
    v259 = v165;
    while (1)
    {
      while (1)
      {
        v258 = (uint64_t **)v259;
        int v260 = *((_DWORD *)v259 + 8);
        if (v260 < 79) {
          break;
        }
        v259 = *v258;
        v257 = v258;
        if (!*v258) {
          goto LABEL_404;
        }
      }
      if (v260 == 78) {
        break;
      }
      v259 = v258[1];
      if (!v259)
      {
        v257 = v258 + 1;
        goto LABEL_404;
      }
    }
  }
  else
  {
LABEL_404:
    v261 = operator new(0x30uLL);
    v261[8] = 78;
    *((void *)v261 + 5) = sub_E1EF4;
    *(void *)v261 = 0;
    *((void *)v261 + 1) = 0;
    *((void *)v261 + 2) = v258;
    *v257 = (uint64_t *)v261;
    v262 = (uint64_t *)**a2;
    if (v262)
    {
      *a2 = v262;
      v263 = *v257;
    }
    else
    {
      v263 = (uint64_t *)v261;
    }
    sub_2F250(a2[1], v263);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v264 = v4;
  v265 = v4;
  if (v165)
  {
    v266 = v165;
    while (1)
    {
      while (1)
      {
        v265 = (uint64_t **)v266;
        int v267 = *((_DWORD *)v266 + 8);
        if (v267 < 80) {
          break;
        }
        v266 = *v265;
        v264 = v265;
        if (!*v265) {
          goto LABEL_415;
        }
      }
      if (v267 == 79) {
        break;
      }
      v266 = v265[1];
      if (!v266)
      {
        v264 = v265 + 1;
        goto LABEL_415;
      }
    }
  }
  else
  {
LABEL_415:
    v268 = operator new(0x30uLL);
    v268[8] = 79;
    *((void *)v268 + 5) = sub_E1F94;
    *(void *)v268 = 0;
    *((void *)v268 + 1) = 0;
    *((void *)v268 + 2) = v265;
    *v264 = (uint64_t *)v268;
    v269 = (uint64_t *)**a2;
    if (v269)
    {
      *a2 = v269;
      v270 = *v264;
    }
    else
    {
      v270 = (uint64_t *)v268;
    }
    sub_2F250(a2[1], v270);
    v165 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  v271 = v4;
  if (v165)
  {
    while (1)
    {
      while (1)
      {
        v271 = (uint64_t **)v165;
        int v272 = *((_DWORD *)v165 + 8);
        if (v272 < 81) {
          break;
        }
        v165 = *v271;
        uint64_t v4 = v271;
        if (!*v271) {
          goto LABEL_426;
        }
      }
      if (v272 == 80) {
        break;
      }
      v165 = v271[1];
      if (!v165)
      {
        uint64_t v4 = v271 + 1;
        goto LABEL_426;
      }
    }
  }
  else
  {
LABEL_426:
    v273 = operator new(0x30uLL);
    v273[8] = 80;
    *((void *)v273 + 5) = sub_E1FEC;
    *(void *)v273 = 0;
    *((void *)v273 + 1) = 0;
    *((void *)v273 + 2) = v271;
    *uint64_t v4 = (uint64_t *)v273;
    v274 = (uint64_t *)**a2;
    if (v274)
    {
      *a2 = v274;
      v275 = *v4;
    }
    else
    {
      v275 = (uint64_t *)v273;
    }
    sub_2F250(a2[1], v275);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
}

void sub_224864(uint64_t a1, uint64_t **a2)
{
  uint64_t v4 = a2 + 1;
  char v3 = a2[1];
  BOOL v5 = a2 + 1;
  uint64_t v6 = a2 + 1;
  if (v3)
  {
    uint64_t v7 = a2[1];
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (uint64_t **)v7;
        int v8 = *((_DWORD *)v7 + 8);
        if (v8 < 3) {
          break;
        }
        uint64_t v7 = *v6;
        BOOL v5 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      if (v8 == 2) {
        break;
      }
      uint64_t v7 = v6[1];
      if (!v7)
      {
        BOOL v5 = v6 + 1;
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    unint64_t v9 = operator new(0x30uLL);
    v9[8] = 2;
    *((void *)v9 + 5) = sub_11CE00;
    *(void *)unint64_t v9 = 0;
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = v6;
    *BOOL v5 = (uint64_t *)v9;
    uint64_t v10 = (uint64_t *)**a2;
    if (v10)
    {
      *a2 = v10;
      uint64_t v11 = *v5;
    }
    else
    {
      uint64_t v11 = (uint64_t *)v9;
    }
    sub_2F250(a2[1], v11);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v12 = v4;
  uint64_t v13 = v4;
  if (v3)
  {
    uint64_t v14 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v13 = (uint64_t **)v14;
        int v15 = *((_DWORD *)v14 + 8);
        if (v15 < 4) {
          break;
        }
        uint64_t v14 = *v13;
        uint64_t v12 = v13;
        if (!*v13) {
          goto LABEL_19;
        }
      }
      if (v15 == 3) {
        break;
      }
      uint64_t v14 = v13[1];
      if (!v14)
      {
        uint64_t v12 = v13 + 1;
        goto LABEL_19;
      }
    }
  }
  else
  {
LABEL_19:
    uint64_t v16 = operator new(0x30uLL);
    v16[8] = 3;
    *((void *)v16 + 5) = sub_11D220;
    *(void *)uint64_t v16 = 0;
    *((void *)v16 + 1) = 0;
    *((void *)v16 + 2) = v13;
    void *v12 = (uint64_t *)v16;
    uint64_t v17 = (uint64_t *)**a2;
    if (v17)
    {
      *a2 = v17;
      uint64_t v18 = *v12;
    }
    else
    {
      uint64_t v18 = (uint64_t *)v16;
    }
    sub_2F250(a2[1], v18);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  unint64_t v19 = v4;
  uint64_t v20 = v4;
  if (v3)
  {
    long long v21 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v20 = (uint64_t **)v21;
        int v22 = *((_DWORD *)v21 + 8);
        if (v22 < 5) {
          break;
        }
        long long v21 = *v20;
        unint64_t v19 = v20;
        if (!*v20) {
          goto LABEL_30;
        }
      }
      if (v22 == 4) {
        break;
      }
      long long v21 = v20[1];
      if (!v21)
      {
        unint64_t v19 = v20 + 1;
        goto LABEL_30;
      }
    }
  }
  else
  {
LABEL_30:
    uint64_t v23 = operator new(0x30uLL);
    v23[8] = 4;
    *((void *)v23 + 5) = sub_11D640;
    *(void *)uint64_t v23 = 0;
    *((void *)v23 + 1) = 0;
    *((void *)v23 + 2) = v20;
    *unint64_t v19 = (uint64_t *)v23;
    uint64_t v24 = (uint64_t *)**a2;
    if (v24)
    {
      *a2 = v24;
      unint64_t v25 = *v19;
    }
    else
    {
      unint64_t v25 = (uint64_t *)v23;
    }
    sub_2F250(a2[1], v25);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v26 = v4;
  uint64_t v27 = v4;
  if (v3)
  {
    uint64_t v28 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v27 = (uint64_t **)v28;
        int v29 = *((_DWORD *)v28 + 8);
        if (v29 < 6) {
          break;
        }
        uint64_t v28 = *v27;
        uint64_t v26 = v27;
        if (!*v27) {
          goto LABEL_41;
        }
      }
      if (v29 == 5) {
        break;
      }
      uint64_t v28 = v27[1];
      if (!v28)
      {
        uint64_t v26 = v27 + 1;
        goto LABEL_41;
      }
    }
  }
  else
  {
LABEL_41:
    uint64_t v30 = operator new(0x30uLL);
    v30[8] = 5;
    *((void *)v30 + 5) = sub_11DA60;
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    *((void *)v30 + 2) = v27;
    *uint64_t v26 = (uint64_t *)v30;
    uint64_t v31 = (uint64_t *)**a2;
    if (v31)
    {
      *a2 = v31;
      uint64_t v32 = *v26;
    }
    else
    {
      uint64_t v32 = (uint64_t *)v30;
    }
    sub_2F250(a2[1], v32);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v33 = v4;
  uint64_t v34 = v4;
  if (v3)
  {
    uint64_t v35 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v34 = (uint64_t **)v35;
        int v36 = *((_DWORD *)v35 + 8);
        if (v36 < 7) {
          break;
        }
        uint64_t v35 = *v34;
        uint64_t v33 = v34;
        if (!*v34) {
          goto LABEL_52;
        }
      }
      if (v36 == 6) {
        break;
      }
      uint64_t v35 = v34[1];
      if (!v35)
      {
        uint64_t v33 = v34 + 1;
        goto LABEL_52;
      }
    }
  }
  else
  {
LABEL_52:
    BOOL v37 = operator new(0x30uLL);
    v37[8] = 6;
    *((void *)v37 + 5) = sub_11DE84;
    *(void *)BOOL v37 = 0;
    *((void *)v37 + 1) = 0;
    *((void *)v37 + 2) = v34;
    void *v33 = (uint64_t *)v37;
    uint64_t v38 = (uint64_t *)**a2;
    if (v38)
    {
      *a2 = v38;
      unint64_t v39 = *v33;
    }
    else
    {
      unint64_t v39 = (uint64_t *)v37;
    }
    sub_2F250(a2[1], v39);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  char v40 = v4;
  long long v41 = v4;
  if (v3)
  {
    long long v42 = v3;
    while (1)
    {
      while (1)
      {
        long long v41 = (uint64_t **)v42;
        int v43 = *((_DWORD *)v42 + 8);
        if (v43 < 8) {
          break;
        }
        long long v42 = *v41;
        char v40 = v41;
        if (!*v41) {
          goto LABEL_63;
        }
      }
      if (v43 == 7) {
        break;
      }
      long long v42 = v41[1];
      if (!v42)
      {
        char v40 = v41 + 1;
        goto LABEL_63;
      }
    }
  }
  else
  {
LABEL_63:
    uint64_t v44 = operator new(0x30uLL);
    v44[8] = 7;
    *((void *)v44 + 5) = sub_15C730;
    *(void *)uint64_t v44 = 0;
    *((void *)v44 + 1) = 0;
    *((void *)v44 + 2) = v41;
    char *v40 = (uint64_t *)v44;
    unint64_t v45 = (uint64_t *)**a2;
    if (v45)
    {
      *a2 = v45;
      uint64_t v46 = *v40;
    }
    else
    {
      uint64_t v46 = (uint64_t *)v44;
    }
    sub_2F250(a2[1], v46);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::value_type v47 = v4;
  long long v48 = v4;
  if (v3)
  {
    unint64_t v49 = v3;
    while (1)
    {
      while (1)
      {
        long long v48 = (uint64_t **)v49;
        int v50 = *((_DWORD *)v49 + 8);
        if (v50 < 15) {
          break;
        }
        unint64_t v49 = *v48;
        std::string::value_type v47 = v48;
        if (!*v48) {
          goto LABEL_74;
        }
      }
      if (v50 == 14) {
        break;
      }
      unint64_t v49 = v48[1];
      if (!v49)
      {
        std::string::value_type v47 = v48 + 1;
        goto LABEL_74;
      }
    }
  }
  else
  {
LABEL_74:
    uint64_t v51 = operator new(0x30uLL);
    v51[8] = 14;
    *((void *)v51 + 5) = sub_12C440;
    *(void *)uint64_t v51 = 0;
    *((void *)v51 + 1) = 0;
    *((void *)v51 + 2) = v48;
    *std::string::value_type v47 = (uint64_t *)v51;
    uint64_t v52 = (uint64_t *)**a2;
    if (v52)
    {
      *a2 = v52;
      unint64_t v53 = *v47;
    }
    else
    {
      unint64_t v53 = (uint64_t *)v51;
    }
    sub_2F250(a2[1], v53);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v54 = v4;
  unint64_t v55 = v4;
  if (v3)
  {
    long long v56 = v3;
    while (1)
    {
      while (1)
      {
        unint64_t v55 = (uint64_t **)v56;
        int v57 = *((_DWORD *)v56 + 8);
        if (v57 < 16) {
          break;
        }
        long long v56 = *v55;
        uint64_t v54 = v55;
        if (!*v55) {
          goto LABEL_85;
        }
      }
      if (v57 == 15) {
        break;
      }
      long long v56 = v55[1];
      if (!v56)
      {
        uint64_t v54 = v55 + 1;
        goto LABEL_85;
      }
    }
  }
  else
  {
LABEL_85:
    long long v58 = operator new(0x30uLL);
    v58[8] = 15;
    *((void *)v58 + 5) = sub_12D664;
    *(void *)long long v58 = 0;
    *((void *)v58 + 1) = 0;
    *((void *)v58 + 2) = v55;
    std::string *v54 = (uint64_t *)v58;
    v59 = (uint64_t *)**a2;
    if (v59)
    {
      *a2 = v59;
      unint64_t v60 = *v54;
    }
    else
    {
      unint64_t v60 = (uint64_t *)v58;
    }
    sub_2F250(a2[1], v60);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v61 = v4;
  std::string::size_type v62 = v4;
  if (v3)
  {
    uint64_t v63 = v3;
    while (1)
    {
      while (1)
      {
        std::string::size_type v62 = (uint64_t **)v63;
        int v64 = *((_DWORD *)v63 + 8);
        if (v64 < 22) {
          break;
        }
        uint64_t v63 = *v62;
        uint64_t v61 = v62;
        if (!*v62) {
          goto LABEL_96;
        }
      }
      if (v64 == 21) {
        break;
      }
      uint64_t v63 = v62[1];
      if (!v63)
      {
        uint64_t v61 = v62 + 1;
        goto LABEL_96;
      }
    }
  }
  else
  {
LABEL_96:
    long long v65 = operator new(0x30uLL);
    v65[8] = 21;
    *((void *)v65 + 5) = sub_12E888;
    *(void *)long long v65 = 0;
    *((void *)v65 + 1) = 0;
    *((void *)v65 + 2) = v62;
    const std::string::value_type *v61 = (uint64_t *)v65;
    uint64_t v66 = (uint64_t *)**a2;
    if (v66)
    {
      *a2 = v66;
      int v67 = *v61;
    }
    else
    {
      int v67 = (uint64_t *)v65;
    }
    sub_2F250(a2[1], v67);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v68 = v4;
  std::string::value_type v69 = v4;
  if (v3)
  {
    BOOL v70 = v3;
    while (1)
    {
      while (1)
      {
        std::string::value_type v69 = (uint64_t **)v70;
        int v71 = *((_DWORD *)v70 + 8);
        if (v71 < 21) {
          break;
        }
        BOOL v70 = *v69;
        uint64_t v68 = v69;
        if (!*v69) {
          goto LABEL_107;
        }
      }
      if (v71 == 20) {
        break;
      }
      BOOL v70 = v69[1];
      if (!v70)
      {
        uint64_t v68 = v69 + 1;
        goto LABEL_107;
      }
    }
  }
  else
  {
LABEL_107:
    uint64_t v72 = operator new(0x30uLL);
    v72[8] = 20;
    *((void *)v72 + 5) = sub_12FAAC;
    *(void *)uint64_t v72 = 0;
    *((void *)v72 + 1) = 0;
    *((void *)v72 + 2) = v69;
    *uint64_t v68 = (uint64_t *)v72;
    uint64_t v73 = (uint64_t *)**a2;
    if (v73)
    {
      *a2 = v73;
      uint64_t v74 = *v68;
    }
    else
    {
      uint64_t v74 = (uint64_t *)v72;
    }
    sub_2F250(a2[1], v74);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v75 = v4;
  uint64_t v76 = v4;
  if (v3)
  {
    uint64_t v77 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v76 = (uint64_t **)v77;
        int v78 = *((_DWORD *)v77 + 8);
        if (v78 < 17) {
          break;
        }
        uint64_t v77 = *v76;
        uint64_t v75 = v76;
        if (!*v76) {
          goto LABEL_118;
        }
      }
      if (v78 == 16) {
        break;
      }
      uint64_t v77 = v76[1];
      if (!v77)
      {
        uint64_t v75 = v76 + 1;
        goto LABEL_118;
      }
    }
  }
  else
  {
LABEL_118:
    unint64_t v79 = operator new(0x30uLL);
    v79[8] = 16;
    *((void *)v79 + 5) = sub_130CD0;
    *(void *)unint64_t v79 = 0;
    *((void *)v79 + 1) = 0;
    *((void *)v79 + 2) = v76;
    *uint64_t v75 = (uint64_t *)v79;
    uint64_t v80 = (uint64_t *)**a2;
    if (v80)
    {
      *a2 = v80;
      unint64_t v81 = *v75;
    }
    else
    {
      unint64_t v81 = (uint64_t *)v79;
    }
    sub_2F250(a2[1], v81);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v82 = v4;
  uint64_t v83 = v4;
  if (v3)
  {
    unint64_t v84 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v83 = (uint64_t **)v84;
        int v85 = *((_DWORD *)v84 + 8);
        if (v85 < 19) {
          break;
        }
        unint64_t v84 = *v83;
        uint64_t v82 = v83;
        if (!*v83) {
          goto LABEL_129;
        }
      }
      if (v85 == 18) {
        break;
      }
      unint64_t v84 = v83[1];
      if (!v84)
      {
        uint64_t v82 = v83 + 1;
        goto LABEL_129;
      }
    }
  }
  else
  {
LABEL_129:
    unint64_t v86 = operator new(0x30uLL);
    v86[8] = 18;
    *((void *)v86 + 5) = sub_131EF4;
    *(void *)unint64_t v86 = 0;
    *((void *)v86 + 1) = 0;
    *((void *)v86 + 2) = v83;
    *uint64_t v82 = (uint64_t *)v86;
    long long v87 = (uint64_t *)**a2;
    if (v87)
    {
      *a2 = v87;
      long long v88 = *v82;
    }
    else
    {
      long long v88 = (uint64_t *)v86;
    }
    sub_2F250(a2[1], v88);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v89 = v4;
  int64_t v90 = v4;
  if (v3)
  {
    uint64_t v91 = v3;
    while (1)
    {
      while (1)
      {
        int64_t v90 = (uint64_t **)v91;
        int v92 = *((_DWORD *)v91 + 8);
        if (v92 < 23) {
          break;
        }
        uint64_t v91 = *v90;
        uint64_t v89 = v90;
        if (!*v90) {
          goto LABEL_140;
        }
      }
      if (v92 == 22) {
        break;
      }
      uint64_t v91 = v90[1];
      if (!v91)
      {
        uint64_t v89 = v90 + 1;
        goto LABEL_140;
      }
    }
  }
  else
  {
LABEL_140:
    uint64_t v93 = operator new(0x30uLL);
    v93[8] = 22;
    *((void *)v93 + 5) = sub_134B24;
    *(void *)uint64_t v93 = 0;
    *((void *)v93 + 1) = 0;
    *((void *)v93 + 2) = v90;
    *uint64_t v89 = (uint64_t *)v93;
    unint64_t v94 = (uint64_t *)**a2;
    if (v94)
    {
      *a2 = v94;
      long long v95 = *v89;
    }
    else
    {
      long long v95 = (uint64_t *)v93;
    }
    sub_2F250(a2[1], v95);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v96 = v4;
  uint64_t v97 = v4;
  if (v3)
  {
    uint64_t v98 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v97 = (uint64_t **)v98;
        int v99 = *((_DWORD *)v98 + 8);
        if (v99 < 24) {
          break;
        }
        uint64_t v98 = *v97;
        uint64_t v96 = v97;
        if (!*v97) {
          goto LABEL_151;
        }
      }
      if (v99 == 23) {
        break;
      }
      uint64_t v98 = v97[1];
      if (!v98)
      {
        uint64_t v96 = v97 + 1;
        goto LABEL_151;
      }
    }
  }
  else
  {
LABEL_151:
    unint64_t v100 = operator new(0x30uLL);
    v100[8] = 23;
    *((void *)v100 + 5) = sub_135DC8;
    *(void *)unint64_t v100 = 0;
    *((void *)v100 + 1) = 0;
    *((void *)v100 + 2) = v97;
    *uint64_t v96 = (uint64_t *)v100;
    uint64_t v101 = (uint64_t *)**a2;
    if (v101)
    {
      *a2 = v101;
      uint64_t v102 = *v96;
    }
    else
    {
      uint64_t v102 = (uint64_t *)v100;
    }
    sub_2F250(a2[1], v102);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string v103 = v4;
  uint64_t v104 = v4;
  if (v3)
  {
    long long v105 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v104 = (uint64_t **)v105;
        int v106 = *((_DWORD *)v105 + 8);
        if (v106 < 25) {
          break;
        }
        long long v105 = *v104;
        std::string v103 = v104;
        if (!*v104) {
          goto LABEL_162;
        }
      }
      if (v106 == 24) {
        break;
      }
      long long v105 = v104[1];
      if (!v105)
      {
        std::string v103 = v104 + 1;
        goto LABEL_162;
      }
    }
  }
  else
  {
LABEL_162:
    unint64_t v107 = operator new(0x30uLL);
    v107[8] = 24;
    *((void *)v107 + 5) = sub_13706C;
    *(void *)unint64_t v107 = 0;
    *((void *)v107 + 1) = 0;
    *((void *)v107 + 2) = v104;
    *std::string v103 = (uint64_t *)v107;
    uint64_t v108 = (uint64_t *)**a2;
    if (v108)
    {
      *a2 = v108;
      unsigned __int8 v109 = *v103;
    }
    else
    {
      unsigned __int8 v109 = (uint64_t *)v107;
    }
    sub_2F250(a2[1], v109);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  long long v110 = v4;
  uint64_t v111 = v4;
  if (v3)
  {
    long long v112 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v111 = (uint64_t **)v112;
        int v113 = *((_DWORD *)v112 + 8);
        if (v113 < 26) {
          break;
        }
        long long v112 = *v111;
        long long v110 = v111;
        if (!*v111) {
          goto LABEL_173;
        }
      }
      if (v113 == 25) {
        break;
      }
      long long v112 = v111[1];
      if (!v112)
      {
        long long v110 = v111 + 1;
        goto LABEL_173;
      }
    }
  }
  else
  {
LABEL_173:
    std::string v114 = operator new(0x30uLL);
    v114[8] = 25;
    *((void *)v114 + 5) = sub_138310;
    *(void *)std::string v114 = 0;
    *((void *)v114 + 1) = 0;
    *((void *)v114 + 2) = v111;
    *long long v110 = (uint64_t *)v114;
    unint64_t v115 = (uint64_t *)**a2;
    if (v115)
    {
      *a2 = v115;
      uint64_t v116 = *v110;
    }
    else
    {
      uint64_t v116 = (uint64_t *)v114;
    }
    sub_2F250(a2[1], v116);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v117 = v4;
  uint64_t v118 = v4;
  if (v3)
  {
    unint64_t v119 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v118 = (uint64_t **)v119;
        int v120 = *((_DWORD *)v119 + 8);
        if (v120 < 27) {
          break;
        }
        unint64_t v119 = *v118;
        uint64_t v117 = v118;
        if (!*v118) {
          goto LABEL_184;
        }
      }
      if (v120 == 26) {
        break;
      }
      unint64_t v119 = v118[1];
      if (!v119)
      {
        uint64_t v117 = v118 + 1;
        goto LABEL_184;
      }
    }
  }
  else
  {
LABEL_184:
    unint64_t v121 = operator new(0x30uLL);
    v121[8] = 26;
    *((void *)v121 + 5) = sub_1397A4;
    *(void *)unint64_t v121 = 0;
    *((void *)v121 + 1) = 0;
    *((void *)v121 + 2) = v118;
    *uint64_t v117 = (uint64_t *)v121;
    int v122 = (uint64_t *)**a2;
    if (v122)
    {
      *a2 = v122;
      std::string v123 = *v117;
    }
    else
    {
      std::string v123 = (uint64_t *)v121;
    }
    sub_2F250(a2[1], v123);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v124 = v4;
  if (v3)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v124 = (uint64_t **)v3;
        int v125 = *((_DWORD *)v3 + 8);
        if (v125 < 28) {
          break;
        }
        char v3 = *v124;
        uint64_t v4 = v124;
        if (!*v124) {
          goto LABEL_195;
        }
      }
      if (v125 == 27) {
        break;
      }
      char v3 = v124[1];
      if (!v3)
      {
        uint64_t v4 = v124 + 1;
        goto LABEL_195;
      }
    }
  }
  else
  {
LABEL_195:
    long long v126 = operator new(0x30uLL);
    v126[8] = 27;
    *((void *)v126 + 5) = sub_13AC48;
    *(void *)long long v126 = 0;
    *((void *)v126 + 1) = 0;
    *((void *)v126 + 2) = v124;
    *uint64_t v4 = (uint64_t *)v126;
    int v127 = (uint64_t *)**a2;
    if (v127)
    {
      *a2 = v127;
      uint64_t v128 = *v4;
    }
    else
    {
      uint64_t v128 = (uint64_t *)v126;
    }
    sub_2F250(a2[1], v128);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
}

void sub_2253CC(uint64_t a1, uint64_t **a2)
{
  uint64_t v4 = a2 + 1;
  char v3 = a2[1];
  BOOL v5 = a2 + 1;
  uint64_t v6 = a2 + 1;
  if (v3)
  {
    uint64_t v7 = a2[1];
    while (1)
    {
      while (1)
      {
        uint64_t v6 = (uint64_t **)v7;
        unint64_t v8 = v7[4];
        if (v8 <= (unint64_t)sub_11CE00) {
          break;
        }
        uint64_t v7 = *v6;
        BOOL v5 = v6;
        if (!*v6) {
          goto LABEL_8;
        }
      }
      if (v8 >= (unint64_t)sub_11CE00) {
        break;
      }
      uint64_t v7 = v6[1];
      if (!v7)
      {
        BOOL v5 = v6 + 1;
        goto LABEL_8;
      }
    }
  }
  else
  {
LABEL_8:
    unint64_t v9 = operator new(0x30uLL);
    v9[4] = sub_11CE00;
    *((_DWORD *)v9 + 10) = 2;
    *unint64_t v9 = 0;
    v9[1] = 0;
    v9[2] = v6;
    *BOOL v5 = v9;
    uint64_t v10 = (uint64_t *)**a2;
    if (v10)
    {
      *a2 = v10;
      uint64_t v11 = *v5;
    }
    else
    {
      uint64_t v11 = v9;
    }
    sub_2F250(a2[1], v11);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v12 = v4;
  uint64_t v13 = v4;
  if (v3)
  {
    uint64_t v14 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v13 = (uint64_t **)v14;
        unint64_t v15 = v14[4];
        if (v15 <= (unint64_t)sub_11D220) {
          break;
        }
        uint64_t v14 = *v13;
        uint64_t v12 = v13;
        if (!*v13) {
          goto LABEL_19;
        }
      }
      if (v15 >= (unint64_t)sub_11D220) {
        break;
      }
      uint64_t v14 = v13[1];
      if (!v14)
      {
        uint64_t v12 = v13 + 1;
        goto LABEL_19;
      }
    }
  }
  else
  {
LABEL_19:
    uint64_t v16 = operator new(0x30uLL);
    v16[4] = sub_11D220;
    *((_DWORD *)v16 + 10) = 3;
    void *v16 = 0;
    v16[1] = 0;
    v16[2] = v13;
    void *v12 = v16;
    uint64_t v17 = (uint64_t *)**a2;
    if (v17)
    {
      *a2 = v17;
      uint64_t v18 = *v12;
    }
    else
    {
      uint64_t v18 = v16;
    }
    sub_2F250(a2[1], v18);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  unint64_t v19 = v4;
  uint64_t v20 = v4;
  if (v3)
  {
    long long v21 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v20 = (uint64_t **)v21;
        unint64_t v22 = v21[4];
        if (v22 <= (unint64_t)sub_11D640) {
          break;
        }
        long long v21 = *v20;
        unint64_t v19 = v20;
        if (!*v20) {
          goto LABEL_30;
        }
      }
      if (v22 >= (unint64_t)sub_11D640) {
        break;
      }
      long long v21 = v20[1];
      if (!v21)
      {
        unint64_t v19 = v20 + 1;
        goto LABEL_30;
      }
    }
  }
  else
  {
LABEL_30:
    uint64_t v23 = operator new(0x30uLL);
    v23[4] = sub_11D640;
    *((_DWORD *)v23 + 10) = 4;
    *uint64_t v23 = 0;
    v23[1] = 0;
    v23[2] = v20;
    *unint64_t v19 = v23;
    uint64_t v24 = (uint64_t *)**a2;
    if (v24)
    {
      *a2 = v24;
      unint64_t v25 = *v19;
    }
    else
    {
      unint64_t v25 = v23;
    }
    sub_2F250(a2[1], v25);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v26 = v4;
  uint64_t v27 = v4;
  if (v3)
  {
    uint64_t v28 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v27 = (uint64_t **)v28;
        unint64_t v29 = v28[4];
        if (v29 <= (unint64_t)sub_11DA60) {
          break;
        }
        uint64_t v28 = *v27;
        uint64_t v26 = v27;
        if (!*v27) {
          goto LABEL_41;
        }
      }
      if (v29 >= (unint64_t)sub_11DA60) {
        break;
      }
      uint64_t v28 = v27[1];
      if (!v28)
      {
        uint64_t v26 = v27 + 1;
        goto LABEL_41;
      }
    }
  }
  else
  {
LABEL_41:
    uint64_t v30 = operator new(0x30uLL);
    v30[4] = sub_11DA60;
    *((_DWORD *)v30 + 10) = 5;
    void *v30 = 0;
    v30[1] = 0;
    v30[2] = v27;
    *uint64_t v26 = v30;
    uint64_t v31 = (uint64_t *)**a2;
    if (v31)
    {
      *a2 = v31;
      uint64_t v32 = *v26;
    }
    else
    {
      uint64_t v32 = v30;
    }
    sub_2F250(a2[1], v32);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v33 = v4;
  uint64_t v34 = v4;
  if (v3)
  {
    uint64_t v35 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v34 = (uint64_t **)v35;
        unint64_t v36 = v35[4];
        if (v36 <= (unint64_t)sub_11DE84) {
          break;
        }
        uint64_t v35 = *v34;
        uint64_t v33 = v34;
        if (!*v34) {
          goto LABEL_52;
        }
      }
      if (v36 >= (unint64_t)sub_11DE84) {
        break;
      }
      uint64_t v35 = v34[1];
      if (!v35)
      {
        uint64_t v33 = v34 + 1;
        goto LABEL_52;
      }
    }
  }
  else
  {
LABEL_52:
    BOOL v37 = operator new(0x30uLL);
    v37[4] = sub_11DE84;
    *((_DWORD *)v37 + 10) = 6;
    void *v37 = 0;
    v37[1] = 0;
    v37[2] = v34;
    void *v33 = v37;
    uint64_t v38 = (uint64_t *)**a2;
    if (v38)
    {
      *a2 = v38;
      unint64_t v39 = *v33;
    }
    else
    {
      unint64_t v39 = v37;
    }
    sub_2F250(a2[1], v39);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  char v40 = v4;
  long long v41 = v4;
  if (v3)
  {
    long long v42 = v3;
    while (1)
    {
      while (1)
      {
        long long v41 = (uint64_t **)v42;
        unint64_t v43 = v42[4];
        if (v43 <= (unint64_t)sub_15C730) {
          break;
        }
        long long v42 = *v41;
        char v40 = v41;
        if (!*v41) {
          goto LABEL_63;
        }
      }
      if (v43 >= (unint64_t)sub_15C730) {
        break;
      }
      long long v42 = v41[1];
      if (!v42)
      {
        char v40 = v41 + 1;
        goto LABEL_63;
      }
    }
  }
  else
  {
LABEL_63:
    uint64_t v44 = operator new(0x30uLL);
    v44[4] = sub_15C730;
    *((_DWORD *)v44 + 10) = 7;
    void *v44 = 0;
    v44[1] = 0;
    v44[2] = v41;
    char *v40 = v44;
    unint64_t v45 = (uint64_t *)**a2;
    if (v45)
    {
      *a2 = v45;
      uint64_t v46 = *v40;
    }
    else
    {
      uint64_t v46 = v44;
    }
    sub_2F250(a2[1], v46);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string::value_type v47 = v4;
  long long v48 = v4;
  if (v3)
  {
    unint64_t v49 = v3;
    while (1)
    {
      while (1)
      {
        long long v48 = (uint64_t **)v49;
        unint64_t v50 = v49[4];
        if (v50 <= (unint64_t)sub_12C440) {
          break;
        }
        unint64_t v49 = *v48;
        std::string::value_type v47 = v48;
        if (!*v48) {
          goto LABEL_74;
        }
      }
      if (v50 >= (unint64_t)sub_12C440) {
        break;
      }
      unint64_t v49 = v48[1];
      if (!v49)
      {
        std::string::value_type v47 = v48 + 1;
        goto LABEL_74;
      }
    }
  }
  else
  {
LABEL_74:
    uint64_t v51 = operator new(0x30uLL);
    v51[4] = sub_12C440;
    *((_DWORD *)v51 + 10) = 14;
    *uint64_t v51 = 0;
    v51[1] = 0;
    v51[2] = v48;
    *std::string::value_type v47 = v51;
    uint64_t v52 = (uint64_t *)**a2;
    if (v52)
    {
      *a2 = v52;
      unint64_t v53 = *v47;
    }
    else
    {
      unint64_t v53 = v51;
    }
    sub_2F250(a2[1], v53);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v54 = v4;
  unint64_t v55 = v4;
  if (v3)
  {
    long long v56 = v3;
    while (1)
    {
      while (1)
      {
        unint64_t v55 = (uint64_t **)v56;
        unint64_t v57 = v56[4];
        if (v57 <= (unint64_t)sub_12D664) {
          break;
        }
        long long v56 = *v55;
        uint64_t v54 = v55;
        if (!*v55) {
          goto LABEL_85;
        }
      }
      if (v57 >= (unint64_t)sub_12D664) {
        break;
      }
      long long v56 = v55[1];
      if (!v56)
      {
        uint64_t v54 = v55 + 1;
        goto LABEL_85;
      }
    }
  }
  else
  {
LABEL_85:
    long long v58 = operator new(0x30uLL);
    v58[4] = sub_12D664;
    *((_DWORD *)v58 + 10) = 15;
    void *v58 = 0;
    v58[1] = 0;
    v58[2] = v55;
    std::string *v54 = v58;
    v59 = (uint64_t *)**a2;
    if (v59)
    {
      *a2 = v59;
      unint64_t v60 = *v54;
    }
    else
    {
      unint64_t v60 = v58;
    }
    sub_2F250(a2[1], v60);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v61 = v4;
  std::string::size_type v62 = v4;
  if (v3)
  {
    uint64_t v63 = v3;
    while (1)
    {
      while (1)
      {
        std::string::size_type v62 = (uint64_t **)v63;
        unint64_t v64 = v63[4];
        if (v64 <= (unint64_t)sub_12E888) {
          break;
        }
        uint64_t v63 = *v62;
        uint64_t v61 = v62;
        if (!*v62) {
          goto LABEL_96;
        }
      }
      if (v64 >= (unint64_t)sub_12E888) {
        break;
      }
      uint64_t v63 = v62[1];
      if (!v63)
      {
        uint64_t v61 = v62 + 1;
        goto LABEL_96;
      }
    }
  }
  else
  {
LABEL_96:
    long long v65 = operator new(0x30uLL);
    v65[4] = sub_12E888;
    *((_DWORD *)v65 + 10) = 21;
    *long long v65 = 0;
    v65[1] = 0;
    v65[2] = v62;
    const std::string::value_type *v61 = v65;
    uint64_t v66 = (uint64_t *)**a2;
    if (v66)
    {
      *a2 = v66;
      int v67 = *v61;
    }
    else
    {
      int v67 = v65;
    }
    sub_2F250(a2[1], v67);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v68 = v4;
  std::string::value_type v69 = v4;
  if (v3)
  {
    BOOL v70 = v3;
    while (1)
    {
      while (1)
      {
        std::string::value_type v69 = (uint64_t **)v70;
        unint64_t v71 = v70[4];
        if (v71 <= (unint64_t)sub_12FAAC) {
          break;
        }
        BOOL v70 = *v69;
        uint64_t v68 = v69;
        if (!*v69) {
          goto LABEL_107;
        }
      }
      if (v71 >= (unint64_t)sub_12FAAC) {
        break;
      }
      BOOL v70 = v69[1];
      if (!v70)
      {
        uint64_t v68 = v69 + 1;
        goto LABEL_107;
      }
    }
  }
  else
  {
LABEL_107:
    uint64_t v72 = operator new(0x30uLL);
    v72[4] = sub_12FAAC;
    *((_DWORD *)v72 + 10) = 20;
    void *v72 = 0;
    v72[1] = 0;
    v72[2] = v69;
    *uint64_t v68 = v72;
    uint64_t v73 = (uint64_t *)**a2;
    if (v73)
    {
      *a2 = v73;
      uint64_t v74 = *v68;
    }
    else
    {
      uint64_t v74 = v72;
    }
    sub_2F250(a2[1], v74);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v75 = v4;
  uint64_t v76 = v4;
  if (v3)
  {
    uint64_t v77 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v76 = (uint64_t **)v77;
        unint64_t v78 = v77[4];
        if (v78 <= (unint64_t)sub_130CD0) {
          break;
        }
        uint64_t v77 = *v76;
        uint64_t v75 = v76;
        if (!*v76) {
          goto LABEL_118;
        }
      }
      if (v78 >= (unint64_t)sub_130CD0) {
        break;
      }
      uint64_t v77 = v76[1];
      if (!v77)
      {
        uint64_t v75 = v76 + 1;
        goto LABEL_118;
      }
    }
  }
  else
  {
LABEL_118:
    unint64_t v79 = operator new(0x30uLL);
    v79[4] = sub_130CD0;
    *((_DWORD *)v79 + 10) = 16;
    *unint64_t v79 = 0;
    v79[1] = 0;
    v79[2] = v76;
    *uint64_t v75 = v79;
    uint64_t v80 = (uint64_t *)**a2;
    if (v80)
    {
      *a2 = v80;
      unint64_t v81 = *v75;
    }
    else
    {
      unint64_t v81 = v79;
    }
    sub_2F250(a2[1], v81);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v82 = v4;
  uint64_t v83 = v4;
  if (v3)
  {
    unint64_t v84 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v83 = (uint64_t **)v84;
        unint64_t v85 = v84[4];
        if (v85 <= (unint64_t)sub_131EF4) {
          break;
        }
        unint64_t v84 = *v83;
        uint64_t v82 = v83;
        if (!*v83) {
          goto LABEL_129;
        }
      }
      if (v85 >= (unint64_t)sub_131EF4) {
        break;
      }
      unint64_t v84 = v83[1];
      if (!v84)
      {
        uint64_t v82 = v83 + 1;
        goto LABEL_129;
      }
    }
  }
  else
  {
LABEL_129:
    unint64_t v86 = operator new(0x30uLL);
    v86[4] = sub_131EF4;
    *((_DWORD *)v86 + 10) = 18;
    *unint64_t v86 = 0;
    v86[1] = 0;
    v86[2] = v83;
    *uint64_t v82 = v86;
    long long v87 = (uint64_t *)**a2;
    if (v87)
    {
      *a2 = v87;
      long long v88 = *v82;
    }
    else
    {
      long long v88 = v86;
    }
    sub_2F250(a2[1], v88);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v89 = v4;
  int64_t v90 = v4;
  if (v3)
  {
    uint64_t v91 = v3;
    while (1)
    {
      while (1)
      {
        int64_t v90 = (uint64_t **)v91;
        unint64_t v92 = v91[4];
        if (v92 <= (unint64_t)sub_134B24) {
          break;
        }
        uint64_t v91 = *v90;
        uint64_t v89 = v90;
        if (!*v90) {
          goto LABEL_140;
        }
      }
      if (v92 >= (unint64_t)sub_134B24) {
        break;
      }
      uint64_t v91 = v90[1];
      if (!v91)
      {
        uint64_t v89 = v90 + 1;
        goto LABEL_140;
      }
    }
  }
  else
  {
LABEL_140:
    uint64_t v93 = operator new(0x30uLL);
    v93[4] = sub_134B24;
    *((_DWORD *)v93 + 10) = 22;
    *uint64_t v93 = 0;
    v93[1] = 0;
    v93[2] = v90;
    *uint64_t v89 = v93;
    unint64_t v94 = (uint64_t *)**a2;
    if (v94)
    {
      *a2 = v94;
      long long v95 = *v89;
    }
    else
    {
      long long v95 = v93;
    }
    sub_2F250(a2[1], v95);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v96 = v4;
  uint64_t v97 = v4;
  if (v3)
  {
    uint64_t v98 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v97 = (uint64_t **)v98;
        unint64_t v99 = v98[4];
        if (v99 <= (unint64_t)sub_135DC8) {
          break;
        }
        uint64_t v98 = *v97;
        uint64_t v96 = v97;
        if (!*v97) {
          goto LABEL_151;
        }
      }
      if (v99 >= (unint64_t)sub_135DC8) {
        break;
      }
      uint64_t v98 = v97[1];
      if (!v98)
      {
        uint64_t v96 = v97 + 1;
        goto LABEL_151;
      }
    }
  }
  else
  {
LABEL_151:
    unint64_t v100 = operator new(0x30uLL);
    v100[4] = sub_135DC8;
    *((_DWORD *)v100 + 10) = 23;
    *unint64_t v100 = 0;
    v100[1] = 0;
    v100[2] = v97;
    *uint64_t v96 = v100;
    uint64_t v101 = (uint64_t *)**a2;
    if (v101)
    {
      *a2 = v101;
      uint64_t v102 = *v96;
    }
    else
    {
      uint64_t v102 = v100;
    }
    sub_2F250(a2[1], v102);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  std::string v103 = v4;
  uint64_t v104 = v4;
  if (v3)
  {
    long long v105 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v104 = (uint64_t **)v105;
        unint64_t v106 = v105[4];
        if (v106 <= (unint64_t)sub_13706C) {
          break;
        }
        long long v105 = *v104;
        std::string v103 = v104;
        if (!*v104) {
          goto LABEL_162;
        }
      }
      if (v106 >= (unint64_t)sub_13706C) {
        break;
      }
      long long v105 = v104[1];
      if (!v105)
      {
        std::string v103 = v104 + 1;
        goto LABEL_162;
      }
    }
  }
  else
  {
LABEL_162:
    unint64_t v107 = operator new(0x30uLL);
    v107[4] = sub_13706C;
    *((_DWORD *)v107 + 10) = 24;
    *unint64_t v107 = 0;
    v107[1] = 0;
    v107[2] = v104;
    *std::string v103 = v107;
    uint64_t v108 = (uint64_t *)**a2;
    if (v108)
    {
      *a2 = v108;
      unsigned __int8 v109 = *v103;
    }
    else
    {
      unsigned __int8 v109 = v107;
    }
    sub_2F250(a2[1], v109);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  long long v110 = v4;
  uint64_t v111 = v4;
  if (v3)
  {
    long long v112 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v111 = (uint64_t **)v112;
        unint64_t v113 = v112[4];
        if (v113 <= (unint64_t)sub_138310) {
          break;
        }
        long long v112 = *v111;
        long long v110 = v111;
        if (!*v111) {
          goto LABEL_173;
        }
      }
      if (v113 >= (unint64_t)sub_138310) {
        break;
      }
      long long v112 = v111[1];
      if (!v112)
      {
        long long v110 = v111 + 1;
        goto LABEL_173;
      }
    }
  }
  else
  {
LABEL_173:
    std::string v114 = operator new(0x30uLL);
    v114[4] = sub_138310;
    *((_DWORD *)v114 + 10) = 25;
    void *v114 = 0;
    v114[1] = 0;
    v114[2] = v111;
    *long long v110 = v114;
    unint64_t v115 = (uint64_t *)**a2;
    if (v115)
    {
      *a2 = v115;
      uint64_t v116 = *v110;
    }
    else
    {
      uint64_t v116 = v114;
    }
    sub_2F250(a2[1], v116);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v117 = v4;
  uint64_t v118 = v4;
  if (v3)
  {
    unint64_t v119 = v3;
    while (1)
    {
      while (1)
      {
        uint64_t v118 = (uint64_t **)v119;
        unint64_t v120 = v119[4];
        if (v120 <= (unint64_t)sub_1397A4) {
          break;
        }
        unint64_t v119 = *v118;
        uint64_t v117 = v118;
        if (!*v118) {
          goto LABEL_184;
        }
      }
      if (v120 >= (unint64_t)sub_1397A4) {
        break;
      }
      unint64_t v119 = v118[1];
      if (!v119)
      {
        uint64_t v117 = v118 + 1;
        goto LABEL_184;
      }
    }
  }
  else
  {
LABEL_184:
    unint64_t v121 = operator new(0x30uLL);
    v121[4] = sub_1397A4;
    *((_DWORD *)v121 + 10) = 26;
    *unint64_t v121 = 0;
    v121[1] = 0;
    v121[2] = v118;
    *uint64_t v117 = v121;
    int v122 = (uint64_t *)**a2;
    if (v122)
    {
      *a2 = v122;
      std::string v123 = *v117;
    }
    else
    {
      std::string v123 = v121;
    }
    sub_2F250(a2[1], v123);
    char v3 = a2[1];
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
  uint64_t v124 = v4;
  if (v3)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v124 = (uint64_t **)v3;
        unint64_t v125 = v3[4];
        if (v125 <= (unint64_t)sub_13AC48) {
          break;
        }
        char v3 = *v124;
        uint64_t v4 = v124;
        if (!*v124) {
          goto LABEL_195;
        }
      }
      if (v125 >= (unint64_t)sub_13AC48) {
        break;
      }
      char v3 = v124[1];
      if (!v3)
      {
        uint64_t v4 = v124 + 1;
        goto LABEL_195;
      }
    }
  }
  else
  {
LABEL_195:
    long long v126 = operator new(0x30uLL);
    v126[4] = sub_13AC48;
    *((_DWORD *)v126 + 10) = 27;
    *long long v126 = 0;
    v126[1] = 0;
    v126[2] = v124;
    *uint64_t v4 = v126;
    int v127 = (uint64_t *)**a2;
    if (v127)
    {
      *a2 = v127;
      uint64_t v128 = *v4;
    }
    else
    {
      uint64_t v128 = v126;
    }
    sub_2F250(a2[1], v128);
    a2[2] = (uint64_t *)((char *)a2[2] + 1);
  }
}

void sub_2260E4(uint64_t a1, uint64_t **a2)
{
  char v36 = 7;
  strcpy((char *)__p, "(t+t)/t");
  BOOL v37 = __p;
  char v3 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v3[7] = (uint64_t *)sub_1D03C4;
  *((_DWORD *)v3 + 16) = 1000;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t+t)*t");
  BOOL v37 = __p;
  uint64_t v4 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v4[7] = (uint64_t *)sub_1D041C;
  *((_DWORD *)v4 + 16) = 1001;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t+t)-t");
  BOOL v37 = __p;
  BOOL v5 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v5[7] = (uint64_t *)sub_1D0474;
  *((_DWORD *)v5 + 16) = 1002;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t+t)+t");
  BOOL v37 = __p;
  uint64_t v6 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v6[7] = (uint64_t *)sub_1D04CC;
  *((_DWORD *)v6 + 16) = 1003;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t-t)+t");
  BOOL v37 = __p;
  uint64_t v7 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v7[7] = (uint64_t *)sub_1D0524;
  *((_DWORD *)v7 + 16) = 1004;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t-t)/t");
  BOOL v37 = __p;
  unint64_t v8 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v8[7] = (uint64_t *)sub_1D057C;
  *((_DWORD *)v8 + 16) = 1005;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t-t)*t");
  BOOL v37 = __p;
  unint64_t v9 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v9[7] = (uint64_t *)sub_1D05D4;
  *((_DWORD *)v9 + 16) = 1006;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t*t)+t");
  BOOL v37 = __p;
  uint64_t v10 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v10[7] = (uint64_t *)sub_1D062C;
  *((_DWORD *)v10 + 16) = 1007;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t*t)-t");
  BOOL v37 = __p;
  uint64_t v11 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v11[7] = (uint64_t *)sub_1D0684;
  *((_DWORD *)v11 + 16) = 1008;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t*t)/t");
  BOOL v37 = __p;
  uint64_t v12 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v12[7] = (uint64_t *)sub_1D06DC;
  *((_DWORD *)v12 + 16) = 1009;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t*t)*t");
  BOOL v37 = __p;
  uint64_t v13 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v13[7] = (uint64_t *)sub_1D0734;
  *((_DWORD *)v13 + 16) = 1010;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t/t)+t");
  BOOL v37 = __p;
  uint64_t v14 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v14[7] = (uint64_t *)sub_1D078C;
  *((_DWORD *)v14 + 16) = 1011;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t/t)-t");
  BOOL v37 = __p;
  unint64_t v15 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v15[7] = (uint64_t *)sub_1D07E4;
  *((_DWORD *)v15 + 16) = 1012;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t/t)/t");
  BOOL v37 = __p;
  uint64_t v16 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v16[7] = (uint64_t *)sub_1D083C;
  *((_DWORD *)v16 + 16) = 1013;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t/t)*t");
  BOOL v37 = __p;
  uint64_t v17 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v17[7] = (uint64_t *)sub_1D0894;
  *((_DWORD *)v17 + 16) = 1014;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t/(t+t)");
  BOOL v37 = __p;
  uint64_t v18 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v18[7] = (uint64_t *)sub_1D08EC;
  *((_DWORD *)v18 + 16) = 1015;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t/(t-t)");
  BOOL v37 = __p;
  unint64_t v19 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v19[7] = (uint64_t *)sub_1D0944;
  *((_DWORD *)v19 + 16) = 1016;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t/(t*t)");
  BOOL v37 = __p;
  uint64_t v20 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v20[7] = (uint64_t *)sub_1D099C;
  *((_DWORD *)v20 + 16) = 1017;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t/(t/t)");
  BOOL v37 = __p;
  long long v21 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v21[7] = (uint64_t *)sub_1D09F4;
  *((_DWORD *)v21 + 16) = 1018;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t*(t+t)");
  BOOL v37 = __p;
  unint64_t v22 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v22[7] = (uint64_t *)sub_1D0A4C;
  *((_DWORD *)v22 + 16) = 1019;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t*(t-t)");
  BOOL v37 = __p;
  uint64_t v23 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v23[7] = (uint64_t *)sub_1D0AA4;
  *((_DWORD *)v23 + 16) = 1020;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t*(t*t)");
  BOOL v37 = __p;
  uint64_t v24 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v24[7] = (uint64_t *)sub_1D0AFC;
  *((_DWORD *)v24 + 16) = 1021;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t*(t/t)");
  BOOL v37 = __p;
  unint64_t v25 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v25[7] = (uint64_t *)sub_1D0B54;
  *((_DWORD *)v25 + 16) = 1022;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t-(t+t)");
  BOOL v37 = __p;
  uint64_t v26 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v26[7] = (uint64_t *)sub_1D0BAC;
  *((_DWORD *)v26 + 16) = 1023;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t-(t-t)");
  BOOL v37 = __p;
  uint64_t v27 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v27[7] = (uint64_t *)sub_1D0C04;
  *((_DWORD *)v27 + 16) = 1024;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t-(t/t)");
  BOOL v37 = __p;
  uint64_t v28 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v28[7] = (uint64_t *)sub_1D0C5C;
  *((_DWORD *)v28 + 16) = 1025;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t-(t*t)");
  BOOL v37 = __p;
  unint64_t v29 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v29[7] = (uint64_t *)sub_1D0CB4;
  *((_DWORD *)v29 + 16) = 1026;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t+(t*t)");
  BOOL v37 = __p;
  uint64_t v30 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v30[7] = (uint64_t *)sub_1D0D0C;
  *((_DWORD *)v30 + 16) = 1027;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t+(t/t)");
  BOOL v37 = __p;
  uint64_t v31 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v31[7] = (uint64_t *)sub_1D0D64;
  *((_DWORD *)v31 + 16) = 1028;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t+(t+t)");
  BOOL v37 = __p;
  uint64_t v32 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v32[7] = (uint64_t *)sub_1D0DBC;
  *((_DWORD *)v32 + 16) = 1029;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "t+(t-t)");
  BOOL v37 = __p;
  uint64_t v33 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v33[7] = (uint64_t *)sub_1D0E14;
  *((_DWORD *)v33 + 16) = 1030;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
  char v36 = 7;
  strcpy((char *)__p, "(t-t)-t");
  BOOL v37 = __p;
  uint64_t v34 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v37);
  v34[7] = (uint64_t *)sub_1D0BAC;
  *((_DWORD *)v34 + 16) = 1023;
  if (v36 < 0) {
    operator delete(__p[0]);
  }
}

void sub_226F1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_226FB4(uint64_t a1, uint64_t **a2)
{
  char v102 = 11;
  strcpy((char *)__p, "t+((t+t)/t)");
  std::string v103 = __p;
  char v3 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v3[7] = (uint64_t *)sub_17DB14;
  *((_DWORD *)v3 + 16) = 1048;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t+t)*t)");
  std::string v103 = __p;
  uint64_t v4 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v4[7] = (uint64_t *)sub_17DBA8;
  *((_DWORD *)v4 + 16) = 1049;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t-t)/t)");
  std::string v103 = __p;
  BOOL v5 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v5[7] = (uint64_t *)sub_17DC3C;
  *((_DWORD *)v5 + 16) = 1050;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t-t)*t)");
  std::string v103 = __p;
  uint64_t v6 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v6[7] = (uint64_t *)sub_17DCD0;
  *((_DWORD *)v6 + 16) = 1051;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t*t)/t)");
  std::string v103 = __p;
  uint64_t v7 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v7[7] = (uint64_t *)sub_17DD64;
  *((_DWORD *)v7 + 16) = 1052;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t*t)*t)");
  std::string v103 = __p;
  unint64_t v8 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v8[7] = (uint64_t *)sub_17DDF8;
  *((_DWORD *)v8 + 16) = 1053;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t/t)+t)");
  std::string v103 = __p;
  unint64_t v9 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v9[7] = (uint64_t *)sub_17DE8C;
  *((_DWORD *)v9 + 16) = 1054;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t/t)/t)");
  std::string v103 = __p;
  uint64_t v10 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v10[7] = (uint64_t *)sub_17DF20;
  *((_DWORD *)v10 + 16) = 1055;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+((t/t)*t)");
  std::string v103 = __p;
  uint64_t v11 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v11[7] = (uint64_t *)sub_17DFB4;
  *((_DWORD *)v11 + 16) = 1056;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t+t)/t)");
  std::string v103 = __p;
  uint64_t v12 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v12[7] = (uint64_t *)sub_17E048;
  *((_DWORD *)v12 + 16) = 1057;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t+t)*t)");
  std::string v103 = __p;
  uint64_t v13 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v13[7] = (uint64_t *)sub_17E0DC;
  *((_DWORD *)v13 + 16) = 1058;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t-t)/t)");
  std::string v103 = __p;
  uint64_t v14 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v14[7] = (uint64_t *)sub_17E170;
  *((_DWORD *)v14 + 16) = 1059;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t-t)*t)");
  std::string v103 = __p;
  unint64_t v15 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v15[7] = (uint64_t *)sub_17E204;
  *((_DWORD *)v15 + 16) = 1060;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t*t)/t)");
  std::string v103 = __p;
  uint64_t v16 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v16[7] = (uint64_t *)sub_17E298;
  *((_DWORD *)v16 + 16) = 1061;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t*t)*t)");
  std::string v103 = __p;
  uint64_t v17 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v17[7] = (uint64_t *)sub_17E32C;
  *((_DWORD *)v17 + 16) = 1062;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t/t)/t)");
  std::string v103 = __p;
  uint64_t v18 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v18[7] = (uint64_t *)sub_17E3C0;
  *((_DWORD *)v18 + 16) = 1063;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-((t/t)*t)");
  std::string v103 = __p;
  unint64_t v19 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v19[7] = (uint64_t *)sub_17E454;
  *((_DWORD *)v19 + 16) = 1064;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t+t)*t)-t");
  std::string v103 = __p;
  uint64_t v20 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v20[7] = (uint64_t *)sub_17E4E8;
  *((_DWORD *)v20 + 16) = 1065;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t-t)*t)-t");
  std::string v103 = __p;
  long long v21 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v21[7] = (uint64_t *)sub_17E57C;
  *((_DWORD *)v21 + 16) = 1066;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t*t)*t)-t");
  std::string v103 = __p;
  unint64_t v22 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v22[7] = (uint64_t *)sub_17E610;
  *((_DWORD *)v22 + 16) = 1067;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t/t)*t)-t");
  std::string v103 = __p;
  uint64_t v23 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v23[7] = (uint64_t *)sub_17E6A4;
  *((_DWORD *)v23 + 16) = 1068;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t+t)/t)-t");
  std::string v103 = __p;
  uint64_t v24 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v24[7] = (uint64_t *)sub_17E738;
  *((_DWORD *)v24 + 16) = 1069;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t-t)/t)-t");
  std::string v103 = __p;
  unint64_t v25 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v25[7] = (uint64_t *)sub_17E7CC;
  *((_DWORD *)v25 + 16) = 1070;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t*t)/t)-t");
  std::string v103 = __p;
  uint64_t v26 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v26[7] = (uint64_t *)sub_17E860;
  *((_DWORD *)v26 + 16) = 1071;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t/t)/t)-t");
  std::string v103 = __p;
  uint64_t v27 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v27[7] = (uint64_t *)sub_17E8F4;
  *((_DWORD *)v27 + 16) = 1072;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)+(t*t)");
  std::string v103 = __p;
  uint64_t v28 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v28[7] = (uint64_t *)sub_17E988;
  *((_DWORD *)v28 + 16) = 1073;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)-(t*t)");
  std::string v103 = __p;
  unint64_t v29 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v29[7] = (uint64_t *)sub_17EA1C;
  *((_DWORD *)v29 + 16) = 1074;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)+(t/t)");
  std::string v103 = __p;
  uint64_t v30 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v30[7] = (uint64_t *)sub_17EAB0;
  *((_DWORD *)v30 + 16) = 1075;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)-(t/t)");
  std::string v103 = __p;
  uint64_t v31 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v31[7] = (uint64_t *)sub_17EB44;
  *((_DWORD *)v31 + 16) = 1076;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)+(t/t)");
  std::string v103 = __p;
  uint64_t v32 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v32[7] = (uint64_t *)sub_17EBD8;
  *((_DWORD *)v32 + 16) = 1077;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)-(t/t)");
  std::string v103 = __p;
  uint64_t v33 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v33[7] = (uint64_t *)sub_17EC6C;
  *((_DWORD *)v33 + 16) = 1078;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)-(t*t)");
  std::string v103 = __p;
  uint64_t v34 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v34[7] = (uint64_t *)sub_17ED00;
  *((_DWORD *)v34 + 16) = 1079;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t/(t+(t*t))");
  std::string v103 = __p;
  uint64_t v35 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v35[7] = (uint64_t *)sub_17ED94;
  *((_DWORD *)v35 + 16) = 1080;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t/(t-(t*t))");
  std::string v103 = __p;
  char v36 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v36[7] = (uint64_t *)sub_17EE28;
  *((_DWORD *)v36 + 16) = 1081;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t*(t+(t*t))");
  std::string v103 = __p;
  BOOL v37 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v37[7] = (uint64_t *)sub_17EEBC;
  *((_DWORD *)v37 + 16) = 1082;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t*(t-(t*t))");
  std::string v103 = __p;
  uint64_t v38 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v38[7] = (uint64_t *)sub_17EF50;
  *((_DWORD *)v38 + 16) = 1083;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)-(t*t)");
  std::string v103 = __p;
  unint64_t v39 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v39[7] = (uint64_t *)sub_17EFE4;
  *((_DWORD *)v39 + 16) = 2000;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)-(t/t)");
  std::string v103 = __p;
  char v40 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v40[7] = (uint64_t *)sub_17F078;
  *((_DWORD *)v40 + 16) = 2001;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)+(t*t)");
  std::string v103 = __p;
  long long v41 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v41[7] = (uint64_t *)sub_17F10C;
  *((_DWORD *)v41 + 16) = 2002;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)+(t/t)");
  std::string v103 = __p;
  long long v42 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v42[7] = (uint64_t *)sub_17F1A0;
  *((_DWORD *)v42 + 16) = 2003;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)+(t*t)");
  std::string v103 = __p;
  unint64_t v43 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v43[7] = (uint64_t *)sub_17F234;
  *((_DWORD *)v43 + 16) = 2004;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)+(t/t)");
  std::string v103 = __p;
  uint64_t v44 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v44[7] = (uint64_t *)sub_17F2C8;
  *((_DWORD *)v44 + 16) = 2005;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)-(t*t)");
  std::string v103 = __p;
  unint64_t v45 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v45[7] = (uint64_t *)sub_17F35C;
  *((_DWORD *)v45 + 16) = 2006;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)-(t/t)");
  std::string v103 = __p;
  uint64_t v46 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v46[7] = (uint64_t *)sub_17F3F0;
  *((_DWORD *)v46 + 16) = 2007;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)-(t-t)");
  std::string v103 = __p;
  std::string::value_type v47 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v47[7] = (uint64_t *)sub_17F484;
  *((_DWORD *)v47 + 16) = 2008;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)+(t-t)");
  std::string v103 = __p;
  long long v48 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v48[7] = (uint64_t *)sub_17F518;
  *((_DWORD *)v48 + 16) = 2009;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)+(t+t)");
  std::string v103 = __p;
  unint64_t v49 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v49[7] = (uint64_t *)sub_17F5AC;
  *((_DWORD *)v49 + 16) = 2010;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)*(t-t)");
  std::string v103 = __p;
  unint64_t v50 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v50[7] = (uint64_t *)sub_17F640;
  *((_DWORD *)v50 + 16) = 2011;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)/(t-t)");
  std::string v103 = __p;
  uint64_t v51 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v51[7] = (uint64_t *)sub_17F6D4;
  *((_DWORD *)v51 + 16) = 2012;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)-(t+t)");
  std::string v103 = __p;
  uint64_t v52 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v52[7] = (uint64_t *)sub_17F768;
  *((_DWORD *)v52 + 16) = 2013;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)+(t+t)");
  std::string v103 = __p;
  unint64_t v53 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v53[7] = (uint64_t *)sub_17F7FC;
  *((_DWORD *)v53 + 16) = 2014;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)*(t+t)");
  std::string v103 = __p;
  uint64_t v54 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v54[7] = (uint64_t *)sub_17F890;
  *((_DWORD *)v54 + 16) = 2015;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)/(t+t)");
  std::string v103 = __p;
  unint64_t v55 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v55[7] = (uint64_t *)sub_17F924;
  *((_DWORD *)v55 + 16) = 2016;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)-(t+t)");
  std::string v103 = __p;
  long long v56 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v56[7] = (uint64_t *)sub_17F9B8;
  *((_DWORD *)v56 + 16) = 2017;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)-(t+t)");
  std::string v103 = __p;
  unint64_t v57 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v57[7] = (uint64_t *)sub_17FA4C;
  *((_DWORD *)v57 + 16) = 2018;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)+(t+t)");
  std::string v103 = __p;
  long long v58 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v58[7] = (uint64_t *)sub_17FAE0;
  *((_DWORD *)v58 + 16) = 2019;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)+(t+t)");
  std::string v103 = __p;
  v59 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v59[7] = (uint64_t *)sub_17FB74;
  *((_DWORD *)v59 + 16) = 2020;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)+(t-t)");
  std::string v103 = __p;
  unint64_t v60 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v60[7] = (uint64_t *)sub_17FC08;
  *((_DWORD *)v60 + 16) = 2021;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)+(t-t)");
  std::string v103 = __p;
  uint64_t v61 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v61[7] = (uint64_t *)sub_17FC9C;
  *((_DWORD *)v61 + 16) = 2022;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)-(t-t)");
  std::string v103 = __p;
  std::string::size_type v62 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v62[7] = (uint64_t *)sub_17FD30;
  *((_DWORD *)v62 + 16) = 2023;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)-(t-t)");
  std::string v103 = __p;
  uint64_t v63 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v63[7] = (uint64_t *)sub_17FDC4;
  *((_DWORD *)v63 + 16) = 2024;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)*(t*t)");
  std::string v103 = __p;
  unint64_t v64 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v64[7] = (uint64_t *)sub_17FE58;
  *((_DWORD *)v64 + 16) = 2025;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)*(t/t)");
  std::string v103 = __p;
  long long v65 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v65[7] = (uint64_t *)sub_17FEEC;
  *((_DWORD *)v65 + 16) = 2026;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)/(t*t)");
  std::string v103 = __p;
  uint64_t v66 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v66[7] = (uint64_t *)sub_17FF80;
  *((_DWORD *)v66 + 16) = 2027;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)/(t/t)");
  std::string v103 = __p;
  int v67 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v67[7] = (uint64_t *)sub_180014;
  *((_DWORD *)v67 + 16) = 2028;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)/(t*t)");
  std::string v103 = __p;
  uint64_t v68 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v68[7] = (uint64_t *)sub_1800A8;
  *((_DWORD *)v68 + 16) = 2029;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)/(t/t)");
  std::string v103 = __p;
  std::string::value_type v69 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v69[7] = (uint64_t *)sub_18013C;
  *((_DWORD *)v69 + 16) = 2030;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)*(t*t)");
  std::string v103 = __p;
  BOOL v70 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v70[7] = (uint64_t *)sub_1801D0;
  *((_DWORD *)v70 + 16) = 2031;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)*(t/t)");
  std::string v103 = __p;
  unint64_t v71 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v71[7] = (uint64_t *)sub_180264;
  *((_DWORD *)v71 + 16) = 2032;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)*(t+t)");
  std::string v103 = __p;
  uint64_t v72 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v72[7] = (uint64_t *)sub_1802F8;
  *((_DWORD *)v72 + 16) = 2033;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)*(t+t)");
  std::string v103 = __p;
  uint64_t v73 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v73[7] = (uint64_t *)sub_18038C;
  *((_DWORD *)v73 + 16) = 2034;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)/(t+t)");
  std::string v103 = __p;
  uint64_t v74 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v74[7] = (uint64_t *)sub_180420;
  *((_DWORD *)v74 + 16) = 2035;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)/(t+t)");
  std::string v103 = __p;
  uint64_t v75 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v75[7] = (uint64_t *)sub_1804B4;
  *((_DWORD *)v75 + 16) = 2036;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)/(t+t)");
  std::string v103 = __p;
  uint64_t v76 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v76[7] = (uint64_t *)sub_1804B4;
  *((_DWORD *)v76 + 16) = 2036;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)/(t-t)");
  std::string v103 = __p;
  uint64_t v77 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v77[7] = (uint64_t *)sub_1805BC;
  *((_DWORD *)v77 + 16) = 2038;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)*(t-t)");
  std::string v103 = __p;
  unint64_t v78 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v78[7] = (uint64_t *)sub_180650;
  *((_DWORD *)v78 + 16) = 2039;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)/(t*t)");
  std::string v103 = __p;
  unint64_t v79 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v79[7] = (uint64_t *)sub_1806E4;
  *((_DWORD *)v79 + 16) = 2040;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)*(t/t)");
  std::string v103 = __p;
  uint64_t v80 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v80[7] = (uint64_t *)sub_180778;
  *((_DWORD *)v80 + 16) = 2041;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)*(t-t)");
  std::string v103 = __p;
  unint64_t v81 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v81[7] = (uint64_t *)sub_18080C;
  *((_DWORD *)v81 + 16) = 2042;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t*t)*(t*t)");
  std::string v103 = __p;
  uint64_t v82 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v82[7] = (uint64_t *)sub_1808A0;
  *((_DWORD *)v82 + 16) = 2043;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+(t*(t/t))");
  std::string v103 = __p;
  uint64_t v83 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v83[7] = (uint64_t *)sub_180934;
  *((_DWORD *)v83 + 16) = 2044;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-(t*(t/t))");
  std::string v103 = __p;
  unint64_t v84 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v84[7] = (uint64_t *)sub_1809C8;
  *((_DWORD *)v84 + 16) = 2045;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t+(t/(t*t))");
  std::string v103 = __p;
  unint64_t v85 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v85[7] = (uint64_t *)sub_180A5C;
  *((_DWORD *)v85 + 16) = 2046;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "t-(t/(t*t))");
  std::string v103 = __p;
  unint64_t v86 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v86[7] = (uint64_t *)sub_180AF0;
  *((_DWORD *)v86 + 16) = 2047;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t-t)-t)*t");
  std::string v103 = __p;
  long long v87 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v87[7] = (uint64_t *)sub_180B84;
  *((_DWORD *)v87 + 16) = 2048;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t-t)-t)/t");
  std::string v103 = __p;
  long long v88 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v88[7] = (uint64_t *)sub_180C18;
  *((_DWORD *)v88 + 16) = 2049;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t-t)+t)*t");
  std::string v103 = __p;
  uint64_t v89 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v89[7] = (uint64_t *)sub_180CAC;
  *((_DWORD *)v89 + 16) = 2050;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t-t)+t)/t");
  std::string v103 = __p;
  int64_t v90 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v90[7] = (uint64_t *)sub_180D40;
  *((_DWORD *)v90 + 16) = 2051;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+(t-t))*t");
  std::string v103 = __p;
  uint64_t v91 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v91[7] = (uint64_t *)sub_180DD4;
  *((_DWORD *)v91 + 16) = 2052;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+(t-t))/t");
  std::string v103 = __p;
  unint64_t v92 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v92[7] = (uint64_t *)sub_180E68;
  *((_DWORD *)v92 + 16) = 2053;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)/(t+t)");
  std::string v103 = __p;
  uint64_t v93 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v93[7] = (uint64_t *)sub_180EFC;
  *((_DWORD *)v93 + 16) = 2054;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)/(t-t)");
  std::string v103 = __p;
  unint64_t v94 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v94[7] = (uint64_t *)sub_180F90;
  *((_DWORD *)v94 + 16) = 2055;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t+t)*(t+t)");
  std::string v103 = __p;
  long long v95 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v95[7] = (uint64_t *)sub_181024;
  *((_DWORD *)v95 + 16) = 2056;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)*(t-t)");
  std::string v103 = __p;
  uint64_t v96 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v96[7] = (uint64_t *)sub_1810B8;
  *((_DWORD *)v96 + 16) = 2057;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)+(t-t)");
  std::string v103 = __p;
  uint64_t v97 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v97[7] = (uint64_t *)sub_18114C;
  *((_DWORD *)v97 + 16) = 2058;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t-t)-(t-t)");
  std::string v103 = __p;
  uint64_t v98 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v98[7] = (uint64_t *)sub_1811E0;
  *((_DWORD *)v98 + 16) = 2059;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "(t/t)+(t*t)");
  std::string v103 = __p;
  unint64_t v99 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v99[7] = (uint64_t *)sub_181274;
  *((_DWORD *)v99 + 16) = 2060;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
  char v102 = 11;
  strcpy((char *)__p, "((t*t)*t)/t");
  std::string v103 = __p;
  unint64_t v100 = sub_2308DC(a2, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v103);
  v100[7] = (uint64_t *)sub_181308;
  *((_DWORD *)v100 + 16) = 2061;
  if (v102 < 0) {
    operator delete(__p[0]);
  }
}

void sub_229C48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_229CBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x229CB4);
}

void sub_22A178(uint64_t a1)
{
  char v3 = 7;
  uint64_t v1 = (uint64_t **)(a1 + 16);
  strcpy((char *)__p, "(v)o(v)");
  uint64_t v4 = __p;
  sub_243C60((uint64_t **)(a1 + 16), (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_230A5C;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  char v3 = 7;
  strcpy((char *)__p, "(c)o(v)");
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_113374;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  char v3 = 7;
  strcpy((char *)__p, "(v)o(c)");
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_230F28;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_24A610((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_231760;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_24B138((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_231C8C;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_24D340((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2321BC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_24F52C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_232778;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_24FF8C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_232C98;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2509EC((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2331BC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_252BF4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2336DC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_253650((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_233C00;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2556FC((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2341B8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25615C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2347AC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_258188((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_234DBC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25A408((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2353C8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25B110((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2359F8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25BFAC((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23637C;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25CE44((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_236AF0;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25DCE0((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_237264;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25EB78((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2379D4;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_25FA14((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_238144;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2608B4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_238BC0;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_261750((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23977C;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2666E8((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23A1F8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_267580((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23ACF0;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2683B4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23B0C0;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2691E4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23B498;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_26A018((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23B878;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_26AE48((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23BC54;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_26BC7C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23C0C4;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_26CAB4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23C550;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_26D8E8((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23C944;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_26E71C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23CDCC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_26F54C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23D1B0;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_270380((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23D580;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2711B0((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23D958;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_271FE4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23DD38;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_272E14((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23E114;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_273C48((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23E584;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_274A80((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23EA10;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2758B4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23EE04;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_2766E4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23F28C;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_277518((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23F660;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_278348((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23FAB8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_27917C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_23FE94;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_279FAC((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_240274;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_27ADE0((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_240650;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_27BC18((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_240A40;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_27CA4C((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_240EAC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_27D880((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_241310;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_27E6B0((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2416F4;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_27F4E4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_241AC8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_280314((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_241F20;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_281148((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2422FC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_281F78((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_2426DC;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_282DAC((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_242AB8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_283BE4((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_242EA8;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_284A18((uint64_t)__p);
  uint64_t v4 = __p;
  sub_243C60(v1, (const void **)__p, (uint64_t)&unk_20F06E0, (_OWORD **)&v4)[7] = (uint64_t *)sub_243314;
  if (v3 < 0) {
    operator delete(__p[0]);
  }
}

void sub_22B33C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22B43C(uint64_t a1)
{
  *(void *)a1 = off_242BB30;
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void **)(a1 + 40);
    if (v3 == v2)
    {
LABEL_11:
      *(void *)(a1 + 48) = v2;
      operator delete(v4);
      goto LABEL_12;
    }
    while (1)
    {
      if (*(char *)(v3 - 9) < 0)
      {
        operator delete(*(void **)(v3 - 32));
        if (*(char *)(v3 - 49) < 0) {
LABEL_9:
        }
          operator delete(*(void **)(v3 - 72));
      }
      else if (*(char *)(v3 - 49) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 80;
      if (v3 == v2)
      {
        uint64_t v4 = *(void **)(a1 + 40);
        goto LABEL_11;
      }
    }
  }
LABEL_12:
  sub_22EFF4(a1 + 16, *(void **)(a1 + 24));
  return a1;
}

uint64_t sub_22B4F4(uint64_t a1)
{
  *(void *)a1 = off_242BAD0;
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = *(void **)(a1 + 40);
    if (v3 == v2)
    {
LABEL_11:
      *(void *)(a1 + 48) = v2;
      operator delete(v4);
      goto LABEL_12;
    }
    while (1)
    {
      if (*(char *)(v3 - 9) < 0)
      {
        operator delete(*(void **)(v3 - 32));
        if (*(char *)(v3 - 49) < 0) {
LABEL_9:
        }
          operator delete(*(void **)(v3 - 72));
      }
      else if (*(char *)(v3 - 49) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 80;
      if (v3 == v2)
      {
        uint64_t v4 = *(void **)(a1 + 40);
        goto LABEL_11;
      }
    }
  }
LABEL_12:
  sub_22EFF4(a1 + 16, *(void **)(a1 + 24));
  return a1;
}

void *sub_22B5AC(void *a1)
{
  *a1 = off_242BA70;
  uint64_t v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_22B5FC(uint64_t a1)
{
  *(void *)a1 = off_242BA10;
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    sub_431BC(a1 + 24);
  }
  else
  {
    sub_431BC(a1 + 24);
  }
  return a1;
}

void *sub_22B66C(void *a1)
{
  *a1 = off_242B998;
  sub_23052C((uint64_t)(a1 + 1), a1[2]);
  return a1;
}

uint64_t sub_22B6B8(uint64_t a1)
{
  *(void *)a1 = off_242B880;
  sub_2F020(a1 + 16, *(char **)(a1 + 24));
  return a1;
}

uint64_t sub_22B700(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 72);
  if (v2)
  {
    *(void *)(a1 + 80) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void **)(a1 + 48);
  if (v3)
  {
    *(void *)(a1 + 56) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)(a1 + 24);
  if (v4)
  {
    *(void *)(a1 + 32) = v4;
    operator delete(v4);
  }
  BOOL v5 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v5;
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_22B764(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    uint64_t v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  else
  {
    uint64_t v2 = *(void ***)(a1 + 8);
    if (!v2) {
      return a1;
    }
  }
  uint64_t v4 = *(void ***)(a1 + 16);
  BOOL v5 = v2;
  if (v4 != v2)
  {
    do
    {
      if (*((char *)v4 - 73) < 0) {
        operator delete(*(v4 - 12));
      }
      v4 -= 12;
    }
    while (v4 != v2);
    BOOL v5 = *(void ***)(a1 + 8);
  }
  *(void *)(a1 + 16) = v2;
  operator delete(v5);
  return a1;
}

void **sub_22B808(void **a1)
{
  sub_B1980(a1);
  uint64_t v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  if (v2 != v3)
  {
    do
    {
      uint64_t v4 = *v2++;
      operator delete(v4);
    }
    while (v2 != v3);
    uint64_t v6 = a1[1];
    BOOL v5 = a1[2];
    if (v5 != v6) {
      a1[2] = &v5[(v6 - v5 + 7) & 0xFFFFFFFFFFFFFFF8];
    }
  }
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

uint64_t sub_22B880(uint64_t a1)
{
  if (*(char *)(a1 + 175) < 0)
  {
    operator delete(*(void **)(a1 + 152));
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 71) & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(*(void **)(a1 + 48));
      uint64_t v2 = *(void ***)a1;
      if (!*(void *)a1) {
        return a1;
      }
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 112));
  if (*(char *)(a1 + 71) < 0) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v2 = *(void ***)a1;
  if (!*(void *)a1) {
    return a1;
  }
LABEL_9:
  uint64_t v4 = *(void ***)(a1 + 8);
  BOOL v5 = v2;
  if (v4 != v2)
  {
    do
    {
      if (*((char *)v4 - 9) < 0) {
        operator delete(*(v4 - 4));
      }
      v4 -= 5;
    }
    while (v4 != v2);
    BOOL v5 = *(void ***)a1;
  }
  *(void *)(a1 + 8) = v2;
  operator delete(v5);
  return a1;
}

uint64_t sub_22B950(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(void *)(a1 + 5) = *(uint64_t *)((char *)a2 + 5);
  *(void *)a1 = v4;
  *(void *)(a1 + 24) = 0;
  BOOL v5 = (uint64_t *)(a1 + 24);
  *(void *)(a1 + 16) = a1 + 24;
  uint64_t v6 = (void **)(a1 + 16);
  *(void *)(a1 + 32) = 0;
  uint64_t v7 = (uint64_t *)a2[2];
  unint64_t v8 = a2 + 3;
  if (v7 != a2 + 3)
  {
    do
    {
      sub_B0E28(v6, v5, (uint64_t)(v7 + 4), (uint64_t)(v7 + 4));
      uint64_t v17 = (uint64_t *)v7[1];
      if (v17)
      {
        do
        {
          uint64_t v18 = v17;
          uint64_t v17 = (uint64_t *)*v17;
        }
        while (v17);
      }
      else
      {
        do
        {
          uint64_t v18 = (uint64_t *)v7[2];
          BOOL v19 = *v18 == (void)v7;
          uint64_t v7 = v18;
        }
        while (!v19);
      }
      uint64_t v7 = v18;
    }
    while (v18 != v8);
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = a1 + 48;
  *(void *)(a1 + 56) = 0;
  unint64_t v9 = (uint64_t *)a2[5];
  if (v9 != a2 + 6)
  {
    do
    {
      sub_B0E28((void **)(a1 + 40), (uint64_t *)(a1 + 48), (uint64_t)(v9 + 4), (uint64_t)(v9 + 4));
      uint64_t v20 = (uint64_t *)v9[1];
      if (v20)
      {
        do
        {
          long long v21 = v20;
          uint64_t v20 = (uint64_t *)*v20;
        }
        while (v20);
      }
      else
      {
        do
        {
          long long v21 = (uint64_t *)v9[2];
          BOOL v19 = *v21 == (void)v9;
          unint64_t v9 = v21;
        }
        while (!v19);
      }
      unint64_t v9 = v21;
    }
    while (v21 != a2 + 6);
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 64) = a1 + 72;
  *(void *)(a1 + 80) = 0;
  uint64_t v10 = (uint64_t *)a2[8];
  if (v10 != a2 + 9)
  {
    do
    {
      sub_B0E28((void **)(a1 + 64), (uint64_t *)(a1 + 72), (uint64_t)(v10 + 4), (uint64_t)(v10 + 4));
      unint64_t v22 = (uint64_t *)v10[1];
      if (v22)
      {
        do
        {
          uint64_t v23 = v22;
          unint64_t v22 = (uint64_t *)*v22;
        }
        while (v22);
      }
      else
      {
        do
        {
          uint64_t v23 = (uint64_t *)v10[2];
          BOOL v19 = *v23 == (void)v10;
          uint64_t v10 = v23;
        }
        while (!v19);
      }
      uint64_t v10 = v23;
    }
    while (v23 != a2 + 9);
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 88) = a1 + 96;
  *(void *)(a1 + 104) = 0;
  uint64_t v11 = (uint64_t *)a2[11];
  if (v11 != a2 + 12)
  {
    do
    {
      sub_B0E28((void **)(a1 + 88), (uint64_t *)(a1 + 96), (uint64_t)(v11 + 4), (uint64_t)(v11 + 4));
      uint64_t v24 = (uint64_t *)v11[1];
      if (v24)
      {
        do
        {
          unint64_t v25 = v24;
          uint64_t v24 = (uint64_t *)*v24;
        }
        while (v24);
      }
      else
      {
        do
        {
          unint64_t v25 = (uint64_t *)v11[2];
          BOOL v19 = *v25 == (void)v11;
          uint64_t v11 = v25;
        }
        while (!v19);
      }
      uint64_t v11 = v25;
    }
    while (v25 != a2 + 12);
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 112) = a1 + 120;
  *(void *)(a1 + 128) = 0;
  uint64_t v12 = (uint64_t *)a2[14];
  if (v12 != a2 + 15)
  {
    do
    {
      sub_B0E28((void **)(a1 + 112), (uint64_t *)(a1 + 120), (uint64_t)(v12 + 4), (uint64_t)(v12 + 4));
      uint64_t v26 = (uint64_t *)v12[1];
      if (v26)
      {
        do
        {
          uint64_t v27 = v26;
          uint64_t v26 = (uint64_t *)*v26;
        }
        while (v26);
      }
      else
      {
        do
        {
          uint64_t v27 = (uint64_t *)v12[2];
          BOOL v19 = *v27 == (void)v12;
          uint64_t v12 = v27;
        }
        while (!v19);
      }
      uint64_t v12 = v27;
    }
    while (v27 != a2 + 15);
  }
  *(void *)(a1 + 144) = 0;
  uint64_t v13 = (uint64_t *)(a1 + 144);
  uint64_t v30 = a1;
  *(void *)(a1 + 136) = a1 + 144;
  uint64_t v14 = (void **)(a1 + 136);
  *(void *)(a1 + 152) = 0;
  unint64_t v15 = (uint64_t *)a2[17];
  if (v15 != a2 + 18)
  {
    do
    {
      sub_B0E28(v14, v13, (uint64_t)(v15 + 4), (uint64_t)(v15 + 4));
      uint64_t v28 = (uint64_t *)v15[1];
      if (v28)
      {
        do
        {
          unint64_t v29 = v28;
          uint64_t v28 = (uint64_t *)*v28;
        }
        while (v28);
      }
      else
      {
        do
        {
          unint64_t v29 = (uint64_t *)v15[2];
          BOOL v19 = *v29 == (void)v15;
          unint64_t v15 = v29;
        }
        while (!v19);
      }
      unint64_t v15 = v29;
    }
    while (v29 != a2 + 18);
  }
  return v30;
}

void sub_22BC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char **a9, uint64_t a10, char **a11, uint64_t a12)
{
  sub_2F020(v13, *v12);
  sub_2F020(v14, *v15);
  sub_2F020(v18, *v19);
  sub_2F020(v16, *v17);
  sub_2F020(a10, *a9);
  sub_2F020(a12, *a11);
  _Unwind_Resume(a1);
}

void sub_22BCFC(_Unwind_Exception *a1)
{
  sub_2F020(v1, *v2);
  _Unwind_Resume(a1);
}

void sub_22BD14()
{
}

uint64_t sub_22BD28(uint64_t a1, uint64_t a2, _DWORD *a3, void *a4, uint64_t a5)
{
  if (*(_DWORD *)(a1 + 8)) {
    return 0;
  }
  *a3 = 1;
  *a4 = 0;
  if (*(char *)(a5 + 23) < 0)
  {
    **(unsigned char **)a5 = 0;
    *(void *)(a5 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a5 = 0;
    *(unsigned char *)(a5 + 23) = 0;
  }
  return 1;
}

uint64_t sub_22BD7C()
{
  return 0;
}

uint64_t sub_22BD8C()
{
  return 1;
}

uint64_t sub_22BD94(void *a1, uint64_t a2)
{
  uint64_t v2 = *(char **)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  if (*(void *)a2 == v3) {
    return 0;
  }
  unint64_t v5 = 0xCCCCCCCCCCCCCCCDLL * ((v3 - (uint64_t)v2) >> 3);
  unint64_t v6 = a1[1];
  BOOL v7 = v5 >= v6;
  unint64_t v8 = v5 - v6;
  if (!v7 || v8 == -1) {
    return 0;
  }
  unint64_t v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 160;
  do
  {
    int v16 = 0;
    char v18 = 0;
    LOBYTE(__p) = 0;
    uint64_t v19 = -1;
    switch(v6)
    {
      case 1uLL:
        int v15 = (*(uint64_t (**)(void *, char *, int *))(*a1 + 48))(a1, &v2[v14 - 160], &v16);
        goto LABEL_18;
      case 2uLL:
        int v15 = (*(uint64_t (**)(void *, char *, char *, int *))(*a1 + 56))(a1, &v2[v14 - 160], &v2[v14 - 120], &v16);
        goto LABEL_18;
      case 3uLL:
        int v15 = (*(uint64_t (**)(void *, char *, char *, char *, int *))(*a1 + 64))(a1, &v2[v14 - 160], &v2[v14 - 120], &v2[v14 - 80], &v16);
        goto LABEL_18;
      case 4uLL:
        int v15 = (*(uint64_t (**)(void *, char *, char *, char *, char *, int *))(*a1 + 72))(a1, &v2[v14 - 160], &v2[v14 - 120], &v2[v14 - 80], &v2[v14 - 40], &v16);
        goto LABEL_18;
      case 5uLL:
        int v15 = (*(uint64_t (**)(void *, char *, char *, char *, char *, char *, int *))(*a1 + 80))(a1, &v2[v14 - 160], &v2[v14 - 120], &v2[v14 - 80], &v2[v14 - 40], &v2[v14], &v16);
LABEL_18:
        if ((v15 & 0x80000000) == 0 && v15 <= *((_DWORD *)a1 + 2) + 1)
        {
          sub_1F0CDC((char **)a2, *(void *)a2 + 40 * (v12 + v15), (unint64_t)&v16);
          ++v13;
        }
        if (v18 < 0) {
          operator delete(__p);
        }
        break;
      default:
        break;
    }
    ++v12;
    uint64_t v2 = *(char **)a2;
    unint64_t v6 = a1[1];
    v14 += 40;
  }
  while (v12 < 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3) - v6 + 1);
  return v13;
}

void sub_22C010(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_22C044(uint64_t a1)
{
  *(void *)a1 = off_242B880;
  sub_2F020(a1 + 16, *(char **)(a1 + 24));

  operator delete();
}

uint64_t sub_22C0AC()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_22C0B4(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  *(_DWORD *)a4 = 42;
  std::string::assign((std::string *)(a4 + 8), "*");
  *(void *)(a4 + 32) = *((void *)a3 + 4);
  if (*a2 == 8)
  {
    unint64_t v8 = (unsigned char **)(a2 + 2);
    if ((uint64_t *)(a1 + 24) != sub_ADE40(a1 + 16, (uint64_t)(a2 + 2))) {
      return 0xFFFFFFFFLL;
    }
    if (*((char *)a2 + 31) < 0)
    {
      if (*((void *)a2 + 2) && **v8 == 36) {
        return 0xFFFFFFFFLL;
      }
    }
    else if (*((unsigned char *)a2 + 31) && *(unsigned char *)v8 == 36)
    {
      return 0xFFFFFFFFLL;
    }
  }
  int v10 = *a3;
  if (*a3 == 8)
  {
    if ((uint64_t *)(a1 + 24) != sub_ADE40(a1 + 16, (uint64_t)(a3 + 2))) {
      return 0xFFFFFFFFLL;
    }
    int v10 = *a3;
  }
  int v11 = *a2;
  BOOL v14 = v10 == 40 || (v10 & 0xFFFFFFDF) == 91 || v10 == 8;
  if (v11 == 7 && v14) {
    return 1;
  }
  if (v11 == 8 && v10 == 7) {
    return 1;
  }
  if (v11 == 41 && v10 == 7) {
    return 1;
  }
  if (v11 == 125 && v10 == 7) {
    return 1;
  }
  BOOL v15 = v10 == 7 && v11 == 93;
  BOOL v16 = v10 == 8 && v11 == 41;
  BOOL v17 = v10 == 8 && v11 == 125;
  BOOL v18 = v10 == 8 && v11 == 93;
  uint64_t result = 1;
  if (!v15 && !v16 && !v17)
  {
    if (v10 == 8 && v11 == 8) {
      unsigned int v20 = 1;
    }
    else {
      unsigned int v20 = -1;
    }
    if (v18) {
      return 1;
    }
    else {
      return v20;
    }
  }
  return result;
}

uint64_t sub_22C2EC()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_22C2F4()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_22C2FC()
{
  return 0xFFFFFFFFLL;
}

uint64_t sub_22C304(uint64_t a1, uint64_t *a2)
{
  if (*a2 == a2[1]) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2 != 3)
  {
    if (v2 == 2) {
      return sub_22C5D4(a1, a2);
    }
    return 0;
  }
  return sub_22C840(a1, a2);
}

void sub_22C334()
{
}

uint64_t sub_22C348(uint64_t a1, int *a2, int *a3, uint64_t a4)
{
  int v6 = *a2;
  int v7 = *a3;
  if (*a2 == 58 && v7 == 61)
  {
    unint64_t v8 = ":=";
    int v9 = 10;
LABEL_51:
    *(_DWORD *)a4 = v9;
    std::string::assign((std::string *)(a4 + 8), v8);
    *(void *)(a4 + 32) = *((void *)a2 + 4);
    return 1;
  }
  if (v6 == 43 && v7 == 61)
  {
    unint64_t v8 = "+=";
    int v9 = 11;
    goto LABEL_51;
  }
  if (v6 == 45 && v7 == 61)
  {
    unint64_t v8 = "-=";
    int v9 = 12;
    goto LABEL_51;
  }
  if (v6 == 42 && v7 == 61)
  {
    unint64_t v8 = "*=";
    int v9 = 13;
    goto LABEL_51;
  }
  if (v6 == 47 && v7 == 61)
  {
    unint64_t v8 = "/=";
    int v9 = 14;
    goto LABEL_51;
  }
  if (v6 == 37 && v7 == 61)
  {
    unint64_t v8 = "%=";
    int v9 = 15;
    goto LABEL_51;
  }
  if (v6 == 62 && v7 == 61)
  {
    unint64_t v8 = ">=";
    int v9 = 20;
    goto LABEL_51;
  }
  if (v6 == 60 && v7 == 61)
  {
    unint64_t v8 = "<=";
    int v9 = 18;
    goto LABEL_51;
  }
  if (v6 == 61 && v7 == 61)
  {
    unint64_t v8 = "==";
    int v9 = 61;
    goto LABEL_51;
  }
  if (*a2 == 33 && v7 == 61)
  {
    unint64_t v8 = "!=";
    int v9 = 19;
    goto LABEL_51;
  }
  if (v6 == 60 && v7 == 62)
  {
    unint64_t v8 = "<>";
    int v9 = 19;
    goto LABEL_51;
  }
  if (v6 == 18 && v7 == 62)
  {
    unint64_t v8 = "<=>";
    int v9 = 21;
    goto LABEL_51;
  }
  BOOL v11 = v6 == 45 && v7 == 43;
  BOOL v12 = v7 == 45 && v6 == 43;
  unint64_t v8 = "-";
  int v9 = 45;
  if (v12 || v11) {
    goto LABEL_51;
  }
  uint64_t result = 0;
  if (v6 == 45 && v7 == 45)
  {
    unint64_t v8 = "+";
    int v9 = 43;
    goto LABEL_51;
  }
  return result;
}

uint64_t sub_22C55C(uint64_t a1, uint64_t a2, _DWORD *a3, _DWORD *a4, uint64_t a5)
{
  BOOL v6 = *(_DWORD *)a2 == 91 && *a3 == 42 && *a4 == 93;
  uint64_t v7 = v6;
  if (v6)
  {
    *(_DWORD *)a5 = 8;
    std::string::assign((std::string *)(a5 + 8), "[*]");
    *(void *)(a5 + 32) = *(void *)(a2 + 32);
  }
  return v7;
}

uint64_t sub_22C5D4(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  if (v2 < 2 || (int)v2 - 1 < 1) {
    return 0;
  }
  uint64_t v6 = 0;
  unint64_t v7 = 0;
  uint64_t v8 = 0;
  do
  {
    unint64_t v9 = v7;
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
    __p.__r_.__value_.__s.__data_[0] = 0;
    uint64_t v22 = -1;
    ++v7;
    do
    {
      if (!(*(unsigned int (**)(void))(*(void *)a1 + 48))()) {
        break;
      }
      uint64_t v10 = *a2;
      uint64_t v11 = *a2 + 40 * v9;
      *(_DWORD *)uint64_t v11 = 0;
      std::string::operator=((std::string *)(v11 + 8), &__p);
      *(void *)(v10 + 40 * v9 + 32) = v22;
      uint64_t v12 = *a2;
      uint64_t v13 = a2[1];
      uint64_t v14 = *a2 + 40 * v7;
      uint64_t v15 = v14 + 40;
      if (v14 + 40 != v13)
      {
        uint64_t v16 = -40 - v12;
        do
        {
          uint64_t v18 = v12 + v6;
          *(_DWORD *)(v12 + v6 + 40) = *(_DWORD *)(v12 + v6 + 80);
          uint64_t v19 = (void **)(v12 + v6 + 48);
          if (*(char *)(v12 + v6 + 71) < 0) {
            operator delete(*v19);
          }
          *(_OWORD *)uint64_t v19 = *(_OWORD *)(v18 + 88);
          uint64_t v17 = *(void *)(v18 + 112);
          *(void *)(v12 + v6 + 64) = *(void *)(v18 + 104);
          *(unsigned char *)(v18 + 111) = 0;
          *(unsigned char *)(v18 + 88) = 0;
          *(void *)(v18 + 72) = v17;
          v16 -= 40;
          v12 += 40;
        }
        while (v12 + v6 + 80 != v13);
        uint64_t v15 = a2[1];
        uint64_t v14 = v6 - v16;
      }
      for (; v15 != v14; v15 -= 40)
      {
        if (*(char *)(v15 - 9) < 0) {
          operator delete(*(void **)(v15 - 32));
        }
      }
      a2[1] = v14;
      ++v8;
    }
    while (0xCCCCCCCCCCCCCCCDLL * ((v14 - *a2) >> 3) > v7);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    v6 += 40;
  }
  while ((uint64_t)v7 < (int)(-1 - 858993459 * ((unint64_t)(a2[1] - *a2) >> 3)));
  return v8;
}

void sub_22C820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22C840(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  if (v2 >= 3 && (int)v2 - 2 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = v7;
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
      __p.__r_.__value_.__s.__data_[0] = 0;
      uint64_t v24 = -1;
      ++v7;
      while ((*(unsigned int (**)(void))(*(void *)a1 + 56))())
      {
        uint64_t v10 = *a2;
        uint64_t v11 = *a2 + 40 * v9;
        *(_DWORD *)uint64_t v11 = 0;
        std::string::operator=((std::string *)(v11 + 8), &__p);
        uint64_t v12 = v7;
        *(void *)(v10 + 40 * v9 + 32) = v24;
        uint64_t v13 = *a2;
        uint64_t v14 = a2[1];
        uint64_t v15 = *a2 + 40 * (v9 + 3);
        if (v15 != v14)
        {
          uint64_t v16 = -40 - v13;
          do
          {
            uint64_t v18 = v13 + v6;
            *(_DWORD *)(v13 + v6 + 40) = *(_DWORD *)(v13 + v6 + 120);
            uint64_t v19 = (void **)(v13 + v6 + 48);
            if (*(char *)(v13 + v6 + 71) < 0) {
              operator delete(*v19);
            }
            *(_OWORD *)uint64_t v19 = *(_OWORD *)(v18 + 128);
            uint64_t v17 = *(void *)(v18 + 152);
            *(void *)(v13 + v6 + 64) = *(void *)(v18 + 144);
            *(unsigned char *)(v18 + 151) = 0;
            *(unsigned char *)(v18 + 128) = 0;
            *(void *)(v18 + 72) = v17;
            v16 -= 40;
            v13 += 40;
          }
          while (v13 + v6 + 120 != v14);
          uint64_t v15 = a2[1];
          uint64_t v20 = v6 - v16;
          uint64_t v7 = v12;
          unint64_t v21 = v9 + 2;
          if (v15 == v6 - v16) {
            goto LABEL_12;
          }
          do
          {
LABEL_24:
            if (*(char *)(v15 - 9) < 0) {
              operator delete(*(void **)(v15 - 32));
            }
            v15 -= 40;
          }
          while (v15 != v20);
          goto LABEL_12;
        }
        uint64_t v7 = v12;
        uint64_t v20 = v13 + 40 * v12;
        unint64_t v21 = v9 + 2;
        if (v15 != v20) {
          goto LABEL_24;
        }
LABEL_12:
        a2[1] = v20;
        ++v8;
        if (0xCCCCCCCCCCCCCCCDLL * ((v20 - *a2) >> 3) <= v21) {
          break;
        }
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      v6 += 40;
      if (v7 >= (int)(-2 - 858993459 * ((unint64_t)(a2[1] - *a2) >> 3))) {
        return v8;
      }
    }
  }
  return 0;
}

void sub_22CACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_22CAEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (a2[1] == *a2) {
    return 0;
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  uint64_t v7 = 0;
  do
  {
    v7 += (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)a1 + 48))(a1, v2 + v5);
    ++v6;
    uint64_t v2 = *a2;
    v5 += 40;
  }
  while (v6 < 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3));
  return v7;
}

void sub_22CBB0(void *a1)
{
  *a1 = off_242B998;
  sub_23052C((uint64_t)(a1 + 1), a1[2]);

  operator delete();
}

uint64_t sub_22CC18(uint64_t a1, _DWORD *a2)
{
  if (*a2 != 8) {
    return 0;
  }
  if (!*(void *)(a1 + 24)) {
    return 0;
  }
  uint64_t v4 = (std::string *)(a2 + 2);
  uint64_t v5 = sub_ADE40(a1 + 8, (uint64_t)(a2 + 2));
  if ((uint64_t *)(a1 + 16) == v5) {
    return 0;
  }
  unint64_t v6 = v5;
  std::string::operator=(v4, (const std::string *)(v5 + 7));
  *a2 = *((_DWORD *)v6 + 20);
  return 1;
}

std::string *sub_22CCA4(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  *(void *)(a1 + 64) = 0;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = *(void *)(a1 + 40);
      uint64_t v2 = (void **)(*(void *)(a1 + 32) + 8);
      *(void *)(a1 + 32) = v2;
      unint64_t v4 = v5 - (void)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 128;
  }
  else
  {
    if (v4 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v6 = 256;
  }
  *(void *)(a1 + 56) = v6;
LABEL_8:
  sub_22D364((void *)(a1 + 24));
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  if (v7 != v8) {
    *(void *)(a1 + 40) = v7 + ((v8 - v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  sub_22D458(a1 + 24);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(unsigned char *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 72) = 0;
  uint64_t result = std::string::assign((std::string *)(a1 + 80), "");
  *(void *)(a1 + 104) = -1;
  return result;
}

BOOL sub_22CD80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  if (!v2) {
    return *(unsigned char *)(a1 + 16) != 0;
  }
  *((unsigned char *)&__p.__r_.__value_.__s + 23) = 0;
  __p.__r_.__value_.__s.__data_[0] = 0;
  uint64_t v6 = -1;
  std::string::operator=(&__p, *(unsigned char *)(*(void *)(*(void *)(a1 + 32)+ (((unint64_t)(v2 + *(void *)(a1 + 56) - 1) >> 5) & 0x7FFFFFFFFFFFFF8))+ 16 * (v2 + *(unsigned char *)(a1 + 56) - 1)));
  unint64_t v3 = *(void *)(a1 + 64) + *(void *)(a1 + 56) - 1;
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a1 + 32) + ((v3 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v3 + 8);
  *(_DWORD *)(a1 + 72) = 0;
  std::string::operator=((std::string *)(a1 + 80), &__p);
  *(void *)(a1 + 104) = v6;
  *(unsigned char *)(a1 + 16) = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_22CE74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_22CE90(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3);
  unint64_t v4 = a1[1];
  BOOL v5 = v3 >= v4;
  unint64_t v6 = v3 - v4;
  if (!v5 || v6 == -1) {
    return v6 + 1;
  }
  unint64_t v9 = 0;
  uint64_t v10 = 120;
  while (2)
  {
    switch(v4)
    {
      case 1uLL:
        if ((*(uint64_t (**)(void *, uint64_t))(*a1 + 48))(a1, v2 + v10 - 120)) {
          goto LABEL_6;
        }
        break;
      case 2uLL:
        if ((*(uint64_t (**)(void *, uint64_t, uint64_t))(*a1 + 56))(a1, v2 + v10 - 120, v2 + v10 - 80)) {
          goto LABEL_6;
        }
        break;
      case 3uLL:
        if ((*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*a1 + 64))(a1, v2 + v10 - 120, v2 + v10 - 80, v2 + v10 - 40))goto LABEL_6; {
        break;
        }
      case 4uLL:
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t, uint64_t))(*a1 + 72))(a1, v2 + v10 - 120, v2 + v10 - 80, v2 + v10 - 40))
        {
          goto LABEL_6;
        }
        break;
      default:
LABEL_6:
        ++v9;
        uint64_t v2 = *a2;
        unint64_t v4 = a1[1];
        unint64_t v6 = 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 3) - v4;
        v10 += 40;
        if (v9 < v6 + 1) {
          continue;
        }
        return v6 + 1;
    }
    return v9;
  }
}

void sub_22D064(uint64_t a1)
{
  *(void *)a1 = off_242BA10;
  if (*(char *)(a1 + 103) < 0) {
    operator delete(*(void **)(a1 + 80));
  }
  sub_431BC(a1 + 24);

  operator delete();
}

uint64_t sub_22D0DC(uint64_t a1, int *a2)
{
  uint64_t v2 = *((unsigned __int8 *)a2 + 31);
  int v3 = (char)v2;
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *((void *)a2 + 2);
  }
  if (!v2) {
    return 1;
  }
  int v5 = *a2;
  if ((*a2 & 0xFFFFFFFE) == 8) {
    return 1;
  }
  uint64_t v7 = (const std::string *)(a2 + 2);
  uint64_t v8 = v3 >= 0 ? (unsigned __int8 *)(a2 + 2) : (unsigned __int8 *)*((void *)a2 + 1);
  int v9 = *v8;
  BOOL v10 = (v9 - 91) > 0x22 || ((1 << (v9 - 91)) & 0x500000005) == 0;
  if (v10 && (v9 - 40) >= 2) {
    return 1;
  }
  switch(v5)
  {
    case '{':
      uint64_t v18 = *(void *)(a1 + 40);
      uint64_t v19 = *(void *)(a1 + 32);
      uint64_t v20 = 32 * (v18 - v19) - 1;
      uint64_t v14 = *((void *)a2 + 4);
      if (v18 == v19) {
        uint64_t v20 = 0;
      }
      unint64_t v21 = *(void *)(a1 + 64) + *(void *)(a1 + 56);
      if (v20 == v21)
      {
        sub_22D5F8(a1 + 24);
        uint64_t v19 = *(void *)(a1 + 32);
        unint64_t v21 = *(void *)(a1 + 64) + *(void *)(a1 + 56);
      }
      uint64_t v16 = (uint64_t *)(*(void *)(v19 + ((v21 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v21);
      uint64_t v17 = 125;
      goto LABEL_32;
    case '[':
      uint64_t v22 = *(void *)(a1 + 40);
      uint64_t v23 = *(void *)(a1 + 32);
      uint64_t v24 = 32 * (v22 - v23) - 1;
      uint64_t v14 = *((void *)a2 + 4);
      if (v22 == v23) {
        uint64_t v24 = 0;
      }
      unint64_t v25 = *(void *)(a1 + 64) + *(void *)(a1 + 56);
      if (v24 == v25)
      {
        sub_22D5F8(a1 + 24);
        uint64_t v23 = *(void *)(a1 + 32);
        unint64_t v25 = *(void *)(a1 + 64) + *(void *)(a1 + 56);
      }
      uint64_t v16 = (uint64_t *)(*(void *)(v23 + ((v25 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v25);
      uint64_t v17 = 93;
      goto LABEL_32;
    case '(':
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = 32 * (v11 - v12) - 1;
      uint64_t v14 = *((void *)a2 + 4);
      if (v11 == v12) {
        uint64_t v13 = 0;
      }
      unint64_t v15 = *(void *)(a1 + 64) + *(void *)(a1 + 56);
      if (v13 == v15)
      {
        sub_22D5F8(a1 + 24);
        uint64_t v12 = *(void *)(a1 + 32);
        unint64_t v15 = *(void *)(a1 + 64) + *(void *)(a1 + 56);
      }
      uint64_t v16 = (uint64_t *)(*(void *)(v12 + ((v15 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v15);
      uint64_t v17 = 41;
LABEL_32:
      uint64_t *v16 = v17;
      v16[1] = v14;
      ++*(void *)(a1 + 64);
      return 1;
  }
  if (v9 != 41 && v9 != 125 && v9 != 93) {
    return 1;
  }
  uint64_t v27 = *(void *)(a1 + 64);
  if (v27
    && v9 == *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 32)
                                            + (((unint64_t)(v27 + *(void *)(a1 + 56) - 1) >> 5) & 0x7FFFFFFFFFFFFF8))
                                + 16 * (v27 + *(unsigned char *)(a1 + 56) - 1)))
  {
    sub_22D58C((void *)(a1 + 24));
    return 1;
  }
  else
  {
    *(unsigned char *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 72) = v5;
    std::string::operator=((std::string *)(a1 + 80), v7);
    uint64_t result = 0;
    *(void *)(a1 + 104) = *((void *)a2 + 4);
  }
  return result;
}

uint64_t sub_22D344()
{
  return 0;
}

uint64_t sub_22D34C()
{
  return 0;
}

uint64_t sub_22D354()
{
  return 0;
}

uint64_t sub_22D35C()
{
  return 0;
}

void sub_22D364(void *a1)
{
  uint64_t v2 = a1[5];
  if (v2)
  {
    unint64_t v3 = a1[4];
    unint64_t v4 = (void **)a1[1];
    if (v3 >= 0x100)
    {
      operator delete(*v4);
      unint64_t v4 = (void **)(a1[1] + 8);
      a1[1] = v4;
      uint64_t v2 = a1[5];
      unint64_t v3 = a1[4] - 256;
      a1[4] = v3;
    }
    int v5 = (void **)a1[2];
    if (v5 == v4) {
      uint64_t v6 = 0;
    }
    else {
      uint64_t v6 = 32 * ((char *)v5 - (char *)v4) - 1;
    }
    if (v6 - (v2 + v3) >= 0x100)
    {
      operator delete(*(v5 - 1));
      a1[2] -= 8;
    }
    uint64_t v7 = (uint64_t)a1;
  }
  else
  {
    uint64_t v8 = a1[2];
    if (v8 != a1[1])
    {
      do
      {
        operator delete(*(void **)(v8 - 8));
        uint64_t v9 = a1[1];
        uint64_t v8 = a1[2] - 8;
        a1[2] = v8;
      }
      while (v8 != v9);
    }
    a1[4] = 0;
    uint64_t v7 = (uint64_t)a1;
  }
  sub_22D458(v7);
}

void sub_22D458(uint64_t a1)
{
  uint64_t v1 = *(char **)(a1 + 16);
  uint64_t v2 = *(void **)a1;
  unint64_t v3 = *(char **)(a1 + 8);
  int64_t v4 = v1 - v3;
  unint64_t v5 = (v1 - v3) >> 3;
  if (v5 >= (uint64_t)(*(void *)(a1 + 24) - *(void *)a1) >> 3) {
    return;
  }
  if (v1 == v3)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v5;
    goto LABEL_13;
  }
  if (v4 < 0) {
    sub_188D718();
  }
  uint64_t v7 = operator new(v1 - v3);
  uint64_t v8 = (uint64_t)&v7[v5];
  if ((unint64_t)(v4 - 8) < 0x18)
  {
    uint64_t v9 = v7;
    do
    {
LABEL_12:
      uint64_t v17 = *(void *)v3;
      v3 += 8;
      *v9++ = v17;
    }
    while (v9 != (void *)v8);
    goto LABEL_13;
  }
  uint64_t v9 = v7;
  if ((unint64_t)((char *)v7 - v3) < 0x20) {
    goto LABEL_12;
  }
  uint64_t v10 = 0;
  unint64_t v11 = ((unint64_t)(v4 - 8) >> 3) + 1;
  uint64_t v12 = v11 & 0x3FFFFFFFFFFFFFFCLL;
  uint64_t v9 = &v7[v12];
  uint64_t v13 = &v3[v12 * 8];
  uint64_t v14 = v11 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    unint64_t v15 = &v7[v10];
    long long v16 = *(_OWORD *)&v3[v10 * 8 + 16];
    *unint64_t v15 = *(_OWORD *)&v3[v10 * 8];
    v15[1] = v16;
    v10 += 4;
    v14 -= 4;
  }
  while (v14);
  unint64_t v3 = v13;
  if (v11 != (v11 & 0x3FFFFFFFFFFFFFFCLL)) {
    goto LABEL_12;
  }
LABEL_13:
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v8;
  if (v2)
  {
    operator delete(v2);
  }
}

void sub_22D58C(void *a1)
{
  uint64_t v2 = a1[1];
  uint64_t v1 = a1[2];
  uint64_t v3 = 32 * (v1 - v2) - 1;
  BOOL v4 = v1 == v2;
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  if (v4) {
    uint64_t v3 = 0;
  }
  a1[5] = v5 - 1;
  if ((unint64_t)(v3 - (v5 + v6) + 1) >= 0x200)
  {
    operator delete(*(void **)(v1 - 8));
    a1[2] -= 8;
  }
}

void sub_22D5F8(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    *(void *)(a1 + 32) = v4;
    uint64_t v6 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v6 + 1);
    uint64_t v8 = *v6;
    *(void *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_80:
      *(void *)uint64_t v5 = v8;
      *(void *)(a1 + 16) += 8;
      return;
    }
    uint64_t v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v31 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v31 = 1;
      }
      if (!(v31 >> 61))
      {
        unint64_t v32 = v31 >> 2;
        uint64_t v33 = 8 * v31;
        uint64_t v34 = (char *)operator new(8 * v31);
        uint64_t v35 = &v34[8 * v32];
        char v36 = &v34[v33];
        int64_t v38 = v5 - v7;
        BOOL v37 = v5 == v7;
        uint64_t v5 = v35;
        if (!v37)
        {
          uint64_t v5 = &v35[v38 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v39 = v38 - 8;
          if ((unint64_t)(v38 - 8) >= 0x38)
          {
            uint64_t v74 = &v34[8 * v32];
            char v40 = v74;
            if ((unint64_t)(v74 - v7) >= 0x20)
            {
              uint64_t v75 = (v39 >> 3) + 1;
              uint64_t v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
              char v40 = &v35[v76];
              v7 += v76;
              uint64_t v77 = (long long *)(v6 + 3);
              unint64_t v78 = v74 + 16;
              uint64_t v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v80 = *v77;
                *(v78 - 1) = *(v77 - 1);
                *unint64_t v78 = v80;
                v77 += 2;
                v78 += 2;
                v79 -= 4;
              }
              while (v79);
              if (v75 == (v75 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            char v40 = &v34[8 * v32];
          }
          do
          {
            uint64_t v81 = *(void *)v7;
            v7 += 8;
            *(void *)char v40 = v81;
            v40 += 8;
          }
          while (v40 != v5);
        }
        goto LABEL_78;
      }
LABEL_89:
      sub_188D718();
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    if (v11 >= -1) {
      uint64_t v12 = v11 + 1;
    }
    else {
      uint64_t v12 = v11 + 2;
    }
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = -v13;
    unint64_t v15 = &v7[-8 * v13];
    int64_t v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      uint64_t v7 = *(char **)(a1 + 8);
    }
    uint64_t v5 = &v15[v16];
    *(void *)(a1 + 8) = &v7[8 * v14];
    *(void *)(a1 + 16) = &v15[v16];
    goto LABEL_80;
  }
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = v18 - v19;
  uint64_t v21 = (v18 - v19) >> 3;
  uint64_t v22 = v17 - *(void *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      uint64_t v91 = operator new(0x1000uLL);
      sub_22368((char **)a1, &v91);
      return;
    }
    uint64_t v91 = operator new(0x1000uLL);
    sub_224F8((void **)a1, &v91);
    long long v41 = *(void **)(a1 + 8);
    uint64_t v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v41 + 1);
    uint64_t v8 = *v41;
    *(void *)(a1 + 8) = v41 + 1;
    if (v5 != *(char **)(a1 + 24)) {
      goto LABEL_80;
    }
    uint64_t v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v42 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v42 = 1;
      }
      if (!(v42 >> 61))
      {
        unint64_t v43 = v42 >> 2;
        uint64_t v44 = 8 * v42;
        uint64_t v34 = (char *)operator new(8 * v42);
        uint64_t v35 = &v34[8 * v43];
        char v36 = &v34[v44];
        int64_t v45 = v5 - v7;
        BOOL v37 = v5 == v7;
        uint64_t v5 = v35;
        if (!v37)
        {
          uint64_t v5 = &v35[v45 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v46 = v45 - 8;
          if ((unint64_t)(v45 - 8) >= 0x38)
          {
            uint64_t v82 = &v34[8 * v43];
            std::string::value_type v47 = v82;
            if ((unint64_t)(v82 - v7) >= 0x20)
            {
              uint64_t v83 = (v46 >> 3) + 1;
              uint64_t v84 = 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
              std::string::value_type v47 = &v35[v84];
              v7 += v84;
              unint64_t v85 = (long long *)(v41 + 3);
              unint64_t v86 = v82 + 16;
              uint64_t v87 = v83 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v88 = *v85;
                *(v86 - 1) = *(v85 - 1);
                *unint64_t v86 = v88;
                v85 += 2;
                v86 += 2;
                v87 -= 4;
              }
              while (v87);
              if (v83 == (v83 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            std::string::value_type v47 = &v34[8 * v43];
          }
          do
          {
            uint64_t v89 = *(void *)v7;
            v7 += 8;
            *(void *)std::string::value_type v47 = v89;
            v47 += 8;
          }
          while (v47 != v5);
        }
LABEL_78:
        *(void *)a1 = v34;
        *(void *)(a1 + 8) = v35;
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v36;
        if (v9)
        {
          operator delete(v9);
          uint64_t v5 = *(char **)(a1 + 16);
        }
        goto LABEL_80;
      }
      goto LABEL_89;
    }
    goto LABEL_5;
  }
  uint64_t v23 = v22 >> 2;
  if (v17 == *(void *)a1) {
    unint64_t v24 = 1;
  }
  else {
    unint64_t v24 = v23;
  }
  if (v24 >> 61) {
    goto LABEL_89;
  }
  unint64_t v25 = (char *)operator new(8 * v24);
  uint64_t v26 = operator new(0x1000uLL);
  uint64_t v27 = &v25[8 * v21];
  uint64_t v28 = &v25[8 * v24];
  if (v21 == v24)
  {
    int64_t v90 = v26;
    if (v20 < 1)
    {
      if (v18 == v19) {
        unint64_t v48 = 1;
      }
      else {
        unint64_t v48 = v20 >> 2;
      }
      if (v48 >> 61) {
        sub_188D718();
      }
      unint64_t v49 = (char *)operator new(8 * v48);
      uint64_t v27 = &v49[8 * (v48 >> 2)];
      uint64_t v28 = &v49[8 * v48];
      operator delete(v25);
      uint64_t v50 = *(void *)(a1 + 8);
      uint64_t v18 = *(void *)(a1 + 16);
      unint64_t v25 = v49;
      *(void *)uint64_t v27 = v90;
      unint64_t v29 = v27 + 8;
      if (v18 == v50) {
        goto LABEL_45;
      }
    }
    else
    {
      unint64_t v30 = v21 + 2;
      if (v21 >= -1) {
        unint64_t v30 = v21 + 1;
      }
      v27 -= 8 * (v30 >> 1);
      *(void *)uint64_t v27 = v26;
      unint64_t v29 = v27 + 8;
      if (v18 == v19) {
        goto LABEL_45;
      }
    }
    do
    {
LABEL_52:
      if (v27 == v25)
      {
        if (v29 >= v28)
        {
          if (v28 == v27) {
            unint64_t v59 = 1;
          }
          else {
            unint64_t v59 = (v28 - v27) >> 2;
          }
          if (v59 >> 61) {
            sub_188D718();
          }
          unint64_t v60 = (char *)operator new(8 * v59);
          unint64_t v25 = v60;
          unint64_t v61 = (v59 + 3) >> 2;
          unint64_t v53 = &v60[8 * v61];
          int64_t v62 = v29 - v27;
          BOOL v37 = v29 == v27;
          unint64_t v29 = v53;
          if (!v37)
          {
            unint64_t v29 = &v53[v62 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v63 = v62 - 8;
            unint64_t v64 = &v60[8 * v61];
            long long v65 = v27;
            if (v63 < 0x38) {
              goto LABEL_93;
            }
            uint64_t v66 = 8 * v61;
            unint64_t v64 = &v60[8 * v61];
            long long v65 = v27;
            if ((unint64_t)(v64 - v27) < 0x20) {
              goto LABEL_93;
            }
            uint64_t v67 = (v63 >> 3) + 1;
            uint64_t v68 = 8 * (v67 & 0x3FFFFFFFFFFFFFFCLL);
            unint64_t v64 = &v53[v68];
            long long v65 = &v27[v68];
            std::string::value_type v69 = (long long *)(v27 + 16);
            BOOL v70 = &v60[v66 + 16];
            uint64_t v71 = v67 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v72 = *v69;
              *((_OWORD *)v70 - 1) = *(v69 - 1);
              *(_OWORD *)BOOL v70 = v72;
              v69 += 2;
              v70 += 32;
              v71 -= 4;
            }
            while (v71);
            if (v67 != (v67 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_93:
              do
              {
                uint64_t v73 = *(void *)v65;
                v65 += 8;
                *(void *)unint64_t v64 = v73;
                v64 += 8;
              }
              while (v64 != v29);
            }
          }
          uint64_t v28 = &v60[8 * v59];
          operator delete(v27);
        }
        else
        {
          uint64_t v55 = (v28 - v29) >> 3;
          if (v55 >= -1) {
            unint64_t v56 = v55 + 1;
          }
          else {
            unint64_t v56 = v55 + 2;
          }
          unint64_t v57 = &v29[8 * (v56 >> 1)];
          unint64_t v53 = &v57[-(v29 - v27)];
          size_t v58 = v29 - v27;
          BOOL v37 = v29 == v27;
          unint64_t v29 = v57;
          if (!v37) {
            memmove(v53, v27, v58);
          }
          unint64_t v25 = v27;
        }
      }
      else
      {
        unint64_t v53 = v27;
      }
      uint64_t v54 = *(void *)(v18 - 8);
      v18 -= 8;
      *((void *)v53 - 1) = v54;
      uint64_t v51 = v53 - 8;
      uint64_t v27 = v51;
    }
    while (v18 != *(void *)(a1 + 8));
    goto LABEL_46;
  }
  *(void *)uint64_t v27 = v26;
  unint64_t v29 = v27 + 8;
  if (v18 != v19) {
    goto LABEL_52;
  }
LABEL_45:
  uint64_t v51 = v27;
LABEL_46:
  uint64_t v52 = *(char **)a1;
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v51;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v28;
  if (v52)
  {
    operator delete(v52);
  }
}

void sub_22DB68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_22DB84(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_22DB98(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_22DBB0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_22DBC8(void *result)
{
  result[4] = result[3];
  result[2] = 0;
  return result;
}

BOOL sub_22DBD8(uint64_t a1)
{
  return *(void *)(a1 + 24) == *(void *)(a1 + 32);
}

void sub_22DBE8(void *a1)
{
  *a1 = off_242BA70;
  unint64_t v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }

  operator delete();
}

uint64_t sub_22DC58(void *a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == 7)
  {
    uint64_t v5 = *(unsigned __int8 **)(a2 + 8);
    uint64_t v3 = a2 + 8;
    unint64_t v4 = v5;
    uint64_t v6 = *(unsigned __int8 *)(v3 + 23);
    if ((v6 & 0x80u) != 0) {
      uint64_t v6 = *(void *)(v3 + 8);
    }
    else {
      unint64_t v4 = (unsigned __int8 *)v3;
    }
    uint64_t v28 = 0;
    unint64_t v29 = v4;
    if ((sub_BECC4(&v29, &v4[v6], (double *)&v28) & 1) == 0)
    {
      uint64_t v8 = (char *)a1[4];
      unint64_t v7 = a1[5];
      if ((unint64_t)v8 >= v7)
      {
        uint64_t v10 = (char *)a1[3];
        uint64_t v11 = (v8 - v10) >> 3;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 61) {
          sub_2E00();
        }
        uint64_t v13 = v7 - (void)v10;
        if (v13 >> 2 > v12) {
          unint64_t v12 = v13 >> 2;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          if (v14 >> 61) {
            sub_188D718();
          }
          unint64_t v15 = operator new(8 * v14);
        }
        else
        {
          unint64_t v15 = 0;
        }
        int64_t v16 = &v15[8 * v11];
        uint64_t v17 = &v15[8 * v14];
        void *v16 = a1[2];
        uint64_t v9 = v16 + 1;
        if (v8 != v10)
        {
          unint64_t v18 = v8 - v10 - 8;
          if (v18 < 0x58) {
            goto LABEL_33;
          }
          if ((unint64_t)(v10 - v15) < 0x20) {
            goto LABEL_33;
          }
          uint64_t v19 = (v18 >> 3) + 1;
          uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
          uint64_t v21 = &v8[-v20];
          int64_t v16 = (void *)((char *)v16 - v20);
          uint64_t v22 = &v15[8 * v11 - 16];
          uint64_t v23 = v8 - 16;
          uint64_t v24 = v19 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v25 = *(_OWORD *)v23;
            *(v22 - 1) = *((_OWORD *)v23 - 1);
            *uint64_t v22 = v25;
            v22 -= 2;
            v23 -= 32;
            v24 -= 4;
          }
          while (v24);
          uint64_t v8 = v21;
          if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_33:
            do
            {
              uint64_t v26 = *((void *)v8 - 1);
              v8 -= 8;
              *--int64_t v16 = v26;
            }
            while (v8 != v10);
          }
        }
        a1[3] = v16;
        a1[4] = v9;
        a1[5] = v17;
        if (v10) {
          operator delete(v10);
        }
      }
      else
      {
        *(void *)uint64_t v8 = a1[2];
        uint64_t v9 = v8 + 8;
      }
      a1[4] = v9;
    }
  }
  ++a1[2];
  return 1;
}

uint64_t sub_22DE08(uint64_t a1)
{
  *(void *)a1 = off_242BAD0;
  *(void *)(a1 + 8) = 2;
  *(void *)(a1 + 24) = 0;
  unint64_t v2 = (uint64_t **)(a1 + 24);
  *(void *)(a1 + 16) = a1 + 24;
  uint64_t v3 = (void **)(a1 + 16);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  unint64_t v4 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v4 + 28) = 0x700000007;
  *unint64_t v4 = 0;
  v4[1] = 0;
  v4[2] = (uint64_t)v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v4;
  sub_2F250(v4, v4);
  uint64_t v5 = *(void *)(a1 + 24);
  ++*(void *)(a1 + 32);
  uint64_t v6 = v2;
  uint64_t v7 = (uint64_t)v2;
  if (!v5) {
    goto LABEL_10;
  }
  uint64_t v8 = v5;
  do
  {
    while (1)
    {
      uint64_t v7 = v8;
      int v9 = *(_DWORD *)(v8 + 28);
      if (v9 <= 9)
      {
        if (v9 != 9) {
          goto LABEL_8;
        }
        int v10 = *(_DWORD *)(v7 + 32);
        if (v10 < 10) {
          break;
        }
      }
      uint64_t v8 = *(void *)v7;
      uint64_t v6 = (uint64_t **)v7;
      if (!*(void *)v7) {
        goto LABEL_10;
      }
    }
    if (v10 == 9) {
      goto LABEL_13;
    }
LABEL_8:
    uint64_t v8 = *(void *)(v7 + 8);
  }
  while (v8);
  uint64_t v6 = (uint64_t **)(v7 + 8);
LABEL_10:
  uint64_t v11 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v11 + 28) = 0x900000009;
  uint64_t *v11 = 0;
  v11[1] = 0;
  v11[2] = v7;
  *uint64_t v6 = v11;
  unint64_t v12 = (void *)**v3;
  if (v12)
  {
    *uint64_t v3 = v12;
    uint64_t v11 = *v6;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), v11);
  uint64_t v5 = *(void *)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_13:
  uint64_t v13 = v2;
  uint64_t v14 = (uint64_t)v2;
  if (v5)
  {
    uint64_t v15 = v5;
    while (1)
    {
      uint64_t v14 = v15;
      int v16 = *(_DWORD *)(v15 + 28);
      if (v16 > 7) {
        goto LABEL_15;
      }
      if (v16 == 7)
      {
        int v17 = *(_DWORD *)(v14 + 32);
        if (v17 < 10)
        {
          if (v17 == 9) {
            goto LABEL_25;
          }
          goto LABEL_20;
        }
LABEL_15:
        uint64_t v15 = *(void *)v14;
        uint64_t v13 = (uint64_t **)v14;
        if (!*(void *)v14) {
          break;
        }
      }
      else
      {
LABEL_20:
        uint64_t v15 = *(void *)(v14 + 8);
        if (!v15)
        {
          uint64_t v13 = (uint64_t **)(v14 + 8);
          break;
        }
      }
    }
  }
  unint64_t v18 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v18 + 28) = 0x900000007;
  *unint64_t v18 = 0;
  v18[1] = 0;
  v18[2] = v14;
  char *v13 = v18;
  uint64_t v19 = (void *)**v3;
  if (v19)
  {
    *uint64_t v3 = v19;
    unint64_t v18 = *v13;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), v18);
  uint64_t v5 = *(void *)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_25:
  uint64_t v20 = v2;
  uint64_t v21 = (uint64_t)v2;
  if (!v5) {
    goto LABEL_34;
  }
  while (2)
  {
    while (1)
    {
      uint64_t v21 = v5;
      int v22 = *(_DWORD *)(v5 + 28);
      if (v22 <= 9)
      {
        if (v22 != 9) {
          goto LABEL_32;
        }
        int v23 = *(_DWORD *)(v21 + 32);
        if (v23 < 8) {
          break;
        }
      }
      uint64_t v5 = *(void *)v21;
      uint64_t v20 = (uint64_t **)v21;
      if (!*(void *)v21) {
        goto LABEL_34;
      }
    }
    if (v23 == 7) {
      goto LABEL_37;
    }
LABEL_32:
    uint64_t v5 = *(void *)(v21 + 8);
    if (v5) {
      continue;
    }
    break;
  }
  uint64_t v20 = (uint64_t **)(v21 + 8);
LABEL_34:
  uint64_t v24 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v24 + 28) = 0x700000009;
  *uint64_t v24 = 0;
  v24[1] = 0;
  v24[2] = v21;
  *uint64_t v20 = v24;
  long long v25 = (void *)**v3;
  if (v25)
  {
    *uint64_t v3 = v25;
    uint64_t v24 = *v20;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), v24);
  ++*(void *)(a1 + 32);
LABEL_37:
  sub_22E184((uint64_t *)a1, 10);
  sub_22E184((uint64_t *)a1, 16);
  sub_22E184((uint64_t *)a1, 17);
  sub_22E184((uint64_t *)a1, 18);
  sub_22E184((uint64_t *)a1, 19);
  sub_22E184((uint64_t *)a1, 20);
  sub_22E184((uint64_t *)a1, 60);
  sub_22E184((uint64_t *)a1, 62);
  sub_22E184((uint64_t *)a1, 61);
  sub_22E184((uint64_t *)a1, 44);
  sub_22E184((uint64_t *)a1, 43);
  sub_22E184((uint64_t *)a1, 45);
  sub_22E184((uint64_t *)a1, 47);
  sub_22E184((uint64_t *)a1, 42);
  sub_22E184((uint64_t *)a1, 37);
  sub_22E184((uint64_t *)a1, 94);
  sub_22E184((uint64_t *)a1, 58);
  sub_22E184((uint64_t *)a1, 63);
  return a1;
}

void sub_22E164(_Unwind_Exception *a1)
{
  sub_22EB84(v2);
  sub_22EFF4(v1, *v3);
  _Unwind_Resume(a1);
}

uint64_t *sub_22E184(uint64_t *result, signed int a2)
{
  uint64_t v3 = result;
  uint64_t v5 = (uint64_t **)(result + 3);
  uint64_t v4 = result[3];
  uint64_t v6 = (uint64_t **)(result + 3);
  uint64_t v7 = result + 3;
  if (v4)
  {
    uint64_t v8 = result[3];
    while (1)
    {
      uint64_t v7 = (uint64_t *)v8;
      int v9 = *(_DWORD *)(v8 + 28);
      if (v9 > a2) {
        goto LABEL_3;
      }
      if (v9 < a2)
      {
LABEL_8:
        uint64_t v8 = v7[1];
        if (!v8)
        {
          uint64_t v6 = (uint64_t **)(v7 + 1);
          break;
        }
      }
      else
      {
        int v10 = *((_DWORD *)v7 + 8);
        if (v10 < 11)
        {
          if (v10 == 10) {
            goto LABEL_14;
          }
          goto LABEL_8;
        }
LABEL_3:
        uint64_t v8 = *v7;
        uint64_t v6 = (uint64_t **)v7;
        if (!*v7) {
          break;
        }
      }
    }
  }
  uint64_t v11 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v11 + 28) = a2 | 0xA00000000;
  uint64_t *v11 = 0;
  v11[1] = 0;
  v11[2] = (uint64_t)v7;
  *uint64_t v6 = v11;
  uint64_t v12 = *(void *)v3[2];
  if (v12)
  {
    v3[2] = v12;
    uint64_t v13 = *v6;
  }
  else
  {
    uint64_t v13 = v11;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v13);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_14:
  uint64_t v14 = v5;
  uint64_t v15 = v5;
  if (v4)
  {
    uint64_t v16 = v4;
    while (1)
    {
      uint64_t v15 = (void *)v16;
      int v17 = *(_DWORD *)(v16 + 28);
      if (v17 > a2) {
        goto LABEL_16;
      }
      if (v17 < a2)
      {
LABEL_21:
        uint64_t v16 = v15[1];
        if (!v16)
        {
          uint64_t v14 = (uint64_t **)(v15 + 1);
          break;
        }
      }
      else
      {
        int v18 = *((_DWORD *)v15 + 8);
        if (v18 < 17)
        {
          if (v18 == 16) {
            goto LABEL_27;
          }
          goto LABEL_21;
        }
LABEL_16:
        uint64_t v16 = *v15;
        uint64_t v14 = (uint64_t **)v15;
        if (!*v15) {
          break;
        }
      }
    }
  }
  uint64_t v19 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v19 + 28) = a2 | 0x1000000000;
  *uint64_t v19 = 0;
  v19[1] = 0;
  v19[2] = (uint64_t)v15;
  *uint64_t v14 = v19;
  uint64_t v20 = *(void *)v3[2];
  if (v20)
  {
    v3[2] = v20;
    uint64_t v21 = *v14;
  }
  else
  {
    uint64_t v21 = v19;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v21);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_27:
  int v22 = v5;
  int v23 = v5;
  if (v4)
  {
    uint64_t v24 = v4;
    while (1)
    {
      int v23 = (void *)v24;
      int v25 = *(_DWORD *)(v24 + 28);
      if (v25 > a2) {
        goto LABEL_29;
      }
      if (v25 < a2)
      {
LABEL_34:
        uint64_t v24 = v23[1];
        if (!v24)
        {
          int v22 = (uint64_t **)(v23 + 1);
          break;
        }
      }
      else
      {
        int v26 = *((_DWORD *)v23 + 8);
        if (v26 < 18)
        {
          if (v26 == 17) {
            goto LABEL_40;
          }
          goto LABEL_34;
        }
LABEL_29:
        uint64_t v24 = *v23;
        int v22 = (uint64_t **)v23;
        if (!*v23) {
          break;
        }
      }
    }
  }
  uint64_t v27 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v27 + 28) = a2 | 0x1100000000;
  *uint64_t v27 = 0;
  v27[1] = 0;
  v27[2] = (uint64_t)v23;
  *int v22 = v27;
  uint64_t v28 = *(void *)v3[2];
  if (v28)
  {
    v3[2] = v28;
    unint64_t v29 = *v22;
  }
  else
  {
    unint64_t v29 = v27;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v29);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_40:
  unint64_t v30 = v5;
  unint64_t v31 = v5;
  if (v4)
  {
    uint64_t v32 = v4;
    while (1)
    {
      unint64_t v31 = (void *)v32;
      int v33 = *(_DWORD *)(v32 + 28);
      if (v33 > a2) {
        goto LABEL_42;
      }
      if (v33 < a2)
      {
LABEL_47:
        uint64_t v32 = v31[1];
        if (!v32)
        {
          unint64_t v30 = (uint64_t **)(v31 + 1);
          break;
        }
      }
      else
      {
        int v34 = *((_DWORD *)v31 + 8);
        if (v34 < 19)
        {
          if (v34 == 18) {
            goto LABEL_53;
          }
          goto LABEL_47;
        }
LABEL_42:
        uint64_t v32 = *v31;
        unint64_t v30 = (uint64_t **)v31;
        if (!*v31) {
          break;
        }
      }
    }
  }
  uint64_t v35 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v35 + 28) = a2 | 0x1200000000;
  uint64_t *v35 = 0;
  v35[1] = 0;
  v35[2] = (uint64_t)v31;
  void *v30 = v35;
  uint64_t v36 = *(void *)v3[2];
  if (v36)
  {
    v3[2] = v36;
    BOOL v37 = *v30;
  }
  else
  {
    BOOL v37 = v35;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v37);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_53:
  int64_t v38 = v5;
  unint64_t v39 = v5;
  if (v4)
  {
    uint64_t v40 = v4;
    while (1)
    {
      unint64_t v39 = (void *)v40;
      int v41 = *(_DWORD *)(v40 + 28);
      if (v41 > a2) {
        goto LABEL_55;
      }
      if (v41 < a2)
      {
LABEL_60:
        uint64_t v40 = v39[1];
        if (!v40)
        {
          int64_t v38 = (uint64_t **)(v39 + 1);
          break;
        }
      }
      else
      {
        int v42 = *((_DWORD *)v39 + 8);
        if (v42 < 20)
        {
          if (v42 == 19) {
            goto LABEL_66;
          }
          goto LABEL_60;
        }
LABEL_55:
        uint64_t v40 = *v39;
        int64_t v38 = (uint64_t **)v39;
        if (!*v39) {
          break;
        }
      }
    }
  }
  unint64_t v43 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v43 + 28) = a2 | 0x1300000000;
  *unint64_t v43 = 0;
  v43[1] = 0;
  v43[2] = (uint64_t)v39;
  *int64_t v38 = v43;
  uint64_t v44 = *(void *)v3[2];
  if (v44)
  {
    v3[2] = v44;
    int64_t v45 = *v38;
  }
  else
  {
    int64_t v45 = v43;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v45);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_66:
  unint64_t v46 = v5;
  std::string::value_type v47 = v5;
  if (v4)
  {
    uint64_t v48 = v4;
    while (1)
    {
      std::string::value_type v47 = (void *)v48;
      int v49 = *(_DWORD *)(v48 + 28);
      if (v49 > a2) {
        goto LABEL_68;
      }
      if (v49 < a2)
      {
LABEL_73:
        uint64_t v48 = v47[1];
        if (!v48)
        {
          unint64_t v46 = (uint64_t **)(v47 + 1);
          break;
        }
      }
      else
      {
        int v50 = *((_DWORD *)v47 + 8);
        if (v50 < 21)
        {
          if (v50 == 20) {
            goto LABEL_79;
          }
          goto LABEL_73;
        }
LABEL_68:
        uint64_t v48 = *v47;
        unint64_t v46 = (uint64_t **)v47;
        if (!*v47) {
          break;
        }
      }
    }
  }
  uint64_t v51 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v51 + 28) = a2 | 0x1400000000;
  *uint64_t v51 = 0;
  v51[1] = 0;
  v51[2] = (uint64_t)v47;
  *unint64_t v46 = v51;
  uint64_t v52 = *(void *)v3[2];
  if (v52)
  {
    v3[2] = v52;
    unint64_t v53 = *v46;
  }
  else
  {
    unint64_t v53 = v51;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v53);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_79:
  uint64_t v54 = v5;
  uint64_t v55 = v5;
  if (v4)
  {
    uint64_t v56 = v4;
    while (1)
    {
      uint64_t v55 = (void *)v56;
      int v57 = *(_DWORD *)(v56 + 28);
      if (v57 > a2) {
        goto LABEL_81;
      }
      if (v57 < a2)
      {
LABEL_86:
        uint64_t v56 = v55[1];
        if (!v56)
        {
          uint64_t v54 = (uint64_t **)(v55 + 1);
          break;
        }
      }
      else
      {
        int v58 = *((_DWORD *)v55 + 8);
        if (v58 < 61)
        {
          if (v58 == 60) {
            goto LABEL_92;
          }
          goto LABEL_86;
        }
LABEL_81:
        uint64_t v56 = *v55;
        uint64_t v54 = (uint64_t **)v55;
        if (!*v55) {
          break;
        }
      }
    }
  }
  unint64_t v59 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v59 + 28) = a2 | 0x3C00000000;
  uint64_t *v59 = 0;
  v59[1] = 0;
  v59[2] = (uint64_t)v55;
  std::string *v54 = v59;
  uint64_t v60 = *(void *)v3[2];
  if (v60)
  {
    v3[2] = v60;
    unint64_t v61 = *v54;
  }
  else
  {
    unint64_t v61 = v59;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v61);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_92:
  int64_t v62 = v5;
  unint64_t v63 = v5;
  if (v4)
  {
    uint64_t v64 = v4;
    while (1)
    {
      unint64_t v63 = (void *)v64;
      int v65 = *(_DWORD *)(v64 + 28);
      if (v65 > a2) {
        goto LABEL_94;
      }
      if (v65 < a2)
      {
LABEL_99:
        uint64_t v64 = v63[1];
        if (!v64)
        {
          int64_t v62 = (uint64_t **)(v63 + 1);
          break;
        }
      }
      else
      {
        int v66 = *((_DWORD *)v63 + 8);
        if (v66 < 63)
        {
          if (v66 == 62) {
            goto LABEL_105;
          }
          goto LABEL_99;
        }
LABEL_94:
        uint64_t v64 = *v63;
        int64_t v62 = (uint64_t **)v63;
        if (!*v63) {
          break;
        }
      }
    }
  }
  uint64_t v67 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v67 + 28) = a2 | 0x3E00000000;
  uint64_t *v67 = 0;
  v67[1] = 0;
  v67[2] = (uint64_t)v63;
  *int64_t v62 = v67;
  uint64_t v68 = *(void *)v3[2];
  if (v68)
  {
    v3[2] = v68;
    std::string::value_type v69 = *v62;
  }
  else
  {
    std::string::value_type v69 = v67;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v69);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_105:
  BOOL v70 = v5;
  uint64_t v71 = v5;
  if (v4)
  {
    uint64_t v72 = v4;
    while (1)
    {
      uint64_t v71 = (void *)v72;
      int v73 = *(_DWORD *)(v72 + 28);
      if (v73 > a2) {
        goto LABEL_107;
      }
      if (v73 < a2)
      {
LABEL_112:
        uint64_t v72 = v71[1];
        if (!v72)
        {
          BOOL v70 = (uint64_t **)(v71 + 1);
          break;
        }
      }
      else
      {
        int v74 = *((_DWORD *)v71 + 8);
        if (v74 < 62)
        {
          if (v74 == 61) {
            goto LABEL_118;
          }
          goto LABEL_112;
        }
LABEL_107:
        uint64_t v72 = *v71;
        BOOL v70 = (uint64_t **)v71;
        if (!*v71) {
          break;
        }
      }
    }
  }
  uint64_t v75 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v75 + 28) = a2 | 0x3D00000000;
  *uint64_t v75 = 0;
  v75[1] = 0;
  v75[2] = (uint64_t)v71;
  char *v70 = v75;
  uint64_t v76 = *(void *)v3[2];
  if (v76)
  {
    v3[2] = v76;
    uint64_t v77 = *v70;
  }
  else
  {
    uint64_t v77 = v75;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v77);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_118:
  unint64_t v78 = v5;
  uint64_t v79 = v5;
  if (v4)
  {
    uint64_t v80 = v4;
    while (1)
    {
      uint64_t v79 = (void *)v80;
      int v81 = *(_DWORD *)(v80 + 28);
      if (v81 > a2) {
        goto LABEL_120;
      }
      if (v81 < a2)
      {
LABEL_125:
        uint64_t v80 = v79[1];
        if (!v80)
        {
          unint64_t v78 = (uint64_t **)(v79 + 1);
          break;
        }
      }
      else
      {
        int v82 = *((_DWORD *)v79 + 8);
        if (v82 < 45)
        {
          if (v82 == 44) {
            goto LABEL_131;
          }
          goto LABEL_125;
        }
LABEL_120:
        uint64_t v80 = *v79;
        unint64_t v78 = (uint64_t **)v79;
        if (!*v79) {
          break;
        }
      }
    }
  }
  uint64_t v83 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v83 + 28) = a2 | 0x2C00000000;
  *uint64_t v83 = 0;
  v83[1] = 0;
  v83[2] = (uint64_t)v79;
  *unint64_t v78 = v83;
  uint64_t v84 = *(void *)v3[2];
  if (v84)
  {
    v3[2] = v84;
    unint64_t v85 = *v78;
  }
  else
  {
    unint64_t v85 = v83;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v85);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_131:
  unint64_t v86 = v5;
  uint64_t v87 = v5;
  if (v4)
  {
    uint64_t v88 = v4;
    while (1)
    {
      uint64_t v87 = (void *)v88;
      int v89 = *(_DWORD *)(v88 + 28);
      if (v89 > a2) {
        goto LABEL_133;
      }
      if (v89 < a2)
      {
LABEL_138:
        uint64_t v88 = v87[1];
        if (!v88)
        {
          unint64_t v86 = (uint64_t **)(v87 + 1);
          break;
        }
      }
      else
      {
        int v90 = *((_DWORD *)v87 + 8);
        if (v90 < 48)
        {
          if (v90 == 47) {
            goto LABEL_144;
          }
          goto LABEL_138;
        }
LABEL_133:
        uint64_t v88 = *v87;
        unint64_t v86 = (uint64_t **)v87;
        if (!*v87) {
          break;
        }
      }
    }
  }
  uint64_t v91 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v91 + 28) = a2 | 0x2F00000000;
  *uint64_t v91 = 0;
  v91[1] = 0;
  v91[2] = (uint64_t)v87;
  *unint64_t v86 = v91;
  uint64_t v92 = *(void *)v3[2];
  if (v92)
  {
    v3[2] = v92;
    uint64_t v93 = *v86;
  }
  else
  {
    uint64_t v93 = v91;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v93);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_144:
  unint64_t v94 = v5;
  long long v95 = v5;
  if (v4)
  {
    uint64_t v96 = v4;
    while (1)
    {
      long long v95 = (void *)v96;
      int v97 = *(_DWORD *)(v96 + 28);
      if (v97 > a2) {
        goto LABEL_146;
      }
      if (v97 < a2)
      {
LABEL_151:
        uint64_t v96 = v95[1];
        if (!v96)
        {
          unint64_t v94 = (uint64_t **)(v95 + 1);
          break;
        }
      }
      else
      {
        int v98 = *((_DWORD *)v95 + 8);
        if (v98 < 43)
        {
          if (v98 == 42) {
            goto LABEL_157;
          }
          goto LABEL_151;
        }
LABEL_146:
        uint64_t v96 = *v95;
        unint64_t v94 = (uint64_t **)v95;
        if (!*v95) {
          break;
        }
      }
    }
  }
  unint64_t v99 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v99 + 28) = a2 | 0x2A00000000;
  *unint64_t v99 = 0;
  v99[1] = 0;
  v99[2] = (uint64_t)v95;
  *unint64_t v94 = v99;
  uint64_t v100 = *(void *)v3[2];
  if (v100)
  {
    v3[2] = v100;
    uint64_t v101 = *v94;
  }
  else
  {
    uint64_t v101 = v99;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v101);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_157:
  char v102 = v5;
  std::string v103 = v5;
  if (v4)
  {
    uint64_t v104 = v4;
    while (1)
    {
      std::string v103 = (void *)v104;
      int v105 = *(_DWORD *)(v104 + 28);
      if (v105 > a2) {
        goto LABEL_159;
      }
      if (v105 < a2)
      {
LABEL_164:
        uint64_t v104 = v103[1];
        if (!v104)
        {
          char v102 = (uint64_t **)(v103 + 1);
          break;
        }
      }
      else
      {
        int v106 = *((_DWORD *)v103 + 8);
        if (v106 < 38)
        {
          if (v106 == 37) {
            goto LABEL_170;
          }
          goto LABEL_164;
        }
LABEL_159:
        uint64_t v104 = *v103;
        char v102 = (uint64_t **)v103;
        if (!*v103) {
          break;
        }
      }
    }
  }
  unint64_t v107 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v107 + 28) = a2 | 0x2500000000;
  *unint64_t v107 = 0;
  v107[1] = 0;
  v107[2] = (uint64_t)v103;
  *char v102 = v107;
  uint64_t v108 = *(void *)v3[2];
  if (v108)
  {
    v3[2] = v108;
    unsigned __int8 v109 = *v102;
  }
  else
  {
    unsigned __int8 v109 = v107;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v109);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_170:
  long long v110 = v5;
  uint64_t v111 = v5;
  if (v4)
  {
    uint64_t v112 = v4;
    while (1)
    {
      uint64_t v111 = (void *)v112;
      int v113 = *(_DWORD *)(v112 + 28);
      if (v113 > a2) {
        goto LABEL_172;
      }
      if (v113 < a2)
      {
LABEL_177:
        uint64_t v112 = v111[1];
        if (!v112)
        {
          long long v110 = (uint64_t **)(v111 + 1);
          break;
        }
      }
      else
      {
        int v114 = *((_DWORD *)v111 + 8);
        if (v114 < 95)
        {
          if (v114 == 94) {
            goto LABEL_183;
          }
          goto LABEL_177;
        }
LABEL_172:
        uint64_t v112 = *v111;
        long long v110 = (uint64_t **)v111;
        if (!*v111) {
          break;
        }
      }
    }
  }
  unint64_t v115 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v115 + 28) = a2 | 0x5E00000000;
  *unint64_t v115 = 0;
  v115[1] = 0;
  v115[2] = (uint64_t)v111;
  *long long v110 = v115;
  uint64_t v116 = *(void *)v3[2];
  if (v116)
  {
    v3[2] = v116;
    uint64_t v117 = *v110;
  }
  else
  {
    uint64_t v117 = v115;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v117);
  uint64_t v4 = v3[3];
  ++v3[4];
LABEL_183:
  uint64_t v118 = v5;
  if (!v4) {
    goto LABEL_192;
  }
  do
  {
    while (1)
    {
      uint64_t v118 = (void *)v4;
      int v119 = *(_DWORD *)(v4 + 28);
      if (v119 <= a2)
      {
        if (v119 < a2) {
          goto LABEL_190;
        }
        int v120 = *((_DWORD *)v118 + 8);
        if (v120 < 59) {
          break;
        }
      }
      uint64_t v4 = *v118;
      uint64_t v5 = (uint64_t **)v118;
      if (!*v118) {
        goto LABEL_192;
      }
    }
    if (v120 == 58) {
      return result;
    }
LABEL_190:
    uint64_t v4 = v118[1];
  }
  while (v4);
  uint64_t v5 = (uint64_t **)(v118 + 1);
LABEL_192:
  unint64_t v121 = (uint64_t *)operator new(0x28uLL);
  *(uint64_t *)((char *)v121 + 28) = a2 | 0x3A00000000;
  *unint64_t v121 = 0;
  v121[1] = 0;
  v121[2] = (uint64_t)v118;
  *uint64_t v5 = v121;
  uint64_t v122 = *(void *)v3[2];
  if (v122)
  {
    v3[2] = v122;
    std::string v123 = *v5;
  }
  else
  {
    std::string v123 = v121;
  }
  uint64_t result = sub_2F250((uint64_t *)v3[3], v123);
  ++v3[4];
  return result;
}

void **sub_22EB84(void **a1)
{
  unint64_t v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    uint64_t v4 = *a1;
    if (v3 == v2)
    {
LABEL_11:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      if (*((char *)v3 - 9) < 0)
      {
        operator delete(*(v3 - 4));
        if (*((char *)v3 - 49) < 0) {
LABEL_9:
        }
          operator delete(*(v3 - 9));
      }
      else if (*((char *)v3 - 49) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 10;
      if (v3 == v2)
      {
        uint64_t v4 = *a1;
        goto LABEL_11;
      }
    }
  }
  return a1;
}

BOOL sub_22EC14(uint64_t a1)
{
  return *(void *)(a1 + 40) == *(void *)(a1 + 48);
}

void sub_22EC24(uint64_t a1)
{
  *(void *)a1 = off_242BAD0;
  uint64_t v2 = *(void *)(a1 + 40);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void **)(a1 + 40);
  if (v3 == v2)
  {
LABEL_11:
    *(void *)(a1 + 48) = v2;
    operator delete(v4);
LABEL_12:
    sub_22EFF4(a1 + 16, *(void **)(a1 + 24));
    operator delete();
  }
  while (1)
  {
    if (*(char *)(v3 - 9) < 0)
    {
      operator delete(*(void **)(v3 - 32));
      if (*(char *)(v3 - 49) < 0) {
LABEL_9:
      }
        operator delete(*(void **)(v3 - 72));
    }
    else if (*(char *)(v3 - 49) < 0)
    {
      goto LABEL_9;
    }
    v3 -= 80;
    if (v3 == v2)
    {
      uint64_t v4 = *(void **)(a1 + 40);
      goto LABEL_11;
    }
  }
}

uint64_t sub_22ECFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  signed int v6 = *(_DWORD *)a2;
  signed int v7 = *(_DWORD *)a3;
  if (sub_22F048(a1, *(_DWORD *)a2, *(_DWORD *)a3))
  {
    signed int v18 = *(_DWORD *)a2;
    if (*(char *)(a2 + 31) < 0)
    {
      sub_4200(&__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
    }
    else
    {
      long long __p = *(_OWORD *)(a2 + 8);
      uint64_t v20 = *(void *)(a2 + 24);
    }
    uint64_t v21 = *(void *)(a2 + 32);
    signed int v22 = *(_DWORD *)a3;
    if (*(char *)(a3 + 31) < 0)
    {
      sub_4200(&v23, *(void **)(a3 + 8), *(void *)(a3 + 16));
    }
    else
    {
      long long v23 = *(_OWORD *)(a3 + 8);
      uint64_t v24 = *(void *)(a3 + 24);
    }
    uint64_t v25 = *(void *)(a3 + 32);
    unint64_t v12 = *(void *)(a1 + 48);
    if (v12 < *(void *)(a1 + 56))
    {
LABEL_25:
      *(_DWORD *)unint64_t v12 = v18;
      long long v13 = __p;
      *(void *)(v12 + 24) = v20;
      *(_OWORD *)(v12 + 8) = v13;
      uint64_t v20 = 0;
      long long __p = 0uLL;
      *(void *)(v12 + 32) = v21;
      *(_DWORD *)(v12 + 40) = v22;
      uint64_t v14 = v24;
      *(_OWORD *)(v12 + 48) = v23;
      *(void *)(v12 + 64) = v14;
      uint64_t v24 = 0;
      long long v23 = 0uLL;
      *(void *)(v12 + 72) = v25;
      *(void *)(a1 + 48) = v12 + 80;
      if (SHIBYTE(v20) < 0) {
        goto LABEL_29;
      }
      return 1;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 24;
    do
    {
      signed int v10 = *(_DWORD *)(v8 + 28);
      if (v10 < v6)
      {
        v8 += 8;
      }
      else if (v6 >= v10)
      {
        if (*(_DWORD *)(v8 + 32) < v7) {
          v8 += 8;
        }
        else {
          uint64_t v9 = v8;
        }
      }
      else
      {
        uint64_t v9 = v8;
      }
      uint64_t v8 = *(void *)v8;
    }
    while (v8);
    if (v9 == a1 + 24) {
      return 1;
    }
    signed int v11 = *(_DWORD *)(v9 + 28);
    if (v6 < v11 || v11 >= v6 && v7 < *(_DWORD *)(v9 + 32)) {
      return 1;
    }
    signed int v18 = *(_DWORD *)a2;
    if (*(char *)(a2 + 31) < 0)
    {
      sub_4200(&__p, *(void **)(a2 + 8), *(void *)(a2 + 16));
    }
    else
    {
      long long __p = *(_OWORD *)(a2 + 8);
      uint64_t v20 = *(void *)(a2 + 24);
    }
    uint64_t v21 = *(void *)(a2 + 32);
    signed int v22 = *(_DWORD *)a3;
    if (*(char *)(a3 + 31) < 0)
    {
      sub_4200(&v23, *(void **)(a3 + 8), *(void *)(a3 + 16));
    }
    else
    {
      long long v23 = *(_OWORD *)(a3 + 8);
      uint64_t v24 = *(void *)(a3 + 24);
    }
    uint64_t v25 = *(void *)(a3 + 32);
    unint64_t v12 = *(void *)(a1 + 48);
    if (v12 < *(void *)(a1 + 56)) {
      goto LABEL_25;
    }
  }
  uint64_t v15 = sub_22F2A4((void **)(a1 + 40), (uint64_t)&v18);
  int v16 = SHIBYTE(v24);
  *(void *)(a1 + 48) = v15;
  if (v16 < 0)
  {
    operator delete((void *)v23);
    if ((SHIBYTE(v20) & 0x80000000) == 0) {
      return 1;
    }
    goto LABEL_29;
  }
  if (SHIBYTE(v20) < 0) {
LABEL_29:
  }
    operator delete((void *)__p);
  return 1;
}

void sub_22EFAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_22EFE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_22EFF4(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_22EFF4(a1, *a2);
    sub_22EFF4(a1, a2[1]);
    operator delete(a2);
  }
}

unint64_t sub_22F048(uint64_t a1, unsigned int a2, unsigned int a3)
{
  switch((char)a2)
  {
    case '[':
    case '{':
      goto LABEL_10;
    case '\\':
    case '^':
    case '_':
    case 'a':
    case 'b':
    case 'c':
    case 'd':
    case 'e':
    case 'f':
    case 'g':
    case 'h':
    case 'i':
    case 'j':
    case 'k':
    case 'l':
    case 'm':
    case 'n':
    case 'o':
    case 'p':
    case 'q':
    case 'r':
    case 's':
    case 't':
    case 'u':
    case 'v':
    case 'w':
    case 'x':
    case 'y':
    case 'z':
    case '|':
      goto LABEL_19;
    case ']':
    case '}':
      goto LABEL_4;
    default:
      if (a2 == 40)
      {
LABEL_10:
        if (a3 - 91 > 0x22
          || (unint64_t result = 0, ((1 << (a3 - 91)) & 0x500000005) == 0))
        {
          if (a3 >= 0x40) {
            unsigned int v7 = 1;
          }
          else {
            unsigned int v7 = (0x7BFFD7FFFFFFFC7FuLL >> a3) & 1;
          }
          if (a3 - 40 >= 2) {
            return v7;
          }
          else {
            return 0;
          }
        }
      }
      else if (a2 == 41)
      {
LABEL_4:
        BOOL v3 = a2 != 41;
        BOOL v4 = a2 != 93;
        if (a3 != 10) {
          BOOL v4 = 0;
        }
        BOOL v5 = a3 == 9;
LABEL_7:
        if (v5) {
          return v3;
        }
        else {
          return v4;
        }
      }
      else
      {
LABEL_19:
        unint64_t result = 0;
        switch((char)a3)
        {
          case '[':
          case '{':
            goto LABEL_25;
          case '\\':
          case '^':
          case '_':
          case 'a':
          case 'b':
          case 'c':
          case 'd':
          case 'e':
          case 'f':
          case 'g':
          case 'h':
          case 'i':
          case 'j':
          case 'k':
          case 'l':
          case 'm':
          case 'n':
          case 'o':
          case 'p':
          case 'q':
          case 'r':
          case 's':
          case 't':
          case 'u':
          case 'v':
          case 'w':
          case 'x':
          case 'y':
          case 'z':
          case '|':
            return result;
          case ']':
          case '}':
            goto LABEL_22;
          default:
            if (a3 == 40)
            {
LABEL_25:
              BOOL v3 = 1;
              BOOL v4 = a2 == 125;
              if (a2 == 93) {
                BOOL v4 = 1;
              }
              BOOL v5 = a2 == 41;
              goto LABEL_7;
            }
            if (a3 == 41)
            {
LABEL_22:
              if (a2 >= 0x40) {
                unint64_t result = 1;
              }
              else {
                unint64_t result = (0x7BFFFFFFFFFFFC3FuLL >> a2) & 1;
              }
            }
            break;
        }
      }
      return result;
  }
}

char *sub_22F2A4(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xCCCCCCCCCCCCCCCDLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x333333333333333) {
    sub_2E00();
  }
  if (0x999999999999999ALL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) > v4) {
    unint64_t v4 = 0x999999999999999ALL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4);
  }
  if (0xCCCCCCCCCCCCCCCDLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) >= 0x199999999999999) {
    unint64_t v5 = 0x333333333333333;
  }
  else {
    unint64_t v5 = v4;
  }
  if (v5 > 0x333333333333333) {
    sub_188D718();
  }
  uint64_t v7 = 80 * v5;
  uint64_t v8 = (char *)operator new(80 * v5);
  uint64_t v9 = &v8[80 * v3];
  *(_DWORD *)uint64_t v9 = *(_DWORD *)a2;
  signed int v10 = &v8[v7];
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 32);
  *(void *)(a2 + 24) = 0;
  *((void *)v9 + 3) = v11;
  *((void *)v9 + 4) = v12;
  *((_DWORD *)v9 + 10) = *(_DWORD *)(a2 + 40);
  *((_OWORD *)v9 + 3) = *(_OWORD *)(a2 + 48);
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v14 = *(void *)(a2 + 72);
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 48) = 0;
  *((void *)v9 + 8) = v13;
  *((void *)v9 + 9) = v14;
  uint64_t v15 = v9 + 80;
  int v16 = (void **)*a1;
  int v17 = (void **)a1[1];
  if (v17 == *a1)
  {
    *a1 = v9;
    a1[1] = v15;
    a1[2] = v10;
    if (!v17) {
      return v15;
    }
    goto LABEL_21;
  }
  uint64_t v18 = 0;
  do
  {
    uint64_t v19 = &v9[v18 * 8];
    uint64_t v20 = &v17[v18];
    *((_DWORD *)v19 - 20) = v17[v18 - 10];
    long long v21 = *(_OWORD *)&v17[v18 - 9];
    *((void *)v19 - 7) = v17[v18 - 7];
    *(_OWORD *)(v19 - 72) = v21;
    *(v20 - 8) = 0;
    *(v20 - 7) = 0;
    *(v20 - 9) = 0;
    *((void *)v19 - 6) = v17[v18 - 6];
    *((_DWORD *)v19 - 10) = v17[v18 - 5];
    long long v22 = *(_OWORD *)&v17[v18 - 4];
    *((void *)v19 - 2) = v17[v18 - 2];
    *((_OWORD *)v19 - 2) = v22;
    *(v20 - 3) = 0;
    *(v20 - 2) = 0;
    *(v20 - 4) = 0;
    *((void *)v19 - 1) = v17[v18 - 1];
    v18 -= 10;
  }
  while (&v17[v18] != v16);
  long long v23 = (void **)*a1;
  int v17 = (void **)a1[1];
  *a1 = &v9[v18 * 8];
  a1[1] = v15;
  a1[2] = v10;
  if (v17 != v23)
  {
    while (1)
    {
      if (*((char *)v17 - 9) < 0)
      {
        operator delete(*(v17 - 4));
        if (*((char *)v17 - 49) < 0) {
LABEL_18:
        }
          operator delete(*(v17 - 9));
      }
      else if (*((char *)v17 - 49) < 0)
      {
        goto LABEL_18;
      }
      v17 -= 10;
      if (v17 == v23)
      {
        int v17 = v23;
        break;
      }
    }
  }
  if (v17) {
LABEL_21:
  }
    operator delete(v17);
  return v15;
}

uint64_t sub_22F490(uint64_t a1)
{
  *(void *)(a1 + 24) = 0;
  uint64_t v2 = (char **)(a1 + 24);
  *(void *)(a1 + 16) = a1 + 24;
  unint64_t v3 = (void **)(a1 + 16);
  *(void *)a1 = off_242BB30;
  *(void *)(a1 + 8) = 3;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  unint64_t v4 = (char *)operator new(0x28uLL);
  *(void *)(v4 + 28) = 0x700000007;
  *((_DWORD *)v4 + 9) = 7;
  *(void *)unint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v4;
  sub_2F250((uint64_t *)v4, (uint64_t *)v4);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
  signed int v6 = v2;
  uint64_t v7 = v2;
  if (!v5) {
    goto LABEL_13;
  }
  uint64_t v8 = v5;
  do
  {
    while (1)
    {
      uint64_t v7 = (char **)v8;
      int v9 = *((_DWORD *)v8 + 7);
      if (v9 <= 9)
      {
        if (v9 < 9) {
          goto LABEL_6;
        }
        int v10 = *((_DWORD *)v7 + 8);
        if (v10 <= 9)
        {
          if (v10 < 9) {
            goto LABEL_6;
          }
          int v11 = *((_DWORD *)v7 + 9);
          if (v11 < 10) {
            break;
          }
        }
      }
      uint64_t v8 = *v7;
      signed int v6 = v7;
      if (!*v7) {
        goto LABEL_13;
      }
    }
    if (v11 == 9) {
      goto LABEL_16;
    }
LABEL_6:
    uint64_t v8 = v7[1];
  }
  while (v8);
  signed int v6 = v7 + 1;
LABEL_13:
  uint64_t v12 = (char *)operator new(0x28uLL);
  *(void *)(v12 + 28) = 0x900000009;
  *((_DWORD *)v12 + 9) = 9;
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  *((void *)v12 + 2) = v7;
  *signed int v6 = v12;
  uint64_t v13 = (void *)**v3;
  if (v13)
  {
    *unint64_t v3 = v13;
    uint64_t v12 = *v6;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v12);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_16:
  uint64_t v14 = v2;
  uint64_t v15 = v2;
  if (v5)
  {
    int v16 = v5;
    while (1)
    {
      uint64_t v15 = (char **)v16;
      int v17 = *((_DWORD *)v16 + 7);
      if (v17 > 44) {
        goto LABEL_18;
      }
      if (v17 < 44) {
        goto LABEL_25;
      }
      int v18 = *((_DWORD *)v15 + 8);
      if (v18 > 44) {
        goto LABEL_18;
      }
      if (v18 < 44)
      {
LABEL_25:
        int v16 = v15[1];
        if (!v16)
        {
          uint64_t v14 = v15 + 1;
          break;
        }
      }
      else
      {
        int v19 = *((_DWORD *)v15 + 9);
        if (v19 < 45)
        {
          if (v19 == 44) {
            goto LABEL_30;
          }
          goto LABEL_25;
        }
LABEL_18:
        int v16 = *v15;
        uint64_t v14 = v15;
        if (!*v15) {
          break;
        }
      }
    }
  }
  uint64_t v20 = (char *)operator new(0x28uLL);
  *(void *)(v20 + 28) = 0x2C0000002CLL;
  *((_DWORD *)v20 + 9) = 44;
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  *((void *)v20 + 2) = v15;
  *uint64_t v14 = v20;
  long long v21 = (void *)**v3;
  if (v21)
  {
    *unint64_t v3 = v21;
    uint64_t v20 = *v14;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v20);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_30:
  long long v22 = v2;
  long long v23 = v2;
  if (v5)
  {
    uint64_t v24 = v5;
    while (1)
    {
      long long v23 = (char **)v24;
      int v25 = *((_DWORD *)v24 + 7);
      if (v25 > 43) {
        goto LABEL_32;
      }
      if (v25 >= 43)
      {
        int v26 = *((_DWORD *)v23 + 8);
        if (v26 <= 43)
        {
          if (v26 < 43) {
            goto LABEL_35;
          }
          int v27 = *((_DWORD *)v23 + 9);
          if (v27 < 44)
          {
            if (v27 == 43) {
              goto LABEL_45;
            }
            goto LABEL_35;
          }
        }
LABEL_32:
        uint64_t v24 = *v23;
        long long v22 = v23;
        if (!*v23) {
          break;
        }
      }
      else
      {
LABEL_35:
        uint64_t v24 = v23[1];
        if (!v24)
        {
          long long v22 = v23 + 1;
          break;
        }
      }
    }
  }
  uint64_t v28 = (char *)operator new(0x28uLL);
  *(void *)(v28 + 28) = 0x2B0000002BLL;
  *((_DWORD *)v28 + 9) = 43;
  *(void *)uint64_t v28 = 0;
  *((void *)v28 + 1) = 0;
  *((void *)v28 + 2) = v23;
  *long long v22 = v28;
  unint64_t v29 = (void *)**v3;
  if (v29)
  {
    *unint64_t v3 = v29;
    uint64_t v28 = *v22;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v28);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_45:
  unint64_t v30 = v2;
  unint64_t v31 = v2;
  if (v5)
  {
    uint64_t v32 = v5;
    while (1)
    {
      unint64_t v31 = (char **)v32;
      int v33 = *((_DWORD *)v32 + 7);
      if (v33 > 45) {
        goto LABEL_47;
      }
      if (v33 < 45) {
        goto LABEL_54;
      }
      int v34 = *((_DWORD *)v31 + 8);
      if (v34 > 45) {
        goto LABEL_47;
      }
      if (v34 < 45)
      {
LABEL_54:
        uint64_t v32 = v31[1];
        if (!v32)
        {
          unint64_t v30 = v31 + 1;
          break;
        }
      }
      else
      {
        int v35 = *((_DWORD *)v31 + 9);
        if (v35 < 46)
        {
          if (v35 == 45) {
            goto LABEL_59;
          }
          goto LABEL_54;
        }
LABEL_47:
        uint64_t v32 = *v31;
        unint64_t v30 = v31;
        if (!*v31) {
          break;
        }
      }
    }
  }
  uint64_t v36 = (char *)operator new(0x28uLL);
  *(void *)(v36 + 28) = 0x2D0000002DLL;
  *((_DWORD *)v36 + 9) = 45;
  *(void *)uint64_t v36 = 0;
  *((void *)v36 + 1) = 0;
  *((void *)v36 + 2) = v31;
  void *v30 = v36;
  BOOL v37 = (void *)**v3;
  if (v37)
  {
    *unint64_t v3 = v37;
    uint64_t v36 = *v30;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v36);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_59:
  int64_t v38 = v2;
  unint64_t v39 = v2;
  if (v5)
  {
    uint64_t v40 = v5;
    while (1)
    {
      unint64_t v39 = (char **)v40;
      int v41 = *((_DWORD *)v40 + 7);
      if (v41 > 47) {
        goto LABEL_61;
      }
      if (v41 >= 47)
      {
        int v42 = *((_DWORD *)v39 + 8);
        if (v42 <= 47)
        {
          if (v42 < 47) {
            goto LABEL_64;
          }
          int v43 = *((_DWORD *)v39 + 9);
          if (v43 < 48)
          {
            if (v43 == 47) {
              goto LABEL_74;
            }
            goto LABEL_64;
          }
        }
LABEL_61:
        uint64_t v40 = *v39;
        int64_t v38 = v39;
        if (!*v39) {
          break;
        }
      }
      else
      {
LABEL_64:
        uint64_t v40 = v39[1];
        if (!v40)
        {
          int64_t v38 = v39 + 1;
          break;
        }
      }
    }
  }
  uint64_t v44 = (char *)operator new(0x28uLL);
  *(void *)(v44 + 28) = 0x2F0000002FLL;
  *((_DWORD *)v44 + 9) = 47;
  *(void *)uint64_t v44 = 0;
  *((void *)v44 + 1) = 0;
  *((void *)v44 + 2) = v39;
  *int64_t v38 = v44;
  int64_t v45 = (void *)**v3;
  if (v45)
  {
    *unint64_t v3 = v45;
    uint64_t v44 = *v38;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v44);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_74:
  unint64_t v46 = v2;
  std::string::value_type v47 = v2;
  if (v5)
  {
    uint64_t v48 = v5;
    while (1)
    {
      std::string::value_type v47 = (char **)v48;
      int v49 = *((_DWORD *)v48 + 7);
      if (v49 > 42) {
        goto LABEL_76;
      }
      if (v49 >= 42)
      {
        int v50 = *((_DWORD *)v47 + 8);
        if (v50 <= 42)
        {
          if (v50 < 42) {
            goto LABEL_79;
          }
          int v51 = *((_DWORD *)v47 + 9);
          if (v51 < 43)
          {
            if (v51 == 42) {
              goto LABEL_89;
            }
            goto LABEL_79;
          }
        }
LABEL_76:
        uint64_t v48 = *v47;
        unint64_t v46 = v47;
        if (!*v47) {
          break;
        }
      }
      else
      {
LABEL_79:
        uint64_t v48 = v47[1];
        if (!v48)
        {
          unint64_t v46 = v47 + 1;
          break;
        }
      }
    }
  }
  uint64_t v52 = (char *)operator new(0x28uLL);
  *(void *)(v52 + 28) = 0x2A0000002ALL;
  *((_DWORD *)v52 + 9) = 42;
  *(void *)uint64_t v52 = 0;
  *((void *)v52 + 1) = 0;
  *((void *)v52 + 2) = v47;
  *unint64_t v46 = v52;
  unint64_t v53 = (void *)**v3;
  if (v53)
  {
    *unint64_t v3 = v53;
    uint64_t v52 = *v46;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v52);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_89:
  uint64_t v54 = v2;
  uint64_t v55 = v2;
  if (v5)
  {
    uint64_t v56 = v5;
    while (1)
    {
      uint64_t v55 = (char **)v56;
      int v57 = *((_DWORD *)v56 + 7);
      if (v57 > 37) {
        goto LABEL_91;
      }
      if (v57 >= 37)
      {
        int v58 = *((_DWORD *)v55 + 8);
        if (v58 <= 37)
        {
          if (v58 < 37) {
            goto LABEL_94;
          }
          int v59 = *((_DWORD *)v55 + 9);
          if (v59 < 38)
          {
            if (v59 == 37) {
              goto LABEL_104;
            }
            goto LABEL_94;
          }
        }
LABEL_91:
        uint64_t v56 = *v55;
        uint64_t v54 = v55;
        if (!*v55) {
          break;
        }
      }
      else
      {
LABEL_94:
        uint64_t v56 = v55[1];
        if (!v56)
        {
          uint64_t v54 = v55 + 1;
          break;
        }
      }
    }
  }
  uint64_t v60 = (char *)operator new(0x28uLL);
  *(void *)(v60 + 28) = 0x2500000025;
  *((_DWORD *)v60 + 9) = 37;
  *(void *)uint64_t v60 = 0;
  *((void *)v60 + 1) = 0;
  *((void *)v60 + 2) = v55;
  std::string *v54 = v60;
  unint64_t v61 = (void *)**v3;
  if (v61)
  {
    *unint64_t v3 = v61;
    uint64_t v60 = *v54;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v60);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_104:
  int64_t v62 = v2;
  unint64_t v63 = v2;
  if (v5)
  {
    uint64_t v64 = v5;
    while (1)
    {
      unint64_t v63 = (char **)v64;
      int v65 = *((_DWORD *)v64 + 7);
      if (v65 > 94) {
        goto LABEL_106;
      }
      if (v65 >= 94)
      {
        int v66 = *((_DWORD *)v63 + 8);
        if (v66 <= 94)
        {
          if (v66 < 94) {
            goto LABEL_109;
          }
          int v67 = *((_DWORD *)v63 + 9);
          if (v67 < 95)
          {
            if (v67 == 94) {
              goto LABEL_119;
            }
            goto LABEL_109;
          }
        }
LABEL_106:
        uint64_t v64 = *v63;
        int64_t v62 = v63;
        if (!*v63) {
          break;
        }
      }
      else
      {
LABEL_109:
        uint64_t v64 = v63[1];
        if (!v64)
        {
          int64_t v62 = v63 + 1;
          break;
        }
      }
    }
  }
  uint64_t v68 = (char *)operator new(0x28uLL);
  *(void *)(v68 + 28) = 0x5E0000005ELL;
  *((_DWORD *)v68 + 9) = 94;
  *(void *)uint64_t v68 = 0;
  *((void *)v68 + 1) = 0;
  *((void *)v68 + 2) = v63;
  *int64_t v62 = v68;
  std::string::value_type v69 = (void *)**v3;
  if (v69)
  {
    *unint64_t v3 = v69;
    uint64_t v68 = *v62;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v68);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_119:
  BOOL v70 = v2;
  uint64_t v71 = v2;
  if (v5)
  {
    uint64_t v72 = v5;
    while (1)
    {
      uint64_t v71 = (char **)v72;
      int v73 = *((_DWORD *)v72 + 7);
      if (v73 > 43) {
        goto LABEL_121;
      }
      if (v73 >= 43)
      {
        int v74 = *((_DWORD *)v71 + 8);
        if (v74 <= 45)
        {
          if (v74 < 45) {
            goto LABEL_124;
          }
          int v75 = *((_DWORD *)v71 + 9);
          if (v75 < 44)
          {
            if (v75 == 43) {
              goto LABEL_134;
            }
            goto LABEL_124;
          }
        }
LABEL_121:
        uint64_t v72 = *v71;
        BOOL v70 = v71;
        if (!*v71) {
          break;
        }
      }
      else
      {
LABEL_124:
        uint64_t v72 = v71[1];
        if (!v72)
        {
          BOOL v70 = v71 + 1;
          break;
        }
      }
    }
  }
  uint64_t v76 = (char *)operator new(0x28uLL);
  *(void *)(v76 + 28) = 0x2D0000002BLL;
  *((_DWORD *)v76 + 9) = 43;
  *(void *)uint64_t v76 = 0;
  *((void *)v76 + 1) = 0;
  *((void *)v76 + 2) = v71;
  char *v70 = v76;
  uint64_t v77 = (void *)**v3;
  if (v77)
  {
    *unint64_t v3 = v77;
    uint64_t v76 = *v70;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v76);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_134:
  unint64_t v78 = v2;
  uint64_t v79 = v2;
  if (v5)
  {
    uint64_t v80 = v5;
    while (1)
    {
      uint64_t v79 = (char **)v80;
      int v81 = *((_DWORD *)v80 + 7);
      if (v81 > 45) {
        goto LABEL_136;
      }
      if (v81 < 45) {
        goto LABEL_143;
      }
      int v82 = *((_DWORD *)v79 + 8);
      if (v82 > 43) {
        goto LABEL_136;
      }
      if (v82 < 43)
      {
LABEL_143:
        uint64_t v80 = v79[1];
        if (!v80)
        {
          unint64_t v78 = v79 + 1;
          break;
        }
      }
      else
      {
        int v83 = *((_DWORD *)v79 + 9);
        if (v83 < 46)
        {
          if (v83 == 45) {
            goto LABEL_148;
          }
          goto LABEL_143;
        }
LABEL_136:
        uint64_t v80 = *v79;
        unint64_t v78 = v79;
        if (!*v79) {
          break;
        }
      }
    }
  }
  uint64_t v84 = (char *)operator new(0x28uLL);
  *(void *)(v84 + 28) = 0x2B0000002DLL;
  *((_DWORD *)v84 + 9) = 45;
  *(void *)uint64_t v84 = 0;
  *((void *)v84 + 1) = 0;
  *((void *)v84 + 2) = v79;
  *unint64_t v78 = v84;
  unint64_t v85 = (void *)**v3;
  if (v85)
  {
    *unint64_t v3 = v85;
    uint64_t v84 = *v78;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v84);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_148:
  unint64_t v86 = v2;
  uint64_t v87 = v2;
  if (v5)
  {
    uint64_t v88 = v5;
    while (1)
    {
      uint64_t v87 = (char **)v88;
      int v89 = *((_DWORD *)v88 + 7);
      if (v89 > 47) {
        goto LABEL_150;
      }
      if (v89 < 47) {
        goto LABEL_157;
      }
      int v90 = *((_DWORD *)v87 + 8);
      if (v90 > 42) {
        goto LABEL_150;
      }
      if (v90 < 42)
      {
LABEL_157:
        uint64_t v88 = v87[1];
        if (!v88)
        {
          unint64_t v86 = v87 + 1;
          break;
        }
      }
      else
      {
        int v91 = *((_DWORD *)v87 + 9);
        if (v91 < 48)
        {
          if (v91 == 47) {
            goto LABEL_162;
          }
          goto LABEL_157;
        }
LABEL_150:
        uint64_t v88 = *v87;
        unint64_t v86 = v87;
        if (!*v87) {
          break;
        }
      }
    }
  }
  uint64_t v92 = (char *)operator new(0x28uLL);
  *(void *)(v92 + 28) = 0x2A0000002FLL;
  *((_DWORD *)v92 + 9) = 47;
  *(void *)uint64_t v92 = 0;
  *((void *)v92 + 1) = 0;
  *((void *)v92 + 2) = v87;
  *unint64_t v86 = v92;
  uint64_t v93 = (void *)**v3;
  if (v93)
  {
    *unint64_t v3 = v93;
    uint64_t v92 = *v86;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v92);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_162:
  unint64_t v94 = v2;
  long long v95 = v2;
  if (v5)
  {
    uint64_t v96 = v5;
    while (1)
    {
      long long v95 = (char **)v96;
      int v97 = *((_DWORD *)v96 + 7);
      if (v97 > 42) {
        goto LABEL_164;
      }
      if (v97 < 42) {
        goto LABEL_171;
      }
      int v98 = *((_DWORD *)v95 + 8);
      if (v98 > 47) {
        goto LABEL_164;
      }
      if (v98 < 47)
      {
LABEL_171:
        uint64_t v96 = v95[1];
        if (!v96)
        {
          unint64_t v94 = v95 + 1;
          break;
        }
      }
      else
      {
        int v99 = *((_DWORD *)v95 + 9);
        if (v99 < 43)
        {
          if (v99 == 42) {
            goto LABEL_176;
          }
          goto LABEL_171;
        }
LABEL_164:
        uint64_t v96 = *v95;
        unint64_t v94 = v95;
        if (!*v95) {
          break;
        }
      }
    }
  }
  uint64_t v100 = (char *)operator new(0x28uLL);
  *(void *)(v100 + 28) = 0x2F0000002ALL;
  *((_DWORD *)v100 + 9) = 42;
  *(void *)uint64_t v100 = 0;
  *((void *)v100 + 1) = 0;
  *((void *)v100 + 2) = v95;
  *unint64_t v94 = v100;
  uint64_t v101 = (void *)**v3;
  if (v101)
  {
    *unint64_t v3 = v101;
    uint64_t v100 = *v94;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v100);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_176:
  char v102 = v2;
  std::string v103 = v2;
  if (v5)
  {
    uint64_t v104 = v5;
    while (1)
    {
      std::string v103 = (char **)v104;
      int v105 = *((_DWORD *)v104 + 7);
      if (v105 > 37) {
        goto LABEL_178;
      }
      if (v105 < 37) {
        goto LABEL_185;
      }
      int v106 = *((_DWORD *)v103 + 8);
      if (v106 > 94) {
        goto LABEL_178;
      }
      if (v106 < 94)
      {
LABEL_185:
        uint64_t v104 = v103[1];
        if (!v104)
        {
          char v102 = v103 + 1;
          break;
        }
      }
      else
      {
        int v107 = *((_DWORD *)v103 + 9);
        if (v107 < 38)
        {
          if (v107 == 37) {
            goto LABEL_190;
          }
          goto LABEL_185;
        }
LABEL_178:
        uint64_t v104 = *v103;
        char v102 = v103;
        if (!*v103) {
          break;
        }
      }
    }
  }
  uint64_t v108 = (char *)operator new(0x28uLL);
  *(void *)(v108 + 28) = 0x5E00000025;
  *((_DWORD *)v108 + 9) = 37;
  *(void *)uint64_t v108 = 0;
  *((void *)v108 + 1) = 0;
  *((void *)v108 + 2) = v103;
  *char v102 = v108;
  unsigned __int8 v109 = (void *)**v3;
  if (v109)
  {
    *unint64_t v3 = v109;
    uint64_t v108 = *v102;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v108);
  unint64_t v5 = *(char **)(a1 + 24);
  ++*(void *)(a1 + 32);
LABEL_190:
  long long v110 = v2;
  uint64_t v111 = v2;
  if (v5)
  {
    while (2)
    {
      while (1)
      {
        uint64_t v111 = (char **)v5;
        int v112 = *((_DWORD *)v5 + 7);
        if (v112 > 94) {
          break;
        }
        if (v112 >= 94)
        {
          int v113 = *((_DWORD *)v111 + 8);
          if (v113 > 37) {
            break;
          }
          if (v113 >= 37)
          {
            int v114 = *((_DWORD *)v111 + 9);
            if (v114 >= 95) {
              break;
            }
            if (v114 == 94) {
              return a1;
            }
          }
        }
        unint64_t v5 = v111[1];
        if (!v5)
        {
          long long v110 = v111 + 1;
          goto LABEL_202;
        }
      }
      unint64_t v5 = *v111;
      long long v110 = v111;
      if (!*v111) {
        break;
      }
      continue;
    }
  }
LABEL_202:
  unint64_t v115 = (char *)operator new(0x28uLL);
  *(void *)(v115 + 28) = 0x250000005ELL;
  *((_DWORD *)v115 + 9) = 94;
  *(void *)unint64_t v115 = 0;
  *((void *)v115 + 1) = 0;
  *((void *)v115 + 2) = v111;
  *long long v110 = v115;
  uint64_t v116 = (void *)**v3;
  if (v116)
  {
    *unint64_t v3 = v116;
    unint64_t v115 = *v110;
  }
  sub_2F250(*(uint64_t **)(a1 + 24), (uint64_t *)v115);
  ++*(void *)(a1 + 32);
  return a1;
}

void sub_2300C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  sub_22EB84(a10);
  sub_22EFF4(v10, *v11);
  _Unwind_Resume(a1);
}

BOOL sub_2300E4(uint64_t a1)
{
  return *(void *)(a1 + 40) == *(void *)(a1 + 48);
}

void sub_2300F4(uint64_t a1)
{
  *(void *)a1 = off_242BB30;
  uint64_t v2 = *(void *)(a1 + 40);
  if (!v2) {
    goto LABEL_12;
  }
  uint64_t v3 = *(void *)(a1 + 48);
  unint64_t v4 = *(void **)(a1 + 40);
  if (v3 == v2)
  {
LABEL_11:
    *(void *)(a1 + 48) = v2;
    operator delete(v4);
LABEL_12:
    sub_22EFF4(a1 + 16, *(void **)(a1 + 24));
    operator delete();
  }
  while (1)
  {
    if (*(char *)(v3 - 9) < 0)
    {
      operator delete(*(void **)(v3 - 32));
      if (*(char *)(v3 - 49) < 0) {
LABEL_9:
      }
        operator delete(*(void **)(v3 - 72));
    }
    else if (*(char *)(v3 - 49) < 0)
    {
      goto LABEL_9;
    }
    v3 -= 80;
    if (v3 == v2)
    {
      unint64_t v4 = *(void **)(a1 + 40);
      goto LABEL_11;
    }
  }
}

uint64_t sub_2301CC(uint64_t a1, int *a2, unsigned int *a3, unsigned int *a4)
{
  uint64_t v4 = *a3;
  uint64_t v5 = *a4;
  int v6 = *a2;
  int v22 = *a2;
  *(void *)long long v23 = v4 | (v5 << 32);
  uint64_t v7 = *(_DWORD **)(a1 + 24);
  if (!v7) {
    return 1;
  }
  int v11 = (_DWORD *)(a1 + 24);
  do
  {
    int v12 = v7[7];
    if (v12 < v22)
    {
LABEL_3:
      v7 += 2;
      goto LABEL_4;
    }
    if (v12 > v22) {
      goto LABEL_9;
    }
    int v13 = v7[8];
    if (v13 < *(int *)v23) {
      goto LABEL_3;
    }
    if (v13 <= *(int *)v23)
    {
      if (v7[9] < (int)v5) {
        v7 += 2;
      }
      else {
        int v11 = v7;
      }
    }
    else
    {
LABEL_9:
      int v11 = v7;
    }
LABEL_4:
    uint64_t v7 = *(_DWORD **)v7;
  }
  while (v7);
  if (v11 == (_DWORD *)(a1 + 24)) {
    return 1;
  }
  int v14 = v11[7];
  if (v14 > v22) {
    return 1;
  }
  if (v14 >= v22)
  {
    int v15 = v11[8];
    if (v15 > *(int *)v23 || v15 >= *(int *)v23 && (int)v5 < v11[9]) {
      return 1;
    }
  }
  int v22 = v6;
  if (*((char *)a2 + 31) < 0)
  {
    sub_4200(&v23[4], *((void **)a2 + 1), *((void *)a2 + 2));
    LODWORD(v4) = *a3;
  }
  else
  {
    *(_OWORD *)&v23[4] = *(_OWORD *)(a2 + 2);
    uint64_t v24 = *((void *)a2 + 3);
  }
  uint64_t v25 = *((void *)a2 + 4);
  int v26 = v4;
  if (*((char *)a3 + 31) < 0)
  {
    sub_4200(&__p, *((void **)a3 + 1), *((void *)a3 + 2));
  }
  else
  {
    long long __p = *(_OWORD *)(a3 + 2);
    uint64_t v28 = *((void *)a3 + 3);
  }
  uint64_t v29 = *((void *)a3 + 4);
  unint64_t v16 = *(void *)(a1 + 48);
  if (v16 >= *(void *)(a1 + 56))
  {
    int v19 = sub_22F2A4((void **)(a1 + 40), (uint64_t)&v22);
    int v20 = SHIBYTE(v28);
    *(void *)(a1 + 48) = v19;
    if (v20 < 0) {
      operator delete((void *)__p);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v16 = v22;
    long long v17 = *(_OWORD *)&v23[4];
    *(void *)(v16 + 24) = v24;
    *(_OWORD *)(v16 + 8) = v17;
    *(void *)&v23[12] = 0;
    uint64_t v24 = 0;
    *(void *)&v23[4] = 0;
    *(void *)(v16 + 32) = v25;
    *(_DWORD *)(v16 + 40) = v26;
    uint64_t v18 = v28;
    *(_OWORD *)(v16 + 48) = __p;
    *(void *)(v16 + 64) = v18;
    uint64_t v28 = 0;
    long long __p = 0uLL;
    *(void *)(v16 + 72) = v29;
    *(void *)(a1 + 48) = v16 + 80;
  }
  if ((SHIBYTE(v24) & 0x80000000) == 0) {
    return 1;
  }
  operator delete(*(void **)&v23[4]);
  return 1;
}

void sub_2303FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_230418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_23042C(uint64_t a1, long long *a2, long long *a3, int a4)
{
  uint64_t v8 = a1 + 8;
  int v9 = sub_ADE40(a1 + 8, (uint64_t)a2);
  uint64_t v10 = (uint64_t *)(a1 + 16);
  if (v10 == v9)
  {
    if (*((char *)a3 + 23) < 0)
    {
      sub_4200(&v14, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      long long v14 = *a3;
      uint64_t v15 = *((void *)a3 + 2);
    }
    int v16 = a4;
    long long v17 = a2;
    int v11 = sub_2305C8(v8, (uint64_t)a2, (uint64_t)&unk_20F06E0, &v17);
    int v12 = (void **)(v11 + 56);
    if (v11[79] < 0) {
      operator delete(*v12);
    }
    *(_OWORD *)int v12 = v14;
    *((void *)v11 + 9) = v15;
    *((_DWORD *)v11 + 20) = v16;
  }
  return v10 == v9;
}

void sub_230510(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_23052C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_23052C(a1, *(void *)a2);
    sub_23052C(a1, *(void *)(a2 + 8));
    if (*(char *)(a2 + 79) < 0)
    {
      operator delete(*(void **)(a2 + 56));
      if ((*(char *)(a2 + 55) & 0x80000000) == 0)
      {
LABEL_4:
        uint64_t v4 = (void *)a2;
LABEL_6:
        operator delete(v4);
        return;
      }
    }
    else if ((*(char *)(a2 + 55) & 0x80000000) == 0)
    {
      goto LABEL_4;
    }
    operator delete(*(void **)(a2 + 32));
    uint64_t v4 = (void *)a2;
    goto LABEL_6;
  }
}

char *sub_2305C8(uint64_t a1, uint64_t a2, uint64_t a3, long long **a4)
{
  int v6 = sub_AE20C(a1, &v16, a2);
  if (*v6) {
    return (char *)*v6;
  }
  uint64_t v8 = v6;
  int v9 = (char *)operator new(0x58uLL);
  uint64_t v10 = v9 + 32;
  int v11 = *a4;
  if (*((char *)*a4 + 23) < 0)
  {
    sub_4200(v10, *(void **)v11, *((void *)v11 + 1));
  }
  else
  {
    long long v12 = *v11;
    *((void *)v9 + 6) = *((void *)v11 + 2);
    *(_OWORD *)uint64_t v10 = v12;
  }
  *((void *)v9 + 7) = 0;
  *((void *)v9 + 8) = 0;
  *((_DWORD *)v9 + 20) = 0;
  *((void *)v9 + 9) = 0;
  uint64_t v13 = v16;
  *(void *)int v9 = 0;
  *((void *)v9 + 1) = 0;
  *((void *)v9 + 2) = v13;
  uint64_t *v8 = (uint64_t)v9;
  uint64_t v14 = **(void **)a1;
  uint64_t v15 = (uint64_t *)v9;
  if (v14)
  {
    *(void *)a1 = v14;
    uint64_t v15 = (uint64_t *)*v8;
  }
  sub_2F250(*(uint64_t **)(a1 + 8), v15);
  ++*(void *)(a1 + 16);
  return v9;
}

void sub_2306B8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

_OWORD *sub_2306CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = operator new(0x40uLL);
  v4[2] = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *((void *)v4 + 6) = v5;
  *((void *)v4 + 7) = v6;
  uint64_t v7 = sub_23079C(a1, &v12, (uint64_t)(v4 + 2));
  uint64_t v8 = v12;
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = v8;
  *uint64_t v7 = (uint64_t)v4;
  uint64_t v9 = **(void **)a1;
  uint64_t v10 = (uint64_t *)v4;
  if (v9)
  {
    *(void *)a1 = v9;
    uint64_t v10 = (uint64_t *)*v7;
  }
  sub_2F250(*(uint64_t **)(a1 + 8), v10);
  ++*(void *)(a1 + 16);
  return v4;
}

void sub_230778(_Unwind_Exception *a1)
{
  if (v1[55] < 0) {
    operator delete(*v2);
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_23079C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    while (1)
    {
      uint64_t v5 = v4;
      unint64_t v7 = *(unsigned __int8 *)(a3 + 23);
      char v8 = v7;
      unint64_t v9 = *(void *)(a3 + 8);
      unint64_t v10 = (v7 & 0x80u) == 0 ? *(unsigned __int8 *)(a3 + 23) : *(void *)(a3 + 8);
      unint64_t v11 = *((unsigned __int8 *)v5 + 55);
      char v12 = v11;
      unint64_t v13 = v5[5];
      unint64_t v14 = (v11 & 0x80u) == 0 ? *((unsigned __int8 *)v5 + 55) : v5[5];
      uint64_t v15 = v14 >= v10 ? v10 : v14;
      if (v15) {
        break;
      }
LABEL_25:
      if (v8 < 0) {
        unint64_t v7 = v9;
      }
      if (v12 >= 0) {
        unint64_t v21 = v11;
      }
      else {
        unint64_t v21 = v13;
      }
      if (v7 >= v21)
      {
LABEL_3:
        uint64_t v4 = (uint64_t *)v5[1];
        if (!v4)
        {
          unint64_t result = v5 + 1;
          goto LABEL_35;
        }
      }
      else
      {
LABEL_31:
        uint64_t v4 = (uint64_t *)*v5;
        unint64_t result = v5;
        if (!*v5) {
          goto LABEL_35;
        }
      }
    }
    uint64_t v16 = 0;
    while (1)
    {
      uint64_t v17 = *(char *)(a3 + 23) >= 0 ? a3 : *(void *)a3;
      char v18 = __tolower(*(char *)(v17 + v16));
      uint64_t v19 = *((char *)v5 + 55) >= 0 ? (uint64_t)(v5 + 4) : v5[4];
      char v20 = __tolower(*(char *)(v19 + v16));
      if (v18 > v20) {
        goto LABEL_3;
      }
      if (v18 < v20) {
        goto LABEL_31;
      }
      if (v15 == ++v16)
      {
        unint64_t v7 = *(unsigned __int8 *)(a3 + 23);
        unint64_t v9 = *(void *)(a3 + 8);
        unint64_t v11 = *((unsigned __int8 *)v5 + 55);
        unint64_t v13 = v5[5];
        char v12 = *((unsigned char *)v5 + 55);
        char v8 = *(unsigned char *)(a3 + 23);
        goto LABEL_25;
      }
    }
  }
  unint64_t result = (uint64_t *)(a1 + 8);
LABEL_35:
  *a2 = v5;
  return result;
}

uint64_t **sub_2308DC(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  unint64_t v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *((char *)a2 + 23);
    if (v8 >= 0) {
      size_t v9 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v9 = (size_t)a2[1];
    }
    if (v8 >= 0) {
      unint64_t v10 = a2;
    }
    else {
      unint64_t v10 = *a2;
    }
    while (1)
    {
      while (1)
      {
        unint64_t v11 = (uint64_t **)v6;
        unint64_t v14 = (const void *)v6[4];
        char v12 = v6 + 4;
        unint64_t v13 = v14;
        int v15 = *((char *)v12 + 23);
        if (v15 >= 0) {
          size_t v16 = *((unsigned __int8 *)v12 + 23);
        }
        else {
          size_t v16 = v12[1];
        }
        if (v15 >= 0) {
          uint64_t v17 = v12;
        }
        else {
          uint64_t v17 = v13;
        }
        if (v16 >= v9) {
          size_t v18 = v9;
        }
        else {
          size_t v18 = v16;
        }
        int v19 = memcmp(v10, v17, v18);
        BOOL v20 = v9 < v16;
        if (v19) {
          BOOL v20 = v19 < 0;
        }
        if (!v20) {
          break;
        }
        uint64_t v6 = *v11;
        unint64_t v7 = v11;
        if (!*v11) {
          goto LABEL_27;
        }
      }
      int v21 = memcmp(v17, v10, v18);
      BOOL v22 = v16 < v9;
      if (v21) {
        BOOL v22 = v21 < 0;
      }
      if (!v22) {
        break;
      }
      uint64_t v6 = v11[1];
      if (!v6)
      {
        unint64_t v7 = v11 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    unint64_t v11 = a1 + 1;
LABEL_27:
    long long v23 = (uint64_t *)v11;
    unint64_t v11 = (uint64_t **)operator new(0x48uLL);
    uint64_t v24 = *a4;
    uint64_t v25 = (uint64_t *)*((void *)*a4 + 2);
    *((_OWORD *)v11 + 2) = **a4;
    v11[6] = v25;
    *uint64_t v24 = 0;
    v24[1] = 0;
    v24[2] = 0;
    v11[7] = 0;
    *((_DWORD *)v11 + 16) = 0;
    long long *v11 = 0;
    v11[1] = 0;
    v11[2] = v23;
    *unint64_t v7 = (uint64_t *)v11;
    int v26 = (uint64_t *)**a1;
    int v27 = (uint64_t *)v11;
    if (v26)
    {
      *a1 = v26;
      int v27 = *v7;
    }
    sub_2F250(a1[1], v27);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v11;
}

uint64_t sub_230A5C(uint64_t a1, _DWORD *a2, void **a3)
{
  (*(void (**)(void))(**a3 + 40))();
  (*(void (**)(void *))(*a3[1] + 40))(a3[1]);
  uint64_t result = 0;
  switch(*a2)
  {
    case 2:
      operator new();
    case 3:
      operator new();
    case 4:
      operator new();
    case 5:
      operator new();
    case 6:
      operator new();
    case 7:
      operator new();
    case 0xE:
      operator new();
    case 0xF:
      operator new();
    case 0x10:
      operator new();
    case 0x12:
      operator new();
    case 0x14:
      operator new();
    case 0x15:
      operator new();
    case 0x16:
      operator new();
    case 0x17:
      operator new();
    case 0x18:
      operator new();
    case 0x19:
      operator new();
    case 0x1A:
      operator new();
    case 0x1B:
      operator new();
    default:
      return result;
  }
}

uint64_t sub_230F28(uint64_t a1, int *a2, void **a3)
{
  uint64_t v6 = (*(uint64_t (**)(void))(**a3 + 40))();
  double v7 = (*(double (**)(void *))(*a3[1] + 16))(a3[1]);
  int v8 = a3[1];
  if (v8 && (*(unsigned int (**)(void *))(*v8 + 32))(v8) != 17)
  {
    size_t v9 = a3[1];
    if (v9)
    {
      if ((*(unsigned int (**)(void *))(*v9 + 32))(v9) == 18) {
        goto LABEL_8;
      }
      unint64_t v10 = a3[1];
      if (v10) {
        (*(void (**)(void *))(*v10 + 8))(v10);
      }
    }
    a3[1] = 0;
  }
LABEL_8:
  int v11 = *a2;
  if (v11 == 7)
  {
    if (v7 >= 0.0) {
      double v12 = v7;
    }
    else {
      double v12 = -v7;
    }
    double v13 = fmod(v7, 1.0);
    if (v12 <= 60.0 && v13 == 0.0)
    {
      if (v7 == 1.0) {
        return (uint64_t)*a3;
      }
      int v15 = (int)v12;
      if (!(int)v12) {
        operator new();
      }
      if (v7 == 2.0) {
        operator new();
      }
      if (v7 >= 0.0) {
        return sub_243DDC(a1, v6, &v15);
      }
      else {
        return sub_244E20(a1, v6, &v15);
      }
    }
  }
  else if (v7 == 0.0)
  {
    switch(v11)
    {
      case 2:
        return (uint64_t)*a3;
      case 5:
        operator new();
      case 4:
        operator new();
    }
  }
  uint64_t result = 0;
  if (v7 == 1.0)
  {
    switch(v11)
    {
      case 2:
        goto LABEL_25;
      case 3:
        goto LABEL_31;
      case 4:
      case 5:
        return (uint64_t)*a3;
      case 6:
        goto LABEL_32;
      case 7:
        goto LABEL_33;
      case 14:
        goto LABEL_34;
      case 15:
        goto LABEL_35;
      case 16:
        goto LABEL_36;
      case 18:
        goto LABEL_37;
      case 20:
        goto LABEL_38;
      case 21:
        goto LABEL_39;
      case 22:
        goto LABEL_40;
      case 23:
        goto LABEL_41;
      case 24:
        goto LABEL_42;
      case 25:
        goto LABEL_43;
      case 26:
        goto LABEL_44;
      case 27:
        goto LABEL_45;
      default:
        return result;
    }
  }
  switch(v11)
  {
    case 2:
LABEL_25:
      operator new();
    case 3:
LABEL_31:
      operator new();
    case 4:
      operator new();
    case 5:
      operator new();
    case 6:
LABEL_32:
      operator new();
    case 7:
LABEL_33:
      operator new();
    case 14:
LABEL_34:
      operator new();
    case 15:
LABEL_35:
      operator new();
    case 16:
LABEL_36:
      operator new();
    case 18:
LABEL_37:
      operator new();
    case 20:
LABEL_38:
      operator new();
    case 21:
LABEL_39:
      operator new();
    case 22:
LABEL_40:
      operator new();
    case 23:
LABEL_41:
      operator new();
    case 24:
LABEL_42:
      operator new();
    case 25:
LABEL_43:
      operator new();
    case 26:
LABEL_44:
      operator new();
    case 27:
LABEL_45:
      operator new();
    default:
      return result;
  }
  return result;
}

uint64_t sub_231760(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v8 = *a2;
  if (!*a3 || (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 17) {
    goto LABEL_8;
  }
  if (*a3)
  {
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
      goto LABEL_8;
    }
    if (*a3) {
      (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
    }
  }
  *a3 = 0;
LABEL_8:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v9 = v7 == 5;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9 && v8 == 5)
  {
    char v69 = 7;
    strcpy((char *)__s2, "t/(t*t)");
    uint64_t v33 = a1[8];
    uint64_t v36 = *(void *)(v33 + 8);
    uint64_t v34 = v33 + 8;
    uint64_t v35 = v36;
    if (!v36) {
      return 0;
    }
    uint64_t v37 = v34;
    do
    {
      unint64_t v38 = *(unsigned __int8 *)(v35 + 55);
      int v39 = (char)v38;
      if ((v38 & 0x80u) != 0) {
        unint64_t v38 = *(void *)(v35 + 40);
      }
      if (v39 >= 0) {
        uint64_t v40 = (const void *)(v35 + 32);
      }
      else {
        uint64_t v40 = *(const void **)(v35 + 32);
      }
      if (v38 >= 7) {
        size_t v41 = 7;
      }
      else {
        size_t v41 = v38;
      }
      BOOL v42 = v38 < 7;
      int v43 = memcmp(v40, __s2, v41);
      BOOL v44 = v43 < 0;
      if (!v43) {
        BOOL v44 = v42;
      }
      BOOL v45 = !v44;
      if (v44) {
        unint64_t v46 = (uint64_t *)(v35 + 8);
      }
      else {
        unint64_t v46 = (uint64_t *)v35;
      }
      if (v45) {
        uint64_t v37 = v35;
      }
      uint64_t v35 = *v46;
    }
    while (*v46);
    if (v37 == v34) {
      return 0;
    }
    unint64_t v47 = *(unsigned __int8 *)(v37 + 55);
    int v48 = (char)v47;
    if ((v47 & 0x80u) != 0) {
      unint64_t v47 = *(void *)(v37 + 40);
    }
    if (v48 >= 0) {
      int v49 = (const void *)(v37 + 32);
    }
    else {
      int v49 = *(const void **)(v37 + 32);
    }
    if (v47 >= 7) {
      size_t v50 = 7;
    }
    else {
      size_t v50 = v47;
    }
    BOOL v51 = v47 > 7;
    int v52 = memcmp(__s2, v49, v50);
    BOOL v53 = v52 < 0;
    if (!v52) {
      BOOL v53 = v51;
    }
    if (v53) {
      return 0;
    }
    int v70 = *(_DWORD *)(v37 + 64);
    return sub_248B80((uint64_t)a1, &v70);
  }
  int v11 = __s2;
  sub_2485A4(v7, v8, (uint64_t)__s2);
  uint64_t v12 = a1[8];
  uint64_t v15 = *(void *)(v12 + 8);
  uint64_t v14 = v12 + 8;
  uint64_t v13 = v15;
  if (!v15)
  {
    uint64_t v32 = 0;
    if ((v69 & 0x80000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  if (v69 >= 0) {
    size_t v16 = v69;
  }
  else {
    size_t v16 = (size_t)__s2[1];
  }
  if (v69 < 0) {
    int v11 = (void **)__s2[0];
  }
  uint64_t v17 = v14;
  do
  {
    int v18 = *(char *)(v13 + 55);
    if (v18 >= 0) {
      size_t v19 = *(unsigned __int8 *)(v13 + 55);
    }
    else {
      size_t v19 = *(void *)(v13 + 40);
    }
    if (v18 >= 0) {
      BOOL v20 = (const void *)(v13 + 32);
    }
    else {
      BOOL v20 = *(const void **)(v13 + 32);
    }
    if (v16 >= v19) {
      size_t v21 = v19;
    }
    else {
      size_t v21 = v16;
    }
    int v22 = memcmp(v20, v11, v21);
    BOOL v23 = v19 < v16;
    if (v22) {
      BOOL v23 = v22 < 0;
    }
    BOOL v24 = !v23;
    if (v23) {
      uint64_t v25 = (uint64_t *)(v13 + 8);
    }
    else {
      uint64_t v25 = (uint64_t *)v13;
    }
    if (v24) {
      uint64_t v17 = v13;
    }
    uint64_t v13 = *v25;
  }
  while (*v25);
  if (v17 == v14)
  {
    uint64_t v32 = 0;
    LOBYTE(v13) = 0;
    if (v69 < 0) {
      goto LABEL_88;
    }
  }
  else
  {
    int v26 = *(char *)(v17 + 55);
    if (v26 >= 0) {
      size_t v27 = *(unsigned __int8 *)(v17 + 55);
    }
    else {
      size_t v27 = *(void *)(v17 + 40);
    }
    if (v26 >= 0) {
      uint64_t v28 = (const void *)(v17 + 32);
    }
    else {
      uint64_t v28 = *(const void **)(v17 + 32);
    }
    if (v27 >= v16) {
      size_t v29 = v16;
    }
    else {
      size_t v29 = v27;
    }
    int v30 = memcmp(v11, v28, v29);
    BOOL v31 = v16 < v27;
    if (v30) {
      BOOL v31 = v30 < 0;
    }
    if (v31)
    {
      uint64_t v32 = 0;
      LOBYTE(v13) = 0;
      if ((v69 & 0x80000000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_88;
    }
    int v70 = *(_DWORD *)(v17 + 64);
    uint64_t v32 = sub_248B80((uint64_t)a1, &v70);
    LOBYTE(v13) = 1;
    if (v69 < 0) {
LABEL_88:
    }
      operator delete(__s2[0]);
  }
LABEL_89:
  if ((v13 & 1) == 0)
  {
    uint64_t v54 = a1[6];
    uint64_t v57 = *(void *)(v54 + 8);
    uint64_t v55 = v54 + 8;
    uint64_t v56 = v57;
    if (v57)
    {
      uint64_t v58 = v55;
      uint64_t v59 = v56;
      do
      {
        int v60 = *(_DWORD *)(v59 + 32);
        BOOL v61 = v60 < v7;
        if (v60 >= v7) {
          int64_t v62 = (uint64_t *)v59;
        }
        else {
          int64_t v62 = (uint64_t *)(v59 + 8);
        }
        if (!v61) {
          uint64_t v58 = v59;
        }
        uint64_t v59 = *v62;
      }
      while (*v62);
      if (v58 != v55 && v7 >= *(_DWORD *)(v58 + 32))
      {
        uint64_t v63 = v55;
        do
        {
          int v64 = *(_DWORD *)(v56 + 32);
          BOOL v65 = v64 < v8;
          if (v64 >= v8) {
            int v66 = (uint64_t *)v56;
          }
          else {
            int v66 = (uint64_t *)(v56 + 8);
          }
          if (!v65) {
            uint64_t v63 = v56;
          }
          uint64_t v56 = *v66;
        }
        while (*v66);
        if (v63 != v55 && v8 >= *(_DWORD *)(v63 + 32)) {
          operator new();
        }
      }
    }
    return 0;
  }
  return v32;
}

void sub_231C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_231C8C(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  int v7 = *a2;
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  uint64_t v9 = a3[1];
  if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
    goto LABEL_8;
  }
  uint64_t v10 = a3[1];
  if (v10)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
      goto LABEL_8;
    }
    uint64_t v11 = a3[1];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  a3[1] = 0;
LABEL_8:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v12 = v7 == 5;
  }
  else {
    BOOL v12 = 0;
  }
  if (v12 && v8 == 5)
  {
    char v72 = 7;
    strcpy((char *)__s2, "(t*t)/t");
    uint64_t v36 = a1[8];
    uint64_t v39 = *(void *)(v36 + 8);
    uint64_t v37 = v36 + 8;
    uint64_t v38 = v39;
    if (!v39) {
      return 0;
    }
    uint64_t v40 = v37;
    do
    {
      unint64_t v41 = *(unsigned __int8 *)(v38 + 55);
      int v42 = (char)v41;
      if ((v41 & 0x80u) != 0) {
        unint64_t v41 = *(void *)(v38 + 40);
      }
      if (v42 >= 0) {
        int v43 = (const void *)(v38 + 32);
      }
      else {
        int v43 = *(const void **)(v38 + 32);
      }
      if (v41 >= 7) {
        size_t v44 = 7;
      }
      else {
        size_t v44 = v41;
      }
      BOOL v45 = v41 < 7;
      int v46 = memcmp(v43, __s2, v44);
      BOOL v47 = v46 < 0;
      if (!v46) {
        BOOL v47 = v45;
      }
      BOOL v48 = !v47;
      if (v47) {
        int v49 = (uint64_t *)(v38 + 8);
      }
      else {
        int v49 = (uint64_t *)v38;
      }
      if (v48) {
        uint64_t v40 = v38;
      }
      uint64_t v38 = *v49;
    }
    while (*v49);
    if (v40 == v37) {
      return 0;
    }
    unint64_t v50 = *(unsigned __int8 *)(v40 + 55);
    int v51 = (char)v50;
    if ((v50 & 0x80u) != 0) {
      unint64_t v50 = *(void *)(v40 + 40);
    }
    if (v51 >= 0) {
      int v52 = (const void *)(v40 + 32);
    }
    else {
      int v52 = *(const void **)(v40 + 32);
    }
    if (v50 >= 7) {
      size_t v53 = 7;
    }
    else {
      size_t v53 = v50;
    }
    BOOL v54 = v50 > 7;
    int v55 = memcmp(__s2, v52, v53);
    BOOL v56 = v55 < 0;
    if (!v55) {
      BOOL v56 = v54;
    }
    if (v56) {
      return 0;
    }
    int v73 = *(_DWORD *)(v40 + 64);
    return sub_248B80((uint64_t)a1, &v73);
  }
  uint64_t v14 = __s2;
  sub_24AAF0(v7, v8, (uint64_t)__s2);
  uint64_t v15 = a1[8];
  uint64_t v18 = *(void *)(v15 + 8);
  uint64_t v17 = v15 + 8;
  uint64_t v16 = v18;
  if (!v18)
  {
    uint64_t v35 = 0;
    if ((v72 & 0x80000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_88;
  }
  if (v72 >= 0) {
    size_t v19 = v72;
  }
  else {
    size_t v19 = (size_t)__s2[1];
  }
  if (v72 < 0) {
    uint64_t v14 = (void **)__s2[0];
  }
  uint64_t v20 = v17;
  do
  {
    int v21 = *(char *)(v16 + 55);
    if (v21 >= 0) {
      size_t v22 = *(unsigned __int8 *)(v16 + 55);
    }
    else {
      size_t v22 = *(void *)(v16 + 40);
    }
    if (v21 >= 0) {
      BOOL v23 = (const void *)(v16 + 32);
    }
    else {
      BOOL v23 = *(const void **)(v16 + 32);
    }
    if (v19 >= v22) {
      size_t v24 = v22;
    }
    else {
      size_t v24 = v19;
    }
    int v25 = memcmp(v23, v14, v24);
    BOOL v26 = v22 < v19;
    if (v25) {
      BOOL v26 = v25 < 0;
    }
    BOOL v27 = !v26;
    if (v26) {
      uint64_t v28 = (uint64_t *)(v16 + 8);
    }
    else {
      uint64_t v28 = (uint64_t *)v16;
    }
    if (v27) {
      uint64_t v20 = v16;
    }
    uint64_t v16 = *v28;
  }
  while (*v28);
  if (v20 == v17)
  {
    uint64_t v35 = 0;
    LOBYTE(v16) = 0;
    if (v72 < 0) {
      goto LABEL_88;
    }
  }
  else
  {
    int v29 = *(char *)(v20 + 55);
    if (v29 >= 0) {
      size_t v30 = *(unsigned __int8 *)(v20 + 55);
    }
    else {
      size_t v30 = *(void *)(v20 + 40);
    }
    if (v29 >= 0) {
      BOOL v31 = (const void *)(v20 + 32);
    }
    else {
      BOOL v31 = *(const void **)(v20 + 32);
    }
    if (v30 >= v19) {
      size_t v32 = v19;
    }
    else {
      size_t v32 = v30;
    }
    int v33 = memcmp(v14, v31, v32);
    BOOL v34 = v19 < v30;
    if (v33) {
      BOOL v34 = v33 < 0;
    }
    if (v34)
    {
      uint64_t v35 = 0;
      LOBYTE(v16) = 0;
      if ((v72 & 0x80000000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_88;
    }
    int v73 = *(_DWORD *)(v20 + 64);
    uint64_t v35 = sub_248B80((uint64_t)a1, &v73);
    LOBYTE(v16) = 1;
    if (v72 < 0) {
LABEL_88:
    }
      operator delete(__s2[0]);
  }
LABEL_89:
  if ((v16 & 1) == 0)
  {
    uint64_t v57 = a1[6];
    uint64_t v60 = *(void *)(v57 + 8);
    uint64_t v58 = v57 + 8;
    uint64_t v59 = v60;
    if (v60)
    {
      uint64_t v61 = v58;
      uint64_t v62 = v59;
      do
      {
        int v63 = *(_DWORD *)(v62 + 32);
        BOOL v64 = v63 < v7;
        if (v63 >= v7) {
          BOOL v65 = (uint64_t *)v62;
        }
        else {
          BOOL v65 = (uint64_t *)(v62 + 8);
        }
        if (!v64) {
          uint64_t v61 = v62;
        }
        uint64_t v62 = *v65;
      }
      while (*v65);
      if (v61 != v58 && v7 >= *(_DWORD *)(v61 + 32))
      {
        uint64_t v66 = v58;
        do
        {
          int v67 = *(_DWORD *)(v59 + 32);
          BOOL v68 = v67 < v8;
          if (v67 >= v8) {
            char v69 = (uint64_t *)v59;
          }
          else {
            char v69 = (uint64_t *)(v59 + 8);
          }
          if (!v68) {
            uint64_t v66 = v59;
          }
          uint64_t v59 = *v69;
        }
        while (*v69);
        if (v66 != v58 && v8 >= *(_DWORD *)(v66 + 32)) {
          operator new();
        }
      }
    }
    return 0;
  }
  return v35;
}

void sub_2321A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2321BC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v8 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v9 = a3[1];
  if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
    goto LABEL_15;
  }
  uint64_t v10 = a3[1];
  if (v10)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
      goto LABEL_15;
    }
    uint64_t v11 = a3[1];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  a3[1] = 0;
LABEL_15:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v12 = v7 == 5;
  }
  else {
    BOOL v12 = 0;
  }
  if (!v12 || v8 != 5)
  {
    uint64_t v14 = __p;
    sub_24B6B0(v7, v8, (uint64_t)__p);
    uint64_t v15 = a1[8];
    uint64_t v18 = *(void *)(v15 + 8);
    uint64_t v16 = v15 + 8;
    uint64_t v17 = v18;
    if (v18)
    {
      if (v72 >= 0) {
        size_t v19 = v72;
      }
      else {
        size_t v19 = (size_t)__p[1];
      }
      if (v72 < 0) {
        uint64_t v14 = (void **)__p[0];
      }
      uint64_t v20 = v16;
      do
      {
        int v21 = *(char *)(v17 + 55);
        if (v21 >= 0) {
          size_t v22 = *(unsigned __int8 *)(v17 + 55);
        }
        else {
          size_t v22 = *(void *)(v17 + 40);
        }
        if (v21 >= 0) {
          BOOL v23 = (const void *)(v17 + 32);
        }
        else {
          BOOL v23 = *(const void **)(v17 + 32);
        }
        if (v19 >= v22) {
          size_t v24 = v22;
        }
        else {
          size_t v24 = v19;
        }
        int v25 = memcmp(v23, v14, v24);
        BOOL v26 = v22 < v19;
        if (v25) {
          BOOL v26 = v25 < 0;
        }
        BOOL v27 = !v26;
        if (v26) {
          uint64_t v28 = (uint64_t *)(v17 + 8);
        }
        else {
          uint64_t v28 = (uint64_t *)v17;
        }
        if (v27) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v28;
      }
      while (*v28);
      if (v20 == v16) {
        goto LABEL_60;
      }
      int v29 = *(char *)(v20 + 55);
      if (v29 >= 0) {
        size_t v30 = *(unsigned __int8 *)(v20 + 55);
      }
      else {
        size_t v30 = *(void *)(v20 + 40);
      }
      if (v29 >= 0) {
        BOOL v31 = (const void *)(v20 + 32);
      }
      else {
        BOOL v31 = *(const void **)(v20 + 32);
      }
      if (v30 >= v19) {
        size_t v32 = v19;
      }
      else {
        size_t v32 = v30;
      }
      int v33 = memcmp(v14, v31, v32);
      BOOL v34 = v19 < v30;
      if (v33) {
        BOOL v34 = v33 < 0;
      }
      if (v34)
      {
LABEL_60:
        uint64_t v35 = 0;
        char v36 = 0;
        if ((v72 & 0x80000000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_61;
      }
      int v73 = *(_DWORD *)(v20 + 64);
      uint64_t v35 = sub_24BC8C((uint64_t)a1, &v73);
      char v36 = 1;
      if (v72 < 0) {
LABEL_61:
      }
        operator delete(__p[0]);
    }
    else
    {
      uint64_t v35 = 0;
      char v36 = 0;
      if (v72 < 0) {
        goto LABEL_61;
      }
    }
LABEL_62:
    if ((v36 & 1) == 0)
    {
      uint64_t v37 = a1[6];
      uint64_t v40 = *(void *)(v37 + 8);
      uint64_t v38 = v37 + 8;
      uint64_t v39 = v40;
      if (v40)
      {
        uint64_t v41 = v38;
        uint64_t v42 = v39;
        do
        {
          int v43 = *(_DWORD *)(v42 + 32);
          BOOL v44 = v43 < v7;
          if (v43 >= v7) {
            BOOL v45 = (uint64_t *)v42;
          }
          else {
            BOOL v45 = (uint64_t *)(v42 + 8);
          }
          if (!v44) {
            uint64_t v41 = v42;
          }
          uint64_t v42 = *v45;
        }
        while (*v45);
        if (v41 != v38 && v7 >= *(_DWORD *)(v41 + 32))
        {
          uint64_t v46 = v38;
          do
          {
            int v47 = *(_DWORD *)(v39 + 32);
            BOOL v48 = v47 < v8;
            if (v47 >= v8) {
              int v49 = (uint64_t *)v39;
            }
            else {
              int v49 = (uint64_t *)(v39 + 8);
            }
            if (!v48) {
              uint64_t v46 = v39;
            }
            uint64_t v39 = *v49;
          }
          while (*v49);
          if (v46 != v38 && v8 >= *(_DWORD *)(v46 + 32)) {
            operator new();
          }
        }
      }
      return 0;
    }
    return v35;
  }
  char v72 = 7;
  strcpy((char *)__p, "t/(t*t)");
  uint64_t v50 = a1[8];
  uint64_t v52 = *(void *)(v50 + 8);
  uint64_t v51 = v50 + 8;
  uint64_t v35 = v52;
  if (v52)
  {
    uint64_t v53 = v51;
    do
    {
      unint64_t v54 = *(unsigned __int8 *)(v35 + 55);
      int v55 = (char)v54;
      if ((v54 & 0x80u) != 0) {
        unint64_t v54 = *(void *)(v35 + 40);
      }
      if (v55 >= 0) {
        BOOL v56 = (const void *)(v35 + 32);
      }
      else {
        BOOL v56 = *(const void **)(v35 + 32);
      }
      if (v54 >= 7) {
        size_t v57 = 7;
      }
      else {
        size_t v57 = v54;
      }
      BOOL v58 = v54 < 7;
      int v59 = memcmp(v56, __p, v57);
      BOOL v60 = v59 < 0;
      if (!v59) {
        BOOL v60 = v58;
      }
      BOOL v61 = !v60;
      if (v60) {
        uint64_t v62 = (uint64_t *)(v35 + 8);
      }
      else {
        uint64_t v62 = (uint64_t *)v35;
      }
      if (v61) {
        uint64_t v53 = v35;
      }
      uint64_t v35 = *v62;
    }
    while (*v62);
    if (v53 != v51)
    {
      unint64_t v63 = *(unsigned __int8 *)(v53 + 55);
      int v64 = (char)v63;
      if ((v63 & 0x80u) != 0) {
        unint64_t v63 = *(void *)(v53 + 40);
      }
      if (v64 >= 0) {
        BOOL v65 = (const void *)(v53 + 32);
      }
      else {
        BOOL v65 = *(const void **)(v53 + 32);
      }
      if (v63 >= 7) {
        size_t v66 = 7;
      }
      else {
        size_t v66 = v63;
      }
      BOOL v67 = v63 > 7;
      int v68 = memcmp(__p, v65, v66);
      BOOL v69 = v68 < 0;
      if (!v68) {
        BOOL v69 = v67;
      }
      if (!v69)
      {
        int v73 = *(_DWORD *)(v53 + 64);
        return sub_24BC8C((uint64_t)a1, &v73);
      }
    }
    return 0;
  }
  return v35;
}

void sub_23275C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_232778(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  int v7 = *a2;
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  uint64_t v9 = a3[1];
  if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
    goto LABEL_8;
  }
  uint64_t v10 = a3[1];
  if (v10)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
      goto LABEL_8;
    }
    uint64_t v11 = a3[1];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  a3[1] = 0;
LABEL_8:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v12 = v7 == 5;
  }
  else {
    BOOL v12 = 0;
  }
  if (!v12 || v8 != 5)
  {
    uint64_t v14 = __p;
    sub_24D820(v7, v8, (uint64_t)__p);
    uint64_t v15 = a1[8];
    uint64_t v18 = *(void *)(v15 + 8);
    uint64_t v16 = v15 + 8;
    uint64_t v17 = v18;
    if (v18)
    {
      if (v72 >= 0) {
        size_t v19 = v72;
      }
      else {
        size_t v19 = (size_t)__p[1];
      }
      if (v72 < 0) {
        uint64_t v14 = (void **)__p[0];
      }
      uint64_t v20 = v16;
      do
      {
        int v21 = *(char *)(v17 + 55);
        if (v21 >= 0) {
          size_t v22 = *(unsigned __int8 *)(v17 + 55);
        }
        else {
          size_t v22 = *(void *)(v17 + 40);
        }
        if (v21 >= 0) {
          BOOL v23 = (const void *)(v17 + 32);
        }
        else {
          BOOL v23 = *(const void **)(v17 + 32);
        }
        if (v19 >= v22) {
          size_t v24 = v22;
        }
        else {
          size_t v24 = v19;
        }
        int v25 = memcmp(v23, v14, v24);
        BOOL v26 = v22 < v19;
        if (v25) {
          BOOL v26 = v25 < 0;
        }
        BOOL v27 = !v26;
        if (v26) {
          uint64_t v28 = (uint64_t *)(v17 + 8);
        }
        else {
          uint64_t v28 = (uint64_t *)v17;
        }
        if (v27) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v28;
      }
      while (*v28);
      if (v20 == v16) {
        goto LABEL_53;
      }
      int v29 = *(char *)(v20 + 55);
      if (v29 >= 0) {
        size_t v30 = *(unsigned __int8 *)(v20 + 55);
      }
      else {
        size_t v30 = *(void *)(v20 + 40);
      }
      if (v29 >= 0) {
        BOOL v31 = (const void *)(v20 + 32);
      }
      else {
        BOOL v31 = *(const void **)(v20 + 32);
      }
      if (v30 >= v19) {
        size_t v32 = v19;
      }
      else {
        size_t v32 = v30;
      }
      int v33 = memcmp(v14, v31, v32);
      BOOL v34 = v19 < v30;
      if (v33) {
        BOOL v34 = v33 < 0;
      }
      if (v34)
      {
LABEL_53:
        uint64_t v35 = 0;
        char v36 = 0;
        if ((v72 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        goto LABEL_54;
      }
      int v73 = *(_DWORD *)(v20 + 64);
      uint64_t v35 = sub_24BC8C((uint64_t)a1, &v73);
      char v36 = 1;
      if (v72 < 0) {
LABEL_54:
      }
        operator delete(__p[0]);
    }
    else
    {
      uint64_t v35 = 0;
      char v36 = 0;
      if (v72 < 0) {
        goto LABEL_54;
      }
    }
LABEL_55:
    if ((v36 & 1) == 0)
    {
      uint64_t v37 = a1[6];
      uint64_t v40 = *(void *)(v37 + 8);
      uint64_t v38 = v37 + 8;
      uint64_t v39 = v40;
      if (v40)
      {
        uint64_t v41 = v38;
        uint64_t v42 = v39;
        do
        {
          int v43 = *(_DWORD *)(v42 + 32);
          BOOL v44 = v43 < v7;
          if (v43 >= v7) {
            BOOL v45 = (uint64_t *)v42;
          }
          else {
            BOOL v45 = (uint64_t *)(v42 + 8);
          }
          if (!v44) {
            uint64_t v41 = v42;
          }
          uint64_t v42 = *v45;
        }
        while (*v45);
        if (v41 != v38 && v7 >= *(_DWORD *)(v41 + 32))
        {
          uint64_t v46 = v38;
          do
          {
            int v47 = *(_DWORD *)(v39 + 32);
            BOOL v48 = v47 < v8;
            if (v47 >= v8) {
              int v49 = (uint64_t *)v39;
            }
            else {
              int v49 = (uint64_t *)(v39 + 8);
            }
            if (!v48) {
              uint64_t v46 = v39;
            }
            uint64_t v39 = *v49;
          }
          while (*v49);
          if (v46 != v38 && v8 >= *(_DWORD *)(v46 + 32)) {
            operator new();
          }
        }
      }
      return 0;
    }
    return v35;
  }
  char v72 = 7;
  strcpy((char *)__p, "(t*t)/t");
  uint64_t v50 = a1[8];
  uint64_t v52 = *(void *)(v50 + 8);
  uint64_t v51 = v50 + 8;
  uint64_t v35 = v52;
  if (v52)
  {
    uint64_t v53 = v51;
    do
    {
      unint64_t v54 = *(unsigned __int8 *)(v35 + 55);
      int v55 = (char)v54;
      if ((v54 & 0x80u) != 0) {
        unint64_t v54 = *(void *)(v35 + 40);
      }
      if (v55 >= 0) {
        BOOL v56 = (const void *)(v35 + 32);
      }
      else {
        BOOL v56 = *(const void **)(v35 + 32);
      }
      if (v54 >= 7) {
        size_t v57 = 7;
      }
      else {
        size_t v57 = v54;
      }
      BOOL v58 = v54 < 7;
      int v59 = memcmp(v56, __p, v57);
      BOOL v60 = v59 < 0;
      if (!v59) {
        BOOL v60 = v58;
      }
      BOOL v61 = !v60;
      if (v60) {
        uint64_t v62 = (uint64_t *)(v35 + 8);
      }
      else {
        uint64_t v62 = (uint64_t *)v35;
      }
      if (v61) {
        uint64_t v53 = v35;
      }
      uint64_t v35 = *v62;
    }
    while (*v62);
    if (v53 != v51)
    {
      unint64_t v63 = *(unsigned __int8 *)(v53 + 55);
      int v64 = (char)v63;
      if ((v63 & 0x80u) != 0) {
        unint64_t v63 = *(void *)(v53 + 40);
      }
      if (v64 >= 0) {
        BOOL v65 = (const void *)(v53 + 32);
      }
      else {
        BOOL v65 = *(const void **)(v53 + 32);
      }
      if (v63 >= 7) {
        size_t v66 = 7;
      }
      else {
        size_t v66 = v63;
      }
      BOOL v67 = v63 > 7;
      int v68 = memcmp(__p, v65, v66);
      BOOL v69 = v68 < 0;
      if (!v68) {
        BOOL v69 = v67;
      }
      if (!v69)
      {
        int v73 = *(_DWORD *)(v53 + 64);
        return sub_24DDFC((uint64_t)a1, &v73);
      }
    }
    return 0;
  }
  return v35;
}

void sub_232C7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_232C98(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)*a3 + 56))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v8 = *a2;
  if (!*a3 || (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 17) {
    goto LABEL_8;
  }
  if (*a3)
  {
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
      goto LABEL_8;
    }
    if (*a3) {
      (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
    }
  }
  *a3 = 0;
LABEL_8:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v9 = v7 == 5;
  }
  else {
    BOOL v9 = 0;
  }
  if (!v9 || v8 != 5)
  {
    uint64_t v11 = __p;
    sub_24F940(v7, v8, (uint64_t)__p);
    uint64_t v12 = a1[8];
    uint64_t v15 = *(void *)(v12 + 8);
    uint64_t v13 = v12 + 8;
    uint64_t v14 = v15;
    if (v15)
    {
      if (v69 >= 0) {
        size_t v16 = v69;
      }
      else {
        size_t v16 = (size_t)__p[1];
      }
      if (v69 < 0) {
        uint64_t v11 = (void **)__p[0];
      }
      uint64_t v17 = v13;
      do
      {
        int v18 = *(char *)(v14 + 55);
        if (v18 >= 0) {
          size_t v19 = *(unsigned __int8 *)(v14 + 55);
        }
        else {
          size_t v19 = *(void *)(v14 + 40);
        }
        if (v18 >= 0) {
          uint64_t v20 = (const void *)(v14 + 32);
        }
        else {
          uint64_t v20 = *(const void **)(v14 + 32);
        }
        if (v16 >= v19) {
          size_t v21 = v19;
        }
        else {
          size_t v21 = v16;
        }
        int v22 = memcmp(v20, v11, v21);
        BOOL v23 = v19 < v16;
        if (v22) {
          BOOL v23 = v22 < 0;
        }
        BOOL v24 = !v23;
        if (v23) {
          int v25 = (uint64_t *)(v14 + 8);
        }
        else {
          int v25 = (uint64_t *)v14;
        }
        if (v24) {
          uint64_t v17 = v14;
        }
        uint64_t v14 = *v25;
      }
      while (*v25);
      if (v17 == v13) {
        goto LABEL_53;
      }
      int v26 = *(char *)(v17 + 55);
      if (v26 >= 0) {
        size_t v27 = *(unsigned __int8 *)(v17 + 55);
      }
      else {
        size_t v27 = *(void *)(v17 + 40);
      }
      if (v26 >= 0) {
        uint64_t v28 = (const void *)(v17 + 32);
      }
      else {
        uint64_t v28 = *(const void **)(v17 + 32);
      }
      if (v27 >= v16) {
        size_t v29 = v16;
      }
      else {
        size_t v29 = v27;
      }
      int v30 = memcmp(v11, v28, v29);
      BOOL v31 = v16 < v27;
      if (v30) {
        BOOL v31 = v30 < 0;
      }
      if (v31)
      {
LABEL_53:
        uint64_t v32 = 0;
        char v33 = 0;
        if ((v69 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        goto LABEL_54;
      }
      int v70 = *(_DWORD *)(v17 + 64);
      uint64_t v32 = sub_24DDFC((uint64_t)a1, &v70);
      char v33 = 1;
      if (v69 < 0) {
LABEL_54:
      }
        operator delete(__p[0]);
    }
    else
    {
      uint64_t v32 = 0;
      char v33 = 0;
      if (v69 < 0) {
        goto LABEL_54;
      }
    }
LABEL_55:
    if ((v33 & 1) == 0)
    {
      uint64_t v34 = a1[6];
      uint64_t v37 = *(void *)(v34 + 8);
      uint64_t v35 = v34 + 8;
      uint64_t v36 = v37;
      if (v37)
      {
        uint64_t v38 = v35;
        uint64_t v39 = v36;
        do
        {
          int v40 = *(_DWORD *)(v39 + 32);
          BOOL v41 = v40 < v7;
          if (v40 >= v7) {
            uint64_t v42 = (uint64_t *)v39;
          }
          else {
            uint64_t v42 = (uint64_t *)(v39 + 8);
          }
          if (!v41) {
            uint64_t v38 = v39;
          }
          uint64_t v39 = *v42;
        }
        while (*v42);
        if (v38 != v35 && v7 >= *(_DWORD *)(v38 + 32))
        {
          uint64_t v43 = v35;
          do
          {
            int v44 = *(_DWORD *)(v36 + 32);
            BOOL v45 = v44 < v8;
            if (v44 >= v8) {
              uint64_t v46 = (uint64_t *)v36;
            }
            else {
              uint64_t v46 = (uint64_t *)(v36 + 8);
            }
            if (!v45) {
              uint64_t v43 = v36;
            }
            uint64_t v36 = *v46;
          }
          while (*v46);
          if (v43 != v35 && v8 >= *(_DWORD *)(v43 + 32)) {
            operator new();
          }
        }
      }
      return 0;
    }
    return v32;
  }
  char v69 = 7;
  strcpy((char *)__p, "t/(t*t)");
  uint64_t v47 = a1[8];
  uint64_t v49 = *(void *)(v47 + 8);
  uint64_t v48 = v47 + 8;
  uint64_t v32 = v49;
  if (v49)
  {
    uint64_t v50 = v48;
    do
    {
      unint64_t v51 = *(unsigned __int8 *)(v32 + 55);
      int v52 = (char)v51;
      if ((v51 & 0x80u) != 0) {
        unint64_t v51 = *(void *)(v32 + 40);
      }
      if (v52 >= 0) {
        uint64_t v53 = (const void *)(v32 + 32);
      }
      else {
        uint64_t v53 = *(const void **)(v32 + 32);
      }
      if (v51 >= 7) {
        size_t v54 = 7;
      }
      else {
        size_t v54 = v51;
      }
      BOOL v55 = v51 < 7;
      int v56 = memcmp(v53, __p, v54);
      BOOL v57 = v56 < 0;
      if (!v56) {
        BOOL v57 = v55;
      }
      BOOL v58 = !v57;
      if (v57) {
        int v59 = (uint64_t *)(v32 + 8);
      }
      else {
        int v59 = (uint64_t *)v32;
      }
      if (v58) {
        uint64_t v50 = v32;
      }
      uint64_t v32 = *v59;
    }
    while (*v59);
    if (v50 != v48)
    {
      unint64_t v60 = *(unsigned __int8 *)(v50 + 55);
      int v61 = (char)v60;
      if ((v60 & 0x80u) != 0) {
        unint64_t v60 = *(void *)(v50 + 40);
      }
      if (v61 >= 0) {
        uint64_t v62 = (const void *)(v50 + 32);
      }
      else {
        uint64_t v62 = *(const void **)(v50 + 32);
      }
      if (v60 >= 7) {
        size_t v63 = 7;
      }
      else {
        size_t v63 = v60;
      }
      BOOL v64 = v60 > 7;
      int v65 = memcmp(__p, v62, v63);
      BOOL v66 = v65 < 0;
      if (!v65) {
        BOOL v66 = v64;
      }
      if (!v66)
      {
        int v70 = *(_DWORD *)(v50 + 64);
        return sub_24BC8C((uint64_t)a1, &v70);
      }
    }
    return 0;
  }
  return v32;
}

void sub_2331A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2331BC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  int v7 = *a2;
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  uint64_t v9 = a3[1];
  if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
    goto LABEL_8;
  }
  uint64_t v10 = a3[1];
  if (v10)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
      goto LABEL_8;
    }
    uint64_t v11 = a3[1];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  a3[1] = 0;
LABEL_8:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v12 = v7 == 5;
  }
  else {
    BOOL v12 = 0;
  }
  if (!v12 || v8 != 5)
  {
    uint64_t v14 = __p;
    sub_2503A0(v7, v8, (uint64_t)__p);
    uint64_t v15 = a1[8];
    uint64_t v18 = *(void *)(v15 + 8);
    uint64_t v16 = v15 + 8;
    uint64_t v17 = v18;
    if (v18)
    {
      if (v72 >= 0) {
        size_t v19 = v72;
      }
      else {
        size_t v19 = (size_t)__p[1];
      }
      if (v72 < 0) {
        uint64_t v14 = (void **)__p[0];
      }
      uint64_t v20 = v16;
      do
      {
        int v21 = *(char *)(v17 + 55);
        if (v21 >= 0) {
          size_t v22 = *(unsigned __int8 *)(v17 + 55);
        }
        else {
          size_t v22 = *(void *)(v17 + 40);
        }
        if (v21 >= 0) {
          BOOL v23 = (const void *)(v17 + 32);
        }
        else {
          BOOL v23 = *(const void **)(v17 + 32);
        }
        if (v19 >= v22) {
          size_t v24 = v22;
        }
        else {
          size_t v24 = v19;
        }
        int v25 = memcmp(v23, v14, v24);
        BOOL v26 = v22 < v19;
        if (v25) {
          BOOL v26 = v25 < 0;
        }
        BOOL v27 = !v26;
        if (v26) {
          uint64_t v28 = (uint64_t *)(v17 + 8);
        }
        else {
          uint64_t v28 = (uint64_t *)v17;
        }
        if (v27) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v28;
      }
      while (*v28);
      if (v20 == v16) {
        goto LABEL_53;
      }
      int v29 = *(char *)(v20 + 55);
      if (v29 >= 0) {
        size_t v30 = *(unsigned __int8 *)(v20 + 55);
      }
      else {
        size_t v30 = *(void *)(v20 + 40);
      }
      if (v29 >= 0) {
        BOOL v31 = (const void *)(v20 + 32);
      }
      else {
        BOOL v31 = *(const void **)(v20 + 32);
      }
      if (v30 >= v19) {
        size_t v32 = v19;
      }
      else {
        size_t v32 = v30;
      }
      int v33 = memcmp(v14, v31, v32);
      BOOL v34 = v19 < v30;
      if (v33) {
        BOOL v34 = v33 < 0;
      }
      if (v34)
      {
LABEL_53:
        uint64_t v35 = 0;
        char v36 = 0;
        if ((v72 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        goto LABEL_54;
      }
      int v73 = *(_DWORD *)(v20 + 64);
      uint64_t v35 = sub_24DDFC((uint64_t)a1, &v73);
      char v36 = 1;
      if (v72 < 0) {
LABEL_54:
      }
        operator delete(__p[0]);
    }
    else
    {
      uint64_t v35 = 0;
      char v36 = 0;
      if (v72 < 0) {
        goto LABEL_54;
      }
    }
LABEL_55:
    if ((v36 & 1) == 0)
    {
      uint64_t v37 = a1[6];
      uint64_t v40 = *(void *)(v37 + 8);
      uint64_t v38 = v37 + 8;
      uint64_t v39 = v40;
      if (v40)
      {
        uint64_t v41 = v38;
        uint64_t v42 = v39;
        do
        {
          int v43 = *(_DWORD *)(v42 + 32);
          BOOL v44 = v43 < v7;
          if (v43 >= v7) {
            BOOL v45 = (uint64_t *)v42;
          }
          else {
            BOOL v45 = (uint64_t *)(v42 + 8);
          }
          if (!v44) {
            uint64_t v41 = v42;
          }
          uint64_t v42 = *v45;
        }
        while (*v45);
        if (v41 != v38 && v7 >= *(_DWORD *)(v41 + 32))
        {
          uint64_t v46 = v38;
          do
          {
            int v47 = *(_DWORD *)(v39 + 32);
            BOOL v48 = v47 < v8;
            if (v47 >= v8) {
              uint64_t v49 = (uint64_t *)v39;
            }
            else {
              uint64_t v49 = (uint64_t *)(v39 + 8);
            }
            if (!v48) {
              uint64_t v46 = v39;
            }
            uint64_t v39 = *v49;
          }
          while (*v49);
          if (v46 != v38 && v8 >= *(_DWORD *)(v46 + 32)) {
            operator new();
          }
        }
      }
      return 0;
    }
    return v35;
  }
  char v72 = 7;
  strcpy((char *)__p, "(t*t)/t");
  uint64_t v50 = a1[8];
  uint64_t v52 = *(void *)(v50 + 8);
  uint64_t v51 = v50 + 8;
  uint64_t v35 = v52;
  if (v52)
  {
    uint64_t v53 = v51;
    do
    {
      unint64_t v54 = *(unsigned __int8 *)(v35 + 55);
      int v55 = (char)v54;
      if ((v54 & 0x80u) != 0) {
        unint64_t v54 = *(void *)(v35 + 40);
      }
      if (v55 >= 0) {
        int v56 = (const void *)(v35 + 32);
      }
      else {
        int v56 = *(const void **)(v35 + 32);
      }
      if (v54 >= 7) {
        size_t v57 = 7;
      }
      else {
        size_t v57 = v54;
      }
      BOOL v58 = v54 < 7;
      int v59 = memcmp(v56, __p, v57);
      BOOL v60 = v59 < 0;
      if (!v59) {
        BOOL v60 = v58;
      }
      BOOL v61 = !v60;
      if (v60) {
        uint64_t v62 = (uint64_t *)(v35 + 8);
      }
      else {
        uint64_t v62 = (uint64_t *)v35;
      }
      if (v61) {
        uint64_t v53 = v35;
      }
      uint64_t v35 = *v62;
    }
    while (*v62);
    if (v53 != v51)
    {
      unint64_t v63 = *(unsigned __int8 *)(v53 + 55);
      int v64 = (char)v63;
      if ((v63 & 0x80u) != 0) {
        unint64_t v63 = *(void *)(v53 + 40);
      }
      if (v64 >= 0) {
        int v65 = (const void *)(v53 + 32);
      }
      else {
        int v65 = *(const void **)(v53 + 32);
      }
      if (v63 >= 7) {
        size_t v66 = 7;
      }
      else {
        size_t v66 = v63;
      }
      BOOL v67 = v63 > 7;
      int v68 = memcmp(__p, v65, v66);
      BOOL v69 = v68 < 0;
      if (!v68) {
        BOOL v69 = v67;
      }
      if (!v69)
      {
        int v73 = *(_DWORD *)(v53 + 64);
        return sub_24BC8C((uint64_t)a1, &v73);
      }
    }
    return 0;
  }
  return v35;
}

void sub_2336C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2336DC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v8 = *a2;
  if (!*a3 || (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 17) {
    goto LABEL_8;
  }
  if (*a3)
  {
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
      goto LABEL_8;
    }
    if (*a3) {
      (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
    }
  }
  *a3 = 0;
LABEL_8:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v9 = v7 == 5;
  }
  else {
    BOOL v9 = 0;
  }
  if (!v9 || v8 != 5)
  {
    uint64_t v11 = __p;
    sub_250F64(v7, v8, (uint64_t)__p);
    uint64_t v12 = a1[8];
    uint64_t v15 = *(void *)(v12 + 8);
    uint64_t v13 = v12 + 8;
    uint64_t v14 = v15;
    if (v15)
    {
      if (v69 >= 0) {
        size_t v16 = v69;
      }
      else {
        size_t v16 = (size_t)__p[1];
      }
      if (v69 < 0) {
        uint64_t v11 = (void **)__p[0];
      }
      uint64_t v17 = v13;
      do
      {
        int v18 = *(char *)(v14 + 55);
        if (v18 >= 0) {
          size_t v19 = *(unsigned __int8 *)(v14 + 55);
        }
        else {
          size_t v19 = *(void *)(v14 + 40);
        }
        if (v18 >= 0) {
          uint64_t v20 = (const void *)(v14 + 32);
        }
        else {
          uint64_t v20 = *(const void **)(v14 + 32);
        }
        if (v16 >= v19) {
          size_t v21 = v19;
        }
        else {
          size_t v21 = v16;
        }
        int v22 = memcmp(v20, v11, v21);
        BOOL v23 = v19 < v16;
        if (v22) {
          BOOL v23 = v22 < 0;
        }
        BOOL v24 = !v23;
        if (v23) {
          int v25 = (uint64_t *)(v14 + 8);
        }
        else {
          int v25 = (uint64_t *)v14;
        }
        if (v24) {
          uint64_t v17 = v14;
        }
        uint64_t v14 = *v25;
      }
      while (*v25);
      if (v17 == v13) {
        goto LABEL_53;
      }
      int v26 = *(char *)(v17 + 55);
      if (v26 >= 0) {
        size_t v27 = *(unsigned __int8 *)(v17 + 55);
      }
      else {
        size_t v27 = *(void *)(v17 + 40);
      }
      if (v26 >= 0) {
        uint64_t v28 = (const void *)(v17 + 32);
      }
      else {
        uint64_t v28 = *(const void **)(v17 + 32);
      }
      if (v27 >= v16) {
        size_t v29 = v16;
      }
      else {
        size_t v29 = v27;
      }
      int v30 = memcmp(v11, v28, v29);
      BOOL v31 = v16 < v27;
      if (v30) {
        BOOL v31 = v30 < 0;
      }
      if (v31)
      {
LABEL_53:
        uint64_t v32 = 0;
        char v33 = 0;
        if ((v69 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        goto LABEL_54;
      }
      int v70 = *(_DWORD *)(v17 + 64);
      uint64_t v32 = sub_251540((uint64_t)a1, &v70);
      char v33 = 1;
      if (v69 < 0) {
LABEL_54:
      }
        operator delete(__p[0]);
    }
    else
    {
      uint64_t v32 = 0;
      char v33 = 0;
      if (v69 < 0) {
        goto LABEL_54;
      }
    }
LABEL_55:
    if ((v33 & 1) == 0)
    {
      uint64_t v34 = a1[6];
      uint64_t v37 = *(void *)(v34 + 8);
      uint64_t v35 = v34 + 8;
      uint64_t v36 = v37;
      if (v37)
      {
        uint64_t v38 = v35;
        uint64_t v39 = v36;
        do
        {
          int v40 = *(_DWORD *)(v39 + 32);
          BOOL v41 = v40 < v7;
          if (v40 >= v7) {
            uint64_t v42 = (uint64_t *)v39;
          }
          else {
            uint64_t v42 = (uint64_t *)(v39 + 8);
          }
          if (!v41) {
            uint64_t v38 = v39;
          }
          uint64_t v39 = *v42;
        }
        while (*v42);
        if (v38 != v35 && v7 >= *(_DWORD *)(v38 + 32))
        {
          uint64_t v43 = v35;
          do
          {
            int v44 = *(_DWORD *)(v36 + 32);
            BOOL v45 = v44 < v8;
            if (v44 >= v8) {
              uint64_t v46 = (uint64_t *)v36;
            }
            else {
              uint64_t v46 = (uint64_t *)(v36 + 8);
            }
            if (!v45) {
              uint64_t v43 = v36;
            }
            uint64_t v36 = *v46;
          }
          while (*v46);
          if (v43 != v35 && v8 >= *(_DWORD *)(v43 + 32)) {
            operator new();
          }
        }
      }
      return 0;
    }
    return v32;
  }
  char v69 = 7;
  strcpy((char *)__p, "t/(t*t)");
  uint64_t v47 = a1[8];
  uint64_t v49 = *(void *)(v47 + 8);
  uint64_t v48 = v47 + 8;
  uint64_t v32 = v49;
  if (v49)
  {
    uint64_t v50 = v48;
    do
    {
      unint64_t v51 = *(unsigned __int8 *)(v32 + 55);
      int v52 = (char)v51;
      if ((v51 & 0x80u) != 0) {
        unint64_t v51 = *(void *)(v32 + 40);
      }
      if (v52 >= 0) {
        uint64_t v53 = (const void *)(v32 + 32);
      }
      else {
        uint64_t v53 = *(const void **)(v32 + 32);
      }
      if (v51 >= 7) {
        size_t v54 = 7;
      }
      else {
        size_t v54 = v51;
      }
      BOOL v55 = v51 < 7;
      int v56 = memcmp(v53, __p, v54);
      BOOL v57 = v56 < 0;
      if (!v56) {
        BOOL v57 = v55;
      }
      BOOL v58 = !v57;
      if (v57) {
        int v59 = (uint64_t *)(v32 + 8);
      }
      else {
        int v59 = (uint64_t *)v32;
      }
      if (v58) {
        uint64_t v50 = v32;
      }
      uint64_t v32 = *v59;
    }
    while (*v59);
    if (v50 != v48)
    {
      unint64_t v60 = *(unsigned __int8 *)(v50 + 55);
      int v61 = (char)v60;
      if ((v60 & 0x80u) != 0) {
        unint64_t v60 = *(void *)(v50 + 40);
      }
      if (v61 >= 0) {
        uint64_t v62 = (const void *)(v50 + 32);
      }
      else {
        uint64_t v62 = *(const void **)(v50 + 32);
      }
      if (v60 >= 7) {
        size_t v63 = 7;
      }
      else {
        size_t v63 = v60;
      }
      BOOL v64 = v60 > 7;
      int v65 = memcmp(__p, v62, v63);
      BOOL v66 = v65 < 0;
      if (!v65) {
        BOOL v66 = v64;
      }
      if (!v66)
      {
        int v70 = *(_DWORD *)(v50 + 64);
        return sub_251540((uint64_t)a1, &v70);
      }
    }
    return 0;
  }
  return v32;
}

void sub_233BE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_233C00(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 16))();
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  int v7 = *a2;
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v9 = a3[1];
  if (!v9 || (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) == 17) {
    goto LABEL_15;
  }
  uint64_t v10 = a3[1];
  if (v10)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
      goto LABEL_15;
    }
    uint64_t v11 = a3[1];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
  }
  a3[1] = 0;
LABEL_15:
  if (*(unsigned char *)(a1[10] + 190)) {
    BOOL v12 = v7 == 5;
  }
  else {
    BOOL v12 = 0;
  }
  if (!v12 || v8 != 5)
  {
    uint64_t v14 = __p;
    sub_253008(v7, v8, (uint64_t)__p);
    uint64_t v15 = a1[8];
    uint64_t v18 = *(void *)(v15 + 8);
    uint64_t v16 = v15 + 8;
    uint64_t v17 = v18;
    if (v18)
    {
      if (v72 >= 0) {
        size_t v19 = v72;
      }
      else {
        size_t v19 = (size_t)__p[1];
      }
      if (v72 < 0) {
        uint64_t v14 = (void **)__p[0];
      }
      uint64_t v20 = v16;
      do
      {
        int v21 = *(char *)(v17 + 55);
        if (v21 >= 0) {
          size_t v22 = *(unsigned __int8 *)(v17 + 55);
        }
        else {
          size_t v22 = *(void *)(v17 + 40);
        }
        if (v21 >= 0) {
          BOOL v23 = (const void *)(v17 + 32);
        }
        else {
          BOOL v23 = *(const void **)(v17 + 32);
        }
        if (v19 >= v22) {
          size_t v24 = v22;
        }
        else {
          size_t v24 = v19;
        }
        int v25 = memcmp(v23, v14, v24);
        BOOL v26 = v22 < v19;
        if (v25) {
          BOOL v26 = v25 < 0;
        }
        BOOL v27 = !v26;
        if (v26) {
          uint64_t v28 = (uint64_t *)(v17 + 8);
        }
        else {
          uint64_t v28 = (uint64_t *)v17;
        }
        if (v27) {
          uint64_t v20 = v17;
        }
        uint64_t v17 = *v28;
      }
      while (*v28);
      if (v20 == v16) {
        goto LABEL_60;
      }
      int v29 = *(char *)(v20 + 55);
      if (v29 >= 0) {
        size_t v30 = *(unsigned __int8 *)(v20 + 55);
      }
      else {
        size_t v30 = *(void *)(v20 + 40);
      }
      if (v29 >= 0) {
        BOOL v31 = (const void *)(v20 + 32);
      }
      else {
        BOOL v31 = *(const void **)(v20 + 32);
      }
      if (v30 >= v19) {
        size_t v32 = v19;
      }
      else {
        size_t v32 = v30;
      }
      int v33 = memcmp(v14, v31, v32);
      BOOL v34 = v19 < v30;
      if (v33) {
        BOOL v34 = v33 < 0;
      }
      if (v34)
      {
LABEL_60:
        uint64_t v35 = 0;
        char v36 = 0;
        if ((v72 & 0x80000000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_61;
      }
      int v73 = *(_DWORD *)(v20 + 64);
      uint64_t v35 = sub_251540((uint64_t)a1, &v73);
      char v36 = 1;
      if (v72 < 0) {
LABEL_61:
      }
        operator delete(__p[0]);
    }
    else
    {
      uint64_t v35 = 0;
      char v36 = 0;
      if (v72 < 0) {
        goto LABEL_61;
      }
    }
LABEL_62:
    if ((v36 & 1) == 0)
    {
      uint64_t v37 = a1[6];
      uint64_t v40 = *(void *)(v37 + 8);
      uint64_t v38 = v37 + 8;
      uint64_t v39 = v40;
      if (v40)
      {
        uint64_t v41 = v38;
        uint64_t v42 = v39;
        do
        {
          int v43 = *(_DWORD *)(v42 + 32);
          BOOL v44 = v43 < v7;
          if (v43 >= v7) {
            BOOL v45 = (uint64_t *)v42;
          }
          else {
            BOOL v45 = (uint64_t *)(v42 + 8);
          }
          if (!v44) {
            uint64_t v41 = v42;
          }
          uint64_t v42 = *v45;
        }
        while (*v45);
        if (v41 != v38 && v7 >= *(_DWORD *)(v41 + 32))
        {
          uint64_t v46 = v38;
          do
          {
            int v47 = *(_DWORD *)(v39 + 32);
            BOOL v48 = v47 < v8;
            if (v47 >= v8) {
              uint64_t v49 = (uint64_t *)v39;
            }
            else {
              uint64_t v49 = (uint64_t *)(v39 + 8);
            }
            if (!v48) {
              uint64_t v46 = v39;
            }
            uint64_t v39 = *v49;
          }
          while (*v49);
          if (v46 != v38 && v8 >= *(_DWORD *)(v46 + 32)) {
            operator new();
          }
        }
      }
      return 0;
    }
    return v35;
  }
  char v72 = 7;
  strcpy((char *)__p, "(t*t)/t");
  uint64_t v50 = a1[8];
  uint64_t v52 = *(void *)(v50 + 8);
  uint64_t v51 = v50 + 8;
  uint64_t v35 = v52;
  if (v52)
  {
    uint64_t v53 = v51;
    do
    {
      unint64_t v54 = *(unsigned __int8 *)(v35 + 55);
      int v55 = (char)v54;
      if ((v54 & 0x80u) != 0) {
        unint64_t v54 = *(void *)(v35 + 40);
      }
      if (v55 >= 0) {
        int v56 = (const void *)(v35 + 32);
      }
      else {
        int v56 = *(const void **)(v35 + 32);
      }
      if (v54 >= 7) {
        size_t v57 = 7;
      }
      else {
        size_t v57 = v54;
      }
      BOOL v58 = v54 < 7;
      int v59 = memcmp(v56, __p, v57);
      BOOL v60 = v59 < 0;
      if (!v59) {
        BOOL v60 = v58;
      }
      BOOL v61 = !v60;
      if (v60) {
        uint64_t v62 = (uint64_t *)(v35 + 8);
      }
      else {
        uint64_t v62 = (uint64_t *)v35;
      }
      if (v61) {
        uint64_t v53 = v35;
      }
      uint64_t v35 = *v62;
    }
    while (*v62);
    if (v53 != v51)
    {
      unint64_t v63 = *(unsigned __int8 *)(v53 + 55);
      int v64 = (char)v63;
      if ((v63 & 0x80u) != 0) {
        unint64_t v63 = *(void *)(v53 + 40);
      }
      if (v64 >= 0) {
        int v65 = (const void *)(v53 + 32);
      }
      else {
        int v65 = *(const void **)(v53 + 32);
      }
      if (v63 >= 7) {
        size_t v66 = 7;
      }
      else {
        size_t v66 = v63;
      }
      BOOL v67 = v63 > 7;
      int v68 = memcmp(__p, v65, v66);
      BOOL v69 = v68 < 0;
      if (!v68) {
        BOOL v69 = v67;
      }
      if (!v69)
      {
        int v73 = *(_DWORD *)(v53 + 64);
        return sub_251540((uint64_t)a1, &v73);
      }
    }
    return 0;
  }
  return v35;
}

void sub_23419C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2341B8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v8 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v9 = a3[1];
  if (v9 && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    uint64_t v10 = a3[1];
    if (v10)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
        goto LABEL_15;
      }
      uint64_t v11 = a3[1];
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (*(unsigned char *)(a1[10] + 190))
  {
    BOOL v12 = v7 == 2 && v8 == 2;
    if (v12 || (v7 == 2 ? (BOOL v13 = v8 == 3) : (BOOL v13 = 0), v13)) {
      operator new();
    }
    BOOL v14 = v7 == 3 && v8 == 2;
    if (v14 || (v7 == 3 ? (BOOL v15 = v8 == 3) : (BOOL v15 = 0), v15)) {
      operator new();
    }
    BOOL v16 = v7 == 4 && v8 == 4;
    if (v16 || (v7 == 4 ? (BOOL v17 = v8 == 5) : (BOOL v17 = 0), v17)) {
      operator new();
    }
    BOOL v18 = v7 == 5 && v8 == 4;
    if (v18 || (v7 == 5 ? (BOOL v19 = v8 == 5) : (BOOL v19 = 0), v19)) {
      operator new();
    }
  }
  uint64_t v20 = __p;
  sub_253A64(v7, v8, (uint64_t)__p);
  uint64_t v21 = a1[8];
  uint64_t v24 = *(void *)(v21 + 8);
  uint64_t v22 = v21 + 8;
  uint64_t v23 = v24;
  if (!v24) {
    goto LABEL_86;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v25 = v58;
  }
  else {
    size_t v25 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    uint64_t v20 = (void **)__p[0];
  }
  uint64_t v26 = v22;
  do
  {
    int v27 = *(char *)(v23 + 55);
    if (v27 >= 0) {
      size_t v28 = *(unsigned __int8 *)(v23 + 55);
    }
    else {
      size_t v28 = *(void *)(v23 + 40);
    }
    if (v27 >= 0) {
      int v29 = (const void *)(v23 + 32);
    }
    else {
      int v29 = *(const void **)(v23 + 32);
    }
    if (v25 >= v28) {
      size_t v30 = v28;
    }
    else {
      size_t v30 = v25;
    }
    int v31 = memcmp(v29, v20, v30);
    BOOL v32 = v28 < v25;
    if (v31) {
      BOOL v32 = v31 < 0;
    }
    BOOL v33 = !v32;
    if (v32) {
      BOOL v34 = (uint64_t *)(v23 + 8);
    }
    else {
      BOOL v34 = (uint64_t *)v23;
    }
    if (v33) {
      uint64_t v26 = v23;
    }
    uint64_t v23 = *v34;
  }
  while (*v34);
  if (v26 == v22) {
    goto LABEL_86;
  }
  int v35 = *(char *)(v26 + 55);
  if (v35 >= 0) {
    size_t v36 = *(unsigned __int8 *)(v26 + 55);
  }
  else {
    size_t v36 = *(void *)(v26 + 40);
  }
  if (v35 >= 0) {
    uint64_t v37 = (const void *)(v26 + 32);
  }
  else {
    uint64_t v37 = *(const void **)(v26 + 32);
  }
  if (v36 >= v25) {
    size_t v38 = v25;
  }
  else {
    size_t v38 = v36;
  }
  int v39 = memcmp(v20, v37, v38);
  BOOL v40 = v25 < v36;
  if (v39) {
    BOOL v40 = v39 < 0;
  }
  if (v40)
  {
LABEL_86:
    uint64_t v41 = 0;
    char v42 = 0;
    if (((char)v58 & 0x80000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_87;
  }
  int v59 = *(_DWORD *)(v26 + 64);
  uint64_t v41 = sub_254040((uint64_t)a1, &v59);
  char v42 = 1;
  if ((char)v58 < 0) {
LABEL_87:
  }
    operator delete(__p[0]);
LABEL_88:
  if ((v42 & 1) == 0)
  {
    uint64_t v43 = a1[6];
    uint64_t v46 = *(void *)(v43 + 8);
    uint64_t v44 = v43 + 8;
    uint64_t v45 = v46;
    if (v46)
    {
      uint64_t v47 = v44;
      uint64_t v48 = v45;
      do
      {
        int v49 = *(_DWORD *)(v48 + 32);
        BOOL v50 = v49 < v7;
        if (v49 >= v7) {
          uint64_t v51 = (uint64_t *)v48;
        }
        else {
          uint64_t v51 = (uint64_t *)(v48 + 8);
        }
        if (!v50) {
          uint64_t v47 = v48;
        }
        uint64_t v48 = *v51;
      }
      while (*v51);
      if (v47 != v44 && v7 >= *(_DWORD *)(v47 + 32))
      {
        uint64_t v52 = v44;
        do
        {
          int v53 = *(_DWORD *)(v45 + 32);
          BOOL v54 = v53 < v8;
          if (v53 >= v8) {
            int v55 = (uint64_t *)v45;
          }
          else {
            int v55 = (uint64_t *)(v45 + 8);
          }
          if (!v54) {
            uint64_t v52 = v45;
          }
          uint64_t v45 = *v55;
        }
        while (*v55);
        if (v52 != v44 && v8 >= *(_DWORD *)(v52 + 32)) {
          operator new();
        }
      }
    }
    return 0;
  }
  return v41;
}

void sub_234790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2347AC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 16))();
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  int v7 = *a2;
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v9 = a3[1];
  if (v9 && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    uint64_t v10 = a3[1];
    if (v10)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
        goto LABEL_15;
      }
      uint64_t v11 = a3[1];
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (*(unsigned char *)(a1[10] + 190))
  {
    if (v7 == 2 && v8 == 2 || v7 == 2 && v8 == 3) {
      operator new();
    }
    if (v7 == 3 && v8 == 2 || v7 == 3 && v8 == 3) {
      operator new();
    }
    if (v7 == 4 && v8 == 4 || v7 == 4 && v8 == 5) {
      operator new();
    }
    if (v7 == 5 && v8 == 4 || v7 == 5 && v8 == 5) {
      operator new();
    }
  }
  BOOL v12 = __p;
  sub_255B10(v7, v8, (uint64_t)__p);
  uint64_t v13 = a1[8];
  uint64_t v16 = *(void *)(v13 + 8);
  uint64_t v14 = v13 + 8;
  uint64_t v15 = v16;
  if (!v16) {
    goto LABEL_74;
  }
  if ((v50 & 0x80u) == 0) {
    size_t v17 = v50;
  }
  else {
    size_t v17 = (size_t)__p[1];
  }
  if ((v50 & 0x80u) != 0) {
    BOOL v12 = (void **)__p[0];
  }
  uint64_t v18 = v14;
  do
  {
    int v19 = *(char *)(v15 + 55);
    if (v19 >= 0) {
      size_t v20 = *(unsigned __int8 *)(v15 + 55);
    }
    else {
      size_t v20 = *(void *)(v15 + 40);
    }
    if (v19 >= 0) {
      uint64_t v21 = (const void *)(v15 + 32);
    }
    else {
      uint64_t v21 = *(const void **)(v15 + 32);
    }
    if (v17 >= v20) {
      size_t v22 = v20;
    }
    else {
      size_t v22 = v17;
    }
    int v23 = memcmp(v21, v12, v22);
    BOOL v24 = v20 < v17;
    if (v23) {
      BOOL v24 = v23 < 0;
    }
    BOOL v25 = !v24;
    if (v24) {
      uint64_t v26 = (uint64_t *)(v15 + 8);
    }
    else {
      uint64_t v26 = (uint64_t *)v15;
    }
    if (v25) {
      uint64_t v18 = v15;
    }
    uint64_t v15 = *v26;
  }
  while (*v26);
  if (v18 == v14) {
    goto LABEL_74;
  }
  int v27 = *(char *)(v18 + 55);
  if (v27 >= 0) {
    size_t v28 = *(unsigned __int8 *)(v18 + 55);
  }
  else {
    size_t v28 = *(void *)(v18 + 40);
  }
  if (v27 >= 0) {
    int v29 = (const void *)(v18 + 32);
  }
  else {
    int v29 = *(const void **)(v18 + 32);
  }
  if (v28 >= v17) {
    size_t v30 = v17;
  }
  else {
    size_t v30 = v28;
  }
  int v31 = memcmp(v12, v29, v30);
  BOOL v32 = v17 < v28;
  if (v31) {
    BOOL v32 = v31 < 0;
  }
  if (v32)
  {
LABEL_74:
    uint64_t v33 = 0;
    char v34 = 0;
    if (((char)v50 & 0x80000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
  int v51 = *(_DWORD *)(v18 + 64);
  uint64_t v33 = sub_254040((uint64_t)a1, &v51);
  char v34 = 1;
  if ((char)v50 < 0) {
LABEL_75:
  }
    operator delete(__p[0]);
LABEL_76:
  if ((v34 & 1) == 0)
  {
    uint64_t v35 = a1[6];
    uint64_t v38 = *(void *)(v35 + 8);
    uint64_t v36 = v35 + 8;
    uint64_t v37 = v38;
    if (v38)
    {
      uint64_t v39 = v36;
      uint64_t v40 = v37;
      do
      {
        int v41 = *(_DWORD *)(v40 + 32);
        BOOL v42 = v41 < v7;
        if (v41 >= v7) {
          uint64_t v43 = (uint64_t *)v40;
        }
        else {
          uint64_t v43 = (uint64_t *)(v40 + 8);
        }
        if (!v42) {
          uint64_t v39 = v40;
        }
        uint64_t v40 = *v43;
      }
      while (*v43);
      if (v39 != v36 && v7 >= *(_DWORD *)(v39 + 32))
      {
        uint64_t v44 = v36;
        do
        {
          int v45 = *(_DWORD *)(v37 + 32);
          BOOL v46 = v45 < v8;
          if (v45 >= v8) {
            uint64_t v47 = (uint64_t *)v37;
          }
          else {
            uint64_t v47 = (uint64_t *)(v37 + 8);
          }
          if (!v46) {
            uint64_t v44 = v37;
          }
          uint64_t v37 = *v47;
        }
        while (*v47);
        if (v44 != v36 && v8 >= *(_DWORD *)(v44 + 32)) {
          operator new();
        }
      }
    }
    return 0;
  }
  return v33;
}

void sub_234DA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_234DBC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 16))();
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  int v7 = *a2;
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v9 = a3[1];
  if (v9 && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    uint64_t v10 = a3[1];
    if (v10)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
        goto LABEL_15;
      }
      uint64_t v11 = a3[1];
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (*(unsigned char *)(a1[10] + 190))
  {
    if (v7 == 2 && v8 == 2) {
      goto LABEL_18;
    }
    if (v7 == 2 && v8 == 3 || v7 == 3 && v8 == 2) {
      operator new();
    }
    if (v7 == 3 && v8 == 3) {
LABEL_18:
    }
      operator new();
    if (v7 == 4 && v8 == 4) {
      goto LABEL_28;
    }
    if (v7 == 4 && v8 == 5 || v7 == 5 && v8 == 4) {
      operator new();
    }
    if (v7 == 5 && v8 == 5) {
LABEL_28:
    }
      operator new();
  }
  BOOL v12 = __p;
  sub_256570(v7, v8, (uint64_t)__p);
  uint64_t v13 = a1[8];
  uint64_t v16 = *(void *)(v13 + 8);
  uint64_t v14 = v13 + 8;
  uint64_t v15 = v16;
  if (!v16) {
    goto LABEL_74;
  }
  if ((v50 & 0x80u) == 0) {
    size_t v17 = v50;
  }
  else {
    size_t v17 = (size_t)__p[1];
  }
  if ((v50 & 0x80u) != 0) {
    BOOL v12 = (void **)__p[0];
  }
  uint64_t v18 = v14;
  do
  {
    int v19 = *(char *)(v15 + 55);
    if (v19 >= 0) {
      size_t v20 = *(unsigned __int8 *)(v15 + 55);
    }
    else {
      size_t v20 = *(void *)(v15 + 40);
    }
    if (v19 >= 0) {
      uint64_t v21 = (const void *)(v15 + 32);
    }
    else {
      uint64_t v21 = *(const void **)(v15 + 32);
    }
    if (v17 >= v20) {
      size_t v22 = v20;
    }
    else {
      size_t v22 = v17;
    }
    int v23 = memcmp(v21, v12, v22);
    BOOL v24 = v20 < v17;
    if (v23) {
      BOOL v24 = v23 < 0;
    }
    BOOL v25 = !v24;
    if (v24) {
      uint64_t v26 = (uint64_t *)(v15 + 8);
    }
    else {
      uint64_t v26 = (uint64_t *)v15;
    }
    if (v25) {
      uint64_t v18 = v15;
    }
    uint64_t v15 = *v26;
  }
  while (*v26);
  if (v18 == v14) {
    goto LABEL_74;
  }
  int v27 = *(char *)(v18 + 55);
  if (v27 >= 0) {
    size_t v28 = *(unsigned __int8 *)(v18 + 55);
  }
  else {
    size_t v28 = *(void *)(v18 + 40);
  }
  if (v27 >= 0) {
    int v29 = (const void *)(v18 + 32);
  }
  else {
    int v29 = *(const void **)(v18 + 32);
  }
  if (v28 >= v17) {
    size_t v30 = v17;
  }
  else {
    size_t v30 = v28;
  }
  int v31 = memcmp(v12, v29, v30);
  BOOL v32 = v17 < v28;
  if (v31) {
    BOOL v32 = v31 < 0;
  }
  if (v32)
  {
LABEL_74:
    uint64_t v33 = 0;
    char v34 = 0;
    if (((char)v50 & 0x80000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_75;
  }
  int v51 = *(_DWORD *)(v18 + 64);
  uint64_t v33 = sub_256B4C((uint64_t)a1, &v51);
  char v34 = 1;
  if ((char)v50 < 0) {
LABEL_75:
  }
    operator delete(__p[0]);
LABEL_76:
  if ((v34 & 1) == 0)
  {
    uint64_t v35 = a1[6];
    uint64_t v38 = *(void *)(v35 + 8);
    uint64_t v36 = v35 + 8;
    uint64_t v37 = v38;
    if (v38)
    {
      uint64_t v39 = v36;
      uint64_t v40 = v37;
      do
      {
        int v41 = *(_DWORD *)(v40 + 32);
        BOOL v42 = v41 < v7;
        if (v41 >= v7) {
          uint64_t v43 = (uint64_t *)v40;
        }
        else {
          uint64_t v43 = (uint64_t *)(v40 + 8);
        }
        if (!v42) {
          uint64_t v39 = v40;
        }
        uint64_t v40 = *v43;
      }
      while (*v43);
      if (v39 != v36 && v7 >= *(_DWORD *)(v39 + 32))
      {
        uint64_t v44 = v36;
        do
        {
          int v45 = *(_DWORD *)(v37 + 32);
          BOOL v46 = v45 < v8;
          if (v45 >= v8) {
            uint64_t v47 = (uint64_t *)v37;
          }
          else {
            uint64_t v47 = (uint64_t *)(v37 + 8);
          }
          if (!v46) {
            uint64_t v44 = v37;
          }
          uint64_t v37 = *v47;
        }
        while (*v47);
        if (v44 != v36 && v8 >= *(_DWORD *)(v44 + 32)) {
          operator new();
        }
      }
    }
    return 0;
  }
  return v33;
}

void sub_2353AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2353C8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)*a3 + 56))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
  (*(void (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  int v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v8 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v9 = a3[1];
  if (v9 && (*(unsigned int (**)(uint64_t))(*(void *)v9 + 32))(v9) != 17)
  {
    uint64_t v10 = a3[1];
    if (v10)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v10 + 32))(v10) == 18) {
        goto LABEL_15;
      }
      uint64_t v11 = a3[1];
      if (v11) {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (*(unsigned char *)(a1[10] + 190))
  {
    BOOL v12 = v7 == 2 && v8 == 2;
    if (v12 || (v7 == 2 ? (v13 = v8 == 3) : (v13 = 0), v13 || (v7 == 3 ? (BOOL v14 = v8 == 2) : (BOOL v14 = 0), v14))) {
      operator new();
    }
    if (v7 == 3 && v8 == 3) {
      operator new();
    }
    BOOL v16 = v7 == 4 && v8 == 4;
    if (v16 || (v7 == 4 ? (BOOL v17 = v8 == 5) : (BOOL v17 = 0), v17 || (v7 == 5 ? (v18 = v8 == 4) : (v18 = 0), v18))) {
      operator new();
    }
    if (v7 == 5 && v8 == 5) {
      operator new();
    }
    if (v7 == 7 && v8 == 7) {
      operator new();
    }
  }
  uint64_t v21 = __p;
  sub_25859C(v7, v8, (uint64_t)__p);
  uint64_t v22 = a1[8];
  uint64_t v25 = *(void *)(v22 + 8);
  uint64_t v23 = v22 + 8;
  uint64_t v24 = v25;
  if (!v25) {
    goto LABEL_90;
  }
  if ((v59 & 0x80u) == 0) {
    size_t v26 = v59;
  }
  else {
    size_t v26 = (size_t)__p[1];
  }
  if ((v59 & 0x80u) != 0) {
    uint64_t v21 = (void **)__p[0];
  }
  uint64_t v27 = v23;
  do
  {
    int v28 = *(char *)(v24 + 55);
    if (v28 >= 0) {
      size_t v29 = *(unsigned __int8 *)(v24 + 55);
    }
    else {
      size_t v29 = *(void *)(v24 + 40);
    }
    if (v28 >= 0) {
      size_t v30 = (const void *)(v24 + 32);
    }
    else {
      size_t v30 = *(const void **)(v24 + 32);
    }
    if (v26 >= v29) {
      size_t v31 = v29;
    }
    else {
      size_t v31 = v26;
    }
    int v32 = memcmp(v30, v21, v31);
    BOOL v33 = v29 < v26;
    if (v32) {
      BOOL v33 = v32 < 0;
    }
    BOOL v34 = !v33;
    if (v33) {
      uint64_t v35 = (uint64_t *)(v24 + 8);
    }
    else {
      uint64_t v35 = (uint64_t *)v24;
    }
    if (v34) {
      uint64_t v27 = v24;
    }
    uint64_t v24 = *v35;
  }
  while (*v35);
  if (v27 == v23) {
    goto LABEL_90;
  }
  int v36 = *(char *)(v27 + 55);
  if (v36 >= 0) {
    size_t v37 = *(unsigned __int8 *)(v27 + 55);
  }
  else {
    size_t v37 = *(void *)(v27 + 40);
  }
  if (v36 >= 0) {
    uint64_t v38 = (const void *)(v27 + 32);
  }
  else {
    uint64_t v38 = *(const void **)(v27 + 32);
  }
  if (v37 >= v26) {
    size_t v39 = v26;
  }
  else {
    size_t v39 = v37;
  }
  int v40 = memcmp(v21, v38, v39);
  BOOL v41 = v26 < v37;
  if (v40) {
    BOOL v41 = v40 < 0;
  }
  if (v41)
  {
LABEL_90:
    uint64_t v42 = 0;
    char v43 = 0;
    if (((char)v59 & 0x80000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_91;
  }
  int v60 = *(_DWORD *)(v27 + 64);
  uint64_t v42 = sub_258B78((uint64_t)a1, &v60);
  char v43 = 1;
  if ((char)v59 < 0) {
LABEL_91:
  }
    operator delete(__p[0]);
LABEL_92:
  if ((v43 & 1) == 0)
  {
    uint64_t v44 = a1[6];
    uint64_t v47 = *(void *)(v44 + 8);
    uint64_t v45 = v44 + 8;
    uint64_t v46 = v47;
    if (v47)
    {
      uint64_t v48 = v45;
      uint64_t v49 = v46;
      do
      {
        int v50 = *(_DWORD *)(v49 + 32);
        BOOL v51 = v50 < v7;
        if (v50 >= v7) {
          uint64_t v52 = (uint64_t *)v49;
        }
        else {
          uint64_t v52 = (uint64_t *)(v49 + 8);
        }
        if (!v51) {
          uint64_t v48 = v49;
        }
        uint64_t v49 = *v52;
      }
      while (*v52);
      if (v48 != v45 && v7 >= *(_DWORD *)(v48 + 32))
      {
        uint64_t v53 = v45;
        do
        {
          int v54 = *(_DWORD *)(v46 + 32);
          BOOL v55 = v54 < v8;
          if (v54 >= v8) {
            int v56 = (uint64_t *)v46;
          }
          else {
            int v56 = (uint64_t *)(v46 + 8);
          }
          if (!v55) {
            uint64_t v53 = v46;
          }
          uint64_t v46 = *v56;
        }
        while (*v56);
        if (v53 != v45 && v8 >= *(_DWORD *)(v53 + 32)) {
          operator new();
        }
      }
    }
    return 0;
  }
  return v42;
}

void sub_2359DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2359F8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  uint64_t v8 = (*(uint64_t (**)(void))(*(void *)*a3 + 48))(*a3);
  uint64_t v146 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 56))(v6);
  uint64_t v145 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 48))(v7);
  uint64_t v144 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
  int v9 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v10 = *a2;
  int v11 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v12 = a3[1];
  if (v12 && (*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) != 17)
  {
    uint64_t v13 = a3[1];
    if (v13)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v13 + 32))(v13) == 18) {
        goto LABEL_15;
      }
      uint64_t v14 = a3[1];
      if (v14) {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  uint64_t v149 = 0;
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_51;
  }
  if (v9 == 5 && v10 == 4 && v11 == 5)
  {
    char v148 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v66 = a1[9];
    uint64_t v69 = *(void *)(v66 + 8);
    uint64_t v67 = v66 + 8;
    uint64_t v68 = v69;
    if (!v69) {
      return 0;
    }
    uint64_t v70 = v67;
    do
    {
      unint64_t v71 = *(unsigned __int8 *)(v68 + 55);
      int v72 = (char)v71;
      if ((v71 & 0x80u) != 0) {
        unint64_t v71 = *(void *)(v68 + 40);
      }
      if (v72 >= 0) {
        int v73 = (const void *)(v68 + 32);
      }
      else {
        int v73 = *(const void **)(v68 + 32);
      }
      if (v71 >= 0xB) {
        size_t v74 = 11;
      }
      else {
        size_t v74 = v71;
      }
      BOOL v75 = v71 < 0xB;
      int v76 = memcmp(v73, __p, v74);
      BOOL v77 = v76 < 0;
      if (!v76) {
        BOOL v77 = v75;
      }
      BOOL v78 = !v77;
      if (v77) {
        uint64_t v79 = (uint64_t *)(v68 + 8);
      }
      else {
        uint64_t v79 = (uint64_t *)v68;
      }
      if (v78) {
        uint64_t v70 = v68;
      }
      uint64_t v68 = *v79;
    }
    while (*v79);
    if (v70 == v67) {
      return 0;
    }
    unint64_t v80 = *(unsigned __int8 *)(v70 + 55);
    int v81 = (char)v80;
    if ((v80 & 0x80u) != 0) {
      unint64_t v80 = *(void *)(v70 + 40);
    }
    if (v81 >= 0) {
      int v82 = (const void *)(v70 + 32);
    }
    else {
      int v82 = *(const void **)(v70 + 32);
    }
    if (v80 >= 0xB) {
      size_t v83 = 11;
    }
    else {
      size_t v83 = v80;
    }
    BOOL v84 = v80 > 0xB;
    int v85 = memcmp(__p, v82, v83);
    BOOL v86 = v85 < 0;
    if (!v85) {
      BOOL v86 = v84;
    }
    if (v86) {
      return 0;
    }
    int v150 = *(_DWORD *)(v70 + 64);
    uint64_t v87 = (uint64_t)a1;
    return sub_18DC40(v87, &v150);
  }
  if (v9 == 5 && v10 == 5 && v11 == 5)
  {
    char v148 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v88 = a1[9];
    uint64_t v91 = *(void *)(v88 + 8);
    uint64_t v89 = v88 + 8;
    uint64_t v90 = v91;
    if (!v91) {
      return 0;
    }
    uint64_t v92 = v89;
    do
    {
      unint64_t v93 = *(unsigned __int8 *)(v90 + 55);
      int v94 = (char)v93;
      if ((v93 & 0x80u) != 0) {
        unint64_t v93 = *(void *)(v90 + 40);
      }
      if (v94 >= 0) {
        long long v95 = (const void *)(v90 + 32);
      }
      else {
        long long v95 = *(const void **)(v90 + 32);
      }
      if (v93 >= 0xB) {
        size_t v96 = 11;
      }
      else {
        size_t v96 = v93;
      }
      BOOL v97 = v93 < 0xB;
      int v98 = memcmp(v95, __p, v96);
      BOOL v99 = v98 < 0;
      if (!v98) {
        BOOL v99 = v97;
      }
      BOOL v100 = !v99;
      if (v99) {
        uint64_t v101 = (uint64_t *)(v90 + 8);
      }
      else {
        uint64_t v101 = (uint64_t *)v90;
      }
      if (v100) {
        uint64_t v92 = v90;
      }
      uint64_t v90 = *v101;
    }
    while (*v101);
    if (v92 == v89) {
      return 0;
    }
    unint64_t v102 = *(unsigned __int8 *)(v92 + 55);
    int v103 = (char)v102;
    if ((v102 & 0x80u) != 0) {
      unint64_t v102 = *(void *)(v92 + 40);
    }
    if (v103 >= 0) {
      uint64_t v104 = (const void *)(v92 + 32);
    }
    else {
      uint64_t v104 = *(const void **)(v92 + 32);
    }
    if (v102 >= 0xB) {
      size_t v105 = 11;
    }
    else {
      size_t v105 = v102;
    }
    BOOL v106 = v102 > 0xB;
    int v107 = memcmp(__p, v104, v105);
    BOOL v108 = v107 < 0;
    if (!v107) {
      BOOL v108 = v106;
    }
    if (v108) {
      return 0;
    }
    int v150 = *(_DWORD *)(v92 + 64);
    uint64_t v87 = (uint64_t)a1;
    return sub_18DC40(v87, &v150);
  }
  if (v9 == 2 && v10 == 5 && v11 == 5)
  {
    char v148 = 11;
    strcpy((char *)__p, "(t+t)*(t/t)");
    uint64_t v109 = a1[9];
    uint64_t v112 = *(void *)(v109 + 8);
    uint64_t v110 = v109 + 8;
    uint64_t v111 = v112;
    if (v112)
    {
      uint64_t v113 = v110;
      do
      {
        unint64_t v114 = *(unsigned __int8 *)(v111 + 55);
        int v115 = (char)v114;
        if ((v114 & 0x80u) != 0) {
          unint64_t v114 = *(void *)(v111 + 40);
        }
        if (v115 >= 0) {
          uint64_t v116 = (const void *)(v111 + 32);
        }
        else {
          uint64_t v116 = *(const void **)(v111 + 32);
        }
        if (v114 >= 0xB) {
          size_t v117 = 11;
        }
        else {
          size_t v117 = v114;
        }
        BOOL v118 = v114 < 0xB;
        int v119 = memcmp(v116, __p, v117);
        BOOL v120 = v119 < 0;
        if (!v119) {
          BOOL v120 = v118;
        }
        BOOL v121 = !v120;
        if (v120) {
          uint64_t v122 = (uint64_t *)(v111 + 8);
        }
        else {
          uint64_t v122 = (uint64_t *)v111;
        }
        if (v121) {
          uint64_t v113 = v111;
        }
        uint64_t v111 = *v122;
      }
      while (*v122);
      goto LABEL_228;
    }
    return 0;
  }
  if (v9 == 3 && v10 == 5 && v11 == 5)
  {
    char v148 = 11;
    strcpy((char *)__p, "(t-t)*(t/t)");
    uint64_t v123 = a1[9];
    uint64_t v125 = *(void *)(v123 + 8);
    uint64_t v110 = v123 + 8;
    uint64_t v124 = v125;
    if (v125)
    {
      uint64_t v113 = v110;
      do
      {
        unint64_t v126 = *(unsigned __int8 *)(v124 + 55);
        int v127 = (char)v126;
        if ((v126 & 0x80u) != 0) {
          unint64_t v126 = *(void *)(v124 + 40);
        }
        if (v127 >= 0) {
          uint64_t v128 = (const void *)(v124 + 32);
        }
        else {
          uint64_t v128 = *(const void **)(v124 + 32);
        }
        if (v126 >= 0xB) {
          size_t v129 = 11;
        }
        else {
          size_t v129 = v126;
        }
        BOOL v130 = v126 < 0xB;
        int v131 = memcmp(v128, __p, v129);
        BOOL v132 = v131 < 0;
        if (!v131) {
          BOOL v132 = v130;
        }
        BOOL v133 = !v132;
        if (v132) {
          int v134 = (uint64_t *)(v124 + 8);
        }
        else {
          int v134 = (uint64_t *)v124;
        }
        if (v133) {
          uint64_t v113 = v124;
        }
        uint64_t v124 = *v134;
      }
      while (*v134);
LABEL_228:
      if (v113 == v110) {
        return 0;
      }
      unint64_t v135 = *(unsigned __int8 *)(v113 + 55);
      int v136 = (char)v135;
      if ((v135 & 0x80u) != 0) {
        unint64_t v135 = *(void *)(v113 + 40);
      }
      if (v136 >= 0) {
        char v137 = (const void *)(v113 + 32);
      }
      else {
        char v137 = *(const void **)(v113 + 32);
      }
      if (v135 >= 0xB) {
        size_t v138 = 11;
      }
      else {
        size_t v138 = v135;
      }
      BOOL v139 = v135 > 0xB;
      int v140 = memcmp(__p, v137, v138);
      BOOL v141 = v140 < 0;
      if (!v140) {
        BOOL v141 = v139;
      }
      if (v141) {
        return 0;
      }
      int v150 = *(_DWORD *)(v113 + 64);
      uint64_t v87 = (uint64_t)a1;
      return sub_18DC40(v87, &v150);
    }
    return 0;
  }
  if (v9 == 4 && v10 == 5 && v11 == 5)
  {
    sub_5E5C(__p, "((t*t)*t)/t");
    int v143 = sub_18DADC((uint64_t)a1, (uint64_t)__p, v8, v146, v144, v145, &v149);
    if (v148 < 0) {
      operator delete(__p[0]);
    }
    if (v143) {
      return v149;
    }
    else {
      return 0;
    }
  }
LABEL_51:
  uint64_t v25 = __p;
  sub_25A81C(v9, v10, v11, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_89;
  }
  if (v148 >= 0) {
    size_t v30 = v148;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if (v148 < 0) {
    uint64_t v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      BOOL v34 = (const void *)(v28 + 32);
    }
    else {
      BOOL v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if (v148 < 0) {
      goto LABEL_90;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      uint64_t v42 = (const void *)(v31 + 32);
    }
    else {
      uint64_t v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_89:
      uint64_t v46 = 0;
      char v47 = 0;
      if ((v148 & 0x80000000) == 0) {
        goto LABEL_91;
      }
      goto LABEL_90;
    }
    int v150 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_18DC40((uint64_t)a1, &v150);
    char v47 = 1;
    if (v148 < 0) {
LABEL_90:
    }
      operator delete(__p[0]);
  }
LABEL_91:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      uint64_t v53 = v50;
      do
      {
        int v54 = *(_DWORD *)(v53 + 32);
        BOOL v55 = v54 < v9;
        if (v54 >= v9) {
          int v56 = (uint64_t *)v53;
        }
        else {
          int v56 = (uint64_t *)(v53 + 8);
        }
        if (!v55) {
          uint64_t v52 = v53;
        }
        uint64_t v53 = *v56;
      }
      while (*v56);
      if (v52 != v49 && v9 >= *(_DWORD *)(v52 + 32))
      {
        uint64_t v57 = v49;
        uint64_t v58 = v50;
        do
        {
          int v59 = *(_DWORD *)(v58 + 32);
          BOOL v60 = v59 < v10;
          if (v59 >= v10) {
            BOOL v61 = (uint64_t *)v58;
          }
          else {
            BOOL v61 = (uint64_t *)(v58 + 8);
          }
          if (!v60) {
            uint64_t v57 = v58;
          }
          uint64_t v58 = *v61;
        }
        while (*v61);
        if (v57 != v49 && v10 >= *(_DWORD *)(v57 + 32))
        {
          uint64_t v62 = v49;
          do
          {
            int v63 = *(_DWORD *)(v50 + 32);
            BOOL v64 = v63 < v11;
            if (v63 >= v11) {
              int v65 = (uint64_t *)v50;
            }
            else {
              int v65 = (uint64_t *)(v50 + 8);
            }
            if (!v64) {
              uint64_t v62 = v50;
            }
            uint64_t v50 = *v65;
          }
          while (*v65);
          if (v62 != v49 && v11 >= *(_DWORD *)(v62 + 32)) {
            operator new();
          }
        }
      }
    }
    return 0;
  }
  return v46;
}

void sub_23635C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23637C(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(uint64_t))(*(void *)v7 + 56))(v7);
  (*(void (**)(uint64_t))(*(void *)v7 + 48))(v7);
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v9 = *a2;
  int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v11 = a3[1];
  if (v11 && (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 17)
  {
    uint64_t v12 = a3[1];
    if (v12)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) == 18) {
        goto LABEL_15;
      }
      uint64_t v13 = a3[1];
      if (v13) {
        (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_30;
  }
  if (v8 == 5 && v9 == 4 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v59 = a1[9];
    uint64_t v62 = *(void *)(v59 + 8);
    uint64_t v60 = v59 + 8;
    uint64_t v61 = v62;
    if (!v62) {
      return 0;
    }
    uint64_t v63 = v60;
    do
    {
      unint64_t v64 = *(unsigned __int8 *)(v61 + 55);
      int v65 = (char)v64;
      if ((v64 & 0x80u) != 0) {
        unint64_t v64 = *(void *)(v61 + 40);
      }
      if (v65 >= 0) {
        uint64_t v66 = (const void *)(v61 + 32);
      }
      else {
        uint64_t v66 = *(const void **)(v61 + 32);
      }
      if (v64 >= 0xB) {
        size_t v67 = 11;
      }
      else {
        size_t v67 = v64;
      }
      BOOL v68 = v64 < 0xB;
      int v69 = memcmp(v66, __p, v67);
      BOOL v70 = v69 < 0;
      if (!v69) {
        BOOL v70 = v68;
      }
      BOOL v71 = !v70;
      if (v70) {
        int v72 = (uint64_t *)(v61 + 8);
      }
      else {
        int v72 = (uint64_t *)v61;
      }
      if (v71) {
        uint64_t v63 = v61;
      }
      uint64_t v61 = *v72;
    }
    while (*v72);
    if (v63 == v60) {
      return 0;
    }
    unint64_t v73 = *(unsigned __int8 *)(v63 + 55);
    int v74 = (char)v73;
    if ((v73 & 0x80u) != 0) {
      unint64_t v73 = *(void *)(v63 + 40);
    }
    if (v74 >= 0) {
      BOOL v75 = (const void *)(v63 + 32);
    }
    else {
      BOOL v75 = *(const void **)(v63 + 32);
    }
    if (v73 >= 0xB) {
      size_t v76 = 11;
    }
    else {
      size_t v76 = v73;
    }
    BOOL v77 = v73 > 0xB;
    int v78 = memcmp(__p, v75, v76);
    BOOL v79 = v78 < 0;
    if (!v78) {
      BOOL v79 = v77;
    }
    if (v79) {
      return 0;
    }
    int v105 = *(_DWORD *)(v63 + 64);
    return sub_18984C((uint64_t)a1, &v105);
  }
  if (v8 == 5 && v9 == 5 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v81 = a1[9];
    uint64_t v84 = *(void *)(v81 + 8);
    uint64_t v82 = v81 + 8;
    uint64_t v83 = v84;
    if (!v84) {
      return 0;
    }
    uint64_t v85 = v82;
    do
    {
      unint64_t v86 = *(unsigned __int8 *)(v83 + 55);
      int v87 = (char)v86;
      if ((v86 & 0x80u) != 0) {
        unint64_t v86 = *(void *)(v83 + 40);
      }
      if (v87 >= 0) {
        uint64_t v88 = (const void *)(v83 + 32);
      }
      else {
        uint64_t v88 = *(const void **)(v83 + 32);
      }
      if (v86 >= 0xB) {
        size_t v89 = 11;
      }
      else {
        size_t v89 = v86;
      }
      BOOL v90 = v86 < 0xB;
      int v91 = memcmp(v88, __p, v89);
      BOOL v92 = v91 < 0;
      if (!v91) {
        BOOL v92 = v90;
      }
      BOOL v93 = !v92;
      if (v92) {
        int v94 = (uint64_t *)(v83 + 8);
      }
      else {
        int v94 = (uint64_t *)v83;
      }
      if (v93) {
        uint64_t v85 = v83;
      }
      uint64_t v83 = *v94;
    }
    while (*v94);
    if (v85 == v82) {
      return 0;
    }
    unint64_t v95 = *(unsigned __int8 *)(v85 + 55);
    int v96 = (char)v95;
    if ((v95 & 0x80u) != 0) {
      unint64_t v95 = *(void *)(v85 + 40);
    }
    if (v96 >= 0) {
      BOOL v97 = (const void *)(v85 + 32);
    }
    else {
      BOOL v97 = *(const void **)(v85 + 32);
    }
    if (v95 >= 0xB) {
      size_t v98 = 11;
    }
    else {
      size_t v98 = v95;
    }
    BOOL v99 = v95 > 0xB;
    int v100 = memcmp(__p, v97, v98);
    BOOL v101 = v100 < 0;
    if (!v100) {
      BOOL v101 = v99;
    }
    if (v101) {
      return 0;
    }
    int v105 = *(_DWORD *)(v85 + 64);
    return sub_181328((uint64_t)a1, &v105);
  }
LABEL_30:
  BOOL v18 = __p;
  sub_25B6B4(v8, v9, v10, (uint64_t)__p);
  uint64_t v19 = a1[9];
  uint64_t v22 = *(void *)(v19 + 8);
  uint64_t v20 = v19 + 8;
  uint64_t v21 = v22;
  if (v22)
  {
    if (v104 >= 0) {
      size_t v23 = v104;
    }
    else {
      size_t v23 = (size_t)__p[1];
    }
    if (v104 < 0) {
      BOOL v18 = (void **)__p[0];
    }
    uint64_t v24 = v20;
    do
    {
      int v25 = *(char *)(v21 + 55);
      if (v25 >= 0) {
        size_t v26 = *(unsigned __int8 *)(v21 + 55);
      }
      else {
        size_t v26 = *(void *)(v21 + 40);
      }
      if (v25 >= 0) {
        uint64_t v27 = (const void *)(v21 + 32);
      }
      else {
        uint64_t v27 = *(const void **)(v21 + 32);
      }
      if (v23 >= v26) {
        size_t v28 = v26;
      }
      else {
        size_t v28 = v23;
      }
      int v29 = memcmp(v27, v18, v28);
      BOOL v30 = v26 < v23;
      if (v29) {
        BOOL v30 = v29 < 0;
      }
      BOOL v31 = !v30;
      if (v30) {
        int v32 = (uint64_t *)(v21 + 8);
      }
      else {
        int v32 = (uint64_t *)v21;
      }
      if (v31) {
        uint64_t v24 = v21;
      }
      uint64_t v21 = *v32;
    }
    while (*v32);
    if (v24 == v20) {
      goto LABEL_68;
    }
    int v33 = *(char *)(v24 + 55);
    if (v33 >= 0) {
      size_t v34 = *(unsigned __int8 *)(v24 + 55);
    }
    else {
      size_t v34 = *(void *)(v24 + 40);
    }
    if (v33 >= 0) {
      size_t v35 = (const void *)(v24 + 32);
    }
    else {
      size_t v35 = *(const void **)(v24 + 32);
    }
    if (v34 >= v23) {
      size_t v36 = v23;
    }
    else {
      size_t v36 = v34;
    }
    int v37 = memcmp(v18, v35, v36);
    BOOL v38 = v23 < v34;
    if (v37) {
      BOOL v38 = v37 < 0;
    }
    if (v38)
    {
LABEL_68:
      uint64_t v39 = 0;
      char v40 = 0;
      if ((v104 & 0x80000000) == 0) {
        goto LABEL_70;
      }
      goto LABEL_69;
    }
    int v105 = *(_DWORD *)(v24 + 64);
    uint64_t v39 = sub_18984C((uint64_t)a1, &v105);
    char v40 = 1;
    if (v104 < 0) {
LABEL_69:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v39 = 0;
    char v40 = 0;
    if (v104 < 0) {
      goto LABEL_69;
    }
  }
LABEL_70:
  if ((v40 & 1) == 0)
  {
    uint64_t v41 = a1[6];
    uint64_t v44 = *(void *)(v41 + 8);
    uint64_t v42 = v41 + 8;
    uint64_t v43 = v44;
    if (v44)
    {
      uint64_t v45 = v42;
      uint64_t v46 = v43;
      do
      {
        int v47 = *(_DWORD *)(v46 + 32);
        BOOL v48 = v47 < v8;
        if (v47 >= v8) {
          uint64_t v49 = (uint64_t *)v46;
        }
        else {
          uint64_t v49 = (uint64_t *)(v46 + 8);
        }
        if (!v48) {
          uint64_t v45 = v46;
        }
        uint64_t v46 = *v49;
      }
      while (*v49);
      if (v45 != v42 && v8 >= *(_DWORD *)(v45 + 32))
      {
        uint64_t v50 = v42;
        uint64_t v51 = v43;
        do
        {
          int v52 = *(_DWORD *)(v51 + 32);
          BOOL v53 = v52 < v9;
          if (v52 >= v9) {
            int v54 = (uint64_t *)v51;
          }
          else {
            int v54 = (uint64_t *)(v51 + 8);
          }
          if (!v53) {
            uint64_t v50 = v51;
          }
          uint64_t v51 = *v54;
        }
        while (*v54);
        if (v50 != v42 && v9 >= *(_DWORD *)(v50 + 32))
        {
          uint64_t v55 = v42;
          do
          {
            int v56 = *(_DWORD *)(v43 + 32);
            BOOL v57 = v56 < v10;
            if (v56 >= v10) {
              uint64_t v58 = (uint64_t *)v43;
            }
            else {
              uint64_t v58 = (uint64_t *)(v43 + 8);
            }
            if (!v57) {
              uint64_t v55 = v43;
            }
            uint64_t v43 = *v58;
          }
          while (*v58);
          if (v55 != v42 && v10 >= *(_DWORD *)(v55 + 32)) {
            operator new();
          }
        }
      }
    }
    return 0;
  }
  return v39;
}

void sub_236AD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_236AF0(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(uint64_t))(*(void *)v7 + 56))(v7);
  (*(void (**)(uint64_t))(*(void *)v7 + 48))(v7);
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v9 = *a2;
  int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v11 = a3[1];
  if (v11 && (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 17)
  {
    uint64_t v12 = a3[1];
    if (v12)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) == 18) {
        goto LABEL_15;
      }
      uint64_t v13 = a3[1];
      if (v13) {
        (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_30;
  }
  if (v8 == 5 && v9 == 4 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v59 = a1[9];
    uint64_t v62 = *(void *)(v59 + 8);
    uint64_t v60 = v59 + 8;
    uint64_t v61 = v62;
    if (!v62) {
      return 0;
    }
    uint64_t v63 = v60;
    do
    {
      unint64_t v64 = *(unsigned __int8 *)(v61 + 55);
      int v65 = (char)v64;
      if ((v64 & 0x80u) != 0) {
        unint64_t v64 = *(void *)(v61 + 40);
      }
      if (v65 >= 0) {
        uint64_t v66 = (const void *)(v61 + 32);
      }
      else {
        uint64_t v66 = *(const void **)(v61 + 32);
      }
      if (v64 >= 0xB) {
        size_t v67 = 11;
      }
      else {
        size_t v67 = v64;
      }
      BOOL v68 = v64 < 0xB;
      int v69 = memcmp(v66, __p, v67);
      BOOL v70 = v69 < 0;
      if (!v69) {
        BOOL v70 = v68;
      }
      BOOL v71 = !v70;
      if (v70) {
        int v72 = (uint64_t *)(v61 + 8);
      }
      else {
        int v72 = (uint64_t *)v61;
      }
      if (v71) {
        uint64_t v63 = v61;
      }
      uint64_t v61 = *v72;
    }
    while (*v72);
    if (v63 == v60) {
      return 0;
    }
    unint64_t v73 = *(unsigned __int8 *)(v63 + 55);
    int v74 = (char)v73;
    if ((v73 & 0x80u) != 0) {
      unint64_t v73 = *(void *)(v63 + 40);
    }
    if (v74 >= 0) {
      BOOL v75 = (const void *)(v63 + 32);
    }
    else {
      BOOL v75 = *(const void **)(v63 + 32);
    }
    if (v73 >= 0xB) {
      size_t v76 = 11;
    }
    else {
      size_t v76 = v73;
    }
    BOOL v77 = v73 > 0xB;
    int v78 = memcmp(__p, v75, v76);
    BOOL v79 = v78 < 0;
    if (!v78) {
      BOOL v79 = v77;
    }
    if (v79) {
      return 0;
    }
    int v105 = *(_DWORD *)(v63 + 64);
    return sub_181328((uint64_t)a1, &v105);
  }
  if (v8 == 5 && v9 == 5 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v81 = a1[9];
    uint64_t v84 = *(void *)(v81 + 8);
    uint64_t v82 = v81 + 8;
    uint64_t v83 = v84;
    if (!v84) {
      return 0;
    }
    uint64_t v85 = v82;
    do
    {
      unint64_t v86 = *(unsigned __int8 *)(v83 + 55);
      int v87 = (char)v86;
      if ((v86 & 0x80u) != 0) {
        unint64_t v86 = *(void *)(v83 + 40);
      }
      if (v87 >= 0) {
        uint64_t v88 = (const void *)(v83 + 32);
      }
      else {
        uint64_t v88 = *(const void **)(v83 + 32);
      }
      if (v86 >= 0xB) {
        size_t v89 = 11;
      }
      else {
        size_t v89 = v86;
      }
      BOOL v90 = v86 < 0xB;
      int v91 = memcmp(v88, __p, v89);
      BOOL v92 = v91 < 0;
      if (!v91) {
        BOOL v92 = v90;
      }
      BOOL v93 = !v92;
      if (v92) {
        int v94 = (uint64_t *)(v83 + 8);
      }
      else {
        int v94 = (uint64_t *)v83;
      }
      if (v93) {
        uint64_t v85 = v83;
      }
      uint64_t v83 = *v94;
    }
    while (*v94);
    if (v85 == v82) {
      return 0;
    }
    unint64_t v95 = *(unsigned __int8 *)(v85 + 55);
    int v96 = (char)v95;
    if ((v95 & 0x80u) != 0) {
      unint64_t v95 = *(void *)(v85 + 40);
    }
    if (v96 >= 0) {
      BOOL v97 = (const void *)(v85 + 32);
    }
    else {
      BOOL v97 = *(const void **)(v85 + 32);
    }
    if (v95 >= 0xB) {
      size_t v98 = 11;
    }
    else {
      size_t v98 = v95;
    }
    BOOL v99 = v95 > 0xB;
    int v100 = memcmp(__p, v97, v98);
    BOOL v101 = v100 < 0;
    if (!v100) {
      BOOL v101 = v99;
    }
    if (v101) {
      return 0;
    }
    int v105 = *(_DWORD *)(v85 + 64);
    return sub_18984C((uint64_t)a1, &v105);
  }
LABEL_30:
  BOOL v18 = __p;
  sub_25C550(v8, v9, v10, (uint64_t)__p);
  uint64_t v19 = a1[9];
  uint64_t v22 = *(void *)(v19 + 8);
  uint64_t v20 = v19 + 8;
  uint64_t v21 = v22;
  if (v22)
  {
    if (v104 >= 0) {
      size_t v23 = v104;
    }
    else {
      size_t v23 = (size_t)__p[1];
    }
    if (v104 < 0) {
      BOOL v18 = (void **)__p[0];
    }
    uint64_t v24 = v20;
    do
    {
      int v25 = *(char *)(v21 + 55);
      if (v25 >= 0) {
        size_t v26 = *(unsigned __int8 *)(v21 + 55);
      }
      else {
        size_t v26 = *(void *)(v21 + 40);
      }
      if (v25 >= 0) {
        uint64_t v27 = (const void *)(v21 + 32);
      }
      else {
        uint64_t v27 = *(const void **)(v21 + 32);
      }
      if (v23 >= v26) {
        size_t v28 = v26;
      }
      else {
        size_t v28 = v23;
      }
      int v29 = memcmp(v27, v18, v28);
      BOOL v30 = v26 < v23;
      if (v29) {
        BOOL v30 = v29 < 0;
      }
      BOOL v31 = !v30;
      if (v30) {
        int v32 = (uint64_t *)(v21 + 8);
      }
      else {
        int v32 = (uint64_t *)v21;
      }
      if (v31) {
        uint64_t v24 = v21;
      }
      uint64_t v21 = *v32;
    }
    while (*v32);
    if (v24 == v20) {
      goto LABEL_68;
    }
    int v33 = *(char *)(v24 + 55);
    if (v33 >= 0) {
      size_t v34 = *(unsigned __int8 *)(v24 + 55);
    }
    else {
      size_t v34 = *(void *)(v24 + 40);
    }
    if (v33 >= 0) {
      size_t v35 = (const void *)(v24 + 32);
    }
    else {
      size_t v35 = *(const void **)(v24 + 32);
    }
    if (v34 >= v23) {
      size_t v36 = v23;
    }
    else {
      size_t v36 = v34;
    }
    int v37 = memcmp(v18, v35, v36);
    BOOL v38 = v23 < v34;
    if (v37) {
      BOOL v38 = v37 < 0;
    }
    if (v38)
    {
LABEL_68:
      uint64_t v39 = 0;
      char v40 = 0;
      if ((v104 & 0x80000000) == 0) {
        goto LABEL_70;
      }
      goto LABEL_69;
    }
    int v105 = *(_DWORD *)(v24 + 64);
    uint64_t v39 = sub_1855B8((uint64_t)a1, &v105);
    char v40 = 1;
    if (v104 < 0) {
LABEL_69:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v39 = 0;
    char v40 = 0;
    if (v104 < 0) {
      goto LABEL_69;
    }
  }
LABEL_70:
  if ((v40 & 1) == 0)
  {
    uint64_t v41 = a1[6];
    uint64_t v44 = *(void *)(v41 + 8);
    uint64_t v42 = v41 + 8;
    uint64_t v43 = v44;
    if (v44)
    {
      uint64_t v45 = v42;
      uint64_t v46 = v43;
      do
      {
        int v47 = *(_DWORD *)(v46 + 32);
        BOOL v48 = v47 < v8;
        if (v47 >= v8) {
          uint64_t v49 = (uint64_t *)v46;
        }
        else {
          uint64_t v49 = (uint64_t *)(v46 + 8);
        }
        if (!v48) {
          uint64_t v45 = v46;
        }
        uint64_t v46 = *v49;
      }
      while (*v49);
      if (v45 != v42 && v8 >= *(_DWORD *)(v45 + 32))
      {
        uint64_t v50 = v42;
        uint64_t v51 = v43;
        do
        {
          int v52 = *(_DWORD *)(v51 + 32);
          BOOL v53 = v52 < v9;
          if (v52 >= v9) {
            int v54 = (uint64_t *)v51;
          }
          else {
            int v54 = (uint64_t *)(v51 + 8);
          }
          if (!v53) {
            uint64_t v50 = v51;
          }
          uint64_t v51 = *v54;
        }
        while (*v54);
        if (v50 != v42 && v9 >= *(_DWORD *)(v50 + 32))
        {
          uint64_t v55 = v42;
          do
          {
            int v56 = *(_DWORD *)(v43 + 32);
            BOOL v57 = v56 < v10;
            if (v56 >= v10) {
              uint64_t v58 = (uint64_t *)v43;
            }
            else {
              uint64_t v58 = (uint64_t *)(v43 + 8);
            }
            if (!v57) {
              uint64_t v55 = v43;
            }
            uint64_t v43 = *v58;
          }
          while (*v58);
          if (v55 != v42 && v10 >= *(_DWORD *)(v55 + 32)) {
            operator new();
          }
        }
      }
    }
    return 0;
  }
  return v39;
}

void sub_237248(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_237264(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(uint64_t))(*(void *)v7 + 48))(v7);
  (*(void (**)(uint64_t))(*(void *)v7 + 56))(v7);
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v9 = *a2;
  int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v11 = a3[1];
  if (v11 && (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 17)
  {
    uint64_t v12 = a3[1];
    if (v12)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) == 18) {
        goto LABEL_15;
      }
      uint64_t v13 = a3[1];
      if (v13) {
        (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_30;
  }
  if (v8 == 5 && v9 == 4 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v59 = a1[9];
    uint64_t v62 = *(void *)(v59 + 8);
    uint64_t v60 = v59 + 8;
    uint64_t v61 = v62;
    if (!v62) {
      return 0;
    }
    uint64_t v63 = v60;
    do
    {
      unint64_t v64 = *(unsigned __int8 *)(v61 + 55);
      int v65 = (char)v64;
      if ((v64 & 0x80u) != 0) {
        unint64_t v64 = *(void *)(v61 + 40);
      }
      if (v65 >= 0) {
        uint64_t v66 = (const void *)(v61 + 32);
      }
      else {
        uint64_t v66 = *(const void **)(v61 + 32);
      }
      if (v64 >= 0xB) {
        size_t v67 = 11;
      }
      else {
        size_t v67 = v64;
      }
      BOOL v68 = v64 < 0xB;
      int v69 = memcmp(v66, __p, v67);
      BOOL v70 = v69 < 0;
      if (!v69) {
        BOOL v70 = v68;
      }
      BOOL v71 = !v70;
      if (v70) {
        int v72 = (uint64_t *)(v61 + 8);
      }
      else {
        int v72 = (uint64_t *)v61;
      }
      if (v71) {
        uint64_t v63 = v61;
      }
      uint64_t v61 = *v72;
    }
    while (*v72);
    if (v63 == v60) {
      return 0;
    }
    unint64_t v73 = *(unsigned __int8 *)(v63 + 55);
    int v74 = (char)v73;
    if ((v73 & 0x80u) != 0) {
      unint64_t v73 = *(void *)(v63 + 40);
    }
    if (v74 >= 0) {
      BOOL v75 = (const void *)(v63 + 32);
    }
    else {
      BOOL v75 = *(const void **)(v63 + 32);
    }
    if (v73 >= 0xB) {
      size_t v76 = 11;
    }
    else {
      size_t v76 = v73;
    }
    BOOL v77 = v73 > 0xB;
    int v78 = memcmp(__p, v75, v76);
    BOOL v79 = v78 < 0;
    if (!v78) {
      BOOL v79 = v77;
    }
    if (v79) {
      return 0;
    }
    int v105 = *(_DWORD *)(v63 + 64);
    uint64_t v80 = (uint64_t)a1;
    return sub_1855B8(v80, &v105);
  }
  if (v8 == 5 && v9 == 5 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v81 = a1[9];
    uint64_t v84 = *(void *)(v81 + 8);
    uint64_t v82 = v81 + 8;
    uint64_t v83 = v84;
    if (!v84) {
      return 0;
    }
    uint64_t v85 = v82;
    do
    {
      unint64_t v86 = *(unsigned __int8 *)(v83 + 55);
      int v87 = (char)v86;
      if ((v86 & 0x80u) != 0) {
        unint64_t v86 = *(void *)(v83 + 40);
      }
      if (v87 >= 0) {
        uint64_t v88 = (const void *)(v83 + 32);
      }
      else {
        uint64_t v88 = *(const void **)(v83 + 32);
      }
      if (v86 >= 0xB) {
        size_t v89 = 11;
      }
      else {
        size_t v89 = v86;
      }
      BOOL v90 = v86 < 0xB;
      int v91 = memcmp(v88, __p, v89);
      BOOL v92 = v91 < 0;
      if (!v91) {
        BOOL v92 = v90;
      }
      BOOL v93 = !v92;
      if (v92) {
        int v94 = (uint64_t *)(v83 + 8);
      }
      else {
        int v94 = (uint64_t *)v83;
      }
      if (v93) {
        uint64_t v85 = v83;
      }
      uint64_t v83 = *v94;
    }
    while (*v94);
    if (v85 == v82) {
      return 0;
    }
    unint64_t v95 = *(unsigned __int8 *)(v85 + 55);
    int v96 = (char)v95;
    if ((v95 & 0x80u) != 0) {
      unint64_t v95 = *(void *)(v85 + 40);
    }
    if (v96 >= 0) {
      BOOL v97 = (const void *)(v85 + 32);
    }
    else {
      BOOL v97 = *(const void **)(v85 + 32);
    }
    if (v95 >= 0xB) {
      size_t v98 = 11;
    }
    else {
      size_t v98 = v95;
    }
    BOOL v99 = v95 > 0xB;
    int v100 = memcmp(__p, v97, v98);
    BOOL v101 = v100 < 0;
    if (!v100) {
      BOOL v101 = v99;
    }
    if (v101) {
      return 0;
    }
    int v105 = *(_DWORD *)(v85 + 64);
    uint64_t v80 = (uint64_t)a1;
    return sub_1855B8(v80, &v105);
  }
LABEL_30:
  BOOL v18 = __p;
  sub_25D3E8(v8, v9, v10, (uint64_t)__p);
  uint64_t v19 = a1[9];
  uint64_t v22 = *(void *)(v19 + 8);
  uint64_t v20 = v19 + 8;
  uint64_t v21 = v22;
  if (v22)
  {
    if (v104 >= 0) {
      size_t v23 = v104;
    }
    else {
      size_t v23 = (size_t)__p[1];
    }
    if (v104 < 0) {
      BOOL v18 = (void **)__p[0];
    }
    uint64_t v24 = v20;
    do
    {
      int v25 = *(char *)(v21 + 55);
      if (v25 >= 0) {
        size_t v26 = *(unsigned __int8 *)(v21 + 55);
      }
      else {
        size_t v26 = *(void *)(v21 + 40);
      }
      if (v25 >= 0) {
        uint64_t v27 = (const void *)(v21 + 32);
      }
      else {
        uint64_t v27 = *(const void **)(v21 + 32);
      }
      if (v23 >= v26) {
        size_t v28 = v26;
      }
      else {
        size_t v28 = v23;
      }
      int v29 = memcmp(v27, v18, v28);
      BOOL v30 = v26 < v23;
      if (v29) {
        BOOL v30 = v29 < 0;
      }
      BOOL v31 = !v30;
      if (v30) {
        int v32 = (uint64_t *)(v21 + 8);
      }
      else {
        int v32 = (uint64_t *)v21;
      }
      if (v31) {
        uint64_t v24 = v21;
      }
      uint64_t v21 = *v32;
    }
    while (*v32);
    if (v24 == v20) {
      goto LABEL_68;
    }
    int v33 = *(char *)(v24 + 55);
    if (v33 >= 0) {
      size_t v34 = *(unsigned __int8 *)(v24 + 55);
    }
    else {
      size_t v34 = *(void *)(v24 + 40);
    }
    if (v33 >= 0) {
      size_t v35 = (const void *)(v24 + 32);
    }
    else {
      size_t v35 = *(const void **)(v24 + 32);
    }
    if (v34 >= v23) {
      size_t v36 = v23;
    }
    else {
      size_t v36 = v34;
    }
    int v37 = memcmp(v18, v35, v36);
    BOOL v38 = v23 < v34;
    if (v37) {
      BOOL v38 = v37 < 0;
    }
    if (v38)
    {
LABEL_68:
      uint64_t v39 = 0;
      char v40 = 0;
      if ((v104 & 0x80000000) == 0) {
        goto LABEL_70;
      }
      goto LABEL_69;
    }
    int v105 = *(_DWORD *)(v24 + 64);
    uint64_t v39 = sub_181328((uint64_t)a1, &v105);
    char v40 = 1;
    if (v104 < 0) {
LABEL_69:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v39 = 0;
    char v40 = 0;
    if (v104 < 0) {
      goto LABEL_69;
    }
  }
LABEL_70:
  if ((v40 & 1) == 0)
  {
    uint64_t v41 = a1[6];
    uint64_t v44 = *(void *)(v41 + 8);
    uint64_t v42 = v41 + 8;
    uint64_t v43 = v44;
    if (v44)
    {
      uint64_t v45 = v42;
      uint64_t v46 = v43;
      do
      {
        int v47 = *(_DWORD *)(v46 + 32);
        BOOL v48 = v47 < v8;
        if (v47 >= v8) {
          uint64_t v49 = (uint64_t *)v46;
        }
        else {
          uint64_t v49 = (uint64_t *)(v46 + 8);
        }
        if (!v48) {
          uint64_t v45 = v46;
        }
        uint64_t v46 = *v49;
      }
      while (*v49);
      if (v45 != v42 && v8 >= *(_DWORD *)(v45 + 32))
      {
        uint64_t v50 = v42;
        uint64_t v51 = v43;
        do
        {
          int v52 = *(_DWORD *)(v51 + 32);
          BOOL v53 = v52 < v9;
          if (v52 >= v9) {
            int v54 = (uint64_t *)v51;
          }
          else {
            int v54 = (uint64_t *)(v51 + 8);
          }
          if (!v53) {
            uint64_t v50 = v51;
          }
          uint64_t v51 = *v54;
        }
        while (*v54);
        if (v50 != v42 && v9 >= *(_DWORD *)(v50 + 32))
        {
          uint64_t v55 = v42;
          do
          {
            int v56 = *(_DWORD *)(v43 + 32);
            BOOL v57 = v56 < v10;
            if (v56 >= v10) {
              uint64_t v58 = (uint64_t *)v43;
            }
            else {
              uint64_t v58 = (uint64_t *)(v43 + 8);
            }
            if (!v57) {
              uint64_t v55 = v43;
            }
            uint64_t v43 = *v58;
          }
          while (*v58);
          if (v55 != v42 && v10 >= *(_DWORD *)(v55 + 32)) {
            operator new();
          }
        }
      }
    }
    return 0;
  }
  return v39;
}

void sub_2379B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2379D4(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 48))(*a3);
  (*(void (**)(uint64_t))(*(void *)v6 + 56))(v6);
  (*(void (**)(uint64_t))(*(void *)v7 + 48))(v7);
  (*(void (**)(uint64_t))(*(void *)v7 + 56))(v7);
  int v8 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v9 = *a2;
  int v10 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v11 = a3[1];
  if (v11 && (*(unsigned int (**)(uint64_t))(*(void *)v11 + 32))(v11) != 17)
  {
    uint64_t v12 = a3[1];
    if (v12)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v12 + 32))(v12) == 18) {
        goto LABEL_15;
      }
      uint64_t v13 = a3[1];
      if (v13) {
        (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_30;
  }
  if (v8 == 5 && v9 == 4 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v59 = a1[9];
    uint64_t v62 = *(void *)(v59 + 8);
    uint64_t v60 = v59 + 8;
    uint64_t v61 = v62;
    if (!v62) {
      return 0;
    }
    uint64_t v63 = v60;
    do
    {
      unint64_t v64 = *(unsigned __int8 *)(v61 + 55);
      int v65 = (char)v64;
      if ((v64 & 0x80u) != 0) {
        unint64_t v64 = *(void *)(v61 + 40);
      }
      if (v65 >= 0) {
        uint64_t v66 = (const void *)(v61 + 32);
      }
      else {
        uint64_t v66 = *(const void **)(v61 + 32);
      }
      if (v64 >= 0xB) {
        size_t v67 = 11;
      }
      else {
        size_t v67 = v64;
      }
      BOOL v68 = v64 < 0xB;
      int v69 = memcmp(v66, __p, v67);
      BOOL v70 = v69 < 0;
      if (!v69) {
        BOOL v70 = v68;
      }
      BOOL v71 = !v70;
      if (v70) {
        int v72 = (uint64_t *)(v61 + 8);
      }
      else {
        int v72 = (uint64_t *)v61;
      }
      if (v71) {
        uint64_t v63 = v61;
      }
      uint64_t v61 = *v72;
    }
    while (*v72);
    if (v63 == v60) {
      return 0;
    }
    unint64_t v73 = *(unsigned __int8 *)(v63 + 55);
    int v74 = (char)v73;
    if ((v73 & 0x80u) != 0) {
      unint64_t v73 = *(void *)(v63 + 40);
    }
    if (v74 >= 0) {
      BOOL v75 = (const void *)(v63 + 32);
    }
    else {
      BOOL v75 = *(const void **)(v63 + 32);
    }
    if (v73 >= 0xB) {
      size_t v76 = 11;
    }
    else {
      size_t v76 = v73;
    }
    BOOL v77 = v73 > 0xB;
    int v78 = memcmp(__p, v75, v76);
    BOOL v79 = v78 < 0;
    if (!v78) {
      BOOL v79 = v77;
    }
    if (v79) {
      return 0;
    }
    int v105 = *(_DWORD *)(v63 + 64);
    uint64_t v80 = (uint64_t)a1;
    return sub_198D38(v80, &v105);
  }
  if (v8 == 5 && v9 == 5 && v10 == 5)
  {
    char v104 = 11;
    strcpy((char *)__p, "(t*t)/(t*t)");
    uint64_t v81 = a1[9];
    uint64_t v84 = *(void *)(v81 + 8);
    uint64_t v82 = v81 + 8;
    uint64_t v83 = v84;
    if (!v84) {
      return 0;
    }
    uint64_t v85 = v82;
    do
    {
      unint64_t v86 = *(unsigned __int8 *)(v83 + 55);
      int v87 = (char)v86;
      if ((v86 & 0x80u) != 0) {
        unint64_t v86 = *(void *)(v83 + 40);
      }
      if (v87 >= 0) {
        uint64_t v88 = (const void *)(v83 + 32);
      }
      else {
        uint64_t v88 = *(const void **)(v83 + 32);
      }
      if (v86 >= 0xB) {
        size_t v89 = 11;
      }
      else {
        size_t v89 = v86;
      }
      BOOL v90 = v86 < 0xB;
      int v91 = memcmp(v88, __p, v89);
      BOOL v92 = v91 < 0;
      if (!v91) {
        BOOL v92 = v90;
      }
      BOOL v93 = !v92;
      if (v92) {
        int v94 = (uint64_t *)(v83 + 8);
      }
      else {
        int v94 = (uint64_t *)v83;
      }
      if (v93) {
        uint64_t v85 = v83;
      }
      uint64_t v83 = *v94;
    }
    while (*v94);
    if (v85 == v82) {
      return 0;
    }
    unint64_t v95 = *(unsigned __int8 *)(v85 + 55);
    int v96 = (char)v95;
    if ((v95 & 0x80u) != 0) {
      unint64_t v95 = *(void *)(v85 + 40);
    }
    if (v96 >= 0) {
      BOOL v97 = (const void *)(v85 + 32);
    }
    else {
      BOOL v97 = *(const void **)(v85 + 32);
    }
    if (v95 >= 0xB) {
      size_t v98 = 11;
    }
    else {
      size_t v98 = v95;
    }
    BOOL v99 = v95 > 0xB;
    int v100 = memcmp(__p, v97, v98);
    BOOL v101 = v100 < 0;
    if (!v100) {
      BOOL v101 = v99;
    }
    if (v101) {
      return 0;
    }
    int v105 = *(_DWORD *)(v85 + 64);
    uint64_t v80 = (uint64_t)a1;
    return sub_198D38(v80, &v105);
  }
LABEL_30:
  BOOL v18 = __p;
  sub_25E284(v8, v9, v10, (uint64_t)__p);
  uint64_t v19 = a1[9];
  uint64_t v22 = *(void *)(v19 + 8);
  uint64_t v20 = v19 + 8;
  uint64_t v21 = v22;
  if (v22)
  {
    if (v104 >= 0) {
      size_t v23 = v104;
    }
    else {
      size_t v23 = (size_t)__p[1];
    }
    if (v104 < 0) {
      BOOL v18 = (void **)__p[0];
    }
    uint64_t v24 = v20;
    do
    {
      int v25 = *(char *)(v21 + 55);
      if (v25 >= 0) {
        size_t v26 = *(unsigned __int8 *)(v21 + 55);
      }
      else {
        size_t v26 = *(void *)(v21 + 40);
      }
      if (v25 >= 0) {
        uint64_t v27 = (const void *)(v21 + 32);
      }
      else {
        uint64_t v27 = *(const void **)(v21 + 32);
      }
      if (v23 >= v26) {
        size_t v28 = v26;
      }
      else {
        size_t v28 = v23;
      }
      int v29 = memcmp(v27, v18, v28);
      BOOL v30 = v26 < v23;
      if (v29) {
        BOOL v30 = v29 < 0;
      }
      BOOL v31 = !v30;
      if (v30) {
        int v32 = (uint64_t *)(v21 + 8);
      }
      else {
        int v32 = (uint64_t *)v21;
      }
      if (v31) {
        uint64_t v24 = v21;
      }
      uint64_t v21 = *v32;
    }
    while (*v32);
    if (v24 == v20) {
      goto LABEL_68;
    }
    int v33 = *(char *)(v24 + 55);
    if (v33 >= 0) {
      size_t v34 = *(unsigned __int8 *)(v24 + 55);
    }
    else {
      size_t v34 = *(void *)(v24 + 40);
    }
    if (v33 >= 0) {
      size_t v35 = (const void *)(v24 + 32);
    }
    else {
      size_t v35 = *(const void **)(v24 + 32);
    }
    if (v34 >= v23) {
      size_t v36 = v23;
    }
    else {
      size_t v36 = v34;
    }
    int v37 = memcmp(v18, v35, v36);
    BOOL v38 = v23 < v34;
    if (v37) {
      BOOL v38 = v37 < 0;
    }
    if (v38)
    {
LABEL_68:
      uint64_t v39 = 0;
      char v40 = 0;
      if ((v104 & 0x80000000) == 0) {
        goto LABEL_70;
      }
      goto LABEL_69;
    }
    int v105 = *(_DWORD *)(v24 + 64);
    uint64_t v39 = sub_198D38((uint64_t)a1, &v105);
    char v40 = 1;
    if (v104 < 0) {
LABEL_69:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v39 = 0;
    char v40 = 0;
    if (v104 < 0) {
      goto LABEL_69;
    }
  }
LABEL_70:
  if ((v40 & 1) == 0)
  {
    uint64_t v41 = a1[6];
    uint64_t v44 = *(void *)(v41 + 8);
    uint64_t v42 = v41 + 8;
    uint64_t v43 = v44;
    if (v44)
    {
      uint64_t v45 = v42;
      uint64_t v46 = v43;
      do
      {
        int v47 = *(_DWORD *)(v46 + 32);
        BOOL v48 = v47 < v8;
        if (v47 >= v8) {
          uint64_t v49 = (uint64_t *)v46;
        }
        else {
          uint64_t v49 = (uint64_t *)(v46 + 8);
        }
        if (!v48) {
          uint64_t v45 = v46;
        }
        uint64_t v46 = *v49;
      }
      while (*v49);
      if (v45 != v42 && v8 >= *(_DWORD *)(v45 + 32))
      {
        uint64_t v50 = v42;
        uint64_t v51 = v43;
        do
        {
          int v52 = *(_DWORD *)(v51 + 32);
          BOOL v53 = v52 < v9;
          if (v52 >= v9) {
            int v54 = (uint64_t *)v51;
          }
          else {
            int v54 = (uint64_t *)(v51 + 8);
          }
          if (!v53) {
            uint64_t v50 = v51;
          }
          uint64_t v51 = *v54;
        }
        while (*v54);
        if (v50 != v42 && v9 >= *(_DWORD *)(v50 + 32))
        {
          uint64_t v55 = v42;
          do
          {
            int v56 = *(_DWORD *)(v43 + 32);
            BOOL v57 = v56 < v10;
            if (v56 >= v10) {
              uint64_t v58 = (uint64_t *)v43;
            }
            else {
              uint64_t v58 = (uint64_t *)(v43 + 8);
            }
            if (!v57) {
              uint64_t v55 = v43;
            }
            uint64_t v43 = *v58;
          }
          while (*v58);
          if (v55 != v42 && v10 >= *(_DWORD *)(v55 + 32)) {
            operator new();
          }
        }
      }
    }
    return 0;
  }
  return v39;
}

void sub_238128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_238144(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  double v8 = (*(double (**)(void))(*(void *)*a3 + 48))(*a3);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 56))(v6);
  double v10 = (*(double (**)(uint64_t))(*(void *)v7 + 48))(v7);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
  int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v13 = *a2;
  int v14 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v15 = a3[1];
  if (v15 && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17)
  {
    uint64_t v16 = a3[1];
    if (v16)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) == 18) {
        goto LABEL_15;
      }
      uint64_t v17 = a3[1];
      if (v17) {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  uint64_t v140 = 0;
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_190;
  }
  if (v12 == 2 && v13 == 2 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)+t");
    uint64_t v35 = a1[8];
    uint64_t v38 = *(void *)(v35 + 8);
    uint64_t v36 = v35 + 8;
    uint64_t v37 = v38;
    if (!v38) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v40 = *(unsigned __int8 *)(v37 + 55);
      int v41 = (char)v40;
      if ((v40 & 0x80u) != 0) {
        unint64_t v40 = *(void *)(v37 + 40);
      }
      if (v41 >= 0) {
        uint64_t v42 = (const void *)(v37 + 32);
      }
      else {
        uint64_t v42 = *(const void **)(v37 + 32);
      }
      if (v40 >= 7) {
        size_t v43 = 7;
      }
      else {
        size_t v43 = v40;
      }
      BOOL v44 = v40 < 7;
      int v45 = memcmp(v42, &__s2, v43);
      BOOL v46 = v45 < 0;
      if (!v45) {
        BOOL v46 = v44;
      }
      BOOL v47 = !v46;
      if (v46) {
        BOOL v48 = (uint64_t *)(v37 + 8);
      }
      else {
        BOOL v48 = (uint64_t *)v37;
      }
      if (v47) {
        uint64_t v39 = v37;
      }
      uint64_t v37 = *v48;
    }
    while (*v48);
LABEL_154:
    if (v39 != v36)
    {
      unint64_t v85 = *(unsigned __int8 *)(v39 + 55);
      int v86 = (char)v85;
      if ((v85 & 0x80u) != 0) {
        unint64_t v85 = *(void *)(v39 + 40);
      }
      if (v86 >= 0) {
        int v87 = (const void *)(v39 + 32);
      }
      else {
        int v87 = *(const void **)(v39 + 32);
      }
      if (v85 >= 7) {
        size_t v88 = 7;
      }
      else {
        size_t v88 = v85;
      }
      BOOL v89 = v85 > 7;
      int v90 = memcmp(&__s2, v87, v88);
      BOOL v91 = v90 < 0;
      if (!v90) {
        BOOL v91 = v89;
      }
      if (!v91)
      {
        int v141 = *(_DWORD *)(v39 + 64);
        return sub_251540((uint64_t)a1, &v141);
      }
    }
    return 0;
  }
  if (v12 == 2 && v13 == 3 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)-t");
    uint64_t v49 = a1[8];
    uint64_t v51 = *(void *)(v49 + 8);
    uint64_t v36 = v49 + 8;
    uint64_t v50 = v51;
    if (!v51) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v52 = *(unsigned __int8 *)(v50 + 55);
      int v53 = (char)v52;
      if ((v52 & 0x80u) != 0) {
        unint64_t v52 = *(void *)(v50 + 40);
      }
      if (v53 >= 0) {
        int v54 = (const void *)(v50 + 32);
      }
      else {
        int v54 = *(const void **)(v50 + 32);
      }
      if (v52 >= 7) {
        size_t v55 = 7;
      }
      else {
        size_t v55 = v52;
      }
      BOOL v56 = v52 < 7;
      int v57 = memcmp(v54, &__s2, v55);
      BOOL v58 = v57 < 0;
      if (!v57) {
        BOOL v58 = v56;
      }
      BOOL v59 = !v58;
      if (v58) {
        uint64_t v60 = (uint64_t *)(v50 + 8);
      }
      else {
        uint64_t v60 = (uint64_t *)v50;
      }
      if (v59) {
        uint64_t v39 = v50;
      }
      uint64_t v50 = *v60;
    }
    while (*v60);
    goto LABEL_154;
  }
  if (v12 == 3 && v13 == 3 && v14 == 3)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t-t)+t");
    uint64_t v61 = a1[8];
    uint64_t v63 = *(void *)(v61 + 8);
    uint64_t v36 = v61 + 8;
    uint64_t v62 = v63;
    if (!v63) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v64 = *(unsigned __int8 *)(v62 + 55);
      int v65 = (char)v64;
      if ((v64 & 0x80u) != 0) {
        unint64_t v64 = *(void *)(v62 + 40);
      }
      if (v65 >= 0) {
        uint64_t v66 = (const void *)(v62 + 32);
      }
      else {
        uint64_t v66 = *(const void **)(v62 + 32);
      }
      if (v64 >= 7) {
        size_t v67 = 7;
      }
      else {
        size_t v67 = v64;
      }
      BOOL v68 = v64 < 7;
      int v69 = memcmp(v66, &__s2, v67);
      BOOL v70 = v69 < 0;
      if (!v69) {
        BOOL v70 = v68;
      }
      BOOL v71 = !v70;
      if (v70) {
        int v72 = (uint64_t *)(v62 + 8);
      }
      else {
        int v72 = (uint64_t *)v62;
      }
      if (v71) {
        uint64_t v39 = v62;
      }
      uint64_t v62 = *v72;
    }
    while (*v72);
    goto LABEL_154;
  }
  if (v12 == 4 && v13 == 4 && v14 == 4)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t*t)*t");
    uint64_t v73 = a1[8];
    uint64_t v75 = *(void *)(v73 + 8);
    uint64_t v36 = v73 + 8;
    uint64_t v74 = v75;
    if (!v75) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v76 = *(unsigned __int8 *)(v74 + 55);
      int v77 = (char)v76;
      if ((v76 & 0x80u) != 0) {
        unint64_t v76 = *(void *)(v74 + 40);
      }
      if (v77 >= 0) {
        int v78 = (const void *)(v74 + 32);
      }
      else {
        int v78 = *(const void **)(v74 + 32);
      }
      if (v76 >= 7) {
        size_t v79 = 7;
      }
      else {
        size_t v79 = v76;
      }
      BOOL v80 = v76 < 7;
      int v81 = memcmp(v78, &__s2, v79);
      BOOL v82 = v81 < 0;
      if (!v81) {
        BOOL v82 = v80;
      }
      BOOL v83 = !v82;
      if (v82) {
        uint64_t v84 = (uint64_t *)(v74 + 8);
      }
      else {
        uint64_t v84 = (uint64_t *)v74;
      }
      if (v83) {
        uint64_t v39 = v74;
      }
      uint64_t v74 = *v84;
    }
    while (*v84);
    goto LABEL_154;
  }
  BOOL v27 = v12 == 4 && v13 == 5;
  if (v27 && v14 == 4)
  {
    sub_5E5C(&__s2, "(t*t)/t");
    int v34 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v140);
    goto LABEL_170;
  }
  if (v12 == 5 && v13 == 4 && v14 == 5) {
    goto LABEL_179;
  }
  BOOL v32 = v12 == 5 && v13 == 5;
  if (v32 && v14 == 5)
  {
    sub_5E5C(&__s2, "(t*t)/t");
    int v34 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v11, v9, &v140);
    goto LABEL_170;
  }
  if (v14 != 5) {
    BOOL v27 = 0;
  }
  if (v27)
  {
    sub_5E5C(&__s2, "t*(t*t)");
    int v34 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v140);
LABEL_170:
    int v93 = v34;
    if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__s2.__r_.__value_.__l.__data_);
    }
    if (v93) {
      return v140;
    }
    else {
      return 0;
    }
  }
  if (v14 == 4 && v32)
  {
LABEL_179:
    sub_5E5C(&__s2, "t/(t*t)");
    int v34 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v140);
    goto LABEL_170;
  }
  if (v8 != v10 || v12 != 4 || v14 != 4 || (v13 & 0xFFFFFFFE) != 2)
  {
LABEL_190:
    p_s2 = &__s2;
    sub_25F11C(v12, v13, v14, (uint64_t)&__s2);
    uint64_t v99 = a1[9];
    uint64_t v102 = *(void *)(v99 + 8);
    uint64_t v101 = v99 + 8;
    uint64_t v100 = v102;
    if (v102)
    {
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__s2.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __s2.__r_.__value_.__l.__size_;
      }
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_s2 = (std::string *)__s2.__r_.__value_.__r.__words[0];
      }
      uint64_t v104 = v101;
      do
      {
        int v105 = *(char *)(v100 + 55);
        if (v105 >= 0) {
          size_t v106 = *(unsigned __int8 *)(v100 + 55);
        }
        else {
          size_t v106 = *(void *)(v100 + 40);
        }
        if (v105 >= 0) {
          int v107 = (const void *)(v100 + 32);
        }
        else {
          int v107 = *(const void **)(v100 + 32);
        }
        if (size >= v106) {
          size_t v108 = v106;
        }
        else {
          size_t v108 = size;
        }
        int v109 = memcmp(v107, p_s2, v108);
        BOOL v110 = v106 < size;
        if (v109) {
          BOOL v110 = v109 < 0;
        }
        BOOL v111 = !v110;
        if (v110) {
          uint64_t v112 = (uint64_t *)(v100 + 8);
        }
        else {
          uint64_t v112 = (uint64_t *)v100;
        }
        if (v111) {
          uint64_t v104 = v100;
        }
        uint64_t v100 = *v112;
      }
      while (*v112);
      if (v104 != v101)
      {
        int v113 = *(char *)(v104 + 55);
        if (v113 >= 0) {
          size_t v114 = *(unsigned __int8 *)(v104 + 55);
        }
        else {
          size_t v114 = *(void *)(v104 + 40);
        }
        if (v113 >= 0) {
          int v115 = (const void *)(v104 + 32);
        }
        else {
          int v115 = *(const void **)(v104 + 32);
        }
        if (v114 >= size) {
          size_t v116 = size;
        }
        else {
          size_t v116 = v114;
        }
        int v117 = memcmp(p_s2, v115, v116);
        BOOL v118 = size < v114;
        if (v117) {
          BOOL v118 = v117 < 0;
        }
        if (v118)
        {
          LODWORD(v100) = 0;
          if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_229;
          }
LABEL_261:
          if (!v100)
          {
LABEL_230:
            uint64_t v119 = a1[6];
            uint64_t v122 = *(void *)(v119 + 8);
            uint64_t v120 = v119 + 8;
            uint64_t v121 = v122;
            if (v122)
            {
              uint64_t v123 = v120;
              uint64_t v124 = v121;
              do
              {
                int v125 = *(_DWORD *)(v124 + 32);
                BOOL v126 = v125 < v12;
                if (v125 >= v12) {
                  int v127 = (uint64_t *)v124;
                }
                else {
                  int v127 = (uint64_t *)(v124 + 8);
                }
                if (!v126) {
                  uint64_t v123 = v124;
                }
                uint64_t v124 = *v127;
              }
              while (*v127);
              if (v123 != v120 && v12 >= *(_DWORD *)(v123 + 32))
              {
                uint64_t v128 = v120;
                uint64_t v129 = v121;
                do
                {
                  int v130 = *(_DWORD *)(v129 + 32);
                  BOOL v131 = v130 < v13;
                  if (v130 >= v13) {
                    BOOL v132 = (uint64_t *)v129;
                  }
                  else {
                    BOOL v132 = (uint64_t *)(v129 + 8);
                  }
                  if (!v131) {
                    uint64_t v128 = v129;
                  }
                  uint64_t v129 = *v132;
                }
                while (*v132);
                if (v128 != v120 && v13 >= *(_DWORD *)(v128 + 32))
                {
                  uint64_t v133 = v120;
                  do
                  {
                    int v134 = *(_DWORD *)(v121 + 32);
                    BOOL v135 = v134 < v14;
                    if (v134 >= v14) {
                      int v136 = (uint64_t *)v121;
                    }
                    else {
                      int v136 = (uint64_t *)(v121 + 8);
                    }
                    if (!v135) {
                      uint64_t v133 = v121;
                    }
                    uint64_t v121 = *v136;
                  }
                  while (*v136);
                  if (v133 != v120 && v14 >= *(_DWORD *)(v133 + 32)) {
                    operator new();
                  }
                }
              }
            }
            return 0;
          }
          return v140;
        }
        int v141 = *(_DWORD *)(v104 + 64);
        uint64_t v140 = sub_194AAC((uint64_t)a1, &v141);
        LODWORD(v100) = 1;
        if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_261;
        }
LABEL_229:
        operator delete(__s2.__r_.__value_.__l.__data_);
        if (!v100) {
          goto LABEL_230;
        }
        return v140;
      }
      LODWORD(v100) = 0;
    }
    if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_261;
    }
    goto LABEL_229;
  }
  memset(&__s2, 0, sizeof(__s2));
  if (v13 == 3)
  {
    size_t v138 = "t*(t-t)";
  }
  else
  {
    uint64_t v92 = 0;
    if (v13 != 2) {
      return v92;
    }
    size_t v138 = "t*(t+t)";
  }
  std::string::assign(&__s2, v138);
  if (sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v140)) {
    uint64_t v92 = v140;
  }
  else {
    uint64_t v92 = 0;
  }
  if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s2.__r_.__value_.__l.__data_);
  }
  return v92;
}

void sub_238B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_238BC0(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  double v8 = (*(double (**)(void))(*(void *)*a3 + 48))(*a3);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 56))(v6);
  double v10 = (*(double (**)(uint64_t))(*(void *)v7 + 48))(v7);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
  int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v13 = *a2;
  int v14 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v15 = a3[1];
  if (v15 && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17)
  {
    uint64_t v16 = a3[1];
    if (v16)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) == 18) {
        goto LABEL_15;
      }
      uint64_t v17 = a3[1];
      if (v17) {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  uint64_t v137 = 0;
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_205;
  }
  if (v12 == 2 && v13 == 2 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)+t");
    uint64_t v36 = a1[8];
    uint64_t v39 = *(void *)(v36 + 8);
    uint64_t v37 = v36 + 8;
    uint64_t v38 = v39;
    if (!v39) {
      return v38;
    }
    uint64_t v40 = v37;
    do
    {
      unint64_t v41 = *(unsigned __int8 *)(v38 + 55);
      int v42 = (char)v41;
      if ((v41 & 0x80u) != 0) {
        unint64_t v41 = *(void *)(v38 + 40);
      }
      if (v42 >= 0) {
        size_t v43 = (const void *)(v38 + 32);
      }
      else {
        size_t v43 = *(const void **)(v38 + 32);
      }
      if (v41 >= 7) {
        size_t v44 = 7;
      }
      else {
        size_t v44 = v41;
      }
      BOOL v45 = v41 < 7;
      int v46 = memcmp(v43, &__s2, v44);
      BOOL v47 = v46 < 0;
      if (!v46) {
        BOOL v47 = v45;
      }
      BOOL v48 = !v47;
      if (v47) {
        uint64_t v49 = (uint64_t *)(v38 + 8);
      }
      else {
        uint64_t v49 = (uint64_t *)v38;
      }
      if (v48) {
        uint64_t v40 = v38;
      }
      uint64_t v38 = *v49;
    }
    while (*v49);
    goto LABEL_157;
  }
  if (v12 == 2 && v13 == 3 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)-t");
    uint64_t v50 = a1[8];
    uint64_t v51 = *(void *)(v50 + 8);
    uint64_t v37 = v50 + 8;
    uint64_t v38 = v51;
    if (!v51) {
      return v38;
    }
    uint64_t v40 = v37;
    do
    {
      unint64_t v52 = *(unsigned __int8 *)(v38 + 55);
      int v53 = (char)v52;
      if ((v52 & 0x80u) != 0) {
        unint64_t v52 = *(void *)(v38 + 40);
      }
      if (v53 >= 0) {
        int v54 = (const void *)(v38 + 32);
      }
      else {
        int v54 = *(const void **)(v38 + 32);
      }
      if (v52 >= 7) {
        size_t v55 = 7;
      }
      else {
        size_t v55 = v52;
      }
      BOOL v56 = v52 < 7;
      int v57 = memcmp(v54, &__s2, v55);
      BOOL v58 = v57 < 0;
      if (!v57) {
        BOOL v58 = v56;
      }
      BOOL v59 = !v58;
      if (v58) {
        uint64_t v60 = (uint64_t *)(v38 + 8);
      }
      else {
        uint64_t v60 = (uint64_t *)v38;
      }
      if (v59) {
        uint64_t v40 = v38;
      }
      uint64_t v38 = *v60;
    }
    while (*v60);
    goto LABEL_157;
  }
  if (v12 == 3 && v13 == 3 && v14 == 3)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)-t");
    uint64_t v61 = a1[8];
    uint64_t v62 = *(void *)(v61 + 8);
    uint64_t v37 = v61 + 8;
    uint64_t v38 = v62;
    if (!v62) {
      return v38;
    }
    uint64_t v40 = v37;
    do
    {
      unint64_t v63 = *(unsigned __int8 *)(v38 + 55);
      int v64 = (char)v63;
      if ((v63 & 0x80u) != 0) {
        unint64_t v63 = *(void *)(v38 + 40);
      }
      if (v64 >= 0) {
        int v65 = (const void *)(v38 + 32);
      }
      else {
        int v65 = *(const void **)(v38 + 32);
      }
      if (v63 >= 7) {
        size_t v66 = 7;
      }
      else {
        size_t v66 = v63;
      }
      BOOL v67 = v63 < 7;
      int v68 = memcmp(v65, &__s2, v66);
      BOOL v69 = v68 < 0;
      if (!v68) {
        BOOL v69 = v67;
      }
      BOOL v70 = !v69;
      if (v69) {
        BOOL v71 = (uint64_t *)(v38 + 8);
      }
      else {
        BOOL v71 = (uint64_t *)v38;
      }
      if (v70) {
        uint64_t v40 = v38;
      }
      uint64_t v38 = *v71;
    }
    while (*v71);
    goto LABEL_157;
  }
  if (v12 == 4 && v13 == 4 && v14 == 4)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t*t)*t");
    uint64_t v72 = a1[8];
    uint64_t v73 = *(void *)(v72 + 8);
    uint64_t v37 = v72 + 8;
    uint64_t v38 = v73;
    if (!v73) {
      return v38;
    }
    uint64_t v40 = v37;
    do
    {
      unint64_t v74 = *(unsigned __int8 *)(v38 + 55);
      int v75 = (char)v74;
      if ((v74 & 0x80u) != 0) {
        unint64_t v74 = *(void *)(v38 + 40);
      }
      if (v75 >= 0) {
        unint64_t v76 = (const void *)(v38 + 32);
      }
      else {
        unint64_t v76 = *(const void **)(v38 + 32);
      }
      if (v74 >= 7) {
        size_t v77 = 7;
      }
      else {
        size_t v77 = v74;
      }
      BOOL v78 = v74 < 7;
      int v79 = memcmp(v76, &__s2, v77);
      BOOL v80 = v79 < 0;
      if (!v79) {
        BOOL v80 = v78;
      }
      BOOL v81 = !v80;
      if (v80) {
        BOOL v82 = (uint64_t *)(v38 + 8);
      }
      else {
        BOOL v82 = (uint64_t *)v38;
      }
      if (v81) {
        uint64_t v40 = v38;
      }
      uint64_t v38 = *v82;
    }
    while (*v82);
LABEL_157:
    if (v40 != v37)
    {
      unint64_t v83 = *(unsigned __int8 *)(v40 + 55);
      int v84 = (char)v83;
      if ((v83 & 0x80u) != 0) {
        unint64_t v83 = *(void *)(v40 + 40);
      }
      if (v84 >= 0) {
        unint64_t v85 = (const void *)(v40 + 32);
      }
      else {
        unint64_t v85 = *(const void **)(v40 + 32);
      }
      if (v83 >= 7) {
        size_t v86 = 7;
      }
      else {
        size_t v86 = v83;
      }
      BOOL v87 = v83 > 7;
      int v88 = memcmp(&__s2, v85, v86);
      BOOL v89 = v88 < 0;
      if (!v88) {
        BOOL v89 = v87;
      }
      if (!v89)
      {
        int v138 = *(_DWORD *)(v40 + 64);
        return sub_251540((uint64_t)a1, &v138);
      }
    }
    return 0;
  }
  BOOL v27 = v12 == 4 && v13 == 5;
  if (v27 && v14 == 4) {
    goto LABEL_172;
  }
  BOOL v30 = v12 == 5 && v13 == 4;
  if (v30 && v14 == 5)
  {
    sub_5E5C(&__s2, "(t*t)*t");
    int v35 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v137);
    goto LABEL_173;
  }
  BOOL v32 = v12 == 5 && v13 == 5;
  BOOL v33 = v32;
  if (v33 && v14 == 5)
  {
LABEL_172:
    sub_5E5C(&__s2, "(t*t)/t");
    int v35 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v137);
    goto LABEL_173;
  }
  if (v14 != 5) {
    BOOL v27 = 0;
  }
  if (v27 || (v14 == 4 ? (BOOL v91 = v33) : (BOOL v91 = 0), v91))
  {
    sub_5E5C(&__s2, "t*(t/t)");
    int v35 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v137);
LABEL_173:
    int v90 = v35;
    if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__s2.__r_.__value_.__l.__data_);
    }
    if (v90) {
      return v137;
    }
    else {
      return 0;
    }
  }
  if (v14 == 2 && v30)
  {
    sub_5E5C(&__s2, "(t*t)*(t+t)");
    int v35 = sub_17C314((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v137);
    goto LABEL_173;
  }
  if (v14 != 3) {
    BOOL v30 = 0;
  }
  if (v30)
  {
    sub_5E5C(&__s2, "(t*t)*(t-t)");
    int v35 = sub_17C314((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v137);
    goto LABEL_173;
  }
  if (v8 == v10 && v12 == 4 && v14 == 4)
  {
    if ((v13 & 0xFFFFFFFE) == 2)
    {
      memset(&__s2, 0, sizeof(__s2));
      if (v13 == 3)
      {
        int v93 = "t*(t-t)";
      }
      else
      {
        uint64_t v38 = 0;
        if (v13 != 2) {
          return v38;
        }
        int v93 = "t*(t+t)";
      }
      std::string::assign(&__s2, v93);
      int v135 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v137);
      goto LABEL_286;
    }
LABEL_205:
    p_s2 = &__s2;
    sub_25FFB8(v12, v13, v14, (uint64_t)&__s2);
    uint64_t v96 = a1[9];
    uint64_t v99 = *(void *)(v96 + 8);
    uint64_t v98 = v96 + 8;
    uint64_t v97 = v99;
    if (v99)
    {
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__s2.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __s2.__r_.__value_.__l.__size_;
      }
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_s2 = (std::string *)__s2.__r_.__value_.__r.__words[0];
      }
      uint64_t v101 = v98;
      do
      {
        int v102 = *(char *)(v97 + 55);
        if (v102 >= 0) {
          size_t v103 = *(unsigned __int8 *)(v97 + 55);
        }
        else {
          size_t v103 = *(void *)(v97 + 40);
        }
        if (v102 >= 0) {
          uint64_t v104 = (const void *)(v97 + 32);
        }
        else {
          uint64_t v104 = *(const void **)(v97 + 32);
        }
        if (size >= v103) {
          size_t v105 = v103;
        }
        else {
          size_t v105 = size;
        }
        int v106 = memcmp(v104, p_s2, v105);
        BOOL v107 = v103 < size;
        if (v106) {
          BOOL v107 = v106 < 0;
        }
        BOOL v108 = !v107;
        if (v107) {
          int v109 = (uint64_t *)(v97 + 8);
        }
        else {
          int v109 = (uint64_t *)v97;
        }
        if (v108) {
          uint64_t v101 = v97;
        }
        uint64_t v97 = *v109;
      }
      while (*v109);
      if (v101 != v98)
      {
        int v110 = *(char *)(v101 + 55);
        if (v110 >= 0) {
          size_t v111 = *(unsigned __int8 *)(v101 + 55);
        }
        else {
          size_t v111 = *(void *)(v101 + 40);
        }
        if (v110 >= 0) {
          uint64_t v112 = (const void *)(v101 + 32);
        }
        else {
          uint64_t v112 = *(const void **)(v101 + 32);
        }
        if (v111 >= size) {
          size_t v113 = size;
        }
        else {
          size_t v113 = v111;
        }
        int v114 = memcmp(p_s2, v112, v113);
        BOOL v115 = size < v111;
        if (v114) {
          BOOL v115 = v114 < 0;
        }
        if (v115)
        {
          LODWORD(v97) = 0;
          if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_244;
          }
LABEL_276:
          if (!v97)
          {
LABEL_245:
            uint64_t v116 = a1[6];
            uint64_t v119 = *(void *)(v116 + 8);
            uint64_t v117 = v116 + 8;
            uint64_t v118 = v119;
            if (v119)
            {
              uint64_t v120 = v117;
              uint64_t v121 = v118;
              do
              {
                int v122 = *(_DWORD *)(v121 + 32);
                BOOL v123 = v122 < v12;
                if (v122 >= v12) {
                  uint64_t v124 = (uint64_t *)v121;
                }
                else {
                  uint64_t v124 = (uint64_t *)(v121 + 8);
                }
                if (!v123) {
                  uint64_t v120 = v121;
                }
                uint64_t v121 = *v124;
              }
              while (*v124);
              if (v120 != v117 && v12 >= *(_DWORD *)(v120 + 32))
              {
                uint64_t v125 = v117;
                uint64_t v126 = v118;
                do
                {
                  int v127 = *(_DWORD *)(v126 + 32);
                  BOOL v128 = v127 < v13;
                  if (v127 >= v13) {
                    uint64_t v129 = (uint64_t *)v126;
                  }
                  else {
                    uint64_t v129 = (uint64_t *)(v126 + 8);
                  }
                  if (!v128) {
                    uint64_t v125 = v126;
                  }
                  uint64_t v126 = *v129;
                }
                while (*v129);
                if (v125 != v117 && v13 >= *(_DWORD *)(v125 + 32))
                {
                  uint64_t v130 = v117;
                  do
                  {
                    int v131 = *(_DWORD *)(v118 + 32);
                    BOOL v132 = v131 < v14;
                    if (v131 >= v14) {
                      uint64_t v133 = (uint64_t *)v118;
                    }
                    else {
                      uint64_t v133 = (uint64_t *)(v118 + 8);
                    }
                    if (!v132) {
                      uint64_t v130 = v118;
                    }
                    uint64_t v118 = *v133;
                  }
                  while (*v133);
                  if (v130 != v117 && v14 >= *(_DWORD *)(v130 + 32)) {
                    operator new();
                  }
                }
              }
            }
            return 0;
          }
          return v137;
        }
        int v138 = *(_DWORD *)(v101 + 64);
        uint64_t v137 = sub_17C480((uint64_t)a1, &v138);
        LODWORD(v97) = 1;
        if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_276;
        }
LABEL_244:
        operator delete(__s2.__r_.__value_.__l.__data_);
        if (!v97) {
          goto LABEL_245;
        }
        return v137;
      }
      LODWORD(v97) = 0;
    }
    if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_276;
    }
    goto LABEL_244;
  }
  if (v8 != v10 || v12 != 5 || v14 != 5 || (v13 & 0xFFFFFFFE) != 2) {
    goto LABEL_205;
  }
  memset(&__s2, 0, sizeof(__s2));
  if (v13 == 3)
  {
    int v94 = "(t-t)/t";
  }
  else
  {
    uint64_t v38 = 0;
    if (v13 != 2) {
      return v38;
    }
    int v94 = "(t+t)/t";
  }
  std::string::assign(&__s2, v94);
  int v135 = sub_24B54C((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v137);
LABEL_286:
  if (v135) {
    uint64_t v38 = v137;
  }
  else {
    uint64_t v38 = 0;
  }
  if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s2.__r_.__value_.__l.__data_);
  }
  return v38;
}

void sub_239734(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23977C(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  double v8 = (*(double (**)(void))(*(void *)*a3 + 48))(*a3);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 56))(v6);
  double v10 = (*(double (**)(uint64_t))(*(void *)v7 + 48))(v7);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
  int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v13 = *a2;
  int v14 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v15 = a3[1];
  if (v15 && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17)
  {
    uint64_t v16 = a3[1];
    if (v16)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) == 18) {
        goto LABEL_15;
      }
      uint64_t v17 = a3[1];
      if (v17) {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  uint64_t v140 = 0;
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_189;
  }
  if (v12 == 2 && v13 == 2 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)+t");
    uint64_t v35 = a1[8];
    uint64_t v38 = *(void *)(v35 + 8);
    uint64_t v36 = v35 + 8;
    uint64_t v37 = v38;
    if (!v38) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v40 = *(unsigned __int8 *)(v37 + 55);
      int v41 = (char)v40;
      if ((v40 & 0x80u) != 0) {
        unint64_t v40 = *(void *)(v37 + 40);
      }
      if (v41 >= 0) {
        int v42 = (const void *)(v37 + 32);
      }
      else {
        int v42 = *(const void **)(v37 + 32);
      }
      if (v40 >= 7) {
        size_t v43 = 7;
      }
      else {
        size_t v43 = v40;
      }
      BOOL v44 = v40 < 7;
      int v45 = memcmp(v42, &__s2, v43);
      BOOL v46 = v45 < 0;
      if (!v45) {
        BOOL v46 = v44;
      }
      BOOL v47 = !v46;
      if (v46) {
        BOOL v48 = (uint64_t *)(v37 + 8);
      }
      else {
        BOOL v48 = (uint64_t *)v37;
      }
      if (v47) {
        uint64_t v39 = v37;
      }
      uint64_t v37 = *v48;
    }
    while (*v48);
LABEL_154:
    if (v39 != v36)
    {
      unint64_t v85 = *(unsigned __int8 *)(v39 + 55);
      int v86 = (char)v85;
      if ((v85 & 0x80u) != 0) {
        unint64_t v85 = *(void *)(v39 + 40);
      }
      if (v86 >= 0) {
        BOOL v87 = (const void *)(v39 + 32);
      }
      else {
        BOOL v87 = *(const void **)(v39 + 32);
      }
      if (v85 >= 7) {
        size_t v88 = 7;
      }
      else {
        size_t v88 = v85;
      }
      BOOL v89 = v85 > 7;
      int v90 = memcmp(&__s2, v87, v88);
      BOOL v91 = v90 < 0;
      if (!v90) {
        BOOL v91 = v89;
      }
      if (!v91)
      {
        int v141 = *(_DWORD *)(v39 + 64);
        return sub_251540((uint64_t)a1, &v141);
      }
    }
    return 0;
  }
  if (v12 == 2 && v13 == 3 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)-t");
    uint64_t v49 = a1[8];
    uint64_t v51 = *(void *)(v49 + 8);
    uint64_t v36 = v49 + 8;
    uint64_t v50 = v51;
    if (!v51) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v52 = *(unsigned __int8 *)(v50 + 55);
      int v53 = (char)v52;
      if ((v52 & 0x80u) != 0) {
        unint64_t v52 = *(void *)(v50 + 40);
      }
      if (v53 >= 0) {
        int v54 = (const void *)(v50 + 32);
      }
      else {
        int v54 = *(const void **)(v50 + 32);
      }
      if (v52 >= 7) {
        size_t v55 = 7;
      }
      else {
        size_t v55 = v52;
      }
      BOOL v56 = v52 < 7;
      int v57 = memcmp(v54, &__s2, v55);
      BOOL v58 = v57 < 0;
      if (!v57) {
        BOOL v58 = v56;
      }
      BOOL v59 = !v58;
      if (v58) {
        uint64_t v60 = (uint64_t *)(v50 + 8);
      }
      else {
        uint64_t v60 = (uint64_t *)v50;
      }
      if (v59) {
        uint64_t v39 = v50;
      }
      uint64_t v50 = *v60;
    }
    while (*v60);
    goto LABEL_154;
  }
  if (v12 == 3 && v13 == 3 && v14 == 3)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "t-(t+t)");
    uint64_t v61 = a1[8];
    uint64_t v63 = *(void *)(v61 + 8);
    uint64_t v36 = v61 + 8;
    uint64_t v62 = v63;
    if (!v63) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v64 = *(unsigned __int8 *)(v62 + 55);
      int v65 = (char)v64;
      if ((v64 & 0x80u) != 0) {
        unint64_t v64 = *(void *)(v62 + 40);
      }
      if (v65 >= 0) {
        size_t v66 = (const void *)(v62 + 32);
      }
      else {
        size_t v66 = *(const void **)(v62 + 32);
      }
      if (v64 >= 7) {
        size_t v67 = 7;
      }
      else {
        size_t v67 = v64;
      }
      BOOL v68 = v64 < 7;
      int v69 = memcmp(v66, &__s2, v67);
      BOOL v70 = v69 < 0;
      if (!v69) {
        BOOL v70 = v68;
      }
      BOOL v71 = !v70;
      if (v70) {
        uint64_t v72 = (uint64_t *)(v62 + 8);
      }
      else {
        uint64_t v72 = (uint64_t *)v62;
      }
      if (v71) {
        uint64_t v39 = v62;
      }
      uint64_t v62 = *v72;
    }
    while (*v72);
    goto LABEL_154;
  }
  if (v12 == 4 && v13 == 4 && v14 == 4)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t*t)*t");
    uint64_t v73 = a1[8];
    uint64_t v75 = *(void *)(v73 + 8);
    uint64_t v36 = v73 + 8;
    uint64_t v74 = v75;
    if (!v75) {
      return 0;
    }
    uint64_t v39 = v36;
    do
    {
      unint64_t v76 = *(unsigned __int8 *)(v74 + 55);
      int v77 = (char)v76;
      if ((v76 & 0x80u) != 0) {
        unint64_t v76 = *(void *)(v74 + 40);
      }
      if (v77 >= 0) {
        BOOL v78 = (const void *)(v74 + 32);
      }
      else {
        BOOL v78 = *(const void **)(v74 + 32);
      }
      if (v76 >= 7) {
        size_t v79 = 7;
      }
      else {
        size_t v79 = v76;
      }
      BOOL v80 = v76 < 7;
      int v81 = memcmp(v78, &__s2, v79);
      BOOL v82 = v81 < 0;
      if (!v81) {
        BOOL v82 = v80;
      }
      BOOL v83 = !v82;
      if (v82) {
        int v84 = (uint64_t *)(v74 + 8);
      }
      else {
        int v84 = (uint64_t *)v74;
      }
      if (v83) {
        uint64_t v39 = v74;
      }
      uint64_t v74 = *v84;
    }
    while (*v84);
    goto LABEL_154;
  }
  BOOL v27 = v12 == 4 && v13 == 5;
  if (v27 && v14 == 4)
  {
LABEL_74:
    sub_5E5C(&__s2, "(t*t)/t");
    int v34 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v140);
LABEL_170:
    int v93 = v34;
    if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__s2.__r_.__value_.__l.__data_);
    }
    if (v93) {
      return v140;
    }
    else {
      return 0;
    }
  }
  if (v12 == 5 && v13 == 4 && v14 == 5)
  {
    sub_5E5C(&__s2, "t*(t/t)");
    int v34 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v11, v9, &v140);
    goto LABEL_170;
  }
  BOOL v32 = v12 == 5 && v13 == 5;
  if (v32 && v14 == 5) {
    goto LABEL_169;
  }
  if (v14 != 5) {
    BOOL v27 = 0;
  }
  if (v27) {
    goto LABEL_74;
  }
  if (v14 == 4 && v32)
  {
LABEL_169:
    sub_5E5C(&__s2, "t/(t*t)");
    int v34 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v140);
    goto LABEL_170;
  }
  if (v8 != v10 || v12 != 4 || v14 != 4 || (v13 & 0xFFFFFFFE) != 2)
  {
LABEL_189:
    p_s2 = &__s2;
    sub_260E58(v12, v13, v14, (uint64_t)&__s2);
    uint64_t v99 = a1[9];
    uint64_t v102 = *(void *)(v99 + 8);
    uint64_t v101 = v99 + 8;
    uint64_t v100 = v102;
    if (v102)
    {
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__s2.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __s2.__r_.__value_.__l.__size_;
      }
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_s2 = (std::string *)__s2.__r_.__value_.__r.__words[0];
      }
      uint64_t v104 = v101;
      do
      {
        int v105 = *(char *)(v100 + 55);
        if (v105 >= 0) {
          size_t v106 = *(unsigned __int8 *)(v100 + 55);
        }
        else {
          size_t v106 = *(void *)(v100 + 40);
        }
        if (v105 >= 0) {
          BOOL v107 = (const void *)(v100 + 32);
        }
        else {
          BOOL v107 = *(const void **)(v100 + 32);
        }
        if (size >= v106) {
          size_t v108 = v106;
        }
        else {
          size_t v108 = size;
        }
        int v109 = memcmp(v107, p_s2, v108);
        BOOL v110 = v106 < size;
        if (v109) {
          BOOL v110 = v109 < 0;
        }
        BOOL v111 = !v110;
        if (v110) {
          uint64_t v112 = (uint64_t *)(v100 + 8);
        }
        else {
          uint64_t v112 = (uint64_t *)v100;
        }
        if (v111) {
          uint64_t v104 = v100;
        }
        uint64_t v100 = *v112;
      }
      while (*v112);
      if (v104 != v101)
      {
        int v113 = *(char *)(v104 + 55);
        if (v113 >= 0) {
          size_t v114 = *(unsigned __int8 *)(v104 + 55);
        }
        else {
          size_t v114 = *(void *)(v104 + 40);
        }
        if (v113 >= 0) {
          BOOL v115 = (const void *)(v104 + 32);
        }
        else {
          BOOL v115 = *(const void **)(v104 + 32);
        }
        if (v114 >= size) {
          size_t v116 = size;
        }
        else {
          size_t v116 = v114;
        }
        int v117 = memcmp(p_s2, v115, v116);
        BOOL v118 = size < v114;
        if (v117) {
          BOOL v118 = v117 < 0;
        }
        if (v118)
        {
          LODWORD(v100) = 0;
          if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_228;
          }
LABEL_260:
          if (!v100)
          {
LABEL_229:
            uint64_t v119 = a1[6];
            uint64_t v122 = *(void *)(v119 + 8);
            uint64_t v120 = v119 + 8;
            uint64_t v121 = v122;
            if (v122)
            {
              uint64_t v123 = v120;
              uint64_t v124 = v121;
              do
              {
                int v125 = *(_DWORD *)(v124 + 32);
                BOOL v126 = v125 < v12;
                if (v125 >= v12) {
                  int v127 = (uint64_t *)v124;
                }
                else {
                  int v127 = (uint64_t *)(v124 + 8);
                }
                if (!v126) {
                  uint64_t v123 = v124;
                }
                uint64_t v124 = *v127;
              }
              while (*v127);
              if (v123 != v120 && v12 >= *(_DWORD *)(v123 + 32))
              {
                uint64_t v128 = v120;
                uint64_t v129 = v121;
                do
                {
                  int v130 = *(_DWORD *)(v129 + 32);
                  BOOL v131 = v130 < v13;
                  if (v130 >= v13) {
                    BOOL v132 = (uint64_t *)v129;
                  }
                  else {
                    BOOL v132 = (uint64_t *)(v129 + 8);
                  }
                  if (!v131) {
                    uint64_t v128 = v129;
                  }
                  uint64_t v129 = *v132;
                }
                while (*v132);
                if (v128 != v120 && v13 >= *(_DWORD *)(v128 + 32))
                {
                  uint64_t v133 = v120;
                  do
                  {
                    int v134 = *(_DWORD *)(v121 + 32);
                    BOOL v135 = v134 < v14;
                    if (v134 >= v14) {
                      int v136 = (uint64_t *)v121;
                    }
                    else {
                      int v136 = (uint64_t *)(v121 + 8);
                    }
                    if (!v135) {
                      uint64_t v133 = v121;
                    }
                    uint64_t v121 = *v136;
                  }
                  while (*v136);
                  if (v133 != v120 && v14 >= *(_DWORD *)(v133 + 32)) {
                    operator new();
                  }
                }
              }
            }
            return 0;
          }
          return v140;
        }
        int v141 = *(_DWORD *)(v104 + 64);
        uint64_t v140 = sub_1A8A14((uint64_t)a1, &v141);
        LODWORD(v100) = 1;
        if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_260;
        }
LABEL_228:
        operator delete(__s2.__r_.__value_.__l.__data_);
        if (!v100) {
          goto LABEL_229;
        }
        return v140;
      }
      LODWORD(v100) = 0;
    }
    if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_260;
    }
    goto LABEL_228;
  }
  memset(&__s2, 0, sizeof(__s2));
  if (v13 == 3)
  {
    int v138 = "t*(t-t)";
  }
  else
  {
    uint64_t v92 = 0;
    if (v13 != 2) {
      return v92;
    }
    int v138 = "t*(t+t)";
  }
  std::string::assign(&__s2, v138);
  if (sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v140)) {
    uint64_t v92 = v140;
  }
  else {
    uint64_t v92 = 0;
  }
  if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s2.__r_.__value_.__l.__data_);
  }
  return v92;
}

void sub_23A1C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23A1F8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  uint64_t v7 = a3[1];
  double v8 = (*(double (**)(void))(*(void *)*a3 + 48))(*a3);
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 56))(v6);
  double v10 = (*(double (**)(uint64_t))(*(void *)v7 + 48))(v7);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 56))(v7);
  int v12 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
  int v13 = *a2;
  int v14 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 40))(v7);
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (!*a3)
    {
LABEL_7:
      *a3 = 0;
      goto LABEL_8;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_7;
    }
  }
LABEL_8:
  uint64_t v15 = a3[1];
  if (v15 && (*(unsigned int (**)(uint64_t))(*(void *)v15 + 32))(v15) != 17)
  {
    uint64_t v16 = a3[1];
    if (v16)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v16 + 32))(v16) == 18) {
        goto LABEL_15;
      }
      uint64_t v17 = a3[1];
      if (v17) {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
      }
    }
    a3[1] = 0;
  }
LABEL_15:
  uint64_t v148 = 0;
  if (!*(unsigned char *)(a1[10] + 190)) {
    goto LABEL_200;
  }
  if (v12 == 2 && v13 == 2 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)+t");
    uint64_t v32 = a1[8];
    uint64_t v35 = *(void *)(v32 + 8);
    uint64_t v33 = v32 + 8;
    uint64_t v34 = v35;
    if (!v35) {
      return 0;
    }
    uint64_t v36 = v33;
    do
    {
      unint64_t v37 = *(unsigned __int8 *)(v34 + 55);
      int v38 = (char)v37;
      if ((v37 & 0x80u) != 0) {
        unint64_t v37 = *(void *)(v34 + 40);
      }
      if (v38 >= 0) {
        uint64_t v39 = (const void *)(v34 + 32);
      }
      else {
        uint64_t v39 = *(const void **)(v34 + 32);
      }
      if (v37 >= 7) {
        size_t v40 = 7;
      }
      else {
        size_t v40 = v37;
      }
      BOOL v41 = v37 < 7;
      int v42 = memcmp(v39, &__s2, v40);
      BOOL v43 = v42 < 0;
      if (!v42) {
        BOOL v43 = v41;
      }
      BOOL v44 = !v43;
      if (v43) {
        int v45 = (uint64_t *)(v34 + 8);
      }
      else {
        int v45 = (uint64_t *)v34;
      }
      if (v44) {
        uint64_t v36 = v34;
      }
      uint64_t v34 = *v45;
    }
    while (*v45);
    goto LABEL_156;
  }
  if (v12 == 2 && v13 == 3 && v14 == 2)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)-t");
    uint64_t v46 = a1[8];
    uint64_t v48 = *(void *)(v46 + 8);
    uint64_t v33 = v46 + 8;
    uint64_t v47 = v48;
    if (!v48) {
      return 0;
    }
    uint64_t v36 = v33;
    do
    {
      unint64_t v49 = *(unsigned __int8 *)(v47 + 55);
      int v50 = (char)v49;
      if ((v49 & 0x80u) != 0) {
        unint64_t v49 = *(void *)(v47 + 40);
      }
      if (v50 >= 0) {
        uint64_t v51 = (const void *)(v47 + 32);
      }
      else {
        uint64_t v51 = *(const void **)(v47 + 32);
      }
      if (v49 >= 7) {
        size_t v52 = 7;
      }
      else {
        size_t v52 = v49;
      }
      BOOL v53 = v49 < 7;
      int v54 = memcmp(v51, &__s2, v52);
      BOOL v55 = v54 < 0;
      if (!v54) {
        BOOL v55 = v53;
      }
      BOOL v56 = !v55;
      if (v55) {
        int v57 = (uint64_t *)(v47 + 8);
      }
      else {
        int v57 = (uint64_t *)v47;
      }
      if (v56) {
        uint64_t v36 = v47;
      }
      uint64_t v47 = *v57;
    }
    while (*v57);
    goto LABEL_156;
  }
  if (v12 == 3 && v13 == 3 && v14 == 3)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t+t)-t");
    uint64_t v58 = a1[8];
    uint64_t v61 = *(void *)(v58 + 8);
    uint64_t v59 = v58 + 8;
    uint64_t v60 = v61;
    if (v61)
    {
      uint64_t v62 = v59;
      do
      {
        unint64_t v63 = *(unsigned __int8 *)(v60 + 55);
        int v64 = (char)v63;
        if ((v63 & 0x80u) != 0) {
          unint64_t v63 = *(void *)(v60 + 40);
        }
        if (v64 >= 0) {
          int v65 = (const void *)(v60 + 32);
        }
        else {
          int v65 = *(const void **)(v60 + 32);
        }
        if (v63 >= 7) {
          size_t v66 = 7;
        }
        else {
          size_t v66 = v63;
        }
        BOOL v67 = v63 < 7;
        int v68 = memcmp(v65, &__s2, v66);
        BOOL v69 = v68 < 0;
        if (!v68) {
          BOOL v69 = v67;
        }
        BOOL v70 = !v69;
        if (v69) {
          BOOL v71 = (uint64_t *)(v60 + 8);
        }
        else {
          BOOL v71 = (uint64_t *)v60;
        }
        if (v70) {
          uint64_t v62 = v60;
        }
        uint64_t v60 = *v71;
      }
      while (*v71);
      if (v62 != v59)
      {
        unint64_t v72 = *(unsigned __int8 *)(v62 + 55);
        int v73 = (char)v72;
        if ((v72 & 0x80u) != 0) {
          unint64_t v72 = *(void *)(v62 + 40);
        }
        if (v73 >= 0) {
          uint64_t v74 = (const void *)(v62 + 32);
        }
        else {
          uint64_t v74 = *(const void **)(v62 + 32);
        }
        if (v72 >= 7) {
          size_t v75 = 7;
        }
        else {
          size_t v75 = v72;
        }
        BOOL v76 = v72 > 7;
        int v77 = memcmp(&__s2, v74, v75);
        BOOL v78 = v77 < 0;
        if (!v77) {
          BOOL v78 = v76;
        }
        if (!v78)
        {
          int v149 = *(_DWORD *)(v62 + 64);
          return sub_24BC8C((uint64_t)a1, &v149);
        }
      }
    }
    return 0;
  }
  if (v12 == 4 && v13 == 4 && v14 == 4)
  {
    *((unsigned char *)&__s2.__r_.__value_.__s + 23) = 7;
    strcpy((char *)&__s2, "(t*t)*t");
    uint64_t v80 = a1[8];
    uint64_t v82 = *(void *)(v80 + 8);
    uint64_t v33 = v80 + 8;
    uint64_t v81 = v82;
    if (!v82) {
      return 0;
    }
    uint64_t v36 = v33;
    do
    {
      unint64_t v83 = *(unsigned __int8 *)(v81 + 55);
      int v84 = (char)v83;
      if ((v83 & 0x80u) != 0) {
        unint64_t v83 = *(void *)(v81 + 40);
      }
      if (v84 >= 0) {
        unint64_t v85 = (const void *)(v81 + 32);
      }
      else {
        unint64_t v85 = *(const void **)(v81 + 32);
      }
      if (v83 >= 7) {
        size_t v86 = 7;
      }
      else {
        size_t v86 = v83;
      }
      BOOL v87 = v83 < 7;
      int v88 = memcmp(v85, &__s2, v86);
      BOOL v89 = v88 < 0;
      if (!v88) {
        BOOL v89 = v87;
      }
      BOOL v90 = !v89;
      if (v89) {
        BOOL v91 = (uint64_t *)(v81 + 8);
      }
      else {
        BOOL v91 = (uint64_t *)v81;
      }
      if (v90) {
        uint64_t v36 = v81;
      }
      uint64_t v81 = *v91;
    }
    while (*v91);
LABEL_156:
    if (v36 != v33)
    {
      unint64_t v92 = *(unsigned __int8 *)(v36 + 55);
      int v93 = (char)v92;
      if ((v92 & 0x80u) != 0) {
        unint64_t v92 = *(void *)(v36 + 40);
      }
      if (v93 >= 0) {
        int v94 = (const void *)(v36 + 32);
      }
      else {
        int v94 = *(const void **)(v36 + 32);
      }
      if (v92 >= 7) {
        size_t v95 = 7;
      }
      else {
        size_t v95 = v92;
      }
      BOOL v96 = v92 > 7;
      int v97 = memcmp(&__s2, v94, v95);
      BOOL v98 = v97 < 0;
      if (!v97) {
        BOOL v98 = v96;
      }
      if (!v98)
      {
        int v149 = *(_DWORD *)(v36 + 64);
        return sub_251540((uint64_t)a1, &v149);
      }
    }
    return 0;
  }
  BOOL v27 = v12 == 4 && v13 == 5;
  if (v27 && v14 == 4) {
    goto LABEL_169;
  }
  BOOL v29 = v12 == 5 && v13 == 4;
  if (v29 && v14 == 5) {
    goto LABEL_169;
  }
  if (v14 != 5) {
    BOOL v27 = 0;
  }
  if (v27)
  {
    sub_5E5C(&__s2, "(t*t)*t");
    int v31 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v148);
LABEL_170:
    int v99 = v31;
    if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__s2.__r_.__value_.__l.__data_);
    }
    if (v99) {
      return v148;
    }
    else {
      return 0;
    }
  }
  BOOL v100 = v12 == 5 && v13 == 5;
  BOOL v101 = v100;
  if (v101 && v14 == 4)
  {
LABEL_169:
    sub_5E5C(&__s2, "(t*t)/t");
    int v31 = sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v148);
    goto LABEL_170;
  }
  if (v14 != 5) {
    BOOL v101 = 0;
  }
  if (v101)
  {
    sub_5E5C(&__s2, "(t*t)*t");
    int v31 = sub_24B54C((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v148);
    goto LABEL_170;
  }
  if (v8 != v10 || v12 != 4 || v14 != 4 || (v13 & 0xFFFFFFFE) != 2)
  {
LABEL_200:
    p_s2 = &__s2;
    sub_261CF4(v12, v13, v14, (uint64_t)&__s2);
    uint64_t v107 = a1[9];
    uint64_t v110 = *(void *)(v107 + 8);
    uint64_t v109 = v107 + 8;
    uint64_t v108 = v110;
    if (v110)
    {
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__s2.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __s2.__r_.__value_.__l.__size_;
      }
      if ((__s2.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_s2 = (std::string *)__s2.__r_.__value_.__r.__words[0];
      }
      uint64_t v112 = v109;
      do
      {
        int v113 = *(char *)(v108 + 55);
        if (v113 >= 0) {
          size_t v114 = *(unsigned __int8 *)(v108 + 55);
        }
        else {
          size_t v114 = *(void *)(v108 + 40);
        }
        if (v113 >= 0) {
          BOOL v115 = (const void *)(v108 + 32);
        }
        else {
          BOOL v115 = *(const void **)(v108 + 32);
        }
        if (size >= v114) {
          size_t v116 = v114;
        }
        else {
          size_t v116 = size;
        }
        int v117 = memcmp(v115, p_s2, v116);
        BOOL v118 = v114 < size;
        if (v117) {
          BOOL v118 = v117 < 0;
        }
        BOOL v119 = !v118;
        if (v118) {
          uint64_t v120 = (uint64_t *)(v108 + 8);
        }
        else {
          uint64_t v120 = (uint64_t *)v108;
        }
        if (v119) {
          uint64_t v112 = v108;
        }
        uint64_t v108 = *v120;
      }
      while (*v120);
      if (v112 != v109)
      {
        int v121 = *(char *)(v112 + 55);
        if (v121 >= 0) {
          size_t v122 = *(unsigned __int8 *)(v112 + 55);
        }
        else {
          size_t v122 = *(void *)(v112 + 40);
        }
        if (v121 >= 0) {
          uint64_t v123 = (const void *)(v112 + 32);
        }
        else {
          uint64_t v123 = *(const void **)(v112 + 32);
        }
        if (v122 >= size) {
          size_t v124 = size;
        }
        else {
          size_t v124 = v122;
        }
        int v125 = memcmp(p_s2, v123, v124);
        BOOL v126 = size < v122;
        if (v125) {
          BOOL v126 = v125 < 0;
        }
        if (v126)
        {
          LODWORD(v108) = 0;
          if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_239;
          }
LABEL_271:
          if (!v108)
          {
LABEL_240:
            uint64_t v127 = a1[6];
            uint64_t v130 = *(void *)(v127 + 8);
            uint64_t v128 = v127 + 8;
            uint64_t v129 = v130;
            if (v130)
            {
              uint64_t v131 = v128;
              uint64_t v132 = v129;
              do
              {
                int v133 = *(_DWORD *)(v132 + 32);
                BOOL v134 = v133 < v12;
                if (v133 >= v12) {
                  BOOL v135 = (uint64_t *)v132;
                }
                else {
                  BOOL v135 = (uint64_t *)(v132 + 8);
                }
                if (!v134) {
                  uint64_t v131 = v132;
                }
                uint64_t v132 = *v135;
              }
              while (*v135);
              if (v131 != v128 && v12 >= *(_DWORD *)(v131 + 32))
              {
                uint64_t v136 = v128;
                uint64_t v137 = v129;
                do
                {
                  int v138 = *(_DWORD *)(v137 + 32);
                  BOOL v139 = v138 < v13;
                  if (v138 >= v13) {
                    uint64_t v140 = (uint64_t *)v137;
                  }
                  else {
                    uint64_t v140 = (uint64_t *)(v137 + 8);
                  }
                  if (!v139) {
                    uint64_t v136 = v137;
                  }
                  uint64_t v137 = *v140;
                }
                while (*v140);
                if (v136 != v128 && v13 >= *(_DWORD *)(v136 + 32))
                {
                  uint64_t v141 = v128;
                  do
                  {
                    int v142 = *(_DWORD *)(v129 + 32);
                    BOOL v143 = v142 < v14;
                    if (v142 >= v14) {
                      uint64_t v144 = (uint64_t *)v129;
                    }
                    else {
                      uint64_t v144 = (uint64_t *)(v129 + 8);
                    }
                    if (!v143) {
                      uint64_t v141 = v129;
                    }
                    uint64_t v129 = *v144;
                  }
                  while (*v144);
                  if (v141 != v128 && v14 >= *(_DWORD *)(v141 + 32)) {
                    operator new();
                  }
                }
              }
            }
            return 0;
          }
          return v148;
        }
        int v149 = *(_DWORD *)(v112 + 64);
        uint64_t v148 = sub_262568((uint64_t)a1, &v149);
        LODWORD(v108) = 1;
        if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_271;
        }
LABEL_239:
        operator delete(__s2.__r_.__value_.__l.__data_);
        if (!v108) {
          goto LABEL_240;
        }
        return v148;
      }
      LODWORD(v108) = 0;
    }
    if ((SHIBYTE(__s2.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_271;
    }
    goto LABEL_239;
  }
  memset(&__s2, 0, sizeof(__s2));
  if (v13 == 3)
  {
    uint64_t v146 = "t*(t-t)";
  }
  else
  {
    uint64_t v79 = 0;
    if (v13 != 2) {
      return v79;
    }
    uint64_t v146 = "t*(t+t)";
  }
  std::string::assign(&__s2, v146);
  if (sub_250E00((uint64_t)a1, (uint64_t)&__s2, v9, v11, &v148)) {
    uint64_t v79 = v148;
  }
  else {
    uint64_t v79 = 0;
  }
  if (SHIBYTE(__s2.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__s2.__r_.__value_.__l.__data_);
  }
  return v79;
}

void sub_23ACB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23ACF0(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  uint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      size_t v23 = v10;
    }
    else {
      size_t v23 = v10 + 1;
    }
    if (v22) {
      uint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    uint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  size_t v28 = __p;
  sub_266C8C(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    size_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      unint64_t v37 = (const void *)(v31 + 32);
    }
    else {
      unint64_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      int v42 = (uint64_t *)(v31 + 8);
    }
    else {
      int v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      int v45 = (const void *)(v34 + 32);
    }
    else {
      int v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_18DC40((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          uint64_t v58 = (uint64_t *)v53;
        }
        else {
          uint64_t v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23B0A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23B0C0(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  uint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      size_t v23 = v10;
    }
    else {
      size_t v23 = v10 + 1;
    }
    if (v22) {
      uint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    uint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  size_t v28 = __p;
  sub_267ABC(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    size_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      unint64_t v37 = (const void *)(v31 + 32);
    }
    else {
      unint64_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      int v42 = (uint64_t *)(v31 + 8);
    }
    else {
      int v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      int v45 = (const void *)(v34 + 32);
    }
    else {
      int v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_18984C((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          uint64_t v58 = (uint64_t *)v53;
        }
        else {
          uint64_t v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23B47C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23B498(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  uint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      size_t v23 = v10;
    }
    else {
      size_t v23 = v10 + 1;
    }
    if (v22) {
      uint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    uint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  size_t v28 = __p;
  sub_2688F0(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    size_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      unint64_t v37 = (const void *)(v31 + 32);
    }
    else {
      unint64_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      int v42 = (uint64_t *)(v31 + 8);
    }
    else {
      int v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      int v45 = (const void *)(v34 + 32);
    }
    else {
      int v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_1855B8((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          uint64_t v58 = (uint64_t *)v53;
        }
        else {
          uint64_t v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23B85C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23B878(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  uint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      size_t v23 = v10;
    }
    else {
      size_t v23 = v10 + 1;
    }
    if (v22) {
      uint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    uint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  size_t v28 = __p;
  sub_269720(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    size_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      unint64_t v37 = (const void *)(v31 + 32);
    }
    else {
      unint64_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      int v42 = (uint64_t *)(v31 + 8);
    }
    else {
      int v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      int v45 = (const void *)(v34 + 32);
    }
    else {
      int v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_181328((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          uint64_t v58 = (uint64_t *)v53;
        }
        else {
          uint64_t v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23BC38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23BC54(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)*a3 + 16))();
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *a2;
  int v24 = *((_DWORD *)v13 + 10);
  int v25 = *((_DWORD *)v19 + 10);
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_26A554(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v31 = v30 + 8;
  uint64_t v32 = v33;
  if (!v33) {
    goto LABEL_77;
  }
  if ((v62 & 0x80u) == 0) {
    size_t v34 = v62;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v62 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v31;
  do
  {
    int v36 = *(char *)(v32 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v32 + 55);
    }
    else {
      size_t v37 = *(void *)(v32 + 40);
    }
    if (v36 >= 0) {
      size_t v38 = (const void *)(v32 + 32);
    }
    else {
      size_t v38 = *(const void **)(v32 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      int v43 = (uint64_t *)(v32 + 8);
    }
    else {
      int v43 = (uint64_t *)v32;
    }
    if (v42) {
      uint64_t v35 = v32;
    }
    uint64_t v32 = *v43;
  }
  while (*v43);
  if (v35 == v31)
  {
    uint64_t v50 = 0;
    char v51 = 0;
    if ((char)v62 < 0) {
      goto LABEL_78;
    }
  }
  else
  {
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      size_t v46 = (const void *)(v35 + 32);
    }
    else {
      size_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
LABEL_77:
      uint64_t v50 = 0;
      char v51 = 0;
      if (((char)v62 & 0x80000000) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    int v63 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_198D38((uint64_t)a1, &v63);
    char v51 = 1;
    if ((char)v62 < 0) {
LABEL_78:
    }
      operator delete(__p[0]);
  }
LABEL_79:
  if ((v51 & 1) == 0)
  {
    uint64_t v52 = a1[6];
    uint64_t v55 = *(void *)(v52 + 8);
    uint64_t v53 = v52 + 8;
    uint64_t v54 = v55;
    if (v55)
    {
      uint64_t v56 = v53;
      do
      {
        int v57 = *(_DWORD *)(v54 + 32);
        BOOL v58 = v57 < v23;
        if (v57 >= v23) {
          uint64_t v59 = (uint64_t *)v54;
        }
        else {
          uint64_t v59 = (uint64_t *)(v54 + 8);
        }
        if (!v58) {
          uint64_t v56 = v54;
        }
        uint64_t v54 = *v59;
      }
      while (*v59);
      if (v56 != v53 && v23 >= *(_DWORD *)(v56 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_23C0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23C0C4(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)*a3 + 16))();
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *a2;
  int v24 = *((_DWORD *)v13 + 10);
  int v25 = *((_DWORD *)v19 + 10);
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_26B384(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (!v33)
  {
    uint64_t v50 = 0;
    if (((char)v61 & 0x80000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v34 = v61;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v32;
  do
  {
    int v36 = *(char *)(v31 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v37 = *(void *)(v31 + 40);
    }
    if (v36 >= 0) {
      size_t v38 = (const void *)(v31 + 32);
    }
    else {
      size_t v38 = *(const void **)(v31 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      int v43 = (uint64_t *)(v31 + 8);
    }
    else {
      int v43 = (uint64_t *)v31;
    }
    if (v42) {
      uint64_t v35 = v31;
    }
    uint64_t v31 = *v43;
  }
  while (*v43);
  if (v35 == v32)
  {
    uint64_t v50 = 0;
    LOBYTE(v31) = 0;
    if ((char)v61 < 0) {
      goto LABEL_80;
    }
  }
  else
  {
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      size_t v46 = (const void *)(v35 + 32);
    }
    else {
      size_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_81;
      }
      goto LABEL_80;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_194AAC((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_80:
    }
      operator delete(__p[0]);
  }
LABEL_81:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v23;
        if (v56 >= v23) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v23 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_23C534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23C550(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      int v23 = v10;
    }
    else {
      int v23 = v10 + 1;
    }
    if (v22) {
      unint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    unint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  uint64_t v28 = __p;
  sub_26C1B8(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v31 = v29 + 8;
  uint64_t v30 = v32;
  if (!v32)
  {
    uint64_t v49 = 0;
    if (((char)v60 & 0x80000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if ((v60 & 0x80u) == 0) {
    size_t v33 = v60;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v60 & 0x80u) != 0) {
    uint64_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v31;
  do
  {
    int v35 = *(char *)(v30 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v30 + 55);
    }
    else {
      size_t v36 = *(void *)(v30 + 40);
    }
    if (v35 >= 0) {
      size_t v37 = (const void *)(v30 + 32);
    }
    else {
      size_t v37 = *(const void **)(v30 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      BOOL v42 = (uint64_t *)(v30 + 8);
    }
    else {
      BOOL v42 = (uint64_t *)v30;
    }
    if (v41) {
      uint64_t v34 = v30;
    }
    uint64_t v30 = *v42;
  }
  while (*v42);
  if (v34 == v31)
  {
    uint64_t v49 = 0;
    LOBYTE(v30) = 0;
    if ((char)v60 < 0) {
      goto LABEL_73;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      size_t v45 = (const void *)(v34 + 32);
    }
    else {
      size_t v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
      uint64_t v49 = 0;
      LOBYTE(v30) = 0;
      if (((char)v60 & 0x80000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_73;
    }
    int v61 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_17C480((uint64_t)a1, &v61);
    LOBYTE(v30) = 1;
    if ((char)v60 < 0) {
LABEL_73:
    }
      operator delete(__p[0]);
  }
LABEL_74:
  if ((v30 & 1) == 0)
  {
    uint64_t v50 = a1[6];
    uint64_t v53 = *(void *)(v50 + 8);
    uint64_t v51 = v50 + 8;
    uint64_t v52 = v53;
    if (v53)
    {
      uint64_t v54 = v51;
      do
      {
        int v55 = *(_DWORD *)(v52 + 32);
        BOOL v56 = v55 < v17;
        if (v55 >= v17) {
          BOOL v57 = (uint64_t *)v52;
        }
        else {
          BOOL v57 = (uint64_t *)(v52 + 8);
        }
        if (!v56) {
          uint64_t v54 = v52;
        }
        uint64_t v52 = *v57;
      }
      while (*v57);
      if (v54 != v51 && v17 >= *(_DWORD *)(v54 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23C928(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23C944(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)*a3 + 16))();
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *a2;
  int v24 = *((_DWORD *)v13 + 10);
  int v25 = *((_DWORD *)v19 + 10);
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_26CFF0(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (!v33)
  {
    uint64_t v50 = 0;
    if (((char)v61 & 0x80000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v34 = v61;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v32;
  do
  {
    int v36 = *(char *)(v31 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v37 = *(void *)(v31 + 40);
    }
    if (v36 >= 0) {
      size_t v38 = (const void *)(v31 + 32);
    }
    else {
      size_t v38 = *(const void **)(v31 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      int v43 = (uint64_t *)(v31 + 8);
    }
    else {
      int v43 = (uint64_t *)v31;
    }
    if (v42) {
      uint64_t v35 = v31;
    }
    uint64_t v31 = *v43;
  }
  while (*v43);
  if (v35 == v32)
  {
    uint64_t v50 = 0;
    LOBYTE(v31) = 0;
    if ((char)v61 < 0) {
      goto LABEL_80;
    }
  }
  else
  {
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      size_t v46 = (const void *)(v35 + 32);
    }
    else {
      size_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_81;
      }
      goto LABEL_80;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_1A8A14((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_80:
    }
      operator delete(__p[0]);
  }
LABEL_81:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v23;
        if (v56 >= v23) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v23 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_23CDB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23CDCC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      int v23 = v10;
    }
    else {
      int v23 = v10 + 1;
    }
    if (v22) {
      unint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    unint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  uint64_t v28 = __p;
  sub_26DE24(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v31 = v29 + 8;
  uint64_t v30 = v32;
  if (!v32)
  {
    uint64_t v49 = 0;
    if (((char)v60 & 0x80000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if ((v60 & 0x80u) == 0) {
    size_t v33 = v60;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v60 & 0x80u) != 0) {
    uint64_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v31;
  do
  {
    int v35 = *(char *)(v30 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v30 + 55);
    }
    else {
      size_t v36 = *(void *)(v30 + 40);
    }
    if (v35 >= 0) {
      size_t v37 = (const void *)(v30 + 32);
    }
    else {
      size_t v37 = *(const void **)(v30 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      BOOL v42 = (uint64_t *)(v30 + 8);
    }
    else {
      BOOL v42 = (uint64_t *)v30;
    }
    if (v41) {
      uint64_t v34 = v30;
    }
    uint64_t v30 = *v42;
  }
  while (*v42);
  if (v34 == v31)
  {
    uint64_t v49 = 0;
    LOBYTE(v30) = 0;
    if ((char)v60 < 0) {
      goto LABEL_73;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      size_t v45 = (const void *)(v34 + 32);
    }
    else {
      size_t v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
      uint64_t v49 = 0;
      LOBYTE(v30) = 0;
      if (((char)v60 & 0x80000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_73;
    }
    int v61 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_262568((uint64_t)a1, &v61);
    LOBYTE(v30) = 1;
    if ((char)v60 < 0) {
LABEL_73:
    }
      operator delete(__p[0]);
  }
LABEL_74:
  if ((v30 & 1) == 0)
  {
    uint64_t v50 = a1[6];
    uint64_t v53 = *(void *)(v50 + 8);
    uint64_t v51 = v50 + 8;
    uint64_t v52 = v53;
    if (v53)
    {
      uint64_t v54 = v51;
      do
      {
        int v55 = *(_DWORD *)(v52 + 32);
        BOOL v56 = v55 < v17;
        if (v55 >= v17) {
          BOOL v57 = (uint64_t *)v52;
        }
        else {
          BOOL v57 = (uint64_t *)(v52 + 8);
        }
        if (!v56) {
          uint64_t v54 = v52;
        }
        uint64_t v52 = *v57;
      }
      while (*v57);
      if (v54 != v51 && v17 >= *(_DWORD *)(v54 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23D194(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23D1B0(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      int v23 = v10;
    }
    else {
      int v23 = v10 + 1;
    }
    if (v22) {
      unint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    unint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  uint64_t v28 = __p;
  sub_26EC58(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      size_t v37 = (const void *)(v31 + 32);
    }
    else {
      size_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      BOOL v42 = (uint64_t *)(v31 + 8);
    }
    else {
      BOOL v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      size_t v45 = (const void *)(v34 + 32);
    }
    else {
      size_t v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_18DC40((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23D564(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23D580(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      int v23 = v10;
    }
    else {
      int v23 = v10 + 1;
    }
    if (v22) {
      unint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    unint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  uint64_t v28 = __p;
  sub_26FA88(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      size_t v37 = (const void *)(v31 + 32);
    }
    else {
      size_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      BOOL v42 = (uint64_t *)(v31 + 8);
    }
    else {
      BOOL v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      size_t v45 = (const void *)(v34 + 32);
    }
    else {
      size_t v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_18984C((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23D93C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23D958(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      int v23 = v10;
    }
    else {
      int v23 = v10 + 1;
    }
    if (v22) {
      unint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    unint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  uint64_t v28 = __p;
  sub_2708BC(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      size_t v37 = (const void *)(v31 + 32);
    }
    else {
      size_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      BOOL v42 = (uint64_t *)(v31 + 8);
    }
    else {
      BOOL v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      size_t v45 = (const void *)(v34 + 32);
    }
    else {
      size_t v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_1855B8((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23DD1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23DD38(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      int v23 = v10;
    }
    else {
      int v23 = v10 + 1;
    }
    if (v22) {
      unint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    unint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  uint64_t v28 = __p;
  sub_2716EC(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v30 = v29 + 8;
  uint64_t v31 = v32;
  if (!v32) {
    goto LABEL_70;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v33 = v61;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v30;
  do
  {
    int v35 = *(char *)(v31 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v36 = *(void *)(v31 + 40);
    }
    if (v35 >= 0) {
      size_t v37 = (const void *)(v31 + 32);
    }
    else {
      size_t v37 = *(const void **)(v31 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      BOOL v42 = (uint64_t *)(v31 + 8);
    }
    else {
      BOOL v42 = (uint64_t *)v31;
    }
    if (v41) {
      uint64_t v34 = v31;
    }
    uint64_t v31 = *v42;
  }
  while (*v42);
  if (v34 == v30)
  {
    uint64_t v49 = 0;
    char v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      size_t v45 = (const void *)(v34 + 32);
    }
    else {
      size_t v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
LABEL_70:
      uint64_t v49 = 0;
      char v50 = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v62 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_181328((uint64_t)a1, &v62);
    char v50 = 1;
    if ((char)v61 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v50 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v17;
        if (v56 >= v17) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v17 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23E0F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23E114(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)*a3 + 16))();
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *a2;
  int v24 = *((_DWORD *)v13 + 10);
  int v25 = *((_DWORD *)v19 + 10);
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_272520(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v31 = v30 + 8;
  uint64_t v32 = v33;
  if (!v33) {
    goto LABEL_77;
  }
  if ((v62 & 0x80u) == 0) {
    size_t v34 = v62;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v62 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v31;
  do
  {
    int v36 = *(char *)(v32 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v32 + 55);
    }
    else {
      size_t v37 = *(void *)(v32 + 40);
    }
    if (v36 >= 0) {
      size_t v38 = (const void *)(v32 + 32);
    }
    else {
      size_t v38 = *(const void **)(v32 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      int v43 = (uint64_t *)(v32 + 8);
    }
    else {
      int v43 = (uint64_t *)v32;
    }
    if (v42) {
      uint64_t v35 = v32;
    }
    uint64_t v32 = *v43;
  }
  while (*v43);
  if (v35 == v31)
  {
    uint64_t v50 = 0;
    char v51 = 0;
    if ((char)v62 < 0) {
      goto LABEL_78;
    }
  }
  else
  {
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      size_t v46 = (const void *)(v35 + 32);
    }
    else {
      size_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
LABEL_77:
      uint64_t v50 = 0;
      char v51 = 0;
      if (((char)v62 & 0x80000000) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    int v63 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_198D38((uint64_t)a1, &v63);
    char v51 = 1;
    if ((char)v62 < 0) {
LABEL_78:
    }
      operator delete(__p[0]);
  }
LABEL_79:
  if ((v51 & 1) == 0)
  {
    uint64_t v52 = a1[6];
    uint64_t v55 = *(void *)(v52 + 8);
    uint64_t v53 = v52 + 8;
    uint64_t v54 = v55;
    if (v55)
    {
      uint64_t v56 = v53;
      do
      {
        int v57 = *(_DWORD *)(v54 + 32);
        BOOL v58 = v57 < v23;
        if (v57 >= v23) {
          uint64_t v59 = (uint64_t *)v54;
        }
        else {
          uint64_t v59 = (uint64_t *)(v54 + 8);
        }
        if (!v58) {
          uint64_t v56 = v54;
        }
        uint64_t v54 = *v59;
      }
      while (*v59);
      if (v56 != v53 && v23 >= *(_DWORD *)(v56 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_23E568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23E584(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)*a3 + 16))();
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *a2;
  int v24 = *((_DWORD *)v13 + 10);
  int v25 = *((_DWORD *)v19 + 10);
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_273350(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (!v33)
  {
    uint64_t v50 = 0;
    if (((char)v61 & 0x80000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v34 = v61;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v32;
  do
  {
    int v36 = *(char *)(v31 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v37 = *(void *)(v31 + 40);
    }
    if (v36 >= 0) {
      size_t v38 = (const void *)(v31 + 32);
    }
    else {
      size_t v38 = *(const void **)(v31 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      int v43 = (uint64_t *)(v31 + 8);
    }
    else {
      int v43 = (uint64_t *)v31;
    }
    if (v42) {
      uint64_t v35 = v31;
    }
    uint64_t v31 = *v43;
  }
  while (*v43);
  if (v35 == v32)
  {
    uint64_t v50 = 0;
    LOBYTE(v31) = 0;
    if ((char)v61 < 0) {
      goto LABEL_80;
    }
  }
  else
  {
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      size_t v46 = (const void *)(v35 + 32);
    }
    else {
      size_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_81;
      }
      goto LABEL_80;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_194AAC((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_80:
    }
      operator delete(__p[0]);
  }
LABEL_81:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v23;
        if (v56 >= v23) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v23 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_23E9F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23EA10(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  (*(void (**)(void))(*(void *)*a3 + 40))();
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *a2;
  int v18 = *((_DWORD *)v12 + 10);
  unint64_t v19 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v20 = v9;
  do
  {
    unint64_t v21 = v10[4];
    BOOL v22 = v21 >= v19;
    if (v21 >= v19) {
      int v23 = v10;
    }
    else {
      int v23 = v10 + 1;
    }
    if (v22) {
      unint64_t v20 = v10;
    }
    double v10 = (void *)*v23;
  }
  while (*v23);
  if (v20 == v9 || v19 < v20[4]) {
LABEL_24:
  }
    unint64_t v20 = v9;
  int v24 = *((_DWORD *)v20 + 10);
  uint64_t v25 = a3[1];
  if (v25 && (*(unsigned int (**)(uint64_t))(*(void *)v25 + 32))(v25) != 17)
  {
    uint64_t v26 = a3[1];
    if (v26)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v26 + 32))(v26) == 18) {
        goto LABEL_32;
      }
      uint64_t v27 = a3[1];
      if (v27) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    a3[1] = 0;
  }
LABEL_32:
  uint64_t v28 = __p;
  sub_274184(v17, v18, v24, (uint64_t)__p);
  uint64_t v29 = a1[9];
  uint64_t v32 = *(void *)(v29 + 8);
  uint64_t v31 = v29 + 8;
  uint64_t v30 = v32;
  if (!v32)
  {
    uint64_t v49 = 0;
    if (((char)v60 & 0x80000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if ((v60 & 0x80u) == 0) {
    size_t v33 = v60;
  }
  else {
    size_t v33 = (size_t)__p[1];
  }
  if ((v60 & 0x80u) != 0) {
    uint64_t v28 = (void **)__p[0];
  }
  uint64_t v34 = v31;
  do
  {
    int v35 = *(char *)(v30 + 55);
    if (v35 >= 0) {
      size_t v36 = *(unsigned __int8 *)(v30 + 55);
    }
    else {
      size_t v36 = *(void *)(v30 + 40);
    }
    if (v35 >= 0) {
      size_t v37 = (const void *)(v30 + 32);
    }
    else {
      size_t v37 = *(const void **)(v30 + 32);
    }
    if (v33 >= v36) {
      size_t v38 = v36;
    }
    else {
      size_t v38 = v33;
    }
    int v39 = memcmp(v37, v28, v38);
    BOOL v40 = v36 < v33;
    if (v39) {
      BOOL v40 = v39 < 0;
    }
    BOOL v41 = !v40;
    if (v40) {
      BOOL v42 = (uint64_t *)(v30 + 8);
    }
    else {
      BOOL v42 = (uint64_t *)v30;
    }
    if (v41) {
      uint64_t v34 = v30;
    }
    uint64_t v30 = *v42;
  }
  while (*v42);
  if (v34 == v31)
  {
    uint64_t v49 = 0;
    LOBYTE(v30) = 0;
    if ((char)v60 < 0) {
      goto LABEL_73;
    }
  }
  else
  {
    int v43 = *(char *)(v34 + 55);
    if (v43 >= 0) {
      size_t v44 = *(unsigned __int8 *)(v34 + 55);
    }
    else {
      size_t v44 = *(void *)(v34 + 40);
    }
    if (v43 >= 0) {
      size_t v45 = (const void *)(v34 + 32);
    }
    else {
      size_t v45 = *(const void **)(v34 + 32);
    }
    if (v44 >= v33) {
      size_t v46 = v33;
    }
    else {
      size_t v46 = v44;
    }
    int v47 = memcmp(v28, v45, v46);
    BOOL v48 = v33 < v44;
    if (v47) {
      BOOL v48 = v47 < 0;
    }
    if (v48)
    {
      uint64_t v49 = 0;
      LOBYTE(v30) = 0;
      if (((char)v60 & 0x80000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_73;
    }
    int v61 = *(_DWORD *)(v34 + 64);
    uint64_t v49 = sub_17C480((uint64_t)a1, &v61);
    LOBYTE(v30) = 1;
    if ((char)v60 < 0) {
LABEL_73:
    }
      operator delete(__p[0]);
  }
LABEL_74:
  if ((v30 & 1) == 0)
  {
    uint64_t v50 = a1[6];
    uint64_t v53 = *(void *)(v50 + 8);
    uint64_t v51 = v50 + 8;
    uint64_t v52 = v53;
    if (v53)
    {
      uint64_t v54 = v51;
      do
      {
        int v55 = *(_DWORD *)(v52 + 32);
        BOOL v56 = v55 < v17;
        if (v55 >= v17) {
          BOOL v57 = (uint64_t *)v52;
        }
        else {
          BOOL v57 = (uint64_t *)(v52 + 8);
        }
        if (!v56) {
          uint64_t v54 = v52;
        }
        uint64_t v52 = *v57;
      }
      while (*v57);
      if (v54 != v51 && v17 >= *(_DWORD *)(v54 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v49;
}

void sub_23EDE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23EE04(void *a1, int *a2, void *a3)
{
  uint64_t v6 = a3[1];
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)*a3 + 16))();
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *a2;
  int v24 = *((_DWORD *)v13 + 10);
  int v25 = *((_DWORD *)v19 + 10);
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_274FBC(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (!v33)
  {
    uint64_t v50 = 0;
    if (((char)v61 & 0x80000000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if ((v61 & 0x80u) == 0) {
    size_t v34 = v61;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v61 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v32;
  do
  {
    int v36 = *(char *)(v31 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v37 = *(void *)(v31 + 40);
    }
    if (v36 >= 0) {
      size_t v38 = (const void *)(v31 + 32);
    }
    else {
      size_t v38 = *(const void **)(v31 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      int v43 = (uint64_t *)(v31 + 8);
    }
    else {
      int v43 = (uint64_t *)v31;
    }
    if (v42) {
      uint64_t v35 = v31;
    }
    uint64_t v31 = *v43;
  }
  while (*v43);
  if (v35 == v32)
  {
    uint64_t v50 = 0;
    LOBYTE(v31) = 0;
    if ((char)v61 < 0) {
      goto LABEL_80;
    }
  }
  else
  {
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      size_t v46 = (const void *)(v35 + 32);
    }
    else {
      size_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_81;
      }
      goto LABEL_80;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_1A8A14((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_80:
    }
      operator delete(__p[0]);
  }
LABEL_81:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v23;
        if (v56 >= v23) {
          BOOL v58 = (uint64_t *)v53;
        }
        else {
          BOOL v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v23 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_23F270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23F28C(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_275DF0(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_18DC40((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_23F644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23F660(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *((_DWORD *)v13 + 10);
  int v24 = *((_DWORD *)v19 + 10);
  int v25 = *a2;
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (!v26 || (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) == 17) {
    goto LABEL_39;
  }
  uint64_t v27 = a3[1];
  if (!v27) {
    goto LABEL_38;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) != 18)
  {
    uint64_t v28 = a3[1];
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
    }
LABEL_38:
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_276C20(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v31 = v30 + 8;
  uint64_t v32 = v33;
  if (!v33) {
    goto LABEL_77;
  }
  if ((v62 & 0x80u) == 0) {
    size_t v34 = v62;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v62 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v31;
  do
  {
    int v36 = *(char *)(v32 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v32 + 55);
    }
    else {
      size_t v37 = *(void *)(v32 + 40);
    }
    if (v36 >= 0) {
      BOOL v38 = (const void *)(v32 + 32);
    }
    else {
      BOOL v38 = *(const void **)(v32 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      size_t v43 = (uint64_t *)(v32 + 8);
    }
    else {
      size_t v43 = (uint64_t *)v32;
    }
    if (v42) {
      uint64_t v35 = v32;
    }
    uint64_t v32 = *v43;
  }
  while (*v43);
  if (v35 == v31) {
    goto LABEL_77;
  }
  int v44 = *(char *)(v35 + 55);
  if (v44 >= 0) {
    size_t v45 = *(unsigned __int8 *)(v35 + 55);
  }
  else {
    size_t v45 = *(void *)(v35 + 40);
  }
  if (v44 >= 0) {
    uint64_t v46 = (const void *)(v35 + 32);
  }
  else {
    uint64_t v46 = *(const void **)(v35 + 32);
  }
  if (v45 >= v34) {
    size_t v47 = v34;
  }
  else {
    size_t v47 = v45;
  }
  int v48 = memcmp(v29, v46, v47);
  BOOL v49 = v34 < v45;
  if (v48) {
    BOOL v49 = v48 < 0;
  }
  if (v49)
  {
LABEL_77:
    uint64_t v50 = 0;
    char v51 = 0;
    if (((char)v62 & 0x80000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  int v63 = *(_DWORD *)(v35 + 64);
  uint64_t v50 = sub_18984C((uint64_t)a1, &v63);
  char v51 = 1;
  if ((char)v62 < 0) {
LABEL_78:
  }
    operator delete(__p[0]);
LABEL_79:
  if ((v51 & 1) == 0)
  {
    uint64_t v52 = a1[6];
    uint64_t v55 = *(void *)(v52 + 8);
    uint64_t v53 = v52 + 8;
    uint64_t v54 = v55;
    if (v55)
    {
      uint64_t v56 = v53;
      do
      {
        int v57 = *(_DWORD *)(v54 + 32);
        BOOL v58 = v57 < v25;
        if (v57 >= v25) {
          int v59 = (uint64_t *)v54;
        }
        else {
          int v59 = (uint64_t *)(v54 + 8);
        }
        if (!v58) {
          uint64_t v56 = v54;
        }
        uint64_t v54 = *v59;
      }
      while (*v59);
      if (v56 != v53 && v25 >= *(_DWORD *)(v56 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_23FA9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23FAB8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_277A54(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_1855B8((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_23FE78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_23FE94(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_278884(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_181328((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_240258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_240274(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_2796B8(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_198D38((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_240634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_240650(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_27A4E8(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v28 = v26 + 8;
  uint64_t v27 = v29;
  if (!v29)
  {
    uint64_t v46 = 0;
    if (((char)v57 & 0x80000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if ((v57 & 0x80u) == 0) {
    size_t v30 = v57;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v57 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v28;
  do
  {
    int v32 = *(char *)(v27 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v27 + 55);
    }
    else {
      size_t v33 = *(void *)(v27 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v27 + 32);
    }
    else {
      size_t v34 = *(const void **)(v27 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v27 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v27;
    }
    if (v38) {
      uint64_t v31 = v27;
    }
    uint64_t v27 = *v39;
  }
  while (*v39);
  if (v31 == v28)
  {
    uint64_t v46 = 0;
    LOBYTE(v27) = 0;
    if ((char)v57 < 0) {
      goto LABEL_73;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
      uint64_t v46 = 0;
      LOBYTE(v27) = 0;
      if (((char)v57 & 0x80000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_73;
    }
    int v58 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_194AAC((uint64_t)a1, &v58);
    LOBYTE(v27) = 1;
    if ((char)v57 < 0) {
LABEL_73:
    }
      operator delete(__p[0]);
  }
LABEL_74:
  if ((v27 & 1) == 0)
  {
    uint64_t v47 = a1[6];
    uint64_t v50 = *(void *)(v47 + 8);
    uint64_t v48 = v47 + 8;
    uint64_t v49 = v50;
    if (v50)
    {
      uint64_t v51 = v48;
      do
      {
        int v52 = *(_DWORD *)(v49 + 32);
        BOOL v53 = v52 < v24;
        if (v52 >= v24) {
          BOOL v54 = (uint64_t *)v49;
        }
        else {
          BOOL v54 = (uint64_t *)(v49 + 8);
        }
        if (!v53) {
          uint64_t v51 = v49;
        }
        uint64_t v49 = *v54;
      }
      while (*v54);
      if (v51 != v48 && v24 >= *(_DWORD *)(v51 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_240A24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_240A40(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *((_DWORD *)v13 + 10);
  int v24 = *((_DWORD *)v19 + 10);
  int v25 = *a2;
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_27B31C(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (v33)
  {
    if ((v61 & 0x80u) == 0) {
      size_t v34 = v61;
    }
    else {
      size_t v34 = (size_t)__p[1];
    }
    if ((v61 & 0x80u) != 0) {
      uint64_t v29 = (void **)__p[0];
    }
    uint64_t v35 = v32;
    do
    {
      int v36 = *(char *)(v31 + 55);
      if (v36 >= 0) {
        size_t v37 = *(unsigned __int8 *)(v31 + 55);
      }
      else {
        size_t v37 = *(void *)(v31 + 40);
      }
      if (v36 >= 0) {
        BOOL v38 = (const void *)(v31 + 32);
      }
      else {
        BOOL v38 = *(const void **)(v31 + 32);
      }
      if (v34 >= v37) {
        size_t v39 = v37;
      }
      else {
        size_t v39 = v34;
      }
      int v40 = memcmp(v38, v29, v39);
      BOOL v41 = v37 < v34;
      if (v40) {
        BOOL v41 = v40 < 0;
      }
      BOOL v42 = !v41;
      if (v41) {
        size_t v43 = (uint64_t *)(v31 + 8);
      }
      else {
        size_t v43 = (uint64_t *)v31;
      }
      if (v42) {
        uint64_t v35 = v31;
      }
      uint64_t v31 = *v43;
    }
    while (*v43);
    if (v35 == v32) {
      goto LABEL_77;
    }
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      uint64_t v46 = (const void *)(v35 + 32);
    }
    else {
      uint64_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
LABEL_77:
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_17C480((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_78:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_78;
    }
  }
LABEL_79:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v25;
        if (v56 >= v25) {
          int v58 = (uint64_t *)v53;
        }
        else {
          int v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v25 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_240E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_240EAC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *((_DWORD *)v13 + 10);
  int v24 = *((_DWORD *)v19 + 10);
  int v25 = *a2;
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_27C154(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (v33)
  {
    if ((v61 & 0x80u) == 0) {
      size_t v34 = v61;
    }
    else {
      size_t v34 = (size_t)__p[1];
    }
    if ((v61 & 0x80u) != 0) {
      uint64_t v29 = (void **)__p[0];
    }
    uint64_t v35 = v32;
    do
    {
      int v36 = *(char *)(v31 + 55);
      if (v36 >= 0) {
        size_t v37 = *(unsigned __int8 *)(v31 + 55);
      }
      else {
        size_t v37 = *(void *)(v31 + 40);
      }
      if (v36 >= 0) {
        BOOL v38 = (const void *)(v31 + 32);
      }
      else {
        BOOL v38 = *(const void **)(v31 + 32);
      }
      if (v34 >= v37) {
        size_t v39 = v37;
      }
      else {
        size_t v39 = v34;
      }
      int v40 = memcmp(v38, v29, v39);
      BOOL v41 = v37 < v34;
      if (v40) {
        BOOL v41 = v40 < 0;
      }
      BOOL v42 = !v41;
      if (v41) {
        size_t v43 = (uint64_t *)(v31 + 8);
      }
      else {
        size_t v43 = (uint64_t *)v31;
      }
      if (v42) {
        uint64_t v35 = v31;
      }
      uint64_t v31 = *v43;
    }
    while (*v43);
    if (v35 == v32) {
      goto LABEL_77;
    }
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      uint64_t v46 = (const void *)(v35 + 32);
    }
    else {
      uint64_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
LABEL_77:
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_1A8A14((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_78:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_78;
    }
  }
LABEL_79:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v25;
        if (v56 >= v25) {
          int v58 = (uint64_t *)v53;
        }
        else {
          int v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v25 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_2412F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_241310(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_27CF88(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v28 = v26 + 8;
  uint64_t v27 = v29;
  if (!v29)
  {
    uint64_t v46 = 0;
    if (((char)v57 & 0x80000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if ((v57 & 0x80u) == 0) {
    size_t v30 = v57;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v57 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v28;
  do
  {
    int v32 = *(char *)(v27 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v27 + 55);
    }
    else {
      size_t v33 = *(void *)(v27 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v27 + 32);
    }
    else {
      size_t v34 = *(const void **)(v27 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v27 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v27;
    }
    if (v38) {
      uint64_t v31 = v27;
    }
    uint64_t v27 = *v39;
  }
  while (*v39);
  if (v31 == v28)
  {
    uint64_t v46 = 0;
    LOBYTE(v27) = 0;
    if ((char)v57 < 0) {
      goto LABEL_73;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
      uint64_t v46 = 0;
      LOBYTE(v27) = 0;
      if (((char)v57 & 0x80000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_73;
    }
    int v58 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_262568((uint64_t)a1, &v58);
    LOBYTE(v27) = 1;
    if ((char)v57 < 0) {
LABEL_73:
    }
      operator delete(__p[0]);
  }
LABEL_74:
  if ((v27 & 1) == 0)
  {
    uint64_t v47 = a1[6];
    uint64_t v50 = *(void *)(v47 + 8);
    uint64_t v48 = v47 + 8;
    uint64_t v49 = v50;
    if (v50)
    {
      uint64_t v51 = v48;
      do
      {
        int v52 = *(_DWORD *)(v49 + 32);
        BOOL v53 = v52 < v24;
        if (v52 >= v24) {
          uint64_t v54 = (uint64_t *)v49;
        }
        else {
          uint64_t v54 = (uint64_t *)(v49 + 8);
        }
        if (!v53) {
          uint64_t v51 = v49;
        }
        uint64_t v49 = *v54;
      }
      while (*v54);
      if (v51 != v48 && v24 >= *(_DWORD *)(v51 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_2416D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2416F4(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_27DDBC(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_18DC40((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_241AAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_241AC8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *((_DWORD *)v13 + 10);
  int v24 = *((_DWORD *)v19 + 10);
  int v25 = *a2;
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (!v26 || (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) == 17) {
    goto LABEL_39;
  }
  uint64_t v27 = a3[1];
  if (!v27) {
    goto LABEL_38;
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) != 18)
  {
    uint64_t v28 = a3[1];
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
    }
LABEL_38:
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_27EBEC(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v31 = v30 + 8;
  uint64_t v32 = v33;
  if (!v33) {
    goto LABEL_77;
  }
  if ((v62 & 0x80u) == 0) {
    size_t v34 = v62;
  }
  else {
    size_t v34 = (size_t)__p[1];
  }
  if ((v62 & 0x80u) != 0) {
    uint64_t v29 = (void **)__p[0];
  }
  uint64_t v35 = v31;
  do
  {
    int v36 = *(char *)(v32 + 55);
    if (v36 >= 0) {
      size_t v37 = *(unsigned __int8 *)(v32 + 55);
    }
    else {
      size_t v37 = *(void *)(v32 + 40);
    }
    if (v36 >= 0) {
      BOOL v38 = (const void *)(v32 + 32);
    }
    else {
      BOOL v38 = *(const void **)(v32 + 32);
    }
    if (v34 >= v37) {
      size_t v39 = v37;
    }
    else {
      size_t v39 = v34;
    }
    int v40 = memcmp(v38, v29, v39);
    BOOL v41 = v37 < v34;
    if (v40) {
      BOOL v41 = v40 < 0;
    }
    BOOL v42 = !v41;
    if (v41) {
      size_t v43 = (uint64_t *)(v32 + 8);
    }
    else {
      size_t v43 = (uint64_t *)v32;
    }
    if (v42) {
      uint64_t v35 = v32;
    }
    uint64_t v32 = *v43;
  }
  while (*v43);
  if (v35 == v31) {
    goto LABEL_77;
  }
  int v44 = *(char *)(v35 + 55);
  if (v44 >= 0) {
    size_t v45 = *(unsigned __int8 *)(v35 + 55);
  }
  else {
    size_t v45 = *(void *)(v35 + 40);
  }
  if (v44 >= 0) {
    uint64_t v46 = (const void *)(v35 + 32);
  }
  else {
    uint64_t v46 = *(const void **)(v35 + 32);
  }
  if (v45 >= v34) {
    size_t v47 = v34;
  }
  else {
    size_t v47 = v45;
  }
  int v48 = memcmp(v29, v46, v47);
  BOOL v49 = v34 < v45;
  if (v48) {
    BOOL v49 = v48 < 0;
  }
  if (v49)
  {
LABEL_77:
    uint64_t v50 = 0;
    char v51 = 0;
    if (((char)v62 & 0x80000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  int v63 = *(_DWORD *)(v35 + 64);
  uint64_t v50 = sub_18984C((uint64_t)a1, &v63);
  char v51 = 1;
  if ((char)v62 < 0) {
LABEL_78:
  }
    operator delete(__p[0]);
LABEL_79:
  if ((v51 & 1) == 0)
  {
    uint64_t v52 = a1[6];
    uint64_t v55 = *(void *)(v52 + 8);
    uint64_t v53 = v52 + 8;
    uint64_t v54 = v55;
    if (v55)
    {
      uint64_t v56 = v53;
      do
      {
        int v57 = *(_DWORD *)(v54 + 32);
        BOOL v58 = v57 < v25;
        if (v57 >= v25) {
          int v59 = (uint64_t *)v54;
        }
        else {
          int v59 = (uint64_t *)(v54 + 8);
        }
        if (!v58) {
          uint64_t v56 = v54;
        }
        uint64_t v54 = *v59;
      }
      while (*v59);
      if (v56 != v53 && v25 >= *(_DWORD *)(v56 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_241F04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_241F20(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_27FA20(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_1855B8((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_2422E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2422FC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_280850(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_181328((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_2426C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_2426DC(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_281684(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v27 = v26 + 8;
  uint64_t v28 = v29;
  if (!v29) {
    goto LABEL_70;
  }
  if ((v58 & 0x80u) == 0) {
    size_t v30 = v58;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v58 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v27;
  do
  {
    int v32 = *(char *)(v28 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v28 + 55);
    }
    else {
      size_t v33 = *(void *)(v28 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v28 + 32);
    }
    else {
      size_t v34 = *(const void **)(v28 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v28 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v28;
    }
    if (v38) {
      uint64_t v31 = v28;
    }
    uint64_t v28 = *v39;
  }
  while (*v39);
  if (v31 == v27)
  {
    uint64_t v46 = 0;
    char v47 = 0;
    if ((char)v58 < 0) {
      goto LABEL_71;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
LABEL_70:
      uint64_t v46 = 0;
      char v47 = 0;
      if (((char)v58 & 0x80000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_71;
    }
    int v59 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_198D38((uint64_t)a1, &v59);
    char v47 = 1;
    if ((char)v58 < 0) {
LABEL_71:
    }
      operator delete(__p[0]);
  }
LABEL_72:
  if ((v47 & 1) == 0)
  {
    uint64_t v48 = a1[6];
    uint64_t v51 = *(void *)(v48 + 8);
    uint64_t v49 = v48 + 8;
    uint64_t v50 = v51;
    if (v51)
    {
      uint64_t v52 = v49;
      do
      {
        int v53 = *(_DWORD *)(v50 + 32);
        BOOL v54 = v53 < v24;
        if (v53 >= v24) {
          uint64_t v55 = (uint64_t *)v50;
        }
        else {
          uint64_t v55 = (uint64_t *)(v50 + 8);
        }
        if (!v54) {
          uint64_t v52 = v50;
        }
        uint64_t v50 = *v55;
      }
      while (*v55);
      if (v52 != v49 && v24 >= *(_DWORD *)(v52 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_242A9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_242AB8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  (*(void (**)(void))(*(void *)a3[1] + 40))(a3[1]);
  unint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = a1[7];
  uint64_t v11 = *(void **)(v8 + 8);
  uint64_t v9 = (void *)(v8 + 8);
  double v10 = v11;
  if (!v11) {
    goto LABEL_12;
  }
  int v12 = v9;
  int v13 = v10;
  do
  {
    unint64_t v14 = v13[4];
    BOOL v15 = v14 >= v7;
    if (v14 >= v7) {
      BOOL v16 = v13;
    }
    else {
      BOOL v16 = v13 + 1;
    }
    if (v15) {
      int v12 = v13;
    }
    int v13 = (void *)*v16;
  }
  while (*v16);
  if (v12 == v9 || v7 < v12[4]) {
LABEL_12:
  }
    int v12 = v9;
  int v17 = *((_DWORD *)v12 + 10);
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v10) {
    goto LABEL_24;
  }
  unint64_t v19 = v9;
  do
  {
    unint64_t v20 = v10[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v10;
    }
    else {
      BOOL v22 = v10 + 1;
    }
    if (v21) {
      unint64_t v19 = v10;
    }
    double v10 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v9 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v9;
  int v23 = *((_DWORD *)v19 + 10);
  int v24 = *a2;
  if (*a3 && (*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 17)
  {
    if (*a3)
    {
      if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) == 18) {
        goto LABEL_32;
      }
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
    }
    *a3 = 0;
  }
LABEL_32:
  int v25 = __p;
  sub_2824B4(v17, v23, v24, (uint64_t)__p);
  uint64_t v26 = a1[9];
  uint64_t v29 = *(void *)(v26 + 8);
  uint64_t v28 = v26 + 8;
  uint64_t v27 = v29;
  if (!v29)
  {
    uint64_t v46 = 0;
    if (((char)v57 & 0x80000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if ((v57 & 0x80u) == 0) {
    size_t v30 = v57;
  }
  else {
    size_t v30 = (size_t)__p[1];
  }
  if ((v57 & 0x80u) != 0) {
    int v25 = (void **)__p[0];
  }
  uint64_t v31 = v28;
  do
  {
    int v32 = *(char *)(v27 + 55);
    if (v32 >= 0) {
      size_t v33 = *(unsigned __int8 *)(v27 + 55);
    }
    else {
      size_t v33 = *(void *)(v27 + 40);
    }
    if (v32 >= 0) {
      size_t v34 = (const void *)(v27 + 32);
    }
    else {
      size_t v34 = *(const void **)(v27 + 32);
    }
    if (v30 >= v33) {
      size_t v35 = v33;
    }
    else {
      size_t v35 = v30;
    }
    int v36 = memcmp(v34, v25, v35);
    BOOL v37 = v33 < v30;
    if (v36) {
      BOOL v37 = v36 < 0;
    }
    BOOL v38 = !v37;
    if (v37) {
      size_t v39 = (uint64_t *)(v27 + 8);
    }
    else {
      size_t v39 = (uint64_t *)v27;
    }
    if (v38) {
      uint64_t v31 = v27;
    }
    uint64_t v27 = *v39;
  }
  while (*v39);
  if (v31 == v28)
  {
    uint64_t v46 = 0;
    LOBYTE(v27) = 0;
    if ((char)v57 < 0) {
      goto LABEL_73;
    }
  }
  else
  {
    int v40 = *(char *)(v31 + 55);
    if (v40 >= 0) {
      size_t v41 = *(unsigned __int8 *)(v31 + 55);
    }
    else {
      size_t v41 = *(void *)(v31 + 40);
    }
    if (v40 >= 0) {
      BOOL v42 = (const void *)(v31 + 32);
    }
    else {
      BOOL v42 = *(const void **)(v31 + 32);
    }
    if (v41 >= v30) {
      size_t v43 = v30;
    }
    else {
      size_t v43 = v41;
    }
    int v44 = memcmp(v25, v42, v43);
    BOOL v45 = v30 < v41;
    if (v44) {
      BOOL v45 = v44 < 0;
    }
    if (v45)
    {
      uint64_t v46 = 0;
      LOBYTE(v27) = 0;
      if (((char)v57 & 0x80000000) == 0) {
        goto LABEL_74;
      }
      goto LABEL_73;
    }
    int v58 = *(_DWORD *)(v31 + 64);
    uint64_t v46 = sub_194AAC((uint64_t)a1, &v58);
    LOBYTE(v27) = 1;
    if ((char)v57 < 0) {
LABEL_73:
    }
      operator delete(__p[0]);
  }
LABEL_74:
  if ((v27 & 1) == 0)
  {
    uint64_t v47 = a1[6];
    uint64_t v50 = *(void *)(v47 + 8);
    uint64_t v48 = v47 + 8;
    uint64_t v49 = v50;
    if (v50)
    {
      uint64_t v51 = v48;
      do
      {
        int v52 = *(_DWORD *)(v49 + 32);
        BOOL v53 = v52 < v24;
        if (v52 >= v24) {
          BOOL v54 = (uint64_t *)v49;
        }
        else {
          BOOL v54 = (uint64_t *)(v49 + 8);
        }
        if (!v53) {
          uint64_t v51 = v49;
        }
        uint64_t v49 = *v54;
      }
      while (*v54);
      if (v51 != v48 && v24 >= *(_DWORD *)(v51 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v46;
}

void sub_242E8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_242EA8(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *((_DWORD *)v13 + 10);
  int v24 = *((_DWORD *)v19 + 10);
  int v25 = *a2;
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_2832E8(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (v33)
  {
    if ((v61 & 0x80u) == 0) {
      size_t v34 = v61;
    }
    else {
      size_t v34 = (size_t)__p[1];
    }
    if ((v61 & 0x80u) != 0) {
      uint64_t v29 = (void **)__p[0];
    }
    uint64_t v35 = v32;
    do
    {
      int v36 = *(char *)(v31 + 55);
      if (v36 >= 0) {
        size_t v37 = *(unsigned __int8 *)(v31 + 55);
      }
      else {
        size_t v37 = *(void *)(v31 + 40);
      }
      if (v36 >= 0) {
        BOOL v38 = (const void *)(v31 + 32);
      }
      else {
        BOOL v38 = *(const void **)(v31 + 32);
      }
      if (v34 >= v37) {
        size_t v39 = v37;
      }
      else {
        size_t v39 = v34;
      }
      int v40 = memcmp(v38, v29, v39);
      BOOL v41 = v37 < v34;
      if (v40) {
        BOOL v41 = v40 < 0;
      }
      BOOL v42 = !v41;
      if (v41) {
        size_t v43 = (uint64_t *)(v31 + 8);
      }
      else {
        size_t v43 = (uint64_t *)v31;
      }
      if (v42) {
        uint64_t v35 = v31;
      }
      uint64_t v31 = *v43;
    }
    while (*v43);
    if (v35 == v32) {
      goto LABEL_77;
    }
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      uint64_t v46 = (const void *)(v35 + 32);
    }
    else {
      uint64_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
LABEL_77:
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_17C480((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_78:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_78;
    }
  }
LABEL_79:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v25;
        if (v56 >= v25) {
          int v58 = (uint64_t *)v53;
        }
        else {
          int v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v25 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_2432F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_243314(void *a1, int *a2, void *a3)
{
  uint64_t v6 = *a3;
  v7.n128_f64[0] = (*(double (**)(void))(*(void *)a3[1] + 16))(a3[1]);
  unint64_t v8 = *(void *)(v6 + 32);
  uint64_t v9 = a1[7];
  int v12 = *(void **)(v9 + 8);
  double v10 = (void *)(v9 + 8);
  uint64_t v11 = v12;
  if (!v12) {
    goto LABEL_12;
  }
  int v13 = v10;
  unint64_t v14 = v11;
  do
  {
    unint64_t v15 = v14[4];
    BOOL v16 = v15 >= v8;
    if (v15 >= v8) {
      int v17 = v14;
    }
    else {
      int v17 = v14 + 1;
    }
    if (v16) {
      int v13 = v14;
    }
    unint64_t v14 = (void *)*v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < v13[4]) {
LABEL_12:
  }
    int v13 = v10;
  unint64_t v18 = *(void *)(v6 + 40);
  if (!v11) {
    goto LABEL_24;
  }
  unint64_t v19 = v10;
  do
  {
    unint64_t v20 = v11[4];
    BOOL v21 = v20 >= v18;
    if (v20 >= v18) {
      BOOL v22 = v11;
    }
    else {
      BOOL v22 = v11 + 1;
    }
    if (v21) {
      unint64_t v19 = v11;
    }
    uint64_t v11 = (void *)*v22;
  }
  while (*v22);
  if (v19 == v10 || v18 < v19[4]) {
LABEL_24:
  }
    unint64_t v19 = v10;
  int v23 = *((_DWORD *)v13 + 10);
  int v24 = *((_DWORD *)v19 + 10);
  int v25 = *a2;
  if (*a3 && (*(unsigned int (**)(void, __n128))(*(void *)*a3 + 32))(*a3, v7) != 17)
  {
    if (!*a3)
    {
LABEL_31:
      *a3 = 0;
      goto LABEL_32;
    }
    if ((*(unsigned int (**)(void))(*(void *)*a3 + 32))(*a3) != 18)
    {
      if (*a3) {
        (*(void (**)(void))(*(void *)*a3 + 8))(*a3);
      }
      goto LABEL_31;
    }
  }
LABEL_32:
  uint64_t v26 = a3[1];
  if (v26 && (*(unsigned int (**)(uint64_t, __n128))(*(void *)v26 + 32))(v26, v7) != 17)
  {
    uint64_t v27 = a3[1];
    if (v27)
    {
      if ((*(unsigned int (**)(uint64_t))(*(void *)v27 + 32))(v27) == 18) {
        goto LABEL_39;
      }
      uint64_t v28 = a3[1];
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
      }
    }
    a3[1] = 0;
  }
LABEL_39:
  uint64_t v29 = __p;
  sub_284120(v23, v24, v25, (uint64_t)__p);
  uint64_t v30 = a1[9];
  uint64_t v33 = *(void *)(v30 + 8);
  uint64_t v32 = v30 + 8;
  uint64_t v31 = v33;
  if (v33)
  {
    if ((v61 & 0x80u) == 0) {
      size_t v34 = v61;
    }
    else {
      size_t v34 = (size_t)__p[1];
    }
    if ((v61 & 0x80u) != 0) {
      uint64_t v29 = (void **)__p[0];
    }
    uint64_t v35 = v32;
    do
    {
      int v36 = *(char *)(v31 + 55);
      if (v36 >= 0) {
        size_t v37 = *(unsigned __int8 *)(v31 + 55);
      }
      else {
        size_t v37 = *(void *)(v31 + 40);
      }
      if (v36 >= 0) {
        BOOL v38 = (const void *)(v31 + 32);
      }
      else {
        BOOL v38 = *(const void **)(v31 + 32);
      }
      if (v34 >= v37) {
        size_t v39 = v37;
      }
      else {
        size_t v39 = v34;
      }
      int v40 = memcmp(v38, v29, v39);
      BOOL v41 = v37 < v34;
      if (v40) {
        BOOL v41 = v40 < 0;
      }
      BOOL v42 = !v41;
      if (v41) {
        size_t v43 = (uint64_t *)(v31 + 8);
      }
      else {
        size_t v43 = (uint64_t *)v31;
      }
      if (v42) {
        uint64_t v35 = v31;
      }
      uint64_t v31 = *v43;
    }
    while (*v43);
    if (v35 == v32) {
      goto LABEL_77;
    }
    int v44 = *(char *)(v35 + 55);
    if (v44 >= 0) {
      size_t v45 = *(unsigned __int8 *)(v35 + 55);
    }
    else {
      size_t v45 = *(void *)(v35 + 40);
    }
    if (v44 >= 0) {
      uint64_t v46 = (const void *)(v35 + 32);
    }
    else {
      uint64_t v46 = *(const void **)(v35 + 32);
    }
    if (v45 >= v34) {
      size_t v47 = v34;
    }
    else {
      size_t v47 = v45;
    }
    int v48 = memcmp(v29, v46, v47);
    BOOL v49 = v34 < v45;
    if (v48) {
      BOOL v49 = v48 < 0;
    }
    if (v49)
    {
LABEL_77:
      uint64_t v50 = 0;
      LOBYTE(v31) = 0;
      if (((char)v61 & 0x80000000) == 0) {
        goto LABEL_79;
      }
      goto LABEL_78;
    }
    int v62 = *(_DWORD *)(v35 + 64);
    uint64_t v50 = sub_1A8A14((uint64_t)a1, &v62);
    LOBYTE(v31) = 1;
    if ((char)v61 < 0) {
LABEL_78:
    }
      operator delete(__p[0]);
  }
  else
  {
    uint64_t v50 = 0;
    if ((char)v61 < 0) {
      goto LABEL_78;
    }
  }
LABEL_79:
  if ((v31 & 1) == 0)
  {
    uint64_t v51 = a1[6];
    uint64_t v54 = *(void *)(v51 + 8);
    uint64_t v52 = v51 + 8;
    uint64_t v53 = v54;
    if (v54)
    {
      uint64_t v55 = v52;
      do
      {
        int v56 = *(_DWORD *)(v53 + 32);
        BOOL v57 = v56 < v25;
        if (v56 >= v25) {
          int v58 = (uint64_t *)v53;
        }
        else {
          int v58 = (uint64_t *)(v53 + 8);
        }
        if (!v57) {
          uint64_t v55 = v53;
        }
        uint64_t v53 = *v58;
      }
      while (*v58);
      if (v55 != v52 && v25 >= *(_DWORD *)(v55 + 32)) {
        operator new();
      }
    }
    return 0;
  }
  return v50;
}

void sub_24375C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24377C()
{
}

double sub_243790(uint64_t a1)
{
  return fmod(**(long double **)(a1 + 8), **(long double **)(a1 + 16));
}

uint64_t sub_2437A0()
{
  return 38;
}

uint64_t sub_2437A8()
{
  return 6;
}

uint64_t sub_2437B0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_2437B8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_2437C4()
{
}

double sub_2437D8(uint64_t a1)
{
  return pow(**(long double **)(a1 + 8), **(long double **)(a1 + 16));
}

uint64_t sub_2437E8()
{
  return 39;
}

uint64_t sub_2437F0()
{
  return 7;
}

uint64_t sub_2437F8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243800(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_24380C()
{
}

double sub_243820(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) < **(double **)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_243840()
{
  return 40;
}

uint64_t sub_243848()
{
  return 14;
}

uint64_t sub_243850(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243858(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243864()
{
}

double sub_243878(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) <= **(double **)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_243898()
{
  return 41;
}

uint64_t sub_2438A0()
{
  return 15;
}

uint64_t sub_2438A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_2438B0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_2438BC()
{
}

double sub_2438D0(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) > **(double **)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_2438F0()
{
  return 42;
}

uint64_t sub_2438F8()
{
  return 21;
}

uint64_t sub_243900(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243908(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243914()
{
}

double sub_243928(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) >= **(double **)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_243948()
{
  return 43;
}

uint64_t sub_243950()
{
  return 20;
}

uint64_t sub_243958(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243960(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_24396C()
{
}

double sub_243980(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) == **(double **)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_2439A0()
{
  return 44;
}

uint64_t sub_2439A8()
{
  return 16;
}

uint64_t sub_2439B0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_2439B8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_2439C4()
{
}

double sub_2439D8(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) != **(double **)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_2439F8()
{
  return 45;
}

uint64_t sub_243A00()
{
  return 18;
}

uint64_t sub_243A08(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243A10(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243A1C()
{
}

double sub_243A30(uint64_t a1)
{
  BOOL v1 = **(double **)(a1 + 16) == 0.0 || **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_243A54()
{
  return 46;
}

uint64_t sub_243A5C()
{
  return 22;
}

uint64_t sub_243A64(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243A6C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243A78()
{
}

double sub_243A8C(uint64_t a1)
{
  BOOL v1 = **(double **)(a1 + 16) == 0.0 || **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (!v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_243AB0()
{
  return 47;
}

uint64_t sub_243AB8()
{
  return 23;
}

uint64_t sub_243AC0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243AC8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243AD4()
{
}

double sub_243AE8(uint64_t a1)
{
  BOOL v1 = **(double **)(a1 + 16) == 0.0 && **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_243B0C()
{
  return 48;
}

uint64_t sub_243B14()
{
  return 24;
}

uint64_t sub_243B1C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243B24(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243B30()
{
}

double sub_243B44(uint64_t a1)
{
  BOOL v1 = **(double **)(a1 + 16) == 0.0 && **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (!v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_243B68()
{
  return 49;
}

uint64_t sub_243B70()
{
  return 25;
}

uint64_t sub_243B78(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243B80(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243B8C()
{
}

double sub_243BA0(uint64_t a1)
{
  double result = 0.0;
  if ((**(double **)(a1 + 8) == 0.0) != (**(double **)(a1 + 16) == 0.0)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_243BD4()
{
  return 49;
}

uint64_t sub_243BDC()
{
  return 26;
}

uint64_t sub_243BE4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243BEC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_243BF8()
{
}

double sub_243C0C(uint64_t a1)
{
  double result = 1.0;
  if ((**(double **)(a1 + 8) != 0.0) != (**(double **)(a1 + 16) != 0.0)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_243C40()
{
  return 49;
}

uint64_t sub_243C48()
{
  return 27;
}

uint64_t sub_243C50(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_243C58(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t **sub_243C60(uint64_t **a1, const void **a2, uint64_t a3, _OWORD **a4)
{
  __n128 v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *((char *)a2 + 23);
    if (v8 >= 0) {
      size_t v9 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v9 = (size_t)a2[1];
    }
    if (v8 >= 0) {
      double v10 = a2;
    }
    else {
      double v10 = *a2;
    }
    while (1)
    {
      while (1)
      {
        uint64_t v11 = (uint64_t **)v6;
        unint64_t v14 = (const void *)v6[4];
        int v12 = v6 + 4;
        int v13 = v14;
        int v15 = *((char *)v12 + 23);
        if (v15 >= 0) {
          size_t v16 = *((unsigned __int8 *)v12 + 23);
        }
        else {
          size_t v16 = v12[1];
        }
        if (v15 >= 0) {
          int v17 = v12;
        }
        else {
          int v17 = v13;
        }
        if (v16 >= v9) {
          size_t v18 = v9;
        }
        else {
          size_t v18 = v16;
        }
        int v19 = memcmp(v10, v17, v18);
        BOOL v20 = v9 < v16;
        if (v19) {
          BOOL v20 = v19 < 0;
        }
        if (!v20) {
          break;
        }
        uint64_t v6 = *v11;
        __n128 v7 = v11;
        if (!*v11) {
          goto LABEL_27;
        }
      }
      int v21 = memcmp(v17, v10, v18);
      BOOL v22 = v16 < v9;
      if (v21) {
        BOOL v22 = v21 < 0;
      }
      if (!v22) {
        break;
      }
      uint64_t v6 = v11[1];
      if (!v6)
      {
        __n128 v7 = v11 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    uint64_t v11 = a1 + 1;
LABEL_27:
    int v23 = (uint64_t *)v11;
    uint64_t v11 = (uint64_t **)operator new(0x40uLL);
    int v24 = *a4;
    int v25 = (uint64_t *)*((void *)*a4 + 2);
    *((_OWORD *)v11 + 2) = **a4;
    v11[6] = v25;
    *int v24 = 0;
    v24[1] = 0;
    v24[2] = 0;
    v11[7] = 0;
    void *v11 = 0;
    v11[1] = 0;
    v11[2] = v23;
    *__n128 v7 = (uint64_t *)v11;
    uint64_t v26 = (uint64_t *)**a1;
    uint64_t v27 = (uint64_t *)v11;
    if (v26)
    {
      *a1 = v26;
      uint64_t v27 = *v7;
    }
    sub_2F250(a1[1], v27);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return v11;
}

uint64_t sub_243DDC(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  switch(*a3)
  {
    case 1:
      operator new();
    case 2:
      operator new();
    case 3:
      operator new();
    case 4:
      operator new();
    case 5:
      operator new();
    case 6:
      operator new();
    case 7:
      operator new();
    case 8:
      operator new();
    case 9:
      operator new();
    case 0xA:
      operator new();
    case 0xB:
      operator new();
    case 0xC:
      operator new();
    case 0xD:
      operator new();
    case 0xE:
      operator new();
    case 0xF:
      operator new();
    case 0x10:
      operator new();
    case 0x11:
      operator new();
    case 0x12:
      operator new();
    case 0x13:
      operator new();
    case 0x14:
      operator new();
    case 0x15:
      operator new();
    case 0x16:
      operator new();
    case 0x17:
      operator new();
    case 0x18:
      operator new();
    case 0x19:
      operator new();
    case 0x1A:
      operator new();
    case 0x1B:
      operator new();
    case 0x1C:
      operator new();
    case 0x1D:
      operator new();
    case 0x1E:
      operator new();
    case 0x1F:
      operator new();
    case 0x20:
      operator new();
    case 0x21:
      operator new();
    case 0x22:
      operator new();
    case 0x23:
      operator new();
    case 0x24:
      operator new();
    case 0x25:
      operator new();
    case 0x26:
      operator new();
    case 0x27:
      operator new();
    case 0x28:
      operator new();
    case 0x29:
      operator new();
    case 0x2A:
      operator new();
    case 0x2B:
      operator new();
    case 0x2C:
      operator new();
    case 0x2D:
      operator new();
    case 0x2E:
      operator new();
    case 0x2F:
      operator new();
    case 0x30:
      operator new();
    case 0x31:
      operator new();
    case 0x32:
      operator new();
    case 0x33:
      operator new();
    case 0x34:
      operator new();
    case 0x35:
      operator new();
    case 0x36:
      operator new();
    case 0x37:
      operator new();
    case 0x38:
      operator new();
    case 0x39:
      operator new();
    case 0x3A:
      operator new();
    case 0x3B:
      operator new();
    case 0x3C:
      operator new();
    default:
      return 0;
  }
}

uint64_t sub_244E20(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  switch(*a3)
  {
    case 1:
      operator new();
    case 2:
      operator new();
    case 3:
      operator new();
    case 4:
      operator new();
    case 5:
      operator new();
    case 6:
      operator new();
    case 7:
      operator new();
    case 8:
      operator new();
    case 9:
      operator new();
    case 0xA:
      operator new();
    case 0xB:
      operator new();
    case 0xC:
      operator new();
    case 0xD:
      operator new();
    case 0xE:
      operator new();
    case 0xF:
      operator new();
    case 0x10:
      operator new();
    case 0x11:
      operator new();
    case 0x12:
      operator new();
    case 0x13:
      operator new();
    case 0x14:
      operator new();
    case 0x15:
      operator new();
    case 0x16:
      operator new();
    case 0x17:
      operator new();
    case 0x18:
      operator new();
    case 0x19:
      operator new();
    case 0x1A:
      operator new();
    case 0x1B:
      operator new();
    case 0x1C:
      operator new();
    case 0x1D:
      operator new();
    case 0x1E:
      operator new();
    case 0x1F:
      operator new();
    case 0x20:
      operator new();
    case 0x21:
      operator new();
    case 0x22:
      operator new();
    case 0x23:
      operator new();
    case 0x24:
      operator new();
    case 0x25:
      operator new();
    case 0x26:
      operator new();
    case 0x27:
      operator new();
    case 0x28:
      operator new();
    case 0x29:
      operator new();
    case 0x2A:
      operator new();
    case 0x2B:
      operator new();
    case 0x2C:
      operator new();
    case 0x2D:
      operator new();
    case 0x2E:
      operator new();
    case 0x2F:
      operator new();
    case 0x30:
      operator new();
    case 0x31:
      operator new();
    case 0x32:
      operator new();
    case 0x33:
      operator new();
    case 0x34:
      operator new();
    case 0x35:
      operator new();
    case 0x36:
      operator new();
    case 0x37:
      operator new();
    case 0x38:
      operator new();
    case 0x39:
      operator new();
    case 0x3A:
      operator new();
    case 0x3B:
      operator new();
    case 0x3C:
      operator new();
    default:
      return 0;
  }
}

void sub_245E68()
{
}

double sub_245E7C(uint64_t a1)
{
  return **(double **)(a1 + 8);
}

uint64_t sub_245E88()
{
  return 56;
}

void sub_245E94()
{
}

double sub_245EA8(uint64_t a1)
{
  return **(double **)(a1 + 8) * **(double **)(a1 + 8);
}

uint64_t sub_245EB8()
{
  return 56;
}

void sub_245EC4()
{
}

double sub_245ED8(uint64_t a1)
{
  return **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
}

uint64_t sub_245EEC()
{
  return 56;
}

void sub_245EF8()
{
}

double sub_245F0C(uint64_t a1)
{
  return **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
}

uint64_t sub_245F20()
{
  return 56;
}

void sub_245F2C()
{
}

double sub_245F40(uint64_t a1)
{
  return **(double **)(a1 + 8)
       * (**(double **)(a1 + 8)
        * **(double **)(a1 + 8)
        * (**(double **)(a1 + 8)
         * **(double **)(a1 + 8)));
}

uint64_t sub_245F58()
{
  return 56;
}

void sub_245F64()
{
}

double sub_245F78(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * (v1 * v1));
}

uint64_t sub_245F90()
{
  return 56;
}

void sub_245F9C()
{
}

double sub_245FB0(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  return *v1 * (*v1 * (*v1 * *v1) * (*v1 * (*v1 * *v1)));
}

uint64_t sub_245FCC()
{
  return 56;
}

void sub_245FD8()
{
}

double sub_245FEC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * v1;
}

uint64_t sub_246004()
{
  return 56;
}

void sub_246010()
{
}

double sub_246024(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  return *v1 * (*v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1)));
}

uint64_t sub_246040()
{
  return 56;
}

void sub_24604C()
{
}

double sub_246060(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return *v1 * v2 * (*v1 * v2);
}

uint64_t sub_24607C()
{
  return 56;
}

void sub_246088()
{
}

double sub_24609C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_2460BC()
{
  return 56;
}

void sub_2460C8()
{
}

double sub_2460DC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * (v1 * v1);
}

uint64_t sub_2460F8()
{
  return 56;
}

void sub_246104()
{
}

double sub_246118(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return *v1 * v2 * (v2 * v2);
}

uint64_t sub_246138()
{
  return 56;
}

void sub_246144()
{
}

double sub_246158(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
}

uint64_t sub_246178()
{
  return 56;
}

void sub_246184()
{
}

double sub_246198(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_2461BC()
{
  return 56;
}

void sub_2461C8()
{
}

double sub_2461DC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * v1 * (v1 * v1);
}

uint64_t sub_2461F8()
{
  return 56;
}

void sub_246204()
{
}

double sub_246218(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return *v1 * (v2 * v2);
}

uint64_t sub_246238()
{
  return 56;
}

void sub_246244()
{
}

double sub_246258(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1 * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246278()
{
  return 56;
}

void sub_246284()
{
}

double sub_246298(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_2462BC()
{
  return 56;
}

void sub_2462C8()
{
}

double sub_2462DC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * (v1 * v1 * (v1 * v1));
}

uint64_t sub_2462FC()
{
  return 56;
}

void sub_246308()
{
}

double sub_24631C(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return *v1 * v2 * (v2 * v2 * (v2 * v2));
}

uint64_t sub_246340()
{
  return 56;
}

void sub_24634C()
{
}

double sub_246360(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246384()
{
  return 56;
}

void sub_246390()
{
}

double sub_2463A4(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return v1
       * (v1
        * v1)
       * (v1
        * v1
        * (v1
         * v1))
       * (v1
        * v1
        * (v1
         * v1)
        * (v1
         * v1
         * (v1
          * v1))
        * (v1
         * v1
         * (v1
          * v1)
         * (v1
          * v1
          * (v1
           * v1))));
}

uint64_t sub_2463CC()
{
  return 56;
}

void sub_2463D8()
{
}

double sub_2463EC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * v1 * (v1 * v1 * (v1 * v1));
}

uint64_t sub_24640C()
{
  return 56;
}

void sub_246418()
{
}

double sub_24642C(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return *v1 * v2 * (v2 * v2);
}

uint64_t sub_246450()
{
  return 56;
}

void sub_24645C()
{
}

double sub_246470(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1 * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246494()
{
  return 56;
}

void sub_2464A0()
{
}

double sub_2464B4(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return v1 * (v1 * v1) * v2 * (v2 * v2);
}

uint64_t sub_2464DC()
{
  return 56;
}

void sub_2464E8()
{
}

double sub_2464FC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
}

uint64_t sub_246520()
{
  return 56;
}

void sub_24652C()
{
}

double sub_246540(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return *v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2));
}

uint64_t sub_246568()
{
  return 56;
}

void sub_246574()
{
}

double sub_246588(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_2465B0()
{
  return 56;
}

void sub_2465BC()
{
}

double sub_2465D0(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return v1 * (v1 * v1) * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2));
}

uint64_t sub_2465FC()
{
  return 56;
}

void sub_246608()
{
}

double sub_24661C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
}

uint64_t sub_24663C()
{
  return 56;
}

void sub_246648()
{
}

double sub_24665C(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return *v1 * (v2 * v2 * (v2 * v2));
}

uint64_t sub_246680()
{
  return 56;
}

void sub_24668C()
{
}

double sub_2466A0(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return v1 * (v2 * v2);
}

uint64_t sub_2466C4()
{
  return 56;
}

void sub_2466D0()
{
}

double sub_2466E4(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
  return v1 * (v1 * v1) * (v2 * v2);
}

uint64_t sub_24670C()
{
  return 56;
}

void sub_246718()
{
}

double sub_24672C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246750()
{
  return 56;
}

void sub_24675C()
{
}

double sub_246770(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return *v1 * v2 * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_246798()
{
  return 56;
}

void sub_2467A4()
{
}

double sub_2467B8(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_2467E0()
{
  return 56;
}

void sub_2467EC()
{
}

double sub_246800(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return v1 * (v1 * v1) * v2 * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_24682C()
{
  return 56;
}

void sub_246838()
{
}

double sub_24684C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * v1 * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246870()
{
  return 56;
}

void sub_24687C()
{
}

double sub_246890(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return *v1 * v2 * (v2 * v2 * (v2 * v2));
}

uint64_t sub_2468B8()
{
  return 56;
}

void sub_2468C4()
{
}

double sub_2468D8(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1
       * (v1
        * v1
        * (v1
         * v1))
       * (v1
        * v1
        * (v1
         * v1)
        * (v1
         * v1
         * (v1
          * v1))
        * (v1
         * v1
         * (v1
          * v1)
         * (v1
          * v1
          * (v1
           * v1))));
}

uint64_t sub_246900()
{
  return 56;
}

void sub_24690C()
{
}

double sub_246920(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return v1 * (v1 * v1) * v2 * (v2 * v2 * (v2 * v2));
}

uint64_t sub_24694C()
{
  return 56;
}

void sub_246958()
{
}

double sub_24696C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246994()
{
  return 56;
}

void sub_2469A0()
{
}

double sub_2469B4(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return *v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_2469E0()
{
  return 56;
}

void sub_2469EC()
{
}

double sub_246A00(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return v1
       * (v1
        * v1)
       * (v1
        * v1
        * (v1
         * v1))
       * (v1
        * v1
        * (v1
         * v1)
        * (v1
         * v1
         * (v1
          * v1))
        * (v1
         * v1
         * (v1
          * v1)
         * (v1
          * v1
          * (v1
           * v1))));
}

uint64_t sub_246A2C()
{
  return 56;
}

void sub_246A38()
{
}

double sub_246A4C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return v1 * (v1 * v1) * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_246A7C()
{
  return 56;
}

void sub_246A88()
{
}

double sub_246A9C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246AC0()
{
  return 56;
}

void sub_246ACC()
{
}

double sub_246AE0(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return *v1 * (v2 * v2) * (v2 * v2 * (v2 * v2));
}

uint64_t sub_246B08()
{
  return 56;
}

void sub_246B14()
{
}

double sub_246B28(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return v1 * v2 * (v2 * v2);
}

uint64_t sub_246B50()
{
  return 56;
}

void sub_246B5C()
{
}

double sub_246B70(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
  return v1 * (v1 * v1) * v2 * (v2 * v2);
}

uint64_t sub_246B9C()
{
  return 56;
}

void sub_246BA8()
{
}

double sub_246BBC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246BE4()
{
  return 56;
}

void sub_246BF0()
{
}

double sub_246C04(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return *v1 * v2 * (v2 * v2 * (v2 * v2)) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_246C30()
{
  return 56;
}

void sub_246C3C()
{
}

double sub_246C50(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return v1 * (v1 * v1) * v2 * (v2 * v2);
}

uint64_t sub_246C7C()
{
  return 56;
}

void sub_246C88()
{
}

double sub_246C9C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return v1 * (v1 * v1) * v2 * (v2 * v2 * (v2 * v2)) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_246CCC()
{
  return 56;
}

void sub_246CD8()
{
}

double sub_246CEC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * v1 * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246D14()
{
  return 56;
}

void sub_246D20()
{
}

double sub_246D34(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return *v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2));
}

uint64_t sub_246D60()
{
  return 56;
}

void sub_246D6C()
{
}

double sub_246D80(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2));
}

uint64_t sub_246DAC()
{
  return 56;
}

void sub_246DB8()
{
}

double sub_246DCC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return v1 * (v1 * v1) * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2));
}

uint64_t sub_246DFC()
{
  return 56;
}

void sub_246E08()
{
}

double sub_246E1C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_246E48()
{
  return 56;
}

void sub_246E54()
{
}

double sub_246E68(uint64_t a1)
{
  return 1.0 / **(double **)(a1 + 8);
}

uint64_t sub_246E7C()
{
  return 57;
}

void sub_246E88()
{
}

double sub_246E9C(uint64_t a1)
{
  return 1.0 / (**(double **)(a1 + 8) * **(double **)(a1 + 8));
}

uint64_t sub_246EB4()
{
  return 57;
}

void sub_246EC0()
{
}

double sub_246ED4(uint64_t a1)
{
  return 1.0 / (**(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8)));
}

uint64_t sub_246EF0()
{
  return 57;
}

void sub_246EFC()
{
}

double sub_246F10(uint64_t a1)
{
  return 1.0 / (**(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8)));
}

uint64_t sub_246F2C()
{
  return 57;
}

void sub_246F38()
{
}

double sub_246F4C(uint64_t a1)
{
  return 1.0
       / (**(double **)(a1 + 8)
        * (**(double **)(a1 + 8)
         * **(double **)(a1 + 8)
         * (**(double **)(a1 + 8)
          * **(double **)(a1 + 8))));
}

uint64_t sub_246F6C()
{
  return 57;
}

void sub_246F78()
{
}

double sub_246F8C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1);
}

uint64_t sub_246FAC()
{
  return 57;
}

void sub_246FB8()
{
}

double sub_246FCC(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  return 1.0 / (*v1 * (*v1 * (*v1 * *v1) * (*v1 * (*v1 * *v1))));
}

uint64_t sub_246FF0()
{
  return 57;
}

void sub_246FFC()
{
}

double sub_247010(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1);
}

uint64_t sub_247030()
{
  return 57;
}

void sub_24703C()
{
}

double sub_247050(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247074()
{
  return 57;
}

void sub_247080()
{
}

double sub_247094(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8)
     * (**(double **)(a1 + 8)
      * **(double **)(a1 + 8)
      * (**(double **)(a1 + 8)
       * **(double **)(a1 + 8)));
  return 1.0 / (v1 * v1);
}

uint64_t sub_2470B8()
{
  return 57;
}

void sub_2470C4()
{
}

double sub_2470D8(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247100()
{
  return 57;
}

void sub_24710C()
{
}

double sub_247120(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * (v1 * v1));
}

uint64_t sub_247144()
{
  return 57;
}

void sub_247150()
{
}

double sub_247164(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_24718C()
{
  return 57;
}

void sub_247198()
{
}

double sub_2471AC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_2471D4()
{
  return 57;
}

void sub_2471E0()
{
}

double sub_2471F4(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247220()
{
  return 57;
}

void sub_24722C()
{
}

double sub_247240(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1 * (v1 * v1));
}

uint64_t sub_247264()
{
  return 57;
}

void sub_247270()
{
}

double sub_247284(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return 1.0 / (*v1 * (v2 * v2));
}

uint64_t sub_2472AC()
{
  return 57;
}

void sub_2472B8()
{
}

double sub_2472CC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_2472F4()
{
  return 57;
}

void sub_247300()
{
}

double sub_247314(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247340()
{
  return 57;
}

void sub_24734C()
{
}

double sub_247360(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_247388()
{
  return 57;
}

void sub_247394()
{
}

double sub_2473A8(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  return 1.0
       / (v1
        * (v1
         * v1
         * (v1
          * v1))
        * (v1
         * v1
         * (v1
          * v1)
         * (v1
          * v1
          * (v1
           * v1))
         * (v1
          * v1
          * (v1
           * v1)
          * (v1
           * v1
           * (v1
            * v1)))));
}

uint64_t sub_2473D4()
{
  return 57;
}

void sub_2473E0()
{
}

double sub_2473F4(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247420()
{
  return 57;
}

void sub_24742C()
{
}

double sub_247440(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247470()
{
  return 57;
}

void sub_24747C()
{
}

double sub_247490(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1 * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_2474B8()
{
  return 57;
}

void sub_2474C4()
{
}

double sub_2474D8(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return 1.0 / (*v1 * v2 * (v2 * v2));
}

uint64_t sub_247504()
{
  return 57;
}

void sub_247510()
{
}

double sub_247524(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247550()
{
  return 57;
}

void sub_24755C()
{
}

double sub_247570(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2 * (v2 * v2)) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_2475A0()
{
  return 57;
}

void sub_2475AC()
{
}

double sub_2475C0(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_2475EC()
{
  return 57;
}

void sub_2475F8()
{
}

double sub_24760C(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return 1.0 / (*v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_24763C()
{
  return 57;
}

void sub_247648()
{
}

double sub_24765C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_24768C()
{
  return 57;
}

void sub_247698()
{
}

double sub_2476AC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2) * (v2 * v2 * (v2 * v2)) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_2476E0()
{
  return 57;
}

void sub_2476EC()
{
}

double sub_247700(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
}

uint64_t sub_247728()
{
  return 57;
}

void sub_247734()
{
}

double sub_247748(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return 1.0 / (*v1 * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_247774()
{
  return 57;
}

void sub_247780()
{
}

double sub_247794(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return 1.0 / (v1 * (v2 * v2));
}

uint64_t sub_2477C0()
{
  return 57;
}

void sub_2477CC()
{
}

double sub_2477E0(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2));
}

uint64_t sub_247810()
{
  return 57;
}

void sub_24781C()
{
}

double sub_247830(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_24785C()
{
  return 57;
}

void sub_247868()
{
}

double sub_24787C(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return 1.0 / (*v1 * v2 * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_2478AC()
{
  return 57;
}

void sub_2478B8()
{
}

double sub_2478CC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_2478FC()
{
  return 57;
}

void sub_247908()
{
}

double sub_24791C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return 1.0 / (v1 * (v1 * v1) * v2 * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247950()
{
  return 57;
}

void sub_24795C()
{
}

double sub_247970(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1 * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_24799C()
{
  return 57;
}

void sub_2479A8()
{
}

double sub_2479BC(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return 1.0 / (*v1 * v2 * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_2479EC()
{
  return 57;
}

void sub_2479F8()
{
}

double sub_247A0C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  return 1.0
       / (v1
        * (v1
         * v1
         * (v1
          * v1))
        * (v1
         * v1
         * (v1
          * v1)
         * (v1
          * v1
          * (v1
           * v1))
         * (v1
          * v1
          * (v1
           * v1)
          * (v1
           * v1
           * (v1
            * v1)))));
}

uint64_t sub_247A3C()
{
  return 57;
}

void sub_247A48()
{
}

double sub_247A5C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0
       / (v1
        * (v1
         * v1)
        * (v2
         * v2
         * (v2
          * v2))
        * (v2
         * v2
         * (v2
          * v2)
         * (v2
          * v2
          * (v2
           * v2))
         * (v2
          * v2
          * (v2
           * v2)
          * (v2
           * v2
           * (v2
            * v2)))));
}

uint64_t sub_247A90()
{
  return 57;
}

void sub_247A9C()
{
}

double sub_247AB0(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247AE0()
{
  return 57;
}

void sub_247AEC()
{
}

double sub_247B00(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return 1.0 / (*v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247B34()
{
  return 57;
}

void sub_247B40()
{
}

double sub_247B54(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247B88()
{
  return 57;
}

void sub_247B94()
{
}

double sub_247BA8(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return 1.0 / (v1 * (v1 * v1) * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247BE0()
{
  return 57;
}

void sub_247BEC()
{
}

double sub_247C00(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247C2C()
{
  return 57;
}

void sub_247C38()
{
}

double sub_247C4C(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return 1.0 / (*v1 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_247C7C()
{
  return 57;
}

void sub_247C88()
{
}

double sub_247C9C(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return 1.0 / (v1 * v2 * (v2 * v2));
}

uint64_t sub_247CCC()
{
  return 57;
}

void sub_247CD8()
{
}

double sub_247CEC(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)));
  return 1.0 / (v1 * (v1 * v1) * v2 * (v2 * v2));
}

uint64_t sub_247D20()
{
  return 57;
}

void sub_247D2C()
{
}

double sub_247D40(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247D70()
{
  return 57;
}

void sub_247D7C()
{
}

double sub_247D90(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1);
  return 1.0 / (*v1 * v2 * (v2 * v2 * (v2 * v2)) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247DC4()
{
  return 57;
}

void sub_247DD0()
{
}

double sub_247DE4(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1;
  return 1.0 / (v1 * (v1 * v1) * (v2 * v2 * (v2 * v2)) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247E18()
{
  return 57;
}

void sub_247E24()
{
}

double sub_247E38(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return 1.0 / (v1 * (v1 * v1) * v2 * (v2 * v2 * (v2 * v2)) * (v2 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2))));
}

uint64_t sub_247E70()
{
  return 57;
}

void sub_247E7C()
{
}

double sub_247E90(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * v1 * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_247EC0()
{
  return 57;
}

void sub_247ECC()
{
}

double sub_247EE0(uint64_t a1)
{
  double v1 = *(double **)(a1 + 8);
  double v2 = *v1 * *v1 * (*v1 * *v1) * (*v1 * *v1 * (*v1 * *v1));
  return 1.0 / (*v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_247F14()
{
  return 57;
}

void sub_247F20()
{
}

double sub_247F34(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1);
  return 1.0 / (v1 * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_247F68()
{
  return 57;
}

void sub_247F74()
{
}

double sub_247F88(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8);
  double v2 = v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1));
  return 1.0 / (v1 * (v1 * v1) * v2 * (v2 * v2) * (v2 * v2 * (v2 * v2)));
}

uint64_t sub_247FC0()
{
  return 57;
}

void sub_247FCC()
{
}

double sub_247FE0(uint64_t a1)
{
  double v1 = **(double **)(a1 + 8) * **(double **)(a1 + 8) * (**(double **)(a1 + 8) * **(double **)(a1 + 8));
  return 1.0 / (v1 * (v1 * v1) * (v1 * v1 * (v1 * v1)) * (v1 * v1 * (v1 * v1) * (v1 * v1 * (v1 * v1))));
}

uint64_t sub_248014()
{
  return 57;
}

void sub_248020()
{
}

double sub_248034(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16);
}

uint64_t sub_248048()
{
  return 2;
}

double sub_248050(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248058(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248064()
{
}

double sub_248078(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16);
}

uint64_t sub_24808C()
{
  return 3;
}

double sub_248094(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24809C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2480A8()
{
}

double sub_2480BC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16);
}

uint64_t sub_2480D0()
{
  return 4;
}

double sub_2480D8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2480E0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2480EC()
{
}

double sub_248100(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16);
}

uint64_t sub_248114()
{
  return 5;
}

double sub_24811C(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248124(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248130()
{
}

double sub_248144(uint64_t a1)
{
  return fmod(**(long double **)(a1 + 8), *(long double *)(a1 + 16));
}

uint64_t sub_248154()
{
  return 6;
}

double sub_24815C(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248164(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248170()
{
}

double sub_248184(uint64_t a1)
{
  return pow(**(long double **)(a1 + 8), *(long double *)(a1 + 16));
}

uint64_t sub_248194()
{
  return 7;
}

double sub_24819C(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2481A4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2481B0()
{
}

double sub_2481C4(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) < *(double *)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_2481E4()
{
  return 14;
}

double sub_2481EC(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2481F4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248200()
{
}

double sub_248214(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) <= *(double *)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_248234()
{
  return 15;
}

double sub_24823C(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248244(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248250()
{
}

double sub_248264(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) > *(double *)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_248284()
{
  return 21;
}

double sub_24828C(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248294(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2482A0()
{
}

double sub_2482B4(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) >= *(double *)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_2482D4()
{
  return 20;
}

double sub_2482DC(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2482E4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2482F0()
{
}

double sub_248304(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) == *(double *)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_248324()
{
  return 16;
}

double sub_24832C(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248334(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248340()
{
}

double sub_248354(uint64_t a1)
{
  double result = 0.0;
  if (**(double **)(a1 + 8) != *(double *)(a1 + 16)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_248374()
{
  return 18;
}

double sub_24837C(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248384(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248390()
{
}

double sub_2483A4(uint64_t a1)
{
  BOOL v1 = *(double *)(a1 + 16) == 0.0 || **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_2483C8()
{
  return 22;
}

double sub_2483D0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2483D8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2483E4()
{
}

double sub_2483F8(uint64_t a1)
{
  BOOL v1 = *(double *)(a1 + 16) == 0.0 || **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (!v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_24841C()
{
  return 23;
}

double sub_248424(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24842C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248438()
{
}

double sub_24844C(uint64_t a1)
{
  BOOL v1 = *(double *)(a1 + 16) == 0.0 && **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_248470()
{
  return 24;
}

double sub_248478(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248480(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_24848C()
{
}

double sub_2484A0(uint64_t a1)
{
  BOOL v1 = *(double *)(a1 + 16) == 0.0 && **(double **)(a1 + 8) == 0.0;
  double result = 1.0;
  if (!v1) {
    return 0.0;
  }
  return result;
}

uint64_t sub_2484C4()
{
  return 25;
}

double sub_2484CC(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2484D4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2484E0()
{
}

double sub_2484F4(uint64_t a1)
{
  double result = 0.0;
  if ((**(double **)(a1 + 8) == 0.0) != (*(double *)(a1 + 16) == 0.0)) {
    return 1.0;
  }
  return result;
}

uint64_t sub_248528()
{
  return 26;
}

double sub_248530(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_248538(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_248544()
{
}

double sub_248558(uint64_t a1)
{
  double result = 1.0;
  if ((**(double **)(a1 + 8) != 0.0) != (*(double *)(a1 + 16) != 0.0)) {
    return 0.0;
  }
  return result;
}

uint64_t sub_24858C()
{
  return 27;
}

double sub_248594(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24859C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_2485A4(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "(t");
  __n128 v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  uint64_t v11 = sub_24A498(v7, "t)");
  int v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_248A3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_248B80(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x3E8:
      operator new();
    case 0x3E9:
      operator new();
    case 0x3EA:
      operator new();
    case 0x3EB:
      operator new();
    case 0x3EC:
      operator new();
    case 0x3ED:
      operator new();
    case 0x3EE:
      operator new();
    case 0x3EF:
      operator new();
    case 0x3F0:
      operator new();
    case 0x3F1:
      operator new();
    case 0x3F2:
      operator new();
    case 0x3F3:
      operator new();
    case 0x3F4:
      operator new();
    case 0x3F5:
      operator new();
    case 0x3F6:
      operator new();
    case 0x3F7:
      operator new();
    case 0x3F8:
      operator new();
    case 0x3F9:
      operator new();
    case 0x3FA:
      operator new();
    case 0x3FB:
      operator new();
    case 0x3FC:
      operator new();
    case 0x3FD:
      operator new();
    case 0x3FE:
      operator new();
    case 0x3FF:
      operator new();
    case 0x400:
      operator new();
    case 0x401:
      operator new();
    case 0x402:
      operator new();
    case 0x403:
      operator new();
    case 0x404:
      operator new();
    case 0x405:
      operator new();
    case 0x406:
      operator new();
    default:
      return 0;
  }
}

void sub_24951C()
{
}

double sub_249530(double **a1)
{
  return (*a1[1] + *a1[2]) / *a1[3];
}

uint64_t sub_249550()
{
  return 106;
}

void sub_249558(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)/t");
}

uint64_t sub_249580(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249588(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249590(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24959C()
{
}

double sub_2495B0(double **a1)
{
  return (*a1[1] + *a1[2]) * *a1[3];
}

uint64_t sub_2495D0()
{
  return 106;
}

void sub_2495D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)*t");
}

uint64_t sub_249600(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249608(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249610(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24961C()
{
}

double sub_249630(double **a1)
{
  return *a1[1] + *a1[2] - *a1[3];
}

uint64_t sub_249650()
{
  return 106;
}

void sub_249658(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)-t");
}

uint64_t sub_249680(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249688(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249690(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24969C()
{
}

double sub_2496B0(double **a1)
{
  return *a1[1] + *a1[2] + *a1[3];
}

uint64_t sub_2496D0()
{
  return 106;
}

void sub_2496D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)+t");
}

uint64_t sub_249700(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249708(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249710(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24971C()
{
}

double sub_249730(double **a1)
{
  return *a1[1] - *a1[2] + *a1[3];
}

uint64_t sub_249750()
{
  return 106;
}

void sub_249758(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)+t");
}

uint64_t sub_249780(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249788(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249790(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24979C()
{
}

double sub_2497B0(double **a1)
{
  return (*a1[1] - *a1[2]) / *a1[3];
}

uint64_t sub_2497D0()
{
  return 106;
}

void sub_2497D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)/t");
}

uint64_t sub_249800(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249808(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249810(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24981C()
{
}

double sub_249830(double **a1)
{
  return (*a1[1] - *a1[2]) * *a1[3];
}

uint64_t sub_249850()
{
  return 106;
}

void sub_249858(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)*t");
}

uint64_t sub_249880(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249888(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249890(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24989C()
{
}

double sub_2498B0(double **a1)
{
  return *a1[1] * *a1[2] + *a1[3];
}

uint64_t sub_2498D0()
{
  return 106;
}

void sub_2498D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)+t");
}

uint64_t sub_249900(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249908(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249910(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24991C()
{
}

double sub_249930(double **a1)
{
  return *a1[1] * *a1[2] - *a1[3];
}

uint64_t sub_249950()
{
  return 106;
}

void sub_249958(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)-t");
}

uint64_t sub_249980(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249988(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249990(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24999C()
{
}

double sub_2499B0(double **a1)
{
  return *a1[1] * *a1[2] / *a1[3];
}

uint64_t sub_2499D0()
{
  return 106;
}

void sub_2499D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)/t");
}

uint64_t sub_249A00(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249A08(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249A10(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249A1C()
{
}

double sub_249A30(double **a1)
{
  return *a1[1] * *a1[2] * *a1[3];
}

uint64_t sub_249A50()
{
  return 106;
}

void sub_249A58(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)*t");
}

uint64_t sub_249A80(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249A88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249A90(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249A9C()
{
}

double sub_249AB0(double **a1)
{
  return *a1[1] / *a1[2] + *a1[3];
}

uint64_t sub_249AD0()
{
  return 106;
}

void sub_249AD8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)+t");
}

uint64_t sub_249B00(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249B08(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249B10(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249B1C()
{
}

double sub_249B30(double **a1)
{
  return *a1[1] / *a1[2] - *a1[3];
}

uint64_t sub_249B50()
{
  return 106;
}

void sub_249B58(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)-t");
}

uint64_t sub_249B80(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249B88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249B90(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249B9C()
{
}

double sub_249BB0(double **a1)
{
  return *a1[1] / *a1[2] / *a1[3];
}

uint64_t sub_249BD0()
{
  return 106;
}

void sub_249BD8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)/t");
}

uint64_t sub_249C00(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249C08(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249C10(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249C1C()
{
}

double sub_249C30(double **a1)
{
  return *a1[1] / *a1[2] * *a1[3];
}

uint64_t sub_249C50()
{
  return 106;
}

void sub_249C58(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)*t");
}

uint64_t sub_249C80(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249C88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249C90(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249C9C()
{
}

double sub_249CB0(double **a1)
{
  return *a1[1] / (*a1[2] + *a1[3]);
}

uint64_t sub_249CD0()
{
  return 106;
}

void sub_249CD8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t+t)");
}

uint64_t sub_249D00(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249D08(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249D10(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249D1C()
{
}

double sub_249D30(double **a1)
{
  return *a1[1] / (*a1[2] - *a1[3]);
}

uint64_t sub_249D50()
{
  return 106;
}

void sub_249D58(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t-t)");
}

uint64_t sub_249D80(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249D88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249D90(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249D9C()
{
}

double sub_249DB0(double **a1)
{
  return *a1[1] / (*a1[2] * *a1[3]);
}

uint64_t sub_249DD0()
{
  return 106;
}

void sub_249DD8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t*t)");
}

uint64_t sub_249E00(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249E08(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249E10(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249E1C()
{
}

double sub_249E30(double **a1)
{
  return *a1[1] / (*a1[2] / *a1[3]);
}

uint64_t sub_249E50()
{
  return 106;
}

void sub_249E58(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t/t)");
}

uint64_t sub_249E80(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249E88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249E90(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249E9C()
{
}

double sub_249EB0(double **a1)
{
  return *a1[1] * (*a1[2] + *a1[3]);
}

uint64_t sub_249ED0()
{
  return 106;
}

void sub_249ED8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t+t)");
}

uint64_t sub_249F00(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249F08(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249F10(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249F1C()
{
}

double sub_249F30(double **a1)
{
  return *a1[1] * (*a1[2] - *a1[3]);
}

uint64_t sub_249F50()
{
  return 106;
}

void sub_249F58(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t-t)");
}

uint64_t sub_249F80(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_249F88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_249F90(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_249F9C()
{
}

double sub_249FB0(double **a1)
{
  return *a1[1] * (*a1[2] * *a1[3]);
}

uint64_t sub_249FD0()
{
  return 106;
}

void sub_249FD8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t*t)");
}

uint64_t sub_24A000(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A008(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A010(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A01C()
{
}

double sub_24A030(double **a1)
{
  return *a1[1] * (*a1[2] / *a1[3]);
}

uint64_t sub_24A050()
{
  return 106;
}

void sub_24A058(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t/t)");
}

uint64_t sub_24A080(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A088(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A090(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A09C()
{
}

double sub_24A0B0(double **a1)
{
  return *a1[1] - (*a1[2] + *a1[3]);
}

uint64_t sub_24A0D0()
{
  return 106;
}

void sub_24A0D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t+t)");
}

uint64_t sub_24A100(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A108(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A110(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A11C()
{
}

double sub_24A130(double **a1)
{
  return *a1[1] - (*a1[2] - *a1[3]);
}

uint64_t sub_24A150()
{
  return 106;
}

void sub_24A158(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t-t)");
}

uint64_t sub_24A180(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A188(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A190(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A19C()
{
}

double sub_24A1B0(double **a1)
{
  return *a1[1] - *a1[2] / *a1[3];
}

uint64_t sub_24A1D0()
{
  return 106;
}

void sub_24A1D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t/t)");
}

uint64_t sub_24A200(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A208(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A210(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A21C()
{
}

double sub_24A230(double **a1)
{
  return *a1[1] - *a1[2] * *a1[3];
}

uint64_t sub_24A250()
{
  return 106;
}

void sub_24A258(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t*t)");
}

uint64_t sub_24A280(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A288(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A290(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A29C()
{
}

double sub_24A2B0(double **a1)
{
  return *a1[1] + *a1[2] * *a1[3];
}

uint64_t sub_24A2D0()
{
  return 106;
}

void sub_24A2D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t*t)");
}

uint64_t sub_24A300(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A308(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A310(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A31C()
{
}

double sub_24A330(double **a1)
{
  return *a1[1] + *a1[2] / *a1[3];
}

uint64_t sub_24A350()
{
  return 106;
}

void sub_24A358(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t/t)");
}

uint64_t sub_24A380(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A388(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A390(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A39C()
{
}

double sub_24A3B0(double **a1)
{
  return *a1[1] + *a1[2] + *a1[3];
}

uint64_t sub_24A3D0()
{
  return 106;
}

void sub_24A3D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t+t)");
}

uint64_t sub_24A400(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A408(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A410(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24A41C()
{
}

double sub_24A430(double **a1)
{
  return *a1[1] + *a1[2] - *a1[3];
}

uint64_t sub_24A450()
{
  return 106;
}

void sub_24A458(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t-t)");
}

uint64_t sub_24A480(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24A488(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_24A490(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

std::string *sub_24A498(std::string *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    size_t v13 = v5;
    int64_t v14 = v8 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_8;
  }
  HIBYTE(v14) = v4;
  p_dst = (void **)&__dst;
  if (v4) {
LABEL_8:
  }
    memcpy(p_dst, __s, v5);
  *((unsigned char *)p_dst + v5) = 0;
  if (v14 >= 0) {
    __int16 v9 = (const std::string::value_type *)&__dst;
  }
  else {
    __int16 v9 = (const std::string::value_type *)__dst;
  }
  if (v14 >= 0) {
    std::string::size_type v10 = HIBYTE(v14);
  }
  else {
    std::string::size_type v10 = v13;
  }
  std::string::append(a1, v9, v10);
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst);
  }
  return a1;
}

void sub_24A588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24A5A8()
{
}

uint64_t sub_24A5BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  double v2 = *(uint64_t (**)(double *, uint64_t))(a1 + 40);
  double v4 = (*(double (**)(void, void))(a1 + 32))(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return v2(&v4, v1);
}

uint64_t sub_24A604()
{
  return 106;
}

void sub_24A610(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6120, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6120))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v22);
  double v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  uint64_t v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v25, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    int v12 = __p;
  }
  else {
    int v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  int64_t v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6118 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6108 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6120);
LABEL_2:
  if (byte_24F611F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6108, *((unint64_t *)&xmmword_24F6108 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6108;
    *(void *)(a1 + 16) = unk_24F6118;
  }
}

void sub_24A8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6120);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6120);
  _Unwind_Resume(a1);
}

void sub_24AA0C(_Unwind_Exception *a1)
{
}

void sub_24AA24(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6140, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F6140))
  {
    sub_5E5C(&xmmword_24F6128, "v");
    __cxa_guard_release(&qword_24F6140);
  }
  if (byte_24F613F < 0)
  {
    long long v2 = xmmword_24F6128;
    sub_4200((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6128;
    *(void *)(a1 + 16) = unk_24F6138;
  }
}

void sub_24AAD8(_Unwind_Exception *a1)
{
}

void sub_24AAF0(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "(t");
  int v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t)");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_24AF88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24B0D0()
{
}

uint64_t sub_24B0E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  long long v2 = *(uint64_t (**)(uint64_t, double *))(a1 + 32);
  double v4 = (*(double (**)(void, void))(a1 + 40))(*(void *)(a1 + 16), *(void *)(a1 + 24));
  return v2(v1, &v4);
}

uint64_t sub_24B12C()
{
  return 106;
}

void sub_24B138(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6160, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6160))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, ")o(");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    int v12 = __p;
  }
  else {
    int v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6158 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6148 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6160);
LABEL_2:
  if (byte_24F615F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6148, *((unint64_t *)&xmmword_24F6148 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6148;
    *(void *)(a1 + 16) = unk_24F6158;
  }
}

void sub_24B3E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6160);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6160);
  _Unwind_Resume(a1);
}

void sub_24B534(_Unwind_Exception *a1)
{
}

uint64_t sub_24B54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(v5 + 8);
  uint64_t v6 = v5 + 8;
  uint64_t v7 = v8;
  if (!v8) {
    return 0;
  }
  int v11 = *(char *)(a2 + 23);
  size_t v12 = v11 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
  std::string::size_type v13 = v11 >= 0 ? (const void *)a2 : *(const void **)a2;
  uint64_t v14 = v6;
  do
  {
    int v15 = *(char *)(v7 + 55);
    if (v15 >= 0) {
      size_t v16 = *(unsigned __int8 *)(v7 + 55);
    }
    else {
      size_t v16 = *(void *)(v7 + 40);
    }
    if (v15 >= 0) {
      long long v17 = (const void *)(v7 + 32);
    }
    else {
      long long v17 = *(const void **)(v7 + 32);
    }
    if (v12 >= v16) {
      size_t v18 = v16;
    }
    else {
      size_t v18 = v12;
    }
    int v19 = memcmp(v17, v13, v18);
    BOOL v20 = v16 < v12;
    if (v19) {
      BOOL v20 = v19 < 0;
    }
    BOOL v21 = !v20;
    if (v20) {
      std::string v22 = (uint64_t *)(v7 + 8);
    }
    else {
      std::string v22 = (uint64_t *)v7;
    }
    if (v21) {
      uint64_t v14 = v7;
    }
    uint64_t v7 = *v22;
  }
  while (*v22);
  if (v14 == v6) {
    return 0;
  }
  int v23 = *(char *)(v14 + 55);
  size_t v24 = v23 >= 0 ? *(unsigned __int8 *)(v14 + 55) : *(void *)(v14 + 40);
  std::string v25 = v23 >= 0 ? (const void *)(v14 + 32) : *(const void **)(v14 + 32);
  size_t v26 = v24 >= v12 ? v12 : v24;
  int v27 = memcmp(v13, v25, v26);
  BOOL v28 = v12 < v24;
  if (v27) {
    BOOL v28 = v27 < 0;
  }
  if (v28) {
    return 0;
  }
  int v30 = *(_DWORD *)(v14 + 64);
  *a5 = sub_24BC8C(a1, &v30);
  return 1;
}

void sub_24B6B0(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "(t");
  uint64_t v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  int v11 = sub_24A498(v7, "t)");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_24BB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24BC8C(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x3E8:
      operator new();
    case 0x3E9:
      operator new();
    case 0x3EA:
      operator new();
    case 0x3EB:
      operator new();
    case 0x3EC:
      operator new();
    case 0x3ED:
      operator new();
    case 0x3EE:
      operator new();
    case 0x3EF:
      operator new();
    case 0x3F0:
      operator new();
    case 0x3F1:
      operator new();
    case 0x3F2:
      operator new();
    case 0x3F3:
      operator new();
    case 0x3F4:
      operator new();
    case 0x3F5:
      operator new();
    case 0x3F6:
      operator new();
    case 0x3F7:
      operator new();
    case 0x3F8:
      operator new();
    case 0x3F9:
      operator new();
    case 0x3FA:
      operator new();
    case 0x3FB:
      operator new();
    case 0x3FC:
      operator new();
    case 0x3FD:
      operator new();
    case 0x3FE:
      operator new();
    case 0x3FF:
      operator new();
    case 0x400:
      operator new();
    case 0x401:
      operator new();
    case 0x402:
      operator new();
    case 0x403:
      operator new();
    case 0x404:
      operator new();
    case 0x405:
      operator new();
    case 0x406:
      operator new();
    default:
      return 0;
  }
}

void sub_24C3D4()
{
}

double sub_24C3E8(uint64_t a1)
{
  return (**(double **)(a1 + 8) + **(double **)(a1 + 16)) / *(double *)(a1 + 24);
}

uint64_t sub_24C404()
{
  return 107;
}

void sub_24C40C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)/t");
}

uint64_t sub_24C434(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C43C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C444(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C450()
{
}

double sub_24C464(uint64_t a1)
{
  return (**(double **)(a1 + 8) + **(double **)(a1 + 16)) * *(double *)(a1 + 24);
}

uint64_t sub_24C480()
{
  return 107;
}

void sub_24C488(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)*t");
}

uint64_t sub_24C4B0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C4B8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C4C0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C4CC()
{
}

double sub_24C4E0(uint64_t a1)
{
  return **(double **)(a1 + 8) + **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_24C4FC()
{
  return 107;
}

void sub_24C504(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)-t");
}

uint64_t sub_24C52C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C534(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C53C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C548()
{
}

double sub_24C55C(uint64_t a1)
{
  return **(double **)(a1 + 8) + **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_24C578()
{
  return 107;
}

void sub_24C580(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)+t");
}

uint64_t sub_24C5A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C5B0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C5B8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C5C4()
{
}

double sub_24C5D8(uint64_t a1)
{
  return **(double **)(a1 + 8) - **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_24C5F4()
{
  return 107;
}

void sub_24C5FC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)+t");
}

uint64_t sub_24C624(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C62C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C634(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C640()
{
}

double sub_24C654(uint64_t a1)
{
  return (**(double **)(a1 + 8) - **(double **)(a1 + 16)) / *(double *)(a1 + 24);
}

uint64_t sub_24C670()
{
  return 107;
}

void sub_24C678(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)/t");
}

uint64_t sub_24C6A0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C6A8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C6B0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C6BC()
{
}

double sub_24C6D0(uint64_t a1)
{
  return (**(double **)(a1 + 8) - **(double **)(a1 + 16)) * *(double *)(a1 + 24);
}

uint64_t sub_24C6EC()
{
  return 107;
}

void sub_24C6F4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)*t");
}

uint64_t sub_24C71C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C724(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C72C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C738()
{
}

double sub_24C74C(uint64_t a1)
{
  return **(double **)(a1 + 8) * **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_24C768()
{
  return 107;
}

void sub_24C770(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)+t");
}

uint64_t sub_24C798(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C7A0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C7A8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C7B4()
{
}

double sub_24C7C8(uint64_t a1)
{
  return **(double **)(a1 + 8) * **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_24C7E4()
{
  return 107;
}

void sub_24C7EC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)-t");
}

uint64_t sub_24C814(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C81C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C824(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C830()
{
}

double sub_24C844(uint64_t a1)
{
  return **(double **)(a1 + 8) * **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_24C860()
{
  return 107;
}

void sub_24C868(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)/t");
}

uint64_t sub_24C890(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C898(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C8A0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C8AC()
{
}

double sub_24C8C0(uint64_t a1)
{
  return **(double **)(a1 + 8) * **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_24C8DC()
{
  return 107;
}

void sub_24C8E4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)*t");
}

uint64_t sub_24C90C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C914(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C91C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C928()
{
}

double sub_24C93C(uint64_t a1)
{
  return **(double **)(a1 + 8) / **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_24C958()
{
  return 107;
}

void sub_24C960(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)+t");
}

uint64_t sub_24C988(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24C990(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24C998(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24C9A4()
{
}

double sub_24C9B8(uint64_t a1)
{
  return **(double **)(a1 + 8) / **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_24C9D4()
{
  return 107;
}

void sub_24C9DC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)-t");
}

uint64_t sub_24CA04(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CA0C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CA14(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CA20()
{
}

double sub_24CA34(uint64_t a1)
{
  return **(double **)(a1 + 8) / **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_24CA50()
{
  return 107;
}

void sub_24CA58(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)/t");
}

uint64_t sub_24CA80(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CA88(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CA90(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CA9C()
{
}

double sub_24CAB0(uint64_t a1)
{
  return **(double **)(a1 + 8) / **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_24CACC()
{
  return 107;
}

void sub_24CAD4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)*t");
}

uint64_t sub_24CAFC(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CB04(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CB0C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CB18()
{
}

double sub_24CB2C(uint64_t a1)
{
  return **(double **)(a1 + 8) / (**(double **)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_24CB48()
{
  return 107;
}

void sub_24CB50(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t+t)");
}

uint64_t sub_24CB78(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CB80(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CB88(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CB94()
{
}

double sub_24CBA8(uint64_t a1)
{
  return **(double **)(a1 + 8) / (**(double **)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_24CBC4()
{
  return 107;
}

void sub_24CBCC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t-t)");
}

uint64_t sub_24CBF4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CBFC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CC04(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CC10()
{
}

double sub_24CC24(uint64_t a1)
{
  return **(double **)(a1 + 8) / (**(double **)(a1 + 16) * *(double *)(a1 + 24));
}

uint64_t sub_24CC40()
{
  return 107;
}

void sub_24CC48(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t*t)");
}

uint64_t sub_24CC70(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CC78(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CC80(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CC8C()
{
}

double sub_24CCA0(uint64_t a1)
{
  return **(double **)(a1 + 8) / (**(double **)(a1 + 16) / *(double *)(a1 + 24));
}

uint64_t sub_24CCBC()
{
  return 107;
}

void sub_24CCC4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t/t)");
}

uint64_t sub_24CCEC(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CCF4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CCFC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CD08()
{
}

double sub_24CD1C(uint64_t a1)
{
  return **(double **)(a1 + 8) * (**(double **)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_24CD38()
{
  return 107;
}

void sub_24CD40(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t+t)");
}

uint64_t sub_24CD68(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CD70(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CD78(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CD84()
{
}

double sub_24CD98(uint64_t a1)
{
  return **(double **)(a1 + 8) * (**(double **)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_24CDB4()
{
  return 107;
}

void sub_24CDBC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t-t)");
}

uint64_t sub_24CDE4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CDEC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CDF4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CE00()
{
}

double sub_24CE14(uint64_t a1)
{
  return **(double **)(a1 + 8) * (**(double **)(a1 + 16) * *(double *)(a1 + 24));
}

uint64_t sub_24CE30()
{
  return 107;
}

void sub_24CE38(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t*t)");
}

uint64_t sub_24CE60(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CE68(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CE70(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CE7C()
{
}

double sub_24CE90(uint64_t a1)
{
  return **(double **)(a1 + 8) * (**(double **)(a1 + 16) / *(double *)(a1 + 24));
}

uint64_t sub_24CEAC()
{
  return 107;
}

void sub_24CEB4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t/t)");
}

uint64_t sub_24CEDC(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CEE4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CEEC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CEF8()
{
}

double sub_24CF0C(uint64_t a1)
{
  return **(double **)(a1 + 8) - (**(double **)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_24CF28()
{
  return 107;
}

void sub_24CF30(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t+t)");
}

uint64_t sub_24CF58(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CF60(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CF68(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CF74()
{
}

double sub_24CF88(uint64_t a1)
{
  return **(double **)(a1 + 8) - (**(double **)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_24CFA4()
{
  return 107;
}

void sub_24CFAC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t-t)");
}

uint64_t sub_24CFD4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24CFDC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24CFE4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24CFF0()
{
}

double sub_24D004(uint64_t a1)
{
  return **(double **)(a1 + 8) - **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_24D020()
{
  return 107;
}

void sub_24D028(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t/t)");
}

uint64_t sub_24D050(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24D058(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24D060(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24D06C()
{
}

double sub_24D080(uint64_t a1)
{
  return **(double **)(a1 + 8) - **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_24D09C()
{
  return 107;
}

void sub_24D0A4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t*t)");
}

uint64_t sub_24D0CC(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24D0D4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24D0DC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24D0E8()
{
}

double sub_24D0FC(uint64_t a1)
{
  return **(double **)(a1 + 8) + **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_24D118()
{
  return 107;
}

void sub_24D120(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t*t)");
}

uint64_t sub_24D148(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24D150(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24D158(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24D164()
{
}

double sub_24D178(uint64_t a1)
{
  return **(double **)(a1 + 8) + **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_24D194()
{
  return 107;
}

void sub_24D19C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t/t)");
}

uint64_t sub_24D1C4(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24D1CC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24D1D4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24D1E0()
{
}

double sub_24D1F4(uint64_t a1)
{
  return **(double **)(a1 + 8) + **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_24D210()
{
  return 107;
}

void sub_24D218(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t+t)");
}

uint64_t sub_24D240(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24D248(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24D250(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24D25C()
{
}

double sub_24D270(uint64_t a1)
{
  return **(double **)(a1 + 8) + **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_24D28C()
{
  return 107;
}

void sub_24D294(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t-t)");
}

uint64_t sub_24D2BC(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_24D2C4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_24D2CC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_24D2D8()
{
}

uint64_t sub_24D2EC(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  long long v2 = *(uint64_t (**)(double *, uint64_t))(a1 + 40);
  double v4 = (*(double (**)(void, void))(a1 + 32))(*(void *)(a1 + 8), *(void *)(a1 + 16));
  return v2(&v4, v1);
}

uint64_t sub_24D334()
{
  return 107;
}

void sub_24D340(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6180, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6180))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6178 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6168 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6180);
LABEL_2:
  if (byte_24F617F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6168, *((unint64_t *)&xmmword_24F6168 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6168;
    *(void *)(a1 + 16) = unk_24F6178;
  }
}

void sub_24D5E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6180);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6180);
  _Unwind_Resume(a1);
}

void sub_24D73C(_Unwind_Exception *a1)
{
}

void sub_24D754(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F61A0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_24F61A0))
  {
    sub_5E5C(&xmmword_24F6188, "c");
    __cxa_guard_release(&qword_24F61A0);
  }
  if (byte_24F619F < 0)
  {
    long long v2 = xmmword_24F6188;
    sub_4200((unsigned char *)a1, (void *)v2, *((unint64_t *)&v2 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6188;
    *(void *)(a1 + 16) = unk_24F6198;
  }
}

void sub_24D808(_Unwind_Exception *a1)
{
}

void sub_24D820(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "(t");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t)");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_24DCB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_24DDFC(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x3E8:
      operator new();
    case 0x3E9:
      operator new();
    case 0x3EA:
      operator new();
    case 0x3EB:
      operator new();
    case 0x3EC:
      operator new();
    case 0x3ED:
      operator new();
    case 0x3EE:
      operator new();
    case 0x3EF:
      operator new();
    case 0x3F0:
      operator new();
    case 0x3F1:
      operator new();
    case 0x3F2:
      operator new();
    case 0x3F3:
      operator new();
    case 0x3F4:
      operator new();
    case 0x3F5:
      operator new();
    case 0x3F6:
      operator new();
    case 0x3F7:
      operator new();
    case 0x3F8:
      operator new();
    case 0x3F9:
      operator new();
    case 0x3FA:
      operator new();
    case 0x3FB:
      operator new();
    case 0x3FC:
      operator new();
    case 0x3FD:
      operator new();
    case 0x3FE:
      operator new();
    case 0x3FF:
      operator new();
    case 0x400:
      operator new();
    case 0x401:
      operator new();
    case 0x402:
      operator new();
    case 0x403:
      operator new();
    case 0x404:
      operator new();
    case 0x405:
      operator new();
    case 0x406:
      operator new();
    default:
      return 0;
  }
}

void sub_24E544()
{
}

double sub_24E558(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) / **(double **)(a1 + 24);
}

uint64_t sub_24E578()
{
  return 108;
}

void sub_24E580(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)/t");
}

uint64_t sub_24E5A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E5B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E5B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E5C4()
{
}

double sub_24E5D8(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) * **(double **)(a1 + 24);
}

uint64_t sub_24E5F8()
{
  return 108;
}

void sub_24E600(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)*t");
}

uint64_t sub_24E628(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E630(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E638(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E644()
{
}

double sub_24E658(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_24E678()
{
  return 108;
}

void sub_24E680(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)-t");
}

uint64_t sub_24E6A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E6B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E6B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E6C4()
{
}

double sub_24E6D8(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_24E6F8()
{
  return 108;
}

void sub_24E700(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)+t");
}

uint64_t sub_24E728(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E730(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E738(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E744()
{
}

double sub_24E758(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_24E778()
{
  return 108;
}

void sub_24E780(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)+t");
}

uint64_t sub_24E7A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E7B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E7B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E7C4()
{
}

double sub_24E7D8(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) / **(double **)(a1 + 24);
}

uint64_t sub_24E7F8()
{
  return 108;
}

void sub_24E800(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)/t");
}

uint64_t sub_24E828(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E830(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E838(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E844()
{
}

double sub_24E858(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) * **(double **)(a1 + 24);
}

uint64_t sub_24E878()
{
  return 108;
}

void sub_24E880(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)*t");
}

uint64_t sub_24E8A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E8B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E8B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E8C4()
{
}

double sub_24E8D8(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_24E8F8()
{
  return 108;
}

void sub_24E900(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)+t");
}

uint64_t sub_24E928(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E930(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E938(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E944()
{
}

double sub_24E958(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_24E978()
{
  return 108;
}

void sub_24E980(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)-t");
}

uint64_t sub_24E9A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24E9B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24E9B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24E9C4()
{
}

double sub_24E9D8(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_24E9F8()
{
  return 108;
}

void sub_24EA00(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)/t");
}

uint64_t sub_24EA28(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EA30(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EA38(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EA44()
{
}

double sub_24EA58(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_24EA78()
{
  return 108;
}

void sub_24EA80(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)*t");
}

uint64_t sub_24EAA8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EAB0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EAB8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EAC4()
{
}

double sub_24EAD8(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_24EAF8()
{
  return 108;
}

void sub_24EB00(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)+t");
}

uint64_t sub_24EB28(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EB30(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EB38(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EB44()
{
}

double sub_24EB58(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_24EB78()
{
  return 108;
}

void sub_24EB80(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)-t");
}

uint64_t sub_24EBA8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EBB0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EBB8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EBC4()
{
}

double sub_24EBD8(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_24EBF8()
{
  return 108;
}

void sub_24EC00(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)/t");
}

uint64_t sub_24EC28(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EC30(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EC38(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EC44()
{
}

double sub_24EC58(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_24EC78()
{
  return 108;
}

void sub_24EC80(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)*t");
}

uint64_t sub_24ECA8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24ECB0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24ECB8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24ECC4()
{
}

double sub_24ECD8(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_24ECF8()
{
  return 108;
}

void sub_24ED00(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t+t)");
}

uint64_t sub_24ED28(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24ED30(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24ED38(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24ED44()
{
}

double sub_24ED58(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_24ED78()
{
  return 108;
}

void sub_24ED80(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t-t)");
}

uint64_t sub_24EDA8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EDB0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EDB8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EDC4()
{
}

double sub_24EDD8(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) * **(double **)(a1 + 24));
}

uint64_t sub_24EDF8()
{
  return 108;
}

void sub_24EE00(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t*t)");
}

uint64_t sub_24EE28(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EE30(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EE38(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EE44()
{
}

double sub_24EE58(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) / **(double **)(a1 + 24));
}

uint64_t sub_24EE78()
{
  return 108;
}

void sub_24EE80(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t/t)");
}

uint64_t sub_24EEA8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EEB0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EEB8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EEC4()
{
}

double sub_24EED8(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_24EEF8()
{
  return 108;
}

void sub_24EF00(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t+t)");
}

uint64_t sub_24EF28(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EF30(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EF38(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EF44()
{
}

double sub_24EF58(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_24EF78()
{
  return 108;
}

void sub_24EF80(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t-t)");
}

uint64_t sub_24EFA8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24EFB0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24EFB8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24EFC4()
{
}

double sub_24EFD8(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) * **(double **)(a1 + 24));
}

uint64_t sub_24EFF8()
{
  return 108;
}

void sub_24F000(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t*t)");
}

uint64_t sub_24F028(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F030(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F038(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F044()
{
}

double sub_24F058(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) / **(double **)(a1 + 24));
}

uint64_t sub_24F078()
{
  return 108;
}

void sub_24F080(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t/t)");
}

uint64_t sub_24F0A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F0B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F0B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F0C4()
{
}

double sub_24F0D8(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_24F0F8()
{
  return 108;
}

void sub_24F100(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t+t)");
}

uint64_t sub_24F128(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F130(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F138(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F144()
{
}

double sub_24F158(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_24F178()
{
  return 108;
}

void sub_24F180(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t-t)");
}

uint64_t sub_24F1A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F1B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F1B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F1C4()
{
}

double sub_24F1D8(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_24F1F8()
{
  return 108;
}

void sub_24F200(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t/t)");
}

uint64_t sub_24F228(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F230(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F238(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F244()
{
}

double sub_24F258(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_24F278()
{
  return 108;
}

void sub_24F280(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t*t)");
}

uint64_t sub_24F2A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F2B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F2B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F2C4()
{
}

double sub_24F2D8(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_24F2F8()
{
  return 108;
}

void sub_24F300(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t*t)");
}

uint64_t sub_24F328(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F330(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F338(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F344()
{
}

double sub_24F358(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_24F378()
{
  return 108;
}

void sub_24F380(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t/t)");
}

uint64_t sub_24F3A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F3B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F3B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F3C4()
{
}

double sub_24F3D8(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_24F3F8()
{
  return 108;
}

void sub_24F400(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t+t)");
}

uint64_t sub_24F428(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F430(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F438(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F444()
{
}

double sub_24F458(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_24F478()
{
  return 108;
}

void sub_24F480(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t-t)");
}

uint64_t sub_24F4A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_24F4B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_24F4B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_24F4C4()
{
}

uint64_t sub_24F4D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  long long v2 = *(uint64_t (**)(uint64_t, double *))(a1 + 32);
  double v4 = (*(double (**)(void, uint64_t))(a1 + 40))(*(void *)(a1 + 16), a1 + 24);
  return v2(v1, &v4);
}

uint64_t sub_24F520()
{
  return 107;
}

void sub_24F52C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F61C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F61C0))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, ")o(");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F61B8 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F61A8 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F61C0);
LABEL_2:
  if (byte_24F61BF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F61A8, *((unint64_t *)&xmmword_24F61A8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F61A8;
    *(void *)(a1 + 16) = unk_24F61B8;
  }
}

void sub_24F7D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F61C0);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F61C0);
  _Unwind_Resume(a1);
}

void sub_24F928(_Unwind_Exception *a1)
{
}

void sub_24F940(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "(t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "t)");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_24FDD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_24FF20()
{
}

uint64_t sub_24FF34(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  long long v2 = *(uint64_t (**)(double *, uint64_t))(a1 + 40);
  double v4 = (*(double (**)(void, uint64_t))(a1 + 32))(*(void *)(a1 + 8), a1 + 16);
  return v2(&v4, v1);
}

uint64_t sub_24FF80()
{
  return 108;
}

void sub_24FF8C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F61E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F61E0))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F61D8 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F61C8 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F61E0);
LABEL_2:
  if (byte_24F61DF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F61C8, *((unint64_t *)&xmmword_24F61C8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F61C8;
    *(void *)(a1 + 16) = unk_24F61D8;
  }
}

void sub_250234(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F61E0);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F61E0);
  _Unwind_Resume(a1);
}

void sub_250388(_Unwind_Exception *a1)
{
}

void sub_2503A0(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "(t");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t)");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_250838(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_250980()
{
}

uint64_t sub_250994(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  long long v2 = *(uint64_t (**)(uint64_t, double *))(a1 + 32);
  double v4 = (*(double (**)(uint64_t, void))(a1 + 40))(a1 + 16, *(void *)(a1 + 24));
  return v2(v1, &v4);
}

uint64_t sub_2509E0()
{
  return 108;
}

void sub_2509EC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6200, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6200))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, ")o(");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F61F8 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F61E8 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6200);
LABEL_2:
  if (byte_24F61FF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F61E8, *((unint64_t *)&xmmword_24F61E8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F61E8;
    *(void *)(a1 + 16) = unk_24F61F8;
  }
}

void sub_250C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6200);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6200);
  _Unwind_Resume(a1);
}

void sub_250DE8(_Unwind_Exception *a1)
{
}

uint64_t sub_250E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(v5 + 8);
  uint64_t v6 = v5 + 8;
  uint64_t v7 = v8;
  if (!v8) {
    return 0;
  }
  int v11 = *(char *)(a2 + 23);
  size_t v12 = v11 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
  std::string::size_type v13 = v11 >= 0 ? (const void *)a2 : *(const void **)a2;
  uint64_t v14 = v6;
  do
  {
    int v15 = *(char *)(v7 + 55);
    if (v15 >= 0) {
      size_t v16 = *(unsigned __int8 *)(v7 + 55);
    }
    else {
      size_t v16 = *(void *)(v7 + 40);
    }
    if (v15 >= 0) {
      long long v17 = (const void *)(v7 + 32);
    }
    else {
      long long v17 = *(const void **)(v7 + 32);
    }
    if (v12 >= v16) {
      size_t v18 = v16;
    }
    else {
      size_t v18 = v12;
    }
    int v19 = memcmp(v17, v13, v18);
    BOOL v20 = v16 < v12;
    if (v19) {
      BOOL v20 = v19 < 0;
    }
    BOOL v21 = !v20;
    if (v20) {
      std::string v22 = (uint64_t *)(v7 + 8);
    }
    else {
      std::string v22 = (uint64_t *)v7;
    }
    if (v21) {
      uint64_t v14 = v7;
    }
    uint64_t v7 = *v22;
  }
  while (*v22);
  if (v14 == v6) {
    return 0;
  }
  int v23 = *(char *)(v14 + 55);
  size_t v24 = v23 >= 0 ? *(unsigned __int8 *)(v14 + 55) : *(void *)(v14 + 40);
  std::string v25 = v23 >= 0 ? (const void *)(v14 + 32) : *(const void **)(v14 + 32);
  size_t v26 = v24 >= v12 ? v12 : v24;
  int v27 = memcmp(v13, v25, v26);
  BOOL v28 = v12 < v24;
  if (v27) {
    BOOL v28 = v27 < 0;
  }
  if (v28) {
    return 0;
  }
  int v30 = *(_DWORD *)(v14 + 64);
  *a5 = sub_251540(a1, &v30);
  return 1;
}

void sub_250F64(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "(t");
  uint64_t v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  int v11 = sub_24A498(v7, "t)");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_2513FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_251540(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x3E8:
      operator new();
    case 0x3E9:
      operator new();
    case 0x3EA:
      operator new();
    case 0x3EB:
      operator new();
    case 0x3EC:
      operator new();
    case 0x3ED:
      operator new();
    case 0x3EE:
      operator new();
    case 0x3EF:
      operator new();
    case 0x3F0:
      operator new();
    case 0x3F1:
      operator new();
    case 0x3F2:
      operator new();
    case 0x3F3:
      operator new();
    case 0x3F4:
      operator new();
    case 0x3F5:
      operator new();
    case 0x3F6:
      operator new();
    case 0x3F7:
      operator new();
    case 0x3F8:
      operator new();
    case 0x3F9:
      operator new();
    case 0x3FA:
      operator new();
    case 0x3FB:
      operator new();
    case 0x3FC:
      operator new();
    case 0x3FD:
      operator new();
    case 0x3FE:
      operator new();
    case 0x3FF:
      operator new();
    case 0x400:
      operator new();
    case 0x401:
      operator new();
    case 0x402:
      operator new();
    case 0x403:
      operator new();
    case 0x404:
      operator new();
    case 0x405:
      operator new();
    case 0x406:
      operator new();
    default:
      return 0;
  }
}

void sub_251C88()
{
}

double sub_251C9C(uint64_t a1)
{
  return (*(double *)(a1 + 8) + **(double **)(a1 + 16)) / **(double **)(a1 + 24);
}

uint64_t sub_251CB8()
{
  return 109;
}

void sub_251CC0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)/t");
}

double sub_251CE8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_251CF0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_251CF8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_251D04()
{
}

double sub_251D18(uint64_t a1)
{
  return (*(double *)(a1 + 8) + **(double **)(a1 + 16)) * **(double **)(a1 + 24);
}

uint64_t sub_251D34()
{
  return 109;
}

void sub_251D3C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)*t");
}

double sub_251D64(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_251D6C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_251D74(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_251D80()
{
}

double sub_251D94(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_251DB0()
{
  return 109;
}

void sub_251DB8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)-t");
}

double sub_251DE0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_251DE8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_251DF0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_251DFC()
{
}

double sub_251E10(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_251E2C()
{
  return 109;
}

void sub_251E34(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)+t");
}

double sub_251E5C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_251E64(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_251E6C(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_251E78()
{
}

double sub_251E8C(uint64_t a1)
{
  return *(double *)(a1 + 8) - **(double **)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_251EA8()
{
  return 109;
}

void sub_251EB0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)+t");
}

double sub_251ED8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_251EE0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_251EE8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_251EF4()
{
}

double sub_251F08(uint64_t a1)
{
  return (*(double *)(a1 + 8) - **(double **)(a1 + 16)) / **(double **)(a1 + 24);
}

uint64_t sub_251F24()
{
  return 109;
}

void sub_251F2C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)/t");
}

double sub_251F54(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_251F5C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_251F64(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_251F70()
{
}

double sub_251F84(uint64_t a1)
{
  return (*(double *)(a1 + 8) - **(double **)(a1 + 16)) * **(double **)(a1 + 24);
}

uint64_t sub_251FA0()
{
  return 109;
}

void sub_251FA8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)*t");
}

double sub_251FD0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_251FD8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_251FE0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_251FEC()
{
}

double sub_252000(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_25201C()
{
  return 109;
}

void sub_252024(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)+t");
}

double sub_25204C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252054(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_25205C(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252068()
{
}

double sub_25207C(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_252098()
{
  return 109;
}

void sub_2520A0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)-t");
}

double sub_2520C8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2520D0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2520D8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2520E4()
{
}

double sub_2520F8(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_252114()
{
  return 109;
}

void sub_25211C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)/t");
}

double sub_252144(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25214C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252154(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252160()
{
}

double sub_252174(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_252190()
{
  return 109;
}

void sub_252198(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)*t");
}

double sub_2521C0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2521C8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2521D0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2521DC()
{
}

double sub_2521F0(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_25220C()
{
  return 109;
}

void sub_252214(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)+t");
}

double sub_25223C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252244(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_25224C(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252258()
{
}

double sub_25226C(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_252288()
{
  return 109;
}

void sub_252290(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)-t");
}

double sub_2522B8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2522C0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2522C8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2522D4()
{
}

double sub_2522E8(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_252304()
{
  return 109;
}

void sub_25230C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)/t");
}

double sub_252334(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25233C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252344(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252350()
{
}

double sub_252364(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_252380()
{
  return 109;
}

void sub_252388(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)*t");
}

double sub_2523B0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2523B8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2523C0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2523CC()
{
}

double sub_2523E0(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_2523FC()
{
  return 109;
}

void sub_252404(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t+t)");
}

double sub_25242C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252434(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_25243C(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252448()
{
}

double sub_25245C(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_252478()
{
  return 109;
}

void sub_252480(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t-t)");
}

double sub_2524A8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2524B0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2524B8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2524C4()
{
}

double sub_2524D8(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) * **(double **)(a1 + 24));
}

uint64_t sub_2524F4()
{
  return 109;
}

void sub_2524FC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t*t)");
}

double sub_252524(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25252C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252534(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252540()
{
}

double sub_252554(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) / **(double **)(a1 + 24));
}

uint64_t sub_252570()
{
  return 109;
}

void sub_252578(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t/t)");
}

double sub_2525A0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2525A8(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2525B0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2525BC()
{
}

double sub_2525D0(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_2525EC()
{
  return 109;
}

void sub_2525F4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t+t)");
}

double sub_25261C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252624(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_25262C(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252638()
{
}

double sub_25264C(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_252668()
{
  return 109;
}

void sub_252670(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t-t)");
}

double sub_252698(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2526A0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2526A8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2526B4()
{
}

double sub_2526C8(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) * **(double **)(a1 + 24));
}

uint64_t sub_2526E4()
{
  return 109;
}

void sub_2526EC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t*t)");
}

double sub_252714(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25271C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252724(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252730()
{
}

double sub_252744(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) / **(double **)(a1 + 24));
}

uint64_t sub_252760()
{
  return 109;
}

void sub_252768(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t/t)");
}

double sub_252790(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252798(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2527A0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2527AC()
{
}

double sub_2527C0(uint64_t a1)
{
  return *(double *)(a1 + 8) - (**(double **)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_2527DC()
{
  return 109;
}

void sub_2527E4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t+t)");
}

double sub_25280C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252814(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_25281C(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252828()
{
}

double sub_25283C(uint64_t a1)
{
  return *(double *)(a1 + 8) - (**(double **)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_252858()
{
  return 109;
}

void sub_252860(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t-t)");
}

double sub_252888(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252890(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252898(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2528A4()
{
}

double sub_2528B8(uint64_t a1)
{
  return *(double *)(a1 + 8) - **(double **)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_2528D4()
{
  return 109;
}

void sub_2528DC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t/t)");
}

double sub_252904(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25290C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252914(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252920()
{
}

double sub_252934(uint64_t a1)
{
  return *(double *)(a1 + 8) - **(double **)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_252950()
{
  return 109;
}

void sub_252958(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t*t)");
}

double sub_252980(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252988(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252990(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_25299C()
{
}

double sub_2529B0(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_2529CC()
{
  return 109;
}

void sub_2529D4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t*t)");
}

double sub_2529FC(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252A04(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252A0C(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252A18()
{
}

double sub_252A2C(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_252A48()
{
  return 109;
}

void sub_252A50(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t/t)");
}

double sub_252A78(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252A80(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252A88(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252A94()
{
}

double sub_252AA8(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_252AC4()
{
  return 109;
}

void sub_252ACC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t+t)");
}

double sub_252AF4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252AFC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252B04(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252B10()
{
}

double sub_252B24(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_252B40()
{
  return 109;
}

void sub_252B48(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t-t)");
}

double sub_252B70(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_252B78(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_252B80(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_252B8C()
{
}

uint64_t sub_252BA0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  long long v2 = *(uint64_t (**)(double *, uint64_t))(a1 + 40);
  double v4 = (*(double (**)(uint64_t, void))(a1 + 32))(a1 + 8, *(void *)(a1 + 16));
  return v2(&v4, v1);
}

uint64_t sub_252BE8()
{
  return 109;
}

void sub_252BF4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6220, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6220))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6218 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6208 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6220);
LABEL_2:
  if (byte_24F621F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6208, *((unint64_t *)&xmmword_24F6208 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6208;
    *(void *)(a1 + 16) = unk_24F6218;
  }
}

void sub_252E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6220);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6220);
  _Unwind_Resume(a1);
}

void sub_252FF0(_Unwind_Exception *a1)
{
}

void sub_253008(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "(t");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t)");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_2534A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2535E8()
{
}

uint64_t sub_2535FC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  long long v2 = *(uint64_t (**)(uint64_t, double *))(a1 + 32);
  double v4 = (*(double (**)(void, void))(a1 + 40))(*(void *)(a1 + 16), *(void *)(a1 + 24));
  return v2(v1, &v4);
}

uint64_t sub_253644()
{
  return 109;
}

void sub_253650(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6240, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6240))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, ")o(");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6238 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6228 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6240);
LABEL_2:
  if (byte_24F623F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6228, *((unint64_t *)&xmmword_24F6228 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6228;
    *(void *)(a1 + 16) = unk_24F6238;
  }
}

void sub_2538F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6240);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6240);
  _Unwind_Resume(a1);
}

void sub_253A4C(_Unwind_Exception *a1)
{
}

void sub_253A64(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "(t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "t)");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_253EFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_254040(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x3E8:
      operator new();
    case 0x3E9:
      operator new();
    case 0x3EA:
      operator new();
    case 0x3EB:
      operator new();
    case 0x3EC:
      operator new();
    case 0x3ED:
      operator new();
    case 0x3EE:
      operator new();
    case 0x3EF:
      operator new();
    case 0x3F0:
      operator new();
    case 0x3F1:
      operator new();
    case 0x3F2:
      operator new();
    case 0x3F3:
      operator new();
    case 0x3F4:
      operator new();
    case 0x3F5:
      operator new();
    case 0x3F6:
      operator new();
    case 0x3F7:
      operator new();
    case 0x3F8:
      operator new();
    case 0x3F9:
      operator new();
    case 0x3FA:
      operator new();
    case 0x3FB:
      operator new();
    case 0x3FC:
      operator new();
    case 0x3FD:
      operator new();
    case 0x3FE:
      operator new();
    case 0x3FF:
      operator new();
    case 0x400:
      operator new();
    case 0x401:
      operator new();
    case 0x402:
      operator new();
    case 0x403:
      operator new();
    case 0x404:
      operator new();
    case 0x405:
      operator new();
    case 0x406:
      operator new();
    default:
      return 0;
  }
}

void sub_25478C()
{
}

double sub_2547A0(uint64_t a1)
{
  return (*(double *)(a1 + 8) + **(double **)(a1 + 16)) / *(double *)(a1 + 24);
}

uint64_t sub_2547BC()
{
  return 110;
}

void sub_2547C4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)/t");
}

double sub_2547EC(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2547F4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_2547FC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254808()
{
}

double sub_25481C(uint64_t a1)
{
  return (*(double *)(a1 + 8) + **(double **)(a1 + 16)) * *(double *)(a1 + 24);
}

uint64_t sub_254838()
{
  return 110;
}

void sub_254840(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)*t");
}

double sub_254868(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254870(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254878(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254884()
{
}

double sub_254898(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_2548B4()
{
  return 110;
}

void sub_2548BC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)-t");
}

double sub_2548E4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2548EC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_2548F4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254900()
{
}

double sub_254914(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_254930()
{
  return 110;
}

void sub_254938(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)+t");
}

double sub_254960(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254968(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254970(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25497C()
{
}

double sub_254990(uint64_t a1)
{
  return *(double *)(a1 + 8) - **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_2549AC()
{
  return 110;
}

void sub_2549B4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)+t");
}

double sub_2549DC(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2549E4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_2549EC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2549F8()
{
}

double sub_254A0C(uint64_t a1)
{
  return (*(double *)(a1 + 8) - **(double **)(a1 + 16)) / *(double *)(a1 + 24);
}

uint64_t sub_254A28()
{
  return 110;
}

void sub_254A30(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)/t");
}

double sub_254A58(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254A60(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254A68(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254A74()
{
}

double sub_254A88(uint64_t a1)
{
  return (*(double *)(a1 + 8) - **(double **)(a1 + 16)) * *(double *)(a1 + 24);
}

uint64_t sub_254AA4()
{
  return 110;
}

void sub_254AAC(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)*t");
}

double sub_254AD4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254ADC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254AE4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254AF0()
{
}

double sub_254B04(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_254B20()
{
  return 110;
}

void sub_254B28(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)+t");
}

double sub_254B50(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254B58(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254B60(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254B6C()
{
}

double sub_254B80(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_254B9C()
{
  return 110;
}

void sub_254BA4(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)-t");
}

double sub_254BCC(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254BD4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254BDC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254BE8()
{
}

double sub_254BFC(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_254C18()
{
  return 110;
}

void sub_254C20(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)/t");
}

double sub_254C48(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254C50(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254C58(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254C64()
{
}

double sub_254C78(uint64_t a1)
{
  return *(double *)(a1 + 8) * **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_254C94()
{
  return 110;
}

void sub_254C9C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)*t");
}

double sub_254CC4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254CCC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254CD4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254CE0()
{
}

double sub_254CF4(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_254D10()
{
  return 110;
}

void sub_254D18(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)+t");
}

double sub_254D40(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254D48(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254D50(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254D5C()
{
}

double sub_254D70(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_254D8C()
{
  return 110;
}

void sub_254D94(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)-t");
}

double sub_254DBC(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254DC4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254DCC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254DD8()
{
}

double sub_254DEC(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_254E08()
{
  return 110;
}

void sub_254E10(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)/t");
}

double sub_254E38(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254E40(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254E48(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254E54()
{
}

double sub_254E68(uint64_t a1)
{
  return *(double *)(a1 + 8) / **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_254E84()
{
  return 110;
}

void sub_254E8C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)*t");
}

double sub_254EB4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254EBC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254EC4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254ED0()
{
}

double sub_254EE4(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_254F00()
{
  return 110;
}

void sub_254F08(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t+t)");
}

double sub_254F30(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254F38(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254F40(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254F4C()
{
}

double sub_254F60(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_254F7C()
{
  return 110;
}

void sub_254F84(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t-t)");
}

double sub_254FAC(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_254FB4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_254FBC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_254FC8()
{
}

double sub_254FDC(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) * *(double *)(a1 + 24));
}

uint64_t sub_254FF8()
{
  return 110;
}

void sub_255000(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t*t)");
}

double sub_255028(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255030(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255038(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_255044()
{
}

double sub_255058(uint64_t a1)
{
  return *(double *)(a1 + 8) / (**(double **)(a1 + 16) / *(double *)(a1 + 24));
}

uint64_t sub_255074()
{
  return 110;
}

void sub_25507C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t/t)");
}

double sub_2550A4(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2550AC(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_2550B4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2550C0()
{
}

double sub_2550D4(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_2550F0()
{
  return 110;
}

void sub_2550F8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t+t)");
}

double sub_255120(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255128(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255130(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25513C()
{
}

double sub_255150(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_25516C()
{
  return 110;
}

void sub_255174(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t-t)");
}

double sub_25519C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_2551A4(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_2551AC(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2551B8()
{
}

double sub_2551CC(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) * *(double *)(a1 + 24));
}

uint64_t sub_2551E8()
{
  return 110;
}

void sub_2551F0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t*t)");
}

double sub_255218(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255220(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255228(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_255234()
{
}

double sub_255248(uint64_t a1)
{
  return *(double *)(a1 + 8) * (**(double **)(a1 + 16) / *(double *)(a1 + 24));
}

uint64_t sub_255264()
{
  return 110;
}

void sub_25526C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t/t)");
}

double sub_255294(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25529C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_2552A4(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2552B0()
{
}

double sub_2552C4(uint64_t a1)
{
  return *(double *)(a1 + 8) - (**(double **)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_2552E0()
{
  return 110;
}

void sub_2552E8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t+t)");
}

double sub_255310(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255318(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255320(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25532C()
{
}

double sub_255340(uint64_t a1)
{
  return *(double *)(a1 + 8) - (**(double **)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_25535C()
{
  return 110;
}

void sub_255364(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t-t)");
}

double sub_25538C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255394(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_25539C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2553A8()
{
}

double sub_2553BC(uint64_t a1)
{
  return *(double *)(a1 + 8) - **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_2553D8()
{
  return 110;
}

void sub_2553E0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t/t)");
}

double sub_255408(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255410(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255418(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_255424()
{
}

double sub_255438(uint64_t a1)
{
  return *(double *)(a1 + 8) - **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_255454()
{
  return 110;
}

void sub_25545C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t*t)");
}

double sub_255484(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25548C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255494(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2554A0()
{
}

double sub_2554B4(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_2554D0()
{
  return 110;
}

void sub_2554D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t*t)");
}

double sub_255500(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255508(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255510(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25551C()
{
}

double sub_255530(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_25554C()
{
  return 110;
}

void sub_255554(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t/t)");
}

double sub_25557C(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255584(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_25558C(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_255598()
{
}

double sub_2555AC(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_2555C8()
{
  return 110;
}

void sub_2555D0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t+t)");
}

double sub_2555F8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_255600(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255608(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_255614()
{
}

double sub_255628(uint64_t a1)
{
  return *(double *)(a1 + 8) + **(double **)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_255644()
{
  return 110;
}

void sub_25564C(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t-t)");
}

double sub_255674(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

uint64_t sub_25567C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

double sub_255684(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_255690()
{
}

uint64_t sub_2556A4(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  long long v2 = *(uint64_t (**)(double *, uint64_t))(a1 + 40);
  double v4 = (*(double (**)(uint64_t, void))(a1 + 32))(a1 + 8, *(void *)(a1 + 16));
  return v2(&v4, v1);
}

uint64_t sub_2556F0()
{
  return 110;
}

void sub_2556FC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6260, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6260))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6258 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6248 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6260);
LABEL_2:
  if (byte_24F625F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6248, *((unint64_t *)&xmmword_24F6248 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6248;
    *(void *)(a1 + 16) = unk_24F6258;
  }
}

void sub_2559A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6260);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6260);
  _Unwind_Resume(a1);
}

void sub_255AF8(_Unwind_Exception *a1)
{
}

void sub_255B10(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "(t");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t)");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_255FA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2560F0()
{
}

uint64_t sub_256104(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  long long v2 = *(uint64_t (**)(uint64_t, double *))(a1 + 32);
  double v4 = (*(double (**)(void, uint64_t))(a1 + 40))(*(void *)(a1 + 16), a1 + 24);
  return v2(v1, &v4);
}

uint64_t sub_256150()
{
  return 110;
}

void sub_25615C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6280, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6280))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, ")o(");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6278 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6268 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F6280);
LABEL_2:
  if (byte_24F627F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6268, *((unint64_t *)&xmmword_24F6268 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6268;
    *(void *)(a1 + 16) = unk_24F6278;
  }
}

void sub_256404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F6280);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F6280);
  _Unwind_Resume(a1);
}

void sub_256558(_Unwind_Exception *a1)
{
}

void sub_256570(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "(t");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t)");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_256A08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_256B4C(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x3E8:
      operator new();
    case 0x3E9:
      operator new();
    case 0x3EA:
      operator new();
    case 0x3EB:
      operator new();
    case 0x3EC:
      operator new();
    case 0x3ED:
      operator new();
    case 0x3EE:
      operator new();
    case 0x3EF:
      operator new();
    case 0x3F0:
      operator new();
    case 0x3F1:
      operator new();
    case 0x3F2:
      operator new();
    case 0x3F3:
      operator new();
    case 0x3F4:
      operator new();
    case 0x3F5:
      operator new();
    case 0x3F6:
      operator new();
    case 0x3F7:
      operator new();
    case 0x3F8:
      operator new();
    case 0x3F9:
      operator new();
    case 0x3FA:
      operator new();
    case 0x3FB:
      operator new();
    case 0x3FC:
      operator new();
    case 0x3FD:
      operator new();
    case 0x3FE:
      operator new();
    case 0x3FF:
      operator new();
    case 0x400:
      operator new();
    case 0x401:
      operator new();
    case 0x402:
      operator new();
    case 0x403:
      operator new();
    case 0x404:
      operator new();
    case 0x405:
      operator new();
    case 0x406:
      operator new();
    default:
      return 0;
  }
}

void sub_257294()
{
}

double sub_2572A8(uint64_t a1)
{
  return (*(double *)(a1 + 8) + *(double *)(a1 + 16)) / **(double **)(a1 + 24);
}

uint64_t sub_2572C0()
{
  return 0;
}

void sub_2572C8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)/t");
}

double sub_2572F0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_2572F8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257300(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_25730C()
{
}

double sub_257320(uint64_t a1)
{
  return (*(double *)(a1 + 8) + *(double *)(a1 + 16)) * **(double **)(a1 + 24);
}

uint64_t sub_257338()
{
  return 0;
}

void sub_257340(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)*t");
}

double sub_257368(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257370(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257378(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257384()
{
}

double sub_257398(uint64_t a1)
{
  return *(double *)(a1 + 8) + *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_2573B0()
{
  return 0;
}

void sub_2573B8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)-t");
}

double sub_2573E0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_2573E8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2573F0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2573FC()
{
}

double sub_257410(uint64_t a1)
{
  return *(double *)(a1 + 8) + *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_257428()
{
  return 0;
}

void sub_257430(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)+t");
}

double sub_257458(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257460(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257468(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257474()
{
}

double sub_257488(uint64_t a1)
{
  return *(double *)(a1 + 8) - *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_2574A0()
{
  return 0;
}

void sub_2574A8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)+t");
}

double sub_2574D0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_2574D8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2574E0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2574EC()
{
}

double sub_257500(uint64_t a1)
{
  return (*(double *)(a1 + 8) - *(double *)(a1 + 16)) / **(double **)(a1 + 24);
}

uint64_t sub_257518()
{
  return 0;
}

void sub_257520(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)/t");
}

double sub_257548(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257550(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257558(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257564()
{
}

double sub_257578(uint64_t a1)
{
  return (*(double *)(a1 + 8) - *(double *)(a1 + 16)) * **(double **)(a1 + 24);
}

uint64_t sub_257590()
{
  return 0;
}

void sub_257598(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)*t");
}

double sub_2575C0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_2575C8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2575D0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2575DC()
{
}

double sub_2575F0(uint64_t a1)
{
  return *(double *)(a1 + 8) * *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_257608()
{
  return 0;
}

void sub_257610(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)+t");
}

double sub_257638(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257640(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257648(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257654()
{
}

double sub_257668(uint64_t a1)
{
  return *(double *)(a1 + 8) * *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_257680()
{
  return 0;
}

void sub_257688(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)-t");
}

double sub_2576B0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_2576B8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2576C0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2576CC()
{
}

double sub_2576E0(uint64_t a1)
{
  return *(double *)(a1 + 8) * *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_2576F8()
{
  return 0;
}

void sub_257700(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)/t");
}

double sub_257728(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257730(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257738(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257744()
{
}

double sub_257758(uint64_t a1)
{
  return *(double *)(a1 + 8) * *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_257770()
{
  return 0;
}

void sub_257778(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)*t");
}

double sub_2577A0(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_2577A8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2577B0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2577BC()
{
}

double sub_2577D0(uint64_t a1)
{
  return *(double *)(a1 + 8) / *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_2577E8()
{
  return 0;
}

void sub_2577F0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)+t");
}

double sub_257818(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257820(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257828(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257834()
{
}

double sub_257848(uint64_t a1)
{
  return *(double *)(a1 + 8) / *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_257860()
{
  return 0;
}

void sub_257868(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)-t");
}

double sub_257890(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257898(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_2578A0(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2578AC()
{
}

double sub_2578C0(uint64_t a1)
{
  return *(double *)(a1 + 8) / *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_2578D8()
{
  return 0;
}

void sub_2578E0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)/t");
}

double sub_257908(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257910(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257918(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257924()
{
}

double sub_257938(uint64_t a1)
{
  return *(double *)(a1 + 8) / *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_257950()
{
  return 0;
}

void sub_257958(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)*t");
}

double sub_257980(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257988(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257990(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_25799C()
{
}

double sub_2579B0(uint64_t a1)
{
  return *(double *)(a1 + 8) / (*(double *)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_2579C8()
{
  return 0;
}

void sub_2579D0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t+t)");
}

double sub_2579F8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257A00(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257A08(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257A14()
{
}

double sub_257A28(uint64_t a1)
{
  return *(double *)(a1 + 8) / (*(double *)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_257A40()
{
  return 0;
}

void sub_257A48(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t-t)");
}

double sub_257A70(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257A78(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257A80(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257A8C()
{
}

double sub_257AA0(uint64_t a1)
{
  return *(double *)(a1 + 8) / (*(double *)(a1 + 16) * **(double **)(a1 + 24));
}

uint64_t sub_257AB8()
{
  return 0;
}

void sub_257AC0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t*t)");
}

double sub_257AE8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257AF0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257AF8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257B04()
{
}

double sub_257B18(uint64_t a1)
{
  return *(double *)(a1 + 8) / (*(double *)(a1 + 16) / **(double **)(a1 + 24));
}

uint64_t sub_257B30()
{
  return 0;
}

void sub_257B38(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t/t)");
}

double sub_257B60(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257B68(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257B70(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257B7C()
{
}

double sub_257B90(uint64_t a1)
{
  return *(double *)(a1 + 8) * (*(double *)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_257BA8()
{
  return 0;
}

void sub_257BB0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t+t)");
}

double sub_257BD8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257BE0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257BE8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257BF4()
{
}

double sub_257C08(uint64_t a1)
{
  return *(double *)(a1 + 8) * (*(double *)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_257C20()
{
  return 0;
}

void sub_257C28(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t-t)");
}

double sub_257C50(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257C58(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257C60(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257C6C()
{
}

double sub_257C80(uint64_t a1)
{
  return *(double *)(a1 + 8) * (*(double *)(a1 + 16) * **(double **)(a1 + 24));
}

uint64_t sub_257C98()
{
  return 0;
}

void sub_257CA0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t*t)");
}

double sub_257CC8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257CD0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257CD8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257CE4()
{
}

double sub_257CF8(uint64_t a1)
{
  return *(double *)(a1 + 8) * (*(double *)(a1 + 16) / **(double **)(a1 + 24));
}

uint64_t sub_257D10()
{
  return 0;
}

void sub_257D18(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t/t)");
}

double sub_257D40(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257D48(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257D50(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257D5C()
{
}

double sub_257D70(uint64_t a1)
{
  return *(double *)(a1 + 8) - (*(double *)(a1 + 16) + **(double **)(a1 + 24));
}

uint64_t sub_257D88()
{
  return 0;
}

void sub_257D90(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t+t)");
}

double sub_257DB8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257DC0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257DC8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257DD4()
{
}

double sub_257DE8(uint64_t a1)
{
  return *(double *)(a1 + 8) - (*(double *)(a1 + 16) - **(double **)(a1 + 24));
}

uint64_t sub_257E00()
{
  return 0;
}

void sub_257E08(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t-t)");
}

double sub_257E30(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257E38(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257E40(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257E4C()
{
}

double sub_257E60(uint64_t a1)
{
  return *(double *)(a1 + 8) - *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_257E78()
{
  return 0;
}

void sub_257E80(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t/t)");
}

double sub_257EA8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257EB0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257EB8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257EC4()
{
}

double sub_257ED8(uint64_t a1)
{
  return *(double *)(a1 + 8) - *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_257EF0()
{
  return 0;
}

void sub_257EF8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t*t)");
}

double sub_257F20(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257F28(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257F30(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257F3C()
{
}

double sub_257F50(uint64_t a1)
{
  return *(double *)(a1 + 8) + *(double *)(a1 + 16) * **(double **)(a1 + 24);
}

uint64_t sub_257F68()
{
  return 0;
}

void sub_257F70(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t*t)");
}

double sub_257F98(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_257FA0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_257FA8(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_257FB4()
{
}

double sub_257FC8(uint64_t a1)
{
  return *(double *)(a1 + 8) + *(double *)(a1 + 16) / **(double **)(a1 + 24);
}

uint64_t sub_257FE0()
{
  return 0;
}

void sub_257FE8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t/t)");
}

double sub_258010(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_258018(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_258020(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_25802C()
{
}

double sub_258040(uint64_t a1)
{
  return *(double *)(a1 + 8) + *(double *)(a1 + 16) + **(double **)(a1 + 24);
}

uint64_t sub_258058()
{
  return 0;
}

void sub_258060(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t+t)");
}

double sub_258088(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_258090(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_258098(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_2580A4()
{
}

double sub_2580B8(uint64_t a1)
{
  return *(double *)(a1 + 8) + *(double *)(a1 + 16) - **(double **)(a1 + 24);
}

uint64_t sub_2580D0()
{
  return 0;
}

void sub_2580D8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t-t)");
}

double sub_258100(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_258108(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

uint64_t sub_258110(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

void sub_25811C()
{
}

uint64_t sub_258130(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  long long v2 = *(uint64_t (**)(uint64_t, double *))(a1 + 32);
  double v4 = (*(double (**)(uint64_t, void))(a1 + 40))(a1 + 16, *(void *)(a1 + 24));
  return v2(v1, &v4);
}

uint64_t sub_25817C()
{
  return 0;
}

void sub_258188(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F62A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F62A0))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, ")o(");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F6298 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F6288 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F62A0);
LABEL_2:
  if (byte_24F629F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6288, *((unint64_t *)&xmmword_24F6288 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6288;
    *(void *)(a1 + 16) = unk_24F6298;
  }
}

void sub_258430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F62A0);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F62A0);
  _Unwind_Resume(a1);
}

void sub_258584(_Unwind_Exception *a1)
{
}

void sub_25859C(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  memset(&v22, 0, sizeof(v22));
  std::string::reserve(&v22, 0x40uLL);
  uint64_t v6 = sub_24A498(&v22, "(t");
  std::string::size_type v7 = v6;
  switch(a1)
  {
    case 2:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v8 = 1;
      char v21 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v8 = 2;
      char v21 = 2;
      __int16 v9 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v9;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v8 = 3;
      char v21 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v8 = 4;
      char v21 = 4;
      int v10 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v10;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v8 = 7;
      char v21 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v6, __s, v8);
  long long v11 = sub_24A498(v7, "t)");
  size_t v12 = v11;
  switch(a2)
  {
    case 2:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "+");
      break;
    case 3:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "-");
      break;
    case 4:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "*");
      break;
    case 5:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "/");
      break;
    case 6:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "%");
      break;
    case 7:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "^");
      break;
    case 14:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, "<");
      break;
    case 15:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v13 = 1;
      char v19 = 1;
      strcpy(v18, ">");
      break;
    case 22:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "and");
      break;
    case 23:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v13 = 2;
      char v19 = 2;
      __int16 v14 = 29295;
LABEL_40:
      *(_WORD *)size_t v18 = v14;
      v18[2] = 0;
      break;
    case 25:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "nor");
      break;
    case 26:
      std::string::size_type v13 = 3;
      char v19 = 3;
      strcpy(v18, "xor");
      break;
    case 27:
      std::string::size_type v13 = 4;
      char v19 = 4;
      int v15 = 1919905400;
LABEL_44:
      *(_DWORD *)size_t v18 = v15;
      v18[4] = 0;
      break;
    default:
      std::string::size_type v13 = 7;
      char v19 = 7;
      strcpy(v18, "UNKNOWN");
      break;
  }
  std::string::append(v11, v18, v13);
  size_t v16 = sub_24A498(v12, "t");
  if (SHIBYTE(v16->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a3, v16->__r_.__value_.__l.__data_, v16->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    *(void *)(a3 + 16) = *((void *)&v16->__r_.__value_.__l + 2);
    *(_OWORD *)a3 = v17;
  }
  if (v19 < 0)
  {
    operator delete(*(void **)v18);
    if ((v21 & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
LABEL_54:
      operator delete(v22.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v21 & 0x80000000) == 0)
  {
    goto LABEL_50;
  }
  operator delete(*(void **)__s);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_54;
  }
}

void sub_258A34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_258B78(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x3E8:
      operator new();
    case 0x3E9:
      operator new();
    case 0x3EA:
      operator new();
    case 0x3EB:
      operator new();
    case 0x3EC:
      operator new();
    case 0x3ED:
      operator new();
    case 0x3EE:
      operator new();
    case 0x3EF:
      operator new();
    case 0x3F0:
      operator new();
    case 0x3F1:
      operator new();
    case 0x3F2:
      operator new();
    case 0x3F3:
      operator new();
    case 0x3F4:
      operator new();
    case 0x3F5:
      operator new();
    case 0x3F6:
      operator new();
    case 0x3F7:
      operator new();
    case 0x3F8:
      operator new();
    case 0x3F9:
      operator new();
    case 0x3FA:
      operator new();
    case 0x3FB:
      operator new();
    case 0x3FC:
      operator new();
    case 0x3FD:
      operator new();
    case 0x3FE:
      operator new();
    case 0x3FF:
      operator new();
    case 0x400:
      operator new();
    case 0x401:
      operator new();
    case 0x402:
      operator new();
    case 0x403:
      operator new();
    case 0x404:
      operator new();
    case 0x405:
      operator new();
    case 0x406:
      operator new();
    default:
      return 0;
  }
}

void sub_259514()
{
}

double sub_259528(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) / *(double *)(a1 + 24);
}

uint64_t sub_259540()
{
  return 0;
}

void sub_259548(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)/t");
}

uint64_t sub_259570(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259578(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259580(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25958C()
{
}

double sub_2595A0(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) * *(double *)(a1 + 24);
}

uint64_t sub_2595B8()
{
  return 0;
}

void sub_2595C0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)*t");
}

uint64_t sub_2595E8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_2595F0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_2595F8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259604()
{
}

double sub_259618(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_259630()
{
  return 0;
}

void sub_259638(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)-t");
}

uint64_t sub_259660(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259668(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259670(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25967C()
{
}

double sub_259690(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_2596A8()
{
  return 0;
}

void sub_2596B0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t+t)+t");
}

uint64_t sub_2596D8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_2596E0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_2596E8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2596F4()
{
}

double sub_259708(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_259720()
{
  return 0;
}

void sub_259728(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)+t");
}

uint64_t sub_259750(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259758(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259760(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25976C()
{
}

double sub_259780(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) / *(double *)(a1 + 24);
}

uint64_t sub_259798()
{
  return 0;
}

void sub_2597A0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)/t");
}

uint64_t sub_2597C8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_2597D0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_2597D8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2597E4()
{
}

double sub_2597F8(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) * *(double *)(a1 + 24);
}

uint64_t sub_259810()
{
  return 0;
}

void sub_259818(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t-t)*t");
}

uint64_t sub_259840(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259848(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259850(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25985C()
{
}

double sub_259870(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_259888()
{
  return 0;
}

void sub_259890(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)+t");
}

uint64_t sub_2598B8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_2598C0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_2598C8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2598D4()
{
}

double sub_2598E8(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_259900()
{
  return 0;
}

void sub_259908(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)-t");
}

uint64_t sub_259930(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259938(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259940(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25994C()
{
}

double sub_259960(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_259978()
{
  return 0;
}

void sub_259980(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)/t");
}

uint64_t sub_2599A8(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_2599B0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_2599B8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_2599C4()
{
}

double sub_2599D8(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_2599F0()
{
  return 0;
}

void sub_2599F8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t*t)*t");
}

uint64_t sub_259A20(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259A28(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259A30(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259A3C()
{
}

double sub_259A50(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_259A68()
{
  return 0;
}

void sub_259A70(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)+t");
}

uint64_t sub_259A98(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259AA0(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259AA8(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259AB4()
{
}

double sub_259AC8(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_259AE0()
{
  return 0;
}

void sub_259AE8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)-t");
}

uint64_t sub_259B10(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259B18(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259B20(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259B2C()
{
}

double sub_259B40(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_259B58()
{
  return 0;
}

void sub_259B60(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)/t");
}

uint64_t sub_259B88(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259B90(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259B98(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259BA4()
{
}

double sub_259BB8(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_259BD0()
{
  return 0;
}

void sub_259BD8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "(t/t)*t");
}

uint64_t sub_259C00(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259C08(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259C10(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259C1C()
{
}

double sub_259C30(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_259C48()
{
  return 0;
}

void sub_259C50(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t+t)");
}

uint64_t sub_259C78(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259C80(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259C88(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259C94()
{
}

double sub_259CA8(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_259CC0()
{
  return 0;
}

void sub_259CC8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t-t)");
}

uint64_t sub_259CF0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259CF8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259D00(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259D0C()
{
}

double sub_259D20(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) * *(double *)(a1 + 24));
}

uint64_t sub_259D38()
{
  return 0;
}

void sub_259D40(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t*t)");
}

uint64_t sub_259D68(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259D70(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259D78(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259D84()
{
}

double sub_259D98(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) / *(double *)(a1 + 24));
}

uint64_t sub_259DB0()
{
  return 0;
}

void sub_259DB8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t/(t/t)");
}

uint64_t sub_259DE0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259DE8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259DF0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259DFC()
{
}

double sub_259E10(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_259E28()
{
  return 0;
}

void sub_259E30(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t+t)");
}

uint64_t sub_259E58(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259E60(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259E68(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259E74()
{
}

double sub_259E88(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_259EA0()
{
  return 0;
}

void sub_259EA8(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t-t)");
}

uint64_t sub_259ED0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259ED8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259EE0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259EEC()
{
}

double sub_259F00(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) * *(double *)(a1 + 24));
}

uint64_t sub_259F18()
{
  return 0;
}

void sub_259F20(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t*t)");
}

uint64_t sub_259F48(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259F50(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259F58(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259F64()
{
}

double sub_259F78(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) / *(double *)(a1 + 24));
}

uint64_t sub_259F90()
{
  return 0;
}

void sub_259F98(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t*(t/t)");
}

uint64_t sub_259FC0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_259FC8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_259FD0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_259FDC()
{
}

double sub_259FF0(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) + *(double *)(a1 + 24));
}

uint64_t sub_25A008()
{
  return 0;
}

void sub_25A010(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t+t)");
}

uint64_t sub_25A038(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A040(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A048(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A054()
{
}

double sub_25A068(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_25A080()
{
  return 0;
}

void sub_25A088(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t-t)");
}

uint64_t sub_25A0B0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A0B8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A0C0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A0CC()
{
}

double sub_25A0E0(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_25A0F8()
{
  return 0;
}

void sub_25A100(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t/t)");
}

uint64_t sub_25A128(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A130(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A138(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A144()
{
}

double sub_25A158(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_25A170()
{
  return 0;
}

void sub_25A178(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t-(t*t)");
}

uint64_t sub_25A1A0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A1A8(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A1B0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A1BC()
{
}

double sub_25A1D0(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) * *(double *)(a1 + 24);
}

uint64_t sub_25A1E8()
{
  return 0;
}

void sub_25A1F0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t*t)");
}

uint64_t sub_25A218(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A220(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A228(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A234()
{
}

double sub_25A248(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) / *(double *)(a1 + 24);
}

uint64_t sub_25A260()
{
  return 0;
}

void sub_25A268(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t/t)");
}

uint64_t sub_25A290(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A298(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A2A0(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A2AC()
{
}

double sub_25A2C0(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + *(double *)(a1 + 24);
}

uint64_t sub_25A2D8()
{
  return 0;
}

void sub_25A2E0(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t+t)");
}

uint64_t sub_25A308(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A310(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A318(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A324()
{
}

double sub_25A338(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) - *(double *)(a1 + 24);
}

uint64_t sub_25A350()
{
  return 0;
}

void sub_25A358(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "t+(t-t)");
}

uint64_t sub_25A380(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_25A388(uint64_t a1)
{
  return *(double *)(a1 + 16);
}

double sub_25A390(uint64_t a1)
{
  return *(double *)(a1 + 24);
}

void sub_25A39C()
{
}

uint64_t sub_25A3B0(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  long long v2 = *(uint64_t (**)(double *, uint64_t))(a1 + 40);
  double v4 = (*(double (**)(void, uint64_t))(a1 + 32))(*(void *)(a1 + 8), a1 + 16);
  return v2(&v4, v1);
}

uint64_t sub_25A3FC()
{
  return 0;
}

void sub_25A408(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F62C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F62C0))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v22);
  long long v2 = std::string::insert(&v22, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v23.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v23, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v20);
  if ((v21 & 0x80u) == 0) {
    uint64_t v6 = v20;
  }
  else {
    uint64_t v6 = (void **)v20[0];
  }
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v7 = v21;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v20[1];
  }
  std::string::size_type v8 = std::string::append(&v24, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v25, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v19 & 0x80u) == 0) {
    size_t v12 = __p;
  }
  else {
    size_t v12 = (void **)__p[0];
  }
  if ((v19 & 0x80u) == 0) {
    std::string::size_type v13 = v19;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)__p[1];
  }
  __int16 v14 = std::string::append(&v26, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  size_t v16 = std::string::append(&v27, ")");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  unk_24F62B8 = *((void *)&v16->__r_.__value_.__l + 2);
  xmmword_24F62A8 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v27.__r_.__value_.__l.__data_);
    if (((char)v19 & 0x80000000) == 0)
    {
LABEL_20:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_29;
    }
  }
  else if (((char)v19 & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if (((char)v21 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  operator delete(v25.__r_.__value_.__l.__data_);
  if (((char)v21 & 0x80000000) == 0)
  {
LABEL_23:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  operator delete(v20[0]);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_24:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_25;
    }
LABEL_33:
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_26;
    }
LABEL_34:
    operator delete(v22.__r_.__value_.__l.__data_);
    goto LABEL_26;
  }
LABEL_32:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_33;
  }
LABEL_25:
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_34;
  }
LABEL_26:
  __cxa_guard_release(&qword_24F62C0);
LABEL_2:
  if (byte_24F62BF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F62A8, *((unint64_t *)&xmmword_24F62A8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F62A8;
    *(void *)(a1 + 16) = unk_24F62B8;
  }
}

void sub_25A6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (*(char *)(v40 - 41) < 0)
  {
    operator delete(*(void **)(v40 - 64));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v40 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v40 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v40 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v40 - 96));
  if ((*(char *)(v40 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(*(void **)(v40 - 128));
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_9:
    __cxa_guard_abort(&qword_24F62C0);
    _Unwind_Resume(a1);
  }
LABEL_17:
  operator delete(a22);
  __cxa_guard_abort(&qword_24F62C0);
  _Unwind_Resume(a1);
}

void sub_25A804(_Unwind_Exception *a1)
{
}

void sub_25A81C(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)std::string v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)std::string v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  unsigned __int8 v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  std::string v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_25AEBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_25B094()
{
}

uint64_t sub_25B0A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(void, void))(a1 + 40))(*(void *)(a1 + 8), *(void *)(a1 + 16));
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_25B110(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F62E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F62E0))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F62D8 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F62C8 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F62E0);
LABEL_2:
  if (byte_24F62DF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F62C8, *((unint64_t *)&xmmword_24F62C8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F62C8;
    *(void *)(a1 + 16) = unk_24F62D8;
  }
}

void sub_25B4A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F62E0);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F62E0);
  _Unwind_Resume(a1);
}

void sub_25B66C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x25B630);
  }
  JUMPOUT(0x25B4FCLL);
}

void sub_25B67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x25B640);
  }
  JUMPOUT(0x25B504);
}

void sub_25B68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x25B650);
  }
  JUMPOUT(0x25B50CLL);
}

void sub_25B69C(_Unwind_Exception *a1)
{
}

void sub_25B6B4(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_25BD54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_25BF2C()
{
}

uint64_t sub_25BF40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = a1 + 32;
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(void, void))(a1 + 40))(*(void *)(a1 + 8), *(void *)(a1 + 16));
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_25BFAC(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6300, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6300))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F62F8 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F62E8 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F6300);
LABEL_2:
  if (byte_24F62FF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F62E8, *((unint64_t *)&xmmword_24F62E8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F62E8;
    *(void *)(a1 + 16) = unk_24F62F8;
  }
}

void sub_25C344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F6300);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6300);
  _Unwind_Resume(a1);
}

void sub_25C508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x25C4CCLL);
  }
  JUMPOUT(0x25C398);
}

void sub_25C518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x25C4DCLL);
  }
  JUMPOUT(0x25C3A0);
}

void sub_25C528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x25C4ECLL);
  }
  JUMPOUT(0x25C3A8);
}

void sub_25C538(_Unwind_Exception *a1)
{
}

void sub_25C550(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_25CBF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_25CDC8()
{
}

uint64_t sub_25CDDC(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(void, void))(a1 + 40))(*(void *)(a1 + 8), *(void *)(a1 + 16));
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_25CE44(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6320, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6320))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F6318 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F6308 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F6320);
LABEL_2:
  if (byte_24F631F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6308, *((unint64_t *)&xmmword_24F6308 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6308;
    *(void *)(a1 + 16) = unk_24F6318;
  }
}

void sub_25D1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F6320);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6320);
  _Unwind_Resume(a1);
}

void sub_25D3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x25D364);
  }
  JUMPOUT(0x25D230);
}

void sub_25D3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x25D374);
  }
  JUMPOUT(0x25D238);
}

void sub_25D3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x25D384);
  }
  JUMPOUT(0x25D240);
}

void sub_25D3D0(_Unwind_Exception *a1)
{
}

void sub_25D3E8(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_25DA88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_25DC60()
{
}

uint64_t sub_25DC74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(void, uint64_t))(a1 + 40))(*(void *)(a1 + 8), a1 + 16);
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_25DCE0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6340, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6340))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F6338 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F6328 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F6340);
LABEL_2:
  if (byte_24F633F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6328, *((unint64_t *)&xmmword_24F6328 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6328;
    *(void *)(a1 + 16) = unk_24F6338;
  }
}

void sub_25E078(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F6340);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6340);
  _Unwind_Resume(a1);
}

void sub_25E23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x25E200);
  }
  JUMPOUT(0x25E0CCLL);
}

void sub_25E24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x25E210);
  }
  JUMPOUT(0x25E0D4);
}

void sub_25E25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x25E220);
  }
  JUMPOUT(0x25E0DCLL);
}

void sub_25E26C(_Unwind_Exception *a1)
{
}

void sub_25E284(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_25E924(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_25EAFC()
{
}

uint64_t sub_25EB10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(uint64_t, void))(a1 + 40))(a1 + 8, *(void *)(a1 + 16));
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_25EB78(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6360, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6360))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F6358 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F6348 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F6360);
LABEL_2:
  if (byte_24F635F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6348, *((unint64_t *)&xmmword_24F6348 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6348;
    *(void *)(a1 + 16) = unk_24F6358;
  }
}

void sub_25EF10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F6360);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6360);
  _Unwind_Resume(a1);
}

void sub_25F0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x25F098);
  }
  JUMPOUT(0x25EF64);
}

void sub_25F0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x25F0A8);
  }
  JUMPOUT(0x25EF6CLL);
}

void sub_25F0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x25F0B8);
  }
  JUMPOUT(0x25EF74);
}

void sub_25F104(_Unwind_Exception *a1)
{
}

void sub_25F11C(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_25F7BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_25F994()
{
}

uint64_t sub_25F9A8(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(uint64_t, void))(a1 + 40))(a1 + 8, *(void *)(a1 + 16));
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_25FA14(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6380, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6380))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F6378 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F6368 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F6380);
LABEL_2:
  if (byte_24F637F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6368, *((unint64_t *)&xmmword_24F6368 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6368;
    *(void *)(a1 + 16) = unk_24F6378;
  }
}

void sub_25FDAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F6380);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6380);
  _Unwind_Resume(a1);
}

void sub_25FF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x25FF34);
  }
  JUMPOUT(0x25FE00);
}

void sub_25FF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x25FF44);
  }
  JUMPOUT(0x25FE08);
}

void sub_25FF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x25FF54);
  }
  JUMPOUT(0x25FE10);
}

void sub_25FFA0(_Unwind_Exception *a1)
{
}

void sub_25FFB8(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_260658(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_260830()
{
}

uint64_t sub_260844(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = a1 + 32;
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(void, uint64_t))(a1 + 40))(*(void *)(a1 + 8), a1 + 16);
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_2608B4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F63A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F63A0))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F6398 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F6388 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F63A0);
LABEL_2:
  if (byte_24F639F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6388, *((unint64_t *)&xmmword_24F6388 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6388;
    *(void *)(a1 + 16) = unk_24F6398;
  }
}

void sub_260C4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F63A0);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F63A0);
  _Unwind_Resume(a1);
}

void sub_260E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x260DD4);
  }
  JUMPOUT(0x260CA0);
}

void sub_260E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x260DE4);
  }
  JUMPOUT(0x260CA8);
}

void sub_260E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x260DF4);
  }
  JUMPOUT(0x260CB0);
}

void sub_260E40(_Unwind_Exception *a1)
{
}

void sub_260E58(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_2614F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_2616D0()
{
}

uint64_t sub_2616E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = a1 + 32;
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(uint64_t, void))(a1 + 40))(a1 + 8, *(void *)(a1 + 16));
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_261750(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F63C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F63C0))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F63B8 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F63A8 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F63C0);
LABEL_2:
  if (byte_24F63BF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F63A8, *((unint64_t *)&xmmword_24F63A8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F63A8;
    *(void *)(a1 + 16) = unk_24F63B8;
  }
}

void sub_261AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F63C0);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F63C0);
  _Unwind_Resume(a1);
}

void sub_261CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x261C70);
  }
  JUMPOUT(0x261B3CLL);
}

void sub_261CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x261C80);
  }
  JUMPOUT(0x261B44);
}

void sub_261CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x261C90);
  }
  JUMPOUT(0x261B4CLL);
}

void sub_261CDC(_Unwind_Exception *a1)
{
}

void sub_261CF4(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "(t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "t)");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_262394(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_262568(uint64_t a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0x7D0:
      operator new();
    case 0x7D1:
      operator new();
    case 0x7D2:
      operator new();
    case 0x7D3:
      operator new();
    case 0x7D4:
      operator new();
    case 0x7D5:
      operator new();
    case 0x7D6:
      operator new();
    case 0x7D7:
      operator new();
    case 0x7D8:
      operator new();
    case 0x7D9:
      operator new();
    case 0x7DA:
      operator new();
    case 0x7DB:
      operator new();
    case 0x7DC:
      operator new();
    case 0x7DD:
      operator new();
    case 0x7DE:
      operator new();
    case 0x7DF:
      operator new();
    case 0x7E0:
      operator new();
    case 0x7E1:
      operator new();
    case 0x7E2:
      operator new();
    case 0x7E3:
      operator new();
    case 0x7E4:
      operator new();
    case 0x7E5:
      operator new();
    case 0x7E6:
      operator new();
    case 0x7E7:
      operator new();
    case 0x7E8:
      operator new();
    case 0x7E9:
      operator new();
    case 0x7EA:
      operator new();
    case 0x7EB:
      operator new();
    case 0x7EC:
      operator new();
    case 0x7ED:
      operator new();
    case 0x7EE:
      operator new();
    case 0x7EF:
      operator new();
    case 0x7F0:
      operator new();
    case 0x7F1:
      operator new();
    case 0x7F2:
      operator new();
    case 0x7F3:
      operator new();
    case 0x7F4:
      operator new();
    case 0x7F5:
      operator new();
    case 0x7F6:
      operator new();
    case 0x7F7:
      operator new();
    case 0x7F8:
      operator new();
    case 0x7F9:
      operator new();
    case 0x7FA:
      operator new();
    case 0x7FB:
      operator new();
    case 0x7FC:
      operator new();
    case 0x7FD:
      operator new();
    case 0x7FE:
      operator new();
    case 0x7FF:
      operator new();
    case 0x800:
      operator new();
    case 0x801:
      operator new();
    case 0x802:
      operator new();
    case 0x803:
      operator new();
    case 0x804:
      operator new();
    case 0x805:
      operator new();
    case 0x806:
      operator new();
    case 0x807:
      operator new();
    case 0x808:
      operator new();
    case 0x809:
      operator new();
    case 0x80A:
      operator new();
    case 0x80B:
      operator new();
    case 0x80C:
      operator new();
    case 0x80D:
      operator new();
    default:
      switch(*a2)
      {
        case 0x418:
          operator new();
        case 0x419:
          operator new();
        case 0x41A:
          operator new();
        case 0x41B:
          operator new();
        case 0x41C:
          operator new();
        case 0x41D:
          operator new();
        case 0x41E:
          operator new();
        case 0x41F:
          operator new();
        case 0x420:
          operator new();
        case 0x421:
          operator new();
        case 0x422:
          operator new();
        case 0x423:
          operator new();
        case 0x424:
          operator new();
        case 0x425:
          operator new();
        case 0x426:
          operator new();
        case 0x427:
          operator new();
        case 0x428:
          operator new();
        case 0x429:
          operator new();
        case 0x42A:
          operator new();
        case 0x42B:
          operator new();
        case 0x42C:
          operator new();
        case 0x42D:
          operator new();
        case 0x42E:
          operator new();
        case 0x42F:
          operator new();
        case 0x430:
          operator new();
        case 0x431:
          operator new();
        case 0x432:
          operator new();
        case 0x433:
          operator new();
        case 0x434:
          operator new();
        case 0x435:
          operator new();
        case 0x436:
          operator new();
        case 0x437:
          operator new();
        case 0x438:
          operator new();
        case 0x439:
          operator new();
        case 0x43A:
          operator new();
        case 0x43B:
          operator new();
        default:
          return 0;
      }
  }
}

void sub_263B88()
{
}

double sub_263B9C(uint64_t a1)
{
  return **(double **)(a1 + 8) + (*(double *)(a1 + 16) + *(double *)(a1 + 24)) / **(double **)(a1 + 32);
}

uint64_t sub_263BC0()
{
  return 119;
}

void sub_263BC8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t+t)/t)");
}

void sub_263BF8()
{
}

double sub_263C0C(uint64_t a1)
{
  return **(double **)(a1 + 8) + (*(double *)(a1 + 16) + *(double *)(a1 + 24)) * **(double **)(a1 + 32);
}

uint64_t sub_263C30()
{
  return 119;
}

void sub_263C38(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t+t)*t)");
}

void sub_263C68()
{
}

double sub_263C7C(uint64_t a1)
{
  return **(double **)(a1 + 8) + (*(double *)(a1 + 16) - *(double *)(a1 + 24)) / **(double **)(a1 + 32);
}

uint64_t sub_263CA0()
{
  return 119;
}

void sub_263CA8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t-t)/t)");
}

void sub_263CD8()
{
}

double sub_263CEC(uint64_t a1)
{
  return **(double **)(a1 + 8) + (*(double *)(a1 + 16) - *(double *)(a1 + 24)) * **(double **)(a1 + 32);
}

uint64_t sub_263D10()
{
  return 119;
}

void sub_263D18(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t-t)*t)");
}

void sub_263D48()
{
}

double sub_263D5C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) * *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_263D80()
{
  return 119;
}

void sub_263D88(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t*t)/t)");
}

void sub_263DB8()
{
}

double sub_263DCC(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) * *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_263DF0()
{
  return 119;
}

void sub_263DF8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t*t)*t)");
}

void sub_263E28()
{
}

double sub_263E3C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) / *(double *)(a1 + 24) + **(double **)(a1 + 32);
}

uint64_t sub_263E60()
{
  return 119;
}

void sub_263E68(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t/t)+t)");
}

void sub_263E98()
{
}

double sub_263EAC(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) / *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_263ED0()
{
  return 119;
}

void sub_263ED8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t/t)/t)");
}

void sub_263F08()
{
}

double sub_263F1C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) / *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_263F40()
{
  return 119;
}

void sub_263F48(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+((t/t)*t)");
}

void sub_263F78()
{
}

double sub_263F8C(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) + *(double *)(a1 + 24)) / **(double **)(a1 + 32);
}

uint64_t sub_263FB0()
{
  return 119;
}

void sub_263FB8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t+t)/t)");
}

void sub_263FE8()
{
}

double sub_263FFC(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) + *(double *)(a1 + 24)) * **(double **)(a1 + 32);
}

uint64_t sub_264020()
{
  return 119;
}

void sub_264028(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t+t)*t)");
}

void sub_264058()
{
}

double sub_26406C(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) - *(double *)(a1 + 24)) / **(double **)(a1 + 32);
}

uint64_t sub_264090()
{
  return 119;
}

void sub_264098(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t-t)/t)");
}

void sub_2640C8()
{
}

double sub_2640DC(uint64_t a1)
{
  return **(double **)(a1 + 8) - (*(double *)(a1 + 16) - *(double *)(a1 + 24)) * **(double **)(a1 + 32);
}

uint64_t sub_264100()
{
  return 119;
}

void sub_264108(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t-t)*t)");
}

void sub_264138()
{
}

double sub_26414C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) * *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264170()
{
  return 119;
}

void sub_264178(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t*t)/t)");
}

void sub_2641A8()
{
}

double sub_2641BC(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) * *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_2641E0()
{
  return 119;
}

void sub_2641E8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t*t)*t)");
}

void sub_264218()
{
}

double sub_26422C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) / *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264250()
{
  return 119;
}

void sub_264258(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t/t)/t)");
}

void sub_264288()
{
}

double sub_26429C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) / *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_2642C0()
{
  return 119;
}

void sub_2642C8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-((t/t)*t)");
}

void sub_2642F8()
{
}

double sub_26430C(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) * *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_264330()
{
  return 119;
}

void sub_264338(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t+t)*t)-t");
}

void sub_264368()
{
}

double sub_26437C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) * *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_2643A0()
{
  return 119;
}

void sub_2643A8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t-t)*t)-t");
}

void sub_2643D8()
{
}

double sub_2643EC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) * *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_264410()
{
  return 119;
}

void sub_264418(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t*t)*t)-t");
}

void sub_264448()
{
}

double sub_26445C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) * *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_264480()
{
  return 119;
}

void sub_264488(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t/t)*t)-t");
}

void sub_2644B8()
{
}

double sub_2644CC(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) / *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_2644F0()
{
  return 119;
}

void sub_2644F8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t+t)/t)-t");
}

void sub_264528()
{
}

double sub_26453C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) / *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_264560()
{
  return 119;
}

void sub_264568(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t-t)/t)-t");
}

void sub_264598()
{
}

double sub_2645AC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) / *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_2645D0()
{
  return 119;
}

void sub_2645D8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t*t)/t)-t");
}

void sub_264608()
{
}

double sub_26461C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) / *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_264640()
{
  return 119;
}

void sub_264648(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t/t)/t)-t");
}

void sub_264678()
{
}

double sub_26468C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) + *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_2646B0()
{
  return 119;
}

void sub_2646B8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)+(t*t)");
}

void sub_2646E8()
{
}

double sub_2646FC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) - *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_264720()
{
  return 119;
}

void sub_264728(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)-(t*t)");
}

void sub_264758()
{
}

double sub_26476C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) + *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264790()
{
  return 119;
}

void sub_264798(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)+(t/t)");
}

void sub_2647C8()
{
}

double sub_2647DC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) - *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264800()
{
  return 119;
}

void sub_264808(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)-(t/t)");
}

void sub_264838()
{
}

double sub_26484C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) + *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264870()
{
  return 119;
}

void sub_264878(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)+(t/t)");
}

void sub_2648A8()
{
}

double sub_2648BC(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) - *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_2648E0()
{
  return 119;
}

void sub_2648E8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)-(t/t)");
}

void sub_264918()
{
}

double sub_26492C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) - *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_264950()
{
  return 119;
}

void sub_264958(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)-(t*t)");
}

void sub_264988()
{
}

double sub_26499C(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) + *(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_2649C0()
{
  return 119;
}

void sub_2649C8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t/(t+(t*t))");
}

void sub_2649F8()
{
}

double sub_264A0C(uint64_t a1)
{
  return **(double **)(a1 + 8) / (*(double *)(a1 + 16) - *(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_264A30()
{
  return 119;
}

void sub_264A38(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t/(t-(t*t))");
}

void sub_264A68()
{
}

double sub_264A7C(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) + *(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_264AA0()
{
  return 119;
}

void sub_264AA8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t*(t+(t*t))");
}

void sub_264AD8()
{
}

double sub_264AEC(uint64_t a1)
{
  return **(double **)(a1 + 8) * (*(double *)(a1 + 16) - *(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_264B10()
{
  return 119;
}

void sub_264B18(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t*(t-(t*t))");
}

void sub_264B48()
{
}

double sub_264B5C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) - *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_264B80()
{
  return 119;
}

void sub_264B88(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)-(t*t)");
}

void sub_264BB8()
{
}

double sub_264BCC(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) - *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264BF0()
{
  return 119;
}

void sub_264BF8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)-(t/t)");
}

void sub_264C28()
{
}

double sub_264C3C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_264C60()
{
  return 119;
}

void sub_264C68(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)+(t*t)");
}

void sub_264C98()
{
}

double sub_264CAC(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264CD0()
{
  return 119;
}

void sub_264CD8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)+(t/t)");
}

void sub_264D08()
{
}

double sub_264D1C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) + *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_264D40()
{
  return 119;
}

void sub_264D48(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)+(t*t)");
}

void sub_264D78()
{
}

double sub_264D8C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) + *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264DB0()
{
  return 119;
}

void sub_264DB8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)+(t/t)");
}

void sub_264DE8()
{
}

double sub_264DFC(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) - *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_264E20()
{
  return 119;
}

void sub_264E28(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)-(t*t)");
}

void sub_264E58()
{
}

double sub_264E6C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) - *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_264E90()
{
  return 119;
}

void sub_264E98(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)-(t/t)");
}

void sub_264EC8()
{
}

double sub_264EDC(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) - (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_264F00()
{
  return 119;
}

void sub_264F08(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)-(t-t)");
}

void sub_264F38()
{
}

double sub_264F4C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_264F70()
{
  return 119;
}

void sub_264F78(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)+(t-t)");
}

void sub_264FA8()
{
}

double sub_264FBC(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) + *(double *)(a1 + 24) + **(double **)(a1 + 32);
}

uint64_t sub_264FE0()
{
  return 119;
}

void sub_264FE8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)+(t+t)");
}

void sub_265018()
{
}

double sub_26502C(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) * (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_265050()
{
  return 119;
}

void sub_265058(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)*(t-t)");
}

void sub_265088()
{
}

double sub_26509C(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) / (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_2650C0()
{
  return 119;
}

void sub_2650C8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)/(t-t)");
}

void sub_2650F8()
{
}

double sub_26510C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) - (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_265130()
{
  return 119;
}

void sub_265138(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)-(t+t)");
}

void sub_265168()
{
}

double sub_26517C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) + *(double *)(a1 + 24) + **(double **)(a1 + 32);
}

uint64_t sub_2651A0()
{
  return 119;
}

void sub_2651A8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)+(t+t)");
}

void sub_2651D8()
{
}

double sub_2651EC(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) * (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_265210()
{
  return 119;
}

void sub_265218(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)*(t+t)");
}

void sub_265248()
{
}

double sub_26525C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) / (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_265280()
{
  return 119;
}

void sub_265288(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)/(t+t)");
}

void sub_2652B8()
{
}

double sub_2652CC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) - (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_2652F0()
{
  return 119;
}

void sub_2652F8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)-(t+t)");
}

void sub_265328()
{
}

double sub_26533C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) - (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_265360()
{
  return 119;
}

void sub_265368(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)-(t+t)");
}

void sub_265398()
{
}

double sub_2653AC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) + *(double *)(a1 + 24) + **(double **)(a1 + 32);
}

uint64_t sub_2653D0()
{
  return 119;
}

void sub_2653D8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)+(t+t)");
}

void sub_265408()
{
}

double sub_26541C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) + *(double *)(a1 + 24) + **(double **)(a1 + 32);
}

uint64_t sub_265440()
{
  return 119;
}

void sub_265448(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)+(t+t)");
}

void sub_265478()
{
}

double sub_26548C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) + *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_2654B0()
{
  return 119;
}

void sub_2654B8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)+(t-t)");
}

void sub_2654E8()
{
}

double sub_2654FC(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) + *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_265520()
{
  return 119;
}

void sub_265528(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)+(t-t)");
}

void sub_265558()
{
}

double sub_26556C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) - (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_265590()
{
  return 119;
}

void sub_265598(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)-(t-t)");
}

void sub_2655C8()
{
}

double sub_2655DC(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) - (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_265600()
{
  return 119;
}

void sub_265608(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)-(t-t)");
}

void sub_265638()
{
}

double sub_26564C(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) * (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_265670()
{
  return 119;
}

void sub_265678(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)*(t*t)");
}

void sub_2656A8()
{
}

double sub_2656BC(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) * (*(double *)(a1 + 24) / **(double **)(a1 + 32));
}

uint64_t sub_2656E0()
{
  return 119;
}

void sub_2656E8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)*(t/t)");
}

void sub_265718()
{
}

double sub_26572C(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) / (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_265750()
{
  return 119;
}

void sub_265758(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)/(t*t)");
}

void sub_265788()
{
}

double sub_26579C(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) / (*(double *)(a1 + 24) / **(double **)(a1 + 32));
}

uint64_t sub_2657C0()
{
  return 119;
}

void sub_2657C8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)/(t/t)");
}

void sub_2657F8()
{
}

double sub_26580C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) / (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_265830()
{
  return 119;
}

void sub_265838(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)/(t*t)");
}

void sub_265868()
{
}

double sub_26587C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) / (*(double *)(a1 + 24) / **(double **)(a1 + 32));
}

uint64_t sub_2658A0()
{
  return 119;
}

void sub_2658A8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)/(t/t)");
}

void sub_2658D8()
{
}

double sub_2658EC(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) * (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_265910()
{
  return 119;
}

void sub_265918(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)*(t*t)");
}

void sub_265948()
{
}

double sub_26595C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) * (*(double *)(a1 + 24) / **(double **)(a1 + 32));
}

uint64_t sub_265980()
{
  return 119;
}

void sub_265988(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)*(t/t)");
}

void sub_2659B8()
{
}

double sub_2659CC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) * (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_2659F0()
{
  return 119;
}

void sub_2659F8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)*(t+t)");
}

void sub_265A28()
{
}

double sub_265A3C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) * (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_265A60()
{
  return 119;
}

void sub_265A68(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)*(t+t)");
}

void sub_265A98()
{
}

double sub_265AAC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) / (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_265AD0()
{
  return 119;
}

void sub_265AD8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)/(t+t)");
}

void sub_265B08()
{
}

double sub_265B1C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) / (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_265B40()
{
  return 119;
}

void sub_265B48(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)/(t+t)");
}

void sub_265B78()
{
}

double sub_265B8C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) / (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_265BB0()
{
  return 119;
}

void sub_265BB8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)/(t-t)");
}

void sub_265BE8()
{
}

double sub_265BFC(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) / (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_265C20()
{
  return 119;
}

void sub_265C28(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)/(t-t)");
}

void sub_265C58()
{
}

double sub_265C6C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) * (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_265C90()
{
  return 119;
}

void sub_265C98(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)*(t-t)");
}

void sub_265CC8()
{
}

double sub_265CDC(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) / (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_265D00()
{
  return 119;
}

void sub_265D08(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)/(t*t)");
}

void sub_265D38()
{
}

double sub_265D4C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) * (*(double *)(a1 + 24) / **(double **)(a1 + 32));
}

uint64_t sub_265D70()
{
  return 119;
}

void sub_265D78(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)*(t/t)");
}

void sub_265DA8()
{
}

double sub_265DBC(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) * (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_265DE0()
{
  return 119;
}

void sub_265DE8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)*(t-t)");
}

void sub_265E18()
{
}

double sub_265E2C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) * (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_265E50()
{
  return 119;
}

void sub_265E58(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t*t)*(t*t)");
}

void sub_265E88()
{
}

double sub_265E9C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) * (*(double *)(a1 + 24) / **(double **)(a1 + 32));
}

uint64_t sub_265EC0()
{
  return 119;
}

void sub_265EC8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+(t*(t/t))");
}

void sub_265EF8()
{
}

double sub_265F0C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) * (*(double *)(a1 + 24) / **(double **)(a1 + 32));
}

uint64_t sub_265F30()
{
  return 119;
}

void sub_265F38(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-(t*(t/t))");
}

void sub_265F68()
{
}

double sub_265F7C(uint64_t a1)
{
  return **(double **)(a1 + 8) + *(double *)(a1 + 16) / (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_265FA0()
{
  return 119;
}

void sub_265FA8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t+(t/(t*t))");
}

void sub_265FD8()
{
}

double sub_265FEC(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) / (*(double *)(a1 + 24) * **(double **)(a1 + 32));
}

uint64_t sub_266010()
{
  return 119;
}

void sub_266018(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "t-(t/(t*t))");
}

void sub_266048()
{
}

double sub_26605C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16) - *(double *)(a1 + 24)) * **(double **)(a1 + 32);
}

uint64_t sub_266080()
{
  return 119;
}

void sub_266088(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t-t)-t)*t");
}

void sub_2660B8()
{
}

double sub_2660CC(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16) - *(double *)(a1 + 24)) / **(double **)(a1 + 32);
}

uint64_t sub_2660F0()
{
  return 119;
}

void sub_2660F8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t-t)-t)/t");
}

void sub_266128()
{
}

double sub_26613C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16) + *(double *)(a1 + 24)) * **(double **)(a1 + 32);
}

uint64_t sub_266160()
{
  return 119;
}

void sub_266168(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t-t)+t)*t");
}

void sub_266198()
{
}

double sub_2661AC(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16) + *(double *)(a1 + 24)) / **(double **)(a1 + 32);
}

uint64_t sub_2661D0()
{
  return 119;
}

void sub_2661D8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t-t)+t)/t");
}

void sub_266208()
{
}

double sub_26621C(uint64_t a1)
{
  return **(double **)(a1 + 32) * (**(double **)(a1 + 8) + *(double *)(a1 + 16) - *(double *)(a1 + 24));
}

uint64_t sub_266240()
{
  return 119;
}

void sub_266248(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+(t-t))*t");
}

void sub_266278()
{
}

double sub_26628C(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16) - *(double *)(a1 + 24)) / **(double **)(a1 + 32);
}

uint64_t sub_2662B0()
{
  return 119;
}

void sub_2662B8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+(t-t))/t");
}

void sub_2662E8()
{
}

double sub_2662FC(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) / (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_266320()
{
  return 119;
}

void sub_266328(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)/(t+t)");
}

void sub_266358()
{
}

double sub_26636C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) / (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_266390()
{
  return 119;
}

void sub_266398(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)/(t-t)");
}

void sub_2663C8()
{
}

double sub_2663DC(uint64_t a1)
{
  return (**(double **)(a1 + 8) + *(double *)(a1 + 16)) * (*(double *)(a1 + 24) + **(double **)(a1 + 32));
}

uint64_t sub_266400()
{
  return 119;
}

void sub_266408(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t+t)*(t+t)");
}

void sub_266438()
{
}

double sub_26644C(uint64_t a1)
{
  return (**(double **)(a1 + 8) - *(double *)(a1 + 16)) * (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_266470()
{
  return 119;
}

void sub_266478(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)*(t-t)");
}

void sub_2664A8()
{
}

double sub_2664BC(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) + *(double *)(a1 + 24) - **(double **)(a1 + 32);
}

uint64_t sub_2664E0()
{
  return 119;
}

void sub_2664E8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)+(t-t)");
}

void sub_266518()
{
}

double sub_26652C(uint64_t a1)
{
  return **(double **)(a1 + 8) - *(double *)(a1 + 16) - (*(double *)(a1 + 24) - **(double **)(a1 + 32));
}

uint64_t sub_266550()
{
  return 119;
}

void sub_266558(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t-t)-(t-t)");
}

void sub_266588()
{
}

double sub_26659C(uint64_t a1)
{
  return **(double **)(a1 + 8) / *(double *)(a1 + 16) + *(double *)(a1 + 24) * **(double **)(a1 + 32);
}

uint64_t sub_2665C0()
{
  return 119;
}

void sub_2665C8(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "(t/t)+(t*t)");
}

void sub_2665F8()
{
}

double sub_26660C(uint64_t a1)
{
  return **(double **)(a1 + 8) * *(double *)(a1 + 16) * *(double *)(a1 + 24) / **(double **)(a1 + 32);
}

uint64_t sub_266630()
{
  return 119;
}

void sub_266638(char *a1@<X8>)
{
  a1[23] = 11;
  strcpy(a1, "((t*t)*t)/t");
}

void sub_266668()
{
}

uint64_t sub_26667C(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(double *, double *))(a1 + 48);
  double v4 = *(double (**)(uint64_t, uint64_t))(a1 + 56);
  double v7 = (*(double (**)(void, uint64_t))(a1 + 40))(*(void *)(a1 + 8), a1 + 16);
  double v6 = v4(v1, v2);
  return v3(&v7, &v6);
}

void sub_2666E8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F63E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F63E0))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v32);
  uint64_t v2 = std::string::insert(&v32, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v33, "o");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v30);
  if ((v31 & 0x80u) == 0) {
    double v6 = v30;
  }
  else {
    double v6 = (void **)v30[0];
  }
  if ((v31 & 0x80u) == 0) {
    std::string::size_type v7 = v31;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v30[1];
  }
  std::string::size_type v8 = std::string::append(&v34, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v35, ")o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v36, "(");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    __int16 v14 = v28;
  }
  else {
    __int16 v14 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v15 = v29;
  }
  else {
    std::string::size_type v15 = (std::string::size_type)v28[1];
  }
  __int16 v16 = std::string::append(&v37, (const std::string::value_type *)v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v38.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  size_t v18 = std::string::append(&v38, "o");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v20 = __p;
  }
  else {
    std::string::size_type v20 = (void **)__p[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v21 = v27;
  }
  else {
    std::string::size_type v21 = (std::string::size_type)__p[1];
  }
  int v22 = std::string::append(&v39, (const std::string::value_type *)v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  long long v24 = std::string::append(&v40, ")");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  unk_24F63D8 = *((void *)&v24->__r_.__value_.__l + 2);
  xmmword_24F63C8 = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v39.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v38.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v28[0]);
  if ((SHIBYTE(v37.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v37.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if (((char)v31 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v31 & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_46;
  }
LABEL_45:
  operator delete(v30[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_47:
    operator delete(v33.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_36;
    }
LABEL_48:
    operator delete(v32.__r_.__value_.__l.__data_);
    goto LABEL_36;
  }
LABEL_46:
  operator delete(v34.__r_.__value_.__l.__data_);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_35:
  if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_48;
  }
LABEL_36:
  __cxa_guard_release(&qword_24F63E0);
LABEL_2:
  if (byte_24F63DF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F63C8, *((unint64_t *)&xmmword_24F63C8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F63C8;
    *(void *)(a1 + 16) = unk_24F63D8;
  }
}

void sub_266A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (*(char *)(v59 - 41) < 0)
  {
    operator delete(*(void **)(v59 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v59 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v59 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v59 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v59 - 96));
  if ((*(char *)(v59 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*(void **)(v59 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v59 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a15);
  if ((*(char *)(v59 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a59 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*(void **)(v59 - 160));
  if ((a59 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a54);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_12:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_25;
  }
LABEL_24:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_13:
    __cxa_guard_abort(&qword_24F63E0);
    _Unwind_Resume(a1);
  }
LABEL_25:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F63E0);
  _Unwind_Resume(a1);
}

void sub_266C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a30 < 0) {
    JUMPOUT(0x266C08);
  }
  JUMPOUT(0x266AD4);
}

void sub_266C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x266C18);
  }
  JUMPOUT(0x266ADCLL);
}

void sub_266C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x266C28);
  }
  JUMPOUT(0x266AE4);
}

void sub_266C74(_Unwind_Exception *a1)
{
}

void sub_266C8C(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  long long v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  long long v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26732C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_267504()
{
}

uint64_t sub_267518(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(void, void))(a1 + 56))(*(void *)(a1 + 24), *(void *)(a1 + 32));
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_267580(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6400, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6400))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F63F8 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F63E8 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6400);
LABEL_2:
  if (byte_24F63FF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F63E8, *((unint64_t *)&xmmword_24F63E8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F63E8;
    *(void *)(a1 + 16) = unk_24F63F8;
  }
}

void sub_2678D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6400);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6400);
  _Unwind_Resume(a1);
}

void sub_267A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x267A58);
  }
  JUMPOUT(0x26792CLL);
}

void sub_267A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x267A68);
  }
  JUMPOUT(0x267934);
}

void sub_267AA4(_Unwind_Exception *a1)
{
}

void sub_267ABC(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26815C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_268334()
{
}

uint64_t sub_268348(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(void, uint64_t))(a1 + 56))(*(void *)(a1 + 24), a1 + 32);
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_2683B4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6420, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6420))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6418 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6408 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6420);
LABEL_2:
  if (byte_24F641F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6408, *((unint64_t *)&xmmword_24F6408 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6408;
    *(void *)(a1 + 16) = unk_24F6418;
  }
}

void sub_26870C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6420);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6420);
  _Unwind_Resume(a1);
}

void sub_2688B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26888CLL);
  }
  JUMPOUT(0x268760);
}

void sub_2688C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26889CLL);
  }
  JUMPOUT(0x268768);
}

void sub_2688D8(_Unwind_Exception *a1)
{
}

void sub_2688F0(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_268F90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_269168()
{
}

uint64_t sub_26917C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(uint64_t, void))(a1 + 56))(a1 + 24, *(void *)(a1 + 32));
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_2691E4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6440, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6440))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6438 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6428 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6440);
LABEL_2:
  if (byte_24F643F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6428, *((unint64_t *)&xmmword_24F6428 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6428;
    *(void *)(a1 + 16) = unk_24F6438;
  }
}

void sub_26953C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6440);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6440);
  _Unwind_Resume(a1);
}

void sub_2696E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x2696BCLL);
  }
  JUMPOUT(0x269590);
}

void sub_2696F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x2696CCLL);
  }
  JUMPOUT(0x269598);
}

void sub_269708(_Unwind_Exception *a1)
{
}

void sub_269720(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_269DC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_269F98()
{
}

uint64_t sub_269FAC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = a1 + 16;
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(void, void))(a1 + 56))(*(void *)(a1 + 24), *(void *)(a1 + 32));
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_26A018(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6460, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6460))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6458 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6448 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6460);
LABEL_2:
  if (byte_24F645F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6448, *((unint64_t *)&xmmword_24F6448 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6448;
    *(void *)(a1 + 16) = unk_24F6458;
  }
}

void sub_26A370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6460);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6460);
  _Unwind_Resume(a1);
}

void sub_26A51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26A4F0);
  }
  JUMPOUT(0x26A3C4);
}

void sub_26A52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26A500);
  }
  JUMPOUT(0x26A3CCLL);
}

void sub_26A53C(_Unwind_Exception *a1)
{
}

void sub_26A554(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26ABF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_26ADCC()
{
}

uint64_t sub_26ADE0(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(void, void))(a1 + 56))(*(void *)(a1 + 24), *(void *)(a1 + 32));
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_26AE48(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6480, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6480))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6478 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6468 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6480);
LABEL_2:
  if (byte_24F647F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6468, *((unint64_t *)&xmmword_24F6468 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6468;
    *(void *)(a1 + 16) = unk_24F6478;
  }
}

void sub_26B1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6480);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6480);
  _Unwind_Resume(a1);
}

void sub_26B34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26B320);
  }
  JUMPOUT(0x26B1F4);
}

void sub_26B35C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26B330);
  }
  JUMPOUT(0x26B1FCLL);
}

void sub_26B36C(_Unwind_Exception *a1)
{
}

void sub_26B384(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26BA24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_26BBFC()
{
}

uint64_t sub_26BC10(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(uint64_t, void))(a1 + 56))(a1 + 24, *(void *)(a1 + 32));
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_26BC7C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F64A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F64A0))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6498 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6488 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F64A0);
LABEL_2:
  if (byte_24F649F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6488, *((unint64_t *)&xmmword_24F6488 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6488;
    *(void *)(a1 + 16) = unk_24F6498;
  }
}

void sub_26BFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F64A0);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F64A0);
  _Unwind_Resume(a1);
}

void sub_26C180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26C154);
  }
  JUMPOUT(0x26C028);
}

void sub_26C190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26C164);
  }
  JUMPOUT(0x26C030);
}

void sub_26C1A0(_Unwind_Exception *a1)
{
}

void sub_26C1B8(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26C858(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_26CA30()
{
}

uint64_t sub_26CA44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = a1 + 16;
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(void, uint64_t))(a1 + 56))(*(void *)(a1 + 24), a1 + 32);
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_26CAB4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F64C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F64C0))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F64B8 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F64A8 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F64C0);
LABEL_2:
  if (byte_24F64BF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F64A8, *((unint64_t *)&xmmword_24F64A8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F64A8;
    *(void *)(a1 + 16) = unk_24F64B8;
  }
}

void sub_26CE0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F64C0);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F64C0);
  _Unwind_Resume(a1);
}

void sub_26CFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26CF8CLL);
  }
  JUMPOUT(0x26CE60);
}

void sub_26CFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26CF9CLL);
  }
  JUMPOUT(0x26CE68);
}

void sub_26CFD8(_Unwind_Exception *a1)
{
}

void sub_26CFF0(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26D690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_26D868()
{
}

uint64_t sub_26D87C(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = *(void *)(a1 + 16);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(void, uint64_t))(a1 + 56))(*(void *)(a1 + 24), a1 + 32);
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_26D8E8(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F64E0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F64E0))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F64D8 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F64C8 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F64E0);
LABEL_2:
  if (byte_24F64DF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F64C8, *((unint64_t *)&xmmword_24F64C8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F64C8;
    *(void *)(a1 + 16) = unk_24F64D8;
  }
}

void sub_26DC40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F64E0);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F64E0);
  _Unwind_Resume(a1);
}

void sub_26DDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26DDC0);
  }
  JUMPOUT(0x26DC94);
}

void sub_26DDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26DDD0);
  }
  JUMPOUT(0x26DC9CLL);
}

void sub_26DE0C(_Unwind_Exception *a1)
{
}

void sub_26DE24(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "(t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "(t");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t))");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26E4C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_26E69C()
{
}

uint64_t sub_26E6B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = a1 + 16;
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(uint64_t, double *))(a1 + 48);
  double v6 = (*(double (**)(uint64_t, void))(a1 + 56))(a1 + 24, *(void *)(a1 + 32));
  double v7 = v4(v2, &v6);
  return v3(v1, &v7);
}

void sub_26E71C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6500, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6500))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, ")o(");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, "o");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F64F8 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F64E8 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6500);
LABEL_2:
  if (byte_24F64FF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F64E8, *((unint64_t *)&xmmword_24F64E8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F64E8;
    *(void *)(a1 + 16) = unk_24F64F8;
  }
}

void sub_26EA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6500);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6500);
  _Unwind_Resume(a1);
}

void sub_26EC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26EBF4);
  }
  JUMPOUT(0x26EAC8);
}

void sub_26EC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26EC04);
  }
  JUMPOUT(0x26EAD0);
}

void sub_26EC40(_Unwind_Exception *a1)
{
}

void sub_26EC58(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "((t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "t)");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_26F2F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_26F4D0()
{
}

uint64_t sub_26F4E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(double *, uint64_t))(a1 + 56);
  double v6 = (*(double (**)(void, void))(a1 + 48))(*(void *)(a1 + 16), *(void *)(a1 + 24));
  double v7 = v4(&v6, v2);
  return v3(v1, &v7);
}

void sub_26F54C(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6520, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6520))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, ")o(");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6518 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6508 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6520);
LABEL_2:
  if (byte_24F651F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6508, *((unint64_t *)&xmmword_24F6508 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6508;
    *(void *)(a1 + 16) = unk_24F6518;
  }
}

void sub_26F8A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6520);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6520);
  _Unwind_Resume(a1);
}

void sub_26FA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x26FA24);
  }
  JUMPOUT(0x26F8F8);
}

void sub_26FA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x26FA34);
  }
  JUMPOUT(0x26F900);
}

void sub_26FA70(_Unwind_Exception *a1)
{
}

void sub_26FA88(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "((t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "t)");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_270128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_270300()
{
}

uint64_t sub_270314(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = a1 + 32;
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(double *, uint64_t))(a1 + 56);
  double v6 = (*(double (**)(void, void))(a1 + 48))(*(void *)(a1 + 16), *(void *)(a1 + 24));
  double v7 = v4(&v6, v2);
  return v3(v1, &v7);
}

void sub_270380(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6540, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6540))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, ")o(");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6538 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6528 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6540);
LABEL_2:
  if (byte_24F653F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6528, *((unint64_t *)&xmmword_24F6528 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6528;
    *(void *)(a1 + 16) = unk_24F6538;
  }
}

void sub_2706D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6540);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6540);
  _Unwind_Resume(a1);
}

void sub_270884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x270858);
  }
  JUMPOUT(0x27072CLL);
}

void sub_270894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x270868);
  }
  JUMPOUT(0x270734);
}

void sub_2708A4(_Unwind_Exception *a1)
{
}

void sub_2708BC(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "((t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "t)");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_270F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_271134()
{
}

uint64_t sub_271148(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(double *, uint64_t))(a1 + 56);
  double v6 = (*(double (**)(void, uint64_t))(a1 + 48))(*(void *)(a1 + 16), a1 + 24);
  double v7 = v4(&v6, v2);
  return v3(v1, &v7);
}

void sub_2711B0(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6560, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6560))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, ")o(");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6558 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6548 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6560);
LABEL_2:
  if (byte_24F655F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6548, *((unint64_t *)&xmmword_24F6548 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6548;
    *(void *)(a1 + 16) = unk_24F6558;
  }
}

void sub_271508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6560);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6560);
  _Unwind_Resume(a1);
}

void sub_2716B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x271688);
  }
  JUMPOUT(0x27155CLL);
}

void sub_2716C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x271698);
  }
  JUMPOUT(0x271564);
}

void sub_2716D4(_Unwind_Exception *a1)
{
}

void sub_2716EC(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "((t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "t)");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_271D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_271F64()
{
}

uint64_t sub_271F78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(double *, uint64_t))(a1 + 56);
  double v6 = (*(double (**)(uint64_t, void))(a1 + 48))(a1 + 16, *(void *)(a1 + 24));
  double v7 = v4(&v6, v2);
  return v3(v1, &v7);
}

void sub_271FE4(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F6580, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F6580))
  {
    goto LABEL_2;
  }
  sub_24AA24((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, ")o(");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6578 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6568 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F6580);
LABEL_2:
  if (byte_24F657F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6568, *((unint64_t *)&xmmword_24F6568 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6568;
    *(void *)(a1 + 16) = unk_24F6578;
  }
}

void sub_27233C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F6580);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F6580);
  _Unwind_Resume(a1);
}

void sub_2724E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x2724BCLL);
  }
  JUMPOUT(0x272390);
}

void sub_2724F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x2724CCLL);
  }
  JUMPOUT(0x272398);
}

void sub_272508(_Unwind_Exception *a1)
{
}

void sub_272520(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "((t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "t)");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_272BC0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_272D98()
{
}

uint64_t sub_272DAC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(double *, uint64_t))(a1 + 56);
  double v6 = (*(double (**)(void, void))(a1 + 48))(*(void *)(a1 + 16), *(void *)(a1 + 24));
  double v7 = v4(&v6, v2);
  return v3(v1, &v7);
}

void sub_272E14(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F65A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F65A0))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, ")o(");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F6598 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F6588 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F65A0);
LABEL_2:
  if (byte_24F659F < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F6588, *((unint64_t *)&xmmword_24F6588 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F6588;
    *(void *)(a1 + 16) = unk_24F6598;
  }
}

void sub_27316C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F65A0);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F65A0);
  _Unwind_Resume(a1);
}

void sub_273318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x2732ECLL);
  }
  JUMPOUT(0x2731C0);
}

void sub_273328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x2732FCLL);
  }
  JUMPOUT(0x2731C8);
}

void sub_273338(_Unwind_Exception *a1)
{
}

void sub_273350(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "((t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "t)");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}

void sub_2739F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_273BC8()
{
}

uint64_t sub_273BDC(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  uint64_t v2 = *(void *)(a1 + 32);
  long long v3 = *(uint64_t (**)(uint64_t, double *))(a1 + 40);
  double v4 = *(double (**)(double *, uint64_t))(a1 + 56);
  double v6 = (*(double (**)(void, uint64_t))(a1 + 48))(*(void *)(a1 + 16), a1 + 24);
  double v7 = v4(&v6, v2);
  return v3(v1, &v7);
}

void sub_273C48(uint64_t a1@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_24F65C0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_24F65C0))
  {
    goto LABEL_2;
  }
  sub_24D754((uint64_t)&v30);
  uint64_t v2 = std::string::insert(&v30, 0, "(");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  double v4 = std::string::append(&v31, ")o((");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)v28);
  if ((v29 & 0x80u) == 0) {
    double v6 = v28;
  }
  else {
    double v6 = (void **)v28[0];
  }
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v7 = v29;
  }
  else {
    std::string::size_type v7 = (std::string::size_type)v28[1];
  }
  std::string::size_type v8 = std::string::append(&v32, (const std::string::value_type *)v6, v7);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v10 = std::string::append(&v33, "o");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_24D754((uint64_t)v26);
  if ((v27 & 0x80u) == 0) {
    int v12 = v26;
  }
  else {
    int v12 = (void **)v26[0];
  }
  if ((v27 & 0x80u) == 0) {
    std::string::size_type v13 = v27;
  }
  else {
    std::string::size_type v13 = (std::string::size_type)v26[1];
  }
  __int16 v14 = std::string::append(&v34, (const std::string::value_type *)v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v35.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v35.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  __int16 v16 = std::string::append(&v35, ")o(");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v36.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v36.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_24AA24((uint64_t)__p);
  if ((v25 & 0x80u) == 0) {
    size_t v18 = __p;
  }
  else {
    size_t v18 = (void **)__p[0];
  }
  if ((v25 & 0x80u) == 0) {
    std::string::size_type v19 = v25;
  }
  else {
    std::string::size_type v19 = (std::string::size_type)__p[1];
  }
  std::string::size_type v20 = std::string::append(&v36, (const std::string::value_type *)v18, v19);
  long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
  v37.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v21;
  v20->__r_.__value_.__l.__size_ = 0;
  v20->__r_.__value_.__r.__words[2] = 0;
  v20->__r_.__value_.__r.__words[0] = 0;
  int v22 = std::string::append(&v37, "))");
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  unk_24F65B8 = *((void *)&v22->__r_.__value_.__l + 2);
  xmmword_24F65A8 = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v37.__r_.__value_.__l.__data_);
    if (((char)v25 & 0x80000000) == 0)
    {
LABEL_26:
      if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_38;
    }
  }
  else if (((char)v25 & 0x80000000) == 0)
  {
    goto LABEL_26;
  }
  operator delete(__p[0]);
  if ((SHIBYTE(v36.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v36.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if (((char)v27 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v35.__r_.__value_.__l.__data_);
  if (((char)v27 & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v26[0]);
  if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v34.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if (((char)v29 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_43;
  }
LABEL_42:
  operator delete(v33.__r_.__value_.__l.__data_);
  if (((char)v29 & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_44;
  }
LABEL_43:
  operator delete(v28[0]);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
LABEL_45:
    operator delete(v31.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_35;
    }
LABEL_46:
    operator delete(v30.__r_.__value_.__l.__data_);
    goto LABEL_35;
  }
LABEL_44:
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_45;
  }
LABEL_34:
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_46;
  }
LABEL_35:
  __cxa_guard_release(&qword_24F65C0);
LABEL_2:
  if (byte_24F65BF < 0)
  {
    sub_4200((unsigned char *)a1, (void *)xmmword_24F65A8, *((unint64_t *)&xmmword_24F65A8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_24F65A8;
    *(void *)(a1 + 16) = unk_24F65B8;
  }
}

void sub_273FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((*(char *)(v52 - 137) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a15);
  if ((*(char *)(v52 - 137) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*(void **)(v52 - 160));
  if ((a52 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a47);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a21);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(a40);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_11:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_12:
    __cxa_guard_abort(&qword_24F65C0);
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a27);
  __cxa_guard_abort(&qword_24F65C0);
  _Unwind_Resume(a1);
}

void sub_27414C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x274120);
  }
  JUMPOUT(0x273FF4);
}

void sub_27415C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x274130);
  }
  JUMPOUT(0x273FFCLL);
}

void sub_27416C(_Unwind_Exception *a1)
{
}

void sub_274184(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  memset(&v31, 0, sizeof(v31));
  std::string::reserve(&v31, 0x40uLL);
  std::string::size_type v8 = sub_24A498(&v31, "t");
  long long v9 = v8;
  switch(a1)
  {
    case 2:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "+");
      break;
    case 3:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "-");
      break;
    case 4:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "*");
      break;
    case 5:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "/");
      break;
    case 6:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "%");
      break;
    case 7:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "^");
      break;
    case 14:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, "<");
      break;
    case 15:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15676;
      goto LABEL_18;
    case 16:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15677;
      goto LABEL_18;
    case 18:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15649;
      goto LABEL_18;
    case 20:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 15678;
      goto LABEL_18;
    case 21:
      std::string::size_type v10 = 1;
      char v30 = 1;
      strcpy(__s, ">");
      break;
    case 22:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "and");
      break;
    case 23:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1684955502;
      goto LABEL_22;
    case 24:
      std::string::size_type v10 = 2;
      char v30 = 2;
      __int16 v11 = 29295;
LABEL_18:
      *(_WORD *)std::string __s = v11;
      __s[2] = 0;
      break;
    case 25:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "nor");
      break;
    case 26:
      std::string::size_type v10 = 3;
      char v30 = 3;
      strcpy(__s, "xor");
      break;
    case 27:
      std::string::size_type v10 = 4;
      char v30 = 4;
      int v12 = 1919905400;
LABEL_22:
      *(_DWORD *)std::string __s = v12;
      __s[4] = 0;
      break;
    default:
      std::string::size_type v10 = 7;
      char v30 = 7;
      strcpy(__s, "UNKNOWN");
      break;
  }
  std::string::append(v8, __s, v10);
  std::string::size_type v13 = sub_24A498(v9, "((t");
  __int16 v14 = v13;
  switch(a2)
  {
    case 2:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "+");
      break;
    case 3:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "-");
      break;
    case 4:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "*");
      break;
    case 5:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "/");
      break;
    case 6:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "%");
      break;
    case 7:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "^");
      break;
    case 14:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, "<");
      break;
    case 15:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15676;
      goto LABEL_40;
    case 16:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15677;
      goto LABEL_40;
    case 18:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15649;
      goto LABEL_40;
    case 20:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 15678;
      goto LABEL_40;
    case 21:
      std::string::size_type v15 = 1;
      char v28 = 1;
      strcpy(v27, ">");
      break;
    case 22:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "and");
      break;
    case 23:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1684955502;
      goto LABEL_44;
    case 24:
      std::string::size_type v15 = 2;
      char v28 = 2;
      __int16 v16 = 29295;
LABEL_40:
      *(_WORD *)unsigned __int8 v27 = v16;
      v27[2] = 0;
      break;
    case 25:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "nor");
      break;
    case 26:
      std::string::size_type v15 = 3;
      char v28 = 3;
      strcpy(v27, "xor");
      break;
    case 27:
      std::string::size_type v15 = 4;
      char v28 = 4;
      int v17 = 1919905400;
LABEL_44:
      *(_DWORD *)unsigned __int8 v27 = v17;
      v27[4] = 0;
      break;
    default:
      std::string::size_type v15 = 7;
      char v28 = 7;
      strcpy(v27, "UNKNOWN");
      break;
  }
  std::string::append(v13, v27, v15);
  size_t v18 = sub_24A498(v14, "t)");
  std::string::size_type v19 = v18;
  switch(a3)
  {
    case 2:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 43;
      break;
    case 3:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 45;
      break;
    case 4:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 42;
      break;
    case 5:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 47;
      break;
    case 6:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 37;
      break;
    case 7:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 94;
      break;
    case 14:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 60;
      break;
    case 15:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15676;
      goto LABEL_62;
    case 16:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15677;
      goto LABEL_62;
    case 18:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15649;
      goto LABEL_62;
    case 20:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 15678;
      goto LABEL_62;
    case 21:
      std::string::size_type v20 = 1;
      char v26 = 1;
      LOWORD(__p[0]) = 62;
      break;
    case 22:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 6581857;
      break;
    case 23:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1684955502;
      goto LABEL_66;
    case 24:
      std::string::size_type v20 = 2;
      char v26 = 2;
      __int16 v21 = 29295;
LABEL_62:
      LOWORD(__p[0]) = v21;
      BYTE2(__p[0]) = 0;
      break;
    case 25:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499630;
      break;
    case 26:
      std::string::size_type v20 = 3;
      char v26 = 3;
      LODWORD(__p[0]) = 7499640;
      break;
    case 27:
      std::string::size_type v20 = 4;
      char v26 = 4;
      int v22 = 1919905400;
LABEL_66:
      LODWORD(__p[0]) = v22;
      BYTE4(__p[0]) = 0;
      break;
    default:
      std::string::size_type v20 = 7;
      char v26 = 7;
      strcpy((char *)__p, "UNKNOWN");
      break;
  }
  std::string::append(v18, (const std::string::value_type *)__p, v20);
  long long v23 = sub_24A498(v19, "t)");
  if (SHIBYTE(v23->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200((unsigned char *)a4, v23->__r_.__value_.__l.__data_, v23->__r_.__value_.__l.__size_);
  }
  else
  {
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    *(void *)(a4 + 16) = *((void *)&v23->__r_.__value_.__l + 2);
    *(_OWORD *)a4 = v24;
  }
  if (v26 < 0)
  {
    operator delete(__p[0]);
    if ((v28 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v30 & 0x80000000) == 0) {
        goto LABEL_73;
      }
      goto LABEL_77;
    }
  }
  else if ((v28 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(*(void **)v27);
  if ((v30 & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_78:
    operator delete(v31.__r_.__value_.__l.__data_);
    return;
  }
LABEL_77:
  operator delete(*(void **)__s);
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_78;
  }
}