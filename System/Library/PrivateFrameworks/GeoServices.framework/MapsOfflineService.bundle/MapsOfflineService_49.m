uint64_t sub_14864F8(uint64_t a1, uint64_t a2)
{
  return sub_13D90CC(a2);
}

uint64_t sub_1486500(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1486508()
{
}

uint64_t sub_148655C(uint64_t a1, uint64_t a2)
{
  return sub_13D916C(a2);
}

uint64_t sub_1486564(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_148656C()
{
}

uint64_t sub_14865BC(uint64_t a1, uint64_t a2)
{
  return sub_13D920C(a2);
}

uint64_t sub_14865C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14865CC()
{
}

uint64_t sub_1486620(uint64_t a1, uint64_t a2)
{
  return sub_13D9288(a2);
}

uint64_t sub_1486628(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486630()
{
}

void *sub_1486680(uint64_t a1, uint64_t a2)
{
  return sub_13D9308(a2);
}

uint64_t sub_1486688(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486690()
{
}

double sub_1486724(uint64_t a1, uint64_t a2)
{
  return sub_13D9384(a2);
}

uint64_t sub_148672C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486734()
{
}

uint64_t sub_1486794(uint64_t a1, uint64_t a2)
{
  return sub_13D9440(a2);
}

uint64_t sub_148679C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14867A4()
{
}

void *sub_14867F8(uint64_t a1, uint64_t a2)
{
  return sub_13D94CC(a2);
}

uint64_t sub_1486800(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486808()
{
}

uint64_t sub_1486860(uint64_t a1, uint64_t a2)
{
  return sub_13D9568(a2);
}

uint64_t sub_1486868(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486870()
{
}

void sub_14868B8()
{
}

uint64_t sub_14868DC(uint64_t a1, uint64_t a2)
{
  return sub_13D9608(a2);
}

uint64_t sub_14868E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_14868EC()
{
}

uint64_t sub_148693C(uint64_t a1, uint64_t a2)
{
  return sub_13D9664(a2);
}

uint64_t sub_1486944(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148694C()
{
}

double sub_14869B4(uint64_t a1, uint64_t a2)
{
  return sub_13D96E0(a2);
}

uint64_t sub_14869BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14869C4()
{
}

void *sub_1486A20(uint64_t a1, uint64_t a2)
{
  return sub_13D9774(a2);
}

uint64_t sub_1486A28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486A30()
{
}

double sub_1486A98(uint64_t a1, uint64_t a2)
{
  return sub_13D97FC(a2);
}

uint64_t sub_1486AA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486AA8()
{
}

double sub_1486AF8(uint64_t a1, uint64_t a2)
{
  return sub_13D98B0(a2);
}

uint64_t sub_1486B00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486B08()
{
}

uint64_t sub_1486B58(uint64_t a1, uint64_t a2)
{
  return sub_13D992C(a2);
}

uint64_t sub_1486B60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486B68()
{
}

uint64_t sub_1486BC0(uint64_t a1, uint64_t a2)
{
  return sub_13D99A8(a2);
}

uint64_t sub_1486BC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486BD0()
{
}

void *sub_1486C24(uint64_t a1, uint64_t a2)
{
  return sub_13D9A2C(a2);
}

uint64_t sub_1486C2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486C34()
{
}

double sub_1486C88(uint64_t a1, uint64_t a2)
{
  return sub_13D9AD0(a2);
}

uint64_t sub_1486C90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486C98()
{
}

void *sub_1486CF4(uint64_t a1, uint64_t a2)
{
  return sub_13D9B50(a2);
}

uint64_t sub_1486CFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486D04()
{
}

double sub_1486D64(uint64_t a1, uint64_t a2)
{
  return sub_13D9BD8(a2);
}

uint64_t sub_1486D6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486D74()
{
}

void *sub_1486DC4(uint64_t a1, uint64_t a2)
{
  return sub_13D9C64(a2);
}

uint64_t sub_1486DCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486DD4()
{
}

uint64_t sub_1486E24(uint64_t a1, uint64_t a2)
{
  return sub_13D9CE0(a2);
}

uint64_t sub_1486E2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486E34()
{
}

uint64_t sub_1486E98(uint64_t a1, uint64_t a2)
{
  return sub_13D9D5C(a2);
}

uint64_t sub_1486EA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486EA8()
{
}

double sub_1486F14(uint64_t a1, uint64_t a2)
{
  return sub_13D9DEC(a2);
}

uint64_t sub_1486F1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486F24()
{
}

void *sub_1486F70(uint64_t a1, uint64_t a2)
{
  return sub_13D9E84(a2);
}

uint64_t sub_1486F78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486F80()
{
}

double sub_1486FD8(uint64_t a1, uint64_t a2)
{
  return sub_13D9EFC(a2);
}

uint64_t sub_1486FE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1486FE8()
{
}

uint64_t sub_148703C(uint64_t a1, uint64_t a2)
{
  return sub_13D9F80(a2);
}

uint64_t sub_1487044(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148704C()
{
}

uint64_t sub_14870AC(uint64_t a1, uint64_t a2)
{
  return sub_13DA01C(a2);
}

uint64_t sub_14870B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14870BC()
{
}

uint64_t sub_148710C(uint64_t a1, uint64_t a2)
{
  return sub_13DA0A8(a2);
}

uint64_t sub_1487114(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148711C()
{
}

uint64_t sub_1487170(uint64_t a1, uint64_t a2)
{
  return sub_13DA124(a2);
}

uint64_t sub_1487178(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487180()
{
}

uint64_t sub_14871D0(uint64_t a1, uint64_t a2)
{
  return sub_13DA1C0(a2);
}

uint64_t sub_14871D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14871E0()
{
}

uint64_t sub_1487230(uint64_t a1, uint64_t a2)
{
  return sub_13DA23C(a2);
}

uint64_t sub_1487238(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487240()
{
}

void *sub_1487290(uint64_t a1, uint64_t a2)
{
  return sub_13DA2B8(a2);
}

uint64_t sub_1487298(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14872A0()
{
}

void *sub_14872EC(uint64_t a1, uint64_t a2)
{
  return sub_13DA334(a2);
}

uint64_t sub_14872F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14872FC()
{
}

void sub_1487344()
{
}

uint64_t sub_1487368(uint64_t a1, uint64_t a2)
{
  return sub_13DA3AC(a2);
}

uint64_t sub_1487370(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1487378()
{
}

uint64_t sub_14873C8(uint64_t a1, uint64_t a2)
{
  return sub_13DA408(a2);
}

uint64_t sub_14873D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14873D8()
{
}

void *sub_148742C(uint64_t a1, uint64_t a2)
{
  return sub_13DA484(a2);
}

uint64_t sub_1487434(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148743C()
{
}

void *sub_1487498(uint64_t a1, uint64_t a2)
{
  return sub_13DA524(a2);
}

uint64_t sub_14874A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14874A8()
{
}

uint64_t sub_1487504(uint64_t a1, uint64_t a2)
{
  return sub_13DA5AC(a2);
}

uint64_t sub_148750C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487514()
{
}

uint64_t sub_1487570(uint64_t a1, uint64_t a2)
{
  return sub_13DA634(a2);
}

uint64_t sub_1487578(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487580()
{
}

double sub_14875D8(uint64_t a1, uint64_t a2)
{
  return sub_13DA6BC(a2);
}

uint64_t sub_14875E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14875E8()
{
}

void *sub_148763C(uint64_t a1, uint64_t a2)
{
  return sub_13DA770(a2);
}

uint64_t sub_1487644(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148764C()
{
}

void *sub_14876A8(uint64_t a1, uint64_t a2)
{
  return sub_13DA80C(a2);
}

uint64_t sub_14876B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14876B8()
{
}

void *sub_1487704(uint64_t a1, uint64_t a2)
{
  return sub_13DA8BC(a2);
}

uint64_t sub_148770C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487714()
{
}

void *sub_1487764(uint64_t a1, uint64_t a2)
{
  return sub_13DA934(a2);
}

uint64_t sub_148776C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487774()
{
}

double sub_14877C8(uint64_t a1, uint64_t a2)
{
  return sub_13DA9CC(a2);
}

uint64_t sub_14877D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14877D8()
{
}

uint64_t sub_1487848(uint64_t a1, uint64_t a2)
{
  return sub_13DAA4C(a2);
}

uint64_t sub_1487850(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487858()
{
}

void sub_14878A0()
{
}

uint64_t sub_14878C4(uint64_t a1, uint64_t a2)
{
  return sub_13DAB08(a2);
}

uint64_t sub_14878CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_14878D4()
{
}

void sub_148791C()
{
}

uint64_t sub_1487940(uint64_t a1, uint64_t a2)
{
  return sub_13DAB64(a2);
}

uint64_t sub_1487948(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1487950()
{
}

void sub_1487998()
{
}

void *sub_14879BC(uint64_t a1, uint64_t a2)
{
  return sub_13DABC0(a2);
}

uint64_t sub_14879C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_14879CC()
{
}

uint64_t sub_1487A1C(uint64_t a1, uint64_t a2)
{
  return sub_13DAC1C(a2);
}

uint64_t sub_1487A24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487A2C()
{
}

void *sub_1487A78(uint64_t a1, uint64_t a2)
{
  return sub_13DAC98(a2);
}

uint64_t sub_1487A80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487A88()
{
}

void *sub_1487AD4(uint64_t a1, uint64_t a2)
{
  return sub_13DAD10(a2);
}

uint64_t sub_1487ADC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487AE4()
{
}

uint64_t sub_1487B38(uint64_t a1, uint64_t a2)
{
  return sub_13DAD88(a2);
}

uint64_t sub_1487B40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1487B48()
{
}

uint64_t sub_1487B98(uint64_t a1, uint64_t a2)
{
  return sub_13DAE28(a2);
}

uint64_t sub_1487BA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487BA8()
{
}

void sub_1487BF0()
{
}

uint64_t sub_1487C14(uint64_t a1, uint64_t a2)
{
  return sub_13F3778(a2);
}

uint64_t sub_1487C1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1487C24()
{
}

void sub_1487C6C()
{
}

uint64_t sub_1487C90(uint64_t a1, uint64_t a2)
{
  return sub_13F37D4(a2);
}

uint64_t sub_1487C98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1487CA0()
{
}

double sub_1487D00(uint64_t a1, uint64_t a2)
{
  return sub_13F3830(a2);
}

uint64_t sub_1487D08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487D10()
{
}

void sub_1487D58()
{
}

uint64_t sub_1487D7C(uint64_t a1, uint64_t a2)
{
  return sub_13F38F8(a2);
}

uint64_t sub_1487D84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1487D8C()
{
}

void sub_1487DD4()
{
}

uint64_t sub_1487DF8(uint64_t a1, uint64_t a2)
{
  return sub_13F3954(a2);
}

uint64_t sub_1487E00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1487E08()
{
}

void sub_1487E50()
{
}

uint64_t sub_1487E74(uint64_t a1, uint64_t a2)
{
  return sub_13F39B0(a2);
}

uint64_t sub_1487E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1487E84()
{
}

uint64_t sub_1487ED4(uint64_t a1, uint64_t a2)
{
  return sub_13F3A0C(a2);
}

uint64_t sub_1487EDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487EE4()
{
}

void *sub_1487F38(uint64_t a1, uint64_t a2)
{
  return sub_13F3A88(a2);
}

uint64_t sub_1487F40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487F48()
{
}

uint64_t sub_1487FA4(uint64_t a1, uint64_t a2)
{
  return sub_13F3B24(a2);
}

uint64_t sub_1487FAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1487FB4()
{
}

double sub_148800C(uint64_t a1, uint64_t a2)
{
  return sub_13F3BC8(a2);
}

uint64_t sub_1488014(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148801C()
{
}

void sub_1488064()
{
}

uint64_t sub_1488088(uint64_t a1, uint64_t a2)
{
  return sub_13F3C7C(a2);
}

uint64_t sub_1488090(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1488098()
{
}

double sub_14880F0(uint64_t a1, uint64_t a2)
{
  return sub_13F4A18(a2);
}

uint64_t sub_14880F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488100()
{
}

void *sub_1488158(uint64_t a1, uint64_t a2)
{
  return sub_1448D44(a2);
}

uint64_t sub_1488160(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488168()
{
}

void *sub_14881C4(uint64_t a1, uint64_t a2)
{
  return sub_1448DC4(a2);
}

uint64_t sub_14881CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14881D4()
{
}

void *sub_1488224(uint64_t a1, uint64_t a2)
{
  return sub_1448E4C(a2);
}

uint64_t sub_148822C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488234()
{
}

void *sub_1488284(uint64_t a1, uint64_t a2)
{
  return sub_1448EC8(a2);
}

uint64_t sub_148828C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488294()
{
}

void *sub_14882E4(uint64_t a1, uint64_t a2)
{
  return sub_1448F44(a2);
}

uint64_t sub_14882EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14882F4()
{
}

void *sub_1488344(uint64_t a1, uint64_t a2)
{
  return sub_1448FC0(a2);
}

uint64_t sub_148834C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488354()
{
}

void *sub_14883A4(uint64_t a1, uint64_t a2)
{
  return sub_144903C(a2);
}

uint64_t sub_14883AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14883B4()
{
}

void *sub_1488404(uint64_t a1, uint64_t a2)
{
  return sub_14490B8(a2);
}

uint64_t sub_148840C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488414()
{
}

void *sub_1488464(uint64_t a1, uint64_t a2)
{
  return sub_1449134(a2);
}

uint64_t sub_148846C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488474()
{
}

void *sub_14884C4(uint64_t a1, uint64_t a2)
{
  return sub_14491B0(a2);
}

uint64_t sub_14884CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14884D4()
{
}

uint64_t sub_148852C(uint64_t a1, uint64_t a2)
{
  return sub_144922C(a2);
}

uint64_t sub_1488534(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148853C()
{
}

void *sub_1488594(uint64_t a1, uint64_t a2)
{
  return sub_14492B0(a2);
}

uint64_t sub_148859C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14885A4()
{
}

uint64_t sub_14885FC(uint64_t a1, uint64_t a2)
{
  return sub_1449334(a2);
}

uint64_t sub_1488604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148860C()
{
}

uint64_t sub_1488664(uint64_t a1, uint64_t a2)
{
  return sub_14493B8(a2);
}

uint64_t sub_148866C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488674()
{
}

uint64_t sub_14886CC(uint64_t a1, uint64_t a2)
{
  return sub_144943C(a2);
}

uint64_t sub_14886D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14886DC()
{
}

uint64_t sub_1488734(uint64_t a1, uint64_t a2)
{
  return sub_14494C0(a2);
}

uint64_t sub_148873C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488744()
{
}

uint64_t sub_14887A0(uint64_t a1, uint64_t a2)
{
  return sub_1449544(a2);
}

uint64_t sub_14887A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14887B0()
{
}

double sub_1488818(uint64_t a1, uint64_t a2)
{
  return sub_14495CC(a2);
}

uint64_t sub_1488820(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488828()
{
}

void *sub_1488884(uint64_t a1, uint64_t a2)
{
  return sub_1449660(a2);
}

uint64_t sub_148888C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488894()
{
}

void *sub_14888F8(uint64_t a1, uint64_t a2)
{
  return sub_14496E8(a2);
}

uint64_t sub_1488900(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488908()
{
}

uint64_t sub_1488964(uint64_t a1, uint64_t a2)
{
  return sub_1449794(a2);
}

uint64_t sub_148896C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488974()
{
}

void *sub_14889CC(uint64_t a1, uint64_t a2)
{
  return sub_144981C(a2);
}

uint64_t sub_14889D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14889DC()
{
}

uint64_t sub_1488A30(uint64_t a1, uint64_t a2)
{
  return sub_14498C4(a2);
}

uint64_t sub_1488A38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1488A40()
{
}

double sub_1488AA0(uint64_t a1, uint64_t a2)
{
  return sub_1449964(a2);
}

uint64_t sub_1488AA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488AB0()
{
}

uint64_t sub_1488B00(uint64_t a1, uint64_t a2)
{
  return sub_1449A30(a2);
}

uint64_t sub_1488B08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488B10()
{
}

uint64_t sub_1488B64(uint64_t a1, uint64_t a2)
{
  return sub_1449AAC(a2);
}

uint64_t sub_1488B6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488B74()
{
}

double sub_1488BD8(uint64_t a1, uint64_t a2)
{
  return sub_1449B48(a2);
}

uint64_t sub_1488BE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488BE8()
{
}

uint64_t sub_1488C44(uint64_t a1, uint64_t a2)
{
  return sub_1449C14(a2);
}

uint64_t sub_1488C4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488C54()
{
}

void *sub_1488CB8(uint64_t a1, uint64_t a2)
{
  return sub_1449C9C(a2);
}

uint64_t sub_1488CC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488CC8()
{
}

double sub_1488D0C(uint64_t a1, uint64_t a2)
{
  return sub_1449D48(a2);
}

uint64_t sub_1488D14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_1488D1C()
{
}

void *sub_1488D74(uint64_t a1, uint64_t a2)
{
  return sub_1449DA8(a2);
}

uint64_t sub_1488D7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488D84()
{
}

void *sub_1488DE0(uint64_t a1, uint64_t a2)
{
  return sub_1449E2C(a2);
}

uint64_t sub_1488DE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488DF0()
{
}

void *sub_1488E4C(uint64_t a1, uint64_t a2)
{
  return sub_1449EB4(a2);
}

uint64_t sub_1488E54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488E5C()
{
}

double sub_1488EB0(uint64_t a1, uint64_t a2)
{
  return sub_1449F3C(a2);
}

uint64_t sub_1488EB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488EC0()
{
}

double sub_1488F1C(uint64_t a1, uint64_t a2)
{
  return sub_1449FBC(a2);
}

uint64_t sub_1488F24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488F2C()
{
}

uint64_t sub_1488F7C(uint64_t a1, uint64_t a2)
{
  return sub_144A044(a2);
}

uint64_t sub_1488F84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488F8C()
{
}

uint64_t sub_1488FE0(uint64_t a1, uint64_t a2)
{
  return sub_144A0C0(a2);
}

uint64_t sub_1488FE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1488FF0()
{
}

void *sub_1489040(uint64_t a1, uint64_t a2)
{
  return sub_144A15C(a2);
}

uint64_t sub_1489048(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489050()
{
}

void *sub_14890A4(uint64_t a1, uint64_t a2)
{
  return sub_144A1D8(a2);
}

uint64_t sub_14890AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14890B4()
{
}

double sub_1489108(uint64_t a1, uint64_t a2)
{
  return sub_144A278(a2);
}

uint64_t sub_1489110(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489118()
{
}

double sub_148916C(uint64_t a1, uint64_t a2)
{
  return sub_144A2F8(a2);
}

uint64_t sub_1489174(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148917C()
{
}

uint64_t sub_14891D4(uint64_t a1, uint64_t a2)
{
  return sub_144A378(a2);
}

uint64_t sub_14891DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14891E4()
{
}

uint64_t sub_1489250(uint64_t a1, uint64_t a2)
{
  return sub_144A420(a2);
}

uint64_t sub_1489258(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489260()
{
}

void *sub_14892B0(uint64_t a1, uint64_t a2)
{
  return sub_144A4D4(a2);
}

uint64_t sub_14892B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14892C0()
{
}

void *sub_148931C(uint64_t a1, uint64_t a2)
{
  return sub_144A550(a2);
}

uint64_t sub_1489324(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148932C()
{
}

void *sub_1489388(uint64_t a1, uint64_t a2)
{
  return sub_144A5D8(a2);
}

uint64_t sub_1489390(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489398()
{
}

uint64_t sub_14893FC(uint64_t a1, uint64_t a2)
{
  return sub_144A660(a2);
}

uint64_t sub_1489404(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148940C()
{
}

void *sub_1489478(uint64_t a1, uint64_t a2)
{
  return sub_144A6DC(a2);
}

uint64_t sub_1489480(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489488()
{
}

void *sub_14894D8(uint64_t a1, uint64_t a2)
{
  return sub_144A794(a2);
}

uint64_t sub_14894E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14894E8()
{
}

void *sub_1489540(uint64_t a1, uint64_t a2)
{
  return sub_144A82C(a2);
}

uint64_t sub_1489548(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489550()
{
}

uint64_t sub_14895B4(uint64_t a1, uint64_t a2)
{
  return sub_144A8B0(a2);
}

uint64_t sub_14895BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14895C4()
{
}

uint64_t sub_1489630(uint64_t a1, uint64_t a2)
{
  return sub_144A940(a2);
}

uint64_t sub_1489638(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489640()
{
}

uint64_t sub_148969C(uint64_t a1, uint64_t a2)
{
  return sub_144A9F8(a2);
}

uint64_t sub_14896A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

void sub_14896AC()
{
}

uint64_t sub_1489718(uint64_t a1, uint64_t a2)
{
  return sub_144AAAC(a2);
}

uint64_t sub_1489720(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489728()
{
}

void *sub_1489780(uint64_t a1, uint64_t a2)
{
  return sub_144AB60(a2);
}

uint64_t sub_1489788(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489790()
{
}

double sub_14897E8(uint64_t a1, uint64_t a2)
{
  return sub_144ABE4(a2);
}

uint64_t sub_14897F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14897F8()
{
}

void *sub_1489850(uint64_t a1, uint64_t a2)
{
  return sub_144AC68(a2);
}

uint64_t sub_1489858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489860()
{
}

uint64_t sub_14898D4(uint64_t a1, uint64_t a2)
{
  return sub_144ACEC(a2);
}

uint64_t sub_14898DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14898E4()
{
}

uint64_t sub_1489940(uint64_t a1, uint64_t a2)
{
  return sub_144ADD4(a2);
}

uint64_t sub_1489948(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489950()
{
}

uint64_t sub_14899AC(uint64_t a1, uint64_t a2)
{
  return sub_144AE5C(a2);
}

uint64_t sub_14899B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14899BC()
{
}

void *sub_1489A20(uint64_t a1, uint64_t a2)
{
  return sub_144AEE4(a2);
}

uint64_t sub_1489A28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489A30()
{
}

uint64_t sub_1489A90(uint64_t a1, uint64_t a2)
{
  return sub_144AF94(a2);
}

uint64_t sub_1489A98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489AA0()
{
}

uint64_t sub_1489AF8(uint64_t a1, uint64_t a2)
{
  return sub_144B03C(a2);
}

uint64_t sub_1489B00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489B08()
{
}

uint64_t sub_1489B68(uint64_t a1, uint64_t a2)
{
  return sub_144B0E8(a2);
}

uint64_t sub_1489B70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489B78()
{
}

void *sub_1489BE4(uint64_t a1, uint64_t a2)
{
  return sub_144B190(a2);
}

uint64_t sub_1489BEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489BF4()
{
}

uint64_t sub_1489C58(uint64_t a1, uint64_t a2)
{
  return sub_144B250(a2);
}

uint64_t sub_1489C60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489C68()
{
}

void *sub_1489CC8(uint64_t a1, uint64_t a2)
{
  return sub_144B2FC(a2);
}

uint64_t sub_1489CD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489CD8()
{
}

void *sub_1489D38(uint64_t a1, uint64_t a2)
{
  return sub_144B3AC(a2);
}

uint64_t sub_1489D40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489D48()
{
}

uint64_t sub_1489DBC(uint64_t a1, uint64_t a2)
{
  return sub_144B438(a2);
}

uint64_t sub_1489DC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489DCC()
{
}

uint64_t sub_1489E1C(uint64_t a1, uint64_t a2)
{
  return sub_144B4F8(a2);
}

uint64_t sub_1489E24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489E2C()
{
}

void *sub_1489E88(uint64_t a1, uint64_t a2)
{
  return sub_144B574(a2);
}

uint64_t sub_1489E90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489E98()
{
}

void *sub_1489EF8(uint64_t a1, uint64_t a2)
{
  return sub_144B5FC(a2);
}

uint64_t sub_1489F00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489F08()
{
}

uint64_t sub_1489F58(uint64_t a1, uint64_t a2)
{
  return sub_144B6A4(a2);
}

uint64_t sub_1489F60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489F68()
{
}

uint64_t sub_1489FB8(uint64_t a1, uint64_t a2)
{
  return sub_144B720(a2);
}

uint64_t sub_1489FC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1489FC8()
{
}

uint64_t sub_148A01C(uint64_t a1, uint64_t a2)
{
  return sub_144B79C(a2);
}

uint64_t sub_148A024(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_148A02C()
{
}

double sub_148A070(uint64_t a1, uint64_t a2)
{
  return sub_144B83C(a2);
}

uint64_t sub_148A078(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A080()
{
}

void *sub_148A0DC(uint64_t a1, uint64_t a2)
{
  return sub_144B89C(a2);
}

uint64_t sub_148A0E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A0EC()
{
}

uint64_t sub_148A148(uint64_t a1, uint64_t a2)
{
  return sub_144B940(a2);
}

uint64_t sub_148A150(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A158()
{
}

void *sub_148A1B4(uint64_t a1, uint64_t a2)
{
  return sub_144B9C8(a2);
}

uint64_t sub_148A1BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A1C4()
{
}

void *sub_148A220(uint64_t a1, uint64_t a2)
{
  return sub_144BA6C(a2);
}

uint64_t sub_148A228(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A230()
{
}

void *sub_148A28C(uint64_t a1, uint64_t a2)
{
  return sub_144BB10(a2);
}

uint64_t sub_148A294(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A29C()
{
}

void *sub_148A2F8(uint64_t a1, uint64_t a2)
{
  return sub_144BBB4(a2);
}

uint64_t sub_148A300(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A308()
{
}

void *sub_148A364(uint64_t a1, uint64_t a2)
{
  return sub_144BC58(a2);
}

uint64_t sub_148A36C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A374()
{
}

uint64_t sub_148A3C4(uint64_t a1, uint64_t a2)
{
  return sub_144BCDC(a2);
}

uint64_t sub_148A3CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A3D4()
{
}

uint64_t sub_148A430(uint64_t a1, uint64_t a2)
{
  return sub_144BD58(a2);
}

uint64_t sub_148A438(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A440()
{
}

uint64_t sub_148A4A4(uint64_t a1, uint64_t a2)
{
  return sub_144BDE0(a2);
}

uint64_t sub_148A4AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A4B4()
{
}

uint64_t sub_148A504(uint64_t a1, uint64_t a2)
{
  return sub_144BEB4(a2);
}

uint64_t sub_148A50C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A514()
{
}

void *sub_148A560(uint64_t a1, uint64_t a2)
{
  return sub_144BF30(a2);
}

uint64_t sub_148A568(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A570()
{
}

void sub_148A5B8()
{
}

uint64_t sub_148A5DC(uint64_t a1, uint64_t a2)
{
  return sub_144BFA8(a2);
}

uint64_t sub_148A5E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_148A5EC()
{
}

double sub_148A640(uint64_t a1, uint64_t a2)
{
  return sub_144C004(a2);
}

uint64_t sub_148A648(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A650()
{
}

uint64_t sub_148A6A4(uint64_t a1, uint64_t a2)
{
  return sub_144C084(a2);
}

uint64_t sub_148A6AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_148A6B4()
{
}

void *sub_148A704(uint64_t a1, uint64_t a2)
{
  return sub_144C124(a2);
}

uint64_t sub_148A70C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A714()
{
}

uint64_t sub_148A764(uint64_t a1, uint64_t a2)
{
  return sub_144C1A0(a2);
}

uint64_t sub_148A76C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A774()
{
}

double sub_148A7CC(uint64_t a1, uint64_t a2)
{
  return sub_144C21C(a2);
}

uint64_t sub_148A7D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A7DC()
{
}

uint64_t sub_148A838(uint64_t a1, uint64_t a2)
{
  return sub_144C2A0(a2);
}

uint64_t sub_148A840(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A848()
{
}

double sub_148A8A0(uint64_t a1, uint64_t a2)
{
  return sub_144C35C(a2);
}

uint64_t sub_148A8A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A8B0()
{
}

uint64_t sub_148A904(uint64_t a1, uint64_t a2)
{
  return sub_144C3E0(a2);
}

uint64_t sub_148A90C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A914()
{
}

uint64_t sub_148A964(uint64_t a1, uint64_t a2)
{
  return sub_144C47C(a2);
}

uint64_t sub_148A96C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A974()
{
}

uint64_t sub_148A9D0(uint64_t a1, uint64_t a2)
{
  return sub_144C4F8(a2);
}

uint64_t sub_148A9D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148A9E0()
{
}

double sub_148AA34(uint64_t a1, uint64_t a2)
{
  return sub_144C59C(a2);
}

uint64_t sub_148AA3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AA44()
{
}

uint64_t sub_148AA98(uint64_t a1, uint64_t a2)
{
  return sub_144C61C(a2);
}

uint64_t sub_148AAA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_148AAA8()
{
}

void *sub_148AB08(uint64_t a1, uint64_t a2)
{
  return sub_144C6BC(a2);
}

uint64_t sub_148AB10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AB18()
{
}

void *sub_148AB74(uint64_t a1, uint64_t a2)
{
  return sub_144C748(a2);
}

uint64_t sub_148AB7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AB84()
{
}

uint64_t sub_148ABE0(uint64_t a1, uint64_t a2)
{
  return sub_144C7D0(a2);
}

uint64_t sub_148ABE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148ABF0()
{
}

double sub_148AC58(uint64_t a1, uint64_t a2)
{
  return sub_144C880(a2);
}

uint64_t sub_148AC60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AC68()
{
}

void *sub_148ACB8(uint64_t a1, uint64_t a2)
{
  return sub_144C934(a2);
}

uint64_t sub_148ACC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148ACC8()
{
}

uint64_t sub_148AD20(uint64_t a1, uint64_t a2)
{
  return sub_144C9B0(a2);
}

uint64_t sub_148AD28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AD30()
{
}

void *sub_148AD88(uint64_t a1, uint64_t a2)
{
  return sub_144CA54(a2);
}

uint64_t sub_148AD90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AD98()
{
}

void *sub_148ADF8(uint64_t a1, uint64_t a2)
{
  return sub_144CAD8(a2);
}

uint64_t sub_148AE00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AE08()
{
}

void sub_148AE50()
{
}

uint64_t sub_148AE74(uint64_t a1, uint64_t a2)
{
  return sub_144CB80(a2);
}

uint64_t sub_148AE7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_148AE84()
{
}

void *sub_148AED8(uint64_t a1, uint64_t a2)
{
  return sub_144CBDC(a2);
}

uint64_t sub_148AEE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AEE8()
{
}

uint64_t sub_148AF3C(uint64_t a1, uint64_t a2)
{
  return sub_144CC78(a2);
}

uint64_t sub_148AF44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AF4C()
{
}

double sub_148AFBC(uint64_t a1, uint64_t a2)
{
  return sub_144CD14(a2);
}

uint64_t sub_148AFC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148AFCC()
{
}

void *sub_148B028(uint64_t a1, uint64_t a2)
{
  return sub_144CDDC(a2);
}

uint64_t sub_148B030(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148B038()
{
}

uint64_t sub_148B08C(uint64_t a1, uint64_t a2)
{
  return sub_144CE80(a2);
}

uint64_t sub_148B094(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148B09C()
{
}

void *sub_148B0F4(uint64_t a1, uint64_t a2)
{
  return sub_1479E98(a2);
}

uint64_t sub_148B0FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_148B104()
{
}

uint64_t sub_148B154(uint64_t a1, uint64_t a2)
{
  return sub_1482774(a2);
}

uint64_t sub_148B15C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_148B164(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(unsigned char *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void sub_148B1C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_136AEB8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B248(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1370964(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B2C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_136DBDC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B348(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13716DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B3C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1373970(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B448(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1375384();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B4C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_136C3E8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B548(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13835A8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B5C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13853F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B648(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1384AE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B6C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13861C4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B748(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13873B4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B7C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1388818(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B848(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1389294(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B8C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B4C00();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B948(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B5318();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148B9C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_137E71C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BA48(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_138A99C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BAC8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1390200(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BB48(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1390D60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BBC8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_139196C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BC48(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1393FBC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BCC8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_147CA4C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BD48(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_139AB58(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BDC8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_139B938(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BE48(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_139C79C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BEC8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1399B4C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BF48(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13BFCB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148BFC8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13BC8E4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C048(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13BB750(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C0C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13B4428(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C148(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_138C634(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C1C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13A4C0C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C248(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13BD2B0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C2C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1387928(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C348(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13881EC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C3C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13A54E4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C448(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1390720(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C4C8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1391280(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C548(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13A5B24(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C5C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_136B4E4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C648(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13B3CCC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C6C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13B804C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C748(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13BED88(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C7C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13BF354(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C848(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13C25F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C8C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13C7768(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C948(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13CCED4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148C9C8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13CD34C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148CA48(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13CE130(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148CAC8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B10B4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148CB48(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13D5144(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_148CBC8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D6118(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      v13 = *v7++;
      result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_148CC44(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D67B4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      v13 = *v7++;
      result = (uint64_t *)sub_148CCC0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148CCC0(uint64_t a1, std::string *a2)
{
  return sub_1370F2C(a2, a1);
}

std::string *sub_148CCD0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D6478(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      v13 = *v7++;
      result = sub_148CD4C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148CD4C(uint64_t a1, std::string *a2)
{
  return sub_136E304(a2, a1);
}

void sub_148CD5C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D68D0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148CDD8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148CDD8(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_148CDE8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D6994(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_148CE64(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = sub_13D6AE0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148CEE0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_148CEE0(uint64_t a1, uint64_t a2)
{
  return sub_1375B80(a2, a1);
}

uint64_t *sub_148CEF0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D623C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_148CF6C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D7364(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148CFE8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148CFE8(uint64_t a1, std::string *a2)
{
  return sub_1383B6C(a2, a1);
}

std::string *sub_148CFF8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D753C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_148D074(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D74A0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148D0F0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148D0F0(uint64_t a1, std::string *a2)
{
  return sub_13852C4(a2, a1);
}

std::string *sub_148D100(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D7664(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148D17C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D7824(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148D1F8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D79B4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_148D274(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13D7AA4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148D2F0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148D2F0(uint64_t a1, uint64_t a2)
{
}

void sub_148D300(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_15C1D10(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148D37C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148D37C(uint64_t a1, uint64_t a2)
{
}

void sub_148D38C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_15C1DB0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148D408(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148D408(uint64_t a1, uint64_t a2)
{
}

void sub_148D418(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D7104(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148D494(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148D494(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_148D4A4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D7BD4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148CCC0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148D520(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D7E30(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148D59C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D7F48(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_148D618(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D8060(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148D694(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148D694(uint64_t a1, uint64_t a2)
{
}

std::string *sub_148D6A4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D81D8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_148D720(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_1481E2C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148D79C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_148D79C(uint64_t a1, std::string *a2)
{
  return sub_147D0D8(a2, a1);
}

void sub_148D7AC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D87A0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148D828(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148D828(uint64_t a1, uint64_t a2)
{
}

void sub_148D838(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D8824(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148D8B4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148D8B4(uint64_t a1, uint64_t a2)
{
}

void sub_148D8C4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D88C0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148D940(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148D940(uint64_t a1, uint64_t a2)
{
}

void sub_148D950(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D86A8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148D9CC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148D9CC(uint64_t a1, uint64_t a2)
{
}

void sub_148D9DC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13D9A2C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148DA58(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148DA58(uint64_t a1, uint64_t a2)
{
}

void sub_148DA68(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13D9774(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148DAE4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148DAE4(uint64_t a1, uint64_t a2)
{
}

void sub_148DAF4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D96E0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148DB70(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148DB70(uint64_t a1, uint64_t a2)
{
}

void sub_148DB80(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D9384(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148DBFC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148DBFC(uint64_t a1, uint64_t a2)
{
}

void sub_148DC0C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D7DD4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148DC88(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148DC88(uint64_t a1, uint64_t a2)
{
}

void sub_148DC98(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D8CD0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148DD14(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148DD14(uint64_t a1, uint64_t a2)
{
}

void sub_148DD24(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D97FC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148DDA0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148DDA0(uint64_t a1, uint64_t a2)
{
}

std::string *sub_148DDB0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D789C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_148DE2C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148DE2C(uint64_t a1, std::string *a2)
{
  return sub_13880D4(a2, a1);
}

uint64_t *sub_148DE3C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D7938(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_148DEB8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13D8D74(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148DF34(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148DF34(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_148DF44(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D7EA8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148DFC0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148DFC0(uint64_t a1, std::string *a2)
{
  return sub_1390C78(a2, a1);
}

uint64_t *sub_148DFD0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13D7FC0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148E04C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148E04C(uint64_t a1, std::string *a2)
{
  return sub_13917D8(a2, a1);
}

std::string *sub_148E05C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13D8E0C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_148E0D8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D6194(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148E154(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148E154(uint64_t a1, uint64_t a2)
{
}

void sub_148E164(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13D9308(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148D2F0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148E1E0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13D94CC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148E25C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148E25C(uint64_t a1, uint64_t a2)
{
}

void sub_148E26C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D992C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148E2E8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148E2E8(uint64_t a1, uint64_t a2)
{
}

void sub_148E2F8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D99A8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148E374(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148E374(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_148E384(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13DA0A8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148CCC0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_148E400(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_13DA634(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148E47C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148E47C(uint64_t a1, std::string *a2)
{
  return sub_136DB0C(a2, a1);
}

void sub_148E48C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13DA6BC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148E508(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148E508(uint64_t a1, uint64_t a2)
{
}

void sub_148E518(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_13DA770(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148E594(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148E594(uint64_t a1, uint64_t a2)
{
}

std::string *sub_148E5A4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_15C1974(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148E620(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_13DAD10(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_148E69C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_148E69C(uint64_t a1, std::string *a2)
{
  return sub_13D5610(a2, a1);
}

void sub_148E6AC()
{
}

void sub_148E6F4()
{
}

void sub_148E718()
{
}

void sub_148E760()
{
}

void sub_148E784()
{
}

void sub_148E7CC()
{
}

void sub_148E7F0()
{
}

void sub_148E838()
{
}

void sub_148E85C()
{
}

void sub_148E8A4()
{
}

void sub_148E8C8()
{
}

void sub_148E910()
{
}

void sub_148E934()
{
}

void sub_148E97C()
{
}

void sub_148E9A0()
{
}

void sub_148E9E8()
{
}

void sub_148EA0C()
{
}

void sub_148EAA0()
{
}

void sub_148EAE8()
{
}

void sub_148EB0C()
{
}

void sub_148EB54()
{
}

void sub_148EB78()
{
}

void sub_148EBC0()
{
}

void sub_148EBE4()
{
}

void sub_148EC2C()
{
}

void sub_148EC50()
{
}

void sub_148EC98()
{
}

void sub_148ECBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13DAF4C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148ED3C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13DBFA0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148EDBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13A208C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148EE3C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13C0900(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148EEBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13EED8C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148EF3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13BB0B4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148EFBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F083C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F03C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13F3778(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148F0B8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148F0B8(uint64_t a1, uint64_t a2)
{
}

void sub_148F0C8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13F37D4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148F144(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148F144(uint64_t a1, uint64_t a2)
{
}

void sub_148F154(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13D9AD0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DC498(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148F1D0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13F3B24(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148F24C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148F24C(uint64_t a1, uint64_t a2)
{
}

void sub_148F25C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_13D9664(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_148F2D8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_148F2D8(uint64_t a1, uint64_t a2)
{
}

void sub_148F2E8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_13F3BC8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_148F364(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_148F364(uint64_t a1, uint64_t a2)
{
}

void sub_148F374()
{
}

void sub_148F3BC()
{
}

void sub_148F3E0()
{
}

void sub_148F428()
{
}

void sub_148F44C()
{
}

void sub_148F494()
{
}

void sub_148F4B8()
{
}

void sub_148F500()
{
}

void sub_148F524()
{
}

void sub_148F56C()
{
}

void sub_148F590()
{
}

void sub_148F5D8()
{
}

void sub_148F5FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FEBD8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F67C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FC270(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F6FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FBD14(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F77C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FE5AC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F7FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_140145C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F87C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14019D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F8FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_140378C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F97C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F7554(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148F9FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F7F9C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FA7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F84BC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FAFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F89DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FB7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F941C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FBFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F993C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FC7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F8EFC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FCFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F9E5C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FD7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FA380(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FDFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FA884(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FE7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FADA8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FEFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FB2CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FF7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13FB7F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_148FFFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1402314(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149007C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14041F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14900FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1416F38(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149017C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_143B314(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14901FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16F0B54();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149027C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1419438(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14902FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_141C224(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149037C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14514FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14903FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1420258(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149047C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1422780(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14904FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_141F968(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149057C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_141FDE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14905FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1420DF0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149067C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14275CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14906FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1430044(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149077C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1425000(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14907FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1425BD8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149087C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_142D694(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14908FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1428AA8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149097C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_142DE60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14909FC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1418B14(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490A7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_140BB20(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490AFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1446A34(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490B7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1432A18(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490BFC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1435BC4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490C7C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_143BDF4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490CFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_143CFAC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490D7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14410E8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490DFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_143D7B8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490E7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_143DDB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490EFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_143EE3C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490F7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_143FFCC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1490FFC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14415DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149107C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1445944(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14910FC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1446178(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_149117C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144981C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_14911F8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14911F8(uint64_t a1, std::string *a2)
{
  return sub_13FF3BC(a2, a1);
}

void sub_1491208(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_14495CC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1491284(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1491284(uint64_t a1, std::string *a2)
{
  return sub_13FD110(a2, a1);
}

uint64_t *sub_1491294(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1449544(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1491310(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1449794(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1194C34(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_149138C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1449A30(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1301598(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1491408(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1449AAC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1491484(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491484(uint64_t a1, std::string *a2)
{
  return sub_14021E8(a2, a1);
}

uint64_t *sub_1491494(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1449C14(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1491510(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491510(uint64_t a1, std::string *a2)
{
  return sub_14040DC(a2, a1);
}

std::string *sub_1491520(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1448E4C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_149159C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1448F44(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491618(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1448FC0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491694(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144903C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491710(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1449134(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_149178C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_14491B0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491808(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_14490B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1491884(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144922C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DC984(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491900(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_14492B0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_149197C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1449334(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DC984(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_14919F8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_14493B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DC984(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1491A74(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144943C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DC984(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1491AF0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_14494C0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DC984(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1491B6C(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_1449B48(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1491BE8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1491BE8(uint64_t a1, std::string *a2)
{
  return sub_1403420(a2, a1);
}

std::string *sub_1491BF8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1449C9C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1491C74(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491C74(uint64_t a1, std::string *a2)
{
  return sub_1404CBC(a2, a1);
}

std::string *sub_1491C84(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144A6DC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1491D00(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491D00(uint64_t a1, std::string *a2)
{
  return sub_1417E18(a2, a1);
}

uint64_t *sub_1491D10(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144C4F8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1491D8C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491D8C(uint64_t a1, std::string *a2)
{
  return sub_143BC80(a2, a1);
}

void sub_1491D9C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_1788ABC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1491E18(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1491E18(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1491E28(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144A940(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1491EA4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491EA4(uint64_t a1, std::string *a2)
{
  return sub_141A168(a2, a1);
}

void sub_1491EB4(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_144ABE4(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1491F30(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1491F30(uint64_t a1, std::string *a2)
{
  return sub_141C918(a2, a1);
}

std::string *sub_1491F40(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1478378(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1491FBC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1491FBC(uint64_t a1, std::string *a2)
{
  return sub_140C4A0(a2, a1);
}

std::string *sub_1491FCC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144AEE4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1492048(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492048(uint64_t a1, std::string *a2)
{
  return sub_1420C34(a2, a1);
}

std::string *sub_1492058(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144B190(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_14920D4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14920D4(uint64_t a1, std::string *a2)
{
  return sub_14235D0(a2, a1);
}

uint64_t *sub_14920E4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144ADD4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148E47C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1492160(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144AE5C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148E47C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_14921DC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144AF94(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1492258(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492258(uint64_t a1, std::string *a2)
{
  return sub_142149C(a2, a1);
}

std::string *sub_1492268(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144B574(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_14922E4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14922E4(uint64_t a1, std::string *a2)
{
  return sub_1427DF0(a2, a1);
}

std::string *sub_14922F4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144BC58(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1492370(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492370(uint64_t a1, std::string *a2)
{
  return sub_14306F8(a2, a1);
}

std::string *sub_1492380(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144B3AC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122CEF4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_14923FC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144B438(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1492478(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492478(uint64_t a1, std::string *a2)
{
  return sub_1426B68(a2, a1);
}

std::string *sub_1492488(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144B89C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1492504(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492504(uint64_t a1, std::string *a2)
{
  return sub_142DD18(a2, a1);
}

uint64_t *sub_1492514(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144B6A4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1492590(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492590(uint64_t a1, std::string *a2)
{
  return sub_1429064(a2, a1);
}

uint64_t *sub_14925A0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144B940(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_149261C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_149261C(uint64_t a1, std::string *a2)
{
  return sub_142E300(a2, a1);
}

uint64_t *sub_149262C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144A8B0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_14926A8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14926A8(uint64_t a1, std::string *a2)
{
  return sub_141930C(a2, a1);
}

std::string *sub_14926B8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1449E2C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1492734(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492734(uint64_t a1, std::string *a2)
{
  return sub_140C194(a2, a1);
}

void sub_1492744(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_144CD14(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_14927C0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_14927C0(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_14927D0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144BEB4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1301598(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_149284C(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_144C004(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_14928C8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_14928C8(uint64_t a1, std::string *a2)
{
  return sub_1436724(a2, a1);
}

void sub_14928D8(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_144C59C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_14928C8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1492954(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144C6BC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122CEF4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14929D0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144CA54(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492A4C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144C748(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122B604(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1492AC8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144C7D0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1492B44(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492B44(uint64_t a1, std::string *a2)
{
  return sub_143EB80(a2, a1);
}

void sub_1492B54(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_144C880(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1492BD0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1492BD0(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1492BE0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144C934(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1492C5C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492C5C(uint64_t a1, std::string *a2)
{
  return sub_1440674(a2, a1);
}

std::string *sub_1492C6C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144CAD8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1492CE8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492CE8(uint64_t a1, std::string *a2)
{
  return sub_144204C(a2, a1);
}

std::string *sub_1492CF8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_144CBDC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1492D74(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492D74(uint64_t a1, std::string *a2)
{
  return sub_1446060(a2, a1);
}

uint64_t *sub_1492D84(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_144CC78(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1492E00(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1492E00(uint64_t a1, std::string *a2)
{
  return sub_144691C(a2, a1);
}

void sub_1492E10()
{
}

void sub_1492E74()
{
}

void sub_1492EBC()
{
}

void sub_1492EE0()
{
}

void sub_1492F28()
{
}

void sub_1492F4C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1456390(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1492FCC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1450964(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149304C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1451FA0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14930CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1452C48(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149314C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1453AFC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14931CC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14524FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149324C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15BA4A0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14932CC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1454568(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149334C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1455040(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14933CC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1455964(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149344C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1455F74(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14934CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_145F65C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149354C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146040C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14935CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1462604();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149364C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1461AA8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14936CC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146B54C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149374C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146A870(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14937CC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146B058(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149384C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146C188(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14938CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146C76C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_149394C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14768FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14939CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1474DA4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1493A4C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1475494(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1493ACC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = sub_1478958(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1493B48(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1493B48(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1493B58(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_14782E8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1493BD4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1493BD4(uint64_t a1, std::string *a2)
{
  return sub_1451344(a2, a1);
}

uint64_t *sub_1493BE4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1478428(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1493C60(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1478558(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_148CFE8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1493CDC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1478678(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_1493D58(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1493D58(uint64_t a1, std::string *a2)
{
  return sub_14543D8(a2, a1);
}

uint64_t *sub_1493D68(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_14784B0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1493DE4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1493DE4(uint64_t a1, std::string *a2)
{
  return sub_1450824(a2, a1);
}

std::string *sub_1493DF4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_15C2090(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1493E70(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1478704(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1493EEC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1493EEC(uint64_t a1, std::string *a2)
{
  return sub_1454EDC(a2, a1);
}

uint64_t *sub_1493EFC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_14787AC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1493F78(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1493F78(uint64_t a1, std::string *a2)
{
  return sub_1455818(a2, a1);
}

std::string *sub_1493F88(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1478854(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122B604(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1494004(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_14788DC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1494080(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1494080(uint64_t a1, std::string *a2)
{
  return sub_13221BC(a2, a1);
}

std::string *sub_1494090(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1478BE8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_149410C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_1478CBC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_12C32C0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1494188(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1478EAC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1494204(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_1494204(uint64_t a1, uint64_t a2)
{
  return sub_1462F14(a2, a1);
}

uint64_t *sub_1494214(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1478E08(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_12C2F98(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1494290(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1479164(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_149430C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_149430C(uint64_t a1, std::string *a2)
{
  return sub_146BE6C(a2, a1);
}

uint64_t *sub_149431C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1479038(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1494398(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1494398(uint64_t a1, std::string *a2)
{
  return sub_146AF40(a2, a1);
}

std::string *sub_14943A8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_14790E0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1494424(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    v10 = &a2[a5];
    do
    {
      result = (std::string *)sub_14791F0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = sub_14944A0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14944A0(uint64_t a1, std::string *a2)
{
  return sub_146BF9C(a2, a1);
}

void sub_14944B0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      sub_1479294(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_149452C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_149452C(uint64_t a1, uint64_t a2)
{
}

void sub_149453C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_14798D4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_14945B8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_14945B8(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_14945C8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_14797FC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1494644(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1479878(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_14946C0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_14946C0(uint64_t a1, uint64_t a2)
{
}

void sub_14946D0()
{
}

void sub_1494718()
{
}

void sub_149473C()
{
}

void sub_1494784()
{
}

void sub_14947A8()
{
}

void sub_14947F0()
{
}

void sub_1494814()
{
}

void sub_149485C()
{
}

void sub_1494880()
{
}

void sub_14948C8()
{
}

void sub_14948EC()
{
}

void sub_1494934()
{
}

void sub_1494958()
{
}

void sub_14949A0()
{
}

void sub_14949C4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_147DAE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_1494A44(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    v10 = (uint64_t **)&a2[a5];
    do
    {
      result = (uint64_t *)sub_1481F34(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      result = (uint64_t *)sub_1494AC0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1494AC0(uint64_t a1, std::string *a2)
{
  return sub_147E618(a2, a1);
}

void *sub_1494AD0(void *a1)
{
  v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1494B44(void *a1)
{
  sub_1494AD0(a1);

  operator delete();
}

uint64_t sub_1494B7C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0x100000001;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1494BA4(uint64_t a1, char *a2, int32x2_t *a3)
{
  v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  v6 = (void *)(a1 + 8);
  while (1)
  {
    v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        v7 = v27 + 2;
      }
    }
    v27 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    uint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        v27 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v27) {
          return 0;
        }
        unint64_t v15 = v25;
        goto LABEL_26;
      }
      uint64_t v14 = v7 + 2;
    }
    v27 = v14;
LABEL_26:
    if (v15 > 4 || ((1 << v15) & 0x1A) == 0)
    {
      if (*v6) {
        v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_47:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      return v27;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    v19 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v20 = *v19;
      int v21 = v15 + (v20 << 7);
      unint64_t v15 = (v21 - 128);
      if (v20 < 0)
      {
        v27 = (char *)sub_188C138((uint64_t)v7, (v21 - 128));
        if (!v27) {
          return 0;
        }
        unint64_t v15 = v26;
        goto LABEL_35;
      }
      v19 = v7 + 2;
    }
    v27 = v19;
LABEL_35:
    if (v15 > 3 || v15 == 2)
    {
      if (*v6) {
        v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 1;
LABEL_46:
      sub_188C020(v24, v15, v23);
      goto LABEL_47;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 24) = v15;
    goto LABEL_47;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      v7 = v27;
    }
    v27 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v27) {
      return 0;
    }
    goto LABEL_47;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v27;
  }
  return 0;
}

unsigned char *sub_1494E1C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1494FC0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1495080()
{
  return 1;
}

void *sub_1495088@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AbConfigMetadata");
}

double sub_1495098(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24B8D18;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = xmmword_2141820;
  return result;
}

uint64_t sub_1495118(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_1496C14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x3F) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_17:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_21;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_25:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_29;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_29;
        }
      }
LABEL_11:
      if ((v5 & 0x20) == 0) {
        goto LABEL_36;
      }
LABEL_33:
      unint64_t v11 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
      }
      goto LABEL_36;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_25;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 0x20) == 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 0x20) == 0) {
        goto LABEL_36;
      }
    }
    goto LABEL_33;
  }
LABEL_36:
  if ((v5 & 0xC0) != 0) {
    *(_WORD *)(v1 + 96) = 0;
  }
  if ((v5 & 0x700) != 0)
  {
    *(unsigned char *)(v1 + 100) = 0;
    *(_WORD *)(v1 + 98) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_14952F4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253A038)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1495D8C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1195110((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14953B8(uint64_t a1)
{
  sub_14952F4(a1);

  operator delete();
}

uint64_t sub_14953F0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_1495118(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    double result = sub_1495118(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1495480(uint64_t a1, char *a2, int32x2_t *a3)
{
  v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v23 + 2;
      }
    }
    v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        v22 = (void *)*v22;
      }
      uint64_t v21 = sub_1497018((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      unint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_11920F8(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      int v16 = (unsigned __int8 *)(v15 + 1);
      v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_1497018(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        int v16 = (unsigned __int8 *)v23;
      }
      unint64_t v15 = (char *)sub_11920F8(a3, v19, v16);
      v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      char v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      char v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_1495688(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1496514(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        char v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        char v13 = v4 + 2;
      }
      uint64_t v4 = sub_1496514(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1495834(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1496860(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1496860(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1495918(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    double result = (std::string *)sub_1195190((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (void *)*v12;
      }
      data = (std::string *)sub_1497018((uint64_t)v12);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      char v13 = v9;
    }
    else {
      char v13 = &off_253A070;
    }
    double result = sub_1495A3C(data, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1495A3C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    double result = sub_149EC00(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      char v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        char v13 = (uint64_t *)*v13;
      }
      double result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    double result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_31:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    double result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      v22 = (uint64_t *)*v22;
    }
    double result = sub_1881DF4((std::string **)&v3[3], v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_40;
    }
LABEL_37:
    v23 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
    unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      unint64_t v25 = (uint64_t *)*v25;
    }
    double result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v23, v25);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_43;
    }
LABEL_40:
    unint64_t v26 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
    v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      v28 = (uint64_t *)*v28;
    }
    double result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v26, v28);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      v3[4].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 97);
      goto LABEL_14;
    }
LABEL_43:
    v3[4].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 96);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x700) == 0) {
    goto LABEL_21;
  }
  if ((v9 & 0x100) == 0)
  {
    if ((v9 & 0x200) == 0) {
      goto LABEL_18;
    }
LABEL_46:
    v3[4].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 99);
    if ((v9 & 0x400) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  v3[4].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 98);
  if ((v9 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_18:
  if ((v9 & 0x400) != 0) {
LABEL_19:
  }
    v3[4].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 100);
LABEL_20:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_21:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1495CD8()
{
  return 1;
}

void *sub_1495CE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.DispatcherAbConfigMetadata");
}

void *sub_1495CF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24B8D98;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_1495D8C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_17;
    }
  }
  else if (v4)
  {
    goto LABEL_17;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_17:
  sub_149EB80((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1495EA0(uint64_t a1)
{
  sub_1495D8C(a1);

  operator delete();
}

uint64_t sub_1495ED8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v55 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v54 = (uint64_t *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)(*(void *)v55 + 1);
    unsigned int v8 = **(unsigned char **)v55;
    if ((char)**(unsigned char **)v55 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v55, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v55 + 2);
      }
    }
    *(void *)v55 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        char v13 = (void *)(a1 + 48);
        goto LABEL_53;
      case 2u:
        if (v8 != 18) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        char v13 = (void *)(a1 + 56);
        goto LABEL_53;
      case 3u:
        if (v8 != 26) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        char v13 = (void *)(a1 + 64);
        goto LABEL_53;
      case 4u:
        if (v8 != 34) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        char v13 = (void *)(a1 + 72);
        goto LABEL_53;
      case 5u:
        if (v8 != 42) {
          goto LABEL_72;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          std::string::size_type v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)v55 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            v22 = sub_14970CC(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
            std::string::size_type v18 = *(unsigned __int8 **)v55;
          }
          uint64_t v17 = (char *)sub_1496484(a3, v21, v18);
          *(void *)v55 = v17;
          if (!v17) {
            goto LABEL_92;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 42) {
            goto LABEL_55;
          }
        }
      case 6u:
        if (v8 != 48) {
          goto LABEL_72;
        }
        v5 |= 0x40u;
        v23 = v7 + 1;
        uint64_t v24 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v7, v24);
          *(void *)v55 = v44;
          *(unsigned char *)(a1 + 96) = v45 != 0;
          if (!v44) {
            goto LABEL_92;
          }
        }
        else
        {
          v23 = v7 + 2;
LABEL_39:
          *(void *)v55 = v23;
          *(unsigned char *)(a1 + 96) = v24 != 0;
        }
        goto LABEL_55;
      case 7u:
        if (v8 != 58) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        char v13 = (void *)(a1 + 80);
        goto LABEL_53;
      case 8u:
        if (v8 != 64) {
          goto LABEL_72;
        }
        v5 |= 0x80u;
        std::string::size_type v27 = v7 + 1;
        uint64_t v28 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v7, v28);
          *(void *)v55 = v46;
          *(unsigned char *)(a1 + 97) = v47 != 0;
          if (!v46) {
            goto LABEL_92;
          }
        }
        else
        {
          std::string::size_type v27 = v7 + 2;
LABEL_48:
          *(void *)v55 = v27;
          *(unsigned char *)(a1 + 97) = v28 != 0;
        }
        goto LABEL_55;
      case 9u:
        if (v8 != 74) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        char v13 = (void *)(a1 + 88);
LABEL_53:
        v31 = (std::string *)sub_1880F84(v13, v12);
        v32 = (void *)sub_188C244(v31, *(char **)v55, (uint64_t)a3);
        goto LABEL_54;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_72;
        }
        v5 |= 0x100u;
        v33 = v7 + 1;
        uint64_t v34 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v7, v34);
          *(void *)v55 = v48;
          *(unsigned char *)(a1 + 98) = v49 != 0;
          if (!v48) {
            goto LABEL_92;
          }
        }
        else
        {
          v33 = v7 + 2;
LABEL_61:
          *(void *)v55 = v33;
          *(unsigned char *)(a1 + 98) = v34 != 0;
        }
        goto LABEL_55;
      case 0xBu:
        if (v8 != 88) {
          goto LABEL_72;
        }
        v5 |= 0x200u;
        v36 = v7 + 1;
        uint64_t v37 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v7, v37);
          *(void *)v55 = v50;
          *(unsigned char *)(a1 + 99) = v51 != 0;
          if (!v50) {
            goto LABEL_92;
          }
        }
        else
        {
          v36 = v7 + 2;
LABEL_66:
          *(void *)v55 = v36;
          *(unsigned char *)(a1 + 99) = v37 != 0;
        }
        goto LABEL_55;
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_72;
        }
        v5 |= 0x400u;
        v39 = v7 + 1;
        uint64_t v40 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v7, v40);
          *(void *)v55 = v52;
          *(unsigned char *)(a1 + 100) = v53 != 0;
          if (!v52) {
            goto LABEL_92;
          }
        }
        else
        {
          v39 = v7 + 2;
LABEL_71:
          *(void *)v55 = v39;
          *(unsigned char *)(a1 + 100) = v40 != 0;
        }
        goto LABEL_55;
      default:
LABEL_72:
        if (v8) {
          BOOL v42 = (v8 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v54)
          {
            v43 = (std::string *)((*v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v43 = (std::string *)sub_188DBD8(v54);
            int v7 = *(char **)v55;
          }
          v32 = sub_1885AC0(v8, v43, v7, a3);
LABEL_54:
          *(void *)v55 = v32;
          if (!v32) {
            goto LABEL_92;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_92:
        }
          *(void *)v55 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v55;
    }
  }
}

uint64_t sub_1496484(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1496C90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1496514(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_24:
  int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *int v4 = 42;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      int v4 = sub_1496E38(v9, v11, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v12 = *(unsigned char *)(a1 + 96);
    *int v4 = 48;
    v4[1] = v12;
    v4 += 2;
    if ((v6 & 0x10) == 0)
    {
LABEL_16:
      if ((v6 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_16;
  }
  int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_17:
    if ((v6 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 97);
  *int v4 = 64;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_18:
    if ((v6 & 0x100) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_19:
    if ((v6 & 0x200) == 0) {
      goto LABEL_20;
    }
    goto LABEL_37;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 98);
  *int v4 = 80;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x200) == 0)
  {
LABEL_20:
    if ((v6 & 0x400) == 0) {
      goto LABEL_43;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v15 = *(unsigned char *)(a1 + 99);
  *int v4 = 88;
  v4[1] = v15;
  v4 += 2;
  if ((v6 & 0x400) != 0)
  {
LABEL_40:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 100);
    *int v4 = 96;
    v4[1] = v16;
    v4 += 2;
  }
LABEL_43:
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_1496860(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1496F24(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_24;
  }
  if (v8)
  {
    unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_41;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v19 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_41:
  unint64_t v22 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v2 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_47:
    unint64_t v28 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v2 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x20) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_44:
  unint64_t v25 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  v2 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
    goto LABEL_47;
  }
LABEL_15:
  if ((v8 & 0x20) != 0)
  {
LABEL_16:
    unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  uint64_t v12 = v2 + 2;
  if ((v8 & 0x40) == 0) {
    uint64_t v12 = v2;
  }
  if ((v8 & 0x80) != 0) {
    uint64_t v2 = v12 + 2;
  }
  else {
    uint64_t v2 = v12;
  }
LABEL_24:
  uint64_t v13 = v2 + 2;
  if ((v8 & 0x100) == 0) {
    uint64_t v13 = v2;
  }
  if ((v8 & 0x200) != 0) {
    v13 += 2;
  }
  if ((v8 & 0x400) != 0) {
    v13 += 2;
  }
  if ((v8 & 0x700) != 0) {
    uint64_t result = v13;
  }
  else {
    uint64_t result = v2;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v31 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    result += v32;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_1496B0C()
{
  return 1;
}

void *sub_1496B14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AbConfig");
}

uint64_t sub_1496B24(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1496BDC(uint64_t a1)
{
  sub_1496B24(a1);

  operator delete();
}

uint64_t sub_1496C14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1496C90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      char v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    char v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_1496E38(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1496F24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1497000()
{
  return 1;
}

void *sub_1497008@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AbKeyValuePair");
}

uint64_t sub_1497018(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B8E18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(_DWORD *)(result + 96) = 0;
  *(unsigned char *)(result + 100) = 0;
  return result;
}

void *sub_14970CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B8E98;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_1497150(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  sub_149EC7C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1497250(uint64_t a1)
{
  sub_1497150(a1);

  operator delete();
}

uint64_t sub_1497288(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1497FB8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x1F) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_20;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_24:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v5 & 0x10) == 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v5 & 0x10) == 0) {
          goto LABEL_31;
        }
      }
      goto LABEL_28;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_24;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_31;
    }
LABEL_28:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
    }
  }
LABEL_31:
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(unsigned char *)(v11 + 80) = 0;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_1497418(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v33 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v34 + 1);
    unsigned int v8 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)uint64_t v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_39;
      case 2u:
        if (v8 != 18) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_39;
      case 3u:
        if (v8 != 26) {
          goto LABEL_48;
        }
        uint64_t v15 = v7 - 1;
        while (1)
        {
          unint64_t v16 = (unsigned __int8 *)(v15 + 1);
          *(void *)uint64_t v34 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_14984AC(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            unint64_t v16 = *(unsigned __int8 **)v34;
          }
          uint64_t v15 = (char *)sub_14977C8(a3, v19, v16);
          *(void *)uint64_t v34 = v15;
          if (!v15) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_41;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
        goto LABEL_39;
      case 5u:
        if (v8 != 42) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v22 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_39;
      case 6u:
        if (v8 != 50) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v23 = *(void *)(a1 + 8);
        char v12 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          char v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
LABEL_39:
        uint64_t v24 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v25 = (void *)sub_188C244(v24, *(char **)v34, (uint64_t)a3);
        goto LABEL_40;
      case 7u:
        if (v8 != 56) {
          goto LABEL_48;
        }
        v5 |= 0x20u;
        uint64_t v26 = v7 + 1;
        uint64_t v27 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v7, v27);
          *(void *)uint64_t v34 = v31;
          *(unsigned char *)(a1 + 88) = v32 != 0;
          if (!v31) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v26 = v7 + 2;
LABEL_47:
          *(void *)uint64_t v34 = v26;
          *(unsigned char *)(a1 + 88) = v27 != 0;
        }
        goto LABEL_41;
      default:
LABEL_48:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v33)
          {
            uint64_t v30 = (std::string *)((*v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8(v33);
            unint64_t v7 = *(char **)v34;
          }
          unint64_t v25 = sub_1885AC0(v8, v30, v7, a3);
LABEL_40:
          *(void *)uint64_t v34 = v25;
          if (!v25) {
            goto LABEL_60;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

uint64_t sub_14977C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1498000(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1497858(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_14981DC(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_15:
      if ((v6 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_15;
  }
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_16:
    if ((v6 & 0x20) == 0) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 88);
  *uint64_t v4 = 56;
  v4[1] = v12;
  v4 += 2;
LABEL_24:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1497A88(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1498324(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_20;
  }
  if (v8)
  {
    unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_28;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v17 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_31:
    unint64_t v23 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v25 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      uint64_t v25 = v24;
    }
    v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_28:
  unint64_t v20 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
    goto LABEL_31;
  }
LABEL_14:
  if ((v8 & 0x10) != 0)
  {
LABEL_15:
    unint64_t v9 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  if ((v8 & 0x20) != 0) {
    v2 += 2;
  }
LABEL_20:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v26 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v2 += v27;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1497CB8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_149ECFC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_23:
    unint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
LABEL_26:
    unint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      v3[3].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 88);
      goto LABEL_12;
    }
LABEL_29:
    unint64_t v23 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v23, v25);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1497EC8()
{
  return 1;
}

void *sub_1497ED0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AbExecutionSpec");
}

uint64_t sub_1497EE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1497F80(uint64_t a1)
{
  sub_1497EE0(a1);

  operator delete();
}

uint64_t sub_1497FB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1498000(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)std::string::size_type v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      *(void *)std::string::size_type v24 = v19;
      *(_DWORD *)(a1 + 32) = v20;
      goto LABEL_30;
    }
    uint64_t v22 = sub_188C0D0((uint64_t)v8, v20);
    *(void *)std::string::size_type v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_37;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      unint64_t v17 = (uint64_t *)*v17;
    }
    std::string::size_type v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
    std::string::size_type v15 = (void *)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)std::string::size_type v24 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v24;
    }
    std::string::size_type v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_24;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  *(void *)std::string::size_type v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_14981DC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1498324(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14983E4()
{
  return 1;
}

void *sub_14983EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AbExperimentValuePair");
}

uint64_t sub_14983FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B8F18;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(unsigned char *)(result + 88) = 0;
  return result;
}

uint64_t sub_14984AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B8F98;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1498534(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1498600(uint64_t a1)
{
  sub_1498534(a1);

  operator delete();
}

uint64_t sub_1498638(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14986F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)unint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_27;
        }
        v5 |= 8u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v26 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_35;
        }
        uint64_t v24 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)unint64_t v26 = v24;
        *(_DWORD *)(a1 + 48) = v25;
        if (v24) {
          goto LABEL_35;
        }
        goto LABEL_42;
      case 2u:
        if (v9 != 18) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 24);
        goto LABEL_26;
      case 3u:
        if (v9 != 26) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_26;
      case 4u:
        if (v9 != 34) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 40);
LABEL_26:
        int v20 = (std::string *)sub_1880F84(v17, v16);
        int v21 = (void *)sub_188C244(v20, *(char **)v26, (uint64_t)a3);
        goto LABEL_34;
      default:
LABEL_27:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            int v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v26;
          }
          int v21 = sub_1885AC0(v9, v23, v8, a3);
LABEL_34:
          *(void *)unint64_t v26 = v21;
          if (!v21) {
            goto LABEL_42;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          *(void *)unint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v26;
    }
  }
}

unsigned char *sub_1498978(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_11:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1498B0C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1498C5C()
{
  return 1;
}

void *sub_1498C64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AppleRpcHeaderWrapper");
}

uint64_t sub_1498C74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B9018;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

BOOL sub_1498CFC(unsigned int a1)
{
  return a1 < 5;
}

uint64_t sub_1498D08(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1498DC0(uint64_t a1)
{
  sub_1498D08(a1);

  operator delete();
}

uint64_t sub_1498DF8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x3C) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1498E80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v38 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    return *(void *)v38;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v38 + 1);
    unsigned int v8 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v38, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)int v38 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_46;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)int v38 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v12 = v32;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)int v38 = v11;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v12;
          goto LABEL_54;
        }
        if (*v6) {
          v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 1;
        goto LABEL_76;
      case 2u:
        if (v8 != 18) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 24);
        goto LABEL_45;
      case 3u:
        if (v8 != 24) {
          goto LABEL_46;
        }
        uint64_t v18 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v19 = *v18;
        int v20 = v12 + (v19 << 7);
        unint64_t v12 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)int v38 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v12 = v33;
        }
        else
        {
          uint64_t v18 = v7 + 2;
LABEL_24:
          *(void *)int v38 = v18;
        }
        if (v12 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v12;
          goto LABEL_54;
        }
        if (*v6) {
          v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 3;
        goto LABEL_76;
      case 4u:
        if (v8 != 32) {
          goto LABEL_46;
        }
        int v21 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v22 = *v21;
        int v23 = v12 + (v22 << 7);
        unint64_t v12 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)int v38 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v12 = v34;
        }
        else
        {
          int v21 = v7 + 2;
LABEL_31:
          *(void *)int v38 = v21;
        }
        if (v12 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_54;
        }
        if (*v6) {
          v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 4;
        goto LABEL_76;
      case 5u:
        if (v8 != 40) {
          goto LABEL_46;
        }
        uint64_t v24 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v25 = *v24;
        int v26 = v12 + (v25 << 7);
        unint64_t v12 = (v26 - 128);
        if (v25 < 0)
        {
          *(void *)int v38 = sub_188C138((uint64_t)v7, (v26 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v12 = v35;
        }
        else
        {
          uint64_t v24 = v7 + 2;
LABEL_38:
          *(void *)int v38 = v24;
        }
        if (v12 > 7)
        {
          if (*v6) {
            v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v37 = 5;
LABEL_76:
          sub_188C020(v37, v12, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 52) = v12;
        }
        goto LABEL_54;
      case 6u:
        if (v8 != 50) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
LABEL_45:
        int v28 = (std::string *)sub_1880F84(v17, v16);
        BOOL v29 = (void *)sub_188C244(v28, *(char **)v38, (uint64_t)a3);
        goto LABEL_53;
      default:
LABEL_46:
        if (v8) {
          BOOL v30 = (v8 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v6)
          {
            uint64_t v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v38;
          }
          BOOL v29 = sub_1885AC0(v8, v31, v7, a3);
LABEL_53:
          *(void *)int v38 = v29;
          if (!v29) {
            return 0;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            return *(void *)v38;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v38;
    }
  }
}

unsigned char *sub_14992C8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *uint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    *uint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 52);
    *uint64_t v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_14995A4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_33;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v11 = *(_DWORD *)(a1 + 44);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_33;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v13 = *(_DWORD *)(a1 + 48);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
  if ((v1 & 0x20) != 0)
  {
LABEL_29:
    int v15 = *(_DWORD *)(a1 + 52);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v16;
  }
LABEL_33:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1499760(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_21;
    }
LABEL_20:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
LABEL_21:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_9;
    }
LABEL_22:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1499888()
{
  return 1;
}

void *sub_1499890@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.BlurMetadata");
}

void *sub_14998A0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1499914(void *a1)
{
  sub_14998A0(a1);

  operator delete();
}

uint64_t sub_149994C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1499974(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v28 + 2;
      }
    }
    int v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_28;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          int v28 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v28) {
            goto LABEL_53;
          }
          unint64_t v13 = v24;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v28 = v12;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_35;
        }
        if (*v7) {
          int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v27 = 1;
        goto LABEL_47;
      case 2u:
        if (v9 != 17) {
          goto LABEL_28;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v17;
        goto LABEL_27;
      case 3u:
        if (v9 != 24) {
          goto LABEL_28;
        }
        unint64_t v18 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v19 = *v18;
        int v20 = v13 + (v19 << 7);
        unint64_t v13 = (v20 - 128);
        if (v19 < 0)
        {
          int v28 = (char *)sub_188C138((uint64_t)v8, (v20 - 128));
          if (!v28) {
            goto LABEL_53;
          }
          unint64_t v13 = v25;
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_22:
          int v28 = v18;
        }
        if (v13 > 3)
        {
          if (*v7) {
            int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v27 = 3;
LABEL_47:
          sub_188C020(v27, v13, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 36) = v13;
        }
        goto LABEL_35;
      case 4u:
        if (v9 != 33) {
          goto LABEL_28;
        }
        uint64_t v21 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 40) = v21;
LABEL_27:
        int v28 = v16;
        goto LABEL_35;
      default:
LABEL_28:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v28;
          }
          int v28 = (char *)sub_1885AC0(v9, v23, v8, a3);
          if (!v28) {
            goto LABEL_53;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          int v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

unsigned char *sub_1499C50(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *int v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 36);
    *int v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v14 = *(void *)(a1 + 40);
    *int v4 = 33;
    *(void *)(v4 + 1) = v14;
    v4 += 9;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1499E64(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 32);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
    if ((v1 & 4) != 0)
    {
      int v6 = *(_DWORD *)(a1 + 36);
      if (v6 < 0) {
        uint64_t v7 = 11;
      }
      else {
        uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v7;
    }
    if ((v1 & 8) != 0) {
      uint64_t v5 = v2 + 9;
    }
    else {
      uint64_t v5 = v2;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v5 += v11;
  }
  *(_DWORD *)(a1 + 20) = v5;
  return v5;
}

std::string *sub_1499F30(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1499FA4()
{
  return 1;
}

void *sub_1499FAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RerouteMetadata");
}

void *sub_1499FBC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149A030(void *a1)
{
  sub_1499FBC(a1);

  operator delete();
}

uint64_t sub_149A068(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_149A090(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v17 = v8 + 1;
      LODWORD(v16) = *v8;
      if ((v16 & 0x80) == 0) {
        goto LABEL_26;
      }
      int v18 = *v17;
      uint64_t v16 = v16 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v17 = v8 + 2;
LABEL_26:
        uint64_t v31 = v17;
        *(_DWORD *)(a1 + 32) = v16;
        goto LABEL_36;
      }
      unint64_t v25 = (char *)sub_188C138((uint64_t)v8, v16);
      uint64_t v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v20 = v8 + 2;
LABEL_31:
      uint64_t v31 = v20;
      *(_DWORD *)(a1 + 28) = v19;
      goto LABEL_36;
    }
    int v27 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    BOOL v22 = v8 + 1;
    uint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    uint64_t v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      BOOL v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(unsigned char *)(a1 + 24) = v23 != 0;
      goto LABEL_36;
    }
    BOOL v29 = (char *)sub_188C138((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(unsigned char *)(a1 + 24) = v30 != 0;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_149A2EC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_149A4C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
    if ((v1 & 4) != 0)
    {
      int v5 = *(_DWORD *)(a1 + 32);
      if (v5 < 0) {
        uint64_t v6 = 11;
      }
      else {
        uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v6;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_149A584(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_149A5E8()
{
  return 1;
}

void *sub_149A5F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ChurnHash");
}

void *sub_149A600(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B9098;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

double sub_149A688(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B9118;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_149A704(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B9198;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_149A780(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149A820(uint64_t a1)
{
  sub_149A780(a1);

  operator delete();
}

uint64_t sub_149A858(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0x1E) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_149A8A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v39 + 1);
    unsigned int v9 = **(unsigned char **)v39;
    if ((char)**(unsigned char **)v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v39 + 2);
      }
    }
    *(void *)v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v39, (uint64_t)a3);
        goto LABEL_44;
      case 2u:
        if (v9 != 16) {
          goto LABEL_37;
        }
        unint64_t v16 = v8 + 1;
        unint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)v39 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v39) {
            goto LABEL_67;
          }
          unint64_t v17 = v31;
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)v39 = v16;
        }
        if (v17 <= 4)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v17;
          goto LABEL_45;
        }
        if (*v7) {
          int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v38 = 2;
        goto LABEL_61;
      case 3u:
        if (v9 != 24) {
          goto LABEL_37;
        }
        v5 |= 4u;
        int v21 = v8 + 1;
        LODWORD(v20) = *v8;
        if ((v20 & 0x80) == 0) {
          goto LABEL_24;
        }
        int v22 = *v21;
        uint64_t v20 = v20 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v20);
          *(void *)v39 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_67;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_24:
          *(void *)v39 = v21;
          *(_DWORD *)(a1 + 36) = v20;
        }
        goto LABEL_45;
      case 4u:
        if (v9 != 32) {
          goto LABEL_37;
        }
        v5 |= 8u;
        int v24 = v8 + 1;
        LODWORD(v23) = *v8;
        if ((v23 & 0x80) == 0) {
          goto LABEL_29;
        }
        int v25 = *v24;
        uint64_t v23 = v23 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v23);
          *(void *)v39 = v34;
          *(_DWORD *)(a1 + 40) = v35;
          if (!v34) {
            goto LABEL_67;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_29:
          *(void *)v39 = v24;
          *(_DWORD *)(a1 + 40) = v23;
        }
        goto LABEL_45;
      case 5u:
        if (v9 != 40) {
          goto LABEL_37;
        }
        int v26 = v8 + 1;
        unint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v27 = *v26;
        int v28 = v17 + (v27 << 7);
        unint64_t v17 = (v28 - 128);
        if (v27 < 0)
        {
          *(void *)v39 = sub_188C138((uint64_t)v8, (v28 - 128));
          if (!*(void *)v39) {
            goto LABEL_67;
          }
          unint64_t v17 = v36;
        }
        else
        {
          int v26 = v8 + 2;
LABEL_34:
          *(void *)v39 = v26;
        }
        if (v17 > 2)
        {
          if (*v7) {
            int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v38 = 5;
LABEL_61:
          sub_188C020(v38, v17, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 44) = v17;
        }
        goto LABEL_45;
      default:
LABEL_37:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v39;
          }
          uint64_t v15 = sub_1885AC0(v9, v30, v8, a3);
LABEL_44:
          *(void *)v39 = v15;
          if (!v15) {
            goto LABEL_67;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_67:
        }
          *(void *)v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v39;
    }
  }
}

unsigned char *sub_149AC44(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *char v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    *char v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_149AF00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_29;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  if ((v1 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 36);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
    if ((v1 & 8) == 0)
    {
LABEL_15:
      if ((v1 & 0x10) == 0) {
        goto LABEL_29;
      }
      goto LABEL_25;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_15;
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v11;
  if ((v1 & 0x10) != 0)
  {
LABEL_25:
    int v12 = *(_DWORD *)(a1 + 44);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v13;
  }
LABEL_29:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_149B074(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_18;
    }
LABEL_17:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_8;
    }
LABEL_18:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_149B164()
{
  return 1;
}

void *sub_149B16C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.AutonaviLogMetadata");
}

void *sub_149B17C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B9218;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_149B204(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_149B75C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x1F) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_20;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_24:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v5 & 0x10) == 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v5 & 0x10) == 0) {
          goto LABEL_31;
        }
      }
      goto LABEL_28;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_24;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_31;
    }
LABEL_28:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
    }
  }
LABEL_31:
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 80) = 0;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_149B394(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_149BCA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_149B424(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_149EDF8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_23;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
LABEL_26:
    uint64_t v20 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v22 = (uint64_t *)*v22;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
      goto LABEL_12;
    }
LABEL_29:
    uint64_t v23 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
    int v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      int v25 = (uint64_t *)*v25;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v23, v25);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_149B634(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

uint64_t sub_149B66C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149B724(uint64_t a1)
{
  sub_149B66C(a1);

  operator delete();
}

uint64_t sub_149B75C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_149B7D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_149B980(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_149BA6C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t result = v4 + v8 + v5 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_149BB4C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_149BB60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.HttpHeaderField");
}

uint64_t sub_149BB70(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  sub_149ED78((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149BC70(uint64_t a1)
{
  sub_149BB70(a1);

  operator delete();
}

uint64_t sub_149BCA8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v33 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v34 + 1);
    unsigned int v8 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)uint64_t v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_34;
      case 2u:
        if (v8 != 18) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_34;
      case 3u:
        if (v8 != 26) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
        goto LABEL_34;
      case 4u:
        if (v8 != 32) {
          goto LABEL_48;
        }
        v5 |= 0x20u;
        uint64_t v17 = v7 + 1;
        LODWORD(v16) = *v7;
        if ((v16 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v7, v16);
          *(void *)uint64_t v34 = v31;
          *(_DWORD *)(a1 + 88) = v32;
          if (!v31) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v17 = v7 + 2;
LABEL_25:
          *(void *)uint64_t v34 = v17;
          *(_DWORD *)(a1 + 88) = v16;
        }
        goto LABEL_36;
      case 5u:
        if (v8 != 42) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_34;
      case 6u:
        if (v8 != 50) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
LABEL_34:
        std::string::size_type v21 = (std::string *)sub_1880F84(v13, v12);
        int v22 = (void *)sub_188C244(v21, *(char **)v34, (uint64_t)a3);
        goto LABEL_35;
      case 7u:
        if (v8 != 58) {
          goto LABEL_48;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          std::string::size_type v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)uint64_t v34 = v23 + 1;
          int v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            int v28 = sub_149D5D8(*(void *)(a1 + 24));
            uint64_t v27 = sub_188CDC8(a1 + 24, (uint64_t)v28);
            std::string::size_type v24 = *(unsigned __int8 **)v34;
          }
          uint64_t v23 = (char *)sub_149C044(a3, v27, v24);
          *(void *)uint64_t v34 = v23;
          if (!v23) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 58) {
            goto LABEL_36;
          }
        }
      default:
LABEL_48:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v33)
          {
            uint64_t v30 = (std::string *)((*v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8(v33);
            uint64_t v7 = *(char **)v34;
          }
          int v22 = sub_1885AC0(v8, v30, v7, a3);
LABEL_35:
          *(void *)uint64_t v34 = v22;
          if (!v22) {
            goto LABEL_60;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

uint64_t sub_149C044(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_149B7D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_149C0D4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 88);
  *uint64_t v4 = 32;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_15:
  if ((v6 & 8) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 58;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_149B980(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_149C348(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_149BA6C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_36;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_23:
  unint64_t v15 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_26:
  unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_29:
  unint64_t v21 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  v2 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0)
  {
LABEL_32:
    int v24 = *(_DWORD *)(a1 + 88);
    if (v24 < 0) {
      uint64_t v25 = 11;
    }
    else {
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v25;
  }
LABEL_36:
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v2 += v29;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_149C5A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.HttpRequestHeader");
}

void *sub_149C5B4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_149ED78(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149C634(void *a1)
{
  sub_149C5B4(a1);

  operator delete();
}

uint64_t sub_149C66C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_149B75C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_149C6FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v32 + 2;
      }
    }
    int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v23 = v8 + 1;
      LODWORD(v22) = *v8;
      if ((v22 & 0x80) == 0) {
        goto LABEL_36;
      }
      int v24 = *v23;
      uint64_t v22 = v22 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v23 = v8 + 2;
LABEL_36:
        int v32 = v23;
        *(_DWORD *)(a1 + 52) = v22;
        goto LABEL_41;
      }
      unint64_t v28 = (char *)sub_188C138((uint64_t)v8, v22);
      int v32 = v28;
      *(_DWORD *)(a1 + 52) = v29;
      if (!v28) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      uint64_t v26 = v8 + 1;
      LODWORD(v25) = *v8;
      if ((v25 & 0x80) == 0) {
        goto LABEL_40;
      }
      int v27 = *v26;
      uint64_t v25 = v25 + (v27 << 7) - 128;
      if ((v27 & 0x80000000) == 0)
      {
        uint64_t v26 = v8 + 2;
LABEL_40:
        int v32 = v26;
        *(_DWORD *)(a1 + 48) = v25;
        goto LABEL_41;
      }
      uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v25);
      int v32 = v30;
      *(_DWORD *)(a1 + 48) = v31;
      if (!v30) {
        goto LABEL_50;
      }
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      int v32 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        unint64_t v21 = sub_149D5D8(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = (unsigned __int8 *)v32;
      }
      uint64_t v16 = (char *)sub_149C044(a3, v20, v17);
      int v32 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v32;
    }
    int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_149C97C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_149B980(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    unint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    unint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_149CBBC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_149BA6C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      int v9 = *(_DWORD *)(a1 + 48);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v10;
    }
    if ((v8 & 2) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 52);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v12;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_149CCE0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_149EDF8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_149CDE0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_149CE18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.HttpResponseHeader");
}

uint64_t sub_149CE28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253A2C8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_149BB70(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_149C5B4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149CEF8(uint64_t a1)
{
  sub_149CE28(a1);

  operator delete();
}

uint64_t sub_149CF30(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_149B204(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_149C66C(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_149CFA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v15 = sub_149D70C((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = v19;
    }
    BOOL v14 = sub_149D160(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_149D65C((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      int v7 = v19;
    }
    BOOL v14 = (char *)sub_149B394(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    BOOL v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_149D160(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_149C6FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_149D1F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_149C0D4(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_149C97C(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_149D370(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_149C348(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_149CBBC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_149D448(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_149D65C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253A230;
      }
      uint64_t result = sub_149B424(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_149D70C((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_253A290;
      }
      uint64_t result = sub_149CCE0(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_149D54C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = *(unsigned int *)(v3 + 32);
    uint64_t v5 = *(void *)(v3 + 40);
    while ((int)v4 >= 1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v4--);
      if ((~*(_DWORD *)(v6 + 16) & 3) != 0) {
        return 0;
      }
    }
  }
  if ((v1 & 2) == 0) {
    return 1;
  }
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v8 = *(unsigned int *)(v7 + 32);
  uint64_t v9 = *(void *)(v7 + 40);
  do
  {
    BOOL result = (int)v8 < 1;
    if ((int)v8 < 1) {
      break;
    }
    uint64_t v10 = *(void *)(v9 + 8 * v8--);
  }
  while ((~*(_DWORD *)(v10 + 16) & 3) == 0);
  return result;
}

void *sub_149D5C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.HttpWrapper");
}

void *sub_149D5D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *BOOL result = off_24B9298;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_149D65C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B9318;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void *sub_149D70C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B9398;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_149D7A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B9418;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_149D824(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149D8DC(uint64_t a1)
{
  sub_149D824(a1);

  operator delete();
}

uint64_t sub_149D914(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_149D990(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      BOOL v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    BOOL v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_149DB38(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_149DC24(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_149DD00()
{
  return 1;
}

void *sub_149DD08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.OverrideTypeQueryPair");
}

void *sub_149DD18(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_149EE74(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149DD98(void *a1)
{
  sub_149DD18(a1);

  operator delete();
}

uint64_t sub_149DDD0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_149D914(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_149DE4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          BOOL v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_149E358(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_149DFEC(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_149DFEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_149D990(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_149E07C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_149DB38(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_149E1C0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_149DC24(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_149E270(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_149EEF4((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_149E340()
{
  return 1;
}

void *sub_149E348@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo.log.RboApplied");
}

void *sub_149E358(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B9498;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_149E3DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B9518;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void sub_149E47C()
{
}

double sub_149E4D0(uint64_t a1, uint64_t a2)
{
  return sub_1495098(a2);
}

uint64_t sub_149E4D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E4E0()
{
}

uint64_t sub_149E54C(uint64_t a1, uint64_t a2)
{
  return sub_1497018(a2);
}

uint64_t sub_149E554(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E55C()
{
}

void *sub_149E5B4(uint64_t a1, uint64_t a2)
{
  return sub_14970CC(a2);
}

uint64_t sub_149E5BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E5C4()
{
}

void *sub_149E618(uint64_t a1, uint64_t a2)
{
  return sub_1495CF0(a2);
}

uint64_t sub_149E620(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E628()
{
}

uint64_t sub_149E690(uint64_t a1, uint64_t a2)
{
  return sub_14983FC(a2);
}

uint64_t sub_149E698(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E6A0()
{
}

uint64_t sub_149E6FC(uint64_t a1, uint64_t a2)
{
  return sub_14984AC(a2);
}

uint64_t sub_149E704(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E70C()
{
}

uint64_t sub_149E768(uint64_t a1, uint64_t a2)
{
  return sub_1498C74(a2);
}

uint64_t sub_149E770(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E778()
{
}

void *sub_149E7D4(uint64_t a1, uint64_t a2)
{
  return sub_149A600(a2);
}

uint64_t sub_149E7DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E7E4()
{
}

double sub_149E834(uint64_t a1, uint64_t a2)
{
  return sub_149A688(a2);
}

uint64_t sub_149E83C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E844()
{
}

uint64_t sub_149E894(uint64_t a1, uint64_t a2)
{
  return sub_149A704(a2);
}

uint64_t sub_149E89C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E8A4()
{
}

void *sub_149E900(uint64_t a1, uint64_t a2)
{
  return sub_149B17C(a2);
}

uint64_t sub_149E908(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E910()
{
}

void *sub_149E968(uint64_t a1, uint64_t a2)
{
  return sub_149D5D8(a2);
}

uint64_t sub_149E970(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E978()
{
}

uint64_t sub_149E9E0(uint64_t a1, uint64_t a2)
{
  return sub_149D65C(a2);
}

uint64_t sub_149E9E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149E9F0()
{
}

void *sub_149EA44(uint64_t a1, uint64_t a2)
{
  return sub_149D70C(a2);
}

uint64_t sub_149EA4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149EA54()
{
}

void *sub_149EAA4(uint64_t a1, uint64_t a2)
{
  return sub_149D7A8(a2);
}

uint64_t sub_149EAAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149EAB4()
{
}

void *sub_149EB0C(uint64_t a1, uint64_t a2)
{
  return sub_149E358(a2);
}

uint64_t sub_149EB14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_149EB1C()
{
}

uint64_t sub_149EB70(uint64_t a1, uint64_t a2)
{
  return sub_149E3DC(a2);
}

uint64_t sub_149EB78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_149EB80(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1496B24(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_149EC00(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_14970CC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_149EC7C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1497EE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_149ECFC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_14984AC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_149ED78(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_149B66C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_149EDF8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_149D5D8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_149EE74(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_149D824(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_149EEF4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_149E358(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_149EF70()
{
  dword_254F0E8 = 1001;
  qword_254F0F0 = (uint64_t)&unk_2145420;
  sub_1882224((unint64_t)&off_2532480, 1001, 9, 0, 0);
  dword_254F0F8 = 1002;
  byte_254F0FC = 0;
  sub_1882224((unint64_t)&off_2532480, 1002, 8, 0, 0);
  qword_254F100 = 10001;
  sub_18829C0((unint64_t)&off_25358A8, 10001, 14, 0, 0, (uint64_t)sub_1498CFC);
  dword_254F108 = 10002;
  qword_254F110 = (uint64_t)&off_253A1D8;
  sub_1882AC4((unint64_t)&off_25358A8, 10002, 11, 0, 0, (uint64_t)&off_253A1D8);
  qword_254F118 = 10001;
  sub_18829C0((unint64_t)&off_2536A68, 10001, 14, 0, 0, (uint64_t)sub_1498CFC);
  qword_254F120 = 10001;
  sub_18829C0((unint64_t)&off_2535160, 10001, 14, 0, 0, (uint64_t)sub_1498CFC);
  dword_254F128 = 10001;
  qword_254F130 = (uint64_t)&off_253A170;
  sub_1882AC4((unint64_t)&off_2541B28, 10001, 11, 0, 0, (uint64_t)&off_253A170);
  dword_254F138 = 10002;
  qword_254F140 = (uint64_t)&off_253A1A8;
  sub_1882AC4((unint64_t)&off_2541B28, 10002, 11, 0, 0, (uint64_t)&off_253A1A8);
  dword_254F148 = 10001;
  qword_254F150 = (uint64_t)&off_253A170;
  sub_1882AC4((unint64_t)&off_2541D38, 10001, 11, 0, 0, (uint64_t)&off_253A170);
  dword_254F158 = 10001;
  qword_254F160 = (uint64_t)&off_253A170;
  sub_1882AC4((unint64_t)&off_2536D08, 10001, 11, 0, 0, (uint64_t)&off_253A170);
  dword_254F168 = 10001;
  qword_254F170 = (uint64_t)&off_253A170;
  sub_1882AC4((unint64_t)&off_2536EB0, 10001, 11, 0, 0, (uint64_t)&off_253A170);
  dword_254F178 = 10001;
  qword_254F180 = (uint64_t)&off_253A170;
  sub_1882AC4((unint64_t)&off_2534020, 10001, 11, 0, 0, (uint64_t)&off_253A170);
  dword_254F188 = 10001;
  qword_254F190 = (uint64_t)&off_253A170;
  sub_1882AC4((unint64_t)&off_2541FB8, 10001, 11, 0, 0, (uint64_t)&off_253A170);
  qword_254F198 = 1051;
  sub_1882224((unint64_t)&off_2535018, 1051, 5, 0, 0);
  qword_254F1A0 = 1052;
  sub_1882224((unint64_t)&off_2535018, 1052, 2, 0, 0);
  dword_254F1A8 = 201;
  qword_254F1B0 = 0;
  sub_1882224((unint64_t)&off_253F1A0, 201, 1, 0, 0);
  dword_254F1B8 = 17001;
  qword_254F1C0 = (uint64_t)&off_253F530;
  sub_1882AC4((unint64_t)&off_252C268, 17001, 11, 0, 0, (uint64_t)&off_253F530);
  dword_254F1C8 = 17002;
  qword_254F1D0 = (uint64_t)&off_2539528;
  sub_1882AC4((unint64_t)&off_252C268, 17002, 11, 0, 0, (uint64_t)&off_2539528);
  dword_254F1D8 = 17003;
  qword_254F1E0 = (uint64_t)&off_25398D0;
  sub_1882AC4((unint64_t)&off_252C268, 17003, 11, 0, 0, (uint64_t)&off_25398D0);
  dword_254F1E8 = 17004;
  qword_254F1F0 = (uint64_t)&off_252E660;
  sub_1882AC4((unint64_t)&off_252C268, 17004, 11, 0, 0, (uint64_t)&off_252E660);
  dword_254F1F8 = 17005;
  qword_254F200 = (uint64_t)&off_254CA18;
  sub_1882AC4((unint64_t)&off_252C268, 17005, 11, 0, 0, (uint64_t)&off_254CA18);
  dword_254F208 = 17006;
  qword_254F210 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_252C268, 17006, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254F218 = 17007;
  qword_254F220 = (uint64_t)&off_253A320;
  sub_1882AC4((unint64_t)&off_252C268, 17007, 11, 0, 0, (uint64_t)&off_253A320);
  dword_254F228 = 17008;
  qword_254F230 = (uint64_t)&off_253A2F0;
  sub_1882AC4((unint64_t)&off_252C268, 17008, 11, 0, 0, (uint64_t)&off_253A2F0);
  dword_254F238 = 10000;
  qword_254F240 = (uint64_t)&unk_2145438;
  sub_1882224((unint64_t)&off_2532BC8, 10000, 9, 0, 0);
  dword_254F248 = 10001;
  byte_254F24C = 0;
  sub_1882224((unint64_t)&off_2532BC8, 10001, 8, 0, 0);
  dword_254F250 = 18401;
  qword_254F258 = (uint64_t)&off_252FBF0;
  sub_1882AC4((unint64_t)&off_252C268, 18401, 11, 0, 0, (uint64_t)&off_252FBF0);
  dword_254F260 = 18402;
  qword_254F268 = (uint64_t)&off_252FC78;
  sub_1882AC4((unint64_t)&off_252C268, 18402, 11, 0, 0, (uint64_t)&off_252FC78);
  dword_254F270 = 18403;
  qword_254F278 = (uint64_t)&off_252FCA0;
  sub_1882AC4((unint64_t)&off_252C268, 18403, 11, 0, 0, (uint64_t)&off_252FCA0);
  dword_254F280 = 18404;
  qword_254F288 = (uint64_t)&off_252FD08;
  sub_1882AC4((unint64_t)&off_252C268, 18404, 11, 0, 0, (uint64_t)&off_252FD08);
  dword_254F290 = 18405;
  qword_254F298 = (uint64_t)&off_25301D0;
  sub_1882AC4((unint64_t)&off_252C268, 18405, 11, 0, 0, (uint64_t)&off_25301D0);
  dword_254F2A0 = 18406;
  qword_254F2A8 = (uint64_t)&off_2530238;
  sub_1882AC4((unint64_t)&off_252C268, 18406, 11, 0, 0, (uint64_t)&off_2530238);
  dword_254F2B0 = 18407;
  qword_254F2B8 = (uint64_t)&off_252FF58;
  sub_1882AC4((unint64_t)&off_252C268, 18407, 11, 0, 0, (uint64_t)&off_252FF58);
  dword_254F2C0 = 18408;
  qword_254F2C8 = (uint64_t)&off_252FFE8;
  sub_1882AC4((unint64_t)&off_252C268, 18408, 11, 0, 0, (uint64_t)&off_252FFE8);
  dword_254F2D0 = 18409;
  qword_254F2D8 = (uint64_t)&off_253FB60;
  sub_1882AC4((unint64_t)&off_252C268, 18409, 11, 0, 0, (uint64_t)&off_253FB60);
  dword_254F2E0 = 18410;
  qword_254F2E8 = (uint64_t)&off_253FE60;
  sub_1882AC4((unint64_t)&off_252C268, 18410, 11, 0, 0, (uint64_t)&off_253FE60);
  dword_254F2F0 = 18411;
  byte_254F2F4 = 0;

  sub_1882224((unint64_t)&off_252C268, 18411, 8, 0, 0);
}

char *sub_149F700()
{
  qword_2606A48 = (uint64_t)"NONEUNEXPECTED_INTERACTIONUNKNOWN";
  unk_2606A50 = 4;
  dword_2606A58 = 0;
  qword_2606A60 = (uint64_t)"UNEXPECTED_INTERACTIONUNKNOWN";
  unk_2606A68 = 22;
  dword_2606A70 = 3;
  qword_2606A78 = (uint64_t)"UNKNOWN";
  unk_2606A80 = 7;
  dword_2606A88 = 1;
  qword_2606A90 = (uint64_t)"UNKNOWN_VERSIONV3V4";
  *(void *)algn_2606A98 = 15;
  dword_2606AA0 = 1;
  qword_2606AA8 = (uint64_t)"V3V4";
  unk_2606AB0 = 2;
  dword_2606AB8 = 3;
  qword_2606AC0 = (uint64_t)"V4";
  unk_2606AC8 = 2;
  dword_2606AD0 = 4;
  qword_2606AD8 = (uint64_t)"BLUR_ALGORITHM_UNKNOWNORIGIN_BLURUSER_LOCATION_BLUR";
  unk_2606AE0 = 22;
  dword_2606AE8 = 0;
  qword_2606AF0 = (uint64_t)"ORIGIN_BLURUSER_LOCATION_BLUR";
  unk_2606AF8 = 11;
  dword_2606B00 = 1;
  qword_2606B08 = (uint64_t)"USER_LOCATION_BLUR";
  unk_2606B10 = 18;
  dword_2606B18 = 2;
  qword_2606B20 = (uint64_t)"CURRENT_USER_LOCATIONLOCATION_SOURCE_UNKNOWNOTHER_KNOWN_SOURCEPLACE_SEARCH_RESPONSESESSION_ST"
                           "ATETRIP_ORIGINWAYPOINT_TYPEDZILCH";
  *(void *)algn_2606B28 = 21;
  dword_2606B30 = 3;
  qword_2606B38 = (uint64_t)"LOCATION_SOURCE_UNKNOWNOTHER_KNOWN_SOURCEPLACE_SEARCH_RESPONSESESSION_STATETRIP_ORIGINWAYPOINT_TYPEDZILCH";
  unk_2606B40 = 23;
  dword_2606B48 = 0;
  qword_2606B50 = (uint64_t)"OTHER_KNOWN_SOURCEPLACE_SEARCH_RESPONSESESSION_STATETRIP_ORIGINWAYPOINT_TYPEDZILCH";
  unk_2606B58 = 18;
  dword_2606B60 = 1;
  qword_2606B68 = (uint64_t)"PLACE_SEARCH_RESPONSESESSION_STATETRIP_ORIGINWAYPOINT_TYPEDZILCH";
  unk_2606B70 = 21;
  dword_2606B78 = 6;
  qword_2606B80 = (uint64_t)"SESSION_STATETRIP_ORIGINWAYPOINT_TYPEDZILCH";
  unk_2606B88 = 13;
  dword_2606B90 = 2;
  qword_2606B98 = (uint64_t)"TRIP_ORIGINWAYPOINT_TYPEDZILCH";
  unk_2606BA0 = 11;
  dword_2606BA8 = 7;
  qword_2606BB0 = (uint64_t)"WAYPOINT_TYPEDZILCH";
  unk_2606BB8 = 14;
  dword_2606BC0 = 4;
  qword_2606BC8 = (uint64_t)"ZILCH";
  unk_2606BD0 = 5;
  dword_2606BD8 = 5;
  qword_2606BE0 = (uint64_t)"EQUAL_TOGREATER_THANLESS_THANREROUTE_DISTANCE_TO_THRESHOLD_RELATION_UNKNOWN";
  *(void *)algn_2606BE8 = 8;
  dword_2606BF0 = 2;
  qword_2606BF8 = (uint64_t)"GREATER_THANLESS_THANREROUTE_DISTANCE_TO_THRESHOLD_RELATION_UNKNOWN";
  unk_2606C00 = 12;
  dword_2606C08 = 3;
  qword_2606C10 = (uint64_t)"LESS_THANREROUTE_DISTANCE_TO_THRESHOLD_RELATION_UNKNOWN";
  unk_2606C18 = 9;
  dword_2606C20 = 1;
  qword_2606C28 = (uint64_t)"REROUTE_DISTANCE_TO_THRESHOLD_RELATION_UNKNOWN";
  unk_2606C30 = 46;
  dword_2606C38 = 0;
  qword_2606C40 = (uint64_t)"BLUR_TYPE_UNKNOWNFULL_BLURNO_BLURPARTIAL_BLURUNABLE_TO_BLUR";
  *(void *)algn_2606C48 = 17;
  dword_2606C50 = 0;
  qword_2606C58 = (uint64_t)"FULL_BLURNO_BLURPARTIAL_BLURUNABLE_TO_BLUR";
  unk_2606C60 = 9;
  dword_2606C68 = 4;
  qword_2606C70 = (uint64_t)"NO_BLURPARTIAL_BLURUNABLE_TO_BLUR";
  unk_2606C78 = 7;
  dword_2606C80 = 2;
  qword_2606C88 = (uint64_t)"PARTIAL_BLURUNABLE_TO_BLUR";
  unk_2606C90 = 12;
  dword_2606C98 = 3;
  qword_2606CA0 = (uint64_t)"UNABLE_TO_BLUR";
  unk_2606CA8 = 14;
  dword_2606CB0 = 1;
  qword_2606CB8 = (uint64_t)"AUTONAVI_AND_ROWAUTONAVI_ONLYNONEROW_ONLYUNKNOWN";
  unk_2606CC0 = 16;
  dword_2606CC8 = 4;
  qword_2606CD0 = (uint64_t)"AUTONAVI_ONLYNONEROW_ONLYUNKNOWN";
  unk_2606CD8 = 13;
  dword_2606CE0 = 2;
  qword_2606CE8 = (uint64_t)"NONEROW_ONLYUNKNOWN";
  unk_2606CF0 = 4;
  dword_2606CF8 = 1;
  qword_2606D00 = (uint64_t)"ROW_ONLYUNKNOWN";
  unk_2606D08 = 8;
  dword_2606D10 = 3;
  qword_2606D18 = (uint64_t)"UNKNOWN";
  unk_2606D20 = 7;
  dword_2606D28 = 0;
  qword_2606D30 = (uint64_t)"INSIDE_CHINAOUTSIDE_CHINAUNKNOWN_VIEWPORT";
  *(void *)algn_2606D38 = 12;
  dword_2606D40 = 1;
  qword_2606D48 = (uint64_t)"OUTSIDE_CHINAUNKNOWN_VIEWPORT";
  unk_2606D50 = 13;
  dword_2606D58 = 2;
  qword_2606D60 = (uint64_t)"UNKNOWN_VIEWPORT";
  unk_2606D68 = 16;
  dword_2606D70 = 0;
  qword_2606D78 = (uint64_t)"DEBUG_LVLERROR_LVLFATAL_LVLINFO_LVLTRACE_LVLWARN_LVL";
  unk_2606D80 = 9;
  dword_2606D88 = 2;
  uint64_t result = "ERROR_LVLFATAL_LVLINFO_LVLTRACE_LVLWARN_LVL";
  qword_2606D90 = (uint64_t)"ERROR_LVLFATAL_LVLINFO_LVLTRACE_LVLWARN_LVL";
  unk_2606D98 = 9;
  dword_2606DA0 = 5;
  qword_2606DA8 = (uint64_t)"FATAL_LVLINFO_LVLTRACE_LVLWARN_LVL";
  unk_2606DB0 = 9;
  dword_2606DB8 = 6;
  qword_2606DC0 = (uint64_t)"INFO_LVLTRACE_LVLWARN_LVL";
  unk_2606DC8 = 8;
  dword_2606DD0 = 3;
  qword_2606DD8 = (uint64_t)"TRACE_LVLWARN_LVL";
  unk_2606DE0 = 9;
  dword_2606DE8 = 1;
  qword_2606DF0 = (uint64_t)"WARN_LVL";
  unk_2606DF8 = 8;
  dword_2606E00 = 4;
  qword_2606E08 = (uint64_t)"GZIPLZ4NONEZSTD";
  unk_2606E10 = 4;
  dword_2606E18 = 3;
  qword_2606E20 = (uint64_t)"LZ4NONEZSTD";
  unk_2606E28 = 3;
  dword_2606E30 = 2;
  qword_2606E38 = (uint64_t)"NONEZSTD";
  unk_2606E40 = 4;
  dword_2606E48 = 1;
  qword_2606E50 = (uint64_t)"ZSTD";
  unk_2606E58 = 4;
  dword_2606E60 = 4;
  return result;
}

BOOL sub_149F9E0(unsigned int a1)
{
  return a1 < 0xF;
}

uint64_t sub_149F9EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149FAA4(uint64_t a1)
{
  sub_149F9EC(a1);

  operator delete();
}

uint64_t sub_149FADC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_149FB58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      BOOL v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    BOOL v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_149FD00(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_149FDEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_149FEC8()
{
  return 1;
}

void *sub_149FED0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.KeyValuePair");
}

void *sub_149FEE0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122BA8C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_149FF60(void *a1)
{
  sub_149FEE0(a1);

  operator delete();
}

uint64_t sub_149FF98(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_149FADC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_14A0014(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          BOOL v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14A23B8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_11EAAEC(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_14A01B4(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_149FD00(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14A02F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_149FDEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_14A03A8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_122BB8C((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14A0478()
{
  return 1;
}

void *sub_14A0480@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.KeyValuePairList");
}

uint64_t sub_14A0490(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A0530(uint64_t a1)
{
  sub_14A0490(a1);

  operator delete();
}

uint64_t sub_14A0568(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A05B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      *(void *)int v24 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_29;
    }
    uint64_t v22 = sub_188C0D0((uint64_t)v8, v17);
    *(void *)int v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    unint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v15 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_28:
    *(void *)int v24 = v15;
    if (!v15) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v24;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_28;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  *(void *)int v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_14A078C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    *int v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14A08D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14A0994()
{
  return 1;
}

void *sub_14A099C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.KeyValue32Pair");
}

uint64_t sub_14A09AC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A0A4C(uint64_t a1)
{
  sub_14A09AC(a1);

  operator delete();
}

uint64_t sub_14A0A84(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A0ACC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)uint64_t v19 = v7 + 4;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      BOOL v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = *(char **)v19;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_14A0C68(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 21;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14A0D6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14A0E0C()
{
  return 1;
}

void *sub_14A0E14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.KeyValueFloatPair");
}

uint64_t sub_14A0E24(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A0EC4(uint64_t a1)
{
  sub_14A0E24(a1);

  operator delete();
}

uint64_t sub_14A0EFC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A0F44(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    *(void *)uint64_t v19 = v7 + 8;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v19;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_14A10E0(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *unint64_t v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14A11E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14A1284()
{
  return 1;
}

void *sub_14A128C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.KeyValueDoublePair");
}

uint64_t sub_14A129C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A0F44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_14A132C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A13A0(void *a1)
{
  sub_14A132C(a1);

  operator delete();
}

uint64_t sub_14A13D8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14A13FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_33;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v20 + 2;
      }
    }
    unint64_t v20 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 8) {
      goto LABEL_12;
    }
    v5 |= 1u;
    uint64_t v14 = v7 + 1;
    uint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v16 = *v14;
    uint64_t v15 = v15 + (v16 << 7) - 128;
    if ((v16 & 0x80000000) == 0)
    {
      uint64_t v14 = v7 + 2;
LABEL_25:
      unint64_t v20 = v14;
      *(void *)(a1 + 24) = v15;
      goto LABEL_26;
    }
    int v17 = (char *)sub_188C138((uint64_t)v7, v15);
    unint64_t v20 = v17;
    *(void *)(a1 + 24) = v18;
    if (!v17) {
      goto LABEL_34;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_33;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    unint64_t v20 = v7 + 8;
    goto LABEL_26;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v20;
    }
    unint64_t v20 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v20) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_33;
  }
LABEL_34:
  unint64_t v20 = 0;
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

unsigned char *sub_14A15AC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *unint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

unint64_t sub_14A170C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1) {
      unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    else {
      unint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      unint64_t v3 = v2 + 9;
    }
    else {
      unint64_t v3 = v2;
    }
  }
  else
  {
    unint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14A1790(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14A17DC()
{
  return 1;
}

void *sub_14A17E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.Key64ValueDoublePair");
}

char *sub_14A17F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A13FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14A1884(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A193C(uint64_t a1)
{
  sub_14A1884(a1);

  operator delete();
}

uint64_t sub_14A1974(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A19F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_14A1B98(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14A1C84(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14A1D60()
{
  return 1;
}

void *sub_14A1D68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.KeyValueBytesPair");
}

void *sub_14A1D78(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DD96C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A1DF8(void *a1)
{
  sub_14A1D78(a1);

  operator delete();
}

uint64_t sub_14A1E30(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A1974(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_14A1EAC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_14A26EC(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_14A204C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_14A204C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A19F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14A20DC(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14A1B98(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14A2220(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A1C84(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_14A22D0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_14DDAF4((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14A23A0()
{
  return 1;
}

void *sub_14A23A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_base.proto.KeyValueBytesPairList");
}

void *sub_14A23B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B9730;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_14A243C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24B97B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14A24DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_24B9830;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_14A2564(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B98B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_14A25EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B9930;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_14A2670(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B99B0;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_14A26EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_24B9A30;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_14A2770(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B9AB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

BOOL sub_14A2810(unsigned int a1)
{
  return a1 < 7;
}

void *sub_14A281C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C3ED4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A289C(void *a1)
{
  sub_14A281C(a1);

  operator delete();
}

unsigned char *sub_14A28D4(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = sub_15B16B4(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_14A2950(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C19EC(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_11E1C60(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_14A2AF0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_15B1A68(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14A2C34(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B1D1C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_14A2CE4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C3F54((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_14A2DB4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_15B1FC0(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_14A2E0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.MultiMapRegion");
}

uint64_t sub_14A2E1C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  BOOL v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253A3B0)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 48);
    if (v7)
    {
      sub_14A281C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A2F28(uint64_t a1)
{
  sub_14A2E1C(a1);

  operator delete();
}

unsigned char *sub_14A2F60(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t result = sub_15B09D0(*((void *)result + 4));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  unint64_t v5 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_19;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_20:
  uint64_t result = sub_15B16B4(*((unsigned char **)v1 + 5));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_14A28D4(*((unsigned char **)v1 + 6));
LABEL_7:
  if ((v2 & 0xF0) != 0)
  {
    *((void *)v1 + 7) = 0;
    *((void *)v1 + 8) = 0;
    *((void *)v1 + 9) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *((void *)v1 + 10) = 0;
    *((void *)v1 + 11) = 0;
    *((void *)v1 + 12) = 0;
  }
  char v4 = v1[8];
  int v3 = v1 + 8;
  *((_DWORD *)v3 + 24) = 0;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_14A3040(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v59 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v59 + 1);
    unsigned int v9 = **(unsigned char **)v59;
    if ((char)**(unsigned char **)v59 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v59, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v59 + 2);
      }
    }
    *(void *)v59 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 32) = v12;
          uint64_t v8 = *(unsigned __int8 **)v59;
        }
        uint64_t v14 = sub_1198F14(a3, v12, v8);
        goto LABEL_84;
      case 2u:
        if (v9 != 18) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 40);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C19EC((uint64_t)v16);
          *(void *)(a1 + 40) = v15;
          uint64_t v8 = *(unsigned __int8 **)v59;
        }
        uint64_t v14 = sub_11E1C60(a3, v15, v8);
        goto LABEL_84;
      case 3u:
        if (v9 != 25) {
          goto LABEL_77;
        }
        uint64_t v18 = *(void *)v8;
        uint64_t v17 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v18;
        goto LABEL_76;
      case 4u:
        if (v9 != 32) {
          goto LABEL_77;
        }
        uint64_t v19 = (char *)(v8 + 1);
        unint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)v59 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v59) {
            goto LABEL_109;
          }
          unint64_t v20 = v49;
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_27:
          *(void *)v59 = v19;
        }
        if (v20 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v20;
          goto LABEL_85;
        }
        if (*v7) {
          v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v58 = 4;
        goto LABEL_103;
      case 5u:
        if (v9 != 40) {
          goto LABEL_77;
        }
        int v23 = (char *)(v8 + 1);
        unint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v24 = *v23;
        int v25 = v20 + (v24 << 7);
        unint64_t v20 = (v25 - 128);
        if (v24 < 0)
        {
          *(void *)v59 = sub_188C138((uint64_t)v8, (v25 - 128));
          if (!*(void *)v59) {
            goto LABEL_109;
          }
          unint64_t v20 = v50;
        }
        else
        {
          int v23 = (char *)(v8 + 2);
LABEL_34:
          *(void *)v59 = v23;
        }
        if (v20 > 6)
        {
          if (*v7) {
            v57 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v58 = 5;
LABEL_103:
          sub_188C020(v58, v20, v57);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 68) = v20;
        }
        goto LABEL_85;
      case 6u:
        if (v9 != 50) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v26 = *(void *)(a1 + 48);
        if (!v26)
        {
          int v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v27 = (void *)*v27;
          }
          uint64_t v26 = sub_14A4714((uint64_t)v27);
          *(void *)(a1 + 48) = v26;
          uint64_t v8 = *(unsigned __int8 **)v59;
        }
        uint64_t v14 = sub_14A3674(a3, v26, v8);
        goto LABEL_84;
      case 7u:
        if (v9 != 57) {
          goto LABEL_77;
        }
        uint64_t v28 = *(void *)v8;
        uint64_t v17 = v8 + 8;
        v5 |= 0x80u;
        *(void *)(a1 + 72) = v28;
        goto LABEL_76;
      case 8u:
        if (v9 != 64) {
          goto LABEL_77;
        }
        v5 |= 0x100u;
        int v29 = (char *)(v8 + 1);
        uint64_t v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v51 = sub_188C138((uint64_t)v8, v30);
          *(void *)v59 = v51;
          *(unsigned char *)(a1 + 80) = v52 != 0;
          if (!v51) {
            goto LABEL_109;
          }
        }
        else
        {
          int v29 = (char *)(v8 + 2);
LABEL_49:
          *(void *)v59 = v29;
          *(unsigned char *)(a1 + 80) = v30 != 0;
        }
        goto LABEL_85;
      case 9u:
        if (v9 != 72) {
          goto LABEL_77;
        }
        v5 |= 0x200u;
        int v32 = (char *)(v8 + 1);
        uint64_t v33 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v53 = sub_188C138((uint64_t)v8, v33);
          *(void *)v59 = v53;
          *(unsigned char *)(a1 + 81) = v54 != 0;
          if (!v53) {
            goto LABEL_109;
          }
        }
        else
        {
          int v32 = (char *)(v8 + 2);
LABEL_54:
          *(void *)v59 = v32;
          *(unsigned char *)(a1 + 81) = v33 != 0;
        }
        goto LABEL_85;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_77;
        }
        v5 |= 0x400u;
        int v35 = (char *)(v8 + 1);
        uint64_t v36 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v55 = sub_188C138((uint64_t)v8, v36);
          *(void *)v59 = v55;
          *(unsigned char *)(a1 + 82) = v56 != 0;
          if (!v55) {
            goto LABEL_109;
          }
        }
        else
        {
          int v35 = (char *)(v8 + 2);
LABEL_59:
          *(void *)v59 = v35;
          *(unsigned char *)(a1 + 82) = v36 != 0;
        }
        goto LABEL_85;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_77;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v38 = *(void *)(a1 + 8);
        v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          v39 = (uint64_t *)*v39;
        }
        uint64_t v40 = (std::string *)sub_1880F84((void *)(a1 + 24), v39);
        uint64_t v14 = (void *)sub_188C244(v40, *(char **)v59, (uint64_t)a3);
        goto LABEL_84;
      case 0xCu:
        if (v9 != 101) {
          goto LABEL_77;
        }
        int v41 = *(_DWORD *)v8;
        uint64_t v17 = v8 + 4;
        v5 |= 0x800u;
        *(_DWORD *)(a1 + 84) = v41;
        goto LABEL_76;
      case 0xDu:
        if (v9 != 109) {
          goto LABEL_77;
        }
        int v42 = *(_DWORD *)v8;
        uint64_t v17 = v8 + 4;
        v5 |= 0x1000u;
        *(_DWORD *)(a1 + 88) = v42;
        goto LABEL_76;
      case 0xEu:
        if (v9 != 117) {
          goto LABEL_77;
        }
        int v43 = *(_DWORD *)v8;
        uint64_t v17 = v8 + 4;
        v5 |= 0x2000u;
        *(_DWORD *)(a1 + 92) = v43;
        goto LABEL_76;
      case 0xFu:
        if (v9 != 125) {
          goto LABEL_77;
        }
        int v44 = *(_DWORD *)v8;
        uint64_t v17 = v8 + 4;
        v5 |= 0x4000u;
        *(_DWORD *)(a1 + 96) = v44;
        goto LABEL_76;
      case 0x10u:
        if (v9 != 133) {
          goto LABEL_77;
        }
        int v45 = *(_DWORD *)v8;
        uint64_t v17 = v8 + 4;
        v5 |= 0x8000u;
        *(_DWORD *)(a1 + 100) = v45;
        goto LABEL_76;
      case 0x11u:
        if (v9 != 141) {
          goto LABEL_77;
        }
        int v46 = *(_DWORD *)v8;
        uint64_t v17 = v8 + 4;
        v5 |= 0x10000u;
        *(_DWORD *)(a1 + 104) = v46;
LABEL_76:
        *(void *)v59 = v17;
        goto LABEL_85;
      default:
LABEL_77:
        if (v9) {
          BOOL v47 = (v9 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (*v7)
          {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v59;
          }
          uint64_t v14 = sub_1885AC0(v9, v48, (char *)v8, a3);
LABEL_84:
          *(void *)v59 = v14;
          if (!v14) {
            goto LABEL_109;
          }
LABEL_85:
          if (sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_109:
        }
          *(void *)v59 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v59;
    }
  }
}

char *sub_14A3674(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A2950(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14A3704(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  *char v4 = 25;
  *(void *)(v4 + 1) = v13;
  v4 += 9;
  if ((v6 & 0x20) != 0)
  {
LABEL_21:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(int *)(a1 + 64);
    *char v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_27:
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 68);
    *char v4 = 40;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 48);
    *char v4 = 50;
    unsigned int v21 = *(_DWORD *)(v20 + 40);
    v4[1] = v21;
    if (v21 > 0x7F) {
      int v22 = sub_188A9CC(v21, v4 + 1);
    }
    else {
      int v22 = v4 + 2;
    }
    char v4 = sub_14A2AF0(v20, v22, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_36:
      if ((v6 & 0x100) == 0) {
        goto LABEL_37;
      }
      goto LABEL_56;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_36;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 72);
  *char v4 = 57;
  *(void *)(v4 + 1) = v23;
  v4 += 9;
  if ((v6 & 0x100) == 0)
  {
LABEL_37:
    if ((v6 & 0x200) == 0) {
      goto LABEL_38;
    }
    goto LABEL_59;
  }
LABEL_56:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v24 = *(unsigned char *)(a1 + 80);
  *char v4 = 64;
  v4[1] = v24;
  v4 += 2;
  if ((v6 & 0x200) == 0)
  {
LABEL_38:
    if ((v6 & 0x400) == 0) {
      goto LABEL_39;
    }
    goto LABEL_62;
  }
LABEL_59:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v25 = *(unsigned char *)(a1 + 81);
  *char v4 = 72;
  v4[1] = v25;
  v4 += 2;
  if ((v6 & 0x400) == 0)
  {
LABEL_39:
    if ((v6 & 1) == 0) {
      goto LABEL_40;
    }
    goto LABEL_65;
  }
LABEL_62:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v26 = *(unsigned char *)(a1 + 82);
  *char v4 = 80;
  v4[1] = v26;
  v4 += 2;
  if ((v6 & 1) == 0)
  {
LABEL_40:
    if ((v6 & 0x800) == 0) {
      goto LABEL_41;
    }
    goto LABEL_66;
  }
LABEL_65:
  char v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_41:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_69;
  }
LABEL_66:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v27 = *(_DWORD *)(a1 + 84);
  *char v4 = 101;
  *(_DWORD *)(v4 + 1) = v27;
  v4 += 5;
  if ((v6 & 0x1000) == 0)
  {
LABEL_42:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_72;
  }
LABEL_69:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v28 = *(_DWORD *)(a1 + 88);
  *char v4 = 109;
  *(_DWORD *)(v4 + 1) = v28;
  v4 += 5;
  if ((v6 & 0x2000) == 0)
  {
LABEL_43:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_75;
  }
LABEL_72:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v29 = *(_DWORD *)(a1 + 92);
  *char v4 = 117;
  *(_DWORD *)(v4 + 1) = v29;
  v4 += 5;
  if ((v6 & 0x4000) == 0)
  {
LABEL_44:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_78;
  }
LABEL_75:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v30 = *(_DWORD *)(a1 + 96);
  *char v4 = 125;
  *(_DWORD *)(v4 + 1) = v30;
  v4 += 5;
  if ((v6 & 0x8000) == 0)
  {
LABEL_45:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_81;
  }
LABEL_78:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v31 = *(_DWORD *)(a1 + 100);
  *(_WORD *)char v4 = 389;
  *(_DWORD *)(v4 + 2) = v31;
  v4 += 6;
  if ((v6 & 0x10000) != 0)
  {
LABEL_81:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v32 = *(_DWORD *)(a1 + 104);
    *(_WORD *)char v4 = 397;
    *(_DWORD *)(v4 + 2) = v32;
    v4 += 6;
  }
LABEL_84:
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return v4;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(v4, v36, (int)v37);
    v4 += v38;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v36, v37, v4);
}

uint64_t sub_14A3CA8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_29;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = sub_15B1D1C(*(void *)(a1 + 40));
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if ((v2 & 8) != 0)
  {
LABEL_12:
    uint64_t v9 = sub_14A2C34(*(void *)(a1 + 48));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v4 = v3 + 9;
  if ((v2 & 0x10) == 0) {
    uint64_t v4 = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 64);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v11;
  }
  if ((v2 & 0x40) != 0)
  {
    int v13 = *(_DWORD *)(a1 + 68);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v14;
  }
  if ((v2 & 0x80) != 0) {
    v4 += 9;
  }
LABEL_29:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0) {
      v4 += 2;
    }
    if ((v2 & 0x200) != 0) {
      v4 += 2;
    }
    if ((v2 & 0x400) != 0) {
      v4 += 2;
    }
    if ((v2 & 0x800) != 0) {
      v4 += 5;
    }
    if ((v2 & 0x1000) != 0) {
      v4 += 5;
    }
    if ((v2 & 0x2000) != 0) {
      v4 += 5;
    }
    if ((v2 & 0x4000) != 0) {
      v4 += 5;
    }
    if ((v2 & 0x8000) != 0) {
      v4 += 6;
    }
  }
  if ((v2 & 0x10000) != 0) {
    uint64_t result = v4 + 6;
  }
  else {
    uint64_t result = v4;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v17 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_14A3EEC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v7 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v8 = (std::string **)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 8);
      int v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
      if (v9) {
        int v10 = (uint64_t *)*v10;
      }
      sub_1881DF4(v8, v7, v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_40;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 32);
    if (!v11)
    {
      uint64_t v12 = *(void *)(a1 + 8);
      int v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        int v13 = (void *)*v13;
      }
      uint64_t v11 = sub_15C1918((uint64_t)v13);
      *(void *)(a1 + 32) = v11;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v14 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v14 = &off_253F1A0;
    }
    sub_15B0E24(v11, (uint64_t)v14);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_48;
    }
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v15 = *(void *)(a1 + 40);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_15C19EC((uint64_t)v17);
      *(void *)(a1 + 40) = v15;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v18 = &off_253F208;
    }
    sub_15B1E3C(v15, (uint64_t)v18);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_56;
    }
LABEL_48:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v19 = *(void *)(a1 + 48);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      unsigned int v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unsigned int v21 = (void *)*v21;
      }
      uint64_t v19 = sub_14A4714((uint64_t)v21);
      *(void *)(a1 + 48) = v19;
    }
    if (*(void *)(a2 + 48)) {
      int v22 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      int v22 = &off_253A380;
    }
    sub_14A2CE4(v19, (uint64_t)v22);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_58;
    }
LABEL_57:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_58:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_62;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_63;
  }
LABEL_62:
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  if ((v4 & 0x800) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_64;
  }
LABEL_63:
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x1000) == 0)
  {
LABEL_18:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_65;
  }
LABEL_64:
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x2000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_66:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v4 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_65:
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_66;
  }
LABEL_20:
  if ((v4 & 0x8000) != 0) {
LABEL_21:
  }
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_23:
  if ((v4 & 0x10000) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    *(_DWORD *)(a1 + 104) = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14A4178(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    if (!sub_15B0F18(*(void *)(a1 + 32))) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    goto LABEL_7;
  }
  if (!sub_15B1FC0(*(void *)(a1 + 40))) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 16);
LABEL_7:
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(unsigned int *)(v4 + 24);
  do
  {
    BOOL v3 = (int)v5 < 1;
    if ((int)v5 < 1) {
      break;
    }
    uint64_t v6 = v5 - 1;
    BOOL v7 = sub_15B1FC0(*(void *)(*(void *)(v4 + 32) + 8 * v5));
    uint64_t v5 = v6;
  }
  while (v7);
  return v3;
}

void *sub_14A4210@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.LocationScope");
}

uint64_t sub_14A4220(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A42D8(uint64_t a1)
{
  sub_14A4220(a1);

  operator delete();
}

uint64_t sub_14A4310(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A438C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    BOOL v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        BOOL v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        BOOL v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      BOOL v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_14A4534(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14A4620(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14A46FC()
{
  return 1;
}

void *sub_14A4704@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.TaggedSpan");
}

uint64_t sub_14A4714(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_24B9B30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_14A47B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_24B9BB0;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 92) = 0u;
  return result;
}

void *sub_14A4848(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_24B9C30;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

BOOL sub_14A48CC(int a1)
{
  return (a1 - 1) < 9;
}

BOOL sub_14A48DC(unsigned int a1)
{
  return a1 < 3;
}

BOOL sub_14A48E8(int a1)
{
  return (a1 - 1) < 6;
}

BOOL sub_14A48F8(int a1)
{
  return (a1 - 1) < 0x1C;
}

BOOL sub_14A4908(unsigned int a1)
{
  return a1 < 7;
}

BOOL sub_14A4914(int a1)
{
  return (a1 - 1) < 5;
}

BOOL sub_14A4924(unsigned int a1)
{
  return a1 < 0x17;
}

void *sub_14A4930(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A49A4(void *a1)
{
  sub_14A4930(a1);

  operator delete();
}

uint64_t sub_14A49DC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14A4A00(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_33;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 8) {
      goto LABEL_12;
    }
    v5 |= 1u;
    uint64_t v15 = v7 + 1;
    LODWORD(v14) = *v7;
    if ((v14 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v16 = *v15;
    uint64_t v14 = v14 + (v16 << 7) - 128;
    if ((v16 & 0x80000000) == 0)
    {
      uint64_t v15 = v7 + 2;
LABEL_25:
      uint64_t v20 = v15;
      *(_DWORD *)(a1 + 24) = v14;
      goto LABEL_26;
    }
    unint64_t v17 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v20 = v17;
    *(_DWORD *)(a1 + 24) = v18;
    if (!v17) {
      goto LABEL_34;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_33;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 28) = *(_DWORD *)v7;
    uint64_t v20 = v7 + 4;
    goto LABEL_26;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    uint64_t v20 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v20) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_33;
  }
LABEL_34:
  uint64_t v20 = 0;
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

unsigned char *sub_14A4BAC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 21;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14A4D0C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    return v2 + 5;
  }
  else {
    return v2;
  }
}

uint64_t sub_14A4D58(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_14A4D0C(a1);
  }
  else
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t result = 16;
    }
    else {
      uint64_t result = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 6;
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14A4DF0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14A4E3C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_14A4E50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.Pair");
}

uint64_t sub_14A4E60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A4F18(uint64_t a1)
{
  sub_14A4E60(a1);

  operator delete();
}

uint64_t sub_14A4F50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A4FCC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_14A5174(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14A5260(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t result = v4 + v8 + v5 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_14A5340(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_14A5354@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.StringStringPair");
}

uint64_t sub_14A5364(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A540C(uint64_t a1)
{
  sub_14A5364(a1);

  operator delete();
}

uint64_t sub_14A5444(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A548C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v24 + 2);
      }
    }
    *(void *)char v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      int v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 40), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_37:
    *(void *)char v24 = v14;
    if (!v14) {
      goto LABEL_45;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      *(void *)char v24 = v15 + 1;
      int v16 = v15[1];
      if ((char)v15[1] < 0)
      {
        int v17 = v16 + (v15[2] << 7);
        int v16 = v17 - 128;
        if ((char)v15[2] < 0)
        {
          uint64_t v15 = (unsigned __int8 *)sub_188C138((uint64_t)(v15 + 1), (v17 - 128));
          int v16 = v18;
        }
        else
        {
          v15 += 3;
        }
      }
      else
      {
        v15 += 2;
      }
      *(void *)char v24 = v15;
      uint64_t v19 = *(unsigned int *)(a1 + 24);
      if (v19 == *(_DWORD *)(a1 + 28))
      {
        int v20 = v19 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v19 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        uint64_t v15 = *(unsigned __int8 **)v24;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        int v20 = v19 + 1;
      }
      *(_DWORD *)(a1 + 24) = v20;
      if (!v15) {
        goto LABEL_45;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
        goto LABEL_38;
      }
    }
  }
  if (v8 == 18)
  {
    uint64_t v14 = sub_188C2BC((unsigned int *)(a1 + 24), v7, (uint64_t)a3);
    goto LABEL_37;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_45:
  *(void *)char v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_14A56E0(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 16;
      v4[1] = v8;
      if (v8 > 0x7F)
      {
        v4[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        v4[2] = v8 >> 7;
        v4 += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *v4++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14A5854(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t result = sub_188D498((unsigned int *)(a1 + 24)) + v2 + *(unsigned int *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14A5904(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v8 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type v9 = v3->__r_.__value_.__l.__size_;
    unint64_t v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
    if (v9) {
      unint64_t v10 = (uint64_t *)*v10;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v8, v10);
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14A59E0(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_14A59EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.StringGeoTypesPair");
}

uint64_t sub_14A59FC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A5A9C(uint64_t a1)
{
  sub_14A59FC(a1);

  operator delete();
}

uint64_t sub_14A5AD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14A5B28(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      int v17 = v8 + 2;
LABEL_25:
      *(void *)int v31 = v17;
      *(void *)(a1 + 32) = v18;
      goto LABEL_37;
    }
    uint64_t v27 = sub_188C138((uint64_t)v8, v18);
    *(void *)int v31 = v27;
    *(void *)(a1 + 32) = v28;
    if (!v27) {
      goto LABEL_50;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 16) {
      goto LABEL_14;
    }
    int v20 = v8 + 1;
    unint64_t v21 = *v8;
    if (*v8 < 0)
    {
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        *(void *)int v31 = sub_188C138((uint64_t)v8, (v23 - 128));
        if (!*(void *)v31) {
          goto LABEL_50;
        }
        unint64_t v21 = v29;
        goto LABEL_31;
      }
      int v20 = v8 + 2;
    }
    *(void *)int v31 = v20;
LABEL_31:
    if (v21 > 2)
    {
      if (*v7) {
        int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v21, v30);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v21;
    }
    goto LABEL_37;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 8);
    char v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      char v25 = (uint64_t *)*v25;
    }
    char v26 = (std::string *)sub_1880F84((void *)(a1 + 24), v25);
    uint64_t v16 = (void *)sub_188C244(v26, *(char **)v31, (uint64_t)a3);
LABEL_36:
    *(void *)int v31 = v16;
    if (!v16) {
      goto LABEL_50;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  *(void *)int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

unsigned char *sub_14A5DAC(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *char v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_14A5F70(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_9:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_15:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14A6060()
{
  return 1;
}

void *sub_14A6068@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.RelatedCategory");
}

uint64_t sub_14A6078(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14DDB70((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A6124(uint64_t a1)
{
  sub_14A6078(a1);

  operator delete();
}

uint64_t sub_14A615C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A5AD4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(void *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_14A6210(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (uint64_t *)*v27;
      }
      uint64_t v28 = (std::string *)sub_1880F84((void *)(a1 + 48), v27);
      uint64_t v16 = (void *)sub_188C244(v28, *(char **)v31, (uint64_t)a3);
LABEL_39:
      *(void *)int v31 = v16;
      if (!v16) {
        goto LABEL_47;
      }
      goto LABEL_40;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v23 = v8 + 1;
    uint64_t v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v25 = *v23;
    uint64_t v24 = v24 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      int v23 = v8 + 2;
LABEL_35:
      *(void *)int v31 = v23;
      *(void *)(a1 + 56) = v24;
      goto LABEL_40;
    }
    uint64_t v29 = sub_188C138((uint64_t)v8, v24);
    *(void *)int v31 = v29;
    *(void *)(a1 + 56) = v30;
    if (!v29) {
      goto LABEL_47;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    uint64_t v17 = v8 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      *(void *)int v31 = v17 + 1;
      int v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_14D520C(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        uint64_t v18 = *(unsigned __int8 **)v31;
      }
      uint64_t v17 = (char *)sub_14A648C(a3, v21, v18);
      *(void *)int v31 = v17;
      if (!v17) {
        goto LABEL_47;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
        goto LABEL_40;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_39;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  *(void *)int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

uint64_t sub_14A648C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A5B28(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14A651C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      uint64_t v4 = sub_14A5DAC(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_14A6700(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(int *)(a1 + 32);
  uint64_t v8 = v3 + v7;
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9) {
    int v10 = (uint64_t *)(v9 + 8);
  }
  else {
    int v10 = 0;
  }
  if (v7)
  {
    uint64_t v11 = 8 * v7;
    do
    {
      uint64_t v12 = *v10++;
      uint64_t v13 = sub_14A5F70(v12);
      v8 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      v11 -= 8;
    }
    while (v11);
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0) {
    v8 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v8 += v17;
  }
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

std::string *sub_14A6820(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14DE8F0((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      int v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0) {
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14A6948(uint64_t a1)
{
  return *(_DWORD *)(a1 + 16) & 1;
}

void *sub_14A6954@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.CategoryMapping");
}

void *sub_14A6964(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A69E4(void *a1)
{
  sub_14A6964(a1);

  operator delete();
}

uint64_t sub_14A6A1C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_14A6AA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_34:
      uint64_t v26 = v21;
      *(void *)(a1 + 48) = v22;
      int v5 = 1;
      goto LABEL_35;
    }
    uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v22);
    uint64_t v26 = v24;
    *(void *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_42;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    uint64_t v15 = v8 - 1;
    while (1)
    {
      unint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v26 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_15C1B30(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        unint64_t v16 = (unsigned __int8 *)v26;
      }
      uint64_t v15 = (char *)sub_125CF74(a3, v19, v16);
      uint64_t v26 = v15;
      if (!v15) {
        goto LABEL_42;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_35;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_42:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_14A6CC8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_14A6E8C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B2F90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14A6F64(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_12C1E38(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v9 = *(void *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14A7050()
{
  return 1;
}

void *sub_14A7058@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.KeywordMapping");
}

uint64_t sub_14A7068(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14D9CF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

void *sub_14A7118(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_24B9FB0;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = a2;
  result[7] = 0;
  result[8] = 0;
  result[9] = a2;
  result[10] = 0;
  result[11] = 0;
  result[12] = a2;
  result[13] = 0;
  result[14] = 0;
  result[15] = a2;
  result[16] = 0;
  result[17] = 0;
  result[18] = a2;
  result[19] = 0;
  result[20] = 0;
  result[21] = 0;
  result[22] = a2;
  result[23] = a2;
  result[24] = 0;
  result[25] = 0;
  result[26] = a2;
  result[27] = 0;
  result[28] = 0;
  result[29] = a2;
  result[30] = 0;
  result[31] = 0;
  result[32] = &qword_2550250;
  result[33] = 0;
  return result;
}

uint64_t sub_14A7190(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if ((uint64_t (***)())a1 != &off_253A420)
  {
    uint64_t v5 = *(void *)(a1 + 264);
    if (v5)
    {
      sub_14DADD4(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_14DDC70((void *)(a1 + 232));
  sub_14DDBF0((void *)(a1 + 208));
  sub_1889DE8((void *)(a1 + 184));
  sub_1889DA8(a1 + 168);
  sub_122BA8C((void *)(a1 + 144));
  sub_1889DE8((void *)(a1 + 120));
  sub_1889DE8((void *)(a1 + 96));
  sub_14DD86C((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A72BC(uint64_t a1)
{
  sub_14A7190(a1);

  operator delete();
}

uint64_t sub_14A72F4(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  sub_188CC00(a1 + 48);
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14A0EFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 80) = 0;
  }
  sub_188CC00(a1 + 96);
  sub_188CC00(a1 + 120);
  uint64_t v5 = *(unsigned int *)(a1 + 152);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_149FADC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 152) = 0;
  }
  *(_DWORD *)(a1 + 168) = 0;
  uint64_t result = sub_188CC00(a1 + 184);
  uint64_t v9 = *(unsigned int *)(a1 + 216);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_14A615C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 216) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 240);
  if ((int)v12 >= 1)
  {
    BOOL v13 = (uint64_t *)(*(void *)(a1 + 248) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_14A6A1C(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 240) = 0;
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if ((v15 & 1) == 0) {
      goto LABEL_21;
    }
    unint64_t v16 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v16 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
LABEL_21:
      if ((v15 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    **(unsigned char **)unint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
    if ((v15 & 2) != 0) {
LABEL_22:
    }
      uint64_t result = sub_14A7068(*(void *)(a1 + 264));
  }
LABEL_23:
  char v18 = *(unsigned char *)(a1 + 8);
  uint64_t v17 = a1 + 8;
  *(_DWORD *)(v17 + 8) = 0;
  if (v18)
  {
    return sub_188B4AC((uint64_t *)v17);
  }
  return result;
}

uint64_t sub_14A7460(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v92 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v92, a3[11].i32[1]) & 1) == 0)
  {
    v88 = (uint64_t *)(a1 + 208);
    v89 = (uint64_t *)(a1 + 232);
    v90 = (uint64_t **)(a1 + 120);
    v91 = (uint64_t **)(a1 + 184);
    uint64_t v6 = (uint64_t **)(a1 + 96);
    uint64_t v7 = (uint64_t **)(a1 + 48);
    v86 = (uint64_t *)(a1 + 8);
    v87 = (uint64_t *)(a1 + 144);
    uint64_t v8 = (uint64_t **)(a1 + 24);
    while (1)
    {
      uint64_t v9 = (unsigned __int8 *)(*(void *)v92 + 1);
      unsigned int v10 = **(unsigned char **)v92;
      if ((char)**(unsigned char **)v92 < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if ((char)*v9 < 0)
        {
          uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v92, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          uint64_t v9 = (unsigned __int8 *)(*(void *)v92 + 2);
        }
      }
      *(void *)v92 = v9;
      switch(v10 >> 3)
      {
        case 1u:
          if (v10 != 10) {
            goto LABEL_135;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v13 = *(void *)(a1 + 8);
          uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
          if (v13) {
            uint64_t v14 = (uint64_t *)*v14;
          }
          int v15 = (std::string *)sub_1880F84((void *)(a1 + 256), v14);
          uint64_t v16 = (uint64_t)sub_188C244(v15, *(char **)v92, (uint64_t)a3);
          goto LABEL_142;
        case 2u:
          if (v10 != 18) {
            goto LABEL_135;
          }
          uint64_t v17 = (const std::string::value_type *)(v9 - 1);
          while (1)
          {
            char v18 = (char *)(v17 + 1);
            *(void *)v92 = v17 + 1;
            uint64_t v19 = *(_DWORD **)(a1 + 40);
            if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
            {
              *(_DWORD *)(a1 + 32) = v20 + 1;
              uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
            }
            else
            {
              if (!*v8) {
                operator new();
              }
              void *v23 = v22;
              v23[1] = sub_3A6EDC;
              void *v22 = 0;
              v22[1] = 0;
              v22[2] = 0;
              uint64_t v21 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v22);
              char v18 = *(char **)v92;
            }
            uint64_t v17 = sub_188C244(v21, v18, (uint64_t)a3);
            *(void *)v92 = v17;
            if (!v17) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
              goto LABEL_143;
            }
          }
        case 3u:
          if (v10 != 26) {
            goto LABEL_135;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v24 = *(void **)(a1 + 264);
          if (!v24)
          {
            uint64_t v25 = (void *)(*v86 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v86) {
              uint64_t v25 = (void *)*v25;
            }
            uint64_t v24 = sub_14DB564((uint64_t)v25);
            *(void *)(a1 + 264) = v24;
            uint64_t v9 = *(unsigned __int8 **)v92;
          }
          uint64_t v16 = sub_14A7DFC(a3, (uint64_t)v24, v9);
          goto LABEL_142;
        case 4u:
          if (v10 != 34) {
            goto LABEL_135;
          }
          uint64_t v26 = (const std::string::value_type *)(v9 - 1);
          while (1)
          {
            uint64_t v27 = (char *)(v26 + 1);
            *(void *)v92 = v26 + 1;
            uint64_t v28 = *(_DWORD **)(a1 + 64);
            if (v28 && (uint64_t v29 = *(int *)(a1 + 56), (int)v29 < *v28))
            {
              *(_DWORD *)(a1 + 56) = v29 + 1;
              uint64_t v30 = *(std::string **)&v28[2 * v29 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              void *v32 = v31;
              v32[1] = sub_3A6EDC;
              void *v31 = 0;
              v31[1] = 0;
              int v31[2] = 0;
              uint64_t v30 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v31);
              uint64_t v27 = *(char **)v92;
            }
            uint64_t v26 = sub_188C244(v30, v27, (uint64_t)a3);
            *(void *)v92 = v26;
            if (!v26) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
              goto LABEL_143;
            }
          }
        case 5u:
          if (v10 != 42) {
            goto LABEL_135;
          }
          uint64_t v33 = v9 - 1;
          while (1)
          {
            int v34 = v33 + 1;
            *(void *)v92 = v33 + 1;
            unint64_t v35 = *(_DWORD **)(a1 + 88);
            if (v35 && (uint64_t v36 = *(int *)(a1 + 80), (int)v36 < *v35))
            {
              *(_DWORD *)(a1 + 80) = v36 + 1;
              uint64_t v37 = *(void *)&v35[2 * v36 + 2];
            }
            else
            {
              uint64_t v38 = sub_14A25EC(*(void *)(a1 + 72));
              uint64_t v37 = sub_188CDC8(a1 + 72, (uint64_t)v38);
              int v34 = *(unsigned __int8 **)v92;
            }
            uint64_t v33 = (unsigned __int8 *)sub_14A129C(a3, v37, v34);
            *(void *)v92 = v33;
            if (!v33) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v33 || *v33 != 42) {
              goto LABEL_143;
            }
          }
        case 6u:
          if (v10 != 50) {
            goto LABEL_135;
          }
          v39 = (const std::string::value_type *)(v9 - 1);
          while (1)
          {
            uint64_t v40 = (char *)(v39 + 1);
            *(void *)v92 = v39 + 1;
            int v41 = *(_DWORD **)(a1 + 112);
            if (v41 && (uint64_t v42 = *(int *)(a1 + 104), (int)v42 < *v41))
            {
              *(_DWORD *)(a1 + 104) = v42 + 1;
              int v43 = *(std::string **)&v41[2 * v42 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *int v45 = v44;
              v45[1] = sub_3A6EDC;
              *int v44 = 0;
              v44[1] = 0;
              v44[2] = 0;
              int v43 = (std::string *)sub_188CDC8(a1 + 96, (uint64_t)v44);
              uint64_t v40 = *(char **)v92;
            }
            v39 = sub_188C244(v43, v40, (uint64_t)a3);
            *(void *)v92 = v39;
            if (!v39) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v39 || *v39 != 50) {
              goto LABEL_143;
            }
          }
        case 7u:
          if (v10 != 58) {
            goto LABEL_135;
          }
          int v46 = (const std::string::value_type *)(v9 - 1);
          while (1)
          {
            BOOL v47 = (char *)(v46 + 1);
            *(void *)v92 = v46 + 1;
            uint64_t v48 = *(_DWORD **)(a1 + 136);
            if (v48 && (uint64_t v49 = *(int *)(a1 + 128), (int)v49 < *v48))
            {
              *(_DWORD *)(a1 + 128) = v49 + 1;
              unint64_t v50 = *(std::string **)&v48[2 * v49 + 2];
            }
            else
            {
              if (!*v90) {
                operator new();
              }
              *uint64_t v52 = v51;
              v52[1] = sub_3A6EDC;
              *uint64_t v51 = 0;
              v51[1] = 0;
              v51[2] = 0;
              unint64_t v50 = (std::string *)sub_188CDC8((uint64_t)v90, (uint64_t)v51);
              BOOL v47 = *(char **)v92;
            }
            int v46 = sub_188C244(v50, v47, (uint64_t)a3);
            *(void *)v92 = v46;
            if (!v46) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v46 || *v46 != 58) {
              goto LABEL_143;
            }
          }
        case 8u:
          if (v10 != 66) {
            goto LABEL_135;
          }
          uint64_t v53 = v9 - 1;
          while (1)
          {
            uint64_t v54 = v53 + 1;
            *(void *)v92 = v53 + 1;
            uint64_t v55 = *(_DWORD **)(a1 + 160);
            if (v55 && (uint64_t v56 = *(int *)(a1 + 152), (int)v56 < *v55))
            {
              *(_DWORD *)(a1 + 152) = v56 + 1;
              uint64_t v57 = *(void *)&v55[2 * v56 + 2];
            }
            else
            {
              int v58 = sub_14A23B8(*v87);
              uint64_t v57 = sub_188CDC8((uint64_t)v87, (uint64_t)v58);
              uint64_t v54 = *(unsigned __int8 **)v92;
            }
            uint64_t v53 = (unsigned __int8 *)sub_11EAAEC(a3, v57, v54);
            *(void *)v92 = v53;
            if (!v53) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v53 || *v53 != 66) {
              goto LABEL_143;
            }
          }
        case 9u:
          if (v10 == 72)
          {
            v59 = v9 - 1;
            while (1)
            {
              *(void *)v92 = v59 + 1;
              uint64_t v60 = v59[1];
              if ((char)v59[1] < 0)
              {
                int v61 = v60 + (v59[2] << 7);
                uint64_t v60 = (v61 - 128);
                if ((char)v59[2] < 0)
                {
                  v59 = (unsigned __int8 *)sub_188C138((uint64_t)(v59 + 1), (v61 - 128));
                  uint64_t v60 = v62;
                }
                else
                {
                  v59 += 3;
                }
              }
              else
              {
                v59 += 2;
              }
              *(void *)v92 = v59;
              uint64_t v63 = *(unsigned int *)(a1 + 168);
              if (v63 == *(_DWORD *)(a1 + 172))
              {
                int v64 = v63 + 1;
                sub_188CA54((unsigned int *)(a1 + 168), v63 + 1);
                *(void *)(*(void *)(a1 + 176) + 8 * v63) = v60;
                v59 = *(unsigned __int8 **)v92;
              }
              else
              {
                *(void *)(*(void *)(a1 + 176) + 8 * v63) = v60;
                int v64 = v63 + 1;
              }
              *(_DWORD *)(a1 + 168) = v64;
              if (!v59) {
                goto LABEL_148;
              }
              if (*(void *)a3 <= (unint64_t)v59 || *v59 != 72) {
                goto LABEL_143;
              }
            }
          }
          if (v10 == 74)
          {
            uint64_t v16 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 168), v9, (uint64_t)a3);
          }
          else
          {
LABEL_135:
            if (v10) {
              BOOL v84 = (v10 & 7) == 4;
            }
            else {
              BOOL v84 = 1;
            }
            if (v84)
            {
              if (v9)
              {
                a3[10].i32[0] = v10 - 1;
                return *(void *)v92;
              }
LABEL_148:
              *(void *)v92 = 0;
              return *(void *)v92;
            }
            if (*v86)
            {
              v85 = (std::string *)((*v86 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v85 = (std::string *)sub_188DBD8(v86);
              uint64_t v9 = *(unsigned __int8 **)v92;
            }
            uint64_t v16 = (uint64_t)sub_1885AC0(v10, v85, (char *)v9, a3);
          }
LABEL_142:
          *(void *)v92 = v16;
          if (!v16) {
            goto LABEL_148;
          }
LABEL_143:
          if (sub_11947B8((uint64_t)a3, (char **)v92, a3[11].i32[1])) {
            return *(void *)v92;
          }
          break;
        case 0xAu:
          if (v10 != 82) {
            goto LABEL_135;
          }
          v65 = (const std::string::value_type *)(v9 - 1);
          while (1)
          {
            v66 = (char *)(v65 + 1);
            *(void *)v92 = v65 + 1;
            v67 = *(_DWORD **)(a1 + 200);
            if (v67 && (uint64_t v68 = *(int *)(a1 + 192), (int)v68 < *v67))
            {
              *(_DWORD *)(a1 + 192) = v68 + 1;
              v69 = *(std::string **)&v67[2 * v68 + 2];
            }
            else
            {
              if (!*v91) {
                operator new();
              }
              void *v71 = v70;
              v71[1] = sub_3A6EDC;
              void *v70 = 0;
              v70[1] = 0;
              v70[2] = 0;
              v69 = (std::string *)sub_188CDC8((uint64_t)v91, (uint64_t)v70);
              v66 = *(char **)v92;
            }
            v65 = sub_188C244(v69, v66, (uint64_t)a3);
            *(void *)v92 = v65;
            if (!v65) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v65 || *v65 != 82) {
              goto LABEL_143;
            }
          }
        case 0xBu:
          if (v10 != 90) {
            goto LABEL_135;
          }
          v72 = v9 - 1;
          while (1)
          {
            v73 = v72 + 1;
            *(void *)v92 = v72 + 1;
            v74 = *(_DWORD **)(a1 + 224);
            if (v74 && (uint64_t v75 = *(int *)(a1 + 216), (int)v75 < *v74))
            {
              *(_DWORD *)(a1 + 216) = v75 + 1;
              uint64_t v76 = *(void *)&v74[2 * v75 + 2];
            }
            else
            {
              v77 = sub_14D5294(*v88);
              uint64_t v76 = sub_188CDC8((uint64_t)v88, (uint64_t)v77);
              v73 = *(unsigned __int8 **)v92;
            }
            v72 = (unsigned __int8 *)sub_14A7E8C(a3, v76, v73);
            *(void *)v92 = v72;
            if (!v72) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v72 || *v72 != 90) {
              goto LABEL_143;
            }
          }
        case 0xCu:
          if (v10 != 98) {
            goto LABEL_135;
          }
          v78 = (char *)(v9 - 1);
          while (1)
          {
            v79 = (unsigned __int8 *)(v78 + 1);
            *(void *)v92 = v78 + 1;
            v80 = *(_DWORD **)(a1 + 248);
            if (v80 && (uint64_t v81 = *(int *)(a1 + 240), (int)v81 < *v80))
            {
              *(_DWORD *)(a1 + 240) = v81 + 1;
              uint64_t v82 = *(void *)&v80[2 * v81 + 2];
            }
            else
            {
              v83 = sub_14D5338(*v89);
              uint64_t v82 = sub_188CDC8((uint64_t)v89, (uint64_t)v83);
              v79 = *(unsigned __int8 **)v92;
            }
            v78 = sub_14A7F1C(a3, v82, v79);
            *(void *)v92 = v78;
            if (!v78) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v78 || *v78 != 98) {
              goto LABEL_143;
            }
          }
        default:
          goto LABEL_135;
      }
    }
  }
  return *(void *)v92;
}

uint64_t sub_14A7DFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14DAEB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14A7E8C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A6210(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14A7F1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A6AA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14A7FAC(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 32);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 40) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v11)
      {
        *uint64_t v4 = 18;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        unsigned int v12 = v4 + 2;
        memcpy(v12, v10, v11);
        uint64_t v4 = &v12[v11];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v10, v4);
LABEL_12:
      v8 += 8;
    }
    while (v9 != v8);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 264);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    uint64_t v4 = sub_14DB148(v13, v15, a3);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 56);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      uint64_t v19 = *(void **)(*(void *)(a1 + 64) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_33;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        *uint64_t v4 = 34;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_31;
      }
LABEL_33:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v19, v4);
LABEL_31:
      v17 += 8;
    }
    while (v18 != v17);
  }
  int v22 = *(_DWORD *)(a1 + 80);
  if (v22)
  {
    for (int i = 0; i != v22; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 88) + 8 * i + 8);
      *uint64_t v4 = 42;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        uint64_t v26 = v4 + 2;
      }
      uint64_t v4 = sub_14A10E0(v24, v26, a3);
    }
  }
  uint64_t v27 = *(unsigned int *)(a1 + 104);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 8 * v27;
    do
    {
      uint64_t v30 = *(void **)(*(void *)(a1 + 112) + v28 + 8);
      if (*((char *)v30 + 23) < 0)
      {
        int64_t v31 = v30[1];
        if (v31 > 127) {
          goto LABEL_53;
        }
      }
      else
      {
        int64_t v31 = *((unsigned __int8 *)v30 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v31)
      {
        *uint64_t v4 = 50;
        v4[1] = v31;
        if (*((char *)v30 + 23) < 0) {
          uint64_t v30 = (void *)*v30;
        }
        int v32 = v4 + 2;
        memcpy(v32, v30, v31);
        uint64_t v4 = &v32[v31];
        goto LABEL_51;
      }
LABEL_53:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v30, v4);
LABEL_51:
      v28 += 8;
    }
    while (v29 != v28);
  }
  uint64_t v33 = *(unsigned int *)(a1 + 128);
  if ((int)v33 >= 1)
  {
    uint64_t v34 = 0;
    uint64_t v35 = 8 * v33;
    do
    {
      uint64_t v36 = *(void **)(*(void *)(a1 + 136) + v34 + 8);
      if (*((char *)v36 + 23) < 0)
      {
        int64_t v37 = v36[1];
        if (v37 > 127) {
          goto LABEL_65;
        }
      }
      else
      {
        int64_t v37 = *((unsigned __int8 *)v36 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v37)
      {
        *uint64_t v4 = 58;
        v4[1] = v37;
        if (*((char *)v36 + 23) < 0) {
          uint64_t v36 = (void *)*v36;
        }
        uint64_t v38 = v4 + 2;
        memcpy(v38, v36, v37);
        uint64_t v4 = &v38[v37];
        goto LABEL_63;
      }
LABEL_65:
      uint64_t v4 = (char *)sub_188A868(a3, 7, (uint64_t)v36, v4);
LABEL_63:
      v34 += 8;
    }
    while (v35 != v34);
  }
  int v39 = *(_DWORD *)(a1 + 152);
  if (v39)
  {
    for (int j = 0; j != v39; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v41 = *(void *)(*(void *)(a1 + 160) + 8 * j + 8);
      *uint64_t v4 = 66;
      unsigned int v42 = *(_DWORD *)(v41 + 20);
      v4[1] = v42;
      if (v42 > 0x7F) {
        int v43 = sub_188A9CC(v42, v4 + 1);
      }
      else {
        int v43 = v4 + 2;
      }
      uint64_t v4 = sub_149FD00(v41, v43, a3);
    }
  }
  uint64_t v44 = *(unsigned int *)(a1 + 168);
  if ((int)v44 >= 1)
  {
    for (uint64_t k = 0; k != v44; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v46 = *(void *)(*(void *)(a1 + 176) + 8 * k);
      *uint64_t v4 = 72;
      v4[1] = v46;
      if (v46 > 0x7F)
      {
        v4[1] = v46 | 0x80;
        unint64_t v47 = v46 >> 7;
        v4[2] = v46 >> 7;
        v4 += 3;
        if (v46 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v48 = v47 >> 14;
            v47 >>= 7;
            *v4++ = v47;
          }
          while (v48);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v49 = *(unsigned int *)(a1 + 192);
  if ((int)v49 >= 1)
  {
    uint64_t v50 = 0;
    uint64_t v51 = 8 * v49;
    do
    {
      uint64_t v52 = *(void **)(*(void *)(a1 + 200) + v50 + 8);
      if (*((char *)v52 + 23) < 0)
      {
        int64_t v53 = v52[1];
        if (v53 > 127) {
          goto LABEL_94;
        }
      }
      else
      {
        int64_t v53 = *((unsigned __int8 *)v52 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v53)
      {
        *uint64_t v4 = 82;
        v4[1] = v53;
        if (*((char *)v52 + 23) < 0) {
          uint64_t v52 = (void *)*v52;
        }
        uint64_t v54 = v4 + 2;
        memcpy(v54, v52, v53);
        uint64_t v4 = &v54[v53];
        goto LABEL_92;
      }
LABEL_94:
      uint64_t v4 = (char *)sub_188A868(a3, 10, (uint64_t)v52, v4);
LABEL_92:
      v50 += 8;
    }
    while (v51 != v50);
  }
  int v55 = *(_DWORD *)(a1 + 216);
  if (v55)
  {
    for (int m = 0; m != v55; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v57 = *(void *)(*(void *)(a1 + 224) + 8 * m + 8);
      *uint64_t v4 = 90;
      unsigned int v58 = *(_DWORD *)(v57 + 20);
      v4[1] = v58;
      if (v58 > 0x7F) {
        v59 = sub_188A9CC(v58, v4 + 1);
      }
      else {
        v59 = v4 + 2;
      }
      uint64_t v4 = sub_14A651C(v57, v59, a3);
    }
  }
  int v60 = *(_DWORD *)(a1 + 240);
  if (v60)
  {
    for (int n = 0; n != v60; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v62 = *(void *)(*(void *)(a1 + 248) + 8 * n + 8);
      *uint64_t v4 = 98;
      unsigned int v63 = *(_DWORD *)(v62 + 20);
      v4[1] = v63;
      if (v63 > 0x7F) {
        int v64 = sub_188A9CC(v63, v4 + 1);
      }
      else {
        int v64 = v4 + 2;
      }
      uint64_t v4 = sub_14A6CC8(v62, (unint64_t)v64, a3);
    }
  }
  uint64_t v65 = *(void *)(a1 + 8);
  if ((v65 & 1) == 0) {
    return v4;
  }
  unint64_t v67 = v65 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v67 + 31) < 0)
  {
    uint64_t v68 = *(void **)(v67 + 8);
    uint64_t v69 = *(void *)(v67 + 16);
  }
  else
  {
    uint64_t v68 = (void *)(v67 + 8);
    LODWORD(v69) = *(unsigned __int8 *)(v67 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v69)
  {
    uint64_t v70 = (int)v69;
    memcpy(v4, v68, (int)v69);
    v4 += v70;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v68, v69, v4);
}

uint64_t sub_14A86E8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_14A11E4(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(unsigned int *)(a1 + 104);
  uint64_t v22 = v15 + v21;
  if ((int)v21 >= 1)
  {
    int v23 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v24 = *v23++;
      uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
      uint64_t v26 = *(void *)(v24 + 8);
      if ((v25 & 0x80u) == 0) {
        uint64_t v26 = v25;
      }
      v22 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      --v21;
    }
    while (v21);
  }
  uint64_t v27 = *(unsigned int *)(a1 + 128);
  uint64_t v28 = v22 + v27;
  if ((int)v27 >= 1)
  {
    uint64_t v29 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v30 = *v29++;
      uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
      uint64_t v32 = *(void *)(v30 + 8);
      if ((v31 & 0x80u) == 0) {
        uint64_t v32 = v31;
      }
      v28 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6);
      --v27;
    }
    while (v27);
  }
  uint64_t v33 = *(int *)(a1 + 152);
  uint64_t v34 = v28 + v33;
  uint64_t v35 = *(void *)(a1 + 160);
  if (v35) {
    uint64_t v36 = (uint64_t *)(v35 + 8);
  }
  else {
    uint64_t v36 = 0;
  }
  if (v33)
  {
    uint64_t v37 = 8 * v33;
    do
    {
      uint64_t v38 = *v36++;
      uint64_t v39 = sub_149FDEC(v38);
      v34 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6);
      v37 -= 8;
    }
    while (v37);
  }
  uint64_t v40 = sub_188D5A8((unsigned int *)(a1 + 168));
  uint64_t v41 = *(unsigned int *)(a1 + 192);
  uint64_t v42 = v40 + v41 + v34 + *(unsigned int *)(a1 + 168);
  if ((int)v41 >= 1)
  {
    int v43 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v44 = *v43++;
      uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
      uint64_t v46 = *(void *)(v44 + 8);
      if ((v45 & 0x80u) == 0) {
        uint64_t v46 = v45;
      }
      v42 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6);
      --v41;
    }
    while (v41);
  }
  uint64_t v47 = *(int *)(a1 + 216);
  uint64_t v48 = v42 + v47;
  uint64_t v49 = *(void *)(a1 + 224);
  if (v49) {
    uint64_t v50 = (uint64_t *)(v49 + 8);
  }
  else {
    uint64_t v50 = 0;
  }
  if (v47)
  {
    uint64_t v51 = 8 * v47;
    do
    {
      uint64_t v52 = *v50++;
      uint64_t v53 = sub_14A6700(v52);
      v48 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6);
      v51 -= 8;
    }
    while (v51);
  }
  uint64_t v54 = *(int *)(a1 + 240);
  uint64_t v55 = v48 + v54;
  uint64_t v56 = *(void *)(a1 + 248);
  if (v56) {
    uint64_t v57 = (uint64_t *)(v56 + 8);
  }
  else {
    uint64_t v57 = 0;
  }
  if (v54)
  {
    uint64_t v58 = 8 * v54;
    do
    {
      uint64_t v59 = *v57++;
      uint64_t v60 = sub_14A6E8C(v59);
      v55 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6);
      v58 -= 8;
    }
    while (v58);
  }
  int v61 = *(_DWORD *)(a1 + 16);
  if ((v61 & 3) != 0)
  {
    if (v61)
    {
      unint64_t v62 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v63 = *(unsigned __int8 *)(v62 + 23);
      uint64_t v64 = *(void *)(v62 + 8);
      if ((v63 & 0x80u) == 0) {
        uint64_t v64 = v63;
      }
      v55 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v61 & 2) != 0)
    {
      uint64_t v65 = sub_14DB2B0(*(void *)(a1 + 264));
      v55 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v66 = *(void *)(a1 + 8);
  if (v66)
  {
    unint64_t v68 = v66 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v68 + 31) < 0) {
      uint64_t v69 = *(void *)(v68 + 16);
    }
    else {
      uint64_t v69 = *(unsigned __int8 *)(v68 + 31);
    }
    v55 += v69;
  }
  *(_DWORD *)(a1 + 20) = v55;
  return v55;
}

std::string *sub_14A8AD8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unsigned int v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_14DD9EC(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[4], v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2]- LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    int v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[5], *(_DWORD *)(a2 + 128));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[5], v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__r.__words[2]- LODWORD(v3[5].__r_.__value_.__r.__words[1]));
    int v27 = LODWORD(v3[5].__r_.__value_.__r.__words[1]) + v24;
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = v27;
    uint64_t v28 = (int *)v3[5].__r_.__value_.__r.__words[2];
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4((uint64_t)&v3[6], *(_DWORD *)(a2 + 152));
    uint64_t result = sub_122BB8C(v3 + 6, v31, v30, v29, *(_DWORD *)v3[6].__r_.__value_.__r.__words[2] - LODWORD(v3[6].__r_.__value_.__r.__words[1]));
    int v32 = LODWORD(v3[6].__r_.__value_.__r.__words[1]) + v29;
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) = v32;
    uint64_t v33 = (int *)v3[6].__r_.__value_.__r.__words[2];
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 168);
  if (v34)
  {
    uint64_t data_low = SLODWORD(v3[7].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[7], data_low + v34);
    std::string::size_type size = v3[7].__r_.__value_.__l.__size_;
    LODWORD(v3[7].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 168);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 176), 8 * *(int *)(a2 + 168));
  }
  int v37 = *(_DWORD *)(a2 + 192);
  if (v37)
  {
    uint64_t v38 = (const std::string **)(*(void *)(a2 + 200) + 8);
    uint64_t v39 = (std::string **)sub_188CCE4((uint64_t)&v3[7].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 192));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[7].__r_.__value_.__r.__words[2], v39, v38, v37, *(_DWORD *)v3[8].__r_.__value_.__l.__size_ - LODWORD(v3[8].__r_.__value_.__l.__data_));
    int v40 = LODWORD(v3[8].__r_.__value_.__l.__data_) + v37;
    LODWORD(v3[8].__r_.__value_.__l.__data_) = v40;
    uint64_t v41 = (int *)v3[8].__r_.__value_.__l.__size_;
    if (*v41 < v40) {
      *uint64_t v41 = v40;
    }
  }
  int v42 = *(_DWORD *)(a2 + 216);
  if (v42)
  {
    int v43 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    uint64_t v44 = (std::string **)sub_188CCE4((uint64_t)&v3[8].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 216));
    uint64_t result = sub_14DE96C((std::string *)((char *)v3 + 208), v44, v43, v42, *(_DWORD *)v3[9].__r_.__value_.__l.__size_ - LODWORD(v3[9].__r_.__value_.__l.__data_));
    int v45 = LODWORD(v3[9].__r_.__value_.__l.__data_) + v42;
    LODWORD(v3[9].__r_.__value_.__l.__data_) = v45;
    uint64_t v46 = (int *)v3[9].__r_.__value_.__l.__size_;
    if (*v46 < v45) {
      *uint64_t v46 = v45;
    }
  }
  int v47 = *(_DWORD *)(a2 + 240);
  if (v47)
  {
    uint64_t v48 = (uint64_t *)(*(void *)(a2 + 248) + 8);
    uint64_t v49 = (std::string **)sub_188CCE4((uint64_t)&v3[9].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 240));
    uint64_t result = sub_14DE9F8((std::string *)((char *)v3 + 232), v49, v48, v47, *(_DWORD *)v3[10].__r_.__value_.__l.__size_ - LODWORD(v3[10].__r_.__value_.__l.__data_));
    int v50 = LODWORD(v3[10].__r_.__value_.__l.__data_) + v47;
    LODWORD(v3[10].__r_.__value_.__l.__data_) = v50;
    uint64_t v51 = (int *)v3[10].__r_.__value_.__l.__size_;
    if (*v51 < v50) {
      *uint64_t v51 = v50;
    }
  }
  int v52 = *(_DWORD *)(a2 + 16);
  if ((v52 & 3) != 0)
  {
    if (v52)
    {
      uint64_t v53 = (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v54 = v3->__r_.__value_.__l.__size_;
      uint64_t v55 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
      if (v54) {
        uint64_t v55 = (uint64_t *)*v55;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[10].__r_.__value_.__r.__words[2], v53, v55);
    }
    if ((v52 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      data = (std::string *)v3[11].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type v57 = v3->__r_.__value_.__l.__size_;
        uint64_t v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
        if (v57) {
          uint64_t v58 = (void *)*v58;
        }
        data = (std::string *)sub_14DB564((uint64_t)v58);
        v3[11].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 264)) {
        uint64_t v59 = *(uint64_t (****)())(a2 + 264);
      }
      else {
        uint64_t v59 = &off_253B4F8;
      }
      uint64_t result = sub_14A8F98(data, (uint64_t)v59);
    }
  }
  uint64_t v60 = *(void *)(a2 + 8);
  if (v60)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v60 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_14A8F98(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14DF9BC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14A90A0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 216);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 224) + 8 * v1--);
    if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 264);
  uint64_t v5 = *(unsigned int *)(v4 + 32);
  uint64_t v6 = *(void *)(v4 + 40);
  do
  {
    BOOL v3 = (int)v5 < 1;
    if ((int)v5 < 1) {
      break;
    }
    uint64_t v7 = v5 - 1;
    BOOL v8 = sub_14DA84C(*(void *)(v6 + 8 * v5));
    uint64_t v5 = v7;
  }
  while (v8);
  return v3;
}

BOOL sub_14A912C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  do
  {
    int v3 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = v1 - 1;
    BOOL v5 = sub_14DA84C(*(void *)(v2 + 8 * v1));
    uint64_t v1 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_14A9180@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.CategoryIntent");
}

uint64_t sub_14A9190(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  BOOL v5 = (void ***)(a1 + 160);
  if (*(uint64_t **)(a1 + 160) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 168));
  }
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 176));
  }
  if ((uint64_t (***)())a1 != &off_253A530)
  {
    uint64_t v6 = *(void *)(a1 + 184);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DE8((void *)(a1 + 136));
  sub_14DDD70((void *)(a1 + 112));
  sub_14DDCF0((void *)(a1 + 88));
  sub_1889DA8(a1 + 72);
  sub_14DD86C((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14A92C8(uint64_t a1)
{
  sub_14A9190(a1);

  operator delete();
}

uint64_t sub_14A9300(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14A0EFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  *(_DWORD *)(a1 + 72) = 0;
  uint64_t v5 = *(unsigned int *)(a1 + 96);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_14D7754(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 96) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 120);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_14AADE4(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 136);
  int v12 = *(_DWORD *)(a1 + 16);
  if ((v12 & 0xF) == 0) {
    goto LABEL_19;
  }
  if (v12)
  {
    unint64_t v15 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v12 & 2) != 0) {
        goto LABEL_29;
      }
    }
LABEL_16:
    if ((v12 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
  if ((v12 & 2) == 0) {
    goto LABEL_16;
  }
LABEL_29:
  unint64_t v16 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v16 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
    if ((v12 & 4) != 0) {
      goto LABEL_33;
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  **(unsigned char **)unint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_33:
  unint64_t v17 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v17 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v12 & 8) == 0) {
      goto LABEL_19;
    }
LABEL_18:
    uint64_t result = sub_14A7068(*(void *)(a1 + 184));
    goto LABEL_19;
  }
  **(unsigned char **)unint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  if ((v12 & 8) != 0) {
    goto LABEL_18;
  }
LABEL_19:
  if ((v12 & 0xF0) != 0)
  {
    *(_DWORD *)(a1 + 199) = 0;
    *(void *)(a1 + 192) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 8) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_14A94AC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v83 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v83, a3[11].i32[1]) & 1) == 0)
  {
    int v81 = 0;
    uint64_t v82 = (uint64_t **)(a1 + 136);
    uint64_t v6 = (uint64_t **)(a1 + 24);
    v80 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (unsigned __int8 *)(*(void *)v83 + 1);
      unsigned int v8 = **(unsigned char **)v83;
      if ((char)**(unsigned char **)v83 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v83, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (unsigned __int8 *)(*(void *)v83 + 2);
        }
      }
      *(void *)v83 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
          if (v11) {
            int v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 160);
          goto LABEL_22;
        case 2u:
          if (v8 != 18) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 8);
          int v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
          if (v14) {
            int v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 168);
          goto LABEL_22;
        case 3u:
          if (v8 != 26) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v15 = *(void *)(a1 + 8);
          int v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
          if (v15) {
            int v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 176);
LABEL_22:
          unint64_t v16 = (std::string *)sub_1880F84(v13, v12);
          uint64_t v17 = (uint64_t)sub_188C244(v16, *(char **)v83, (uint64_t)a3);
          goto LABEL_134;
        case 4u:
          if (v8 != 34) {
            goto LABEL_127;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v18 = *(void **)(a1 + 184);
          if (!v18)
          {
            int v19 = (void *)(*v80 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v80) {
              int v19 = (void *)*v19;
            }
            uint64_t v18 = sub_14DB564((uint64_t)v19);
            *(void *)(a1 + 184) = v18;
            uint64_t v7 = *(unsigned __int8 **)v83;
          }
          uint64_t v17 = sub_14A7DFC(a3, (uint64_t)v18, v7);
          goto LABEL_134;
        case 5u:
          if (v8 != 40) {
            goto LABEL_127;
          }
          v81 |= 0x20u;
          uint64_t v20 = (char *)(v7 + 1);
          uint64_t v21 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_33;
          }
          int v22 = *v20;
          uint64_t v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v70 = sub_188C138((uint64_t)v7, v21);
            *(void *)v83 = v70;
            *(unsigned char *)(a1 + 200) = v71 != 0;
            if (!v70) {
              goto LABEL_140;
            }
          }
          else
          {
            uint64_t v20 = (char *)(v7 + 2);
LABEL_33:
            *(void *)v83 = v20;
            *(unsigned char *)(a1 + 200) = v21 != 0;
          }
          goto LABEL_135;
        case 6u:
          if (v8 != 48) {
            goto LABEL_127;
          }
          v81 |= 0x40u;
          int v23 = (char *)(v7 + 1);
          uint64_t v24 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_38;
          }
          int v25 = *v23;
          uint64_t v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v72 = sub_188C138((uint64_t)v7, v24);
            *(void *)v83 = v72;
            *(unsigned char *)(a1 + 201) = v73 != 0;
            if (!v72) {
              goto LABEL_140;
            }
          }
          else
          {
            int v23 = (char *)(v7 + 2);
LABEL_38:
            *(void *)v83 = v23;
            *(unsigned char *)(a1 + 201) = v24 != 0;
          }
          goto LABEL_135;
        case 7u:
          if (v8 != 56) {
            goto LABEL_127;
          }
          v81 |= 0x10u;
          uint64_t v26 = (char *)(v7 + 1);
          uint64_t v27 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_43;
          }
          int v28 = *v26;
          uint64_t v27 = v27 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            uint64_t v74 = sub_188C138((uint64_t)v7, v27);
            *(void *)v83 = v74;
            *(void *)(a1 + 192) = v75;
            if (!v74) {
              goto LABEL_140;
            }
          }
          else
          {
            uint64_t v26 = (char *)(v7 + 2);
LABEL_43:
            *(void *)v83 = v26;
            *(void *)(a1 + 192) = v27;
          }
          goto LABEL_135;
        case 8u:
          if (v8 != 64) {
            goto LABEL_127;
          }
          v81 |= 0x80u;
          int v29 = (char *)(v7 + 1);
          uint64_t v30 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_48;
          }
          int v31 = *v29;
          uint64_t v30 = v30 + (v31 << 7) - 128;
          if (v31 < 0)
          {
            uint64_t v76 = sub_188C138((uint64_t)v7, v30);
            *(void *)v83 = v76;
            *(unsigned char *)(a1 + 202) = v77 != 0;
            if (!v76) {
              goto LABEL_140;
            }
          }
          else
          {
            int v29 = (char *)(v7 + 2);
LABEL_48:
            *(void *)v83 = v29;
            *(unsigned char *)(a1 + 202) = v30 != 0;
          }
          goto LABEL_135;
        case 9u:
          if (v8 != 74) {
            goto LABEL_127;
          }
          int v32 = (const std::string::value_type *)(v7 - 1);
          while (1)
          {
            uint64_t v33 = (char *)(v32 + 1);
            *(void *)v83 = v32 + 1;
            int v34 = *(_DWORD **)(a1 + 40);
            if (v34 && (uint64_t v35 = *(int *)(a1 + 32), (int)v35 < *v34))
            {
              *(_DWORD *)(a1 + 32) = v35 + 1;
              uint64_t v36 = *(std::string **)&v34[2 * v35 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *uint64_t v38 = v37;
              v38[1] = sub_3A6EDC;
              *int v37 = 0;
              v37[1] = 0;
              v37[2] = 0;
              uint64_t v36 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v37);
              uint64_t v33 = *(char **)v83;
            }
            int v32 = sub_188C244(v36, v33, (uint64_t)a3);
            *(void *)v83 = v32;
            if (!v32) {
              goto LABEL_140;
            }
            if (*(void *)a3 <= (unint64_t)v32 || *v32 != 74) {
              goto LABEL_135;
            }
          }
        case 0xAu:
          if (v8 != 82) {
            goto LABEL_127;
          }
          uint64_t v39 = v7 - 1;
          while (1)
          {
            int v40 = v39 + 1;
            *(void *)v83 = v39 + 1;
            uint64_t v41 = *(_DWORD **)(a1 + 64);
            if (v41 && (uint64_t v42 = *(int *)(a1 + 56), (int)v42 < *v41))
            {
              *(_DWORD *)(a1 + 56) = v42 + 1;
              uint64_t v43 = *(void *)&v41[2 * v42 + 2];
            }
            else
            {
              uint64_t v44 = sub_14A25EC(*(void *)(a1 + 48));
              uint64_t v43 = sub_188CDC8(a1 + 48, (uint64_t)v44);
              int v40 = *(unsigned __int8 **)v83;
            }
            uint64_t v39 = (unsigned __int8 *)sub_14A129C(a3, v43, v40);
            *(void *)v83 = v39;
            if (!v39) {
              goto LABEL_140;
            }
            if (*(void *)a3 <= (unint64_t)v39 || *v39 != 82) {
              goto LABEL_135;
            }
          }
        case 0xBu:
          if (v8 == 88)
          {
            int v45 = v7 - 1;
            while (1)
            {
              *(void *)v83 = v45 + 1;
              uint64_t v46 = v45[1];
              if ((char)v45[1] < 0)
              {
                int v47 = v46 + (v45[2] << 7);
                uint64_t v46 = (v47 - 128);
                if ((char)v45[2] < 0)
                {
                  int v45 = (unsigned __int8 *)sub_188C138((uint64_t)(v45 + 1), (v47 - 128));
                  uint64_t v46 = v48;
                }
                else
                {
                  v45 += 3;
                }
              }
              else
              {
                v45 += 2;
              }
              *(void *)v83 = v45;
              uint64_t v49 = *(unsigned int *)(a1 + 72);
              if (v49 == *(_DWORD *)(a1 + 76))
              {
                int v50 = v49 + 1;
                sub_188CA54((unsigned int *)(a1 + 72), v49 + 1);
                *(void *)(*(void *)(a1 + 80) + 8 * v49) = v46;
                int v45 = *(unsigned __int8 **)v83;
              }
              else
              {
                *(void *)(*(void *)(a1 + 80) + 8 * v49) = v46;
                int v50 = v49 + 1;
              }
              *(_DWORD *)(a1 + 72) = v50;
              if (!v45) {
                goto LABEL_140;
              }
              if (*(void *)a3 <= (unint64_t)v45 || *v45 != 88) {
                goto LABEL_135;
              }
            }
          }
          if (v8 == 90)
          {
            uint64_t v17 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 72), v7, (uint64_t)a3);
          }
          else
          {
LABEL_127:
            if (v8) {
              BOOL v78 = (v8 & 7) == 4;
            }
            else {
              BOOL v78 = 1;
            }
            if (v78)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_3;
              }
LABEL_140:
              *(void *)v83 = 0;
              goto LABEL_3;
            }
            if (*v80)
            {
              v79 = (std::string *)((*v80 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v79 = (std::string *)sub_188DBD8(v80);
              uint64_t v7 = *(unsigned __int8 **)v83;
            }
            uint64_t v17 = (uint64_t)sub_1885AC0(v8, v79, (char *)v7, a3);
          }
LABEL_134:
          *(void *)v83 = v17;
          if (!v17) {
            goto LABEL_140;
          }
LABEL_135:
          if (sub_11947B8((uint64_t)a3, (char **)v83, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_127;
          }
          uint64_t v51 = v7 - 1;
          while (1)
          {
            int v52 = v51 + 1;
            *(void *)v83 = v51 + 1;
            uint64_t v53 = *(_DWORD **)(a1 + 104);
            if (v53 && (uint64_t v54 = *(int *)(a1 + 96), (int)v54 < *v53))
            {
              *(_DWORD *)(a1 + 96) = v54 + 1;
              uint64_t v55 = *(void *)&v53[2 * v54 + 2];
            }
            else
            {
              uint64_t v56 = sub_14D7EB0(*(void *)(a1 + 88));
              uint64_t v55 = sub_188CDC8(a1 + 88, (uint64_t)v56);
              int v52 = *(unsigned __int8 **)v83;
            }
            uint64_t v51 = (unsigned __int8 *)sub_14A9D70(a3, v55, v52);
            *(void *)v83 = v51;
            if (!v51) {
              goto LABEL_140;
            }
            if (*(void *)a3 <= (unint64_t)v51 || *v51 != 98) {
              goto LABEL_135;
            }
          }
        case 0xDu:
          if (v8 != 106) {
            goto LABEL_127;
          }
          std::string::size_type v57 = v7 - 1;
          while (1)
          {
            uint64_t v58 = v57 + 1;
            *(void *)v83 = v57 + 1;
            uint64_t v59 = *(_DWORD **)(a1 + 128);
            if (v59 && (uint64_t v60 = *(int *)(a1 + 120), (int)v60 < *v59))
            {
              *(_DWORD *)(a1 + 120) = v60 + 1;
              uint64_t v61 = *(void *)&v59[2 * v60 + 2];
            }
            else
            {
              unint64_t v62 = sub_14D5510(*(void *)(a1 + 112));
              uint64_t v61 = sub_188CDC8(a1 + 112, (uint64_t)v62);
              uint64_t v58 = *(unsigned __int8 **)v83;
            }
            std::string::size_type v57 = (unsigned __int8 *)sub_14A9E00(a3, v61, v58);
            *(void *)v83 = v57;
            if (!v57) {
              goto LABEL_140;
            }
            if (*(void *)a3 <= (unint64_t)v57 || *v57 != 106) {
              goto LABEL_135;
            }
          }
        case 0xEu:
          if (v8 != 114) {
            goto LABEL_127;
          }
          uint64_t v63 = (const std::string::value_type *)(v7 - 1);
          while (1)
          {
            uint64_t v64 = (char *)(v63 + 1);
            *(void *)v83 = v63 + 1;
            uint64_t v65 = *(_DWORD **)(a1 + 152);
            if (v65 && (uint64_t v66 = *(int *)(a1 + 144), (int)v66 < *v65))
            {
              *(_DWORD *)(a1 + 144) = v66 + 1;
              unint64_t v67 = *(std::string **)&v65[2 * v66 + 2];
            }
            else
            {
              if (!*v82) {
                operator new();
              }
              void *v69 = v68;
              v69[1] = sub_3A6EDC;
              *unint64_t v68 = 0;
              v68[1] = 0;
              v68[2] = 0;
              unint64_t v67 = (std::string *)sub_188CDC8((uint64_t)v82, (uint64_t)v68);
              uint64_t v64 = *(char **)v83;
            }
            uint64_t v63 = sub_188C244(v67, v64, (uint64_t)a3);
            *(void *)v83 = v63;
            if (!v63) {
              goto LABEL_140;
            }
            if (*(void *)a3 <= (unint64_t)v63 || *v63 != 114) {
              goto LABEL_135;
            }
          }
        default:
          goto LABEL_127;
      }
    }
  }
  int v81 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v81;
  return *(void *)v83;
}

uint64_t sub_14A9D70(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D77A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14A9E00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14AAED4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14A9E90(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 184);
  *uint64_t v4 = 34;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_14DB148(v7, v9, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 200);
  *uint64_t v4 = 40;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_7:
    if ((v6 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 201);
  *uint64_t v4 = 48;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(void *)(a1 + 192);
    *uint64_t v4 = 56;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 202);
    *uint64_t v4 = 64;
    v4[1] = v15;
    v4 += 2;
  }
  uint64_t v16 = *(unsigned int *)(a1 + 32);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      int v19 = *(void **)(*(void *)(a1 + 40) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_45;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        *uint64_t v4 = 74;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          int v19 = (void *)*v19;
        }
        uint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_43;
      }
LABEL_45:
      uint64_t v4 = (char *)sub_188A868(a3, 9, (uint64_t)v19, v4);
LABEL_43:
      v17 += 8;
    }
    while (v18 != v17);
  }
  int v22 = *(_DWORD *)(a1 + 56);
  if (v22)
  {
    for (int i = 0; i != v22; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 82;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        uint64_t v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        uint64_t v26 = v4 + 2;
      }
      uint64_t v4 = sub_14A10E0(v24, v26, a3);
    }
  }
  uint64_t v27 = *(unsigned int *)(a1 + 72);
  if ((int)v27 >= 1)
  {
    for (uint64_t j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v29 = *(void *)(*(void *)(a1 + 80) + 8 * j);
      *uint64_t v4 = 88;
      v4[1] = v29;
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unint64_t v30 = v29 >> 7;
        v4[2] = v29 >> 7;
        v4 += 3;
        if (v29 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v31 = v30 >> 14;
            v30 >>= 7;
            *v4++ = v30;
          }
          while (v31);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v32 = *(_DWORD *)(a1 + 96);
  if (v32)
  {
    for (int k = 0; k != v32; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v34 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      *uint64_t v4 = 98;
      unsigned int v35 = *(_DWORD *)(v34 + 20);
      v4[1] = v35;
      if (v35 > 0x7F) {
        uint64_t v36 = sub_188A9CC(v35, v4 + 1);
      }
      else {
        uint64_t v36 = v4 + 2;
      }
      uint64_t v4 = sub_14D7A6C(v34, v36, a3);
    }
  }
  int v37 = *(_DWORD *)(a1 + 120);
  if (v37)
  {
    for (int m = 0; m != v37; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 128) + 8 * m + 8);
      *uint64_t v4 = 106;
      unsigned int v40 = *(_DWORD *)(v39 + 20);
      v4[1] = v40;
      if (v40 > 0x7F) {
        uint64_t v41 = sub_188A9CC(v40, v4 + 1);
      }
      else {
        uint64_t v41 = v4 + 2;
      }
      uint64_t v4 = sub_14AB304(v39, (unint64_t)v41, a3);
    }
  }
  uint64_t v42 = *(unsigned int *)(a1 + 144);
  if ((int)v42 >= 1)
  {
    uint64_t v43 = 0;
    uint64_t v44 = 8 * v42;
    do
    {
      int v45 = *(void **)(*(void *)(a1 + 152) + v43 + 8);
      if (*((char *)v45 + 23) < 0)
      {
        int64_t v46 = v45[1];
        if (v46 > 127) {
          goto LABEL_90;
        }
      }
      else
      {
        int64_t v46 = *((unsigned __int8 *)v45 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v46)
      {
        *uint64_t v4 = 114;
        v4[1] = v46;
        if (*((char *)v45 + 23) < 0) {
          int v45 = (void *)*v45;
        }
        int v47 = v4 + 2;
        memcpy(v47, v45, v46);
        uint64_t v4 = &v47[v46];
        goto LABEL_88;
      }
LABEL_90:
      uint64_t v4 = (char *)sub_188A868(a3, 14, (uint64_t)v45, v4);
LABEL_88:
      v43 += 8;
    }
    while (v44 != v43);
  }
  uint64_t v48 = *(void *)(a1 + 8);
  if ((v48 & 1) == 0) {
    return v4;
  }
  unint64_t v50 = v48 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v50 + 31) < 0)
  {
    uint64_t v51 = *(void **)(v50 + 8);
    uint64_t v52 = *(void *)(v50 + 16);
  }
  else
  {
    uint64_t v51 = (void *)(v50 + 8);
    LODWORD(v52) = *(unsigned __int8 *)(v50 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v52)
  {
    uint64_t v53 = (int)v52;
    memcpy(v4, v51, (int)v52);
    v4 += v53;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v51, v52, v4);
}

uint64_t sub_14AA4D0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    char v11 = (uint64_t *)(v10 + 8);
  }
  else {
    char v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A11E4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = sub_188D5A8((unsigned int *)(a1 + 72));
  uint64_t v16 = *(int *)(a1 + 96);
  uint64_t v17 = v15 + v16 + v9 + *(unsigned int *)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 104);
  if (v18) {
    int v19 = (uint64_t *)(v18 + 8);
  }
  else {
    int v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_14D7CAC(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(int *)(a1 + 120);
  uint64_t v24 = v17 + v23;
  uint64_t v25 = *(void *)(a1 + 128);
  if (v25) {
    uint64_t v26 = (uint64_t *)(v25 + 8);
  }
  else {
    uint64_t v26 = 0;
  }
  if (v23)
  {
    uint64_t v27 = 8 * v23;
    do
    {
      uint64_t v28 = *v26++;
      uint64_t v29 = sub_14AB564(v28);
      v24 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6);
      v27 -= 8;
    }
    while (v27);
  }
  uint64_t v30 = *(unsigned int *)(a1 + 144);
  uint64_t v31 = v24 + v30;
  if ((int)v30 >= 1)
  {
    int v32 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v33 = *v32++;
      uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
      uint64_t v35 = *(void *)(v33 + 8);
      if ((v34 & 0x80u) == 0) {
        uint64_t v35 = v34;
      }
      v31 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      --v30;
    }
    while (v30);
  }
  char v36 = *(unsigned char *)(a1 + 16);
  if (v36)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v40 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
      uint64_t v42 = *(void *)(v40 + 8);
      if ((v41 & 0x80u) == 0) {
        uint64_t v42 = v41;
      }
      v31 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*(unsigned char *)(a1 + 16) & 2) == 0)
      {
LABEL_34:
        if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
          goto LABEL_35;
        }
        goto LABEL_53;
      }
    }
    else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
      goto LABEL_34;
    }
    unint64_t v43 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
    uint64_t v45 = *(void *)(v43 + 8);
    if ((v44 & 0x80u) == 0) {
      uint64_t v45 = v44;
    }
    v31 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 4) == 0)
    {
LABEL_35:
      if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
        goto LABEL_36;
      }
      goto LABEL_56;
    }
LABEL_53:
    unint64_t v46 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v47 = *(unsigned __int8 *)(v46 + 23);
    uint64_t v48 = *(void *)(v46 + 8);
    if ((v47 & 0x80u) == 0) {
      uint64_t v48 = v47;
    }
    v31 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0)
    {
LABEL_36:
      if ((*(unsigned char *)(a1 + 16) & 0x10) == 0)
      {
LABEL_38:
        uint64_t v37 = v31 + 2;
        if ((v36 & 0x20) == 0) {
          uint64_t v37 = v31;
        }
        if ((v36 & 0x40) != 0) {
          v37 += 2;
        }
        if (v36 < 0) {
          uint64_t v31 = v37 + 2;
        }
        else {
          uint64_t v31 = v37;
        }
        goto LABEL_45;
      }
LABEL_37:
      v31 += ((9 * (__clz(*(void *)(a1 + 192) | 1) ^ 0x3F) + 73) >> 6) + 1;
      goto LABEL_38;
    }
LABEL_56:
    uint64_t v49 = sub_14DB2B0(*(void *)(a1 + 184));
    v31 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v36 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }
LABEL_45:
  uint64_t v38 = *(void *)(a1 + 8);
  if (v38)
  {
    unint64_t v50 = v38 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v50 + 31) < 0) {
      uint64_t v51 = *(void *)(v50 + 16);
    }
    else {
      uint64_t v51 = *(unsigned __int8 *)(v50 + 31);
    }
    v31 += v51;
  }
  *(_DWORD *)(a1 + 20) = v31;
  return v31;
}

std::string *sub_14AA848(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    char v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_14DD9EC(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t data_low = SLODWORD(v3[3].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[3], data_low + v14);
    std::string::size_type size = v3[3].__r_.__value_.__l.__size_;
    LODWORD(v3[3].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 72);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 80), 8 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    int v19 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 96));
    uint64_t result = sub_14DEA84((std::string *)((char *)v3 + 88), v19, v18, v17, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    int v20 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v17;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v20;
    uint64_t v21 = (int *)v3[4].__r_.__value_.__l.__size_;
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  int v22 = *(_DWORD *)(a2 + 120);
  if (v22)
  {
    uint64_t v23 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    uint64_t v24 = (std::string **)sub_188CCE4((uint64_t)&v3[4].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 120));
    uint64_t result = sub_14DEB10((std::string *)((char *)v3 + 112), v24, v23, v22, *(_DWORD *)v3[5].__r_.__value_.__l.__size_ - LODWORD(v3[5].__r_.__value_.__l.__data_));
    int v25 = LODWORD(v3[5].__r_.__value_.__l.__data_) + v22;
    LODWORD(v3[5].__r_.__value_.__l.__data_) = v25;
    uint64_t v26 = (int *)v3[5].__r_.__value_.__l.__size_;
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 144);
  if (v27)
  {
    uint64_t v28 = (const std::string **)(*(void *)(a2 + 152) + 8);
    uint64_t v29 = (std::string **)sub_188CCE4((uint64_t)&v3[5].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 144));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[5].__r_.__value_.__r.__words[2], v29, v28, v27, *(_DWORD *)v3[6].__r_.__value_.__l.__size_ - LODWORD(v3[6].__r_.__value_.__l.__data_));
    int v30 = LODWORD(v3[6].__r_.__value_.__l.__data_) + v27;
    LODWORD(v3[6].__r_.__value_.__l.__data_) = v30;
    uint64_t v31 = (int *)v3[6].__r_.__value_.__l.__size_;
    if (*v31 < v30) {
      int *v31 = v30;
    }
  }
  int v32 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v32)
  {
    if (v32)
    {
      uint64_t v34 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v35 = v3->__r_.__value_.__l.__size_;
      char v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        char v36 = (uint64_t *)*v36;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[6].__r_.__value_.__r.__words[2], v34, v36);
      if ((v32 & 2) == 0)
      {
LABEL_21:
        if ((v32 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_39;
      }
    }
    else if ((v32 & 2) == 0)
    {
      goto LABEL_21;
    }
    uint64_t v37 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v38 = v3->__r_.__value_.__l.__size_;
    uint64_t v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
    if (v38) {
      uint64_t v39 = (uint64_t *)*v39;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7], v37, v39);
    if ((v32 & 4) == 0)
    {
LABEL_22:
      if ((v32 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_42;
    }
LABEL_39:
    unint64_t v40 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v41 = v3->__r_.__value_.__l.__size_;
    uint64_t v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (uint64_t *)*v42;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__l.__size_, v40, v42);
    if ((v32 & 8) == 0)
    {
LABEL_23:
      if ((v32 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_50;
    }
LABEL_42:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    unint64_t v43 = (std::string *)v3[7].__r_.__value_.__r.__words[2];
    if (!v43)
    {
      std::string::size_type v44 = v3->__r_.__value_.__l.__size_;
      uint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
      if (v44) {
        uint64_t v45 = (void *)*v45;
      }
      unint64_t v43 = (std::string *)sub_14DB564((uint64_t)v45);
      v3[7].__r_.__value_.__r.__words[2] = (std::string::size_type)v43;
    }
    if (*(void *)(a2 + 184)) {
      unint64_t v46 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      unint64_t v46 = &off_253B4F8;
    }
    uint64_t result = sub_14A8F98(v43, (uint64_t)v46);
    if ((v32 & 0x10) == 0)
    {
LABEL_24:
      if ((v32 & 0x20) == 0) {
        goto LABEL_25;
      }
      goto LABEL_51;
    }
LABEL_50:
    v3[8].__r_.__value_.__r.__words[0] = *(void *)(a2 + 192);
    if ((v32 & 0x20) == 0)
    {
LABEL_25:
      if ((v32 & 0x40) == 0) {
        goto LABEL_26;
      }
      goto LABEL_52;
    }
LABEL_51:
    v3[8].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 200);
    if ((v32 & 0x40) == 0)
    {
LABEL_26:
      if ((v32 & 0x80) == 0)
      {
LABEL_28:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v32;
        goto LABEL_29;
      }
LABEL_27:
      v3[8].__r_.__value_.__s.__data_[10] = *(unsigned char *)(a2 + 202);
      goto LABEL_28;
    }
LABEL_52:
    v3[8].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 201);
    if ((v32 & 0x80) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_29:
  uint64_t v33 = *(void *)(a2 + 8);
  if (v33)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14AAC3C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 120);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 128) + 8 * v1--);
    if ((*(unsigned char *)(v2 + 16) & 4) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 184);
  uint64_t v5 = *(unsigned int *)(v4 + 32);
  uint64_t v6 = *(void *)(v4 + 40);
  do
  {
    BOOL v3 = (int)v5 < 1;
    if ((int)v5 < 1) {
      break;
    }
    uint64_t v7 = v5 - 1;
    BOOL v8 = sub_14DA84C(*(void *)(v6 + 8 * v5));
    uint64_t v5 = v7;
  }
  while (v8);
  return v3;
}

void *sub_14AACC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.ChainIntent");
}

uint64_t sub_14AACD8(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253A600)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_14AB900(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14AADAC(uint64_t a1)
{
  sub_14AACD8(a1);

  operator delete();
}

uint64_t sub_14AADE4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_14AAE80(*(void *)(result + 48));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(void *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14AAE80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14AAED4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    BOOL v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        BOOL v8 = (char *)sub_188C180(*(uint64_t *)v35, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        BOOL v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)std::string::size_type v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_48;
        }
        v5 |= 4u;
        uint64_t v13 = v8 + 1;
        uint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          *(void *)std::string::size_type v35 = v13;
          *(void *)(a1 + 56) = v14;
          goto LABEL_56;
        }
        uint64_t v31 = sub_188C138((uint64_t)v8, v14);
        *(void *)std::string::size_type v35 = v31;
        *(void *)(a1 + 56) = v32;
        if (!v31) {
          goto LABEL_61;
        }
        goto LABEL_56;
      case 2u:
        if (v9 == 16)
        {
          uint64_t v16 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)std::string::size_type v35 = v16 + 1;
            unint64_t v17 = *(unsigned __int8 *)(v16 + 1);
            uint64_t v18 = (char *)(v16 + 2);
            if (*(char *)(v16 + 1) < 0)
            {
              int v19 = *v18;
              int v20 = v17 + (v19 << 7);
              unint64_t v17 = (v20 - 128);
              if (v19 < 0)
              {
                *(void *)std::string::size_type v35 = sub_188C138(v16 + 1, (v20 - 128));
                if (!*(void *)v35) {
                  goto LABEL_61;
                }
                unint64_t v17 = v23;
                goto LABEL_20;
              }
              uint64_t v18 = (char *)(v16 + 3);
            }
            *(void *)std::string::size_type v35 = v18;
LABEL_20:
            if ((v17 - 1) > 8)
            {
              if (*v7) {
                uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(2, v17, v24);
            }
            else
            {
              uint64_t v21 = *(unsigned int *)(a1 + 24);
              if (v21 == *(_DWORD *)(a1 + 28))
              {
                int v22 = v21 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v21 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v21) = v17;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 24) = v22;
            }
            uint64_t v16 = *(void *)v35;
            if (*(void *)a3 <= *(void *)v35 || **(unsigned char **)v35 != 16) {
              goto LABEL_56;
            }
          }
        }
        if (v9 == 18)
        {
          *(void *)&long long v36 = a1 + 24;
          *((void *)&v36 + 1) = sub_14A48CC;
          uint64_t v37 = a1 + 8;
          int v38 = 2;
          uint64_t v28 = (uint64_t)sub_1112E88((uint64_t)a3, v8, &v36);
LABEL_55:
          *(void *)std::string::size_type v35 = v28;
          if (!v28) {
            goto LABEL_61;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_48:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            BOOL v8 = *(char **)v35;
          }
          uint64_t v28 = (uint64_t)sub_1885AC0(v9, v34, v8, a3);
          goto LABEL_55;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          *(void *)std::string::size_type v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
      case 3u:
        if (v9 != 26) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v26 = (uint64_t *)*v26;
        }
        int v27 = (std::string *)sub_1880F84((void *)(a1 + 40), v26);
        uint64_t v28 = (uint64_t)sub_188C244(v27, *(char **)v35, (uint64_t)a3);
        goto LABEL_55;
      case 4u:
        if (v9 != 34) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v29 = *(void *)(a1 + 48);
        if (!v29)
        {
          int v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v30 = (void *)*v30;
          }
          uint64_t v29 = sub_14D55B8((uint64_t)v30);
          *(void *)(a1 + 48) = v29;
          BOOL v8 = *(char **)v35;
        }
        uint64_t v28 = sub_14AB274(a3, v29, (unsigned __int8 *)v8);
        goto LABEL_55;
      default:
        goto LABEL_48;
    }
  }
}

uint64_t sub_14AB274(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14AB9D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14AB304(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    *char v4 = 34;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      unint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      unint64_t v17 = v4 + 2;
    }
    char v4 = sub_14ABBDC(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_14AB564(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0) {
    unint64_t v3 = ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v3 = 0;
  }
  uint64_t v4 = *(unsigned int *)(a1 + 24);
  if (v4)
  {
    int v5 = 0;
    uint64_t v6 = 0;
    do
    {
      int v7 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5);
      if (v7 < 0) {
        uint64_t v8 = 10;
      }
      else {
        uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
      }
      v6 += v8;
      ++v5;
    }
    while (v4 != v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v9 = v3 + v4 + v6;
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v9 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v13 = sub_14ABD5C(*(void *)(a1 + 48));
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v9 += v17;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_14AB6C0(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      data = (std::string *)sub_14D55B8((uint64_t)v15);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v16 = &off_253A640;
    }
    uint64_t result = sub_14AB814(data, (uint64_t)v16);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_14AB814(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14AB8E4(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 2) & 1;
}

void *sub_14AB8F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.ChainInfo");
}

uint64_t sub_14AB900(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14AB9A0(uint64_t a1)
{
  sub_14AB900(a1);

  operator delete();
}

uint64_t sub_14AB9D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v25 + 1);
    unsigned int v9 = **(unsigned char **)v25;
    if ((char)**(unsigned char **)v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v25 + 2);
      }
    }
    *(void *)uint64_t v25 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      int v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
      unint64_t v16 = (void *)sub_188C244(v19, *(char **)v25, (uint64_t)a3);
LABEL_25:
      *(void *)uint64_t v25 = v16;
      if (!v16) {
        goto LABEL_40;
      }
      goto LABEL_33;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v20 = v8 + 1;
    uint64_t v21 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v22 = *v20;
    uint64_t v21 = v21 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      unint64_t v20 = v8 + 2;
LABEL_32:
      *(void *)uint64_t v25 = v20;
      *(void *)(a1 + 32) = v21;
      goto LABEL_33;
    }
    uint64_t v23 = sub_188C138((uint64_t)v8, v21);
    *(void *)uint64_t v25 = v23;
    *(void *)(a1 + 32) = v24;
    if (!v23) {
      goto LABEL_40;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, (char **)v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 21)
  {
    v5 |= 4u;
    *(_DWORD *)(a1 + 40) = *(_DWORD *)v8;
    *(void *)uint64_t v25 = v8 + 4;
    goto LABEL_33;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v25;
    }
    unint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_25;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_40:
  *(void *)uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v25;
}

unsigned char *sub_14ABBDC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 40);
    *int v4 = 21;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14ABD5C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_9:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_10:
  if ((v1 & 4) != 0) {
    uint64_t v3 = v2 + 5;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14ABE24()
{
  return 1;
}

void *sub_14ABE2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.BrandDensity");
}

uint64_t sub_14ABE3C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253A670)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
    if (*(void *)(a1 + 80))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_14DDC70((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14ABF3C(uint64_t a1)
{
  sub_14ABE3C(a1);

  operator delete();
}

uint64_t sub_14ABF74(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A6A1C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
  unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_20;
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  *(unsigned char *)unint64_t v8 = 0;
  *(unsigned char *)(v8 + 23) = 0;
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_20:
  uint64_t result = sub_14A7068(*(void *)(v1 + 72));
  if ((v5 & 4) != 0) {
LABEL_9:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 80));
LABEL_10:
  if ((v5 & 0x18) != 0)
  {
    *(_DWORD *)(v1 + 96) = 0;
    *(void *)(v1 + 88) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_14AC068(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v45 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (unsigned __int8 *)(*(void *)v45 + 1);
      unsigned int v9 = **(unsigned char **)v45;
      if ((char)**(unsigned char **)v45 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v45, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          unint64_t v8 = (unsigned __int8 *)(*(void *)v45 + 2);
        }
      }
      *(void *)uint64_t v45 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_67;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v12 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
          if (v12) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          BOOL v14 = (std::string *)sub_1880F84((void *)(a1 + 64), v13);
          uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v45, (uint64_t)a3);
          goto LABEL_74;
        case 2u:
          if (v9 != 18) {
            goto LABEL_67;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v16 = *(void **)(a1 + 72);
          if (!v16)
          {
            uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v17 = (void *)*v17;
            }
            uint64_t v16 = sub_14DB564((uint64_t)v17);
            *(void *)(a1 + 72) = v16;
            unint64_t v8 = *(unsigned __int8 **)v45;
          }
          uint64_t v15 = sub_14A7DFC(a3, (uint64_t)v16, v8);
          goto LABEL_74;
        case 3u:
          if (v9 != 24) {
            goto LABEL_67;
          }
          v5 |= 8u;
          uint64_t v18 = (char *)(v8 + 1);
          uint64_t v19 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_23;
          }
          int v20 = *v18;
          uint64_t v19 = v19 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            uint64_t v39 = sub_188C138((uint64_t)v8, v19);
            *(void *)uint64_t v45 = v39;
            *(void *)(a1 + 88) = v40;
            if (!v39) {
              goto LABEL_84;
            }
          }
          else
          {
            uint64_t v18 = (char *)(v8 + 2);
LABEL_23:
            *(void *)uint64_t v45 = v18;
            *(void *)(a1 + 88) = v19;
          }
          goto LABEL_75;
        case 4u:
          if (v9 != 34) {
            goto LABEL_67;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v21 = *(void *)(a1 + 80);
          if (!v21)
          {
            int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v22 = (void *)*v22;
            }
            uint64_t v21 = sub_15C1918((uint64_t)v22);
            *(void *)(a1 + 80) = v21;
            unint64_t v8 = *(unsigned __int8 **)v45;
          }
          uint64_t v15 = (uint64_t)sub_1198F14(a3, v21, v8);
          goto LABEL_74;
        case 5u:
          if (v9 != 40) {
            goto LABEL_67;
          }
          uint64_t v23 = (char *)(v8 + 1);
          unint64_t v24 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_34;
          }
          int v25 = *v23;
          int v26 = v24 + (v25 << 7);
          unint64_t v24 = (v26 - 128);
          if (v25 < 0)
          {
            *(void *)uint64_t v45 = sub_188C138((uint64_t)v8, (v26 - 128));
            if (!*(void *)v45) {
              goto LABEL_84;
            }
            unint64_t v24 = v41;
          }
          else
          {
            uint64_t v23 = (char *)(v8 + 2);
LABEL_34:
            *(void *)uint64_t v45 = v23;
          }
          if (v24 > 2)
          {
            if (*v7) {
              std::string::size_type v44 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              std::string::size_type v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(5, v24, v44);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x10u;
            *(_DWORD *)(a1 + 96) = v24;
          }
          goto LABEL_75;
        case 6u:
          if (v9 == 48)
          {
            int v27 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v45 = v27 + 1;
              uint64_t v28 = v27[1];
              if ((char)v27[1] < 0)
              {
                int v29 = v28 + (v27[2] << 7);
                uint64_t v28 = (v29 - 128);
                if ((char)v27[2] < 0)
                {
                  int v27 = (unsigned __int8 *)sub_188C138((uint64_t)(v27 + 1), (v29 - 128));
                  uint64_t v28 = v30;
                }
                else
                {
                  v27 += 3;
                }
              }
              else
              {
                v27 += 2;
              }
              *(void *)uint64_t v45 = v27;
              uint64_t v31 = *(unsigned int *)(a1 + 24);
              if (v31 == *(_DWORD *)(a1 + 28))
              {
                int v32 = v31 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v31 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v31) = v28;
                int v27 = *(unsigned __int8 **)v45;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v31) = v28;
                int v32 = v31 + 1;
              }
              *(_DWORD *)(a1 + 24) = v32;
              if (!v27) {
                goto LABEL_84;
              }
              if (*(void *)a3 <= (unint64_t)v27 || *v27 != 48) {
                goto LABEL_75;
              }
            }
          }
          if (v9 == 50)
          {
            uint64_t v15 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          }
          else
          {
LABEL_67:
            if (v9) {
              BOOL v42 = (v9 & 7) == 4;
            }
            else {
              BOOL v42 = 1;
            }
            if (v42)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_84:
              *(void *)uint64_t v45 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              unint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = *(unsigned __int8 **)v45;
            }
            uint64_t v15 = (uint64_t)sub_1885AC0(v9, v43, (char *)v8, a3);
          }
LABEL_74:
          *(void *)uint64_t v45 = v15;
          if (!v15) {
            goto LABEL_84;
          }
LABEL_75:
          if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 7u:
          if (v9 != 58) {
            goto LABEL_67;
          }
          BOOL v33 = (char *)(v8 - 1);
          while (1)
          {
            uint64_t v34 = (unsigned __int8 *)(v33 + 1);
            *(void *)uint64_t v45 = v33 + 1;
            std::string::size_type v35 = *(_DWORD **)(a1 + 56);
            if (v35 && (uint64_t v36 = *(int *)(a1 + 48), (int)v36 < *v35))
            {
              *(_DWORD *)(a1 + 48) = v36 + 1;
              uint64_t v37 = *(void *)&v35[2 * v36 + 2];
            }
            else
            {
              int v38 = sub_14D5338(*(void *)(a1 + 40));
              uint64_t v37 = sub_188CDC8(a1 + 40, (uint64_t)v38);
              uint64_t v34 = *(unsigned __int8 **)v45;
            }
            BOOL v33 = sub_14A7F1C(a3, v37, v34);
            *(void *)uint64_t v45 = v33;
            if (!v33) {
              goto LABEL_84;
            }
            if (*(void *)a3 <= (unint64_t)v33 || *v33 != 58) {
              goto LABEL_75;
            }
          }
        default:
          goto LABEL_67;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v45;
}

char *sub_14AC53C(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 72);
  *uint64_t v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_14DB148(v7, v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 88);
    *uint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 80);
    *uint64_t v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v13, v15, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 96);
    *uint64_t v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 24);
  if ((int)v19 >= 1)
  {
    for (uint64_t i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v21 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *uint64_t v4 = 48;
      v4[1] = v21;
      if (v21 > 0x7F)
      {
        v4[1] = v21 | 0x80;
        unint64_t v22 = v21 >> 7;
        v4[2] = v21 >> 7;
        v4 += 3;
        if (v21 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v23 = v22 >> 14;
            v22 >>= 7;
            *v4++ = v22;
          }
          while (v23);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v24 = *(_DWORD *)(a1 + 48);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *uint64_t v4 = 58;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        uint64_t v28 = v4 + 2;
      }
      uint64_t v4 = sub_14A6CC8(v26, (unint64_t)v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    int v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    int v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_14AC90C(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_14A6E8C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 0x1F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_18;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v14 = sub_14DB2B0(*(void *)(a1 + 72));
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v15 = sub_15B0D90(*(void *)(a1 + 80));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0)
    {
LABEL_12:
      if ((v10 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
LABEL_19:
    v4 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v10 & 0x10) == 0) {
      goto LABEL_24;
    }
LABEL_20:
    int v16 = *(_DWORD *)(a1 + 96);
    if (v16 < 0) {
      uint64_t v17 = 11;
    }
    else {
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v17;
  }
LABEL_24:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v4 += v21;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_14ACAE4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_14DE9F8((std::string *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 0x1F) != 0)
  {
    if (v13)
    {
      uint64_t v15 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      sub_1881DF4((std::string **)(a1 + 64), v15, v17);
      if ((v13 & 2) == 0)
      {
LABEL_9:
        if ((v13 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_29;
      }
    }
    else if ((v13 & 2) == 0)
    {
      goto LABEL_9;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(std::string **)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_14DB564((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_253B4F8;
    }
    sub_14A8F98(v18, (uint64_t)v21);
    if ((v13 & 4) == 0)
    {
LABEL_10:
      if ((v13 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v22 = *(void *)(a1 + 80);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        int v24 = (void *)*v24;
      }
      uint64_t v22 = sub_15C1918((uint64_t)v24);
      *(void *)(a1 + 80) = v22;
    }
    if (*(void *)(a2 + 80)) {
      int v25 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      int v25 = &off_253F1A0;
    }
    sub_15B0E24(v22, (uint64_t)v25);
    if ((v13 & 8) == 0)
    {
LABEL_11:
      if ((v13 & 0x10) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v13;
        goto LABEL_14;
      }
LABEL_12:
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_37:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v13 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14ACD08(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    uint64_t v5 = *(unsigned int *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    while ((int)v5 >= 1)
    {
      uint64_t v7 = v5 - 1;
      BOOL v8 = sub_14DA84C(*(void *)(v6 + 8 * v5));
      uint64_t v5 = v7;
      if (!v8) {
        return 0;
      }
    }
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14ACD7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.BusinessIntent");
}

uint64_t sub_14ACD8C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253A6D8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14ACE58(uint64_t a1)
{
  sub_14ACD8C(a1);

  operator delete();
}

uint64_t sub_14ACE90(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_14A7068(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14ACF24(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_14DB564((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_14A7DFC(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_14AD0E4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14DB148(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14AD214(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_14DB2B0(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14AD2F8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_14DB564((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_253B4F8;
      }
      uint64_t result = sub_14A8F98(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14AD3E4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14AD448@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.ProximityIntent");
}

uint64_t sub_14AD458(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_253A700)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14AD548(uint64_t a1)
{
  sub_14AD458(a1);

  operator delete();
}

unsigned char *sub_14AD580(unsigned char *result)
{
  BOOL v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_15B16B4(*((unsigned char **)result + 3));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_15B09D0(*((void *)v1 + 4));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_15B16B4(*((unsigned char **)v1 + 5));
  }
LABEL_6:
  if ((v2 & 0xF8) != 0)
  {
    *((void *)v1 + 6) = 0;
    *((void *)v1 + 7) = 0;
    *((void *)v1 + 8) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_14AD618(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v41 + 1;
    unsigned int v9 = *v41;
    if (*v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v41 + 2;
      }
    }
    unint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_50;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_15C19EC((uint64_t)v13);
        *(void *)(a1 + 24) = v12;
        goto LABEL_49;
      case 2u:
        if (v9 != 18) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_15C1918((uint64_t)v15);
          *(void *)(a1 + 32) = v14;
          uint64_t v8 = v41;
        }
        uint64_t v16 = sub_1198F14(a3, v14, (unsigned __int8 *)v8);
        goto LABEL_58;
      case 3u:
        if (v9 != 24) {
          goto LABEL_51;
        }
        uint64_t v17 = v8 + 1;
        unint64_t v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          unint64_t v41 = (char *)sub_188C138((uint64_t)v8, (v20 - 128));
          if (!v41) {
            goto LABEL_76;
          }
          unint64_t v18 = v33;
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_24:
          unint64_t v41 = v17;
        }
        if (v18 > 3)
        {
          if (*v7) {
            uint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v40);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v18;
        }
        goto LABEL_59;
      case 5u:
        if (v9 != 41) {
          goto LABEL_51;
        }
        v5 |= 8u;
        *(void *)(a1 + 48) = *(void *)v8;
        unint64_t v41 = v8 + 8;
        goto LABEL_59;
      case 6u:
        if (v9 != 48) {
          goto LABEL_51;
        }
        v5 |= 0x20u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v34 = (char *)sub_188C138((uint64_t)v8, v22);
          unint64_t v41 = v34;
          *(unsigned char *)(a1 + 60) = v35 != 0;
          if (!v34) {
            goto LABEL_76;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_33:
          unint64_t v41 = v21;
          *(unsigned char *)(a1 + 60) = v22 != 0;
        }
        goto LABEL_59;
      case 7u:
        if (v9 != 56) {
          goto LABEL_51;
        }
        v5 |= 0x80u;
        int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, v25);
          unint64_t v41 = v36;
          *(void *)(a1 + 64) = v37;
          if (!v36) {
            goto LABEL_76;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_38:
          unint64_t v41 = v24;
          *(void *)(a1 + 64) = v25;
        }
        goto LABEL_59;
      case 8u:
        if (v9 != 64) {
          goto LABEL_51;
        }
        v5 |= 0x40u;
        unsigned int v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          int v38 = (char *)sub_188C138((uint64_t)v8, v28);
          unint64_t v41 = v38;
          *(unsigned char *)(a1 + 61) = v39 != 0;
          if (!v38) {
            goto LABEL_76;
          }
        }
        else
        {
          unsigned int v27 = v8 + 2;
LABEL_43:
          unint64_t v41 = v27;
          *(unsigned char *)(a1 + 61) = v28 != 0;
        }
        goto LABEL_59;
      case 9u:
        if (v9 != 74) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void *)(a1 + 40);
        if (!v12)
        {
          uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v12 = sub_15C19EC((uint64_t)v30);
          *(void *)(a1 + 40) = v12;
LABEL_49:
          uint64_t v8 = v41;
        }
LABEL_50:
        uint64_t v16 = sub_11E1C60(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_58;
      default:
LABEL_51:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v41;
          }
          uint64_t v16 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_58:
          unint64_t v41 = v16;
          if (!v16) {
            goto LABEL_76;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_76:
        }
          unint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v41;
    }
  }
}

unsigned char *sub_14ADA6C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 56);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    *char v4 = 41;
    *(void *)(v4 + 1) = v16;
    v4 += 9;
    if ((v6 & 0x20) == 0)
    {
LABEL_25:
      if ((v6 & 0x80) == 0) {
        goto LABEL_39;
      }
      goto LABEL_33;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_25;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v17 = *(unsigned char *)(a1 + 60);
  *char v4 = 48;
  v4[1] = v17;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_33:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(void *)(a1 + 64);
    *char v4 = 56;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_39:
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 61);
    *char v4 = 64;
    v4[1] = v21;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 40);
    *char v4 = 74;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    char v4 = sub_15B1A68(v22, (unint64_t)v24, a3);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_14ADE08(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t result = 0;
    goto LABEL_24;
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_15B1D1C(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = sub_15B1D1C(*(void *)(a1 + 40));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v8 = v3 + 9;
  if ((v2 & 8) == 0) {
    uint64_t v8 = v3;
  }
  if ((v2 & 0x10) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 56);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v8 += v10;
  }
  if ((v2 & 0x20) != 0) {
    v8 += 2;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t result = v8 + 2;
  }
  else {
    uint64_t result = v8;
  }
  if (v2 < 0) {
    result += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_24:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_14ADF84(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C19EC((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_253F208;
      }
      sub_15B1E3C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_32;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_32:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C19EC((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      char v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      char v17 = &off_253F208;
    }
    sub_15B1E3C(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_41;
    }
LABEL_40:
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_43:
    *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14AE134(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1FC0(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14AE194@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.LocationIntent");
}

uint64_t sub_14AE1A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_253A748)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 56);
    if (v7)
    {
      sub_14AF030(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14AE2C0(uint64_t a1)
{
  sub_14AE1A4(a1);

  operator delete();
}

uint64_t sub_14AE2F8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_20;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_20:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_24;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_24:
  uint64_t result = sub_14A7068(*(void *)(result + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_14AE410(*(void *)(v1 + 56));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 56) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_14AE410(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14AE410(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_14AF12C(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_14AE4A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_27;
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_27;
      case 3u:
        if (v9 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void **)(a1 + 48);
        if (!v16)
        {
          char v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v17 = (void *)*v17;
          }
          uint64_t v16 = sub_14DB564((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v18 = sub_14A7DFC(a3, (uint64_t)v16, v8);
        goto LABEL_46;
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
LABEL_27:
        unint64_t v20 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (uint64_t)sub_188C244(v20, *(char **)v30, (uint64_t)a3);
        goto LABEL_46;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        char v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 64) = v29 != 0;
          if (!v28) {
            goto LABEL_54;
          }
        }
        else
        {
          char v21 = (char *)(v8 + 2);
LABEL_32:
          *(void *)uint64_t v30 = v21;
          *(unsigned char *)(a1 + 64) = v22 != 0;
        }
        goto LABEL_47;
      case 6u:
        if (v9 != 50) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 56);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_14D588C((uint64_t)v25);
          *(void *)(a1 + 56) = v24;
          uint64_t v8 = *(unsigned __int8 **)v30;
        }
        uint64_t v18 = (uint64_t)sub_14AE7E0(a3, v24, v8);
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            unint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v27, (char *)v8, a3);
LABEL_46:
          *(void *)uint64_t v30 = v18;
          if (!v18) {
            goto LABEL_54;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

char *sub_14AE7E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14AF23C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14AE870(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_10:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 48);
  *uint64_t v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_14DB148(v7, v9, a3);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_26;
    }
    goto LABEL_20;
  }
LABEL_17:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 64);
  *uint64_t v4 = 40;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_20:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 56);
    *uint64_t v4 = 50;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_14AF57C(v11, v13, a3);
  }
LABEL_26:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    char v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    char v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_14AEAA0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v16 = sub_14DB2B0(*(void *)(a1 + 48));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) != 0)
  {
LABEL_15:
    uint64_t v11 = sub_14AF7A4(*(void *)(a1 + 56));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  if ((v2 & 0x20) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_19:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14AEC58(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    unint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_31;
    }
LABEL_23:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      data = (std::string *)sub_14DB564((uint64_t)v18);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_253B4F8;
    }
    uint64_t result = sub_14A8F98(data, (uint64_t)v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_31:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    unint64_t v20 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v20)
    {
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      unint64_t v20 = (std::string *)sub_14D588C((uint64_t)v22);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v20;
    }
    if (*(void *)(a2 + 56)) {
      int v23 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v23 = &off_253A790;
    }
    uint64_t result = sub_14AEE28(v20, (uint64_t)v23);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_14AEE28(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14DEB9C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v12 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v12 = (void *)*v12;
        }
        data = (std::string *)sub_14D5930((uint64_t)v12);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_253A7D0;
      }
      uint64_t result = sub_14AF8C4(data, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14AEF68(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(unsigned int *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    while ((int)v5 >= 1)
    {
      uint64_t v7 = v5 - 1;
      BOOL v8 = sub_14DA84C(*(void *)(v6 + 8 * v5));
      uint64_t v5 = v7;
      if (!v8) {
        return 0;
      }
    }
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_14AEFDC(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_14AEFDC(uint64_t a1)
{
  uint64_t result = sub_14AFA74(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_14AFACC(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_14AF020@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.AttributeIntent");
}

uint64_t sub_14AF030(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253A790)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_14AFB40(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_14DDDF0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14AF0F4(uint64_t a1)
{
  sub_14AF030(a1);

  operator delete();
}

uint64_t sub_14AF12C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_21;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_14A7068(*(void *)(result + 48));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  if ((v2 & 0xF0) != 0) {
    *(void *)(v1 + 56) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_14AF23C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    return v29;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v29 + 1;
    unsigned int v8 = *v29;
    if (*v29 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v29, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v29 + 2;
      }
    }
    uint64_t v29 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v16 = v7 - 1;
        while (1)
        {
          uint64_t v29 = v16 + 1;
          std::string::size_type v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_14D588C(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
          }
          uint64_t v16 = (char *)sub_14AE7E0(a3, v19);
          uint64_t v29 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_44;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v25 = *(void **)(a1 + 48);
    if (!v25)
    {
      BOOL v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        BOOL v26 = (void *)*v26;
      }
      uint64_t v25 = sub_14D5930((uint64_t)v26);
      *(void *)(a1 + 48) = v25;
      unint64_t v7 = v29;
    }
    uint64_t v15 = (char *)sub_14AF4EC(a3, (uint64_t)v25, (unsigned __int8 *)v7);
LABEL_43:
    uint64_t v29 = v15;
    if (!v15) {
      return 0;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      return v29;
    }
  }
  if (v8 == 16)
  {
    std::string::size_type v21 = v7 + 1;
    unint64_t v22 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v23 = *v21;
    int v24 = v22 + (v23 << 7);
    unint64_t v22 = (v24 - 128);
    if (v23 < 0)
    {
      uint64_t v29 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
      if (!v29) {
        return 0;
      }
      unint64_t v22 = v27;
    }
    else
    {
      std::string::size_type v21 = v7 + 2;
LABEL_35:
      uint64_t v29 = v21;
    }
    if (v22 > 2)
    {
      if (*v6) {
        uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v22, v28);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v22;
    }
    goto LABEL_44;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v29;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_43;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v29;
  }
  return 0;
}

uint64_t sub_14AF4EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14AFC74(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14AF57C(uint64_t a1, char *a2, void *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_14B00E0(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *char v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        std::string::size_type v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        std::string::size_type v17 = v4 + 2;
      }
      char v4 = (char *)sub_14AF57C(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    std::string::size_type v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    std::string::size_type v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_14AF7A4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14AF7A4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_14B039C(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14AF8C4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    int v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_22:
    int v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
LABEL_25:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      data = (std::string *)sub_14DB564((uint64_t)v18);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v19 = &off_253B4F8;
    }
    uint64_t result = sub_14A8F98(data, (uint64_t)v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_34;
    }
LABEL_33:
    v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_35;
    }
LABEL_34:
    v3[2].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 57);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_11;
    }
LABEL_35:
    v3[2].__r_.__value_.__s.__data_[10] = *(unsigned char *)(a2 + 58);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14AFA74(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_14AEFDC(*(void *)(*(void *)(a1 + 16) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

uint64_t sub_14AFACC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14AFB30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.StructuredAttribute");
}

uint64_t sub_14AFB40(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_253A7D0)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14AFC3C(uint64_t a1)
{
  sub_14AFB40(a1);

  operator delete();
}

uint64_t sub_14AFC74(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v44 + 1);
    unsigned int v9 = **(unsigned char **)v44;
    if ((char)**(unsigned char **)v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v44 + 2);
      }
    }
    *(void *)std::string::size_type v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 24);
        goto LABEL_27;
      case 2u:
        if (v9 != 18) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 32);
        goto LABEL_27;
      case 3u:
        if (v9 != 26) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unsigned int v16 = *(void **)(a1 + 48);
        if (!v16)
        {
          std::string::size_type v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v17 = (void *)*v17;
          }
          unsigned int v16 = sub_14DB564((uint64_t)v17);
          *(void *)(a1 + 48) = v16;
          int v8 = *(unsigned __int8 **)v44;
        }
        uint64_t v18 = sub_14A7DFC(a3, (uint64_t)v16, v8);
        goto LABEL_57;
      case 4u:
        if (v9 != 34) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 40);
LABEL_27:
        unint64_t v20 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (uint64_t)sub_188C244(v20, *(char **)v44, (uint64_t)a3);
        goto LABEL_57;
      case 5u:
        if (v9 != 40) {
          goto LABEL_50;
        }
        v5 |= 0x10u;
        std::string::size_type v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v22);
          *(void *)std::string::size_type v44 = v36;
          *(unsigned char *)(a1 + 56) = v37 != 0;
          if (!v36) {
            goto LABEL_75;
          }
        }
        else
        {
          std::string::size_type v21 = (char *)(v8 + 2);
LABEL_32:
          *(void *)std::string::size_type v44 = v21;
          *(unsigned char *)(a1 + 56) = v22 != 0;
        }
        goto LABEL_58;
      case 6u:
        if (v9 != 48) {
          goto LABEL_50;
        }
        v5 |= 0x20u;
        int v24 = (char *)(v8 + 1);
        uint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v25);
          *(void *)std::string::size_type v44 = v38;
          *(unsigned char *)(a1 + 57) = v39 != 0;
          if (!v38) {
            goto LABEL_75;
          }
        }
        else
        {
          int v24 = (char *)(v8 + 2);
LABEL_37:
          *(void *)std::string::size_type v44 = v24;
          *(unsigned char *)(a1 + 57) = v25 != 0;
        }
        goto LABEL_58;
      case 7u:
        if (v9 != 56) {
          goto LABEL_50;
        }
        unint64_t v27 = (char *)(v8 + 1);
        unint64_t v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if (v29 < 0)
        {
          *(void *)std::string::size_type v44 = sub_188C138((uint64_t)v8, (v30 - 128));
          if (!*(void *)v44) {
            goto LABEL_75;
          }
          unint64_t v28 = v40;
        }
        else
        {
          unint64_t v27 = (char *)(v8 + 2);
LABEL_42:
          *(void *)std::string::size_type v44 = v27;
        }
        if (v28 > 7)
        {
          if (*v7) {
            unint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v28, v43);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 60) = v28;
        }
        goto LABEL_58;
      case 8u:
        if (v9 != 64) {
          goto LABEL_50;
        }
        v5 |= 0x40u;
        BOOL v31 = (char *)(v8 + 1);
        uint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v8, v32);
          *(void *)std::string::size_type v44 = v41;
          *(unsigned char *)(a1 + 58) = v42 != 0;
          if (!v41) {
            goto LABEL_75;
          }
        }
        else
        {
          BOOL v31 = (char *)(v8 + 2);
LABEL_49:
          *(void *)std::string::size_type v44 = v31;
          *(unsigned char *)(a1 + 58) = v32 != 0;
        }
        goto LABEL_58;
      default:
LABEL_50:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(unsigned __int8 **)v44;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v35, (char *)v8, a3);
LABEL_57:
          *(void *)std::string::size_type v44 = v18;
          if (!v18) {
            goto LABEL_75;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_75:
        }
          *(void *)std::string::size_type v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v44;
    }
  }
}

char *sub_14B00E0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 48);
  *uint64_t v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_14DB148(v7, v9, a3);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 56);
  *uint64_t v4 = 40;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 57);
  *uint64_t v4 = 48;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(int *)(a1 + 60);
    *uint64_t v4 = 56;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 58);
    *uint64_t v4 = 64;
    v4[1] = v15;
    v4 += 2;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14B039C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t result = 0;
    goto LABEL_27;
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((*(unsigned char *)(a1 + 16) & 4) != 0)
  {
    unint64_t v17 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if ((*(unsigned char *)(a1 + 16) & 8) != 0)
  {
LABEL_14:
    uint64_t v11 = sub_14DB2B0(*(void *)(a1 + 48));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v12 = v3 + 2;
  if ((v2 & 0x10) == 0) {
    uint64_t v12 = v3;
  }
  if ((v2 & 0x20) != 0) {
    v12 += 2;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t result = v12 + 2;
  }
  else {
    uint64_t result = v12;
  }
  if (v2 < 0)
  {
    int v13 = *(_DWORD *)(a1 + 60);
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v13 >= 0) {
      uint64_t v15 = v14;
    }
    else {
      uint64_t v15 = 11;
    }
    result += v15;
  }
LABEL_27:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v20 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    result += v21;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_14B0568@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.Attribute");
}

uint64_t sub_14B0578(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B0618(uint64_t a1)
{
  sub_14B0578(a1);

  operator delete();
}

uint64_t sub_14B0650(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14B0698(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v14 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_30:
    *(void *)int v24 = v14;
    if (!v14) {
      goto LABEL_42;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        *(void *)int v24 = sub_188C138((uint64_t)v7, (v18 - 128));
        if (!*(void *)v24) {
          goto LABEL_42;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    *(void *)int v24 = v15;
LABEL_25:
    if (sub_1764FEC(v16))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    else
    {
      if (*v6) {
        int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_30;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_42:
  *(void *)int v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_14B08AC(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14B09F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14B0AC0()
{
  return 1;
}

void *sub_14B0AC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.ClientResolvedIntent");
}

void *sub_14B0AD8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14B0B5C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_14B0B5C(uint64_t a1)
{
  unint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  uint64_t result = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253A838)
  {
    uint64_t v5 = *(void *)(a1 + 56);
    if (v5)
    {
      sub_14DADD4(v5);
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 80);
    if (v7)
    {
      sub_15B1678(v7);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 88);
    if (result)
    {
      sub_15B6D48();
      operator delete();
    }
  }
  return result;
}

void sub_14B0C9C(void *a1)
{
  sub_14B0AD8(a1);

  operator delete();
}

uint64_t sub_14B0CD4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_23:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_27;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_31:
    unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v2 & 0x10) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v2 & 0x10) != 0) {
        goto LABEL_35;
      }
    }
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_36:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 64));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_37;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_23;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_27:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_31;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_31;
    }
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_35:
  uint64_t result = sub_14A7068(*(void *)(result + 56));
  if ((v2 & 0x20) != 0) {
    goto LABEL_36;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_37:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 72));
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 80));
LABEL_11:
  if ((v2 & 0x100) != 0) {
    uint64_t result = sub_15B6D84(*(void *)(v1 + 88));
  }
  if ((v2 & 0x600) != 0)
  {
    *(_DWORD *)(v1 + 104) = 0;
    *(void *)(v1 + 96) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_14B0E58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 2);
      }
    }
    *(void *)uint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_52;
      case 2u:
        if (v9 != 18) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v15 = *(void **)(a1 + 56);
        if (!v15)
        {
          unint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_14DB564((uint64_t)v16);
          *(void *)(a1 + 56) = v15;
          unint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v17 = sub_14A7DFC(a3, (uint64_t)v15, v8);
        goto LABEL_73;
      case 3u:
        if (v9 != 24) {
          goto LABEL_66;
        }
        v5 |= 0x200u;
        int v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v41 = v37;
          *(void *)(a1 + 96) = v38;
          if (!v37) {
            goto LABEL_83;
          }
        }
        else
        {
          int v18 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v41 = v18;
          *(void *)(a1 + 96) = v19;
        }
        goto LABEL_74;
      case 4u:
        if (v9 != 32) {
          goto LABEL_66;
        }
        v5 |= 0x400u;
        unint64_t v22 = (char *)(v8 + 1);
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v39 = sub_188C138((uint64_t)v8, v21);
          *(void *)uint64_t v41 = v39;
          *(_DWORD *)(a1 + 104) = v40;
          if (!v39) {
            goto LABEL_83;
          }
        }
        else
        {
          unint64_t v22 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v41 = v22;
          *(_DWORD *)(a1 + 104) = v21;
        }
        goto LABEL_74;
      case 5u:
        if (v9 != 42) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_52;
      case 6u:
        if (v9 != 50) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v25 = *(void *)(a1 + 64);
        if (!v25)
        {
          int v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v26 = (void *)*v26;
          }
          uint64_t v25 = sub_15C1918((uint64_t)v26);
          *(void *)(a1 + 64) = v25;
          unint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v17 = (uint64_t)sub_1198F14(a3, v25, v8);
        goto LABEL_73;
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v27 = *(void *)(a1 + 72);
        if (v27) {
          goto LABEL_59;
        }
        unint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v28 = (void *)*v28;
        }
        uint64_t v27 = sub_15C19EC((uint64_t)v28);
        *(void *)(a1 + 72) = v27;
        goto LABEL_58;
      case 8u:
        if (v9 != 66) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v29 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
        goto LABEL_52;
      case 9u:
        if (v9 != 74) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v30 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
LABEL_52:
        BOOL v31 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (uint64_t)sub_188C244(v31, *(char **)v41, (uint64_t)a3);
        goto LABEL_73;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v27 = *(void *)(a1 + 80);
        if (v27) {
          goto LABEL_59;
        }
        uint64_t v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v32 = (void *)*v32;
        }
        uint64_t v27 = sub_15C19EC((uint64_t)v32);
        *(void *)(a1 + 80) = v27;
LABEL_58:
        unint64_t v8 = *(unsigned __int8 **)v41;
LABEL_59:
        uint64_t v17 = (uint64_t)sub_11E1C60(a3, v27, v8);
        goto LABEL_73;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        int v33 = *(void **)(a1 + 88);
        if (!v33)
        {
          BOOL v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v34 = (void *)*v34;
          }
          int v33 = sub_15C1E94((uint64_t)v34);
          *(void *)(a1 + 88) = v33;
          unint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v17 = (uint64_t)sub_11EA9CC(a3, (uint64_t)v33, v8);
        goto LABEL_73;
      default:
LABEL_66:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v41;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v9, v36, (char *)v8, a3);
LABEL_73:
          *(void *)uint64_t v41 = v17;
          if (!v17) {
            goto LABEL_83;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_83:
        }
          *(void *)uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_14B1314(uint64_t a1, char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x200) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  *char v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_14DB148(v7, v9, a3);
  if ((v6 & 0x200) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 96);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 104);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x20) == 0)
    {
LABEL_27:
      if ((v6 & 0x40) == 0) {
        goto LABEL_28;
      }
      goto LABEL_40;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_27;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 64);
  *char v4 = 50;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v16, v18, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_28:
    if ((v6 & 4) == 0) {
      goto LABEL_29;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  *char v4 = 58;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_15B1A68(v19, (unint64_t)v21, a3);
  if ((v6 & 4) == 0)
  {
LABEL_29:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_47;
  }
LABEL_46:
  char v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_30:
    if ((v6 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_48;
  }
LABEL_47:
  char v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_31:
    if ((v6 & 0x100) == 0) {
      goto LABEL_60;
    }
    goto LABEL_54;
  }
LABEL_48:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 80);
  *char v4 = 82;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  char v4 = sub_15B1A68(v22, (unint64_t)v24, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_54:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 88);
    *char v4 = 90;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    char v4 = sub_15B7AE4(v25, v27, a3);
  }
LABEL_60:
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    BOOL v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    BOOL v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_14B1760(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v17 = sub_14DB2B0(*(void *)(a1 + 56));
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t v18 = sub_15B0D90(*(void *)(a1 + 64));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_32:
  uint64_t v19 = sub_15B1D1C(*(void *)(a1 + 72));
  v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_18:
    uint64_t v10 = sub_15B1D1C(*(void *)(a1 + 80));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  if ((v2 & 0x700) == 0) {
    goto LABEL_40;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v20 = sub_15B806C(*(void *)(a1 + 88));
    v3 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_22:
      if ((v2 & 0x400) == 0) {
        goto LABEL_40;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  int v21 = *(_DWORD *)(a1 + 104);
  if (v21 < 0) {
    uint64_t v22 = 11;
  }
  else {
    uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v22;
LABEL_40:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v3 += v26;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_14B1A5C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_55;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    unint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 32), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 8);
  unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    unint64_t v14 = (uint64_t *)*v14;
  }
  sub_1881DF4((std::string **)(a1 + 40), v12, v14);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_21:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v18 = *(std::string **)(a1 + 56);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_14DB564((uint64_t)v20);
      *(void *)(a1 + 56) = v18;
    }
    if (*(void *)(a2 + 56)) {
      int v21 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v21 = &off_253B4F8;
    }
    sub_14A8F98(v18, (uint64_t)v21);
    if ((v4 & 0x20) == 0) {
      goto LABEL_37;
    }
    goto LABEL_29;
  }
LABEL_18:
  uint64_t v15 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
  if (v16) {
    uint64_t v17 = (uint64_t *)*v17;
  }
  sub_1881DF4((std::string **)(a1 + 48), v15, v17);
  if ((v4 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_7:
  if ((v4 & 0x20) != 0)
  {
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v22 = *(void *)(a1 + 64);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_15C1918((uint64_t)v24);
      *(void *)(a1 + 64) = v22;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v25 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v25 = &off_253F1A0;
    }
    sub_15B0E24(v22, (uint64_t)v25);
  }
LABEL_37:
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v26 = *(void *)(a1 + 72);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      uint64_t v26 = sub_15C19EC((uint64_t)v28);
      *(void *)(a1 + 72) = v26;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v29 = &off_253F208;
    }
    sub_15B1E3C(v26, (uint64_t)v29);
  }
  if ((v4 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v30 = *(void *)(a1 + 80);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = sub_15C19EC((uint64_t)v32);
      *(void *)(a1 + 80) = v30;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v33 = &off_253F208;
    }
    sub_15B1E3C(v30, (uint64_t)v33);
  }
LABEL_55:
  if ((v4 & 0x700) == 0) {
    goto LABEL_61;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_58;
    }
LABEL_73:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v4 & 0x400) == 0) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  *(_DWORD *)(a1 + 16) |= 0x100u;
  BOOL v35 = *(std::string **)(a1 + 88);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (void *)*v37;
    }
    BOOL v35 = (std::string *)sub_15C1E94((uint64_t)v37);
    *(void *)(a1 + 88) = v35;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v38 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v38 = &off_253F3D0;
  }
  sub_15B86B8(v35, (uint64_t)v38);
  if ((v4 & 0x200) != 0) {
    goto LABEL_73;
  }
LABEL_58:
  if ((v4 & 0x400) != 0) {
LABEL_59:
  }
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
LABEL_60:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_61:
  uint64_t v34 = *(void *)(a2 + 8);
  if (v34)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v34 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14B1D5C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x10) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v5 = *(unsigned int *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    while ((int)v5 >= 1)
    {
      uint64_t v7 = v5 - 1;
      BOOL v8 = sub_14DA84C(*(void *)(v6 + 8 * v5));
      uint64_t v5 = v7;
      if (!v8) {
        return 0;
      }
    }
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) == 0) {
    return 1;
  }
  uint64_t result = sub_15B8CAC(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14B1E0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.GeoIntent");
}

uint64_t sub_14B1E1C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253A8A8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_12925EC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B1ED4(uint64_t a1)
{
  sub_14B1E1C(a1);

  operator delete();
}

uint64_t sub_14B1F0C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1292628(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_14B1F68(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unint64_t v14 = (void *)*v14;
      }
      sub_129E0BC((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      uint64_t v6 = v17;
    }
    uint64_t v12 = sub_14B20C0(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

char *sub_14B20C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1292864(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14B2150(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_129318C(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_14B2260(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1293614(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_14B22E8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      sub_129E0BC((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_25303B8;
    }
    sub_129384C(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14B2390(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_1293D50(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14B23BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.SearchFilterIntent");
}

uint64_t sub_14B23CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_253A8C8 && *(void *)(a1 + 24))
  {
    sub_1764400();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B2484(uint64_t a1)
{
  sub_14B23CC(a1);

  operator delete();
}

uint64_t sub_14B24BC(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_176443C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_14B2518(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_178CE04((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_1317850(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

unsigned char *sub_14B2670(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1764760(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_14B2780(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1764968(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_14B2808()
{
  return 1;
}

void *sub_14B2810@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.DirectionIntent");
}

uint64_t sub_14B2820(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253A8E8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B28EC(uint64_t a1)
{
  sub_14B2820(a1);

  operator delete();
}

uint64_t sub_14B2924(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_14A7068(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14B29C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (uint64_t)sub_188C244(v14, *(char **)v31, (uint64_t)a3);
        goto LABEL_38;
      case 2u:
        if (v9 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void **)(a1 + 32);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_14DB564((uint64_t)v17);
          *(void *)(a1 + 32) = v16;
          unsigned int v8 = *(unsigned __int8 **)v31;
        }
        uint64_t v15 = sub_14A7DFC(a3, (uint64_t)v16, v8);
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        v5 |= 4u;
        uint64_t v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v27 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v31 = v27;
          *(void *)(a1 + 40) = v28;
          if (!v27) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v31 = v18;
          *(void *)(a1 + 40) = v19;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        int v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v31) {
            goto LABEL_52;
          }
          unint64_t v22 = v29;
        }
        else
        {
          int v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)uint64_t v31 = v21;
        }
        if (v22 > 2)
        {
          if (*v7) {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v22, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v22;
        }
        goto LABEL_39;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(unsigned __int8 **)v31;
          }
          uint64_t v15 = (uint64_t)sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_38:
          *(void *)uint64_t v31 = v15;
          if (!v15) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

char *sub_14B2CC4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *uint64_t v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_14DB148(v7, v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    *uint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_18:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    *uint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14B2F04(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_14DB2B0(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v8 = *(_DWORD *)(a1 + 48);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14B3050(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_14DB564((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253B4F8;
    }
    uint64_t result = sub_14A8F98(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14B3170(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14B31D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.TransitIntent");
}

uint64_t sub_14B31E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253A920)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B32B0(uint64_t a1)
{
  sub_14B31E4(a1);

  operator delete();
}

uint64_t sub_14B32E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_14A7068(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14B337C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v15 = sub_14DB564((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_14A7DFC(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_14B353C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14DB148(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14B366C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_14DB2B0(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14B3750(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14B37B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.PhoneNumberIntent");
}

uint64_t sub_14B37C4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253A948)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B3890(uint64_t a1)
{
  sub_14B37C4(a1);

  operator delete();
}

uint64_t sub_14B38C8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_14A7068(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(unsigned char *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14B3960(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v17 = (char *)(v8 + 1);
    uint64_t v18 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      uint64_t v17 = (char *)(v8 + 2);
LABEL_25:
      *(void *)uint64_t v27 = v17;
      *(unsigned char *)(a1 + 40) = v18 != 0;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C138((uint64_t)v8, v18);
    *(void *)uint64_t v27 = v25;
    *(unsigned char *)(a1 + 40) = v26 != 0;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void **)(a1 + 32);
    if (!v20)
    {
      uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_14DB564((uint64_t)v21);
      *(void *)(a1 + 32) = v20;
      uint64_t v8 = *(unsigned __int8 **)v27;
    }
    uint64_t v16 = sub_14A7DFC(a3, (uint64_t)v20, v8);
LABEL_35:
    *(void *)uint64_t v27 = v16;
    if (!v16) {
      goto LABEL_43;
    }
    goto LABEL_36;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      int v23 = (uint64_t *)*v23;
    }
    int v24 = (std::string *)sub_1880F84((void *)(a1 + 24), v23);
    uint64_t v16 = (uint64_t)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
    goto LABEL_35;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v27;
    }
    uint64_t v16 = (uint64_t)sub_1885AC0(v9, v15, (char *)v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

char *sub_14B3BA4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  *uint64_t v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_14DB148(v7, v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 40);
    *uint64_t v4 = 24;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14B3D24(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v8 = sub_14DB2B0(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14B3E18(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      unint64_t v10 = (std::string *)sub_14DB564((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_253B4F8;
    }
    uint64_t result = sub_14A8F98(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14B3F28(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14B3F8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.KeywordIntent");
}

void *sub_14B3F9C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14B4028((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_14B4028(uint64_t result)
{
  if ((uint64_t (***)())result != &off_253A978)
  {
    BOOL v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 48);
    if (v2)
    {
      sub_14A7190(v2);
      operator delete();
    }
    uint64_t v3 = v1[7];
    if (v3)
    {
      sub_14A9190(v3);
      operator delete();
    }
    uint64_t v4 = v1[8];
    if (v4)
    {
      sub_14ABE3C(v4);
      operator delete();
    }
    uint64_t v5 = (void *)v1[9];
    if (v5)
    {
      sub_14B0AD8(v5);
      operator delete();
    }
    uint64_t v6 = v1[10];
    if (v6)
    {
      sub_14ACD8C(v6);
      operator delete();
    }
    uint64_t v7 = v1[11];
    if (v7)
    {
      sub_14AD458(v7);
      operator delete();
    }
    uint64_t v8 = v1[12];
    if (v8)
    {
      sub_14AE1A4(v8);
      operator delete();
    }
    uint64_t v9 = v1[13];
    if (v9)
    {
      sub_14B0578(v9);
      operator delete();
    }
    uint64_t v10 = v1[14];
    if (v10)
    {
      sub_14B1E1C(v10);
      operator delete();
    }
    uint64_t v11 = v1[15];
    if (v11)
    {
      sub_14B23CC(v11);
      operator delete();
    }
    uint64_t v12 = v1[16];
    if (v12)
    {
      sub_14B2820(v12);
      operator delete();
    }
    uint64_t v13 = v1[17];
    if (v13)
    {
      sub_14B31E4(v13);
      operator delete();
    }
    uint64_t result = v1[18];
    if (result)
    {
      sub_14B37C4(result);
      operator delete();
    }
  }
  return result;
}

void sub_14B4214(void *a1)
{
  sub_14B3F9C(a1);

  operator delete();
}

uint64_t sub_14B424C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t result = sub_14A72F4(*(void *)(a1 + 48));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_14A9300(*(void *)(a1 + 56));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = sub_14ABF74(*(void *)(a1 + 64));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = sub_14B0CD4(*(void *)(a1 + 72));
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_29:
    uint64_t result = (uint64_t)sub_14AD580(*(unsigned char **)(a1 + 88));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_28:
  uint64_t result = sub_14ACE90(*(void *)(a1 + 80));
  if ((v3 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_30:
  uint64_t result = sub_14AE2F8(*(void *)(a1 + 96));
  if ((v3 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_14B0650(*(void *)(a1 + 104));
LABEL_11:
  if ((v3 & 0x1F00) == 0) {
    goto LABEL_18;
  }
  if ((v3 & 0x100) != 0)
  {
    uint64_t result = sub_14B1F0C(*(void *)(a1 + 112));
    if ((v3 & 0x200) == 0)
    {
LABEL_14:
      if ((v3 & 0x400) == 0) {
        goto LABEL_15;
      }
      goto LABEL_34;
    }
  }
  else if ((v3 & 0x200) == 0)
  {
    goto LABEL_14;
  }
  uint64_t result = sub_14B24BC(*(void *)(a1 + 120));
  if ((v3 & 0x400) == 0)
  {
LABEL_15:
    if ((v3 & 0x800) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = sub_14B2924(*(void *)(a1 + 128));
  if ((v3 & 0x800) == 0)
  {
LABEL_16:
    if ((v3 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  uint64_t result = sub_14B32E8(*(void *)(a1 + 136));
  if ((v3 & 0x1000) != 0) {
LABEL_17:
  }
    uint64_t result = sub_14B38C8(*(void *)(a1 + 144));
LABEL_18:
  if ((v3 & 0x6000) != 0) {
    *(void *)(a1 + 152) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14B4390(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v62 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v62, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v62 + 1);
    unsigned int v10 = **(unsigned char **)v62;
    if ((char)**(unsigned char **)v62 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v62, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v62 + 2);
      }
    }
    *(void *)unint64_t v62 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_111;
        }
        uint64_t v13 = (char *)(v9 + 1);
        unint64_t v14 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)unint64_t v62 = sub_188C138((uint64_t)v9, (v16 - 128));
          if (!*(void *)v62) {
            goto LABEL_132;
          }
          unint64_t v14 = v58;
        }
        else
        {
          uint64_t v13 = (char *)(v9 + 2);
LABEL_13:
          *(void *)unint64_t v62 = v13;
        }
        if (v14 > 0xD)
        {
          if (*v8) {
            uint64_t v61 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v61 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v61);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x2000u;
          *(_DWORD *)(a1 + 152) = v14;
        }
        goto LABEL_119;
      case 2u:
        if (v10 != 18) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void **)(a1 + 48);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_14D53D4((uint64_t)v18);
          *(void *)(a1 + 48) = v17;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B4B18(a3, (uint64_t)v17, v9);
        goto LABEL_118;
      case 3u:
        if (v10 != 26) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_14D5434((uint64_t)v21);
          *(void *)(a1 + 56) = v20;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B4BA8(a3, v20, v9);
        goto LABEL_118;
      case 4u:
        if (v10 != 34) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22)
        {
          int v23 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            int v23 = (void *)*v23;
          }
          uint64_t v22 = sub_14D5640((uint64_t)v23);
          *(void *)(a1 + 64) = v22;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B4C38(a3, v22, v9);
        goto LABEL_118;
      case 5u:
        if (v10 != 42) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v25 = (void *)*v25;
          }
          sub_14D5A44((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 72) = v26;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B4CC8(a3, v24, v9);
        goto LABEL_118;
      case 6u:
        if (v10 != 50) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v27 = *(void **)(a1 + 80);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_14D56F4((uint64_t)v28);
          *(void *)(a1 + 80) = v27;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B4D58(a3, (uint64_t)v27, v9);
        goto LABEL_118;
      case 7u:
        if (v10 != 58) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v29 = *(void *)(a1 + 88);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v30 = (void *)*v30;
          }
          sub_14D5778((uint64_t)v30);
          uint64_t v29 = v31;
          *(void *)(a1 + 88) = v31;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = (uint64_t)sub_14B4DE8(a3, v29, v9);
        goto LABEL_118;
      case 8u:
        if (v10 != 66) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v32 = *(void *)(a1 + 96);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_14D57FC((uint64_t)v33);
          *(void *)(a1 + 96) = v32;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B4E78(a3, v32, v9);
        goto LABEL_118;
      case 9u:
        if (v10 != 74) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v34 = *(void *)(a1 + 104);
        if (!v34)
        {
          BOOL v35 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            BOOL v35 = (void *)*v35;
          }
          uint64_t v34 = sub_14D59BC((uint64_t)v35);
          *(void *)(a1 + 104) = v34;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B4F08(a3, v34, v9);
        goto LABEL_118;
      case 0xAu:
        if (v10 != 82) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v36 = *(void **)(a1 + 112);
        if (!v36)
        {
          uint64_t v37 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v37 = (void *)*v37;
          }
          uint64_t v36 = sub_14D5AE0((uint64_t)v37);
          *(void *)(a1 + 112) = v36;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = (uint64_t)sub_14B4F98(a3, (uint64_t)v36, v9);
        goto LABEL_118;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v38 = *(void **)(a1 + 120);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v39 = (void *)*v39;
          }
          uint64_t v38 = sub_14D5B58((uint64_t)v39);
          *(void *)(a1 + 120) = v38;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = (uint64_t)sub_14B5028(a3, (uint64_t)v38, v9);
        goto LABEL_118;
      case 0xCu:
        if (v10 != 98) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v40 = *(void *)(a1 + 128);
        if (!v40)
        {
          uint64_t v41 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v41 = (void *)*v41;
          }
          uint64_t v40 = sub_14D5BD0((uint64_t)v41);
          *(void *)(a1 + 128) = v40;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B50B8(a3, v40, v9);
        goto LABEL_118;
      case 0xDu:
        if (v10 != 106) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v42 = *(void **)(a1 + 136);
        if (!v42)
        {
          unint64_t v43 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            unint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = sub_14D5C58((uint64_t)v43);
          *(void *)(a1 + 136) = v42;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B5148(a3, (uint64_t)v42, v9);
        goto LABEL_118;
      case 0xEu:
        if (v10 != 112) {
          goto LABEL_111;
        }
        v5 |= 0x4000u;
        std::string::size_type v44 = (char *)(v9 + 1);
        int v45 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_92;
        }
        int v46 = *v44;
        int v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v59 = sub_188C0D0((uint64_t)v9, v45);
          *(void *)unint64_t v62 = v59;
          *(_DWORD *)(a1 + 156) = v60;
          if (!v59) {
            goto LABEL_132;
          }
        }
        else
        {
          std::string::size_type v44 = (char *)(v9 + 2);
LABEL_92:
          *(void *)unint64_t v62 = v44;
          *(_DWORD *)(a1 + 156) = v45;
        }
        goto LABEL_119;
      case 0xFu:
        if (v10 != 122) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v47 = *(void *)(a1 + 144);
        if (!v47)
        {
          uint64_t v48 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v48 = (void *)*v48;
          }
          uint64_t v47 = sub_14D5CDC((uint64_t)v48);
          *(void *)(a1 + 144) = v47;
          uint64_t v9 = *(unsigned __int8 **)v62;
        }
        uint64_t v19 = sub_14B51D8(a3, v47, v9);
        goto LABEL_118;
      case 0x10u:
        if (v10 != 130) {
          goto LABEL_111;
        }
        uint64_t v49 = (const std::string::value_type *)(v9 - 2);
        while (1)
        {
          unint64_t v50 = (char *)(v49 + 2);
          *(void *)unint64_t v62 = v49 + 2;
          uint64_t v51 = *(_DWORD **)(a1 + 40);
          if (v51 && (uint64_t v52 = *(int *)(a1 + 32), (int)v52 < *v51))
          {
            *(_DWORD *)(a1 + 32) = v52 + 1;
            uint64_t v53 = *(std::string **)&v51[2 * v52 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v55 = v54;
            v55[1] = sub_3A6EDC;
            void *v54 = 0;
            v54[1] = 0;
            v54[2] = 0;
            uint64_t v53 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v54);
            unint64_t v50 = *(char **)v62;
          }
          uint64_t v49 = sub_188C244(v53, v50, (uint64_t)a3);
          *(void *)unint64_t v62 = v49;
          if (!v49) {
            goto LABEL_132;
          }
          if (*(void *)a3 <= (unint64_t)v49 || *(_WORD *)v49 != 386) {
            goto LABEL_119;
          }
        }
      default:
LABEL_111:
        if (v10) {
          BOOL v56 = (v10 & 7) == 4;
        }
        else {
          BOOL v56 = 1;
        }
        if (!v56)
        {
          if (*v8)
          {
            std::string::size_type v57 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v57 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v62;
          }
          uint64_t v19 = (uint64_t)sub_1885AC0(v10, v57, (char *)v9, a3);
LABEL_118:
          *(void *)unint64_t v62 = v19;
          if (!v19) {
            goto LABEL_132;
          }
LABEL_119:
          if (sub_11947B8((uint64_t)a3, (char **)v62, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_132:
        }
          *(void *)unint64_t v62 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v62;
    }
  }
}

uint64_t sub_14B4B18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A7460(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B4BA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A94AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B4C38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14AC068(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B4CC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B0E58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B4D58(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14ACF24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14B4DE8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14AD618(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B4E78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14AE4A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B4F08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B0698(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14B4F98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B1F68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14B5028(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B2518(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B50B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B29C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B5148(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B337C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B51D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B3960(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14B5268(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 152);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_14A7FAC(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_34;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  *uint64_t v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    int v15 = v4 + 2;
  }
  uint64_t v4 = sub_14A9E90(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 64);
  *uint64_t v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_14AC53C(v16, v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  *uint64_t v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_14B1314(v19, v21, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 80);
  *uint64_t v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  uint64_t v4 = sub_14AD0E4(v22, v24, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_14:
    if ((v6 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_58;
  }
LABEL_52:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 88);
  *uint64_t v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  uint64_t v4 = sub_14ADA6C(v25, (unint64_t)v27, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_15:
    if ((v6 & 0x80) == 0) {
      goto LABEL_16;
    }
    goto LABEL_64;
  }
LABEL_58:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 96);
  *uint64_t v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    uint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    uint64_t v30 = v4 + 2;
  }
  uint64_t v4 = sub_14AE870(v28, v30, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_16:
    if ((v6 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_70;
  }
LABEL_64:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 104);
  *uint64_t v4 = 74;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  uint64_t v4 = sub_14B08AC(v31, v33, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_17:
    if ((v6 & 0x200) == 0) {
      goto LABEL_18;
    }
    goto LABEL_76;
  }
LABEL_70:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 112);
  *uint64_t v4 = 82;
  unsigned int v35 = *(_DWORD *)(v34 + 20);
  v4[1] = v35;
  if (v35 > 0x7F) {
    uint64_t v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    uint64_t v36 = v4 + 2;
  }
  uint64_t v4 = sub_14B2150(v34, (unint64_t)v36, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_18:
    if ((v6 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_82;
  }
LABEL_76:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 120);
  *uint64_t v4 = 90;
  unsigned int v38 = *(_DWORD *)(v37 + 20);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  uint64_t v4 = sub_14B2670(v37, (unint64_t)v39, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_19:
    if ((v6 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_88;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v40 = *(void *)(a1 + 128);
  *uint64_t v4 = 98;
  unsigned int v41 = *(_DWORD *)(v40 + 20);
  v4[1] = v41;
  if (v41 > 0x7F) {
    uint64_t v42 = sub_188A9CC(v41, v4 + 1);
  }
  else {
    uint64_t v42 = v4 + 2;
  }
  uint64_t v4 = sub_14B2CC4(v40, v42, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_20:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_94;
  }
LABEL_88:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v43 = *(void *)(a1 + 136);
  *uint64_t v4 = 106;
  unsigned int v44 = *(_DWORD *)(v43 + 20);
  v4[1] = v44;
  if (v44 > 0x7F) {
    int v45 = sub_188A9CC(v44, v4 + 1);
  }
  else {
    int v45 = v4 + 2;
  }
  uint64_t v4 = sub_14B353C(v43, v45, a3);
  if ((v6 & 0x4000) != 0)
  {
LABEL_94:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v46 = *(_DWORD *)(a1 + 156);
    *uint64_t v4 = 112;
    v4[1] = v46;
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unsigned int v47 = v46 >> 7;
      v4[2] = v46 >> 7;
      v4 += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_100:
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v49 = *(void *)(a1 + 144);
    *uint64_t v4 = 122;
    unsigned int v50 = *(_DWORD *)(v49 + 20);
    v4[1] = v50;
    if (v50 > 0x7F) {
      uint64_t v51 = sub_188A9CC(v50, v4 + 1);
    }
    else {
      uint64_t v51 = v4 + 2;
    }
    uint64_t v4 = sub_14B3BA4(v49, v51, a3);
  }
  uint64_t v52 = *(unsigned int *)(a1 + 32);
  if ((int)v52 >= 1)
  {
    uint64_t v53 = 0;
    uint64_t v54 = 8 * v52;
    do
    {
      uint64_t v55 = *(void **)(*(void *)(a1 + 40) + v53 + 8);
      if (*((char *)v55 + 23) < 0)
      {
        int64_t v56 = v55[1];
        if (v56 > 127) {
          goto LABEL_118;
        }
      }
      else
      {
        int64_t v56 = *((unsigned __int8 *)v55 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v56)
      {
        *(_WORD *)uint64_t v4 = 386;
        v4[2] = v56;
        if (*((char *)v55 + 23) < 0) {
          uint64_t v55 = (void *)*v55;
        }
        std::string::size_type v57 = v4 + 3;
        memcpy(v57, v55, v56);
        uint64_t v4 = &v57[v56];
        goto LABEL_116;
      }
LABEL_118:
      uint64_t v4 = (char *)sub_188A868(a3, 16, (uint64_t)v55, v4);
LABEL_116:
      v53 += 8;
    }
    while (v54 != v53);
  }
  uint64_t v58 = *(void *)(a1 + 8);
  if ((v58 & 1) == 0) {
    return v4;
  }
  unint64_t v60 = v58 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v60 + 31) < 0)
  {
    uint64_t v61 = *(void **)(v60 + 8);
    uint64_t v62 = *(void *)(v60 + 16);
  }
  else
  {
    uint64_t v61 = (void *)(v60 + 8);
    LODWORD(v62) = *(unsigned __int8 *)(v60 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v62)
  {
    uint64_t v63 = (int)v62;
    memcpy(v4, v61, (int)v62);
    v4 += v63;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v61, v62, v4);
}

uint64_t sub_14B5A14(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  if ((int)v2 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_16;
  }
  if (v8)
  {
    uint64_t v12 = sub_14A86E8(*(void *)(a1 + 48));
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_9:
      if ((v8 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_9;
  }
  uint64_t v13 = sub_14AA4D0(*(void *)(a1 + 56));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_10:
    if ((v8 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v14 = sub_14AC90C(*(void *)(a1 + 64));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_11:
    if ((v8 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v15 = sub_14B1760(*(void *)(a1 + 72));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_12:
    if ((v8 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_32:
    uint64_t v17 = sub_14ADE08(*(void *)(a1 + 88));
    v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_14:
      if ((v8 & 0x80) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_31:
  uint64_t v16 = sub_14AD214(*(void *)(a1 + 80));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_13:
  if ((v8 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_33:
  uint64_t v18 = sub_14AEAA0(*(void *)(a1 + 96));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x80) != 0)
  {
LABEL_15:
    uint64_t v9 = sub_14B09F4(*(void *)(a1 + 104));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  if ((v8 & 0x7F00) == 0) {
    goto LABEL_25;
  }
  if ((v8 & 0x100) != 0)
  {
    uint64_t v19 = sub_14B2260(*(void *)(a1 + 112));
    v3 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x200) == 0)
    {
LABEL_19:
      if ((v8 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_37;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v20 = sub_14B2780(*(void *)(a1 + 120));
  v3 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x400) == 0)
  {
LABEL_20:
    if ((v8 & 0x800) == 0) {
      goto LABEL_21;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v21 = sub_14B2F04(*(void *)(a1 + 128));
  v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x800) == 0)
  {
LABEL_21:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v22 = sub_14B366C(*(void *)(a1 + 136));
  v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x1000) == 0)
  {
LABEL_22:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v23 = sub_14B3D24(*(void *)(a1 + 144));
  v3 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x2000) == 0)
  {
LABEL_23:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_40:
  int v24 = *(_DWORD *)(a1 + 152);
  if (v24 < 0) {
    uint64_t v25 = 11;
  }
  else {
    uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v25;
  if ((v8 & 0x4000) != 0) {
LABEL_24:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 156) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_25:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v26 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v3 += v27;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_14B5DE4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_78;
  }
  if (v9)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_14D53D4((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v13 = &off_253A420;
    }
    sub_14A8AD8(v10, (uint64_t)v13);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v14 = *(std::string **)(a1 + 56);
  if (!v14)
  {
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (void *)*v16;
    }
    uint64_t v14 = (std::string *)sub_14D5434((uint64_t)v16);
    *(void *)(a1 + 56) = v14;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v17 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v17 = &off_253A530;
  }
  sub_14AA848(v14, (uint64_t)v17);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_30:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v18 = *(void *)(a1 + 64);
  if (!v18)
  {
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (void *)*v20;
    }
    uint64_t v18 = sub_14D5640((uint64_t)v20);
    *(void *)(a1 + 64) = v18;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v21 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v21 = &off_253A670;
  }
  sub_14ACAE4(v18, (uint64_t)v21);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_46;
  }
LABEL_38:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v22 = *(void *)(a1 + 72);
  if (!v22)
  {
    uint64_t v23 = *(void *)(a1 + 8);
    int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      int v24 = (void *)*v24;
    }
    sub_14D5A44((uint64_t)v24);
    *(void *)(a1 + 72) = v22;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v25 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v25 = &off_253A838;
  }
  sub_14B1A5C(v22, (uint64_t)v25);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_54:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v30 = *(void *)(a1 + 88);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      unsigned int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        unsigned int v32 = (void *)*v32;
      }
      sub_14D5778((uint64_t)v32);
      *(void *)(a1 + 88) = v30;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v33 = &off_253A700;
    }
    sub_14ADF84(v30, (uint64_t)v33);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0) {
        goto LABEL_78;
      }
      goto LABEL_70;
    }
    goto LABEL_62;
  }
LABEL_46:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  unint64_t v26 = *(std::string **)(a1 + 80);
  if (!v26)
  {
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (void *)*v28;
    }
    unint64_t v26 = (std::string *)sub_14D56F4((uint64_t)v28);
    *(void *)(a1 + 80) = v26;
  }
  if (*(void *)(a2 + 80)) {
    unsigned int v29 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    unsigned int v29 = &off_253A6D8;
  }
  sub_14AD2F8(v26, (uint64_t)v29);
  if ((v9 & 0x20) != 0) {
    goto LABEL_54;
  }
LABEL_11:
  if ((v9 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_62:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v34 = *(std::string **)(a1 + 96);
  if (!v34)
  {
    uint64_t v35 = *(void *)(a1 + 8);
    uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      uint64_t v36 = (void *)*v36;
    }
    uint64_t v34 = (std::string *)sub_14D57FC((uint64_t)v36);
    *(void *)(a1 + 96) = v34;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v37 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v37 = &off_253A748;
  }
  sub_14AEC58(v34, (uint64_t)v37);
  if ((v9 & 0x80) != 0)
  {
LABEL_70:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    unsigned int v38 = *(std::string **)(a1 + 104);
    if (!v38)
    {
      uint64_t v39 = *(void *)(a1 + 8);
      uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
      if (v39) {
        uint64_t v40 = (void *)*v40;
      }
      unsigned int v38 = (std::string *)sub_14D59BC((uint64_t)v40);
      *(void *)(a1 + 104) = v38;
    }
    if (*(void *)(a2 + 104)) {
      unsigned int v41 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unsigned int v41 = &off_253A810;
    }
    sub_119E644(v38, (uint64_t)v41);
  }
LABEL_78:
  if ((v9 & 0x7F00) == 0) {
    goto LABEL_88;
  }
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v43 = *(void **)(a1 + 112);
    if (!v43)
    {
      uint64_t v44 = *(void *)(a1 + 8);
      int v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
      if (v44) {
        int v45 = (void *)*v45;
      }
      uint64_t v43 = sub_14D5AE0((uint64_t)v45);
      *(void *)(a1 + 112) = v43;
    }
    if (*(void *)(a2 + 112)) {
      unsigned int v46 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      unsigned int v46 = &off_253A8A8;
    }
    sub_14B22E8((uint64_t)v43, (uint64_t)v46);
    if ((v9 & 0x200) == 0)
    {
LABEL_81:
      if ((v9 & 0x400) == 0) {
        goto LABEL_82;
      }
      goto LABEL_108;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_81;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  unsigned int v47 = *(std::string **)(a1 + 120);
  if (!v47)
  {
    uint64_t v48 = *(void *)(a1 + 8);
    uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
    if (v48) {
      uint64_t v49 = (void *)*v49;
    }
    unsigned int v47 = (std::string *)sub_14D5B58((uint64_t)v49);
    *(void *)(a1 + 120) = v47;
  }
  if (*(void *)(a2 + 120)) {
    unsigned int v50 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    unsigned int v50 = &off_253A8C8;
  }
  sub_1317A78(v47, (uint64_t)v50);
  if ((v9 & 0x400) == 0)
  {
LABEL_82:
    if ((v9 & 0x800) == 0) {
      goto LABEL_83;
    }
    goto LABEL_116;
  }
LABEL_108:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v51 = *(std::string **)(a1 + 128);
  if (!v51)
  {
    uint64_t v52 = *(void *)(a1 + 8);
    uint64_t v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
    if (v52) {
      uint64_t v53 = (void *)*v53;
    }
    uint64_t v51 = (std::string *)sub_14D5BD0((uint64_t)v53);
    *(void *)(a1 + 128) = v51;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v54 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v54 = &off_253A8E8;
  }
  sub_14B3050(v51, (uint64_t)v54);
  if ((v9 & 0x800) == 0)
  {
LABEL_83:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_124;
  }
LABEL_116:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v55 = *(std::string **)(a1 + 136);
  if (!v55)
  {
    uint64_t v56 = *(void *)(a1 + 8);
    std::string::size_type v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      std::string::size_type v57 = (void *)*v57;
    }
    uint64_t v55 = (std::string *)sub_14D5C58((uint64_t)v57);
    *(void *)(a1 + 136) = v55;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v58 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v58 = &off_253A920;
  }
  sub_14AD2F8(v55, (uint64_t)v58);
  if ((v9 & 0x1000) == 0)
  {
LABEL_84:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_85;
    }
LABEL_132:
    *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
    if ((v9 & 0x4000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_86;
  }
LABEL_124:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v59 = *(std::string **)(a1 + 144);
  if (!v59)
  {
    uint64_t v60 = *(void *)(a1 + 8);
    uint64_t v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      uint64_t v61 = (void *)*v61;
    }
    uint64_t v59 = (std::string *)sub_14D5CDC((uint64_t)v61);
    *(void *)(a1 + 144) = v59;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v62 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v62 = &off_253A948;
  }
  sub_14B3E18(v59, (uint64_t)v62);
  if ((v9 & 0x2000) != 0) {
    goto LABEL_132;
  }
LABEL_85:
  if ((v9 & 0x4000) != 0) {
LABEL_86:
  }
    *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
LABEL_87:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_88:
  uint64_t v42 = *(void *)(a2 + 8);
  if (v42)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v42 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14B6304(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0 || (uint64_t result = sub_14A90A0(*(void *)(a1 + 48)), result))
  {
    if ((v2 & 2) == 0 || (uint64_t result = sub_14AAC3C(*(void *)(a1 + 56)), result))
    {
      if ((v2 & 4) != 0)
      {
        uint64_t result = sub_14ACD08(*(void *)(a1 + 64));
        if (!result) {
          return result;
        }
        int v2 = *(_DWORD *)(a1 + 16);
      }
      if ((v2 & 8) != 0)
      {
        uint64_t result = sub_14B1D5C(*(void *)(a1 + 72));
        if (!result) {
          return result;
        }
        int v2 = *(_DWORD *)(a1 + 16);
      }
      if ((v2 & 0x10) == 0 || (uint64_t result = sub_14AD3E4(*(void *)(a1 + 80)), result))
      {
        if ((v2 & 0x20) != 0)
        {
          uint64_t result = sub_14AE134(*(void *)(a1 + 88));
          if (!result) {
            return result;
          }
          int v2 = *(_DWORD *)(a1 + 16);
        }
        if ((v2 & 0x40) != 0)
        {
          uint64_t result = sub_14AEF68(*(void *)(a1 + 96));
          if (!result) {
            return result;
          }
          int v2 = *(_DWORD *)(a1 + 16);
        }
        if ((v2 & 0x100) != 0)
        {
          uint64_t v4 = *(void *)(a1 + 112);
          if (*(unsigned char *)(v4 + 16))
          {
            uint64_t result = sub_1293D50(*(void *)(v4 + 24));
            if (!result) {
              return result;
            }
            int v2 = *(_DWORD *)(a1 + 16);
          }
        }
        if ((v2 & 0x400) == 0 || (uint64_t result = sub_14B3170(*(void *)(a1 + 128)), result))
        {
          if ((v2 & 0x800) == 0 || (uint64_t result = sub_14B3750(*(void *)(a1 + 136)), result))
          {
            if ((v2 & 0x1000) == 0) {
              return 1;
            }
            uint64_t result = sub_14B3F28(*(void *)(a1 + 144));
            if (result) {
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

void *sub_14B63FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.Intent");
}

void *sub_14B640C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B6480(void *a1)
{
  sub_14B640C(a1);

  operator delete();
}

uint64_t sub_14B64B8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14B64E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
    goto LABEL_39;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v21 + 1;
    unsigned int v8 = *v21;
    if (*v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v21 + 2;
      }
    }
    uint64_t v21 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        *(void *)(a1 + 24) = *(void *)v7;
        uint64_t v21 = v7 + 8;
        int v5 = 1;
        goto LABEL_28;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      uint64_t v14 = v7 + 1;
      unint64_t v15 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        uint64_t v21 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v21) {
          goto LABEL_40;
        }
        unint64_t v15 = v18;
      }
      else
      {
        uint64_t v14 = v7 + 2;
LABEL_25:
        uint64_t v21 = v14;
      }
      if (v15 > 0xD)
      {
        if (*v6) {
          uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v15, v19);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        *(_DWORD *)(a1 + 32) = v15;
      }
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v21;
    }
    uint64_t v21 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v21) {
      goto LABEL_40;
    }
LABEL_28:
    if (sub_11947B8((uint64_t)a3, &v21, a3[11].i32[1])) {
      goto LABEL_39;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_39;
  }
LABEL_40:
  uint64_t v21 = 0;
LABEL_39:
  *(_DWORD *)(a1 + 16) |= v5;
  return v21;
}

unsigned char *sub_14B66D4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14B6834(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 32);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14B68C0()
{
  return 1;
}

void *sub_14B68C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.SpanScore");
}

void *sub_14B68D8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DDEF0(a1 + 6);
  sub_14DDE70(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B6964(void *a1)
{
  sub_14B68D8(a1);

  operator delete();
}

uint64_t sub_14B699C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14B64B8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14A4F50(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0xF) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
    *(_DWORD *)(v1 + 96) = 0;
    *(void *)(v1 + 88) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_14B6A5C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_41;
        }
        v5 |= 8u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v35 = v12;
          *(_DWORD *)(a1 + 96) = v13;
          goto LABEL_48;
        }
        uint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v35 = v33;
        *(_DWORD *)(a1 + 96) = v34;
        if (v33) {
          goto LABEL_48;
        }
        goto LABEL_55;
      case 2u:
        if (v9 != 17) {
          goto LABEL_41;
        }
        uint64_t v16 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 72) = v16;
        goto LABEL_20;
      case 3u:
        if (v9 != 25) {
          goto LABEL_41;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 80) = v17;
        goto LABEL_20;
      case 4u:
        if (v9 != 33) {
          goto LABEL_41;
        }
        uint64_t v18 = *(void *)v8;
        uint64_t v15 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 88) = v18;
LABEL_20:
        uint64_t v35 = v15;
        goto LABEL_48;
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        uint64_t v19 = v8 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          uint64_t v35 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_14D5E0C(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            uint64_t v20 = (unsigned __int8 *)v35;
          }
          uint64_t v19 = sub_14B6DA8(a3, v23, v20);
          uint64_t v35 = v19;
          if (!v19) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 42) {
            goto LABEL_48;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_41;
        }
        uint64_t v25 = v8 - 1;
        while (1)
        {
          unint64_t v26 = (unsigned __int8 *)(v25 + 1);
          uint64_t v35 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_14D50E4(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, (uint64_t)v30);
            unint64_t v26 = (unsigned __int8 *)v35;
          }
          uint64_t v25 = (char *)sub_14B6E38(a3, v29, v26);
          uint64_t v35 = v25;
          if (!v25) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 50) {
            goto LABEL_48;
          }
        }
      default:
LABEL_41:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            unsigned int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v35;
          }
          uint64_t v35 = (char *)sub_1885AC0(v9, v32, v8, a3);
          if (!v35) {
            goto LABEL_55;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

char *sub_14B6DA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B64E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14B6E38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A4FCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14B6EC8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 96);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    *uint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 80);
  *uint64_t v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_18:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 88);
    *uint64_t v4 = 33;
    *(void *)(v4 + 1) = v12;
    v4 += 9;
  }
LABEL_21:
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 42;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_14B66D4(v15, (unint64_t)v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 50;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_14A5174(v20, v22, a3);
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    unint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    unint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_14B71C4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14B6834(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A5260(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) != 0)
  {
    uint64_t v16 = v9 + 9;
    if ((v15 & 1) == 0) {
      uint64_t v16 = v9;
    }
    if ((v15 & 2) != 0) {
      v16 += 9;
    }
    if ((v15 & 4) != 0) {
      uint64_t v9 = v16 + 9;
    }
    else {
      uint64_t v9 = v16;
    }
    if ((v15 & 8) != 0) {
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v9 += v20;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_14B731C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14DEC28((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_14DECA4(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_20;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
      goto LABEL_13;
    }
LABEL_20:
    v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14B74A8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 56);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_14B74E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryTagMetadata");
}

uint64_t sub_14B74F0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14DDEF0((void *)(a1 + 48));
  sub_14DDF70((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B75A8(uint64_t a1)
{
  sub_14B74F0(a1);

  operator delete();
}

uint64_t sub_14B75E0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A0A84(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14A4F50(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8)
  {
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
  if ((v8 & 6) != 0) {
    *(void *)(v1 + 80) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_14B76C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 72), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v33, (uint64_t)a3);
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_38;
        }
        uint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)uint64_t v33 = v16 + 1;
          int v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_14A2564(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            uint64_t v17 = *(unsigned __int8 **)v33;
          }
          uint64_t v16 = (char *)sub_14B79DC(a3, v20, v17);
          *(void *)uint64_t v33 = v16;
          if (!v16) {
            goto LABEL_51;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_46;
          }
        }
      case 3u:
        if (v9 != 29) {
          goto LABEL_38;
        }
        int v23 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 80) = v23;
        goto LABEL_27;
      case 4u:
        if (v9 != 37) {
          goto LABEL_38;
        }
        int v24 = *(_DWORD *)v8;
        uint64_t v22 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 84) = v24;
LABEL_27:
        *(void *)uint64_t v33 = v22;
        goto LABEL_46;
      case 5u:
        if (v9 != 42) {
          goto LABEL_38;
        }
        unint64_t v25 = v8 - 1;
        while (1)
        {
          unint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)uint64_t v33 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_14D50E4(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, (uint64_t)v30);
            unint64_t v26 = *(unsigned __int8 **)v33;
          }
          unint64_t v25 = (char *)sub_14B6E38(a3, v29, v26);
          *(void *)uint64_t v33 = v25;
          if (!v25) {
            goto LABEL_51;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 42) {
            goto LABEL_46;
          }
        }
      default:
LABEL_38:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            unsigned int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v33;
          }
          uint64_t v15 = sub_1885AC0(v9, v32, v8, a3);
LABEL_45:
          *(void *)uint64_t v33 = v15;
          if (!v15) {
            goto LABEL_51;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

uint64_t sub_14B79DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A0ACC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14B7A6C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_14A0C68(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v12 = *(_DWORD *)(a1 + 80);
    *uint64_t v4 = 29;
    *(_DWORD *)(v4 + 1) = v12;
    v4 += 5;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v13 = *(_DWORD *)(a1 + 84);
    *uint64_t v4 = 37;
    *(_DWORD *)(v4 + 1) = v13;
    v4 += 5;
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 42;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        int v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        int v18 = v4 + 2;
      }
      uint64_t v4 = sub_14A5174(v16, v18, a3);
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_14B7CC8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A0D6C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A5260(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v19 = v9 + 5;
    if ((v15 & 2) == 0) {
      uint64_t v19 = v9;
    }
    if ((v15 & 4) != 0) {
      uint64_t v9 = v19 + 5;
    }
    else {
      uint64_t v9 = v19;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_14B7E30(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14DED20((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_14DECA4(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      unint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14B7FD4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 56);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_14B800C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryClassificationMetadata");
}

uint64_t sub_14B801C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14DDEF0((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B80D0(uint64_t a1)
{
  sub_14B801C(a1);

  operator delete();
}

uint64_t sub_14B8108(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A4F50(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_14B81BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  uint64_t v6 = (unsigned int *)(a1 + 24);
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        uint64_t v17 = v8 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          *(void *)uint64_t v30 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 56);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 48), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 48) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            unint64_t v22 = sub_14D50E4(*(void *)(a1 + 40));
            uint64_t v21 = sub_188CDC8(a1 + 40, (uint64_t)v22);
            uint64_t v18 = *(unsigned __int8 **)v30;
          }
          uint64_t v17 = (char *)sub_14B6E38(a3, v21, v18);
          *(void *)uint64_t v30 = v17;
          if (!v17) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v27 = *(void *)(a1 + 8);
    uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
    if (v27) {
      uint64_t v28 = (uint64_t *)*v28;
    }
    uint64_t v29 = (std::string *)sub_1880F84((void *)(a1 + 64), v28);
    unint64_t v16 = (void *)sub_188C244(v29, *(char **)v30, (uint64_t)a3);
LABEL_42:
    *(void *)uint64_t v30 = v16;
    if (!v16) {
      goto LABEL_50;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      return *(void *)v30;
    }
  }
  if (v9 == 21)
  {
    uint64_t v23 = v8 - 1;
    unsigned int v24 = *v6;
    do
    {
      uint64_t v25 = (uint64_t)(v23 + 1);
      *(void *)uint64_t v30 = v23 + 1;
      int v26 = *(_DWORD *)(v23 + 1);
      if (v24 == *(_DWORD *)(a1 + 28))
      {
        sub_188C80C((unsigned int *)(a1 + 24), v24 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v26;
        uint64_t v25 = *(void *)v30;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v26;
      }
      unsigned int *v6 = ++v24;
      uint64_t v23 = (char *)(v25 + 4);
      *(void *)uint64_t v30 = v25 + 4;
    }
    while (*(void *)a3 > (unint64_t)(v25 + 4) && *v23 == 21);
    goto LABEL_43;
  }
  if (v9 == 18)
  {
    unint64_t v16 = (void *)sub_188C33C(a1 + 24, v8, a3);
    goto LABEL_42;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v30;
    }
    unint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_42;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v30;
  }
LABEL_50:
  *(void *)uint64_t v30 = 0;
  return *(void *)v30;
}

unsigned char *sub_14B8478(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 4 * v6;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      int v9 = *(_DWORD *)(*(void *)(a1 + 32) + v7);
      *uint64_t v4 = 21;
      *(_DWORD *)(v4 + 1) = v9;
      v4 += 5;
      v7 += 4;
    }
    while (v8 != v7);
  }
  int v10 = *(_DWORD *)(a1 + 48);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      uint64_t v4 = sub_14A5174(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_14B863C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 48);
  uint64_t v3 = 5 * *(unsigned int *)(a1 + 24) + v2;
  uint64_t v4 = *(void *)(a1 + 56);
  if (v4) {
    unint64_t v5 = (uint64_t *)(v4 + 8);
  }
  else {
    unint64_t v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_14A5260(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v9 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14B8738(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    unint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_14DECA4((std::string *)((char *)v3 + 40), v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v13 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v13, v15);
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14B8884(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 48);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_14B88BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryEmbeddingMetadata");
}

uint64_t sub_14B88CC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_14A7068(*(void *)(result + 24));
  }
  if ((v2 & 0xE) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_14B8934(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253AA80)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_14D7F38(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_14DE070((void *)(a1 + 72));
  sub_14DDFF0((void *)(a1 + 48));
  sub_14DDFF0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14B8A10(uint64_t a1)
{
  sub_14B8934(a1);

  operator delete();
}

uint64_t sub_14B8A48(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14D8AE8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14D8AE8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_14B88CC(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if (v11) {
    uint64_t result = sub_14B88CC(*(void *)(v1 + 96));
  }
  if ((v11 & 0xFE) != 0)
  {
    *(void *)(v1 + 104) = 0;
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 120) = 0;
  }
  if ((v11 & 0xF00) != 0)
  {
    *(void *)(v1 + 128) = 0;
    *(void *)(v1 + 136) = 0x100000000;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

char *sub_14B8B48(uint64_t a1, char *a2, int32x2_t *a3)
{
  v87 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v87, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v87 + 1;
    unsigned int v9 = *v87;
    if (*v87 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v87, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v87 + 2;
      }
    }
    v87 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_101;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 96);
        if (!v12)
        {
          char v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            char v13 = (void *)*v13;
          }
          sub_14D9424((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 96) = v14;
          uint64_t v8 = v87;
        }
        uint64_t v15 = sub_14B9370(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_108;
      case 2u:
        if (v9 != 16) {
          goto LABEL_101;
        }
        v5 |= 8u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unint64_t v67 = (char *)sub_188C138((uint64_t)v8, v17);
          v87 = v67;
          *(unsigned char *)(a1 + 120) = v68 != 0;
          if (!v67) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_19:
          v87 = v16;
          *(unsigned char *)(a1 + 120) = v17 != 0;
        }
        goto LABEL_109;
      case 3u:
        if (v9 != 24) {
          goto LABEL_101;
        }
        uint64_t v19 = v8 + 1;
        unint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          v87 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
          if (!v87) {
            goto LABEL_143;
          }
          unint64_t v20 = v69;
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          v87 = v19;
        }
        if ((v20 - 1) <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 0x800u;
          *(_DWORD *)(a1 + 140) = v20;
          goto LABEL_109;
        }
        if (*v7) {
          v85 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v85 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v86 = 3;
        goto LABEL_137;
      case 4u:
        if (v9 != 32) {
          goto LABEL_101;
        }
        v5 |= 2u;
        uint64_t v23 = v8 + 1;
        uint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v70 = (char *)sub_188C138((uint64_t)v8, v24);
          v87 = v70;
          *(void *)(a1 + 104) = v71;
          if (!v70) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_31:
          v87 = v23;
          *(void *)(a1 + 104) = v24;
        }
        goto LABEL_109;
      case 5u:
        if (v9 != 40) {
          goto LABEL_101;
        }
        v5 |= 0x10u;
        int v26 = v8 + 1;
        uint64_t v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v72 = (char *)sub_188C138((uint64_t)v8, v27);
          v87 = v72;
          *(unsigned char *)(a1 + 121) = v73 != 0;
          if (!v72) {
            goto LABEL_143;
          }
        }
        else
        {
          int v26 = v8 + 2;
LABEL_36:
          v87 = v26;
          *(unsigned char *)(a1 + 121) = v27 != 0;
        }
        goto LABEL_109;
      case 6u:
        if (v9 != 50) {
          goto LABEL_101;
        }
        uint64_t v29 = v8 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          v87 = v29 + 1;
          BOOL v31 = *(_DWORD **)(a1 + 40);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 32), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 32) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_14D9524(*(void *)(a1 + 24));
            uint64_t v33 = sub_188CDC8(a1 + 24, v34);
            uint64_t v30 = (unsigned __int8 *)v87;
          }
          uint64_t v29 = sub_14B9410(a3, v33, v30);
          v87 = v29;
          if (!v29) {
            goto LABEL_143;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 50) {
            goto LABEL_109;
          }
        }
      case 7u:
        if (v9 != 57) {
          goto LABEL_101;
        }
        v5 |= 4u;
        *(void *)(a1 + 112) = *(void *)v8;
        v87 = v8 + 8;
        goto LABEL_109;
      case 8u:
        if (v9 != 64) {
          goto LABEL_101;
        }
        v5 |= 0x20u;
        uint64_t v35 = v8 + 1;
        uint64_t v36 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v74 = (char *)sub_188C138((uint64_t)v8, v36);
          v87 = v74;
          *(unsigned char *)(a1 + 122) = v75 != 0;
          if (!v74) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v35 = v8 + 2;
LABEL_53:
          v87 = v35;
          *(unsigned char *)(a1 + 122) = v36 != 0;
        }
        goto LABEL_109;
      case 9u:
        if (v9 != 74) {
          goto LABEL_101;
        }
        unsigned int v38 = v8 - 1;
        while (1)
        {
          uint64_t v39 = (unsigned __int8 *)(v38 + 1);
          v87 = v38 + 1;
          uint64_t v40 = *(_DWORD **)(a1 + 64);
          if (v40 && (uint64_t v41 = *(int *)(a1 + 56), (int)v41 < *v40))
          {
            *(_DWORD *)(a1 + 56) = v41 + 1;
            uint64_t v42 = *(void *)&v40[2 * v41 + 2];
          }
          else
          {
            uint64_t v43 = sub_14D9524(*(void *)(a1 + 48));
            uint64_t v42 = sub_188CDC8(a1 + 48, v43);
            uint64_t v39 = (unsigned __int8 *)v87;
          }
          unsigned int v38 = sub_14B9410(a3, v42, v39);
          v87 = v38;
          if (!v38) {
            goto LABEL_143;
          }
          if (*(void *)a3 <= (unint64_t)v38 || *v38 != 74) {
            goto LABEL_109;
          }
        }
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_101;
        }
        uint64_t v44 = v8 - 1;
        while (1)
        {
          int v45 = (unsigned __int8 *)(v44 + 1);
          v87 = v44 + 1;
          unsigned int v46 = *(_DWORD **)(a1 + 88);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 80), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 80) = v47 + 1;
            uint64_t v48 = *(void *)&v46[2 * v47 + 2];
          }
          else
          {
            sub_14D9424(*(void *)(a1 + 72));
            uint64_t v48 = sub_188CDC8(a1 + 72, v49);
            int v45 = (unsigned __int8 *)v87;
          }
          uint64_t v44 = sub_14B9370(a3, v48, v45);
          v87 = v44;
          if (!v44) {
            goto LABEL_143;
          }
          if (*(void *)a3 <= (unint64_t)v44 || *v44 != 82) {
            goto LABEL_109;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_101;
        }
        unsigned int v50 = v8 + 1;
        unint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_78;
        }
        int v51 = *v50;
        int v52 = v20 + (v51 << 7);
        unint64_t v20 = (v52 - 128);
        if (v51 < 0)
        {
          v87 = (char *)sub_188C138((uint64_t)v8, (v52 - 128));
          if (!v87) {
            goto LABEL_143;
          }
          unint64_t v20 = v76;
        }
        else
        {
          unsigned int v50 = v8 + 2;
LABEL_78:
          v87 = v50;
        }
        if (v20 > 2)
        {
          if (*v7) {
            v85 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v85 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v86 = 11;
LABEL_137:
          sub_188C020(v86, v20, v85);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 124) = v20;
        }
        goto LABEL_109;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_101;
        }
        v5 |= 0x40u;
        uint64_t v53 = v8 + 1;
        uint64_t v54 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_85;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v77 = (char *)sub_188C138((uint64_t)v8, v54);
          v87 = v77;
          *(unsigned char *)(a1 + 123) = v78 != 0;
          if (!v77) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v53 = v8 + 2;
LABEL_85:
          v87 = v53;
          *(unsigned char *)(a1 + 123) = v54 != 0;
        }
        goto LABEL_109;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_101;
        }
        v5 |= 0x100u;
        uint64_t v56 = v8 + 1;
        uint64_t v57 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_90;
        }
        int v58 = *v56;
        uint64_t v57 = v57 + (v58 << 7) - 128;
        if (v58 < 0)
        {
          v79 = (char *)sub_188C138((uint64_t)v8, v57);
          v87 = v79;
          *(unsigned char *)(a1 + 128) = v80 != 0;
          if (!v79) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v56 = v8 + 2;
LABEL_90:
          v87 = v56;
          *(unsigned char *)(a1 + 128) = v57 != 0;
        }
        goto LABEL_109;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_101;
        }
        v5 |= 0x200u;
        uint64_t v59 = v8 + 1;
        int v60 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_95;
        }
        int v61 = *v59;
        int v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          int v81 = (char *)sub_188C0D0((uint64_t)v8, v60);
          v87 = v81;
          *(_DWORD *)(a1 + 132) = v82;
          if (!v81) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v59 = v8 + 2;
LABEL_95:
          v87 = v59;
          *(_DWORD *)(a1 + 132) = v60;
        }
        goto LABEL_109;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_101;
        }
        v5 |= 0x400u;
        uint64_t v62 = v8 + 1;
        int v63 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_100;
        }
        int v64 = *v62;
        int v63 = v63 + (v64 << 7) - 128;
        if (v64 < 0)
        {
          v83 = (char *)sub_188C0D0((uint64_t)v8, v63);
          v87 = v83;
          *(_DWORD *)(a1 + 136) = v84;
          if (!v83) {
            goto LABEL_143;
          }
        }
        else
        {
          uint64_t v62 = v8 + 2;
LABEL_100:
          v87 = v62;
          *(_DWORD *)(a1 + 136) = v63;
        }
        goto LABEL_109;
      default:
LABEL_101:
        if (v9) {
          BOOL v65 = (v9 & 7) == 4;
        }
        else {
          BOOL v65 = 1;
        }
        if (!v65)
        {
          if (*v7)
          {
            uint64_t v66 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v87;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v66, v8, a3);
LABEL_108:
          v87 = v15;
          if (!v15) {
            goto LABEL_143;
          }
LABEL_109:
          if (sub_11947B8((uint64_t)a3, &v87, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_143:
        }
          v87 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v87;
    }
  }
}

char *sub_14B9370(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D8028(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_14B9400(int a1)
{
  return (a1 - 1) < 6;
}

char *sub_14B9410(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D8B7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14B94A0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14D8278(v7, (unint64_t)v9, a3);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x800) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 120);
  *uint64_t v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x800) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 140);
    *uint64_t v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(void *)(a1 + 104);
    *uint64_t v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 121);
    *uint64_t v4 = 40;
    v4[1] = v17;
    v4 += 2;
  }
  int v18 = *(_DWORD *)(a1 + 32);
  if (v18)
  {
    for (int i = 0; i != v18; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 50;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        int v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        int v22 = v4 + 2;
      }
      uint64_t v4 = sub_14D8F2C(v20, (unint64_t)v22, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 112);
    *uint64_t v4 = 57;
    *(void *)(v4 + 1) = v23;
    v4 += 9;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v24 = *(unsigned char *)(a1 + 122);
    *uint64_t v4 = 64;
    v4[1] = v24;
    v4 += 2;
  }
  int v25 = *(_DWORD *)(a1 + 56);
  if (v25)
  {
    for (int j = 0; j != v25; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 74;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      uint64_t v4 = sub_14D8F2C(v27, (unint64_t)v29, a3);
    }
  }
  int v30 = *(_DWORD *)(a1 + 80);
  if (v30)
  {
    for (int k = 0; k != v30; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *uint64_t v4 = 82;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      uint64_t v4 = sub_14D8278(v32, (unint64_t)v34, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v35 = *(int *)(a1 + 124);
    *uint64_t v4 = 88;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unint64_t v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v38 = *(unsigned char *)(a1 + 123);
    *uint64_t v4 = 96;
    v4[1] = v38;
    v4 += 2;
    if ((v6 & 0x100) == 0)
    {
LABEL_72:
      if ((v6 & 0x200) == 0) {
        goto LABEL_86;
      }
      goto LABEL_80;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_72;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v39 = *(unsigned char *)(a1 + 128);
  *uint64_t v4 = 104;
  v4[1] = v39;
  v4 += 2;
  if ((v6 & 0x200) != 0)
  {
LABEL_80:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v40 = *(_DWORD *)(a1 + 132);
    *uint64_t v4 = 112;
    v4[1] = v40;
    if (v40 > 0x7F)
    {
      v4[1] = v40 | 0x80;
      unsigned int v41 = v40 >> 7;
      v4[2] = v40 >> 7;
      v4 += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_86:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v43 = *(_DWORD *)(a1 + 136);
    *uint64_t v4 = 120;
    v4[1] = v43;
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unsigned int v44 = v43 >> 7;
      v4[2] = v43 >> 7;
      v4 += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v46 = *(void *)(a1 + 8);
  if ((v46 & 1) == 0) {
    return v4;
  }
  unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v48 + 31) < 0)
  {
    uint64_t v49 = *(void **)(v48 + 8);
    uint64_t v50 = *(void *)(v48 + 16);
  }
  else
  {
    uint64_t v49 = (void *)(v48 + 8);
    LODWORD(v50) = *(unsigned __int8 *)(v48 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v50)
  {
    uint64_t v51 = (int)v50;
    memcpy(v4, v49, (int)v50);
    v4 += v51;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v49, v50, v4);
}

uint64_t sub_14B9B28(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14D9154(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14D9154(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_14D848C(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v22)
  {
    if (v22)
    {
      uint64_t v23 = sub_14D848C(*(void *)(a1 + 96));
      v16 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v22 & 2) != 0) {
      v16 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    uint64_t v24 = v16 + 9;
    if ((v22 & 4) == 0) {
      uint64_t v24 = v16;
    }
    if ((v22 & 8) != 0) {
      v24 += 2;
    }
    if ((v22 & 0x10) != 0) {
      v24 += 2;
    }
    if ((v22 & 0x20) != 0) {
      v24 += 2;
    }
    if ((v22 & 0x40) != 0) {
      uint64_t v16 = v24 + 2;
    }
    else {
      uint64_t v16 = v24;
    }
    if ((v22 & 0x80) != 0)
    {
      int v25 = *(_DWORD *)(a1 + 124);
      uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v25 >= 0) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 11;
      }
      v16 += v27;
    }
  }
  if ((v22 & 0xF00) != 0)
  {
    if ((v22 & 0x100) != 0) {
      v16 += 2;
    }
    if ((v22 & 0x200) != 0)
    {
      v16 += ((9 * (__clz(*(_DWORD *)(a1 + 132) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 0x400) == 0)
      {
LABEL_47:
        if ((v22 & 0x800) == 0) {
          goto LABEL_52;
        }
LABEL_48:
        int v28 = *(_DWORD *)(a1 + 140);
        uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
        if (v28 >= 0) {
          uint64_t v30 = v29;
        }
        else {
          uint64_t v30 = 11;
        }
        v16 += v30;
        goto LABEL_52;
      }
    }
    else if ((v22 & 0x400) == 0)
    {
      goto LABEL_47;
    }
    v16 += ((9 * (__clz(*(_DWORD *)(a1 + 136) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 0x800) == 0) {
      goto LABEL_52;
    }
    goto LABEL_48;
  }
LABEL_52:
  uint64_t v31 = *(void *)(a1 + 8);
  if (v31)
  {
    unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v33 + 31) < 0) {
      uint64_t v34 = *(void *)(v33 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v33 + 31);
    }
    v16 += v34;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_14B9DEC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DED9C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_14DED9C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_14DEE28((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v21 = *(std::string **)(a1 + 96);
      if (!v21)
      {
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (void *)*v23;
        }
        sub_14D9424((uint64_t)v23);
        *(void *)(a1 + 96) = v21;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v24 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v24 = &off_253B418;
      }
      sub_14BA0B0(v21, (uint64_t)v24);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_41;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_42;
    }
LABEL_41:
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_43;
    }
LABEL_42:
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_44;
    }
LABEL_43:
    *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_45;
    }
LABEL_44:
    *(unsigned char *)(a1 + 122) = *(unsigned char *)(a2 + 122);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_21;
      }
LABEL_19:
      *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
      goto LABEL_20;
    }
LABEL_45:
    *(unsigned char *)(a1 + 123) = *(unsigned char *)(a2 + 123);
    if ((v19 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v19 & 0xF00) == 0) {
    goto LABEL_28;
  }
  if ((v19 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    if ((v19 & 0x200) == 0)
    {
LABEL_24:
      if ((v19 & 0x400) == 0) {
        goto LABEL_25;
      }
LABEL_49:
      *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
      if ((v19 & 0x800) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  if ((v19 & 0x400) != 0) {
    goto LABEL_49;
  }
LABEL_25:
  if ((v19 & 0x800) != 0) {
LABEL_26:
  }
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v19;
LABEL_28:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_14BA0B0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_14DB564((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_253B4F8;
      }
      uint64_t result = sub_14A8F98(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_21:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14BA1A8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  while ((int)v2 >= 1)
  {
    uint64_t v4 = v2 - 1;
    char v5 = sub_14D93B0(*(void *)(v3 + 8 * v2));
    uint64_t v2 = v4;
    if ((v5 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  while ((int)v6 >= 1)
  {
    uint64_t v8 = v6 - 1;
    char v9 = sub_14D93B0(*(void *)(v7 + 8 * v6));
    uint64_t v6 = v8;
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  while ((int)v10 >= 1)
  {
    uint64_t v12 = v10 - 1;
    char v13 = sub_14BA264(*(void *)(v11 + 8 * v10));
    uint64_t v10 = v12;
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_14BA264(*(void *)(a1 + 96));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_14BA264(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14BA2C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QuerySpellCorrectionMetadata");
}

void *sub_14BA2D8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122BB0C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BA358(void *a1)
{
  sub_14BA2D8(a1);

  operator delete();
}

uint64_t sub_14BA390(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_146A460(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_14BA40C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          char v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_1478FB4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            char v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_11EAB7C(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_14BA5AC(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_146A644(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14BA6F0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_146A7A4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_14BA7A0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_122BC08((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14BA870(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_146A84C(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_14BA8C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryGeoMetadata");
}

void *sub_14BA8D8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122BB0C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BA958(void *a1)
{
  sub_14BA8D8(a1);

  operator delete();
}

uint64_t sub_14BA990(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_146A460(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  BOOL v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_14BAA0C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    BOOL v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_1478FB4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_11EAB7C(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_14BABAC(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_146A644(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14BACF0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_146A7A4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

BOOL sub_14BADA0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_146A84C(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_14BADF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryPoiMetadata");
}

uint64_t sub_14BAE08(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253AB70)
  {
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_14C2144(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 64);
  sub_14DE0F0((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BAEDC(uint64_t a1)
{
  sub_14BAE08(a1);

  operator delete();
}

uint64_t sub_14BAF14(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A5444(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 64) = 0;
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_14BAFAC(*(void *)(v1 + 80));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_14BAFAC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14C4018(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14C4018(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8)
  {
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
  if ((v8 & 6) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(_DWORD *)(v1 + 88) = 1;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

char *sub_14BB098(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v41 = a2;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    return v41;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v41 + 1;
    unsigned int v8 = *v41;
    if (*v41 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v41, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v41 + 2;
      }
    }
    unsigned int v41 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 == 8)
        {
          uint64_t v12 = v7 - 1;
          while (1)
          {
            unsigned int v41 = v12 + 1;
            unint64_t v13 = v12[1];
            int v14 = v12 + 2;
            if (v12[1] < 0)
            {
              int v15 = *v14;
              int v16 = v13 + (v15 << 7);
              unint64_t v13 = (v16 - 128);
              if (v15 < 0)
              {
                unsigned int v41 = (char *)sub_188C138((uint64_t)(v12 + 1), (v16 - 128));
                if (!v41) {
                  return 0;
                }
                unint64_t v13 = v19;
                goto LABEL_15;
              }
              int v14 = v12 + 3;
            }
            unsigned int v41 = v14;
LABEL_15:
            if ((v13 - 1) > 0x1B)
            {
              if (*v6) {
                uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v13, v20);
            }
            else
            {
              uint64_t v17 = *(unsigned int *)(a1 + 24);
              if (v17 == *(_DWORD *)(a1 + 28))
              {
                int v18 = v17 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v17 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v17) = v13;
                int v18 = v17 + 1;
              }
              *(_DWORD *)(a1 + 24) = v18;
            }
            uint64_t v12 = v41;
            if (*(void *)a3 <= (unint64_t)v41 || *v41 != 8) {
              goto LABEL_78;
            }
          }
        }
        if (v8 != 10) {
          goto LABEL_70;
        }
        *(void *)&long long v42 = a1 + 24;
        *((void *)&v42 + 1) = sub_14A48F8;
        uint64_t v43 = a1 + 8;
        int v44 = 1;
        goto LABEL_69;
      case 2u:
        if (v8 != 18) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 80);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_14D696C((uint64_t)v22);
          *(void *)(a1 + 80) = v21;
          uint64_t v7 = v41;
        }
        uint64_t v23 = (char *)sub_14BB530(a3, v21, (unsigned __int8 *)v7);
        goto LABEL_77;
      case 3u:
        if (v8 != 26) {
          goto LABEL_70;
        }
        uint64_t v24 = v7 - 1;
        while (1)
        {
          int v25 = (unsigned __int8 *)(v24 + 1);
          unsigned int v41 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 56);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 48), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 48) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_14D5168(*(void *)(a1 + 40));
            uint64_t v28 = sub_188CDC8(a1 + 40, (uint64_t)v29);
            int v25 = (unsigned __int8 *)v41;
          }
          uint64_t v24 = (char *)sub_14BB5C0(a3, v28, v25);
          unsigned int v41 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 26) {
            goto LABEL_78;
          }
        }
      case 4u:
        if (v8 == 32)
        {
          uint64_t v30 = v7 - 1;
          while (1)
          {
            unsigned int v41 = v30 + 1;
            unint64_t v31 = v30[1];
            uint64_t v32 = v30 + 2;
            if (v30[1] < 0)
            {
              int v33 = *v32;
              int v34 = v31 + (v33 << 7);
              unint64_t v31 = (v34 - 128);
              if (v33 < 0)
              {
                unsigned int v41 = (char *)sub_188C138((uint64_t)(v30 + 1), (v34 - 128));
                if (!v41) {
                  return 0;
                }
                unint64_t v31 = v37;
                goto LABEL_51;
              }
              uint64_t v32 = v30 + 3;
            }
            unsigned int v41 = v32;
LABEL_51:
            if ((v31 - 1) > 5)
            {
              if (*v6) {
                char v38 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                char v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v31, v38);
            }
            else
            {
              uint64_t v35 = *(unsigned int *)(a1 + 64);
              if (v35 == *(_DWORD *)(a1 + 68))
              {
                int v36 = v35 + 1;
                sub_188C80C((unsigned int *)(a1 + 64), v35 + 1);
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v35) = v31;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v35) = v31;
                int v36 = v35 + 1;
              }
              *(_DWORD *)(a1 + 64) = v36;
            }
            uint64_t v30 = v41;
            if (*(void *)a3 <= (unint64_t)v41 || *v41 != 32) {
              goto LABEL_78;
            }
          }
        }
        if (v8 == 34)
        {
          *(void *)&long long v42 = a1 + 64;
          *((void *)&v42 + 1) = sub_14A48E8;
          uint64_t v43 = a1 + 8;
          int v44 = 4;
LABEL_69:
          uint64_t v23 = sub_1112E88((uint64_t)a3, v7, &v42);
LABEL_77:
          unsigned int v41 = v23;
          if (!v23) {
            return 0;
          }
LABEL_78:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            return v41;
          }
          continue;
        }
LABEL_70:
        if (v8) {
          BOOL v39 = (v8 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v6)
          {
            unsigned int v40 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v41;
          }
          uint64_t v23 = (char *)sub_1885AC0(v8, v40, v7, a3);
          goto LABEL_77;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v41;
      default:
        goto LABEL_70;
    }
  }
}

uint64_t sub_14BB530(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C2234(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14BB5C0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A548C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14BB650(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 80);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      unint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      unint64_t v13 = __dst + 2;
    }
    __dst = sub_14C2664(v11, v13, a3);
  }
  int v14 = *(_DWORD *)(a1 + 48);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      __dst[1] = v17;
      if (v17 > 0x7F) {
        int v18 = sub_188A9CC(v17, __dst + 1);
      }
      else {
        int v18 = __dst + 2;
      }
      __dst = sub_14A56E0(v16, v18, a3);
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 64);
  if ((int)v19 >= 1)
  {
    for (uint64_t k = 0; k != v19; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v21 = *(int *)(*(void *)(a1 + 72) + 4 * k);
      *__dst = 32;
      __dst[1] = v21;
      if (v21 > 0x7F)
      {
        __dst[1] = v21 | 0x80;
        unint64_t v22 = v21 >> 7;
        __dst[2] = v21 >> 7;
        __dst += 3;
        if (v21 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v23 = v22 >> 14;
            v22 >>= 7;
            *__dst++ = v22;
          }
          while (v23);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return __dst;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(__dst, v27, (int)v28);
    __dst += v29;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, __dst);
}

uint64_t sub_14BB934(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A5854(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 64);
  if (v15)
  {
    int v16 = 0;
    uint64_t v17 = 0;
    do
    {
      int v18 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v16);
      if (v18 < 0) {
        uint64_t v19 = 10;
      }
      else {
        uint64_t v19 = (9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6;
      }
      v17 += v19;
      ++v16;
    }
    while (v15 != v16);
  }
  else
  {
    uint64_t v17 = 0;
  }
  uint64_t v20 = v9 + v15 + v17;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v21 = sub_14C2904(*(void *)(a1 + 80));
    v20 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v20 += v25;
  }
  *(_DWORD *)(a1 + 20) = v20;
  return v20;
}

std::string *sub_14BBAC8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_14DEEB4((std::string *)((char *)v3 + 40), v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    uint64_t v14 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v14 + v13);
    std::string::pointer data = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&data[4 * v14], *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v16 = *(uint64_t (****)())(a2 + 80);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v17 = (std::string *)v3[3].__r_.__value_.__l.__size_;
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = (std::string *)sub_14D696C((uint64_t)v19);
      v3[3].__r_.__value_.__l.__size_ = (std::string::size_type)v17;
      int v16 = *(uint64_t (****)())(a2 + 80);
    }
    if (v16) {
      uint64_t v20 = v16;
    }
    else {
      uint64_t v20 = &off_253AD88;
    }
    uint64_t result = sub_14BBC74(v17, (uint64_t)v20);
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_14BBC74(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14DF1DC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_14DF1DC((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    int v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      int v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      std::string::size_type v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        std::string::size_type v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14BBE18(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 48);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 56) + 8 * v1--);
    if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 80);
  BOOL result = sub_14C2A94(v4 + 24);
  if (result)
  {
    BOOL result = sub_14C2A94(v4 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_14BBE84(uint64_t a1)
{
  BOOL result = sub_14C2A94(a1 + 24);
  if (result)
  {
    return sub_14C2A94(a1 + 48);
  }
  return result;
}

void *sub_14BBED0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryGeoTagMetadata");
}

uint64_t sub_14BBEE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BBFAC(uint64_t a1)
{
  sub_14BBEE0(a1);

  operator delete();
}

uint64_t sub_14BBFE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14BC0A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v21 + 1);
    unsigned int v9 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v21, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 24);
        goto LABEL_23;
      case 2u:
        if (v9 != 21) {
          goto LABEL_24;
        }
        v5 |= 8u;
        *(_DWORD *)(a1 + 48) = *(_DWORD *)v8;
        *(void *)uint64_t v21 = v8 + 4;
        goto LABEL_32;
      case 3u:
        if (v9 != 26) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 32);
        goto LABEL_23;
      case 4u:
        if (v9 != 34) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 40);
LABEL_23:
        uint64_t v17 = (std::string *)sub_1880F84(v14, v13);
        std::string::size_type v18 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
        goto LABEL_31;
      default:
LABEL_24:
        if (v9) {
          BOOL v19 = (v9 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v7)
          {
            uint64_t v20 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v21;
          }
          std::string::size_type v18 = sub_1885AC0(v9, v20, v8, a3);
LABEL_31:
          *(void *)uint64_t v21 = v18;
          if (!v18) {
            goto LABEL_37;
          }
LABEL_32:
          if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_37:
        }
          *(void *)uint64_t v21 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v21;
    }
  }
}

char *sub_14BC2E8(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 48);
  *unint64_t v4 = 21;
  *(_DWORD *)(v4 + 1) = v9;
  v4 += 5;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_5:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14BC43C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 5;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_19:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14BC568(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14BC698()
{
  return 1;
}

void *sub_14BC6A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryNeuralRewriteMetadata");
}

uint64_t sub_14BC6B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14DDEF0((void *)(a1 + 48));
  sub_14DE170((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BC768(uint64_t a1)
{
  sub_14BC6B0(a1);

  operator delete();
}

uint64_t sub_14BC7A0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A49DC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14A4F50(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8)
  {
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
  if ((v8 & 6) != 0) {
    *(void *)(v1 + 80) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_14BC884(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v36 + 2);
      }
    }
    *(void *)int v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_42;
        }
        v5 |= 2u;
        *(_DWORD *)(a1 + 80) = *(_DWORD *)v8;
        *(void *)int v36 = v8 + 4;
        goto LABEL_50;
      case 2u:
        if (v9 != 18) {
          goto LABEL_42;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)int v36 = v12 + 1;
          std::string::size_type v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14D506C(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(unsigned __int8 **)v36;
          }
          uint64_t v12 = sub_14BCC20(a3, v16, v13);
          *(void *)int v36 = v12;
          if (!v12) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_50;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_42;
        }
        std::string::size_type v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)int v36 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v36) {
            goto LABEL_61;
          }
          unint64_t v19 = v34;
        }
        else
        {
          std::string::size_type v18 = v8 + 2;
LABEL_25:
          *(void *)int v36 = v18;
        }
        if (v19 > 3)
        {
          if (*v7) {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 84) = v19;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 34) {
          goto LABEL_42;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          unint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)int v36 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_14D50E4(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, (uint64_t)v27);
            unint64_t v23 = *(unsigned __int8 **)v36;
          }
          uint64_t v22 = (char *)sub_14B6E38(a3, v26, v23);
          *(void *)int v36 = v22;
          if (!v22) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_50;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 72), v29);
        unint64_t v31 = (void *)sub_188C244(v30, *(char **)v36, (uint64_t)a3);
        goto LABEL_49;
      default:
LABEL_42:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v36;
          }
          unint64_t v31 = sub_1885AC0(v9, v33, v8, a3);
LABEL_49:
          *(void *)int v36 = v31;
          if (!v31) {
            goto LABEL_61;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          *(void *)int v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

char *sub_14BCC20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A4A00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14BCCB0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 80);
    *uint64_t v4 = 13;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v11 = *(_DWORD *)(v10 + 20);
      v4[1] = v11;
      if (v11 > 0x7F) {
        uint64_t v12 = sub_188A9CC(v11, v4 + 1);
      }
      else {
        uint64_t v12 = v4 + 2;
      }
      uint64_t v4 = sub_14A4BAC(v10, (unint64_t)v12, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 84);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_14A5174(v18, v20, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_14BCF50(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A4D58(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14A5260(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      v9 += 5;
    }
    if ((v15 & 4) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 84);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v9 += v21;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_14BD0E0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_14DEF40(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_14DECA4(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      unint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14BD284(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v4 = *(unsigned int *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  do
  {
    BOOL result = (int)v4 < 1;
    if ((int)v4 < 1) {
      break;
    }
    uint64_t v6 = *(void *)(v5 + 8 * v4--);
  }
  while ((~*(_DWORD *)(v6 + 16) & 3) == 0);
  return result;
}

void *sub_14BD2E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.Synonym");
}

void *sub_14BD2F4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DE1F0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BD374(void *a1)
{
  sub_14BD2F4(a1);

  operator delete();
}

uint64_t sub_14BD3AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_14BC7A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_14BD428(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14D63C8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_14BD5C8(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_14BD5C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BC884(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14BD658(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_14BCCB0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14BD79C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14BCF50(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_14BD84C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_14DEFCC((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14BD91C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  do
  {
    int v3 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = v1 - 1;
    BOOL v5 = sub_14BD284(*(void *)(v2 + 8 * v1));
    uint64_t v1 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_14BD970@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.TokenSynonymMetadata");
}

uint64_t sub_14BD980(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  BOOL v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 120));
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  sub_14DE170((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BDA90(uint64_t a1)
{
  sub_14BD980(a1);

  operator delete();
}

uint64_t sub_14BDAC8(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v3 = *(unsigned int *)(a1 + 80);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_14A49DC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x1F) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unint64_t v8 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_20;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_24:
      unint64_t v10 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v6 & 0x10) == 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v6 & 0x10) == 0) {
          goto LABEL_31;
        }
      }
      goto LABEL_28;
    }
    unint64_t v7 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    unint64_t v9 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_24;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_31;
    }
LABEL_28:
    unint64_t v11 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
    }
  }
LABEL_31:
  if ((v6 & 0xE0) != 0)
  {
    *(void *)(a1 + 136) = 0;
    *(void *)(a1 + 144) = 0;
  }
  if ((v6 & 0x1F00) != 0) {
    *(void *)(a1 + 152) = 0;
  }
  char v13 = *(unsigned char *)(a1 + 8);
  uint64_t v12 = a1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_14BDC7C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v81 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 48);
  uint64_t v80 = (uint64_t *)(a1 + 8);
  unint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v9 = (char *)(*(void *)v81 + 1);
    unsigned int v10 = **(unsigned char **)v81;
    if ((char)**(unsigned char **)v81 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unint64_t v9 = (char *)sub_188C180(*(uint64_t *)v81, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (char *)(*(void *)v81 + 2);
      }
    }
    *(void *)int v81 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_108;
        }
        v5 |= 0x20u;
        char v13 = v9 + 1;
        uint64_t v14 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          char v13 = v9 + 2;
LABEL_13:
          *(void *)int v81 = v13;
          *(void *)(a1 + 136) = v14;
          goto LABEL_96;
        }
        uint64_t v66 = sub_188C138((uint64_t)v9, v14);
        *(void *)int v81 = v66;
        *(void *)(a1 + 136) = v67;
        if (v66) {
          goto LABEL_96;
        }
        goto LABEL_141;
      case 2u:
        if (v10 != 18) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 96);
        goto LABEL_94;
      case 3u:
        if (v10 != 26) {
          goto LABEL_108;
        }
        int v19 = v9 - 1;
        while (1)
        {
          uint64_t v20 = (char *)(v19 + 1);
          *(void *)int v81 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            unint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v25 = v24;
            v25[1] = sub_3A6EDC;
            *unint64_t v24 = 0;
            v24[1] = 0;
            int v24[2] = 0;
            unint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
            uint64_t v20 = *(char **)v81;
          }
          int v19 = sub_188C244(v23, v20, (uint64_t)a3);
          *(void *)int v81 = v19;
          if (!v19) {
            goto LABEL_141;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_96;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 104);
        goto LABEL_94;
      case 5u:
        if (v10 != 42) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 112);
        goto LABEL_94;
      case 6u:
        if (v10 != 50) {
          goto LABEL_108;
        }
        uint64_t v28 = v9 - 1;
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)int v81 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 64);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 56), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 56) = v31 + 1;
            BOOL v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unint64_t v34 = v33;
            v34[1] = sub_3A6EDC;
            void *v33 = 0;
            v33[1] = 0;
            int v33[2] = 0;
            BOOL v32 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v33);
            uint64_t v29 = *(char **)v81;
          }
          uint64_t v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)int v81 = v28;
          if (!v28) {
            goto LABEL_141;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 50) {
            goto LABEL_96;
          }
        }
      case 7u:
        if (v10 != 61) {
          goto LABEL_108;
        }
        v5 |= 0x40u;
        *(_DWORD *)(a1 + 144) = *(_DWORD *)v9;
        *(void *)int v81 = v9 + 4;
        goto LABEL_96;
      case 8u:
        if (v10 != 64) {
          goto LABEL_108;
        }
        uint64_t v35 = v9 + 1;
        unint64_t v36 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v37 = *v35;
        int v38 = v36 + (v37 << 7);
        unint64_t v36 = (v38 - 128);
        if (v37 < 0)
        {
          *(void *)int v81 = sub_188C138((uint64_t)v9, (v38 - 128));
          if (!*(void *)v81) {
            goto LABEL_141;
          }
          unint64_t v36 = v68;
        }
        else
        {
          uint64_t v35 = v9 + 2;
LABEL_56:
          *(void *)int v81 = v35;
        }
        if (v36 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 148) = v36;
          goto LABEL_96;
        }
        if (*v80) {
          uint64_t v78 = (std::string *)((*v80 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v78 = (std::string *)sub_188DBD8(v80);
        }
        int v79 = 8;
        goto LABEL_135;
      case 9u:
        if (v10 != 72) {
          goto LABEL_108;
        }
        v5 |= 0x200u;
        BOOL v39 = v9 + 1;
        uint64_t v40 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v69 = sub_188C138((uint64_t)v9, v40);
          *(void *)int v81 = v69;
          *(unsigned char *)(a1 + 156) = v70 != 0;
          if (!v69) {
            goto LABEL_141;
          }
        }
        else
        {
          BOOL v39 = v9 + 2;
LABEL_63:
          *(void *)int v81 = v39;
          *(unsigned char *)(a1 + 156) = v40 != 0;
        }
        goto LABEL_96;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_108;
        }
        v5 |= 0x400u;
        long long v42 = v9 + 1;
        uint64_t v43 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v71 = sub_188C138((uint64_t)v9, v43);
          *(void *)int v81 = v71;
          *(unsigned char *)(a1 + 157) = v72 != 0;
          if (!v71) {
            goto LABEL_141;
          }
        }
        else
        {
          long long v42 = v9 + 2;
LABEL_68:
          *(void *)int v81 = v42;
          *(unsigned char *)(a1 + 157) = v43 != 0;
        }
        goto LABEL_96;
      case 0xBu:
        if (v10 != 88) {
          goto LABEL_108;
        }
        unsigned int v45 = v9 + 1;
        unint64_t v36 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v46 = *v45;
        int v47 = v36 + (v46 << 7);
        unint64_t v36 = (v47 - 128);
        if (v46 < 0)
        {
          *(void *)int v81 = sub_188C138((uint64_t)v9, (v47 - 128));
          if (!*(void *)v81) {
            goto LABEL_141;
          }
          unint64_t v36 = v73;
        }
        else
        {
          unsigned int v45 = v9 + 2;
LABEL_73:
          *(void *)int v81 = v45;
        }
        if (v36 > 3)
        {
          if (*v80) {
            uint64_t v78 = (std::string *)((*v80 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v78 = (std::string *)sub_188DBD8(v80);
          }
          int v79 = 11;
LABEL_135:
          sub_188C020(v79, v36, v78);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 152) = v36;
        }
        goto LABEL_96;
      case 0xCu:
        if (v10 != 96) {
          goto LABEL_108;
        }
        v5 |= 0x800u;
        unint64_t v48 = v9 + 1;
        uint64_t v49 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_80;
        }
        int v50 = *v48;
        uint64_t v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v74 = sub_188C138((uint64_t)v9, v49);
          *(void *)int v81 = v74;
          *(unsigned char *)(a1 + 158) = v75 != 0;
          if (!v74) {
            goto LABEL_141;
          }
        }
        else
        {
          unint64_t v48 = v9 + 2;
LABEL_80:
          *(void *)int v81 = v48;
          *(unsigned char *)(a1 + 158) = v49 != 0;
        }
        goto LABEL_96;
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_108;
        }
        v5 |= 0x1000u;
        uint64_t v51 = v9 + 1;
        uint64_t v52 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_85;
        }
        int v53 = *v51;
        uint64_t v52 = v52 + (v53 << 7) - 128;
        if (v53 < 0)
        {
          uint64_t v76 = sub_188C138((uint64_t)v9, v52);
          *(void *)int v81 = v76;
          *(unsigned char *)(a1 + 159) = v77 != 0;
          if (!v76) {
            goto LABEL_141;
          }
        }
        else
        {
          uint64_t v51 = v9 + 2;
LABEL_85:
          *(void *)int v81 = v51;
          *(unsigned char *)(a1 + 159) = v52 != 0;
        }
        goto LABEL_96;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v54 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
        if (v54) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 120);
        goto LABEL_94;
      case 0xFu:
        if (v10 != 122) {
          goto LABEL_108;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v55 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v55 & 0xFFFFFFFFFFFFFFFCLL);
        if (v55) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 128);
LABEL_94:
        uint64_t v56 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v57 = (void *)sub_188C244(v56, *(char **)v81, (uint64_t)a3);
        goto LABEL_95;
      case 0x10u:
        if (v10 != 130) {
          goto LABEL_108;
        }
        int v58 = v9 - 2;
        while (1)
        {
          uint64_t v59 = (unsigned __int8 *)(v58 + 2);
          *(void *)int v81 = v58 + 2;
          int v60 = *(_DWORD **)(a1 + 88);
          if (v60 && (uint64_t v61 = *(int *)(a1 + 80), (int)v61 < *v60))
          {
            *(_DWORD *)(a1 + 80) = v61 + 1;
            uint64_t v62 = *(void *)&v60[2 * v61 + 2];
          }
          else
          {
            int v63 = sub_14D506C(*(void *)(a1 + 72));
            uint64_t v62 = sub_188CDC8(a1 + 72, (uint64_t)v63);
            uint64_t v59 = *(unsigned __int8 **)v81;
          }
          int v58 = sub_14BCC20(a3, v62, v59);
          *(void *)int v81 = v58;
          if (!v58) {
            goto LABEL_141;
          }
          if (*(void *)a3 <= (unint64_t)v58 || *(_WORD *)v58 != 386) {
            goto LABEL_96;
          }
        }
      default:
LABEL_108:
        if (v10) {
          BOOL v64 = (v10 & 7) == 4;
        }
        else {
          BOOL v64 = 1;
        }
        if (!v64)
        {
          if (*v80)
          {
            BOOL v65 = (std::string *)((*v80 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v65 = (std::string *)sub_188DBD8(v80);
            unint64_t v9 = *(char **)v81;
          }
          uint64_t v57 = sub_1885AC0(v10, v65, v9, a3);
LABEL_95:
          *(void *)int v81 = v57;
          if (!v57) {
            goto LABEL_141;
          }
LABEL_96:
          if (sub_11947B8((uint64_t)a3, (char **)v81, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_141:
        }
          *(void *)int v81 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v81;
    }
  }
}

char *sub_14BE504(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 136);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 32);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 8 * v10;
    do
    {
      char v13 = *(void **)(*(void *)(a1 + 40) + v11 + 8);
      if (*((char *)v13 + 23) < 0)
      {
        int64_t v14 = v13[1];
        if (v14 > 127) {
          goto LABEL_21;
        }
      }
      else
      {
        int64_t v14 = *((unsigned __int8 *)v13 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v14)
      {
        *uint64_t v4 = 26;
        v4[1] = v14;
        if (*((char *)v13 + 23) < 0) {
          char v13 = (void *)*v13;
        }
        int v15 = v4 + 2;
        memcpy(v15, v13, v14);
        uint64_t v4 = &v15[v14];
        goto LABEL_19;
      }
LABEL_21:
      uint64_t v4 = (char *)sub_188A868(a3, 3, (uint64_t)v13, v4);
LABEL_19:
      v11 += 8;
    }
    while (v12 != v11);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 56);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      int v19 = *(void **)(*(void *)(a1 + 64) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_37;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        *uint64_t v4 = 50;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          int v19 = (void *)*v19;
        }
        uint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_35;
      }
LABEL_37:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v19, v4);
LABEL_35:
      v17 += 8;
    }
    while (v18 != v17);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v22 = *(_DWORD *)(a1 + 144);
    *uint64_t v4 = 61;
    *(_DWORD *)(v4 + 1) = v22;
    v4 += 5;
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(int *)(a1 + 148);
    *uint64_t v4 = 64;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v26 = *(unsigned char *)(a1 + 156);
    *uint64_t v4 = 72;
    v4[1] = v26;
    v4 += 2;
    if ((v6 & 0x400) == 0)
    {
LABEL_51:
      if ((v6 & 0x100) == 0) {
        goto LABEL_65;
      }
      goto LABEL_59;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_51;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v27 = *(unsigned char *)(a1 + 157);
  *uint64_t v4 = 80;
  v4[1] = v27;
  v4 += 2;
  if ((v6 & 0x100) != 0)
  {
LABEL_59:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(int *)(a1 + 152);
    *uint64_t v4 = 88;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_65:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v38 = *(unsigned char *)(a1 + 158);
    *uint64_t v4 = 96;
    v4[1] = v38;
    v4 += 2;
    if ((v6 & 0x1000) == 0)
    {
LABEL_67:
      if ((v6 & 8) == 0) {
        goto LABEL_68;
      }
      goto LABEL_86;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_67;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v39 = *(unsigned char *)(a1 + 159);
  *uint64_t v4 = 104;
  v4[1] = v39;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_68:
    if ((v6 & 0x10) == 0) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
LABEL_86:
  uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) != 0) {
LABEL_69:
  }
    uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_70:
  int v31 = *(_DWORD *)(a1 + 80);
  if (v31)
  {
    for (int i = 0; i != v31; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 88) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 386;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[2] = v34;
      if (v34 > 0x7F) {
        uint64_t v35 = sub_188A9CC(v34, v4 + 2);
      }
      else {
        uint64_t v35 = v4 + 3;
      }
      uint64_t v4 = sub_14A4BAC(v33, (unint64_t)v35, a3);
    }
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v40 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    int v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    int v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(v4, v41, (int)v42);
    v4 += v43;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v41, v42, v4);
}

uint64_t sub_14BEAE4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 80);
  uint64_t v15 = v9 + 2 * v14;
  uint64_t v16 = *(void *)(a1 + 88);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_14A4D58(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v21)
  {
    if (v21)
    {
      unint64_t v31 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
      uint64_t v33 = *(void *)(v31 + 8);
      if ((v32 & 0x80u) == 0) {
        uint64_t v33 = v32;
      }
      v15 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v21 & 2) == 0)
      {
LABEL_22:
        if ((v21 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_57;
      }
    }
    else if ((v21 & 2) == 0)
    {
      goto LABEL_22;
    }
    unint64_t v34 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
    uint64_t v36 = *(void *)(v34 + 8);
    if ((v35 & 0x80u) == 0) {
      uint64_t v36 = v35;
    }
    v15 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 4) == 0)
    {
LABEL_23:
      if ((v21 & 8) == 0) {
        goto LABEL_24;
      }
      goto LABEL_60;
    }
LABEL_57:
    unint64_t v37 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
    uint64_t v39 = *(void *)(v37 + 8);
    if ((v38 & 0x80u) == 0) {
      uint64_t v39 = v38;
    }
    v15 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 8) == 0)
    {
LABEL_24:
      if ((v21 & 0x10) == 0) {
        goto LABEL_25;
      }
      goto LABEL_63;
    }
LABEL_60:
    unint64_t v40 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
    uint64_t v42 = *(void *)(v40 + 8);
    if ((v41 & 0x80u) == 0) {
      uint64_t v42 = v41;
    }
    v15 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 0x10) == 0)
    {
LABEL_25:
      if ((v21 & 0x20) == 0)
      {
LABEL_27:
        if ((v21 & 0x40) != 0) {
          v15 += 5;
        }
        if ((v21 & 0x80) != 0)
        {
          int v22 = *(_DWORD *)(a1 + 148);
          uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
          if (v22 >= 0) {
            uint64_t v24 = v23;
          }
          else {
            uint64_t v24 = 11;
          }
          v15 += v24;
        }
        goto LABEL_34;
      }
LABEL_26:
      v15 += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
      goto LABEL_27;
    }
LABEL_63:
    unint64_t v43 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
    uint64_t v45 = *(void *)(v43 + 8);
    if ((v44 & 0x80u) == 0) {
      uint64_t v45 = v44;
    }
    v15 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v21 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_34:
  if ((v21 & 0x1F00) != 0)
  {
    if ((v21 & 0x100) != 0)
    {
      int v25 = *(_DWORD *)(a1 + 152);
      uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v25 >= 0) {
        uint64_t v27 = v26;
      }
      else {
        uint64_t v27 = 11;
      }
      v15 += v27;
    }
    uint64_t v28 = v15 + 2;
    if ((v21 & 0x200) == 0) {
      uint64_t v28 = v15;
    }
    if ((v21 & 0x400) != 0) {
      v28 += 2;
    }
    if ((v21 & 0x800) != 0) {
      v28 += 2;
    }
    if ((v21 & 0x1000) != 0) {
      uint64_t v15 = v28 + 2;
    }
    else {
      uint64_t v15 = v28;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if (v29)
  {
    unint64_t v46 = v29 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v46 + 31) < 0) {
      uint64_t v47 = *(void *)(v46 + 16);
    }
    else {
      uint64_t v47 = *(unsigned __int8 *)(v46 + 31);
    }
    v15 += v47;
  }
  *(_DWORD *)(a1 + 20) = v15;
  return v15;
}

std::string *sub_14BEE90(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_14DEF40(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v19)
  {
    if (v19)
    {
      int v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v23 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[4], v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_39;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    uint64_t v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_42;
    }
LABEL_39:
    uint64_t v27 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v28 = v3->__r_.__value_.__l.__size_;
    uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v27, v29);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_45;
    }
LABEL_42:
    unint64_t v30 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v31 = v3->__r_.__value_.__l.__size_;
    uint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (uint64_t *)*v32;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[5], v30, v32);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_48;
    }
LABEL_45:
    uint64_t v33 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v34 = v3->__r_.__value_.__l.__size_;
    uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
    if (v34) {
      uint64_t v35 = (uint64_t *)*v35;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__l.__size_, v33, v35);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_49;
    }
LABEL_48:
    v3[5].__r_.__value_.__r.__words[2] = *(void *)(a2 + 136);
    if ((v19 & 0x40) == 0)
    {
LABEL_18:
      if ((v19 & 0x80) == 0)
      {
LABEL_20:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v19;
        goto LABEL_21;
      }
LABEL_19:
      HIDWORD(v3[6].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 148);
      goto LABEL_20;
    }
LABEL_49:
    LODWORD(v3[6].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 144);
    if ((v19 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  if ((v19 & 0x1F00) == 0) {
    goto LABEL_29;
  }
  if ((v19 & 0x100) != 0)
  {
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 152);
    if ((v19 & 0x200) == 0)
    {
LABEL_24:
      if ((v19 & 0x400) == 0) {
        goto LABEL_25;
      }
      goto LABEL_53;
    }
  }
  else if ((v19 & 0x200) == 0)
  {
    goto LABEL_24;
  }
  v3[6].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 156);
  if ((v19 & 0x400) == 0)
  {
LABEL_25:
    if ((v19 & 0x800) == 0) {
      goto LABEL_26;
    }
LABEL_54:
    v3[6].__r_.__value_.__s.__data_[14] = *(unsigned char *)(a2 + 158);
    if ((v19 & 0x1000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_53:
  v3[6].__r_.__value_.__s.__data_[13] = *(unsigned char *)(a2 + 157);
  if ((v19 & 0x800) != 0) {
    goto LABEL_54;
  }
LABEL_26:
  if ((v19 & 0x1000) != 0) {
LABEL_27:
  }
    v3[6].__r_.__value_.__s.__data_[15] = *(unsigned char *)(a2 + 159);
LABEL_28:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v19;
LABEL_29:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14BF1EC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 80);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 88) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_14BF224@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QuerySynonymMetadata");
}

uint64_t sub_14BF234(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BF2D4(uint64_t a1)
{
  sub_14BF234(a1);

  operator delete();
}

uint64_t sub_14BF30C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14BF354(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)int v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)int v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)int v19 = v7 + 4;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v19;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)int v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_14BF4F0(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    *int v4 = 21;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    uint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    uint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14BF5F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14BF694()
{
  return 1;
}

void *sub_14BF69C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.TokenImportance");
}

void *sub_14BF6AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DE270(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BF72C(void *a1)
{
  sub_14BF6AC(a1);

  operator delete();
}

uint64_t sub_14BF764(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14BF30C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_14BF7E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14D65DC(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_14BF980(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_14BF980(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BF354(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14BFA10(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_14BF4F0(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14BFB54(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14BF5F4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_14BFC04(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_14DF058((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14BFCD4()
{
  return 1;
}

void *sub_14BFCDC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryTokenImportanceMetadata");
}

uint64_t sub_14BFCEC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14BFD8C(uint64_t a1)
{
  sub_14BFCEC(a1);

  operator delete();
}

uint64_t sub_14BFDC4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14BFE0C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)int v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)int v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)int v19 = v7 + 4;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v19;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)int v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_14BFFA8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    *int v4 = 21;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    uint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    uint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14C00AC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14C014C()
{
  return 1;
}

void *sub_14C0154@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.PreferredCategory");
}

uint64_t sub_14C0164(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253AD00)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_14AB900(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_14DE2F0((void *)(a1 + 48));
  sub_14DDD70((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C0234(uint64_t a1)
{
  sub_14C0164(a1);

  operator delete();
}

uint64_t sub_14C026C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14AADE4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14BFDC4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_14AAE80(*(void *)(v1 + 72));
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(void *)(v8 + 72) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_14C0328(uint64_t a1, char *a2, int32x2_t *a3)
{
  std::string::size_type v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    std::string::size_type v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_40;
        }
        v5 |= 2u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          std::string::size_type v34 = v12;
          *(void *)(a1 + 80) = v13;
          goto LABEL_48;
        }
        uint64_t v32 = (char *)sub_188C138((uint64_t)v8, v13);
        std::string::size_type v34 = v32;
        *(void *)(a1 + 80) = v33;
        if (v32) {
          goto LABEL_48;
        }
        goto LABEL_55;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          std::string::size_type v34 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_14D5510(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = (unsigned __int8 *)v34;
          }
          uint64_t v15 = (char *)sub_14A9E00(a3, v19, v16);
          std::string::size_type v34 = v15;
          if (!v15) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_48;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 72);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_14D55B8((uint64_t)v22);
          *(void *)(a1 + 72) = v21;
          uint64_t v8 = v34;
        }
        uint64_t v23 = (char *)sub_14AB274(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_47;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        uint64_t v24 = v8 - 1;
        while (1)
        {
          std::string::size_type v25 = (unsigned __int8 *)(v24 + 1);
          std::string::size_type v34 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_14D6704(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, v29);
            std::string::size_type v25 = (unsigned __int8 *)v34;
          }
          uint64_t v24 = (char *)sub_14C0664(a3, v28, v25);
          std::string::size_type v34 = v24;
          if (!v24) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_48;
          }
        }
      default:
LABEL_40:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            std::string::size_type v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            std::string::size_type v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v34;
          }
          uint64_t v23 = (char *)sub_1885AC0(v9, v31, v8, a3);
LABEL_47:
          std::string::size_type v34 = v23;
          if (!v23) {
            goto LABEL_55;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          std::string::size_type v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

uint64_t sub_14C0664(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BFE0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14C06F4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_14AB304(v12, (unint64_t)v14, a3);
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 72);
    *uint64_t v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = sub_14ABBDC(v15, (unint64_t)v17, a3);
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        int v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        int v22 = v4 + 2;
      }
      uint64_t v4 = sub_14BFFA8(v20, v22, a3);
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_14C09A0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14AB564(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14C00AC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      uint64_t v16 = sub_14ABD5C(*(void *)(a1 + 72));
      v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v9 += v20;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_14C0B00(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_14DEB10(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_14DF0D4((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[3].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v17 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v17 = (void *)*v17;
        }
        std::string::pointer data = (std::string *)sub_14D55B8((uint64_t)v17);
        v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 72)) {
        int v18 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v18 = &off_253A640;
      }
      uint64_t result = sub_14AB814(data, (uint64_t)v18);
    }
    if ((v14 & 2) != 0) {
      v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14C0CA4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 4) != 0);
  return v2 < 1;
}

void *sub_14C0CD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.RichBrandMetadata");
}

uint64_t sub_14C0CE4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C0D9C(uint64_t a1)
{
  sub_14C0CE4(a1);

  operator delete();
}

uint64_t sub_14C0DD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xFC) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0x100000000;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14C0E64(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v51 + 1);
    unsigned int v9 = **(unsigned char **)v51;
    if ((char)**(unsigned char **)v51 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v51, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v51 + 2);
      }
    }
    *(void *)uint64_t v51 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_50;
        }
        v5 |= 4u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v51 = v13;
          *(_DWORD *)(a1 + 40) = v12;
          goto LABEL_58;
        }
        uint64_t v39 = sub_188C138((uint64_t)v8, v12);
        *(void *)uint64_t v51 = v39;
        *(_DWORD *)(a1 + 40) = v40;
        if (v39) {
          goto LABEL_58;
        }
        goto LABEL_79;
      case 2u:
        if (v9 != 16) {
          goto LABEL_50;
        }
        v5 |= 8u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v41 = sub_188C138((uint64_t)v8, v15);
          *(void *)uint64_t v51 = v41;
          *(_DWORD *)(a1 + 44) = v42;
          if (!v41) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          *(void *)uint64_t v51 = v16;
          *(_DWORD *)(a1 + 44) = v15;
        }
        goto LABEL_58;
      case 3u:
        if (v9 != 24) {
          goto LABEL_50;
        }
        v5 |= 0x10u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v43 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v51 = v43;
          *(_DWORD *)(a1 + 48) = v44;
          if (!v43) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v51 = v19;
          *(_DWORD *)(a1 + 48) = v18;
        }
        goto LABEL_58;
      case 4u:
        if (v9 != 32) {
          goto LABEL_50;
        }
        v5 |= 0x20u;
        int v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v45 = sub_188C138((uint64_t)v8, v21);
          *(void *)uint64_t v51 = v45;
          *(_DWORD *)(a1 + 52) = v46;
          if (!v45) {
            goto LABEL_79;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_28:
          *(void *)uint64_t v51 = v22;
          *(_DWORD *)(a1 + 52) = v21;
        }
        goto LABEL_58;
      case 5u:
        if (v9 != 40) {
          goto LABEL_50;
        }
        v5 |= 0x40u;
        unint64_t v25 = v8 + 1;
        LODWORD(v24) = *v8;
        if ((v24 & 0x80) == 0) {
          goto LABEL_33;
        }
        int v26 = *v25;
        uint64_t v24 = v24 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v47 = sub_188C138((uint64_t)v8, v24);
          *(void *)uint64_t v51 = v47;
          *(_DWORD *)(a1 + 56) = v48;
          if (!v47) {
            goto LABEL_79;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_33:
          *(void *)uint64_t v51 = v25;
          *(_DWORD *)(a1 + 56) = v24;
        }
        goto LABEL_58;
      case 6u:
        if (v9 != 50) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 24);
        goto LABEL_42;
      case 7u:
        if (v9 != 58) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 32);
LABEL_42:
        std::string::size_type v31 = (std::string *)sub_1880F84(v29, v28);
        uint64_t v32 = (void *)sub_188C244(v31, *(char **)v51, (uint64_t)a3);
        goto LABEL_57;
      case 8u:
        if (v9 != 64) {
          goto LABEL_50;
        }
        uint64_t v33 = v8 + 1;
        unint64_t v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v35 = *v33;
        int v36 = v34 + (v35 << 7);
        unint64_t v34 = (v36 - 128);
        if (v35 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v8, (v36 - 128));
          if (!*(void *)v51) {
            goto LABEL_79;
          }
          unint64_t v34 = v49;
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_47:
          *(void *)uint64_t v51 = v33;
        }
        if ((v34 - 1) > 3)
        {
          if (*v7) {
            int v50 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(8, v34, v50);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 60) = v34;
        }
        goto LABEL_58;
      default:
LABEL_50:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v51;
          }
          uint64_t v32 = sub_1885AC0(v9, v38, v8, a3);
LABEL_57:
          *(void *)uint64_t v51 = v32;
          if (!v32) {
            goto LABEL_79;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_79:
        }
          *(void *)uint64_t v51 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v51;
    }
  }
}

unsigned char *sub_14C12C0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 52);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 56);
    *int v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_38:
      if ((v6 & 0x80) == 0) {
        goto LABEL_48;
      }
      goto LABEL_42;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_38;
  }
  int v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v22 = *(int *)(a1 + 60);
  *int v4 = 64;
  v4[1] = v22;
  if (v22 > 0x7F)
  {
    v4[1] = v22 | 0x80;
    unint64_t v23 = v22 >> 7;
    v4[2] = v22 >> 7;
    v4 += 3;
    if (v22 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v24 = v23 >> 14;
        v23 >>= 7;
        *v4++ = v23;
      }
      while (v24);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_48:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_14C16A0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
  {
    uint64_t result = 0;
    if ((v2 & 0x80) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t result = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_7:
    int v7 = *(_DWORD *)(a1 + 60);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  return result;
}

uint64_t sub_14C172C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 0x81) != 0)
  {
    uint64_t result = sub_14C16A0(a1);
  }
  else
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    int v7 = *(_DWORD *)(a1 + 60);
    uint64_t v8 = (9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6;
    if (v7 >= 0) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 10;
    }
    uint64_t result = v5 + v6 + v9 + 2;
  }
  if ((v2 & 0x7E) == 0) {
    goto LABEL_40;
  }
  if ((v2 & 2) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 4) == 0)
    {
LABEL_12:
      if ((v2 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_12;
  }
  int v14 = *(_DWORD *)(a1 + 40);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v15;
  if ((v2 & 8) == 0)
  {
LABEL_13:
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    int v18 = *(_DWORD *)(a1 + 48);
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v19;
    if ((v2 & 0x20) == 0)
    {
LABEL_15:
      if ((v2 & 0x40) == 0) {
        goto LABEL_40;
      }
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_24:
  int v16 = *(_DWORD *)(a1 + 44);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v17;
  if ((v2 & 0x10) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v2 & 0x20) == 0) {
    goto LABEL_15;
  }
LABEL_32:
  int v20 = *(_DWORD *)(a1 + 52);
  if (v20 < 0) {
    uint64_t v21 = 11;
  }
  else {
    uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v21;
  if ((v2 & 0x40) != 0)
  {
LABEL_36:
    int v22 = *(_DWORD *)(a1 + 56);
    if (v22 < 0) {
      uint64_t v23 = 11;
    }
    else {
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v23;
  }
LABEL_40:
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v25 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    result += v26;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14C1968(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_25:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_11;
    }
LABEL_26:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14C1AB0(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 0x81) == 0;
}

void *sub_14C1AC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.CTRStoreKeyValuePair");
}

void *sub_14C1AD4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DE370(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C1B54(void *a1)
{
  sub_14C1AD4(a1);

  operator delete();
}

uint64_t sub_14C1B8C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14C0DD4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_14C1C08(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14D683C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_14C1DA8(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_14C1DA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C0E64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14C1E38(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_14C12C0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14C1F7C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14C172C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_14C202C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_14DF150((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14C20FC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 0x81) == 0);
  return v2 < 1;
}

void *sub_14C2134@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryCtrMetadata");
}

uint64_t sub_14C2144(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14DE3F0((void *)(a1 + 48));
  sub_14DE3F0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C21FC(uint64_t a1)
{
  sub_14C2144(a1);

  operator delete();
}

uint64_t sub_14C2234(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v36 + 2);
      }
    }
    *(void *)int v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_42;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)int v36 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_14D6AD0(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            unint64_t v13 = *(unsigned __int8 **)v36;
          }
          uint64_t v12 = (char *)sub_14C25D4(a3, v16, v13);
          *(void *)int v36 = v12;
          if (!v12) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_50;
          }
        }
      case 2u:
        if (v9 != 17) {
          goto LABEL_42;
        }
        v5 |= 2u;
        *(void *)(a1 + 80) = *(void *)v8;
        *(void *)int v36 = v8 + 8;
        goto LABEL_50;
      case 3u:
        if (v9 != 24) {
          goto LABEL_42;
        }
        int v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)int v36 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v36) {
            goto LABEL_61;
          }
          unint64_t v19 = v34;
        }
        else
        {
          int v18 = v8 + 2;
LABEL_25:
          *(void *)int v36 = v18;
        }
        if ((v19 - 1) > 0x1B)
        {
          if (*v7) {
            int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 88) = v19;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 34) {
          goto LABEL_42;
        }
        int v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)int v36 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_14D6AD0(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, v27);
            uint64_t v23 = *(unsigned __int8 **)v36;
          }
          int v22 = (char *)sub_14C25D4(a3, v26, v23);
          *(void *)int v36 = v22;
          if (!v22) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_50;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 72), v29);
        std::string::size_type v31 = (void *)sub_188C244(v30, *(char **)v36, (uint64_t)a3);
        goto LABEL_49;
      default:
LABEL_42:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v36;
          }
          std::string::size_type v31 = sub_1885AC0(v9, v33, v8, a3);
LABEL_49:
          *(void *)int v36 = v31;
          if (!v31) {
            goto LABEL_61;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          *(void *)int v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

uint64_t sub_14C25D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C4138(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14C2664(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14C4624(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 80);
    *__dst = 17;
    *(void *)(__dst + 1) = v12;
    __dst += 9;
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v13 = *(int *)(a1 + 88);
    *__dst = 24;
    __dst[1] = v13;
    if (v13 > 0x7F)
    {
      __dst[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      __dst[2] = v13 >> 7;
      __dst += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *__dst++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        int v20 = __dst + 2;
      }
      __dst = sub_14C4624(v18, (unint64_t)v20, a3);
    }
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_14C2904(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14C4A68(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14C4A68(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      v9 += 9;
    }
    if ((v15 & 4) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 88);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v9 += v21;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

BOOL sub_14C2A94(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  do
  {
    uint64_t v3 = *(void *)(v2 + 8 * (v1 - 1) + 8);
    int v4 = *(_DWORD *)(v3 + 16) & 0x13;
    BOOL result = v4 == 19;
    if (v4 != 19) {
      break;
    }
    uint64_t v6 = *(unsigned int *)(v3 + 32);
    uint64_t v7 = *(void *)(v3 + 40);
    while ((int)v6 >= 1)
    {
      uint64_t v8 = *(void *)(v7 + 8 * v6--);
      if ((~*(_DWORD *)(v8 + 16) & 3) != 0) {
        return 0;
      }
    }
  }
  while (v1-- >= 2);
  return result;
}

void *sub_14C2B14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.GeoParsingResult");
}

uint64_t sub_14C2B24(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C2BF8(uint64_t a1)
{
  sub_14C2B24(a1);

  operator delete();
}

uint64_t sub_14C2C30(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
LABEL_17:
  if ((v3 & 0xF8) != 0)
  {
    *(unsigned char *)(a1 + 76) = 0;
    *(_DWORD *)(a1 + 72) = 0;
  }
  if ((v3 & 0x7F00) != 0)
  {
    *(_DWORD *)(a1 + 80) = 0;
    *(_DWORD *)(a1 + 77) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_14C2D48(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v89 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v89, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  char v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v89 + 1);
    unsigned int v10 = **(unsigned char **)v89;
    if ((char)**(unsigned char **)v89 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v89, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v89 + 2);
      }
    }
    *(void *)v89 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_94;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 48);
        goto LABEL_61;
      case 2u:
        if (v10 != 16) {
          goto LABEL_94;
        }
        v5 |= 8u;
        unint64_t v16 = v9 + 1;
        uint64_t v17 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v65 = sub_188C138((uint64_t)v9, v17);
          *(void *)v89 = v65;
          *(unsigned char *)(a1 + 72) = v66 != 0;
          if (!v65) {
            goto LABEL_131;
          }
        }
        else
        {
          unint64_t v16 = v9 + 2;
LABEL_17:
          *(void *)v89 = v16;
          *(unsigned char *)(a1 + 72) = v17 != 0;
        }
        goto LABEL_102;
      case 3u:
        if (v10 != 24) {
          goto LABEL_94;
        }
        v5 |= 0x10u;
        int v19 = v9 + 1;
        uint64_t v20 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v67 = sub_188C138((uint64_t)v9, v20);
          *(void *)v89 = v67;
          *(unsigned char *)(a1 + 73) = v68 != 0;
          if (!v67) {
            goto LABEL_131;
          }
        }
        else
        {
          int v19 = v9 + 2;
LABEL_22:
          *(void *)v89 = v19;
          *(unsigned char *)(a1 + 73) = v20 != 0;
        }
        goto LABEL_102;
      case 4u:
        if (v10 != 32) {
          goto LABEL_94;
        }
        v5 |= 0x20u;
        uint64_t v22 = v9 + 1;
        uint64_t v23 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v69 = sub_188C138((uint64_t)v9, v23);
          *(void *)v89 = v69;
          *(unsigned char *)(a1 + 74) = v70 != 0;
          if (!v69) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v22 = v9 + 2;
LABEL_27:
          *(void *)v89 = v22;
          *(unsigned char *)(a1 + 74) = v23 != 0;
        }
        goto LABEL_102;
      case 5u:
        if (v10 != 40) {
          goto LABEL_94;
        }
        v5 |= 0x40u;
        uint64_t v25 = v9 + 1;
        uint64_t v26 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v71 = sub_188C138((uint64_t)v9, v26);
          *(void *)v89 = v71;
          *(unsigned char *)(a1 + 75) = v72 != 0;
          if (!v71) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v25 = v9 + 2;
LABEL_32:
          *(void *)v89 = v25;
          *(unsigned char *)(a1 + 75) = v26 != 0;
        }
        goto LABEL_102;
      case 6u:
        if (v10 != 48) {
          goto LABEL_94;
        }
        v5 |= 0x80u;
        uint64_t v28 = v9 + 1;
        uint64_t v29 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v73 = sub_188C138((uint64_t)v9, v29);
          *(void *)v89 = v73;
          *(unsigned char *)(a1 + 76) = v74 != 0;
          if (!v73) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v28 = v9 + 2;
LABEL_37:
          *(void *)v89 = v28;
          *(unsigned char *)(a1 + 76) = v29 != 0;
        }
        goto LABEL_102;
      case 7u:
        if (v10 != 56) {
          goto LABEL_94;
        }
        v5 |= 0x100u;
        std::string::size_type v31 = v9 + 1;
        uint64_t v32 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v75 = sub_188C138((uint64_t)v9, v32);
          *(void *)v89 = v75;
          *(unsigned char *)(a1 + 77) = v76 != 0;
          if (!v75) {
            goto LABEL_131;
          }
        }
        else
        {
          std::string::size_type v31 = v9 + 2;
LABEL_42:
          *(void *)v89 = v31;
          *(unsigned char *)(a1 + 77) = v32 != 0;
        }
        goto LABEL_102;
      case 8u:
        if (v10 != 64) {
          goto LABEL_94;
        }
        v5 |= 0x200u;
        unint64_t v34 = v9 + 1;
        uint64_t v35 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v77 = sub_188C138((uint64_t)v9, v35);
          *(void *)v89 = v77;
          *(unsigned char *)(a1 + 78) = v78 != 0;
          if (!v77) {
            goto LABEL_131;
          }
        }
        else
        {
          unint64_t v34 = v9 + 2;
LABEL_47:
          *(void *)v89 = v34;
          *(unsigned char *)(a1 + 78) = v35 != 0;
        }
        goto LABEL_102;
      case 9u:
        if (v10 != 74) {
          goto LABEL_94;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v37 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
        if (v37) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 56);
        goto LABEL_61;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_94;
        }
        v5 |= 0x400u;
        uint64_t v38 = v9 + 1;
        uint64_t v39 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v79 = sub_188C138((uint64_t)v9, v39);
          *(void *)v89 = v79;
          *(unsigned char *)(a1 + 79) = v80 != 0;
          if (!v79) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v38 = v9 + 2;
LABEL_56:
          *(void *)v89 = v38;
          *(unsigned char *)(a1 + 79) = v39 != 0;
        }
        goto LABEL_102;
      case 0xBu:
        if (v10 != 90) {
          goto LABEL_94;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v41 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        int v15 = (void *)(a1 + 64);
LABEL_61:
        int v42 = (std::string *)sub_1880F84(v15, v14);
        uint64_t v43 = (void *)sub_188C244(v42, *(char **)v89, (uint64_t)a3);
        goto LABEL_101;
      case 0xCu:
        if (v10 != 96) {
          goto LABEL_94;
        }
        v5 |= 0x800u;
        int v44 = v9 + 1;
        uint64_t v45 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v46 = *v44;
        uint64_t v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v81 = sub_188C138((uint64_t)v9, v45);
          *(void *)v89 = v81;
          *(unsigned char *)(a1 + 80) = v82 != 0;
          if (!v81) {
            goto LABEL_131;
          }
        }
        else
        {
          int v44 = v9 + 2;
LABEL_66:
          *(void *)v89 = v44;
          *(unsigned char *)(a1 + 80) = v45 != 0;
        }
        goto LABEL_102;
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_94;
        }
        v5 |= 0x1000u;
        uint64_t v47 = v9 + 1;
        uint64_t v48 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v83 = sub_188C138((uint64_t)v9, v48);
          *(void *)v89 = v83;
          *(unsigned char *)(a1 + 81) = v84 != 0;
          if (!v83) {
            goto LABEL_131;
          }
        }
        else
        {
          uint64_t v47 = v9 + 2;
LABEL_71:
          *(void *)v89 = v47;
          *(unsigned char *)(a1 + 81) = v48 != 0;
        }
        goto LABEL_102;
      case 0xEu:
        if (v10 != 112) {
          goto LABEL_94;
        }
        v5 |= 0x2000u;
        int v50 = v9 + 1;
        uint64_t v51 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_76;
        }
        int v52 = *v50;
        uint64_t v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t v85 = sub_188C138((uint64_t)v9, v51);
          *(void *)v89 = v85;
          *(unsigned char *)(a1 + 82) = v86 != 0;
          if (!v85) {
            goto LABEL_131;
          }
        }
        else
        {
          int v50 = v9 + 2;
LABEL_76:
          *(void *)v89 = v50;
          *(unsigned char *)(a1 + 82) = v51 != 0;
        }
        goto LABEL_102;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_94;
        }
        v5 |= 0x4000u;
        int v53 = v9 + 1;
        uint64_t v54 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_81;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v87 = sub_188C138((uint64_t)v9, v54);
          *(void *)v89 = v87;
          *(unsigned char *)(a1 + 83) = v88 != 0;
          if (!v87) {
            goto LABEL_131;
          }
        }
        else
        {
          int v53 = v9 + 2;
LABEL_81:
          *(void *)v89 = v53;
          *(unsigned char *)(a1 + 83) = v54 != 0;
        }
        goto LABEL_102;
      case 0x10u:
        if (v10 != 130) {
          goto LABEL_94;
        }
        uint64_t v56 = v9 - 2;
        while (1)
        {
          uint64_t v57 = (char *)(v56 + 2);
          *(void *)v89 = v56 + 2;
          int v58 = *(_DWORD **)(a1 + 40);
          if (v58 && (uint64_t v59 = *(int *)(a1 + 32), (int)v59 < *v58))
          {
            *(_DWORD *)(a1 + 32) = v59 + 1;
            int v60 = *(std::string **)&v58[2 * v59 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v62 = v61;
            v62[1] = sub_3A6EDC;
            *uint64_t v61 = 0;
            v61[1] = 0;
            v61[2] = 0;
            int v60 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v61);
            uint64_t v57 = *(char **)v89;
          }
          uint64_t v56 = sub_188C244(v60, v57, (uint64_t)a3);
          *(void *)v89 = v56;
          if (!v56) {
            goto LABEL_131;
          }
          if (*(void *)a3 <= (unint64_t)v56 || *(_WORD *)v56 != 386) {
            goto LABEL_102;
          }
        }
      default:
LABEL_94:
        if (v10) {
          BOOL v63 = (v10 & 7) == 4;
        }
        else {
          BOOL v63 = 1;
        }
        if (!v63)
        {
          if (*v8)
          {
            BOOL v64 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v64 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(char **)v89;
          }
          uint64_t v43 = sub_1885AC0(v10, v64, v9, a3);
LABEL_101:
          *(void *)v89 = v43;
          if (!v43) {
            goto LABEL_131;
          }
LABEL_102:
          if (sub_11947B8((uint64_t)a3, (char **)v89, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_131:
        }
          *(void *)v89 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v89;
    }
  }
}

char *sub_14C3594(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 72);
  *unint64_t v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 73);
  *unint64_t v4 = 24;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x40) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 74);
  *unint64_t v4 = 32;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_6:
    if ((v6 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 75);
  *unint64_t v4 = 40;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x80) == 0)
  {
LABEL_7:
    if ((v6 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 76);
  *unint64_t v4 = 48;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x100) == 0)
  {
LABEL_8:
    if ((v6 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_33:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 77);
  *unint64_t v4 = 56;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x200) == 0)
  {
LABEL_9:
    if ((v6 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 78);
  *unint64_t v4 = 64;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_10:
    if ((v6 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_40;
  }
LABEL_39:
  unint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 79);
  *unint64_t v4 = 80;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_44;
  }
LABEL_43:
  unint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_47;
  }
LABEL_44:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v15 = *(unsigned char *)(a1 + 80);
  *unint64_t v4 = 96;
  v4[1] = v15;
  v4 += 2;
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_50;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v16 = *(unsigned char *)(a1 + 81);
  *unint64_t v4 = 104;
  v4[1] = v16;
  v4 += 2;
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_53;
  }
LABEL_50:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v17 = *(unsigned char *)(a1 + 82);
  *unint64_t v4 = 112;
  v4[1] = v17;
  v4 += 2;
  if ((v6 & 0x4000) != 0)
  {
LABEL_53:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v18 = *(unsigned char *)(a1 + 83);
    *unint64_t v4 = 120;
    v4[1] = v18;
    v4 += 2;
  }
LABEL_56:
  uint64_t v19 = *(unsigned int *)(a1 + 32);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      uint64_t v22 = *(void **)(*(void *)(a1 + 40) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_67;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if (*a3 - (void)v4 + 13 >= v23)
      {
        *(_WORD *)unint64_t v4 = 386;
        v4[2] = v23;
        if (*((char *)v22 + 23) < 0) {
          uint64_t v22 = (void *)*v22;
        }
        int v24 = v4 + 3;
        memcpy(v24, v22, v23);
        unint64_t v4 = &v24[v23];
        goto LABEL_65;
      }
LABEL_67:
      unint64_t v4 = (char *)sub_188A868(a3, 16, (uint64_t)v22, v4);
LABEL_65:
      v20 += 8;
    }
    while (v21 != v20);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_14C3A3C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  uint64_t v2 = 2 * v1;
  if ((int)v1 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v7)
  {
    if (v7)
    {
      unint64_t v13 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v7 & 2) == 0)
      {
LABEL_9:
        if ((v7 & 4) == 0)
        {
LABEL_13:
          if ((v7 & 8) != 0) {
            v2 += 2;
          }
          if ((v7 & 0x10) != 0) {
            v2 += 2;
          }
          if ((v7 & 0x20) != 0) {
            v2 += 2;
          }
          if ((v7 & 0x40) != 0) {
            v2 += 2;
          }
          if ((v7 & 0x80) != 0) {
            v2 += 2;
          }
          goto LABEL_23;
        }
LABEL_10:
        unint64_t v8 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
        uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
        uint64_t v10 = *(void *)(v8 + 8);
        if ((v9 & 0x80u) == 0) {
          uint64_t v10 = v9;
        }
        v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_13;
      }
    }
    else if ((v7 & 2) == 0)
    {
      goto LABEL_9;
    }
    unint64_t v16 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 4) == 0) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
LABEL_23:
  if ((v7 & 0x7F00) != 0)
  {
    if ((v7 & 0x100) != 0) {
      v2 += 2;
    }
    if ((v7 & 0x200) != 0) {
      v2 += 2;
    }
    if ((v7 & 0x400) != 0) {
      v2 += 2;
    }
    if ((v7 & 0x800) != 0) {
      v2 += 2;
    }
    if ((v7 & 0x1000) != 0) {
      v2 += 2;
    }
    if ((v7 & 0x2000) != 0) {
      v2 += 2;
    }
    if ((v7 & 0x4000) != 0) {
      v2 += 2;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v19 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14C3C48(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_35;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_38;
    }
LABEL_35:
    uint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      unint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_39;
    }
LABEL_38:
    v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_40;
    }
LABEL_39:
    v3[3].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 73);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_41;
    }
LABEL_40:
    v3[3].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 74);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      v3[3].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 76);
      goto LABEL_14;
    }
LABEL_41:
    v3[3].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 75);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x7F00) == 0) {
    goto LABEL_25;
  }
  if ((v9 & 0x100) != 0)
  {
    v3[3].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 77);
    if ((v9 & 0x200) == 0)
    {
LABEL_18:
      if ((v9 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_45;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  v3[3].__r_.__value_.__s.__data_[6] = *(unsigned char *)(a2 + 78);
  if ((v9 & 0x400) == 0)
  {
LABEL_19:
    if ((v9 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  v3[3].__r_.__value_.__s.__data_[7] = *(unsigned char *)(a2 + 79);
  if ((v9 & 0x800) == 0)
  {
LABEL_20:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  v3[3].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 80);
  if ((v9 & 0x1000) == 0)
  {
LABEL_21:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_22;
    }
LABEL_48:
    v3[3].__r_.__value_.__s.__data_[10] = *(unsigned char *)(a2 + 82);
    if ((v9 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_47:
  v3[3].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 81);
  if ((v9 & 0x2000) != 0) {
    goto LABEL_48;
  }
LABEL_22:
  if ((v9 & 0x4000) != 0) {
LABEL_23:
  }
    v3[3].__r_.__value_.__s.__data_[11] = *(unsigned char *)(a2 + 83);
LABEL_24:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_25:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14C3EAC()
{
  return 1;
}

void *sub_14C3EB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.AddressLabeledToken.GeoDecoration");
}

uint64_t sub_14C3EC4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if ((uint64_t (***)())a1 != &off_253AE40)
  {
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_14C2B24(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 96);
    if (v7)
    {
      sub_14C2B24(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1889DE8((void *)(a1 + 48));
  sub_14DDEF0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C3FE0(uint64_t a1)
{
  sub_14C3EC4(a1);

  operator delete();
}

uint64_t sub_14C4018(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14A4F50(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v6)
  {
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_19:
  unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_23;
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  *(unsigned char *)unint64_t v10 = 0;
  *(unsigned char *)(v10 + 23) = 0;
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_23:
  uint64_t result = sub_14C2C30(*(void *)(a1 + 88));
  if ((v6 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_14C2C30(*(void *)(a1 + 96));
LABEL_11:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 96) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_14C4138(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  char v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v10 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)int v42 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 8) {
          goto LABEL_57;
        }
        v5 |= 0x10u;
        uint64_t v14 = (char *)(v9 + 1);
        LODWORD(v13) = *v9;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v15 = *v14;
        uint64_t v13 = v13 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v14 = (char *)(v9 + 2);
LABEL_13:
          *(void *)int v42 = v14;
          *(_DWORD *)(a1 + 104) = v13;
          goto LABEL_65;
        }
        uint64_t v40 = sub_188C138((uint64_t)v9, v13);
        *(void *)int v42 = v40;
        *(_DWORD *)(a1 + 104) = v41;
        if (v40) {
          goto LABEL_65;
        }
        goto LABEL_72;
      case 2u:
        if (v10 != 18) {
          goto LABEL_57;
        }
        unint64_t v16 = v9 - 1;
        while (1)
        {
          uint64_t v17 = v16 + 1;
          *(void *)int v42 = v16 + 1;
          std::string::size_type v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_14D50E4(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            uint64_t v17 = *(unsigned __int8 **)v42;
          }
          unint64_t v16 = (unsigned __int8 *)sub_14B6E38(a3, v20, v17);
          *(void *)int v42 = v16;
          if (!v16) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_65;
          }
        }
      case 3u:
        if (v10 != 26) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        int64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          int64_t v23 = (uint64_t *)*v23;
        }
        int v24 = (void *)(a1 + 72);
        goto LABEL_32;
      case 4u:
        if (v10 != 34) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        int64_t v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          int64_t v23 = (uint64_t *)*v23;
        }
        int v24 = (void *)(a1 + 80);
LABEL_32:
        uint64_t v26 = (std::string *)sub_1880F84(v24, v23);
        uint64_t v27 = (uint64_t)sub_188C244(v26, *(char **)v42, (uint64_t)a3);
        goto LABEL_64;
      case 5u:
        if (v10 != 42) {
          goto LABEL_57;
        }
        uint64_t v28 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)int v42 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 64);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 56), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 56) = v31 + 1;
            uint64_t v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *unint64_t v34 = v33;
            v34[1] = sub_3A6EDC;
            void *v33 = 0;
            v33[1] = 0;
            int v33[2] = 0;
            uint64_t v32 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v33);
            uint64_t v29 = *(char **)v42;
          }
          uint64_t v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)int v42 = v28;
          if (!v28) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 42) {
            goto LABEL_65;
          }
        }
      case 6u:
        if (v10 != 50) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v35 = *(void *)(a1 + 88);
        if (v35) {
          goto LABEL_56;
        }
        int v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v36 = (void *)*v36;
        }
        uint64_t v35 = sub_14D6A24((uint64_t)v36);
        *(void *)(a1 + 88) = v35;
        goto LABEL_55;
      case 7u:
        if (v10 != 58) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v35 = *(void *)(a1 + 96);
        if (v35) {
          goto LABEL_56;
        }
        uint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v37 = (void *)*v37;
        }
        uint64_t v35 = sub_14D6A24((uint64_t)v37);
        *(void *)(a1 + 96) = v35;
LABEL_55:
        unint64_t v9 = *(unsigned __int8 **)v42;
LABEL_56:
        uint64_t v27 = sub_14C4594(a3, v35, v9);
        goto LABEL_64;
      default:
LABEL_57:
        if (v10) {
          BOOL v38 = (v10 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v7)
          {
            uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v9 = *(unsigned __int8 **)v42;
          }
          uint64_t v27 = (uint64_t)sub_1885AC0(v10, v39, (char *)v9, a3);
LABEL_64:
          *(void *)int v42 = v27;
          if (!v27) {
            goto LABEL_72;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_72:
        }
          *(void *)int v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v42;
    }
  }
}

uint64_t sub_14C4594(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C2D48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14C4624(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_14A5174(v12, v14, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 56);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 8 * v15;
    do
    {
      std::string::size_type v18 = *(void **)(*(void *)(a1 + 64) + v16 + 8);
      if (*((char *)v18 + 23) < 0)
      {
        int64_t v19 = v18[1];
        if (v19 > 127) {
          goto LABEL_31;
        }
      }
      else
      {
        int64_t v19 = *((unsigned __int8 *)v18 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v19)
      {
        *uint64_t v4 = 42;
        v4[1] = v19;
        if (*((char *)v18 + 23) < 0) {
          std::string::size_type v18 = (void *)*v18;
        }
        uint64_t v20 = v4 + 2;
        memcpy(v20, v18, v19);
        uint64_t v4 = &v20[v19];
        goto LABEL_29;
      }
LABEL_31:
      uint64_t v4 = (char *)sub_188A868(a3, 5, (uint64_t)v18, v4);
LABEL_29:
      v16 += 8;
    }
    while (v17 != v16);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 88);
    *uint64_t v4 = 50;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      int64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      int64_t v23 = v4 + 2;
    }
    uint64_t v4 = sub_14C3594(v21, v23, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 96);
    *uint64_t v4 = 58;
    unsigned int v25 = *(_DWORD *)(v24 + 20);
    v4[1] = v25;
    if (v25 > 0x7F) {
      uint64_t v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      uint64_t v26 = v4 + 2;
    }
    uint64_t v4 = sub_14C3594(v24, v26, a3);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_14C4998(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    unint64_t v6 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v1 & 0x10) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 104);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
  return v2;
}

uint64_t sub_14C4A68(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 0x13) != 0)
  {
    uint64_t v13 = sub_14C4998(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v6 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    uint64_t v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
    int v10 = *(_DWORD *)(a1 + 104);
    uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
    if (v10 >= 0) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 10;
    }
    uint64_t v13 = v4 + v8 + v5 + v9 + v12 + 3;
  }
  uint64_t v14 = *(int *)(a1 + 32);
  uint64_t v15 = v13 + v14;
  uint64_t v16 = *(void *)(a1 + 40);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_14A5260(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(unsigned int *)(a1 + 56);
  uint64_t v22 = v15 + v21;
  if ((int)v21 >= 1)
  {
    int64_t v23 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v24 = *v23++;
      uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
      uint64_t v26 = *(void *)(v24 + 8);
      if ((v25 & 0x80u) == 0) {
        uint64_t v26 = v25;
      }
      v22 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      --v21;
    }
    while (v21);
  }
  int v27 = *(_DWORD *)(a1 + 16);
  if ((v27 & 0xC) != 0)
  {
    if ((v27 & 4) != 0)
    {
      uint64_t v28 = sub_14C3A3C(*(void *)(a1 + 88));
      v22 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v27 & 8) != 0)
    {
      uint64_t v29 = sub_14C3A3C(*(void *)(a1 + 96));
      v22 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if (v30)
  {
    unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v22 += v33;
  }
  *(_DWORD *)(a1 + 20) = v22;
  return v22;
}

std::string *sub_14C4C94(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    unint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_14DECA4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    int v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x1F) != 0)
  {
    if (v14)
    {
      uint64_t v15 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v15, v17);
    }
    if ((v14 & 2) != 0)
    {
      uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (uint64_t *)*v20;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v18, v20);
    }
    if ((v14 & 4) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      uint64_t v22 = (std::string *)v3[3].__r_.__value_.__r.__words[2];
      if (!v22)
      {
        std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
        uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v22 = (std::string *)sub_14D6A24((uint64_t)v24);
        v3[3].__r_.__value_.__r.__words[2] = (std::string::size_type)v22;
      }
      if (*(void *)(a2 + 88)) {
        uint64_t v25 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        uint64_t v25 = &off_253ADE8;
      }
      uint64_t result = sub_14C3C48(v22, (uint64_t)v25);
      if ((v14 & 8) == 0)
      {
LABEL_18:
        if ((v14 & 0x10) == 0)
        {
LABEL_20:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_21;
        }
LABEL_19:
        LODWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 104);
        goto LABEL_20;
      }
    }
    else if ((v14 & 8) == 0)
    {
      goto LABEL_18;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      std::string::pointer data = (std::string *)sub_14D6A24((uint64_t)v28);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v29 = &off_253ADE8;
    }
    uint64_t result = sub_14C3C48(data, (uint64_t)v29);
    if ((v14 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14C4EF0(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 0x13) != 0) {
    return 0;
  }
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  do
  {
    BOOL result = (int)v1 < 1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(v2 + 8 * v1--);
  }
  while ((~*(_DWORD *)(v4 + 16) & 3) == 0);
  return result;
}

void *sub_14C4F38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.AddressLabeledToken");
}

uint64_t sub_14C4F48(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253AEB0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_14BD980(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C5014(uint64_t a1)
{
  sub_14C4F48(a1);

  operator delete();
}

uint64_t sub_14C504C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_14BDAC8(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14C50E4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)std::string::size_type v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void **)(a1 + 32);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_14D6518((uint64_t)v17);
        *(void *)(a1 + 32) = v16;
        int v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_14C534C(a3, (uint64_t)v16, v7);
      goto LABEL_31;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 8);
    std::string::size_type v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      std::string::size_type v19 = (uint64_t *)*v19;
    }
    uint64_t v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
    uint64_t v15 = (uint64_t)sub_188C244(v20, *(char **)v27, (uint64_t)a3);
LABEL_31:
    *(void *)std::string::size_type v27 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    uint64_t v21 = (char *)(v7 + 1);
    unint64_t v22 = *v7;
    if (((char)*v7 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v23 = *v21;
    int v24 = v22 + (v23 << 7);
    unint64_t v22 = (v24 - 128);
    if (v23 < 0)
    {
      *(void *)std::string::size_type v27 = sub_188C138((uint64_t)v7, (v24 - 128));
      if (!*(void *)v27) {
        goto LABEL_50;
      }
      unint64_t v22 = v25;
    }
    else
    {
      uint64_t v21 = (char *)(v7 + 2);
LABEL_36:
      *(void *)std::string::size_type v27 = v21;
    }
    if (v22 > 3)
    {
      if (*v6) {
        uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v22, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v22;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_50:
  *(void *)std::string::size_type v27 = 0;
  return *(void *)v27;
}

uint64_t sub_14C534C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BDC7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14C53DC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    uint64_t v4 = sub_14BE504(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_14C5588(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_14BEAE4(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14C56A8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_14D6518((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253AC30;
    }
    uint64_t result = sub_14BEE90(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14C57B8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 88);
  do
  {
    BOOL result = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = *(void *)(v4 + 8 * v3--);
  }
  while ((~*(_DWORD *)(v5 + 16) & 3) == 0);
  return result;
}

void *sub_14C57FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryDymMetadata");
}

uint64_t sub_14C580C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 80);
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 64);
  sub_1889DE8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C58C4(uint64_t a1)
{
  sub_14C580C(a1);

  operator delete();
}

uint64_t sub_14C58FC(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  *(_DWORD *)(a1 + 64) = 0;
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 0x1E) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
    *(unsigned char *)(a1 + 104) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_14C5998(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v55 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (uint64_t **)(a1 + 40);
    uint64_t v54 = (uint64_t *)(a1 + 8);
    while (1)
    {
      int v8 = (unsigned __int8 *)(*(void *)v55 + 1);
      unsigned int v9 = **(unsigned char **)v55;
      if ((char)**(unsigned char **)v55 < 0)
      {
        int v10 = (char)*v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v55, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          int v8 = (unsigned __int8 *)(*(void *)v55 + 2);
        }
      }
      *(void *)int v55 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_82;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v13 = *(void *)(a1 + 8);
          int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
          if (v13) {
            int v14 = (uint64_t *)*v14;
          }
          unint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 80), v14);
          uint64_t v16 = (void *)sub_188C244(v15, *(char **)v55, (uint64_t)a3);
          goto LABEL_89;
        case 2u:
          if (v9 != 21) {
            goto LABEL_82;
          }
          int v18 = *(_DWORD *)v8;
          uint64_t v17 = v8 + 4;
          v5 |= 4u;
          *(_DWORD *)(a1 + 96) = v18;
          goto LABEL_36;
        case 3u:
          if (v9 != 24) {
            goto LABEL_82;
          }
          v5 |= 2u;
          std::string::size_type v19 = (char *)(v8 + 1);
          uint64_t v20 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v21 = *v19;
          uint64_t v20 = v20 + (v21 << 7) - 128;
          if (v21 < 0)
          {
            uint64_t v48 = sub_188C138((uint64_t)v8, v20);
            *(void *)int v55 = v48;
            *(void *)(a1 + 88) = v49;
            if (!v48) {
              goto LABEL_95;
            }
          }
          else
          {
            std::string::size_type v19 = (char *)(v8 + 2);
LABEL_19:
            *(void *)int v55 = v19;
            *(void *)(a1 + 88) = v20;
          }
          goto LABEL_90;
        case 4u:
          if (v9 == 32)
          {
            unint64_t v22 = v8 - 1;
            while (1)
            {
              *(void *)int v55 = v22 + 1;
              int v23 = v22[1];
              if ((char)v22[1] < 0)
              {
                int v24 = v23 + (v22[2] << 7);
                int v23 = v24 - 128;
                if ((char)v22[2] < 0)
                {
                  unint64_t v22 = (unsigned __int8 *)sub_188C138((uint64_t)(v22 + 1), (v24 - 128));
                  int v23 = v25;
                }
                else
                {
                  v22 += 3;
                }
              }
              else
              {
                v22 += 2;
              }
              *(void *)int v55 = v22;
              uint64_t v26 = *(unsigned int *)(a1 + 24);
              if (v26 == *(_DWORD *)(a1 + 28))
              {
                int v27 = v26 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v26 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v26) = v23;
                unint64_t v22 = *(unsigned __int8 **)v55;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v26) = v23;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 24) = v27;
              if (!v22) {
                goto LABEL_95;
              }
              if (*(void *)a3 <= (unint64_t)v22 || *v22 != 32) {
                goto LABEL_90;
              }
            }
          }
          if (v9 != 34) {
            goto LABEL_82;
          }
          uint64_t v16 = sub_188C2BC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          goto LABEL_89;
        case 5u:
          if (v9 != 45) {
            goto LABEL_82;
          }
          int v28 = *(_DWORD *)v8;
          uint64_t v17 = v8 + 4;
          v5 |= 8u;
          *(_DWORD *)(a1 + 100) = v28;
LABEL_36:
          *(void *)int v55 = v17;
          goto LABEL_90;
        case 6u:
          if (v9 != 48) {
            goto LABEL_82;
          }
          v5 |= 0x10u;
          uint64_t v29 = (char *)(v8 + 1);
          uint64_t v30 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_41;
          }
          int v31 = *v29;
          uint64_t v30 = v30 + (v31 << 7) - 128;
          if (v31 < 0)
          {
            uint64_t v50 = sub_188C138((uint64_t)v8, v30);
            *(void *)int v55 = v50;
            *(unsigned char *)(a1 + 104) = v51 != 0;
            if (!v50) {
              goto LABEL_95;
            }
          }
          else
          {
            uint64_t v29 = (char *)(v8 + 2);
LABEL_41:
            *(void *)int v55 = v29;
            *(unsigned char *)(a1 + 104) = v30 != 0;
          }
          goto LABEL_90;
        case 7u:
          if (v9 != 58) {
            goto LABEL_82;
          }
          unint64_t v32 = (const std::string::value_type *)(v8 - 1);
          while (1)
          {
            uint64_t v33 = (char *)(v32 + 1);
            *(void *)int v55 = v32 + 1;
            unint64_t v34 = *(_DWORD **)(a1 + 56);
            if (v34 && (uint64_t v35 = *(int *)(a1 + 48), (int)v35 < *v34))
            {
              *(_DWORD *)(a1 + 48) = v35 + 1;
              int v36 = *(std::string **)&v34[2 * v35 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              *BOOL v38 = v37;
              v38[1] = sub_3A6EDC;
              *uint64_t v37 = 0;
              v37[1] = 0;
              v37[2] = 0;
              int v36 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v37);
              uint64_t v33 = *(char **)v55;
            }
            unint64_t v32 = sub_188C244(v36, v33, (uint64_t)a3);
            *(void *)int v55 = v32;
            if (!v32) {
              goto LABEL_95;
            }
            if (*(void *)a3 <= (unint64_t)v32 || *v32 != 58) {
              goto LABEL_90;
            }
          }
        case 8u:
          if (v9 == 64)
          {
            uint64_t v39 = (uint64_t)(v8 - 1);
            while (1)
            {
              *(void *)int v55 = v39 + 1;
              unint64_t v40 = *(unsigned __int8 *)(v39 + 1);
              int v41 = (char *)(v39 + 2);
              if (*(char *)(v39 + 1) < 0)
              {
                int v42 = *v41;
                int v43 = v40 + (v42 << 7);
                unint64_t v40 = (v43 - 128);
                if (v42 < 0)
                {
                  *(void *)int v55 = sub_188C138(v39 + 1, (v43 - 128));
                  if (!*(void *)v55) {
                    goto LABEL_95;
                  }
                  unint64_t v40 = v46;
                  goto LABEL_60;
                }
                int v41 = (char *)(v39 + 3);
              }
              *(void *)int v55 = v41;
LABEL_60:
              if (v40 > 0xE)
              {
                if (*v54) {
                  uint64_t v47 = (std::string *)((*v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v47 = (std::string *)sub_188DBD8(v54);
                }
                sub_188C020(8, v40, v47);
              }
              else
              {
                uint64_t v44 = *(unsigned int *)(a1 + 64);
                if (v44 == *(_DWORD *)(a1 + 68))
                {
                  int v45 = v44 + 1;
                  sub_188C80C((unsigned int *)(a1 + 64), v44 + 1);
                  *(_DWORD *)(*(void *)(a1 + 72) + 4 * v44) = v40;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 72) + 4 * v44) = v40;
                  int v45 = v44 + 1;
                }
                *(_DWORD *)(a1 + 64) = v45;
              }
              uint64_t v39 = *(void *)v55;
              if (*(void *)a3 <= *(void *)v55 || **(unsigned char **)v55 != 64) {
                goto LABEL_90;
              }
            }
          }
          if (v9 == 66)
          {
            *(void *)&long long v56 = a1 + 64;
            *((void *)&v56 + 1) = sub_149F9E0;
            uint64_t v57 = a1 + 8;
            int v58 = 8;
            uint64_t v16 = sub_1112E88((uint64_t)a3, (char *)v8, &v56);
          }
          else
          {
LABEL_82:
            if (v9) {
              BOOL v52 = (v9 & 7) == 4;
            }
            else {
              BOOL v52 = 1;
            }
            if (v52)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_95:
              *(void *)int v55 = 0;
              goto LABEL_2;
            }
            if (*v54)
            {
              int v53 = (std::string *)((*v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v53 = (std::string *)sub_188DBD8(v54);
              int v8 = *(unsigned __int8 **)v55;
            }
            uint64_t v16 = sub_1885AC0(v9, v53, (char *)v8, a3);
          }
LABEL_89:
          *(void *)int v55 = v16;
          if (!v16) {
            goto LABEL_95;
          }
LABEL_90:
          if (sub_11947B8((uint64_t)a3, (char **)v55, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_82;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v55;
}

char *sub_14C5F60(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 96);
  *unint64_t v4 = 21;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
  if ((v6 & 2) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(void *)(a1 + 88);
    *unint64_t v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_15:
  uint64_t v11 = *(unsigned int *)(a1 + 24);
  if ((int)v11 >= 1)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v13 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *unint64_t v4 = 32;
      v4[1] = v13;
      if (v13 > 0x7F)
      {
        v4[1] = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        v4[2] = v13 >> 7;
        v4 += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v15 = v14 >> 14;
            v14 >>= 7;
            *v4++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v16 = *(_DWORD *)(a1 + 100);
    *unint64_t v4 = 45;
    *(_DWORD *)(v4 + 1) = v16;
    v4 += 5;
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 104);
    *unint64_t v4 = 48;
    v4[1] = v17;
    v4 += 2;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 48);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      int v21 = *(void **)(*(void *)(a1 + 56) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_43;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v22)
      {
        *unint64_t v4 = 58;
        v4[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          int v21 = (void *)*v21;
        }
        int v23 = v4 + 2;
        memcpy(v23, v21, v22);
        unint64_t v4 = &v23[v22];
        goto LABEL_41;
      }
LABEL_43:
      unint64_t v4 = (char *)sub_188A868(a3, 7, (uint64_t)v21, v4);
LABEL_41:
      v19 += 8;
    }
    while (v20 != v19);
  }
  uint64_t v24 = *(unsigned int *)(a1 + 64);
  if ((int)v24 >= 1)
  {
    for (uint64_t j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v26 = *(int *)(*(void *)(a1 + 72) + 4 * j);
      *unint64_t v4 = 64;
      v4[1] = v26;
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        unint64_t v27 = v26 >> 7;
        v4[2] = v26 >> 7;
        v4 += 3;
        if (v26 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v28 = v27 >> 14;
            v27 >>= 7;
            *v4++ = v27;
          }
          while (v28);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    unint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*a3 - (void)v4 >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_14C6354(uint64_t a1)
{
  uint64_t v2 = sub_188D498((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 64);
  if (v9)
  {
    int v10 = 0;
    uint64_t v11 = 0;
    do
    {
      int v12 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v10);
      if (v12 < 0) {
        uint64_t v13 = 10;
      }
      else {
        uint64_t v13 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
      }
      v11 += v13;
      ++v10;
    }
    while (v9 != v10);
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t result = v4 + v9 + v11;
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x1F) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      result += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      result += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    uint64_t v19 = result + 5;
    if ((v15 & 4) == 0) {
      uint64_t v19 = result;
    }
    if ((v15 & 8) != 0) {
      v19 += 5;
    }
    if ((v15 & 0x10) != 0) {
      uint64_t result = v19 + 2;
    }
    else {
      uint64_t result = v19;
    }
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v21 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    result += v22;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14C6500(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    int v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    int v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *int v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    uint64_t v14 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v14 + v13);
    std::string::pointer data = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&data[4 * v14], *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v16 = *(_DWORD *)(a2 + 16);
  if ((v16 & 0x1F) != 0)
  {
    if (v16)
    {
      uint64_t v18 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
      uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (uint64_t *)*v20;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v18, v20);
      if ((v16 & 2) == 0)
      {
LABEL_11:
        if ((v16 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_24;
      }
    }
    else if ((v16 & 2) == 0)
    {
      goto LABEL_11;
    }
    v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v16 & 4) == 0)
    {
LABEL_12:
      if ((v16 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
    if ((v16 & 8) == 0)
    {
LABEL_13:
      if ((v16 & 0x10) == 0)
      {
LABEL_15:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v16;
        goto LABEL_16;
      }
LABEL_14:
      v3[4].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 104);
      goto LABEL_15;
    }
LABEL_25:
    HIDWORD(v3[4].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 100);
    if ((v16 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14C66E8()
{
  return 1;
}

void *sub_14C66F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryCompletionMetadata");
}

uint64_t sub_14C6700(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  int v5 = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 120));
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_14DDB70((void *)(a1 + 88));
  sub_122BA8C((void *)(a1 + 64));
  sub_1889DE8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C6808(uint64_t a1)
{
  sub_14C6700(a1);

  operator delete();
}

uint64_t sub_14C6840(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  uint64_t v3 = *(unsigned int *)(a1 + 72);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_149FADC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 96);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_14A5AD4(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 96) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 0xF) != 0)
  {
    if ((v9 & 1) == 0)
    {
      if ((v9 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_19:
      unint64_t v11 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
        if ((v9 & 4) != 0) {
          goto LABEL_23;
        }
      }
LABEL_13:
      if ((v9 & 8) == 0) {
        goto LABEL_30;
      }
LABEL_27:
      unint64_t v13 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v13 + 23) < 0)
      {
        **(unsigned char **)unint64_t v13 = 0;
        *(void *)(v13 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v13 = 0;
        *(unsigned char *)(v13 + 23) = 0;
      }
      goto LABEL_30;
    }
    unint64_t v10 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_23:
    unint64_t v12 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v9 & 8) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v9 & 8) == 0) {
        goto LABEL_30;
      }
    }
    goto LABEL_27;
  }
LABEL_30:
  if ((v9 & 0xF0) != 0)
  {
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    *(_DWORD *)(a1 + 160) = 0;
  }
  if ((v9 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 212) = 0;
    *(_OWORD *)(a1 + 196) = 0u;
    *(_OWORD *)(a1 + 180) = 0u;
    *(_OWORD *)(a1 + 164) = 0u;
    *(void *)(a1 + 216) = 0x7FEFFFFFFFFFFFFFLL;
  }
  char v15 = *(unsigned char *)(a1 + 8);
  uint64_t v14 = a1 + 8;
  *(void *)(v14 + 216) = 0x7FEFFFFFFFFFFFFFLL;
  *(_DWORD *)(v14 + 8) = 0;
  if (v15)
  {
    return sub_188B4AC((uint64_t *)v14);
  }
  return result;
}

uint64_t sub_14C6A08(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v94 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v94, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 40);
  v93 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v94 + 1);
    unsigned int v9 = **(unsigned char **)v94;
    if ((char)**(unsigned char **)v94 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v94, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v94 + 2);
      }
    }
    *(void *)v94 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_146;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        char v15 = (void *)(a1 + 112);
        goto LABEL_43;
      case 2u:
        if (v9 != 18) {
          goto LABEL_146;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        char v15 = (void *)(a1 + 120);
        goto LABEL_43;
      case 3u:
        if (v9 != 24) {
          goto LABEL_146;
        }
        v5 |= 0x10u;
        uint64_t v18 = v8 + 1;
        LODWORD(v17) = *v8;
        if ((v17 & 0x80) == 0) {
          goto LABEL_21;
        }
        int v19 = *v18;
        uint64_t v17 = v17 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v77 = sub_188C138((uint64_t)v8, v17);
          *(void *)v94 = v77;
          *(_DWORD *)(a1 + 144) = v78;
          if (!v77) {
            goto LABEL_156;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_21:
          *(void *)v94 = v18;
          *(_DWORD *)(a1 + 144) = v17;
        }
        goto LABEL_81;
      case 4u:
        if (v9 != 34) {
          goto LABEL_146;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        char v15 = (void *)(a1 + 128);
        goto LABEL_43;
      case 5u:
        if (v9 != 40) {
          goto LABEL_146;
        }
        v5 |= 0x40u;
        unint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v79 = sub_188C138((uint64_t)v8, v22);
          *(void *)v94 = v79;
          *(void *)(a1 + 152) = v80;
          if (!v79) {
            goto LABEL_156;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_30:
          *(void *)v94 = v21;
          *(void *)(a1 + 152) = v22;
        }
        goto LABEL_81;
      case 6u:
        if (v9 != 53) {
          goto LABEL_146;
        }
        int v25 = *(_DWORD *)v8;
        uint64_t v24 = v8 + 4;
        v5 |= 0x20u;
        *(_DWORD *)(a1 + 148) = v25;
        goto LABEL_80;
      case 7u:
        if (v9 != 61) {
          goto LABEL_146;
        }
        int v26 = *(_DWORD *)v8;
        uint64_t v24 = v8 + 4;
        v5 |= 0x80u;
        *(_DWORD *)(a1 + 160) = v26;
        goto LABEL_80;
      case 8u:
        if (v9 != 65) {
          goto LABEL_146;
        }
        uint64_t v27 = *(void *)v8;
        uint64_t v24 = v8 + 8;
        v5 |= 0x8000u;
        *(void *)(a1 + 216) = v27;
        goto LABEL_80;
      case 9u:
        if (v9 != 73) {
          goto LABEL_146;
        }
        uint64_t v28 = *(void *)v8;
        uint64_t v24 = v8 + 8;
        v5 |= 0x10000u;
        *(void *)(a1 + 224) = v28;
        goto LABEL_80;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_146;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v14 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v14 = (uint64_t *)*v14;
        }
        char v15 = (void *)(a1 + 136);
LABEL_43:
        uint64_t v30 = (std::string *)sub_1880F84(v15, v14);
        unint64_t v31 = (void *)sub_188C244(v30, *(char **)v94, (uint64_t)a3);
        goto LABEL_44;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_146;
        }
        v5 |= 0x200u;
        unint64_t v32 = v8 + 1;
        uint64_t v33 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v81 = sub_188C138((uint64_t)v8, v33);
          *(void *)v94 = v81;
          *(void *)(a1 + 168) = v82;
          if (!v81) {
            goto LABEL_156;
          }
        }
        else
        {
          unint64_t v32 = v8 + 2;
LABEL_50:
          *(void *)v94 = v32;
          *(void *)(a1 + 168) = v33;
        }
        goto LABEL_81;
      case 0xCu:
        if (v9 == 96)
        {
          uint64_t v35 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)v94 = v35 + 1;
            unint64_t v36 = *(unsigned __int8 *)(v35 + 1);
            uint64_t v37 = (char *)(v35 + 2);
            if (*(char *)(v35 + 1) < 0)
            {
              int v38 = *v37;
              int v39 = v36 + (v38 << 7);
              unint64_t v36 = (v39 - 128);
              if (v38 < 0)
              {
                *(void *)v94 = sub_188C138(v35 + 1, (v39 - 128));
                if (!*(void *)v94) {
                  goto LABEL_156;
                }
                unint64_t v36 = v42;
                goto LABEL_57;
              }
              uint64_t v37 = (char *)(v35 + 3);
            }
            *(void *)v94 = v37;
LABEL_57:
            if (v36 > 0xE)
            {
              if (*v93) {
                int v43 = (std::string *)((*v93 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v43 = (std::string *)sub_188DBD8(v93);
              }
              sub_188C020(12, v36, v43);
            }
            else
            {
              uint64_t v40 = *(unsigned int *)(a1 + 24);
              if (v40 == *(_DWORD *)(a1 + 28))
              {
                int v41 = v40 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v40 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v40) = v36;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v40) = v36;
                int v41 = v40 + 1;
              }
              *(_DWORD *)(a1 + 24) = v41;
            }
            uint64_t v35 = *(void *)v94;
            if (*(void *)a3 <= *(void *)v94 || **(unsigned char **)v94 != 96) {
              goto LABEL_81;
            }
          }
        }
        if (v9 == 98)
        {
          *(void *)&long long v95 = a1 + 24;
          *((void *)&v95 + 1) = sub_149F9E0;
          uint64_t v96 = a1 + 8;
          int v97 = 12;
          unint64_t v31 = sub_1112E88((uint64_t)a3, v8, &v95);
          goto LABEL_44;
        }
LABEL_146:
        if (v9) {
          BOOL v91 = (v9 & 7) == 4;
        }
        else {
          BOOL v91 = 1;
        }
        if (!v91)
        {
          if (*v93)
          {
            v92 = (std::string *)((*v93 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v92 = (std::string *)sub_188DBD8(v93);
            uint64_t v8 = *(char **)v94;
          }
          unint64_t v31 = sub_1885AC0(v9, v92, v8, a3);
LABEL_44:
          *(void *)v94 = v31;
          if (!v31) {
            goto LABEL_156;
          }
LABEL_81:
          if (sub_11947B8((uint64_t)a3, (char **)v94, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_156:
        }
          *(void *)v94 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v94;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_146;
        }
        v5 |= 0x100u;
        uint64_t v44 = v8 + 1;
        uint64_t v45 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        int v46 = *v44;
        uint64_t v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v83 = sub_188C138((uint64_t)v8, v45);
          *(void *)v94 = v83;
          *(unsigned char *)(a1 + 164) = v84 != 0;
          if (!v83) {
            goto LABEL_156;
          }
        }
        else
        {
          uint64_t v44 = v8 + 2;
LABEL_75:
          *(void *)v94 = v44;
          *(unsigned char *)(a1 + 164) = v45 != 0;
        }
        goto LABEL_81;
      case 0xEu:
        if (v9 != 113) {
          goto LABEL_146;
        }
        uint64_t v47 = *(void *)v8;
        uint64_t v24 = v8 + 8;
        v5 |= 0x400u;
        *(void *)(a1 + 176) = v47;
        goto LABEL_80;
      case 0xFu:
        if (v9 != 121) {
          goto LABEL_146;
        }
        uint64_t v48 = *(void *)v8;
        uint64_t v24 = v8 + 8;
        v5 |= 0x800u;
        *(void *)(a1 + 184) = v48;
LABEL_80:
        *(void *)v94 = v24;
        goto LABEL_81;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_146;
        }
        v5 |= 0x1000u;
        uint64_t v49 = v8 + 1;
        uint64_t v50 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_87;
        }
        int v51 = *v49;
        uint64_t v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v85 = sub_188C138((uint64_t)v8, v50);
          *(void *)v94 = v85;
          *(void *)(a1 + 192) = v86;
          if (!v85) {
            goto LABEL_156;
          }
        }
        else
        {
          uint64_t v49 = v8 + 2;
LABEL_87:
          *(void *)v94 = v49;
          *(void *)(a1 + 192) = v50;
        }
        goto LABEL_81;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_146;
        }
        v5 |= 0x2000u;
        BOOL v52 = v8 + 1;
        uint64_t v53 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_92;
        }
        int v54 = *v52;
        uint64_t v53 = v53 + (v54 << 7) - 128;
        if (v54 < 0)
        {
          uint64_t v87 = sub_188C138((uint64_t)v8, v53);
          *(void *)v94 = v87;
          *(void *)(a1 + 200) = v88;
          if (!v87) {
            goto LABEL_156;
          }
        }
        else
        {
          BOOL v52 = v8 + 2;
LABEL_92:
          *(void *)v94 = v52;
          *(void *)(a1 + 200) = v53;
        }
        goto LABEL_81;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_146;
        }
        int v55 = v8 - 2;
        while (1)
        {
          long long v56 = (char *)(v55 + 2);
          *(void *)v94 = v55 + 2;
          uint64_t v57 = *(_DWORD **)(a1 + 56);
          if (v57 && (uint64_t v58 = *(int *)(a1 + 48), (int)v58 < *v57))
          {
            *(_DWORD *)(a1 + 48) = v58 + 1;
            uint64_t v59 = *(std::string **)&v57[2 * v58 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v61 = v60;
            v61[1] = sub_3A6EDC;
            *int v60 = 0;
            v60[1] = 0;
            v60[2] = 0;
            uint64_t v59 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v60);
            long long v56 = *(char **)v94;
          }
          int v55 = sub_188C244(v59, v56, (uint64_t)a3);
          *(void *)v94 = v55;
          if (!v55) {
            goto LABEL_156;
          }
          if (*(void *)a3 <= (unint64_t)v55 || *(_WORD *)v55 != 402) {
            goto LABEL_81;
          }
        }
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_146;
        }
        uint64_t v62 = v8 - 2;
        while (1)
        {
          BOOL v63 = (unsigned __int8 *)(v62 + 2);
          *(void *)v94 = v62 + 2;
          BOOL v64 = *(_DWORD **)(a1 + 80);
          if (v64 && (uint64_t v65 = *(int *)(a1 + 72), (int)v65 < *v64))
          {
            *(_DWORD *)(a1 + 72) = v65 + 1;
            uint64_t v66 = *(void *)&v64[2 * v65 + 2];
          }
          else
          {
            uint64_t v67 = sub_14A23B8(*(void *)(a1 + 64));
            uint64_t v66 = sub_188CDC8(a1 + 64, (uint64_t)v67);
            BOOL v63 = *(unsigned __int8 **)v94;
          }
          uint64_t v62 = (char *)sub_11EAAEC(a3, v66, v63);
          *(void *)v94 = v62;
          if (!v62) {
            goto LABEL_156;
          }
          if (*(void *)a3 <= (unint64_t)v62 || *(_WORD *)v62 != 410) {
            goto LABEL_81;
          }
        }
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_146;
        }
        uint64_t v68 = v8 - 2;
        while (1)
        {
          uint64_t v69 = (unsigned __int8 *)(v68 + 2);
          *(void *)v94 = v68 + 2;
          uint64_t v70 = *(_DWORD **)(a1 + 104);
          if (v70 && (uint64_t v71 = *(int *)(a1 + 96), (int)v71 < *v70))
          {
            *(_DWORD *)(a1 + 96) = v71 + 1;
            uint64_t v72 = *(void *)&v70[2 * v71 + 2];
          }
          else
          {
            uint64_t v73 = sub_14D520C(*(void *)(a1 + 88));
            uint64_t v72 = sub_188CDC8(a1 + 88, v73);
            uint64_t v69 = *(unsigned __int8 **)v94;
          }
          uint64_t v68 = (char *)sub_14A648C(a3, v72, v69);
          *(void *)v94 = v68;
          if (!v68) {
            goto LABEL_156;
          }
          if (*(void *)a3 <= (unint64_t)v68 || *(_WORD *)v68 != 418) {
            goto LABEL_81;
          }
        }
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_146;
        }
        v5 |= 0x4000u;
        uint64_t v74 = v8 + 1;
        uint64_t v75 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_129;
        }
        int v76 = *v74;
        uint64_t v75 = v75 + (v76 << 7) - 128;
        if (v76 < 0)
        {
          uint64_t v89 = sub_188C138((uint64_t)v8, v75);
          *(void *)v94 = v89;
          *(void *)(a1 + 208) = v90;
          if (!v89) {
            goto LABEL_156;
          }
        }
        else
        {
          uint64_t v74 = v8 + 2;
LABEL_129:
          *(void *)v94 = v74;
          *(void *)(a1 + 208) = v75;
        }
        goto LABEL_81;
      default:
        goto LABEL_146;
    }
  }
}

char *sub_14C732C(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 144);
  *int v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 4) != 0) {
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 152);
    *int v4 = 40;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v13 = *(_DWORD *)(a1 + 148);
    *int v4 = 53;
    *(_DWORD *)(v4 + 1) = v13;
    v4 += 5;
    if ((v6 & 0x80) == 0)
    {
LABEL_24:
      if ((v6 & 0x8000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_35;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v14 = *(_DWORD *)(a1 + 160);
  *int v4 = 61;
  *(_DWORD *)(v4 + 1) = v14;
  v4 += 5;
  if ((v6 & 0x8000) == 0)
  {
LABEL_25:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_38;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 216);
  *int v4 = 65;
  *(void *)(v4 + 1) = v15;
  v4 += 9;
  if ((v6 & 0x10000) == 0)
  {
LABEL_26:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_41;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 224);
  *int v4 = 73;
  *(void *)(v4 + 1) = v16;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_27:
    if ((v6 & 0x200) == 0) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v17 = *(void *)(a1 + 168);
  *int v4 = 88;
  v4[1] = v17;
  if (v17 > 0x7F)
  {
    v4[1] = v17 | 0x80;
    unint64_t v18 = v17 >> 7;
    v4[2] = v17 >> 7;
    v4 += 3;
    if (v17 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v19 = v18 >> 14;
        v18 >>= 7;
        *v4++ = v18;
      }
      while (v19);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_48:
  uint64_t v20 = *(unsigned int *)(a1 + 24);
  if ((int)v20 >= 1)
  {
    for (uint64_t i = 0; i != v20; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v22 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *int v4 = 96;
      v4[1] = v22;
      if (v22 > 0x7F)
      {
        v4[1] = v22 | 0x80;
        unint64_t v23 = v22 >> 7;
        v4[2] = v22 >> 7;
        v4 += 3;
        if (v22 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v24 = v23 >> 14;
            v23 >>= 7;
            *v4++ = v23;
          }
          while (v24);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 164);
    *int v4 = 104;
    v4[1] = v25;
    v4 += 2;
    if ((v6 & 0x400) == 0)
    {
LABEL_59:
      if ((v6 & 0x800) == 0) {
        goto LABEL_60;
      }
      goto LABEL_68;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_59;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 176);
  *int v4 = 113;
  *(void *)(v4 + 1) = v26;
  v4 += 9;
  if ((v6 & 0x800) == 0)
  {
LABEL_60:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_71;
  }
LABEL_68:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v27 = *(void *)(a1 + 184);
  *int v4 = 121;
  *(void *)(v4 + 1) = v27;
  v4 += 9;
  if ((v6 & 0x1000) != 0)
  {
LABEL_71:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(void *)(a1 + 192);
    *(_WORD *)int v4 = 384;
    v4[2] = v28;
    if (v28 > 0x7F)
    {
      v4[2] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[3] = v28 >> 7;
      v4 += 4;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_77:
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(void *)(a1 + 200);
    *(_WORD *)int v4 = 392;
    v4[2] = v31;
    if (v31 > 0x7F)
    {
      v4[2] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[3] = v31 >> 7;
      v4 += 4;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v34 = *(unsigned int *)(a1 + 48);
  if ((int)v34 >= 1)
  {
    uint64_t v35 = 0;
    uint64_t v36 = 8 * v34;
    do
    {
      uint64_t v37 = *(void **)(*(void *)(a1 + 56) + v35 + 8);
      if (*((char *)v37 + 23) < 0)
      {
        int64_t v38 = v37[1];
        if (v38 > 127) {
          goto LABEL_95;
        }
      }
      else
      {
        int64_t v38 = *((unsigned __int8 *)v37 + 23);
      }
      if (*a3 - (void)v4 + 13 >= v38)
      {
        *(_WORD *)int v4 = 402;
        v4[2] = v38;
        if (*((char *)v37 + 23) < 0) {
          uint64_t v37 = (void *)*v37;
        }
        int v39 = v4 + 3;
        memcpy(v39, v37, v38);
        int v4 = &v39[v38];
        goto LABEL_93;
      }
LABEL_95:
      int v4 = (char *)sub_188A868(a3, 18, (uint64_t)v37, v4);
LABEL_93:
      v35 += 8;
    }
    while (v36 != v35);
  }
  int v40 = *(_DWORD *)(a1 + 72);
  if (v40)
  {
    for (int j = 0; j != v40; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v42 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *(_WORD *)int v4 = 410;
      unsigned int v43 = *(_DWORD *)(v42 + 20);
      v4[2] = v43;
      if (v43 > 0x7F) {
        uint64_t v44 = sub_188A9CC(v43, v4 + 2);
      }
      else {
        uint64_t v44 = v4 + 3;
      }
      int v4 = sub_149FD00(v42, v44, a3);
    }
  }
  int v45 = *(_DWORD *)(a1 + 96);
  if (v45)
  {
    for (int k = 0; k != v45; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v47 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      *(_WORD *)int v4 = 418;
      unsigned int v48 = *(_DWORD *)(v47 + 20);
      v4[2] = v48;
      if (v48 > 0x7F) {
        uint64_t v49 = sub_188A9CC(v48, v4 + 2);
      }
      else {
        uint64_t v49 = v4 + 3;
      }
      int v4 = sub_14A5DAC(v47, v49, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v50 = *(void *)(a1 + 208);
    *(_WORD *)int v4 = 424;
    v4[2] = v50;
    if (v50 > 0x7F)
    {
      v4[2] = v50 | 0x80;
      unint64_t v51 = v50 >> 7;
      v4[3] = v50 >> 7;
      v4 += 4;
      if (v50 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v52 = v51 >> 14;
          v51 >>= 7;
          *v4++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v53 = *(void *)(a1 + 8);
  if ((v53 & 1) == 0) {
    return v4;
  }
  unint64_t v55 = v53 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v55 + 31) < 0)
  {
    long long v56 = *(void **)(v55 + 8);
    uint64_t v57 = *(void *)(v55 + 16);
  }
  else
  {
    long long v56 = (void *)(v55 + 8);
    LODWORD(v57) = *(unsigned __int8 *)(v55 + 31);
  }
  if (*a3 - (void)v4 >= (int)v57)
  {
    uint64_t v58 = (int)v57;
    memcpy(v4, v56, (int)v57);
    v4 += v58;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v56, v57, v4);
}

uint64_t sub_14C7B60(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  uint64_t v9 = v7 + 2 * v8;
  if ((int)v8 >= 1)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 72);
  uint64_t v15 = v9 + 2 * v14;
  uint64_t v16 = *(void *)(a1 + 80);
  if (v16) {
    unint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    unint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_149FDEC(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(int *)(a1 + 96);
  uint64_t v22 = v15 + 2 * v21;
  uint64_t v23 = *(void *)(a1 + 104);
  if (v23) {
    unint64_t v24 = (uint64_t *)(v23 + 8);
  }
  else {
    unint64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_14A5F70(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  int v28 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v28)
  {
    if (v28)
    {
      unint64_t v36 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
      uint64_t v38 = *(void *)(v36 + 8);
      if ((v37 & 0x80u) == 0) {
        uint64_t v38 = v37;
      }
      v22 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v28 & 2) == 0)
      {
LABEL_29:
        if ((v28 & 4) == 0) {
          goto LABEL_30;
        }
        goto LABEL_70;
      }
    }
    else if ((v28 & 2) == 0)
    {
      goto LABEL_29;
    }
    unint64_t v39 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
    uint64_t v41 = *(void *)(v39 + 8);
    if ((v40 & 0x80u) == 0) {
      uint64_t v41 = v40;
    }
    v22 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 4) == 0)
    {
LABEL_30:
      if ((v28 & 8) == 0) {
        goto LABEL_31;
      }
      goto LABEL_73;
    }
LABEL_70:
    unint64_t v42 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
    uint64_t v44 = *(void *)(v42 + 8);
    if ((v43 & 0x80u) == 0) {
      uint64_t v44 = v43;
    }
    v22 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 8) == 0)
    {
LABEL_31:
      if ((v28 & 0x10) == 0)
      {
LABEL_36:
        uint64_t v32 = v22 + 5;
        if ((v28 & 0x20) == 0) {
          uint64_t v32 = v22;
        }
        if ((v28 & 0x40) != 0) {
          v32 += ((9 * (__clz(*(void *)(a1 + 152) | 1) ^ 0x3F) + 73) >> 6) + 1;
        }
        if ((v28 & 0x80) != 0) {
          uint64_t v22 = v32 + 5;
        }
        else {
          uint64_t v22 = v32;
        }
        goto LABEL_43;
      }
LABEL_32:
      int v29 = *(_DWORD *)(a1 + 144);
      uint64_t v30 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v29 >= 0) {
        uint64_t v31 = v30;
      }
      else {
        uint64_t v31 = 11;
      }
      v22 += v31;
      goto LABEL_36;
    }
LABEL_73:
    unint64_t v45 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
    uint64_t v47 = *(void *)(v45 + 8);
    if ((v46 & 0x80u) == 0) {
      uint64_t v47 = v46;
    }
    v22 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 0x10) == 0) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_43:
  if ((v28 & 0xFF00) != 0)
  {
    uint64_t v33 = v22 + 2;
    if ((v28 & 0x100) == 0) {
      uint64_t v33 = v22;
    }
    if ((v28 & 0x200) != 0) {
      v33 += ((9 * (__clz(*(void *)(a1 + 168) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v28 & 0x400) != 0) {
      v33 += 9;
    }
    if ((v28 & 0x800) != 0) {
      v33 += 9;
    }
    if ((v28 & 0x1000) != 0)
    {
      v33 += ((9 * (__clz(*(void *)(a1 + 192) | 1) ^ 0x3F) + 73) >> 6) + 2;
      if ((v28 & 0x2000) == 0)
      {
LABEL_54:
        if ((v28 & 0x4000) == 0) {
          goto LABEL_56;
        }
        goto LABEL_55;
      }
    }
    else if ((v28 & 0x2000) == 0)
    {
      goto LABEL_54;
    }
    v33 += ((9 * (__clz(*(void *)(a1 + 200) | 1) ^ 0x3F) + 73) >> 6) + 2;
    if ((v28 & 0x4000) == 0)
    {
LABEL_56:
      if ((v28 & 0x8000) != 0) {
        uint64_t v22 = v33 + 9;
      }
      else {
        uint64_t v22 = v33;
      }
      goto LABEL_59;
    }
LABEL_55:
    v33 += ((9 * (__clz(*(void *)(a1 + 208) | 1) ^ 0x3F) + 73) >> 6) + 2;
    goto LABEL_56;
  }
LABEL_59:
  if ((v28 & 0x10000) != 0) {
    uint64_t result = v22 + 9;
  }
  else {
    uint64_t result = v22;
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if (v35)
  {
    unint64_t v48 = v35 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v48 + 31) < 0) {
      uint64_t v49 = *(void *)(v48 + 16);
    }
    else {
      uint64_t v49 = *(unsigned __int8 *)(v48 + 31);
    }
    result += v49;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14C7F88(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    unint64_t v10 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v10, v9, v8, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v11 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v8;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v11;
    uint64_t v12 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = sub_122BB8C((std::string *)((char *)v3 + 64), v15, v14, v13, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v16 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v13;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v16;
    unint64_t v17 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v17 < v16) {
      *unint64_t v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 96);
  if (v18)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v20 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 96));
    uint64_t result = (std::string *)sub_14DE8F0((uint64_t *)&v3[3].__r_.__value_.__r.__words[2], v20, v19, v18, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    int v21 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v18;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v21;
    uint64_t v22 = (int *)v3[4].__r_.__value_.__l.__size_;
    if (*v22 < v21) {
      int *v22 = v21;
    }
  }
  int v23 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v23)
  {
    if (v23)
    {
      uint64_t v26 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v27 = v3->__r_.__value_.__l.__size_;
      int v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        int v28 = (uint64_t *)*v28;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v26, v28);
      if ((v23 & 2) == 0)
      {
LABEL_15:
        if ((v23 & 4) == 0) {
          goto LABEL_16;
        }
        goto LABEL_46;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_15;
    }
    int v29 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v30 = v3->__r_.__value_.__l.__size_;
    uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (uint64_t *)*v31;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[5], v29, v31);
    if ((v23 & 4) == 0)
    {
LABEL_16:
      if ((v23 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_49;
    }
LABEL_46:
    uint64_t v32 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v33 = v3->__r_.__value_.__l.__size_;
    uint64_t v34 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      uint64_t v34 = (uint64_t *)*v34;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__l.__size_, v32, v34);
    if ((v23 & 8) == 0)
    {
LABEL_17:
      if ((v23 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_52;
    }
LABEL_49:
    uint64_t v35 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v36 = v3->__r_.__value_.__l.__size_;
    uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (uint64_t *)*v37;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__r.__words[2], v35, v37);
    if ((v23 & 0x10) == 0)
    {
LABEL_18:
      if ((v23 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_53;
    }
LABEL_52:
    LODWORD(v3[6].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 144);
    if ((v23 & 0x20) == 0)
    {
LABEL_19:
      if ((v23 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_54;
    }
LABEL_53:
    HIDWORD(v3[6].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 148);
    if ((v23 & 0x40) == 0)
    {
LABEL_20:
      if ((v23 & 0x80) == 0)
      {
LABEL_22:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v23;
        goto LABEL_23;
      }
LABEL_21:
      LODWORD(v3[6].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 160);
      goto LABEL_22;
    }
LABEL_54:
    v3[6].__r_.__value_.__l.__size_ = *(void *)(a2 + 152);
    if ((v23 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_23:
  if ((v23 & 0xFF00) == 0) {
    goto LABEL_34;
  }
  if ((v23 & 0x100) != 0)
  {
    v3[6].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 164);
    if ((v23 & 0x200) == 0)
    {
LABEL_26:
      if ((v23 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_58;
    }
  }
  else if ((v23 & 0x200) == 0)
  {
    goto LABEL_26;
  }
  v3[7].__r_.__value_.__r.__words[0] = *(void *)(a2 + 168);
  if ((v23 & 0x400) == 0)
  {
LABEL_27:
    if ((v23 & 0x800) == 0) {
      goto LABEL_28;
    }
    goto LABEL_59;
  }
LABEL_58:
  v3[7].__r_.__value_.__l.__size_ = *(void *)(a2 + 176);
  if ((v23 & 0x800) == 0)
  {
LABEL_28:
    if ((v23 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_60;
  }
LABEL_59:
  v3[7].__r_.__value_.__r.__words[2] = *(void *)(a2 + 184);
  if ((v23 & 0x1000) == 0)
  {
LABEL_29:
    if ((v23 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_61;
  }
LABEL_60:
  v3[8].__r_.__value_.__r.__words[0] = *(void *)(a2 + 192);
  if ((v23 & 0x2000) == 0)
  {
LABEL_30:
    if ((v23 & 0x4000) == 0) {
      goto LABEL_31;
    }
LABEL_62:
    v3[8].__r_.__value_.__r.__words[2] = *(void *)(a2 + 208);
    if ((v23 & 0x8000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_61:
  v3[8].__r_.__value_.__l.__size_ = *(void *)(a2 + 200);
  if ((v23 & 0x4000) != 0) {
    goto LABEL_62;
  }
LABEL_31:
  if ((v23 & 0x8000) != 0) {
LABEL_32:
  }
    v3[9].__r_.__value_.__r.__words[0] = *(void *)(a2 + 216);
LABEL_33:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v23;
LABEL_34:
  if ((v23 & 0x10000) != 0)
  {
    std::string::size_type v24 = *(void *)(a2 + 224);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10000u;
    v3[9].__r_.__value_.__l.__size_ = v24;
  }
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14C8348()
{
  return 1;
}

void *sub_14C8350@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.TriggerFeature");
}

uint64_t sub_14C8360(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  int v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_14DE470((void *)(a1 + 48));
  sub_14DE170((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C8430(uint64_t a1)
{
  sub_14C8360(a1);

  operator delete();
}

uint64_t sub_14C8468(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A49DC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14C6840(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v8 & 2) == 0) {
          goto LABEL_19;
        }
        goto LABEL_14;
      }
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
    if ((v8 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_14:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
    }
  }
LABEL_19:
  if ((v8 & 0xC) != 0)
  {
    *(unsigned char *)(v1 + 92) = 0;
    *(_DWORD *)(v1 + 88) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_14C8588(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 13) {
          goto LABEL_45;
        }
        v5 |= 4u;
        *(_DWORD *)(a1 + 88) = *(_DWORD *)v8;
        *(void *)uint64_t v37 = v8 + 4;
        goto LABEL_53;
      case 2u:
        if (v9 != 18) {
          goto LABEL_45;
        }
        char v12 = v8 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)uint64_t v37 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            unint64_t v17 = sub_14D506C(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            int v13 = *(unsigned __int8 **)v37;
          }
          char v12 = sub_14BCC20(a3, v16, v13);
          *(void *)uint64_t v37 = v12;
          if (!v12) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_53;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_45;
        }
        int v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          *(void *)uint64_t v37 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            sub_14D6CC8(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, v23);
            uint64_t v19 = *(unsigned __int8 **)v37;
          }
          int v18 = (char *)sub_14C8934(a3, v22, v19);
          *(void *)uint64_t v37 = v18;
          if (!v18) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_53;
          }
        }
      case 4u:
        if (v9 != 32) {
          goto LABEL_45;
        }
        v5 |= 8u;
        std::string::size_type v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v37 = v35;
          *(unsigned char *)(a1 + 92) = v36 != 0;
          if (!v35) {
            goto LABEL_60;
          }
        }
        else
        {
          std::string::size_type v24 = v8 + 2;
LABEL_35:
          *(void *)uint64_t v37 = v24;
          *(unsigned char *)(a1 + 92) = v25 != 0;
        }
        goto LABEL_53;
      case 5u:
        if (v9 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        int v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          int v28 = (uint64_t *)*v28;
        }
        int v29 = (void *)(a1 + 72);
        goto LABEL_44;
      case 6u:
        if (v9 != 50) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v30 = *(void *)(a1 + 8);
        int v28 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          int v28 = (uint64_t *)*v28;
        }
        int v29 = (void *)(a1 + 80);
LABEL_44:
        uint64_t v31 = (std::string *)sub_1880F84(v29, v28);
        uint64_t v32 = (void *)sub_188C244(v31, *(char **)v37, (uint64_t)a3);
        goto LABEL_52;
      default:
LABEL_45:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v37;
          }
          uint64_t v32 = sub_1885AC0(v9, v34, v8, a3);
LABEL_52:
          *(void *)uint64_t v37 = v32;
          if (!v32) {
            goto LABEL_60;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_60:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

uint64_t sub_14C8934(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C6A08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14C89C4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 88);
    *uint64_t v4 = 13;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  int v8 = *(_DWORD *)(a1 + 32);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v11 = *(_DWORD *)(v10 + 20);
      v4[1] = v11;
      if (v11 > 0x7F) {
        char v12 = sub_188A9CC(v11, v4 + 1);
      }
      else {
        char v12 = v4 + 2;
      }
      uint64_t v4 = sub_14A4BAC(v10, (unint64_t)v12, a3);
    }
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int j = 0; j != v13; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_14C732C(v15, v17, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 92);
    *uint64_t v4 = 32;
    v4[1] = v20;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_23:
      if ((v6 & 2) == 0) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) != 0) {
LABEL_24:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_25:
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_14C8C4C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A4D58(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14C7B60(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      unint64_t v19 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v22 = v9 + 5;
    if ((v15 & 4) == 0) {
      uint64_t v22 = v9;
    }
    if ((v15 & 8) != 0) {
      uint64_t v9 = v22 + 2;
    }
    else {
      uint64_t v9 = v22;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v9 += v26;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_14C8DF8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DEF40((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_14DF268((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      unint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_24;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 80), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
      goto LABEL_13;
    }
LABEL_24:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_14C8FD4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_14C900C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryInterpretationMetadata");
}

void *sub_14C901C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DE4F0(a1 + 10);
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C90B4(void *a1)
{
  sub_14C901C(a1);

  operator delete();
}

uint64_t sub_14C90EC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 88);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_14A7068(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 88) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_WORD *)(v6 + 96) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_14C9180(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v54 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v54, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v53 = (uint64_t *)(a1 + 8);
  char v7 = (unsigned int *)(a1 + 48);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    int v9 = (char *)(*(void *)v54 + 1);
    unsigned int v10 = **(unsigned char **)v54;
    if ((char)**(unsigned char **)v54 < 0)
    {
      int v11 = *v9;
      unsigned int v12 = v10 + (v11 << 7);
      unsigned int v10 = v12 - 128;
      if (v11 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v54, v12 - 128);
        unsigned int v10 = v13;
      }
      else
      {
        int v9 = (char *)(*(void *)v54 + 2);
      }
    }
    *(void *)int v54 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_77;
        }
        int v14 = v9 - 1;
        while (1)
        {
          uint64_t v15 = (char *)(v14 + 1);
          *(void *)int v54 = v14 + 1;
          unint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(std::string **)&v16[2 * v17 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v20 = v19;
            v20[1] = sub_3A6EDC;
            void *v19 = 0;
            v19[1] = 0;
            int v19[2] = 0;
            uint64_t v18 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v19);
            uint64_t v15 = *(char **)v54;
          }
          int v14 = sub_188C244(v18, v15, (uint64_t)a3);
          *(void *)int v54 = v14;
          if (!v14) {
            goto LABEL_90;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 10) {
            goto LABEL_85;
          }
        }
      case 2u:
        if (v10 != 16) {
          goto LABEL_77;
        }
        v5 |= 1u;
        uint64_t v21 = v9 + 1;
        uint64_t v22 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v9, v22);
          *(void *)int v54 = v46;
          *(unsigned char *)(a1 + 104) = v47 != 0;
          if (!v46) {
            goto LABEL_90;
          }
        }
        else
        {
          uint64_t v21 = v9 + 2;
LABEL_25:
          *(void *)int v54 = v21;
          *(unsigned char *)(a1 + 104) = v22 != 0;
        }
        goto LABEL_85;
      case 3u:
        if (v10 != 24) {
          goto LABEL_77;
        }
        v5 |= 2u;
        uint64_t v24 = v9 + 1;
        uint64_t v25 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v9, v25);
          *(void *)int v54 = v48;
          *(unsigned char *)(a1 + 105) = v49 != 0;
          if (!v48) {
            goto LABEL_90;
          }
        }
        else
        {
          uint64_t v24 = v9 + 2;
LABEL_30:
          *(void *)int v54 = v24;
          *(unsigned char *)(a1 + 105) = v25 != 0;
        }
        goto LABEL_85;
      case 4u:
        if (v10 == 33)
        {
          uint64_t v27 = v9 - 1;
          unsigned int v28 = *v7;
          do
          {
            uint64_t v29 = (uint64_t)(v27 + 1);
            *(void *)int v54 = v27 + 1;
            uint64_t v30 = *(void *)(v27 + 1);
            if (v28 == *(_DWORD *)(a1 + 52))
            {
              sub_188CA54((unsigned int *)(a1 + 48), v28 + 1);
              *(void *)(*(void *)(a1 + 56) + 8 * v28) = v30;
              uint64_t v29 = *(void *)v54;
            }
            else
            {
              *(void *)(*(void *)(a1 + 56) + 8 * v28) = v30;
            }
            unsigned int *v7 = ++v28;
            uint64_t v27 = (char *)(v29 + 8);
            *(void *)int v54 = v29 + 8;
          }
          while (*(void *)a3 > (unint64_t)(v29 + 8) && *v27 == 33);
LABEL_85:
          if (sub_11947B8((uint64_t)a3, (char **)v54, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v10 == 34)
        {
          unint64_t v50 = (void *)sub_188C3D4(a1 + 48, v9, a3);
          goto LABEL_84;
        }
LABEL_77:
        if (v10) {
          BOOL v51 = (v10 & 7) == 4;
        }
        else {
          BOOL v51 = 1;
        }
        if (!v51)
        {
          if (*v53)
          {
            unint64_t v52 = (std::string *)((*v53 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v52 = (std::string *)sub_188DBD8(v53);
            int v9 = *(char **)v54;
          }
          unint64_t v50 = sub_1885AC0(v10, v52, v9, a3);
          goto LABEL_84;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_90:
        }
          *(void *)int v54 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v54;
      case 5u:
        if (v10 != 40)
        {
          if (v10 != 42) {
            goto LABEL_77;
          }
          *(void *)&long long v55 = a1 + 64;
          *((void *)&v55 + 1) = sub_14A48DC;
          uint64_t v56 = a1 + 8;
          int v57 = 5;
          unint64_t v50 = sub_1112E88((uint64_t)a3, v9, &v55);
LABEL_84:
          *(void *)int v54 = v50;
          if (!v50) {
            goto LABEL_90;
          }
          goto LABEL_85;
        }
        uint64_t v31 = (uint64_t)(v9 - 1);
        while (1)
        {
          *(void *)int v54 = v31 + 1;
          unint64_t v32 = *(unsigned __int8 *)(v31 + 1);
          BOOL v33 = (char *)(v31 + 2);
          if (*(char *)(v31 + 1) < 0)
          {
            int v34 = *v33;
            int v35 = v32 + (v34 << 7);
            unint64_t v32 = (v35 - 128);
            if (v34 < 0)
            {
              *(void *)int v54 = sub_188C138(v31 + 1, (v35 - 128));
              if (!*(void *)v54) {
                goto LABEL_90;
              }
              unint64_t v32 = v38;
              goto LABEL_45;
            }
            BOOL v33 = (char *)(v31 + 3);
          }
          *(void *)int v54 = v33;
LABEL_45:
          if (v32 > 2)
          {
            if (*v53) {
              unint64_t v39 = (std::string *)((*v53 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              unint64_t v39 = (std::string *)sub_188DBD8(v53);
            }
            sub_188C020(5, v32, v39);
          }
          else
          {
            uint64_t v36 = *(unsigned int *)(a1 + 64);
            if (v36 == *(_DWORD *)(a1 + 68))
            {
              int v37 = v36 + 1;
              sub_188C80C((unsigned int *)(a1 + 64), v36 + 1);
              *(_DWORD *)(*(void *)(a1 + 72) + 4 * v36) = v32;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 72) + 4 * v36) = v32;
              int v37 = v36 + 1;
            }
            *(_DWORD *)(a1 + 64) = v37;
          }
          uint64_t v31 = *(void *)v54;
          if (*(void *)a3 <= *(void *)v54 || **(unsigned char **)v54 != 40) {
            goto LABEL_85;
          }
        }
      case 6u:
        if (v10 != 50) {
          goto LABEL_77;
        }
        uint64_t v40 = v9 - 1;
        while (1)
        {
          uint64_t v41 = (unsigned __int8 *)(v40 + 1);
          *(void *)int v54 = v40 + 1;
          unint64_t v42 = *(_DWORD **)(a1 + 96);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 88), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 88) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            unint64_t v45 = sub_14DB564(*(void *)(a1 + 80));
            uint64_t v44 = sub_188CDC8(a1 + 80, (uint64_t)v45);
            uint64_t v41 = *(unsigned __int8 **)v54;
          }
          uint64_t v40 = (char *)sub_14A7DFC(a3, v44, v41);
          *(void *)int v54 = v40;
          if (!v40) {
            goto LABEL_90;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 50) {
            goto LABEL_85;
          }
        }
      default:
        goto LABEL_77;
    }
  }
}

char *sub_14C9728(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v13 = *(unsigned char *)(a1 + 104);
    *__dst = 16;
    __dst[1] = v13;
    __dst += 2;
  }
  if ((v12 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v14 = *(unsigned char *)(a1 + 105);
    *__dst = 24;
    __dst[1] = v14;
    __dst += 2;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 48);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 8 * v15;
    do
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + v16);
      *__dst = 33;
      *(void *)(__dst + 1) = v18;
      __dst += 9;
      v16 += 8;
    }
    while (v17 != v16);
  }
  uint64_t v19 = *(unsigned int *)(a1 + 64);
  if ((int)v19 >= 1)
  {
    for (uint64_t i = 0; i != v19; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v21 = *(int *)(*(void *)(a1 + 72) + 4 * i);
      *__dst = 40;
      __dst[1] = v21;
      if (v21 > 0x7F)
      {
        __dst[1] = v21 | 0x80;
        unint64_t v22 = v21 >> 7;
        __dst[2] = v21 >> 7;
        __dst += 3;
        if (v21 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v23 = v22 >> 14;
            v22 >>= 7;
            *__dst++ = v22;
          }
          while (v23);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v24 = *(_DWORD *)(a1 + 88);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 96) + 8 * j + 8);
      *__dst = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      __dst[1] = v27;
      if (v27 > 0x7F) {
        unsigned int v28 = sub_188A9CC(v27, __dst + 1);
      }
      else {
        unsigned int v28 = __dst + 2;
      }
      __dst = sub_14DB148(v26, v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return __dst;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    unint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(__dst, v32, (int)v33);
    __dst += v34;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, __dst);
}

uint64_t sub_14C9A80(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 64);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v13 = *(int *)(a1 + 88);
  uint64_t v14 = v4 + *(unsigned int *)(a1 + 48) + 8 * *(unsigned int *)(a1 + 48) + v8 + v10 + v13;
  uint64_t v15 = *(void *)(a1 + 96);
  if (v15) {
    uint64_t v16 = (uint64_t *)(v15 + 8);
  }
  else {
    uint64_t v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = sub_14DB2B0(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  int v20 = *(_DWORD *)(a1 + 16);
  uint64_t v21 = v14 + 2;
  if ((v20 & 1) == 0) {
    uint64_t v21 = v14;
  }
  if ((v20 & 2) != 0) {
    v21 += 2;
  }
  if ((v20 & 3) != 0) {
    uint64_t result = v21;
  }
  else {
    uint64_t result = v14;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v24 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    result += v25;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14C9C18(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[2], data_low + v9);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 64);
  if (v12)
  {
    uint64_t v13 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v13 + v12);
    std::string::pointer data = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&data[4 * v13], *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v15 = *(_DWORD *)(a2 + 88);
  if (v15)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v17 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__l.__size_, *(_DWORD *)(a2 + 88));
    uint64_t result = sub_14DF2F4((std::string *)((char *)v3 + 80), v17, v16, v15, *(_DWORD *)v3[4].__r_.__value_.__l.__data_ - LODWORD(v3[3].__r_.__value_.__r.__words[2]));
    int v18 = LODWORD(v3[3].__r_.__value_.__r.__words[2]) + v15;
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = v18;
    uint64_t v19 = (int *)v3[4].__r_.__value_.__l.__data_;
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  int v20 = *(_DWORD *)(a2 + 16);
  if ((v20 & 3) != 0)
  {
    if (v20) {
      v3[4].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 104);
    }
    if ((v20 & 2) != 0) {
      v3[4].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 105);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v20;
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14C9E04(uint64_t a1)
{
  return sub_14C9E0C(a1 + 80);
}

uint64_t sub_14C9E0C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(v2 + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      uint64_t v6 = *(void *)(v4 + 40);
      while ((int)v5 >= 1)
      {
        uint64_t v7 = v5 - 1;
        BOOL v8 = sub_14DA84C(*(void *)(v6 + 8 * v5));
        uint64_t v5 = v7;
        if (!v8) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_14C9E94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryFuzzyMatchV2Metadata");
}

uint64_t sub_14C9EA4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14C9F70(uint64_t a1)
{
  sub_14C9EA4(a1);

  operator delete();
}

uint64_t sub_14C9FA8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x78) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14CA06C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v39 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
    return *(void *)v39;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v39 + 1);
    unsigned int v8 = **(unsigned char **)v39;
    if ((char)**(unsigned char **)v39 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v39, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v39 + 2);
      }
    }
    *(void *)unint64_t v39 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_50;
        }
        int v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)unint64_t v39 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v39) {
            return 0;
          }
          unint64_t v12 = v33;
        }
        else
        {
          int v11 = v7 + 2;
LABEL_13:
          *(void *)unint64_t v39 = v11;
        }
        if (v12 <= 5)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v12;
          goto LABEL_58;
        }
        if (*v6) {
          int v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v38 = 1;
        goto LABEL_80;
      case 2u:
        if (v8 != 18) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 24);
        goto LABEL_49;
      case 3u:
        if (v8 != 24) {
          goto LABEL_50;
        }
        int v18 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v19 = *v18;
        int v20 = v12 + (v19 << 7);
        unint64_t v12 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)unint64_t v39 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v39) {
            return 0;
          }
          unint64_t v12 = v34;
        }
        else
        {
          int v18 = v7 + 2;
LABEL_24:
          *(void *)unint64_t v39 = v18;
        }
        if (sub_138DE04(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 52) = v12;
          goto LABEL_58;
        }
        if (*v6) {
          int v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v38 = 3;
        goto LABEL_80;
      case 4u:
        if (v8 != 32) {
          goto LABEL_50;
        }
        uint64_t v21 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v22 = *v21;
        int v23 = v12 + (v22 << 7);
        unint64_t v12 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)unint64_t v39 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v39) {
            return 0;
          }
          unint64_t v12 = v35;
        }
        else
        {
          uint64_t v21 = v7 + 2;
LABEL_31:
          *(void *)unint64_t v39 = v21;
        }
        if (v12 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 56) = v12;
          goto LABEL_58;
        }
        if (*v6) {
          int v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v38 = 4;
        goto LABEL_80;
      case 5u:
        if (v8 != 42) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_49;
      case 6u:
        if (v8 != 48) {
          goto LABEL_50;
        }
        uint64_t v25 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v26 = *v25;
        int v27 = v12 + (v26 << 7);
        unint64_t v12 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)unint64_t v39 = sub_188C138((uint64_t)v7, (v27 - 128));
          if (!*(void *)v39) {
            return 0;
          }
          unint64_t v12 = v36;
        }
        else
        {
          uint64_t v25 = v7 + 2;
LABEL_42:
          *(void *)unint64_t v39 = v25;
        }
        if (v12 > 2)
        {
          if (*v6) {
            int v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v38 = 6;
LABEL_80:
          sub_188C020(v38, v12, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 60) = v12;
        }
        goto LABEL_58;
      case 7u:
        if (v8 != 58) {
          goto LABEL_50;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 40);
LABEL_49:
        uint64_t v29 = (std::string *)sub_1880F84(v17, v16);
        uint64_t v30 = (void *)sub_188C244(v29, *(char **)v39, (uint64_t)a3);
        goto LABEL_57;
      default:
LABEL_50:
        if (v8) {
          BOOL v31 = (v8 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v6)
          {
            unint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v39;
          }
          uint64_t v30 = sub_1885AC0(v8, v32, v7, a3);
LABEL_57:
          *(void *)unint64_t v39 = v30;
          if (!v30) {
            return 0;
          }
LABEL_58:
          if (sub_11947B8((uint64_t)a3, (char **)v39, a3[11].i32[1])) {
            return *(void *)v39;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v39;
    }
  }
}

unsigned char *sub_14CA4FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    *unint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 56);
    *unint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 60);
    *unint64_t v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_14CA7F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_37;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v12 = *(_DWORD *)(a1 + 48);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v13;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a1 + 52);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v15;
  if ((v1 & 0x20) == 0)
  {
LABEL_16:
    if ((v1 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v17;
  if ((v1 & 0x40) != 0)
  {
LABEL_33:
    int v18 = *(_DWORD *)(a1 + 60);
    if (v18 < 0) {
      uint64_t v19 = 11;
    }
    else {
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v19;
  }
LABEL_37:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v2 += v23;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14CA9FC(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_21:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_26;
    }
LABEL_25:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_26:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14CAB5C()
{
  return 1;
}

void *sub_14CAB64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryDirectionsIntentMetadata");
}

uint64_t sub_14CAB74(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CAC40(uint64_t a1)
{
  sub_14CAB74(a1);

  operator delete();
}

uint64_t sub_14CAC78(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14CAD30(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)unint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      int v18 = (void *)(a1 + 24);
LABEL_32:
      unint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      std::string::size_type v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)unint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)unint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_14CAF20(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_14CB038(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14CB158()
{
  return 1;
}

void *sub_14CB160@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryNormalizerMetadata");
}

uint64_t sub_14CB170(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CB26C(uint64_t a1)
{
  sub_14CB170(a1);

  operator delete();
}

uint64_t sub_14CB2A4(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    unint64_t v4 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    goto LABEL_27;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_12:
  unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
LABEL_5:
  if ((v1 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_20:
  unint64_t v5 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v1 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_27:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v8) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14CB3C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v32 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    return *(void *)v32;
  }
  BOOL v31 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v6 = (char *)(*(void *)v32 + 1);
    unsigned int v7 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        unint64_t v6 = (char *)sub_188C180(*(uint64_t *)v32, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        unint64_t v6 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)unint64_t v32 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_29;
      case 2u:
        if (v7 != 18) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_29;
      case 3u:
        if (v7 != 26) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_29;
      case 4u:
        if (v7 != 34) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
        goto LABEL_29;
      case 5u:
        if (v7 != 42) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
LABEL_29:
        int v18 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v19 = (void *)sub_188C244(v18, *(char **)v32, (uint64_t)a3);
        goto LABEL_30;
      case 6u:
        if (v7 == 48)
        {
          uint64_t v20 = (uint64_t)(v6 - 1);
          while (1)
          {
            *(void *)unint64_t v32 = v20 + 1;
            unint64_t v21 = *(unsigned __int8 *)(v20 + 1);
            unint64_t v22 = (char *)(v20 + 2);
            if (*(char *)(v20 + 1) < 0)
            {
              int v23 = *v22;
              int v24 = v21 + (v23 << 7);
              unint64_t v21 = (v24 - 128);
              if (v23 < 0)
              {
                *(void *)unint64_t v32 = sub_188C138(v20 + 1, (v24 - 128));
                if (!*(void *)v32) {
                  return 0;
                }
                unint64_t v21 = v27;
                goto LABEL_39;
              }
              unint64_t v22 = (char *)(v20 + 3);
            }
            *(void *)unint64_t v32 = v22;
LABEL_39:
            if ((v21 - 1) > 4)
            {
              if (*v31) {
                uint64_t v28 = (std::string *)((*v31 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v28 = (std::string *)sub_188DBD8(v31);
              }
              sub_188C020(6, v21, v28);
            }
            else
            {
              uint64_t v25 = *(unsigned int *)(a1 + 24);
              if (v25 == *(_DWORD *)(a1 + 28))
              {
                int v26 = v25 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v25 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v25) = v21;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v25) = v21;
                int v26 = v25 + 1;
              }
              *(_DWORD *)(a1 + 24) = v26;
            }
            uint64_t v20 = *(void *)v32;
            if (*(void *)a3 <= *(void *)v32 || **(unsigned char **)v32 != 48) {
              goto LABEL_31;
            }
          }
        }
        if (v7 == 50)
        {
          *(void *)&long long v33 = a1 + 24;
          *((void *)&v33 + 1) = sub_14A4914;
          uint64_t v34 = a1 + 8;
          int v35 = 6;
          uint64_t v19 = sub_1112E88((uint64_t)a3, v6, &v33);
LABEL_30:
          *(void *)unint64_t v32 = v19;
          if (!v19) {
            return 0;
          }
LABEL_31:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            return *(void *)v32;
          }
          continue;
        }
LABEL_55:
        if (v7) {
          BOOL v29 = (v7 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v31)
          {
            uint64_t v30 = (std::string *)((*v31 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8(v31);
            unint64_t v6 = *(char **)v32;
          }
          uint64_t v19 = sub_1885AC0(v7, v30, v6, a3);
          goto LABEL_30;
        }
        if (!v6) {
          return 0;
        }
        a3[10].i32[0] = v7 - 1;
        return *(void *)v32;
      default:
        goto LABEL_55;
    }
  }
}

unsigned char *sub_14CB7A0(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_21:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) != 0) {
LABEL_6:
  }
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  uint64_t v7 = *(unsigned int *)(a1 + 24);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v9 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *unint64_t v4 = 48;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_14CB9A8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0x1F) == 0) {
    goto LABEL_18;
  }
  if (v7)
  {
    unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v6 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v7 & 2) == 0)
    {
LABEL_12:
      if ((v7 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v16 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v6 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 4) == 0)
  {
LABEL_13:
    if ((v7 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_26:
  unint64_t v19 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v6 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 8) == 0)
  {
LABEL_14:
    if ((v7 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_29:
  unint64_t v22 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v6 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v7 & 0x10) != 0)
  {
LABEL_15:
    unint64_t v8 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v6 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v25 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v6 += v26;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_14CBBAC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_25;
  }
  if (v8)
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v9, v11);
    if ((v8 & 2) == 0)
    {
LABEL_6:
      if ((v8 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      uint64_t v15 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v15, v17);
      if ((v8 & 8) == 0)
      {
LABEL_8:
        if ((v8 & 0x10) == 0) {
          goto LABEL_25;
        }
        goto LABEL_22;
      }
      goto LABEL_19;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v12 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    uint64_t v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2], v12, v14);
  if ((v8 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v8 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_19:
  uint64_t v18 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v19 = v3->__r_.__value_.__l.__size_;
  uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
  if (v19) {
    uint64_t v20 = (uint64_t *)*v20;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v18, v20);
  if ((v8 & 0x10) != 0)
  {
LABEL_22:
    uint64_t v21 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v21, v23);
  }
LABEL_25:
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14CBD74()
{
  return 1;
}

void *sub_14CBD7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryGeoNormalizerMetadata");
}

uint64_t sub_14CBD8C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_253B0E0)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CBE58(uint64_t a1)
{
  sub_14CBD8C(a1);

  operator delete();
}

uint64_t sub_14CBE90(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_14A7068(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_14CBF28(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)unint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
      uint64_t v15 = (uint64_t)sub_188C244(v18, *(char **)v27, (uint64_t)a3);
      goto LABEL_37;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v23 = *(void **)(a1 + 32);
    if (!v23)
    {
      uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v23 = sub_14DB564((uint64_t)v24);
      *(void *)(a1 + 32) = v23;
      int v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = sub_14A7DFC(a3, (uint64_t)v23, v7);
LABEL_37:
    *(void *)unint64_t v27 = v15;
    if (!v15) {
      goto LABEL_49;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 16)
  {
    std::string::size_type v19 = (char *)(v7 + 1);
    unint64_t v20 = *v7;
    if (((char)*v7 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    int v22 = v20 + (v21 << 7);
    unint64_t v20 = (v22 - 128);
    if (v21 < 0)
    {
      *(void *)unint64_t v27 = sub_188C138((uint64_t)v7, (v22 - 128));
      if (!*(void *)v27) {
        goto LABEL_49;
      }
      unint64_t v20 = v25;
    }
    else
    {
      std::string::size_type v19 = (char *)(v7 + 2);
LABEL_29:
      *(void *)unint64_t v27 = v19;
    }
    if (v20 > 7)
    {
      if (*v6) {
        uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v20, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v20;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_49:
  *(void *)unint64_t v27 = 0;
  return *(void *)v27;
}

char *sub_14CC190(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14DB148(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 40);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_14CC348(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_14DB2B0(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_14CC468(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_14DB564((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253B4F8;
    }
    uint64_t result = sub_14A8F98(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14CC578(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14CC5DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryTokenizerMetadata");
}

uint64_t sub_14CC5EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CC6A4(uint64_t a1)
{
  sub_14CC5EC(a1);

  operator delete();
}

uint64_t sub_14CC6DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14CC75C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  BOOL v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)unint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v7 + 1;
      unint64_t v17 = *v7;
      if (*v7 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)unint64_t v27 = sub_188C138((uint64_t)v7, (v19 - 128));
          if (!*(void *)v27) {
            goto LABEL_48;
          }
          unint64_t v17 = v25;
          goto LABEL_26;
        }
        uint64_t v16 = v7 + 2;
      }
      *(void *)unint64_t v27 = v16;
LABEL_26:
      if (v17 > 2)
      {
        if (*v6) {
          uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(3, v17, v26);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 40) = v17;
      }
      goto LABEL_37;
    }
    if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 8);
        int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          int v21 = (uint64_t *)*v21;
        }
        int v22 = (void *)(a1 + 32);
        goto LABEL_35;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v23 = *(void *)(a1 + 8);
      int v21 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        int v21 = (uint64_t *)*v21;
      }
      int v22 = (void *)(a1 + 24);
LABEL_35:
      uint64_t v24 = (std::string *)sub_1880F84(v22, v21);
      unint64_t v15 = (void *)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
      goto LABEL_36;
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v27;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_36:
    *(void *)unint64_t v27 = v15;
    if (!v15) {
      goto LABEL_48;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_48:
  *(void *)unint64_t v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_14CC9AC(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 40);
  *uint64_t v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14CCB20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_14CCC30()
{
  return 1;
}

void *sub_14CCC38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.QueryTransliteratorMetadata");
}

uint64_t sub_14CCC48(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_253B140 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CCD00(uint64_t a1)
{
  sub_14CCC48(a1);

  operator delete();
}

unsigned char *sub_14CCD38(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  if ((v2 & 6) != 0)
  {
    *((_DWORD *)v1 + 10) = 0;
    *((void *)v1 + 4) = 0;
  }
  char v4 = v1[8];
  unint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_14CCDA4(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    BOOL v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v20 = v8 + 1;
      LODWORD(v19) = *v8;
      if ((v19 & 0x80) == 0) {
        goto LABEL_33;
      }
      int v21 = *v20;
      uint64_t v19 = v19 + (v21 << 7) - 128;
      if ((v21 & 0x80000000) == 0)
      {
        uint64_t v20 = v8 + 2;
LABEL_33:
        BOOL v29 = v20;
        *(_DWORD *)(a1 + 40) = v19;
        goto LABEL_38;
      }
      unint64_t v25 = (char *)sub_188C138((uint64_t)v8, v19);
      BOOL v29 = v25;
      *(_DWORD *)(a1 + 40) = v26;
      if (!v25) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      int v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        int v22 = v8 + 2;
LABEL_37:
        BOOL v29 = v22;
        *(void *)(a1 + 32) = v23;
        goto LABEL_38;
      }
      unint64_t v27 = (char *)sub_188C138((uint64_t)v8, v23);
      BOOL v29 = v27;
      *(void *)(a1 + 32) = v28;
      if (!v27) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      int v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        int v18 = (void *)*v18;
      }
      uint64_t v17 = sub_15C1918((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v8 = v29;
    }
    uint64_t v16 = sub_1198F14(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    BOOL v29 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v29;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  BOOL v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

char *sub_14CCFE8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 40);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14CD1F0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v5 = *(_DWORD *)(a1 + 40);
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v6;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_14CD2E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14CD3CC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14CD3F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.ACHintMetadata.AddressEntry.Entry");
}

uint64_t sub_14CD408(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253B170)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_14CCC48(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_14DE570((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CD4CC(uint64_t a1)
{
  sub_14CD408(a1);

  operator delete();
}

unsigned char *sub_14CD504(unsigned char *result)
{
  int v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = sub_14CCD38(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  if (v1[16]) {
    uint64_t result = sub_14CCD38(*((unsigned char **)v1 + 6));
  }
  char v6 = v1[8];
  uint64_t v5 = v1 + 8;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_14CD594(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v22 = (void *)*v22;
      }
      uint64_t v21 = sub_14D71EC((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    unsigned int v14 = sub_14CD79C(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v23 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_14D71EC(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      uint64_t v15 = sub_14CD79C(a3, v19, v16);
      uint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_14CD79C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CCDA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14CD82C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *int v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_14CCFE8(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *int v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      int v4 = sub_14CCFE8(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_14CD9D8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14CD1F0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_14CD1F0(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_14CDABC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DF380((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_14D71EC((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_253B140;
    }
    sub_14CD2E4(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14CDBE0(uint64_t a1)
{
  uint64_t result = sub_11A0A80(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t v3 = *(void *)(a1 + 48);
    if ((*(unsigned char *)(v3 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(v3 + 24));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_14CDC30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.ACHintMetadata.AddressEntry");
}

void *sub_14CDC40(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CDCB4(void *a1)
{
  sub_14CDC40(a1);

  operator delete();
}

uint64_t sub_14CDCEC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_14CDD04(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_14CDE84(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_14CDFAC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_14CE014()
{
  return 1;
}

void *sub_14CE01C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.ACHintMetadata.BusinessEntry");
}

void *sub_14CE02C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14DE6F0(a1 + 11);
  sub_14DE670(a1 + 8);
  sub_14DE5F0(a1 + 5);
  sub_14DDF70(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14CE0D0(void *a1)
{
  sub_14CE02C(a1);

  operator delete();
}

uint64_t sub_14CE108(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14A0A84(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 48);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_1318B10(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 72);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (unsigned char **)(*(void *)(a1 + 80) + 8);
    do
    {
      unsigned int v10 = *v9++;
      sub_14CD504(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t result = sub_122ABC4(a1 + 88);
  char v13 = *(unsigned char *)(a1 + 8);
  uint64_t v12 = (uint64_t *)(a1 + 8);
  if (v13)
  {
    return sub_188B4AC(v12);
  }
  return result;
}

char *sub_14CE1DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v37 = a2;
  if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
    return v37;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v37 + 1;
    unsigned int v8 = *v37;
    if (*v37 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v37, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v37 + 2;
      }
    }
    int v37 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_49;
        }
        unint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          int v37 = v11 + 1;
          char v13 = *(_DWORD **)(a1 + 32);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 24), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 24) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_14A2564(*(void *)(a1 + 16));
            uint64_t v15 = sub_188CDC8(a1 + 16, v16);
            uint64_t v12 = (unsigned __int8 *)v37;
          }
          unint64_t v11 = (char *)sub_14B79DC(a3, v15, v12);
          int v37 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_56;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_49;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          int v37 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 56);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 48), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 48) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_131BDDC(*(void *)(a1 + 40));
            uint64_t v21 = sub_188CDC8(a1 + 40, v22);
            uint64_t v18 = (unsigned __int8 *)v37;
          }
          uint64_t v17 = (char *)sub_1277414(a3, v21, v18);
          int v37 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_56;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_49;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          int v24 = (unsigned __int8 *)(v23 + 1);
          int v37 = v23 + 1;
          unint64_t v25 = *(_DWORD **)(a1 + 80);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 72), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 72) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_14D726C(*(void *)(a1 + 64));
            uint64_t v27 = sub_188CDC8(a1 + 64, (uint64_t)v28);
            int v24 = (unsigned __int8 *)v37;
          }
          uint64_t v23 = sub_14CE57C(a3, v27, v24);
          int v37 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 26) {
            goto LABEL_56;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_49;
        }
        BOOL v29 = v7 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          int v37 = v29 + 1;
          BOOL v31 = *(_DWORD **)(a1 + 104);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 96), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 96) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_14D7308(*(void *)(a1 + 88));
            uint64_t v33 = sub_188CDC8(a1 + 88, (uint64_t)v34);
            uint64_t v30 = (unsigned __int8 *)v37;
          }
          BOOL v29 = sub_14CE60C(a3, v33, v30);
          int v37 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 34) {
            goto LABEL_56;
          }
        }
      default:
LABEL_49:
        if (v8) {
          BOOL v35 = (v8 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v6)
          {
            unint64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v37;
          }
          int v37 = (char *)sub_1885AC0(v8, v36, v7, a3);
          if (!v37) {
            return 0;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
            return v37;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v37;
    }
  }
}

char *sub_14CE57C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CD594(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14CE60C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CDD04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14CE69C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14A0C68(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1319D58(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_14CD82C(v18, (unint64_t)v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 96);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 104) + 8 * m + 8);
      *__dst = 34;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      __dst[1] = v24;
      if (v24 > 0x7F) {
        unint64_t v25 = sub_188A9CC(v24, __dst + 1);
      }
      else {
        unint64_t v25 = __dst + 2;
      }
      __dst = sub_14CDE84(v23, (unint64_t)v25, a3);
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return __dst;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    BOOL v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    BOOL v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(__dst, v29, (int)v30);
    __dst += v31;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, __dst);
}

uint64_t sub_14CE96C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A0D6C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_131A6A8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_14CD9D8(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 96);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 104);
  if (v24) {
    unint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    unint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      unint64_t v28 = sub_14CDFAC(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if (v29)
  {
    unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v23 += v32;
  }
  *(_DWORD *)(a1 + 112) = v23;
  return v23;
}

void sub_14CEB0C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_14DED20((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_14DF40C((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_14DF498((uint64_t *)(a1 + 64), v16, v15, v14, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v17 = *(_DWORD *)(a1 + 72) + v14;
    *(_DWORD *)(a1 + 72) = v17;
    uint64_t v18 = *(int **)(a1 + 80);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_14DF524((std::string *)(a1 + 88), v21, v20, v19, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v22 = *(_DWORD *)(a1 + 96) + v19;
    *(_DWORD *)(a1 + 96) = v22;
    uint64_t v23 = *(int **)(a1 + 104);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_14CED08(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_131B154(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_14CDBE0(*(void *)(*(void *)(a1 + 80) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

void *sub_14CED88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata.ACHintMetadata");
}

void *sub_14CED98(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14CEE44((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_14DE7F0(a1 + 10);
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_14DE770(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_14CEE44(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 104);
  uint64_t v2 = (void ***)(a1 + 104);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_253B220)
  {
    BOOL v5 = *(void **)(a1 + 120);
    if (v5)
    {
      sub_14B68D8(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_14B8934(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 136);
    if (v7)
    {
      sub_14BA2D8(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 144);
    if (v8)
    {
      sub_14BD980(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 152);
    if (v9)
    {
      sub_14C4F48(v9);
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 160);
    if (v10)
    {
      sub_14C580C(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 168);
    if (v11)
    {
      sub_14C8360(v11);
      operator delete();
    }
    uint64_t v12 = *(void *)(a1 + 176);
    if (v12)
    {
      sub_14C9EA4(v12);
      operator delete();
    }
    uint64_t v13 = *(void *)(a1 + 184);
    if (v13)
    {
      sub_14CAB74(v13);
      operator delete();
    }
    uint64_t v14 = *(void *)(a1 + 192);
    if (v14)
    {
      sub_14CB170(v14);
      operator delete();
    }
    uint64_t v15 = *(void *)(a1 + 200);
    if (v15)
    {
      sub_14CBD8C(v15);
      operator delete();
    }
    uint64_t v16 = *(void *)(a1 + 208);
    if (v16)
    {
      sub_14CC5EC(v16);
      operator delete();
    }
    int v17 = *(void **)(a1 + 216);
    if (v17)
    {
      sub_14C901C(v17);
      operator delete();
    }
    uint64_t v18 = *(void **)(a1 + 224);
    if (v18)
    {
      sub_14BA8D8(v18);
      operator delete();
    }
    int v19 = *(void **)(a1 + 232);
    if (v19)
    {
      sub_14CE02C(v19);
      operator delete();
    }
    uint64_t v20 = *(void *)(a1 + 240);
    if (v20)
    {
      sub_14BAE08(v20);
      operator delete();
    }
    uint64_t v21 = *(void *)(a1 + 248);
    if (v21)
    {
      sub_14CBD8C(v21);
      operator delete();
    }
    int v22 = *(void **)(a1 + 256);
    if (v22)
    {
      sub_14BF6AC(v22);
      operator delete();
    }
    uint64_t v23 = *(void **)(a1 + 264);
    if (v23)
    {
      sub_14BF6AC(v23);
      operator delete();
    }
    uint64_t v24 = *(void *)(a1 + 272);
    if (v24)
    {
      sub_14C0164(v24);
      operator delete();
    }
    unint64_t v25 = *(void **)(a1 + 280);
    if (v25)
    {
      sub_14BD2F4(v25);
      operator delete();
    }
    uint64_t v26 = *(void *)(a1 + 288);
    if (v26)
    {
      sub_14BBEE0(v26);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 296);
    if (result)
    {
      sub_14C1AD4(result);
      operator delete();
    }
  }
  return result;
}

void sub_14CF19C(void *a1)
{
  sub_14CED98(a1);

  operator delete();
}

uint64_t sub_14CF1D4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14B75E0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  *(_DWORD *)(v1 + 64) = 0;
  uint64_t v5 = *(unsigned int *)(v1 + 88);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 96) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14B8108(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 88) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_19;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_67:
    unint64_t v12 = *(void *)(v1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v8 & 4) != 0) {
        goto LABEL_71;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v8 & 4) != 0) {
        goto LABEL_71;
      }
    }
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_72;
  }
  unint64_t v11 = *(void *)(v1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    **(unsigned char **)unint64_t v11 = 0;
    *(void *)(v11 + 8) = 0;
    if ((v8 & 2) != 0) {
      goto LABEL_67;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v8 & 2) != 0) {
      goto LABEL_67;
    }
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_71:
  uint64_t result = sub_14B699C(*(void *)(v1 + 120));
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t result = sub_14B8A48(*(void *)(v1 + 128));
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_74:
    uint64_t result = sub_14BDAC8(*(void *)(v1 + 144));
    if ((v8 & 0x40) == 0)
    {
LABEL_17:
      if ((v8 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_75;
  }
LABEL_73:
  uint64_t result = sub_14BA390(*(void *)(v1 + 136));
  if ((v8 & 0x20) != 0) {
    goto LABEL_74;
  }
LABEL_16:
  if ((v8 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_75:
  uint64_t result = sub_14C504C(*(void *)(v1 + 152));
  if ((v8 & 0x80) != 0) {
LABEL_18:
  }
    uint64_t result = sub_14C58FC(*(void *)(v1 + 160));
LABEL_19:
  if ((v8 & 0xFF00) == 0) {
    goto LABEL_29;
  }
  if ((v8 & 0x100) != 0)
  {
    uint64_t result = sub_14C8468(*(void *)(v1 + 168));
    if ((v8 & 0x200) == 0)
    {
LABEL_22:
      if ((v8 & 0x400) == 0) {
        goto LABEL_23;
      }
      goto LABEL_52;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  uint64_t result = sub_14C9FA8(*(void *)(v1 + 176));
  if ((v8 & 0x400) == 0)
  {
LABEL_23:
    if ((v8 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = sub_14CAC78(*(void *)(v1 + 184));
  if ((v8 & 0x800) == 0)
  {
LABEL_24:
    if ((v8 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = sub_14CB2A4(*(void *)(v1 + 192));
  if ((v8 & 0x1000) == 0)
  {
LABEL_25:
    if ((v8 & 0x2000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = sub_14CBE90(*(void *)(v1 + 200));
  if ((v8 & 0x2000) == 0)
  {
LABEL_26:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = sub_14CC6DC(*(void *)(v1 + 208));
  if ((v8 & 0x4000) == 0)
  {
LABEL_27:
    if ((v8 & 0x8000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_56:
  uint64_t result = sub_14C90EC(*(void *)(v1 + 216));
  if ((v8 & 0x8000) != 0) {
LABEL_28:
  }
    uint64_t result = sub_14BA990(*(void *)(v1 + 224));
LABEL_29:
  if ((v8 & 0xFF0000) == 0) {
    goto LABEL_39;
  }
  if ((v8 & 0x10000) != 0)
  {
    uint64_t result = sub_14CE108(*(void *)(v1 + 232));
    if ((v8 & 0x20000) == 0)
    {
LABEL_32:
      if ((v8 & 0x40000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_60;
    }
  }
  else if ((v8 & 0x20000) == 0)
  {
    goto LABEL_32;
  }
  uint64_t result = sub_14BAF14(*(void *)(v1 + 240));
  if ((v8 & 0x40000) == 0)
  {
LABEL_33:
    if ((v8 & 0x80000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_61;
  }
LABEL_60:
  uint64_t result = sub_14CBE90(*(void *)(v1 + 248));
  if ((v8 & 0x80000) == 0)
  {
LABEL_34:
    if ((v8 & 0x100000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t result = sub_14BF764(*(void *)(v1 + 256));
  if ((v8 & 0x100000) == 0)
  {
LABEL_35:
    if ((v8 & 0x200000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t result = sub_14BF764(*(void *)(v1 + 264));
  if ((v8 & 0x200000) == 0)
  {
LABEL_36:
    if ((v8 & 0x400000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t result = sub_14C026C(*(void *)(v1 + 272));
  if ((v8 & 0x400000) == 0)
  {
LABEL_37:
    if ((v8 & 0x800000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
LABEL_64:
  uint64_t result = sub_14BD3AC(*(void *)(v1 + 280));
  if ((v8 & 0x800000) != 0) {
LABEL_38:
  }
    uint64_t result = sub_14BBFE4(*(void *)(v1 + 288));
LABEL_39:
  if ((v8 & 0x1000000) != 0) {
    uint64_t result = sub_14C1B8C(*(void *)(v1 + 296));
  }
  if ((v8 & 0x3E000000) != 0)
  {
    *(void *)(v1 + 304) = 0;
    *(void *)(v1 + 311) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_14CF488(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v119 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v119, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v118 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v119 + 1);
    unsigned int v8 = **(unsigned char **)v119;
    if ((char)**(unsigned char **)v119 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v119, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v119 + 2);
      }
    }
    *(void *)v119 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 104);
        goto LABEL_17;
      case 2u:
        if (v8 != 18) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 112);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (uint64_t)sub_188C244(v16, *(char **)v119, (uint64_t)a3);
        goto LABEL_258;
      case 3u:
        if (v8 != 24) {
          goto LABEL_251;
        }
        v5 |= 0x4000000u;
        int v19 = (char *)(v7 + 1);
        LODWORD(v18) = *v7;
        if ((v18 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v107 = sub_188C138((uint64_t)v7, v18);
          *(void *)v119 = v107;
          *(_DWORD *)(a1 + 312) = v108;
          if (!v107) {
            goto LABEL_264;
          }
        }
        else
        {
          int v19 = (char *)(v7 + 2);
LABEL_22:
          *(void *)v119 = v19;
          *(_DWORD *)(a1 + 312) = v18;
        }
        goto LABEL_259;
      case 4u:
        if (v8 != 33) {
          goto LABEL_251;
        }
        v5 |= 0x2000000u;
        *(void *)(a1 + 304) = *(void *)v7;
        *(void *)v119 = v7 + 8;
        goto LABEL_259;
      case 5u:
        if (v8 != 40) {
          goto LABEL_251;
        }
        v5 |= 0x8000000u;
        uint64_t v21 = (char *)(v7 + 1);
        uint64_t v22 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v109 = sub_188C138((uint64_t)v7, v22);
          *(void *)v119 = v109;
          *(unsigned char *)(a1 + 316) = v110 != 0;
          if (!v109) {
            goto LABEL_264;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v7 + 2);
LABEL_29:
          *(void *)v119 = v21;
          *(unsigned char *)(a1 + 316) = v22 != 0;
        }
        goto LABEL_259;
      case 6u:
        if (v8 != 48) {
          goto LABEL_251;
        }
        v5 |= 0x10000000u;
        uint64_t v24 = (char *)(v7 + 1);
        uint64_t v25 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v111 = sub_188C138((uint64_t)v7, v25);
          *(void *)v119 = v111;
          *(unsigned char *)(a1 + 317) = v112 != 0;
          if (!v111) {
            goto LABEL_264;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v7 + 2);
LABEL_34:
          *(void *)v119 = v24;
          *(unsigned char *)(a1 + 317) = v25 != 0;
        }
        goto LABEL_259;
      case 7u:
        if (v8 != 58) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 120);
        if (!v27)
        {
          unint64_t v28 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            unint64_t v28 = (void *)*v28;
          }
          sub_14D5E88((uint64_t)v28);
          uint64_t v27 = v29;
          *(void *)(a1 + 120) = v29;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D03F8(a3, v27, v7);
        goto LABEL_258;
      case 8u:
        if (v8 != 66) {
          goto LABEL_251;
        }
        uint64_t v30 = v7 - 1;
        while (1)
        {
          unint64_t v31 = v30 + 1;
          *(void *)v119 = v30 + 1;
          uint64_t v32 = *(_DWORD **)(a1 + 40);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 32), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 32) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            BOOL v35 = sub_14D5F40(*(void *)(a1 + 24));
            uint64_t v34 = sub_188CDC8(a1 + 24, (uint64_t)v35);
            unint64_t v31 = *(unsigned __int8 **)v119;
          }
          uint64_t v30 = (unsigned __int8 *)sub_14D0488(a3, v34, v31);
          *(void *)v119 = v30;
          if (!v30) {
            goto LABEL_264;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 66) {
            goto LABEL_259;
          }
        }
      case 9u:
        if (v8 != 74) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v36 = *(void *)(a1 + 128);
        if (!v36)
        {
          int v37 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            int v37 = (void *)*v37;
          }
          uint64_t v36 = sub_14D609C((uint64_t)v37);
          *(void *)(a1 + 128) = v36;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D0518(a3, v36, v7);
        goto LABEL_258;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_251;
        }
        v5 |= 0x20000000u;
        int v38 = (char *)(v7 + 1);
        uint64_t v39 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v113 = sub_188C138((uint64_t)v7, v39);
          *(void *)v119 = v113;
          *(unsigned char *)(a1 + 318) = v114 != 0;
          if (!v113) {
            goto LABEL_264;
          }
        }
        else
        {
          int v38 = (char *)(v7 + 2);
LABEL_61:
          *(void *)v119 = v38;
          *(unsigned char *)(a1 + 318) = v39 != 0;
        }
        goto LABEL_259;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v41 = *(void *)(a1 + 136);
        if (!v41)
        {
          unint64_t v42 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            unint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_14D6158((uint64_t)v42);
          *(void *)(a1 + 136) = v41;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D05A8(a3, v41, v7);
        goto LABEL_258;
      case 0xCu:
        if (v8 == 96)
        {
          uint64_t v43 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)v119 = v43 + 1;
            unint64_t v44 = *(unsigned __int8 *)(v43 + 1);
            unint64_t v45 = (char *)(v43 + 2);
            if (*(char *)(v43 + 1) < 0)
            {
              int v46 = *v45;
              int v47 = v44 + (v46 << 7);
              unint64_t v44 = (v47 - 128);
              if (v46 < 0)
              {
                *(void *)v119 = sub_188C138(v43 + 1, (v47 - 128));
                if (!*(void *)v119) {
                  goto LABEL_264;
                }
                unint64_t v44 = v50;
                goto LABEL_74;
              }
              unint64_t v45 = (char *)(v43 + 3);
            }
            *(void *)v119 = v45;
LABEL_74:
            if (v44 > 6)
            {
              if (*v118) {
                BOOL v51 = (std::string *)((*v118 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                BOOL v51 = (std::string *)sub_188DBD8(v118);
              }
              sub_188C020(12, v44, v51);
            }
            else
            {
              uint64_t v48 = *(unsigned int *)(a1 + 48);
              if (v48 == *(_DWORD *)(a1 + 52))
              {
                int v49 = v48 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v48 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v48) = v44;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v48) = v44;
                int v49 = v48 + 1;
              }
              *(_DWORD *)(a1 + 48) = v49;
            }
            uint64_t v43 = *(void *)v119;
            if (*(void *)a3 <= *(void *)v119 || **(unsigned char **)v119 != 96) {
              goto LABEL_259;
            }
          }
        }
        if (v8 != 98) {
          goto LABEL_251;
        }
        *(void *)&long long v120 = a1 + 48;
        *((void *)&v120 + 1) = sub_14A4908;
        uint64_t v121 = a1 + 8;
        int v115 = 12;
        goto LABEL_250;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        unint64_t v52 = *(void **)(a1 + 144);
        if (!v52)
        {
          uint64_t v53 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v53 = (void *)*v53;
          }
          unint64_t v52 = sub_14D6518((uint64_t)v53);
          *(void *)(a1 + 144) = v52;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14C534C(a3, (uint64_t)v52, v7);
        goto LABEL_258;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v54 = *(void *)(a1 + 152);
        if (!v54)
        {
          long long v55 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            long long v55 = (void *)*v55;
          }
          uint64_t v54 = sub_14D6B88((uint64_t)v55);
          *(void *)(a1 + 152) = v54;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D0638(a3, v54, v7);
        goto LABEL_258;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v56 = *(void *)(a1 + 160);
        if (!v56)
        {
          int v57 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            int v57 = (void *)*v57;
          }
          uint64_t v56 = sub_14D6C10((uint64_t)v57);
          *(void *)(a1 + 160) = v56;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D06C8(a3, v56, v7);
        goto LABEL_258;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v58 = *(void *)(a1 + 168);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v59 = (void *)*v59;
          }
          uint64_t v58 = sub_14D6DA4((uint64_t)v59);
          *(void *)(a1 + 168) = v58;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D0758(a3, v58, v7);
        goto LABEL_258;
      case 0x11u:
        if (v8 != 138) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        int v60 = *(void **)(a1 + 176);
        if (!v60)
        {
          uint64_t v61 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v61 = (void *)*v61;
          }
          int v60 = sub_14D6F1C((uint64_t)v61);
          *(void *)(a1 + 176) = v60;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D07E8(a3, (uint64_t)v60, v7);
        goto LABEL_258;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v62 = *(void **)(a1 + 184);
        if (!v62)
        {
          BOOL v63 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            BOOL v63 = (void *)*v63;
          }
          uint64_t v62 = sub_14D6FA8((uint64_t)v63);
          *(void *)(a1 + 184) = v62;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D0878(a3, (uint64_t)v62, v7);
        goto LABEL_258;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        BOOL v64 = *(void **)(a1 + 192);
        if (!v64)
        {
          uint64_t v65 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v65 = (void *)*v65;
          }
          BOOL v64 = sub_14D7030((uint64_t)v65);
          *(void *)(a1 + 192) = v64;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D0908(a3, (uint64_t)v64, v7);
        goto LABEL_258;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v66 = *(void *)(a1 + 200);
        if (v66) {
          goto LABEL_191;
        }
        uint64_t v67 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v118) {
          uint64_t v67 = (void *)*v67;
        }
        uint64_t v66 = sub_14D70DC((uint64_t)v67);
        *(void *)(a1 + 200) = v66;
        goto LABEL_190;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v68 = *(void *)(a1 + 208);
        if (!v68)
        {
          uint64_t v69 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v69 = (void *)*v69;
          }
          uint64_t v68 = sub_14D7164((uint64_t)v69);
          *(void *)(a1 + 208) = v68;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D0A28(a3, v68, v7);
        goto LABEL_258;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v70 = *(void *)(a1 + 216);
        if (!v70)
        {
          uint64_t v71 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v71 = (void *)*v71;
          }
          sub_14D6E5C((uint64_t)v71);
          uint64_t v70 = v72;
          *(void *)(a1 + 216) = v72;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D0AB8(a3, v70, v7);
        goto LABEL_258;
      case 0x17u:
        if (v8 == 184)
        {
          uint64_t v73 = (uint64_t)(v7 - 2);
          while (1)
          {
            *(void *)v119 = v73 + 2;
            unint64_t v74 = *(unsigned __int8 *)(v73 + 2);
            uint64_t v75 = (char *)(v73 + 3);
            if (*(char *)(v73 + 2) < 0)
            {
              int v76 = *v75;
              int v77 = v74 + (v76 << 7);
              unint64_t v74 = (v77 - 128);
              if (v76 < 0)
              {
                *(void *)v119 = sub_188C138(v73 + 2, (v77 - 128));
                if (!*(void *)v119) {
                  goto LABEL_264;
                }
                unint64_t v74 = v80;
                goto LABEL_153;
              }
              uint64_t v75 = (char *)(v73 + 4);
            }
            *(void *)v119 = v75;
LABEL_153:
            if (v74 > 0x16)
            {
              if (*v118) {
                uint64_t v81 = (std::string *)((*v118 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v81 = (std::string *)sub_188DBD8(v118);
              }
              sub_188C020(23, v74, v81);
            }
            else
            {
              uint64_t v78 = *(unsigned int *)(a1 + 64);
              if (v78 == *(_DWORD *)(a1 + 68))
              {
                int v79 = v78 + 1;
                sub_188C80C((unsigned int *)(a1 + 64), v78 + 1);
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v78) = v74;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v78) = v74;
                int v79 = v78 + 1;
              }
              *(_DWORD *)(a1 + 64) = v79;
            }
            uint64_t v73 = *(void *)v119;
            if (*(void *)a3 <= *(void *)v119 || **(_WORD **)v119 != 440) {
              goto LABEL_259;
            }
          }
        }
        if (v8 == 186)
        {
          *(void *)&long long v120 = a1 + 64;
          *((void *)&v120 + 1) = sub_14A4924;
          uint64_t v121 = a1 + 8;
          int v115 = 23;
LABEL_250:
          int v122 = v115;
          uint64_t v17 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v7, &v120);
LABEL_258:
          *(void *)v119 = v17;
          if (!v17) {
            goto LABEL_264;
          }
LABEL_259:
          if (sub_11947B8((uint64_t)a3, (char **)v119, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_251:
        if (v8) {
          BOOL v116 = (v8 & 7) == 4;
        }
        else {
          BOOL v116 = 1;
        }
        if (!v116)
        {
          if (*v118)
          {
            v117 = (std::string *)((*v118 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v117 = (std::string *)sub_188DBD8(v118);
            uint64_t v7 = *(unsigned __int8 **)v119;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v8, v117, (char *)v7, a3);
          goto LABEL_258;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_264:
        }
          *(void *)v119 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v119;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v82 = *(void *)(a1 + 224);
        if (!v82)
        {
          uint64_t v83 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v83 = (void *)*v83;
          }
          uint64_t v82 = sub_14D61F8((uint64_t)v83);
          *(void *)(a1 + 224) = v82;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D0B48(a3, v82, v7);
        goto LABEL_258;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v84 = *(void *)(a1 + 232);
        if (!v84)
        {
          uint64_t v85 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v85 = (void *)*v85;
          }
          uint64_t v84 = sub_14D7380((uint64_t)v85);
          *(void *)(a1 + 232) = v84;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D0BD8(a3, v84, v7);
        goto LABEL_258;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        uint64_t v86 = *(void **)(a1 + 240);
        if (!v86)
        {
          uint64_t v87 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            uint64_t v87 = (void *)*v87;
          }
          uint64_t v86 = sub_14D6298((uint64_t)v87);
          *(void *)(a1 + 240) = v86;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D0C68(a3, (uint64_t)v86, v7);
        goto LABEL_258;
      case 0x1Bu:
        if (v8 != 218) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000u;
        uint64_t v66 = *(void *)(a1 + 248);
        if (v66) {
          goto LABEL_191;
        }
        uint64_t v88 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v118) {
          uint64_t v88 = (void *)*v88;
        }
        uint64_t v66 = sub_14D70DC((uint64_t)v88);
        *(void *)(a1 + 248) = v66;
LABEL_190:
        uint64_t v7 = *(unsigned __int8 **)v119;
LABEL_191:
        uint64_t v17 = sub_14D0998(a3, v66, v7);
        goto LABEL_258;
      case 0x1Cu:
        if (v8 != 226) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000u;
        uint64_t v89 = *(void *)(a1 + 256);
        if (v89) {
          goto LABEL_203;
        }
        uint64_t v90 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v118) {
          uint64_t v90 = (void *)*v90;
        }
        uint64_t v89 = sub_14D6664((uint64_t)v90);
        *(void *)(a1 + 256) = v89;
        goto LABEL_202;
      case 0x1Du:
        if (v8 != 234) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x100000u;
        uint64_t v89 = *(void *)(a1 + 264);
        if (v89) {
          goto LABEL_203;
        }
        BOOL v91 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v118) {
          BOOL v91 = (void *)*v91;
        }
        uint64_t v89 = sub_14D6664((uint64_t)v91);
        *(void *)(a1 + 264) = v89;
LABEL_202:
        uint64_t v7 = *(unsigned __int8 **)v119;
LABEL_203:
        uint64_t v17 = (uint64_t)sub_14D0CF8(a3, v89, v7);
        goto LABEL_258;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x200000u;
        uint64_t v92 = *(void *)(a1 + 272);
        if (!v92)
        {
          v93 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            v93 = (void *)*v93;
          }
          sub_14D678C((uint64_t)v93);
          uint64_t v92 = v94;
          *(void *)(a1 + 272) = v94;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D0D88(a3, v92, v7);
        goto LABEL_258;
      case 0x1Fu:
        if (v8 != 250) {
          goto LABEL_251;
        }
        long long v95 = v7 - 2;
        while (1)
        {
          uint64_t v96 = v95 + 2;
          *(void *)v119 = v95 + 2;
          int v97 = *(_DWORD **)(a1 + 96);
          if (v97 && (uint64_t v98 = *(int *)(a1 + 88), (int)v98 < *v97))
          {
            *(_DWORD *)(a1 + 88) = v98 + 1;
            uint64_t v99 = *(void *)&v97[2 * v98 + 2];
          }
          else
          {
            v100 = sub_14D5FF0(*(void *)(a1 + 80));
            uint64_t v99 = sub_188CDC8(a1 + 80, (uint64_t)v100);
            uint64_t v96 = *(unsigned __int8 **)v119;
          }
          long long v95 = (unsigned __int8 *)sub_14D0E18(a3, v99, v96);
          *(void *)v119 = v95;
          if (!v95) {
            goto LABEL_264;
          }
          if (*(void *)a3 <= (unint64_t)v95 || *(_WORD *)v95 != 506) {
            goto LABEL_259;
          }
        }
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x400000u;
        uint64_t v101 = *(void *)(a1 + 280);
        if (!v101)
        {
          v102 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            v102 = (void *)*v102;
          }
          uint64_t v101 = sub_14D6478((uint64_t)v102);
          *(void *)(a1 + 280) = v101;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D0EA8(a3, v101, v7);
        goto LABEL_258;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x800000u;
        uint64_t v103 = *(void *)(a1 + 288);
        if (!v103)
        {
          v104 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            v104 = (void *)*v104;
          }
          uint64_t v103 = sub_14D6340((uint64_t)v104);
          *(void *)(a1 + 288) = v103;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = sub_14D0F38(a3, v103, v7);
        goto LABEL_258;
      case 0x22u:
        if (v8 != 18) {
          goto LABEL_251;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000000u;
        uint64_t v105 = *(void *)(a1 + 296);
        if (!v105)
        {
          v106 = (void *)(*v118 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v118) {
            v106 = (void *)*v106;
          }
          uint64_t v105 = sub_14D68CC((uint64_t)v106);
          *(void *)(a1 + 296) = v105;
          uint64_t v7 = *(unsigned __int8 **)v119;
        }
        uint64_t v17 = (uint64_t)sub_14D0FC8(a3, v105, v7);
        goto LABEL_258;
      default:
        goto LABEL_251;
    }
  }
}

char *sub_14D03F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B6A5C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0488(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B76C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0518(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B8B48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D05A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BA40C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0638(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C50E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D06C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C5998(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0758(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C8588(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D07E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CA06C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0878(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CAD30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0908(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CB3C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0998(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CBF28(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0A28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CC75C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0AB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C9180(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0B48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BAA0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0BD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CE1DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0C68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BB098(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0CF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BF7E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0D88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C0328(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0E18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B81BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0EA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BD428(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D0F38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14BC0A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D0FC8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14C1C08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14D1058(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x4000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000000) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 312);
  *uint64_t v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 304);
    *uint64_t v4 = 33;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 0x8000000) == 0)
    {
LABEL_15:
      if ((v6 & 0x10000000) == 0) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 0x8000000) == 0)
  {
    goto LABEL_15;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 316);
  *uint64_t v4 = 40;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x10000000) == 0)
  {
LABEL_16:
    if ((v6 & 4) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 317);
  *uint64_t v4 = 48;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_27:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 120);
    *uint64_t v4 = 58;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_14B6EC8(v13, (unint64_t)v15, a3);
  }
LABEL_33:
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 66;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_14B7A6C(v18, v20, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 128);
    *uint64_t v4 = 74;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      int v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      int v23 = v4 + 2;
    }
    uint64_t v4 = sub_14B94A0(v21, (unint64_t)v23, a3);
    if ((v6 & 0x20000000) == 0)
    {
LABEL_43:
      if ((v6 & 0x10) == 0) {
        goto LABEL_60;
      }
      goto LABEL_54;
    }
  }
  else if ((v6 & 0x20000000) == 0)
  {
    goto LABEL_43;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v24 = *(unsigned char *)(a1 + 318);
  *uint64_t v4 = 80;
  v4[1] = v24;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_54:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 136);
    *uint64_t v4 = 90;
    unsigned int v26 = *(_DWORD *)(v25 + 40);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    uint64_t v4 = sub_14BA5AC(v25, v27, a3);
  }
LABEL_60:
  uint64_t v28 = *(unsigned int *)(a1 + 48);
  if ((int)v28 >= 1)
  {
    for (uint64_t j = 0; j != v28; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v30 = *(int *)(*(void *)(a1 + 56) + 4 * j);
      *uint64_t v4 = 96;
      v4[1] = v30;
      if (v30 > 0x7F)
      {
        v4[1] = v30 | 0x80;
        unint64_t v31 = v30 >> 7;
        v4[2] = v30 >> 7;
        v4 += 3;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v32 = v31 >> 14;
            v31 >>= 7;
            *v4++ = v31;
          }
          while (v32);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 144);
    *uint64_t v4 = 106;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      BOOL v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      BOOL v35 = v4 + 2;
    }
    uint64_t v4 = sub_14BE504(v33, (unint64_t)v35, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_71:
      if ((v6 & 0x80) == 0) {
        goto LABEL_72;
      }
      goto LABEL_92;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_71;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v36 = *(void *)(a1 + 152);
  *uint64_t v4 = 114;
  unsigned int v37 = *(_DWORD *)(v36 + 20);
  v4[1] = v37;
  if (v37 > 0x7F) {
    int v38 = sub_188A9CC(v37, v4 + 1);
  }
  else {
    int v38 = v4 + 2;
  }
  uint64_t v4 = sub_14C53DC(v36, (unint64_t)v38, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_72:
    if ((v6 & 0x100) == 0) {
      goto LABEL_73;
    }
    goto LABEL_98;
  }
LABEL_92:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v39 = *(void *)(a1 + 160);
  *uint64_t v4 = 122;
  unsigned int v40 = *(_DWORD *)(v39 + 20);
  v4[1] = v40;
  if (v40 > 0x7F) {
    uint64_t v41 = sub_188A9CC(v40, v4 + 1);
  }
  else {
    uint64_t v41 = v4 + 2;
  }
  uint64_t v4 = sub_14C5F60(v39, v41, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_73:
    if ((v6 & 0x200) == 0) {
      goto LABEL_74;
    }
    goto LABEL_104;
  }
LABEL_98:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v42 = *(void *)(a1 + 168);
  *(_WORD *)uint64_t v4 = 386;
  unsigned int v43 = *(_DWORD *)(v42 + 20);
  v4[2] = v43;
  if (v43 > 0x7F) {
    unint64_t v44 = sub_188A9CC(v43, v4 + 2);
  }
  else {
    unint64_t v44 = v4 + 3;
  }
  uint64_t v4 = sub_14C89C4(v42, (unint64_t)v44, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_74:
    if ((v6 & 0x400) == 0) {
      goto LABEL_75;
    }
    goto LABEL_110;
  }
LABEL_104:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v45 = *(void *)(a1 + 176);
  *(_WORD *)uint64_t v4 = 394;
  unsigned int v46 = *(_DWORD *)(v45 + 20);
  v4[2] = v46;
  if (v46 > 0x7F) {
    int v47 = sub_188A9CC(v46, v4 + 2);
  }
  else {
    int v47 = v4 + 3;
  }
  uint64_t v4 = sub_14CA4FC(v45, (unint64_t)v47, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_75:
    if ((v6 & 0x800) == 0) {
      goto LABEL_76;
    }
    goto LABEL_116;
  }
LABEL_110:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v48 = *(void *)(a1 + 184);
  *(_WORD *)uint64_t v4 = 402;
  unsigned int v49 = *(_DWORD *)(v48 + 20);
  v4[2] = v49;
  if (v49 > 0x7F) {
    unint64_t v50 = sub_188A9CC(v49, v4 + 2);
  }
  else {
    unint64_t v50 = v4 + 3;
  }
  uint64_t v4 = sub_14CAF20(v48, v50, a3);
  if ((v6 & 0x800) == 0)
  {
LABEL_76:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_122;
  }
LABEL_116:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v51 = *(void *)(a1 + 192);
  *(_WORD *)uint64_t v4 = 410;
  unsigned int v52 = *(_DWORD *)(v51 + 20);
  v4[2] = v52;
  if (v52 > 0x7F) {
    uint64_t v53 = sub_188A9CC(v52, v4 + 2);
  }
  else {
    uint64_t v53 = v4 + 3;
  }
  uint64_t v4 = sub_14CB7A0(v51, v53, a3);
  if ((v6 & 0x1000) == 0)
  {
LABEL_77:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_128;
  }
LABEL_122:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v54 = *(void *)(a1 + 200);
  *(_WORD *)uint64_t v4 = 418;
  unsigned int v55 = *(_DWORD *)(v54 + 20);
  v4[2] = v55;
  if (v55 > 0x7F) {
    uint64_t v56 = sub_188A9CC(v55, v4 + 2);
  }
  else {
    uint64_t v56 = v4 + 3;
  }
  uint64_t v4 = sub_14CC190(v54, (unint64_t)v56, a3);
  if ((v6 & 0x2000) == 0)
  {
LABEL_78:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_134;
  }
LABEL_128:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v57 = *(void *)(a1 + 208);
  *(_WORD *)uint64_t v4 = 426;
  unsigned int v58 = *(_DWORD *)(v57 + 20);
  v4[2] = v58;
  if (v58 > 0x7F) {
    uint64_t v59 = sub_188A9CC(v58, v4 + 2);
  }
  else {
    uint64_t v59 = v4 + 3;
  }
  uint64_t v4 = sub_14CC9AC(v57, v59, a3);
  if ((v6 & 0x4000) != 0)
  {
LABEL_134:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v60 = *(void *)(a1 + 216);
    *(_WORD *)uint64_t v4 = 434;
    unsigned int v61 = *(_DWORD *)(v60 + 20);
    v4[2] = v61;
    if (v61 > 0x7F) {
      uint64_t v62 = sub_188A9CC(v61, v4 + 2);
    }
    else {
      uint64_t v62 = v4 + 3;
    }
    uint64_t v4 = sub_14C9728(v60, v62, a3);
  }
LABEL_140:
  uint64_t v63 = *(unsigned int *)(a1 + 64);
  if ((int)v63 >= 1)
  {
    for (uint64_t k = 0; k != v63; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v65 = *(int *)(*(void *)(a1 + 72) + 4 * k);
      *(_WORD *)uint64_t v4 = 440;
      v4[2] = v65;
      if (v65 > 0x7F)
      {
        v4[2] = v65 | 0x80;
        unint64_t v66 = v65 >> 7;
        v4[3] = v65 >> 7;
        v4 += 4;
        if (v65 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v67 = v66 >> 14;
            v66 >>= 7;
            *v4++ = v66;
          }
          while (v67);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v68 = *(void *)(a1 + 224);
    *(_WORD *)uint64_t v4 = 450;
    unsigned int v69 = *(_DWORD *)(v68 + 40);
    v4[2] = v69;
    if (v69 > 0x7F) {
      uint64_t v70 = sub_188A9CC(v69, v4 + 2);
    }
    else {
      uint64_t v70 = v4 + 3;
    }
    uint64_t v4 = sub_14BABAC(v68, v70, a3);
    if ((v6 & 0x10000) == 0)
    {
LABEL_151:
      if ((v6 & 0x20000) == 0) {
        goto LABEL_152;
      }
      goto LABEL_169;
    }
  }
  else if ((v6 & 0x10000) == 0)
  {
    goto LABEL_151;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v71 = *(void *)(a1 + 232);
  *(_WORD *)uint64_t v4 = 458;
  unsigned int v72 = *(_DWORD *)(v71 + 112);
  v4[2] = v72;
  if (v72 > 0x7F) {
    uint64_t v73 = sub_188A9CC(v72, v4 + 2);
  }
  else {
    uint64_t v73 = v4 + 3;
  }
  uint64_t v4 = sub_14CE69C(v71, v73, a3);
  if ((v6 & 0x20000) == 0)
  {
LABEL_152:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_175;
  }
LABEL_169:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v74 = *(void *)(a1 + 240);
  *(_WORD *)uint64_t v4 = 466;
  unsigned int v75 = *(_DWORD *)(v74 + 20);
  v4[2] = v75;
  if (v75 > 0x7F) {
    int v76 = sub_188A9CC(v75, v4 + 2);
  }
  else {
    int v76 = v4 + 3;
  }
  uint64_t v4 = sub_14BB650(v74, v76, a3);
  if ((v6 & 0x40000) == 0)
  {
LABEL_153:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_154;
    }
    goto LABEL_181;
  }
LABEL_175:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v77 = *(void *)(a1 + 248);
  *(_WORD *)uint64_t v4 = 474;
  unsigned int v78 = *(_DWORD *)(v77 + 20);
  v4[2] = v78;
  if (v78 > 0x7F) {
    int v79 = sub_188A9CC(v78, v4 + 2);
  }
  else {
    int v79 = v4 + 3;
  }
  uint64_t v4 = sub_14CC190(v77, (unint64_t)v79, a3);
  if ((v6 & 0x80000) == 0)
  {
LABEL_154:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_155;
    }
    goto LABEL_187;
  }
LABEL_181:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v80 = *(void *)(a1 + 256);
  *(_WORD *)uint64_t v4 = 482;
  unsigned int v81 = *(_DWORD *)(v80 + 40);
  v4[2] = v81;
  if (v81 > 0x7F) {
    uint64_t v82 = sub_188A9CC(v81, v4 + 2);
  }
  else {
    uint64_t v82 = v4 + 3;
  }
  uint64_t v4 = sub_14BFA10(v80, v82, a3);
  if ((v6 & 0x100000) == 0)
  {
LABEL_155:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_199;
    }
    goto LABEL_193;
  }
LABEL_187:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v83 = *(void *)(a1 + 264);
  *(_WORD *)uint64_t v4 = 490;
  unsigned int v84 = *(_DWORD *)(v83 + 40);
  v4[2] = v84;
  if (v84 > 0x7F) {
    uint64_t v85 = sub_188A9CC(v84, v4 + 2);
  }
  else {
    uint64_t v85 = v4 + 3;
  }
  uint64_t v4 = sub_14BFA10(v83, v85, a3);
  if ((v6 & 0x200000) != 0)
  {
LABEL_193:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v86 = *(void *)(a1 + 272);
    *(_WORD *)uint64_t v4 = 498;
    unsigned int v87 = *(_DWORD *)(v86 + 20);
    v4[2] = v87;
    if (v87 > 0x7F) {
      uint64_t v88 = sub_188A9CC(v87, v4 + 2);
    }
    else {
      uint64_t v88 = v4 + 3;
    }
    uint64_t v4 = sub_14C06F4(v86, (unint64_t)v88, a3);
  }
LABEL_199:
  int v89 = *(_DWORD *)(a1 + 88);
  if (v89)
  {
    for (int m = 0; m != v89; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v91 = *(void *)(*(void *)(a1 + 96) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 506;
      unsigned int v92 = *(_DWORD *)(v91 + 20);
      v4[2] = v92;
      if (v92 > 0x7F) {
        v93 = sub_188A9CC(v92, v4 + 2);
      }
      else {
        v93 = v4 + 3;
      }
      uint64_t v4 = sub_14B8478(v91, v93, a3);
    }
  }
  if ((v6 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v94 = *(void *)(a1 + 280);
    *(_WORD *)uint64_t v4 = 642;
    unsigned int v95 = *(_DWORD *)(v94 + 40);
    v4[2] = v95;
    if (v95 > 0x7F) {
      uint64_t v96 = sub_188A9CC(v95, v4 + 2);
    }
    else {
      uint64_t v96 = v4 + 3;
    }
    uint64_t v4 = sub_14BD658(v94, v96, a3);
    if ((v6 & 0x800000) == 0)
    {
LABEL_209:
      if ((v6 & 0x1000000) == 0) {
        goto LABEL_229;
      }
      goto LABEL_223;
    }
  }
  else if ((v6 & 0x800000) == 0)
  {
    goto LABEL_209;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v97 = *(void *)(a1 + 288);
  *(_WORD *)uint64_t v4 = 650;
  unsigned int v98 = *(_DWORD *)(v97 + 20);
  v4[2] = v98;
  if (v98 > 0x7F) {
    uint64_t v99 = sub_188A9CC(v98, v4 + 2);
  }
  else {
    uint64_t v99 = v4 + 3;
  }
  uint64_t v4 = sub_14BC2E8(v97, v99, a3);
  if ((v6 & 0x1000000) != 0)
  {
LABEL_223:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v100 = *(void *)(a1 + 296);
    *(_WORD *)uint64_t v4 = 658;
    unsigned int v101 = *(_DWORD *)(v100 + 40);
    v4[2] = v101;
    if (v101 > 0x7F) {
      v102 = sub_188A9CC(v101, v4 + 2);
    }
    else {
      v102 = v4 + 3;
    }
    uint64_t v4 = sub_14C1E38(v100, v102, a3);
  }
LABEL_229:
  uint64_t v103 = *(void *)(a1 + 8);
  if ((v103 & 1) == 0) {
    return v4;
  }
  unint64_t v105 = v103 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v105 + 31) < 0)
  {
    v106 = *(void **)(v105 + 8);
    uint64_t v107 = *(void *)(v105 + 16);
  }
  else
  {
    v106 = (void *)(v105 + 8);
    LODWORD(v107) = *(unsigned __int8 *)(v105 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v107)
  {
    uint64_t v108 = (int)v107;
    memcpy(v4, v106, (int)v107);
    v4 += v108;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v106, v107, v4);
}

uint64_t sub_14D1E6C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14B7CC8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  if (v8)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v10);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v12;
      ++v10;
    }
    while (v8 != v10);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v13 = *(unsigned int *)(a1 + 64);
  if (v13)
  {
    int v14 = 0;
    uint64_t v15 = 0;
    do
    {
      int v16 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v14);
      if (v16 < 0) {
        uint64_t v17 = 10;
      }
      else {
        uint64_t v17 = (9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6;
      }
      v15 += v17;
      ++v14;
    }
    while (v13 != v14);
  }
  else
  {
    uint64_t v15 = 0;
  }
  uint64_t v18 = *(int *)(a1 + 88);
  uint64_t v19 = v2 + v8 + v9 + v15 + 2 * (v18 + v13);
  uint64_t v20 = *(void *)(a1 + 96);
  if (v20) {
    uint64_t v21 = (uint64_t *)(v20 + 8);
  }
  else {
    uint64_t v21 = 0;
  }
  if (v18)
  {
    uint64_t v22 = 8 * v18;
    do
    {
      uint64_t v23 = *v21++;
      uint64_t v24 = sub_14B863C(v23);
      v19 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6);
      v22 -= 8;
    }
    while (v22);
  }
  int v25 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v25) {
    goto LABEL_41;
  }
  if (v25)
  {
    unint64_t v36 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v37 = *(unsigned __int8 *)(v36 + 23);
    uint64_t v38 = *(void *)(v36 + 8);
    if ((v37 & 0x80u) == 0) {
      uint64_t v38 = v37;
    }
    v19 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v25 & 2) == 0)
    {
LABEL_34:
      if ((v25 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_86;
    }
  }
  else if ((v25 & 2) == 0)
  {
    goto LABEL_34;
  }
  unint64_t v39 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v40 = *(unsigned __int8 *)(v39 + 23);
  uint64_t v41 = *(void *)(v39 + 8);
  if ((v40 & 0x80u) == 0) {
    uint64_t v41 = v40;
  }
  v19 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v25 & 4) == 0)
  {
LABEL_35:
    if ((v25 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t v42 = sub_14B71C4(*(void *)(a1 + 120));
  v19 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v25 & 8) == 0)
  {
LABEL_36:
    if ((v25 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t v43 = sub_14B9B28(*(void *)(a1 + 128));
  v19 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v25 & 0x10) == 0)
  {
LABEL_37:
    if ((v25 & 0x20) == 0) {
      goto LABEL_38;
    }
LABEL_89:
    uint64_t v45 = sub_14BEAE4(*(void *)(a1 + 144));
    v19 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v25 & 0x40) == 0)
    {
LABEL_39:
      if ((v25 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
    goto LABEL_90;
  }
LABEL_88:
  uint64_t v44 = sub_14BA6F0(*(void *)(a1 + 136));
  v19 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v25 & 0x20) != 0) {
    goto LABEL_89;
  }
LABEL_38:
  if ((v25 & 0x40) == 0) {
    goto LABEL_39;
  }
LABEL_90:
  uint64_t v46 = sub_14C5588(*(void *)(a1 + 152));
  v19 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v25 & 0x80) != 0)
  {
LABEL_40:
    uint64_t v26 = sub_14C6354(*(void *)(a1 + 160));
    v19 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_41:
  if ((v25 & 0xFF00) == 0) {
    goto LABEL_51;
  }
  if ((v25 & 0x100) != 0)
  {
    uint64_t v47 = sub_14C8C4C(*(void *)(a1 + 168));
    v19 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v25 & 0x200) == 0)
    {
LABEL_44:
      if ((v25 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_94;
    }
  }
  else if ((v25 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v48 = sub_14CA7F8(*(void *)(a1 + 176));
  v19 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x400) == 0)
  {
LABEL_45:
    if ((v25 & 0x800) == 0) {
      goto LABEL_46;
    }
    goto LABEL_95;
  }
LABEL_94:
  uint64_t v49 = sub_14CB038(*(void *)(a1 + 184));
  v19 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x800) == 0)
  {
LABEL_46:
    if ((v25 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_96;
  }
LABEL_95:
  uint64_t v50 = sub_14CB9A8(*(void *)(a1 + 192));
  v19 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x1000) == 0)
  {
LABEL_47:
    if ((v25 & 0x2000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_97;
  }
LABEL_96:
  uint64_t v51 = sub_14CC348(*(void *)(a1 + 200));
  v19 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x2000) == 0)
  {
LABEL_48:
    if ((v25 & 0x4000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_98;
  }
LABEL_97:
  uint64_t v52 = sub_14CCB20(*(void *)(a1 + 208));
  v19 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x4000) == 0)
  {
LABEL_49:
    if ((v25 & 0x8000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_98:
  uint64_t v53 = sub_14C9A80(*(void *)(a1 + 216));
  v19 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x8000) != 0)
  {
LABEL_50:
    uint64_t v27 = sub_14BACF0(*(void *)(a1 + 224));
    v19 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_51:
  if ((v25 & 0xFF0000) == 0) {
    goto LABEL_61;
  }
  if ((v25 & 0x10000) != 0)
  {
    uint64_t v54 = sub_14CE96C(*(void *)(a1 + 232));
    v19 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v25 & 0x20000) == 0)
    {
LABEL_54:
      if ((v25 & 0x40000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_102;
    }
  }
  else if ((v25 & 0x20000) == 0)
  {
    goto LABEL_54;
  }
  uint64_t v55 = sub_14BB934(*(void *)(a1 + 240));
  v19 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x40000) == 0)
  {
LABEL_55:
    if ((v25 & 0x80000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t v56 = sub_14CC348(*(void *)(a1 + 248));
  v19 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x80000) == 0)
  {
LABEL_56:
    if ((v25 & 0x100000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t v57 = sub_14BFB54(*(void *)(a1 + 256));
  v19 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x100000) == 0)
  {
LABEL_57:
    if ((v25 & 0x200000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_105;
  }
LABEL_104:
  uint64_t v58 = sub_14BFB54(*(void *)(a1 + 264));
  v19 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x200000) == 0)
  {
LABEL_58:
    if ((v25 & 0x400000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_106;
  }
LABEL_105:
  uint64_t v59 = sub_14C09A0(*(void *)(a1 + 272));
  v19 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x400000) == 0)
  {
LABEL_59:
    if ((v25 & 0x800000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }
LABEL_106:
  uint64_t v60 = sub_14BD79C(*(void *)(a1 + 280));
  v19 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v25 & 0x800000) != 0)
  {
LABEL_60:
    uint64_t v28 = sub_14BC43C(*(void *)(a1 + 288));
    v19 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_61:
  if ((v25 & 0x3F000000) != 0)
  {
    if ((v25 & 0x1000000) != 0)
    {
      uint64_t v29 = sub_14C1F7C(*(void *)(a1 + 296));
      v19 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v30 = v19 + 9;
    if ((v25 & 0x2000000) == 0) {
      uint64_t v30 = v19;
    }
    if ((v25 & 0x4000000) != 0)
    {
      int v31 = *(_DWORD *)(a1 + 312);
      uint64_t v32 = ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v31 >= 0) {
        uint64_t v33 = v32;
      }
      else {
        uint64_t v33 = 11;
      }
      v30 += v33;
    }
    if ((v25 & 0x8000000) != 0) {
      v30 += 2;
    }
    if ((v25 & 0x10000000) != 0) {
      v30 += 2;
    }
    if ((v25 & 0x20000000) != 0) {
      uint64_t v19 = v30 + 2;
    }
    else {
      uint64_t v19 = v30;
    }
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if (v34)
  {
    unint64_t v61 = v34 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v61 + 31) < 0) {
      uint64_t v62 = *(void *)(v61 + 16);
    }
    else {
      uint64_t v62 = *(unsigned __int8 *)(v61 + 31);
    }
    v19 += v62;
  }
  *(_DWORD *)(a1 + 20) = v19;
  return v19;
}

void sub_14D25E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DF5A0((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 64);
  if (v12)
  {
    uint64_t v13 = *(int *)(a1 + 64);
    sub_188C80C((unsigned int *)(a1 + 64), v13 + v12);
    uint64_t v14 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v14 + 4 * v13), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v15 = *(_DWORD *)(a2 + 88);
  if (v15)
  {
    int v16 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v17 = (std::string **)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_14DF62C((std::string *)(a1 + 80), v17, v16, v15, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v18 = *(_DWORD *)(a1 + 88) + v15;
    *(_DWORD *)(a1 + 88) = v18;
    uint64_t v19 = *(int **)(a1 + 96);
    if (*v19 < v18) {
      int *v19 = v18;
    }
  }
  int v20 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v20) {
    goto LABEL_75;
  }
  if (v20)
  {
    uint64_t v21 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    sub_1881DF4((std::string **)(a1 + 104), v21, v23);
    if ((v20 & 2) == 0)
    {
LABEL_14:
      if ((v20 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_27;
    }
  }
  else if ((v20 & 2) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v24 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v25 = *(void *)(a1 + 8);
  uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
  if (v25) {
    uint64_t v26 = (uint64_t *)*v26;
  }
  sub_1881DF4((std::string **)(a1 + 112), v24, v26);
  if ((v20 & 4) == 0)
  {
LABEL_15:
    if ((v20 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_27:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v27 = *(std::string **)(a1 + 120);
  if (!v27)
  {
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (void *)*v29;
    }
    sub_14D5E88((uint64_t)v29);
    *(void *)(a1 + 120) = v27;
  }
  if (*(void *)(a2 + 120)) {
    uint64_t v30 = *(uint64_t (****)())(a2 + 120);
  }
  else {
    uint64_t v30 = &off_253AA18;
  }
  sub_14B731C(v27, (uint64_t)v30);
  if ((v20 & 8) == 0)
  {
LABEL_16:
    if ((v20 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_35:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v31 = *(void *)(a1 + 128);
  if (!v31)
  {
    uint64_t v32 = *(void *)(a1 + 8);
    uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      uint64_t v33 = (void *)*v33;
    }
    uint64_t v31 = sub_14D609C((uint64_t)v33);
    *(void *)(a1 + 128) = v31;
  }
  if (*(void *)(a2 + 128)) {
    uint64_t v34 = *(uint64_t (****)())(a2 + 128);
  }
  else {
    uint64_t v34 = &off_253AA80;
  }
  sub_14B9DEC(v31, (uint64_t)v34);
  if ((v20 & 0x10) == 0)
  {
LABEL_17:
    if ((v20 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_51:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unint64_t v39 = *(std::string **)(a1 + 144);
    if (!v39)
    {
      uint64_t v40 = *(void *)(a1 + 8);
      uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
      if (v40) {
        uint64_t v41 = (void *)*v41;
      }
      unint64_t v39 = (std::string *)sub_14D6518((uint64_t)v41);
      *(void *)(a1 + 144) = v39;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v42 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v42 = &off_253AC30;
    }
    sub_14BEE90(v39, (uint64_t)v42);
    if ((v20 & 0x40) == 0)
    {
LABEL_19:
      if ((v20 & 0x80) == 0) {
        goto LABEL_75;
      }
      goto LABEL_67;
    }
    goto LABEL_59;
  }
LABEL_43:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  BOOL v35 = *(std::string **)(a1 + 136);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (void *)*v37;
    }
    BOOL v35 = (std::string *)sub_14D6158((uint64_t)v37);
    *(void *)(a1 + 136) = v35;
  }
  if (*(void *)(a2 + 136)) {
    uint64_t v38 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    uint64_t v38 = &off_253AB10;
  }
  sub_14BA7A0(v35, (uint64_t)v38);
  if ((v20 & 0x20) != 0) {
    goto LABEL_51;
  }
LABEL_18:
  if ((v20 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_59:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v43 = *(std::string **)(a1 + 152);
  if (!v43)
  {
    uint64_t v44 = *(void *)(a1 + 8);
    uint64_t v45 = (void *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
    if (v44) {
      uint64_t v45 = (void *)*v45;
    }
    uint64_t v43 = (std::string *)sub_14D6B88((uint64_t)v45);
    *(void *)(a1 + 152) = v43;
  }
  if (*(void *)(a2 + 152)) {
    uint64_t v46 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    uint64_t v46 = &off_253AEB0;
  }
  sub_14C56A8(v43, (uint64_t)v46);
  if ((v20 & 0x80) != 0)
  {
LABEL_67:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v47 = *(std::string **)(a1 + 160);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        uint64_t v49 = (void *)*v49;
      }
      uint64_t v47 = (std::string *)sub_14D6C10((uint64_t)v49);
      *(void *)(a1 + 160) = v47;
    }
    if (*(void *)(a2 + 160)) {
      uint64_t v50 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      uint64_t v50 = &off_253AEE0;
    }
    sub_14C6500(v47, (uint64_t)v50);
  }
LABEL_75:
  if ((v20 & 0xFF00) == 0) {
    goto LABEL_149;
  }
  if ((v20 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v51 = *(void *)(a1 + 168);
    if (!v51)
    {
      uint64_t v52 = *(void *)(a1 + 8);
      uint64_t v53 = (void *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
      if (v52) {
        uint64_t v53 = (void *)*v53;
      }
      uint64_t v51 = sub_14D6DA4((uint64_t)v53);
      *(void *)(a1 + 168) = v51;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v54 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v54 = &off_253AF50;
    }
    sub_14C8DF8(v51, (uint64_t)v54);
    if ((v20 & 0x200) == 0)
    {
LABEL_78:
      if ((v20 & 0x400) == 0) {
        goto LABEL_79;
      }
      goto LABEL_101;
    }
  }
  else if ((v20 & 0x200) == 0)
  {
    goto LABEL_78;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v55 = *(std::string **)(a1 + 176);
  if (!v55)
  {
    uint64_t v56 = *(void *)(a1 + 8);
    uint64_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (void *)*v57;
    }
    uint64_t v55 = (std::string *)sub_14D6F1C((uint64_t)v57);
    *(void *)(a1 + 176) = v55;
  }
  if (*(void *)(a2 + 176)) {
    uint64_t v58 = *(uint64_t (****)())(a2 + 176);
  }
  else {
    uint64_t v58 = &off_253B020;
  }
  sub_14CA9FC(v55, (uint64_t)v58);
  if ((v20 & 0x400) == 0)
  {
LABEL_79:
    if ((v20 & 0x800) == 0) {
      goto LABEL_80;
    }
    goto LABEL_109;
  }
LABEL_101:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v59 = *(std::string **)(a1 + 184);
  if (!v59)
  {
    uint64_t v60 = *(void *)(a1 + 8);
    unint64_t v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      unint64_t v61 = (void *)*v61;
    }
    uint64_t v59 = (std::string *)sub_14D6FA8((uint64_t)v61);
    *(void *)(a1 + 184) = v59;
  }
  if (*(void *)(a2 + 184)) {
    uint64_t v62 = *(uint64_t (****)())(a2 + 184);
  }
  else {
    uint64_t v62 = &off_253B060;
  }
  sub_11D2930(v59, (uint64_t)v62);
  if ((v20 & 0x800) == 0)
  {
LABEL_80:
    if ((v20 & 0x1000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_117;
  }
LABEL_109:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  uint64_t v63 = *(std::string **)(a1 + 192);
  if (!v63)
  {
    uint64_t v64 = *(void *)(a1 + 8);
    unint64_t v65 = (void *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
    if (v64) {
      unint64_t v65 = (void *)*v65;
    }
    uint64_t v63 = (std::string *)sub_14D7030((uint64_t)v65);
    *(void *)(a1 + 192) = v63;
  }
  if (*(void *)(a2 + 192)) {
    unint64_t v66 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    unint64_t v66 = &off_253B090;
  }
  sub_14CBBAC(v63, (uint64_t)v66);
  if ((v20 & 0x1000) == 0)
  {
LABEL_81:
    if ((v20 & 0x2000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_125;
  }
LABEL_117:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  unint64_t v67 = *(std::string **)(a1 + 200);
  if (!v67)
  {
    uint64_t v68 = *(void *)(a1 + 8);
    unsigned int v69 = (void *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
    if (v68) {
      unsigned int v69 = (void *)*v69;
    }
    unint64_t v67 = (std::string *)sub_14D70DC((uint64_t)v69);
    *(void *)(a1 + 200) = v67;
  }
  if (*(void *)(a2 + 200)) {
    uint64_t v70 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    uint64_t v70 = &off_253B0E0;
  }
  sub_14CC468(v67, (uint64_t)v70);
  if ((v20 & 0x2000) == 0)
  {
LABEL_82:
    if ((v20 & 0x4000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_133;
  }
LABEL_125:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v71 = *(std::string **)(a1 + 208);
  if (!v71)
  {
    uint64_t v72 = *(void *)(a1 + 8);
    uint64_t v73 = (void *)(v72 & 0xFFFFFFFFFFFFFFFCLL);
    if (v72) {
      uint64_t v73 = (void *)*v73;
    }
    uint64_t v71 = (std::string *)sub_14D7164((uint64_t)v73);
    *(void *)(a1 + 208) = v71;
  }
  if (*(void *)(a2 + 208)) {
    uint64_t v74 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    uint64_t v74 = &off_253B110;
  }
  sub_117DA78(v71, (uint64_t)v74);
  if ((v20 & 0x4000) == 0)
  {
LABEL_83:
    if ((v20 & 0x8000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_141;
  }
LABEL_133:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  unsigned int v75 = *(std::string **)(a1 + 216);
  if (!v75)
  {
    uint64_t v76 = *(void *)(a1 + 8);
    uint64_t v77 = (void *)(v76 & 0xFFFFFFFFFFFFFFFCLL);
    if (v76) {
      uint64_t v77 = (void *)*v77;
    }
    sub_14D6E5C((uint64_t)v77);
    *(void *)(a1 + 216) = v75;
  }
  if (*(void *)(a2 + 216)) {
    unsigned int v78 = *(uint64_t (****)())(a2 + 216);
  }
  else {
    unsigned int v78 = &off_253AFB0;
  }
  sub_14C9C18(v75, (uint64_t)v78);
  if ((v20 & 0x8000) != 0)
  {
LABEL_141:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    int v79 = *(std::string **)(a1 + 224);
    if (!v79)
    {
      uint64_t v80 = *(void *)(a1 + 8);
      unsigned int v81 = (void *)(v80 & 0xFFFFFFFFFFFFFFFCLL);
      if (v80) {
        unsigned int v81 = (void *)*v81;
      }
      int v79 = (std::string *)sub_14D61F8((uint64_t)v81);
      *(void *)(a1 + 224) = v79;
    }
    if (*(void *)(a2 + 224)) {
      uint64_t v82 = *(uint64_t (****)())(a2 + 224);
    }
    else {
      uint64_t v82 = &off_253AB40;
    }
    sub_14BA7A0(v79, (uint64_t)v82);
  }
LABEL_149:
  if ((v20 & 0xFF0000) == 0) {
    goto LABEL_224;
  }
  if ((v20 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v83 = *(void *)(a1 + 232);
    if (!v83)
    {
      uint64_t v84 = *(void *)(a1 + 8);
      uint64_t v85 = (void *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
      if (v84) {
        uint64_t v85 = (void *)*v85;
      }
      uint64_t v83 = sub_14D7380((uint64_t)v85);
      *(void *)(a1 + 232) = v83;
    }
    if (*(void *)(a2 + 232)) {
      uint64_t v86 = *(uint64_t (****)())(a2 + 232);
    }
    else {
      uint64_t v86 = &off_253B1A8;
    }
    sub_14CEB0C(v83, (uint64_t)v86);
    if ((v20 & 0x20000) == 0)
    {
LABEL_152:
      if ((v20 & 0x40000) == 0) {
        goto LABEL_178;
      }
      goto LABEL_170;
    }
  }
  else if ((v20 & 0x20000) == 0)
  {
    goto LABEL_152;
  }
  *(_DWORD *)(a1 + 16) |= 0x20000u;
  unsigned int v87 = *(std::string **)(a1 + 240);
  if (!v87)
  {
    uint64_t v88 = *(void *)(a1 + 8);
    int v89 = (void *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
    if (v88) {
      int v89 = (void *)*v89;
    }
    unsigned int v87 = (std::string *)sub_14D6298((uint64_t)v89);
    *(void *)(a1 + 240) = v87;
  }
  if (*(void *)(a2 + 240)) {
    uint64_t v90 = *(uint64_t (****)())(a2 + 240);
  }
  else {
    uint64_t v90 = &off_253AB70;
  }
  sub_14BBAC8(v87, (uint64_t)v90);
  if ((v20 & 0x40000) != 0)
  {
LABEL_170:
    *(_DWORD *)(a1 + 16) |= 0x40000u;
    uint64_t v91 = *(std::string **)(a1 + 248);
    if (!v91)
    {
      uint64_t v92 = *(void *)(a1 + 8);
      v93 = (void *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
      if (v92) {
        v93 = (void *)*v93;
      }
      uint64_t v91 = (std::string *)sub_14D70DC((uint64_t)v93);
      *(void *)(a1 + 248) = v91;
    }
    if (*(void *)(a2 + 248)) {
      uint64_t v94 = *(uint64_t (****)())(a2 + 248);
    }
    else {
      uint64_t v94 = &off_253B0E0;
    }
    sub_14CC468(v91, (uint64_t)v94);
  }
LABEL_178:
  if ((v20 & 0x80000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x80000u;
    unsigned int v95 = *(std::string **)(a1 + 256);
    if (!v95)
    {
      uint64_t v96 = *(void *)(a1 + 8);
      uint64_t v97 = (void *)(v96 & 0xFFFFFFFFFFFFFFFCLL);
      if (v96) {
        uint64_t v97 = (void *)*v97;
      }
      unsigned int v95 = (std::string *)sub_14D6664((uint64_t)v97);
      *(void *)(a1 + 256) = v95;
    }
    if (*(void *)(a2 + 256)) {
      unsigned int v98 = *(uint64_t (****)())(a2 + 256);
    }
    else {
      unsigned int v98 = &off_253ACD0;
    }
    sub_14BFC04(v95, (uint64_t)v98);
    if ((v20 & 0x100000) == 0)
    {
LABEL_180:
      if ((v20 & 0x200000) == 0) {
        goto LABEL_181;
      }
      goto LABEL_200;
    }
  }
  else if ((v20 & 0x100000) == 0)
  {
    goto LABEL_180;
  }
  *(_DWORD *)(a1 + 16) |= 0x100000u;
  uint64_t v99 = *(std::string **)(a1 + 264);
  if (!v99)
  {
    uint64_t v100 = *(void *)(a1 + 8);
    unsigned int v101 = (void *)(v100 & 0xFFFFFFFFFFFFFFFCLL);
    if (v100) {
      unsigned int v101 = (void *)*v101;
    }
    uint64_t v99 = (std::string *)sub_14D6664((uint64_t)v101);
    *(void *)(a1 + 264) = v99;
  }
  if (*(void *)(a2 + 264)) {
    v102 = *(uint64_t (****)())(a2 + 264);
  }
  else {
    v102 = &off_253ACD0;
  }
  sub_14BFC04(v99, (uint64_t)v102);
  if ((v20 & 0x200000) == 0)
  {
LABEL_181:
    if ((v20 & 0x400000) == 0) {
      goto LABEL_182;
    }
    goto LABEL_208;
  }
LABEL_200:
  *(_DWORD *)(a1 + 16) |= 0x200000u;
  uint64_t v103 = *(std::string **)(a1 + 272);
  if (!v103)
  {
    uint64_t v104 = *(void *)(a1 + 8);
    unint64_t v105 = (void *)(v104 & 0xFFFFFFFFFFFFFFFCLL);
    if (v104) {
      unint64_t v105 = (void *)*v105;
    }
    sub_14D678C((uint64_t)v105);
    *(void *)(a1 + 272) = v103;
  }
  if (*(void *)(a2 + 272)) {
    v106 = *(uint64_t (****)())(a2 + 272);
  }
  else {
    v106 = &off_253AD00;
  }
  sub_14C0B00(v103, (uint64_t)v106);
  if ((v20 & 0x400000) == 0)
  {
LABEL_182:
    if ((v20 & 0x800000) == 0) {
      goto LABEL_224;
    }
    goto LABEL_216;
  }
LABEL_208:
  *(_DWORD *)(a1 + 16) |= 0x400000u;
  uint64_t v107 = *(std::string **)(a1 + 280);
  if (!v107)
  {
    uint64_t v108 = *(void *)(a1 + 8);
    uint64_t v109 = (void *)(v108 & 0xFFFFFFFFFFFFFFFCLL);
    if (v108) {
      uint64_t v109 = (void *)*v109;
    }
    uint64_t v107 = (std::string *)sub_14D6478((uint64_t)v109);
    *(void *)(a1 + 280) = v107;
  }
  if (*(void *)(a2 + 280)) {
    uint64_t v110 = *(uint64_t (****)())(a2 + 280);
  }
  else {
    uint64_t v110 = &off_253AC00;
  }
  sub_14BD84C(v107, (uint64_t)v110);
  if ((v20 & 0x800000) != 0)
  {
LABEL_216:
    *(_DWORD *)(a1 + 16) |= 0x800000u;
    uint64_t v111 = *(std::string **)(a1 + 288);
    if (!v111)
    {
      uint64_t v112 = *(void *)(a1 + 8);
      uint64_t v113 = (void *)(v112 & 0xFFFFFFFFFFFFFFFCLL);
      if (v112) {
        uint64_t v113 = (void *)*v113;
      }
      uint64_t v111 = (std::string *)sub_14D6340((uint64_t)v113);
      *(void *)(a1 + 288) = v111;
    }
    if (*(void *)(a2 + 288)) {
      uint64_t v114 = *(uint64_t (****)())(a2 + 288);
    }
    else {
      uint64_t v114 = &off_253ABC8;
    }
    sub_14BC568(v111, (uint64_t)v114);
  }
LABEL_224:
  if ((v20 & 0x3F000000) == 0) {
    goto LABEL_233;
  }
  if ((v20 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x1000000u;
    BOOL v116 = *(std::string **)(a1 + 296);
    if (!v116)
    {
      uint64_t v117 = *(void *)(a1 + 8);
      v118 = (void *)(v117 & 0xFFFFFFFFFFFFFFFCLL);
      if (v117) {
        v118 = (void *)*v118;
      }
      BOOL v116 = (std::string *)sub_14D68CC((uint64_t)v118);
      *(void *)(a1 + 296) = v116;
    }
    if (*(void *)(a2 + 296)) {
      v119 = *(uint64_t (****)())(a2 + 296);
    }
    else {
      v119 = &off_253AD58;
    }
    sub_14C202C(v116, (uint64_t)v119);
    if ((v20 & 0x2000000) == 0)
    {
LABEL_227:
      if ((v20 & 0x4000000) == 0) {
        goto LABEL_228;
      }
      goto LABEL_246;
    }
  }
  else if ((v20 & 0x2000000) == 0)
  {
    goto LABEL_227;
  }
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  if ((v20 & 0x4000000) == 0)
  {
LABEL_228:
    if ((v20 & 0x8000000) == 0) {
      goto LABEL_229;
    }
    goto LABEL_247;
  }
LABEL_246:
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  if ((v20 & 0x8000000) == 0)
  {
LABEL_229:
    if ((v20 & 0x10000000) == 0) {
      goto LABEL_230;
    }
LABEL_248:
    *(unsigned char *)(a1 + 317) = *(unsigned char *)(a2 + 317);
    if ((v20 & 0x20000000) == 0) {
      goto LABEL_232;
    }
    goto LABEL_231;
  }
LABEL_247:
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  if ((v20 & 0x10000000) != 0) {
    goto LABEL_248;
  }
LABEL_230:
  if ((v20 & 0x20000000) != 0) {
LABEL_231:
  }
    *(unsigned char *)(a1 + 318) = *(unsigned char *)(a2 + 318);
LABEL_232:
  *(_DWORD *)(a1 + 16) |= v20;
LABEL_233:
  uint64_t v115 = *(void *)(a2 + 8);
  if (v115)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v115 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14D2FB8(uint64_t a1)
{
  uint64_t result = sub_14D326C(a1 + 24);
  if (result)
  {
    uint64_t result = sub_14D32D0(a1 + 80);
    if (result)
    {
      int v3 = *(_DWORD *)(a1 + 16);
      if ((v3 & 4) != 0)
      {
        uint64_t v8 = *(void *)(a1 + 120);
        uint64_t v9 = *(unsigned int *)(v8 + 56);
        uint64_t v10 = *(void *)(v8 + 64);
        while ((int)v9 >= 1)
        {
          uint64_t v11 = *(void *)(v10 + 8 * v9--);
          if ((~*(_DWORD *)(v11 + 16) & 3) != 0) {
            return 0;
          }
        }
      }
      if ((v3 & 8) == 0 || (uint64_t result = sub_14BA1A8(*(void *)(a1 + 128)), result))
      {
        if ((v3 & 0x10) != 0)
        {
          uint64_t v4 = *(void *)(a1 + 136);
          uint64_t v5 = *(unsigned int *)(v4 + 24);
          while ((int)v5 >= 1)
          {
            uint64_t v6 = v5 - 1;
            BOOL v7 = sub_146A84C(*(void *)(*(void *)(v4 + 32) + 8 * v5));
            uint64_t v5 = v6;
            if (!v7) {
              return 0;
            }
          }
          int v3 = *(_DWORD *)(a1 + 16);
        }
        if ((v3 & 0x20) != 0)
        {
          uint64_t v17 = *(void *)(a1 + 144);
          uint64_t v18 = *(unsigned int *)(v17 + 80);
          uint64_t v19 = *(void *)(v17 + 88);
          while ((int)v18 >= 1)
          {
            uint64_t result = 0;
            uint64_t v20 = *(void *)(v19 + 8 * v18--);
            if ((~*(_DWORD *)(v20 + 16) & 3) != 0) {
              return result;
            }
          }
        }
        if ((v3 & 0x40) != 0)
        {
          uint64_t v12 = *(void *)(a1 + 152);
          if ((*(unsigned char *)(v12 + 16) & 2) != 0)
          {
            uint64_t v25 = *(void *)(v12 + 32);
            uint64_t v26 = *(unsigned int *)(v25 + 80);
            uint64_t v27 = *(void *)(v25 + 88);
            while ((int)v26 >= 1)
            {
              uint64_t result = 0;
              uint64_t v28 = *(void *)(v27 + 8 * v26--);
              if ((~*(_DWORD *)(v28 + 16) & 3) != 0) {
                return result;
              }
            }
          }
        }
        if ((v3 & 0x100) != 0)
        {
          uint64_t v21 = *(void *)(a1 + 168);
          uint64_t v22 = *(unsigned int *)(v21 + 32);
          uint64_t v23 = *(void *)(v21 + 40);
          while ((int)v22 >= 1)
          {
            uint64_t result = 0;
            uint64_t v24 = *(void *)(v23 + 8 * v22--);
            if ((~*(_DWORD *)(v24 + 16) & 3) != 0) {
              return result;
            }
          }
        }
        if ((v3 & 0x1000) == 0 || (uint64_t result = sub_14CC578(*(void *)(a1 + 200)), result))
        {
          if ((v3 & 0x4000) != 0)
          {
            uint64_t result = sub_14C9E0C(*(void *)(a1 + 216) + 80);
            if (!result) {
              return result;
            }
            int v3 = *(_DWORD *)(a1 + 16);
          }
          if ((v3 & 0x8000) != 0)
          {
            uint64_t v13 = *(void *)(a1 + 224);
            uint64_t v14 = *(unsigned int *)(v13 + 24);
            while ((int)v14 >= 1)
            {
              uint64_t v15 = v14 - 1;
              BOOL v16 = sub_146A84C(*(void *)(*(void *)(v13 + 32) + 8 * v14));
              uint64_t result = 0;
              uint64_t v14 = v15;
              if (!v16) {
                return result;
              }
            }
            int v3 = *(_DWORD *)(a1 + 16);
          }
          if ((v3 & 0x10000) != 0)
          {
            uint64_t result = sub_14CED08(*(void *)(a1 + 232));
            if (!result) {
              return result;
            }
            int v3 = *(_DWORD *)(a1 + 16);
          }
          if ((v3 & 0x20000) != 0)
          {
            uint64_t result = sub_14BBE18(*(void *)(a1 + 240));
            if (!result) {
              return result;
            }
            int v3 = *(_DWORD *)(a1 + 16);
          }
          if ((v3 & 0x40000) == 0 || (uint64_t result = sub_14CC578(*(void *)(a1 + 248)), result))
          {
            if ((v3 & 0x200000) != 0)
            {
              uint64_t v29 = *(void *)(a1 + 272);
              uint64_t v30 = *(unsigned int *)(v29 + 32);
              uint64_t v31 = *(void *)(v29 + 40);
              while ((int)v30 >= 1)
              {
                uint64_t result = 0;
                uint64_t v32 = *(void *)(v31 + 8 * v30--);
                if ((*(unsigned char *)(v32 + 16) & 4) == 0) {
                  return result;
                }
              }
            }
            if ((v3 & 0x400000) != 0)
            {
              uint64_t v33 = *(void *)(a1 + 280);
              uint64_t v34 = *(unsigned int *)(v33 + 24);
              uint64_t v35 = *(void *)(v33 + 32);
              while ((int)v34 >= 1)
              {
                uint64_t v36 = v34 - 1;
                BOOL v37 = sub_14BD284(*(void *)(v35 + 8 * v34));
                uint64_t result = 0;
                uint64_t v34 = v36;
                if (!v37) {
                  return result;
                }
              }
            }
            if ((v3 & 0x1000000) != 0)
            {
              uint64_t v38 = *(void *)(a1 + 296);
              uint64_t v39 = *(unsigned int *)(v38 + 24);
              uint64_t v40 = *(void *)(v38 + 32);
              do
              {
                uint64_t result = (int)v39 < 1;
                if ((int)v39 < 1) {
                  break;
                }
                uint64_t v41 = *(void *)(v40 + 8 * v39--);
              }
              while ((~*(_DWORD *)(v41 + 16) & 0x81) == 0);
            }
            else
            {
              return 1;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_14D326C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v2 = v1--;
      uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v4 = *(unsigned int *)(v3 + 56);
      uint64_t v5 = *(void *)(v3 + 64);
      while ((int)v4 >= 1)
      {
        uint64_t v6 = *(void *)(v5 + 8 * v4--);
        if ((~*(_DWORD *)(v6 + 16) & 3) != 0) {
          return 0;
        }
      }
    }
    while (v2 >= 2);
  }
  return 1;
}

uint64_t sub_14D32D0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v2 = v1--;
      uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v4 = *(unsigned int *)(v3 + 48);
      uint64_t v5 = *(void *)(v3 + 56);
      while ((int)v4 >= 1)
      {
        uint64_t v6 = *(void *)(v5 + 8 * v4--);
        if ((~*(_DWORD *)(v6 + 16) & 3) != 0) {
          return 0;
        }
      }
    }
    while (v2 >= 2);
  }
  return 1;
}

void *sub_14D3334@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntentMetadata");
}

uint64_t sub_14D3344(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D33E4(uint64_t a1)
{
  sub_14D3344(a1);

  operator delete();
}

uint64_t sub_14D341C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xFE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14D346C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v54 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v54, a3[11].i32[1])) {
    goto LABEL_2;
  }
  BOOL v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v54 + 1);
    unsigned int v9 = **(unsigned char **)v54;
    if ((char)**(unsigned char **)v54 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v54, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v54 + 2);
      }
    }
    *(void *)uint64_t v54 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_52;
        }
        v5 |= 2u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v54 = v12;
          *(unsigned char *)(a1 + 32) = v13 != 0;
          goto LABEL_60;
        }
        uint64_t v40 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v54 = v40;
        *(unsigned char *)(a1 + 32) = v41 != 0;
        if (v40) {
          goto LABEL_60;
        }
        goto LABEL_88;
      case 2u:
        if (v9 != 16) {
          goto LABEL_52;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v42 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v54 = v42;
          *(unsigned char *)(a1 + 33) = v43 != 0;
          if (!v42) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          *(void *)uint64_t v54 = v15;
          *(unsigned char *)(a1 + 33) = v16 != 0;
        }
        goto LABEL_60;
      case 3u:
        if (v9 != 24) {
          goto LABEL_52;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v54 = v44;
          *(unsigned char *)(a1 + 34) = v45 != 0;
          if (!v44) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v54 = v18;
          *(unsigned char *)(a1 + 34) = v19 != 0;
        }
        goto LABEL_60;
      case 4u:
        if (v9 != 32) {
          goto LABEL_52;
        }
        v5 |= 0x10u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v54 = v46;
          *(unsigned char *)(a1 + 35) = v47 != 0;
          if (!v46) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          *(void *)uint64_t v54 = v21;
          *(unsigned char *)(a1 + 35) = v22 != 0;
        }
        goto LABEL_60;
      case 5u:
        if (v9 != 40) {
          goto LABEL_52;
        }
        v5 |= 0x20u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v54 = v48;
          *(unsigned char *)(a1 + 36) = v49 != 0;
          if (!v48) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          *(void *)uint64_t v54 = v24;
          *(unsigned char *)(a1 + 36) = v25 != 0;
        }
        goto LABEL_60;
      case 6u:
        if (v9 != 50) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (std::string *)sub_1880F84((void *)(a1 + 24), v28);
        uint64_t v30 = (void *)sub_188C244(v29, *(char **)v54, (uint64_t)a3);
        goto LABEL_59;
      case 7u:
        if (v9 != 56) {
          goto LABEL_52;
        }
        uint64_t v31 = v8 + 1;
        unint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v33 = *v31;
        int v34 = v32 + (v33 << 7);
        unint64_t v32 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)uint64_t v54 = sub_188C138((uint64_t)v8, (v34 - 128));
          if (!*(void *)v54) {
            goto LABEL_88;
          }
          unint64_t v32 = v50;
        }
        else
        {
          uint64_t v31 = v8 + 2;
LABEL_42:
          *(void *)uint64_t v54 = v31;
        }
        if (v32 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 40) = v32;
          goto LABEL_60;
        }
        if (*v7) {
          uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v53 = 7;
        goto LABEL_82;
      case 8u:
        if (v9 != 64) {
          goto LABEL_52;
        }
        uint64_t v35 = v8 + 1;
        unint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v36 = *v35;
        int v37 = v32 + (v36 << 7);
        unint64_t v32 = (v37 - 128);
        if (v36 < 0)
        {
          *(void *)uint64_t v54 = sub_188C138((uint64_t)v8, (v37 - 128));
          if (!*(void *)v54) {
            goto LABEL_88;
          }
          unint64_t v32 = v51;
        }
        else
        {
          uint64_t v35 = v8 + 2;
LABEL_49:
          *(void *)uint64_t v54 = v35;
        }
        if (v32 > 0x16)
        {
          if (*v7) {
            uint64_t v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v53 = 8;
LABEL_82:
          sub_188C020(v53, v32, v52);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 44) = v32;
        }
        goto LABEL_60;
      default:
LABEL_52:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v7)
          {
            uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v54;
          }
          uint64_t v30 = sub_1885AC0(v9, v39, v8, a3);
LABEL_59:
          *(void *)uint64_t v54 = v30;
          if (!v30) {
            goto LABEL_88;
          }
LABEL_60:
          if (sub_11947B8((uint64_t)a3, (char **)v54, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_88:
        }
          *(void *)uint64_t v54 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v54;
    }
  }
}

unsigned char *sub_14D3980(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 33);
  *char v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 34);
  *char v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 35);
  *char v4 = 32;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 36);
  *char v4 = 40;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 1) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_31;
  }
LABEL_25:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v12 = *(int *)(a1 + 40);
  *char v4 = 56;
  v4[1] = v12;
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    unint64_t v13 = v12 >> 7;
    v4[2] = v12 >> 7;
    v4 += 3;
    if (v12 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v14 = v13 >> 14;
        v13 >>= 7;
        *v4++ = v13;
      }
      while (v14);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_31:
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 44);
    *char v4 = 64;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_14D3C78(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
      uint64_t v4 = *(void *)(v2 + 8);
      if ((v3 & 0x80u) == 0) {
        uint64_t v4 = v3;
      }
      uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v1 = 0;
    }
    if ((*(unsigned char *)(a1 + 16) & 2) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 4) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 8) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x10) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x20) != 0) {
      v1 += 2;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x40) != 0)
    {
      int v5 = *(_DWORD *)(a1 + 40);
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v5 >= 0) {
        uint64_t v7 = v6;
      }
      else {
        uint64_t v7 = 11;
      }
      v1 += v7;
    }
    if ((*(unsigned char *)(a1 + 16) & 0x80) != 0)
    {
      int v8 = *(_DWORD *)(a1 + 44);
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v8 >= 0) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 11;
      }
      v1 += v10;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v1 += v14;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_14D3DAC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_21;
    }
LABEL_20:
    v3[1].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 33);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
LABEL_21:
    v3[1].__r_.__value_.__s.__data_[10] = *(unsigned char *)(a2 + 34);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_23;
    }
LABEL_22:
    v3[1].__r_.__value_.__s.__data_[11] = *(unsigned char *)(a2 + 35);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_24;
    }
LABEL_23:
    v3[1].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 36);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_11;
    }
LABEL_24:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14D3ECC()
{
  return 1;
}

void *sub_14D3ED4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.RewrittenQueryNonPayloadField");
}

uint64_t sub_14D3EE4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_253B390)
  {
    uint64_t v5 = *(void **)(a1 + 120);
    if (v5)
    {
      sub_14CED98(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_14D3344(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_14DDEF0((void *)(a1 + 96));
  sub_14DE170((void *)(a1 + 72));
  sub_14DE870((void *)(a1 + 48));
  sub_14DE870((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D3FE4(uint64_t a1)
{
  sub_14D3EE4(a1);

  operator delete();
}

uint64_t sub_14D401C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14B424C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_14B424C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_14A49DC(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_14A4F50(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  int v14 = *(_DWORD *)(v1 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      uint64_t result = sub_14CF1D4(*(void *)(v1 + 120));
    }
    if ((v14 & 2) != 0) {
      uint64_t result = sub_14D341C(*(void *)(v1 + 128));
    }
  }
  char v16 = *(unsigned char *)(v1 + 8);
  uint64_t v15 = v1 + 8;
  *(_DWORD *)(v15 + 8) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

char *sub_14D4138(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v42 = a2;
  if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
    return v42;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v42 + 1;
    unsigned int v8 = *v42;
    if (*v42 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v42, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v42 + 2;
      }
    }
    uint64_t v42 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_61;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          unint64_t v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v42 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_14D5D64(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
            unint64_t v12 = (unsigned __int8 *)v42;
          }
          uint64_t v11 = (char *)sub_14D4580(a3, v15, v12);
          uint64_t v42 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_69;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_61;
        }
        unint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v42 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_14D5D64(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, v22);
            uint64_t v18 = (unsigned __int8 *)v42;
          }
          unint64_t v17 = (char *)sub_14D4580(a3, v21, v18);
          uint64_t v42 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_69;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v23 = *(void *)(a1 + 120);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_14D7434((uint64_t)v24);
          *(void *)(a1 + 120) = v23;
          uint64_t v7 = v42;
        }
        uint64_t v25 = (char *)sub_14D4610(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_68;
      case 4u:
        if (v8 != 34) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v26 = *(void **)(a1 + 128);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v27 = (void *)*v27;
          }
          int v26 = sub_14D7530((uint64_t)v27);
          *(void *)(a1 + 128) = v26;
          uint64_t v7 = v42;
        }
        uint64_t v25 = (char *)sub_14D46A0(a3, (uint64_t)v26, (unsigned __int8 *)v7);
        goto LABEL_68;
      case 5u:
        if (v8 != 42) {
          goto LABEL_61;
        }
        uint64_t v28 = v7 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          uint64_t v42 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 88);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 80), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 80) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            int v33 = sub_14D506C(*(void *)(a1 + 72));
            uint64_t v32 = sub_188CDC8(a1 + 72, (uint64_t)v33);
            uint64_t v29 = (unsigned __int8 *)v42;
          }
          uint64_t v28 = sub_14BCC20(a3, v32, v29);
          uint64_t v42 = v28;
          if (!v28) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 42) {
            goto LABEL_69;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_61;
        }
        int v34 = v7 - 1;
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          uint64_t v42 = v34 + 1;
          int v36 = *(_DWORD **)(a1 + 112);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 104), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 104) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_14D50E4(*(void *)(a1 + 96));
            uint64_t v38 = sub_188CDC8(a1 + 96, (uint64_t)v39);
            uint64_t v35 = (unsigned __int8 *)v42;
          }
          int v34 = (char *)sub_14B6E38(a3, v38, v35);
          uint64_t v42 = v34;
          if (!v34) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 50) {
            goto LABEL_69;
          }
        }
      default:
LABEL_61:
        if (v8) {
          BOOL v40 = (v8 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v6)
          {
            uint64_t v41 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v42;
          }
          uint64_t v25 = (char *)sub_1885AC0(v8, v41, v7, a3);
LABEL_68:
          uint64_t v42 = v25;
          if (!v25) {
            return 0;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            return v42;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v42;
    }
  }
}

uint64_t sub_14D4580(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14B4390(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D4610(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14CF488(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_14D46A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D346C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D4730(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14B5268(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_14B5268(v13, (unint64_t)v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if (v16)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v17 = *(void *)(a1 + 120);
    *__dst = 26;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    __dst[1] = v18;
    if (v18 > 0x7F) {
      uint64_t v19 = sub_188A9CC(v18, __dst + 1);
    }
    else {
      uint64_t v19 = __dst + 2;
    }
    __dst = sub_14D1058(v17, v19, a3);
  }
  if ((v16 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v20 = *(void *)(a1 + 128);
    *__dst = 34;
    unsigned int v21 = *(_DWORD *)(v20 + 20);
    __dst[1] = v21;
    if (v21 > 0x7F) {
      uint64_t v22 = sub_188A9CC(v21, __dst + 1);
    }
    else {
      uint64_t v22 = __dst + 2;
    }
    __dst = sub_14D3980(v20, (unint64_t)v22, a3);
  }
  int v23 = *(_DWORD *)(a1 + 80);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 42;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      __dst[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, __dst + 1);
      }
      else {
        uint64_t v27 = __dst + 2;
      }
      __dst = sub_14A4BAC(v25, (unint64_t)v27, a3);
    }
  }
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *__dst = 50;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      __dst[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, __dst + 1);
      }
      else {
        uint64_t v32 = __dst + 2;
      }
      __dst = sub_14A5174(v30, v32, a3);
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return __dst;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    int v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    int v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(__dst, v36, (int)v37);
    __dst += v38;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v36, v37, __dst);
}

uint64_t sub_14D4ACC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14B5A14(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_14B5A14(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_14A4D58(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_14A5260(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if ((v29 & 3) != 0)
  {
    if (v29)
    {
      uint64_t v30 = sub_14D1E6C(*(void *)(a1 + 120));
      v23 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v29 & 2) != 0)
    {
      uint64_t v31 = sub_14D3C78(*(void *)(a1 + 128));
      v23 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if (v32)
  {
    unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v23 += v35;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_14D4CD8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_14DF6B8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_14DF6B8((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_14DEF40((std::string *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_14DECA4((std::string *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 3) != 0)
  {
    if (v24)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 120);
      if (!v25)
      {
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v25 = sub_14D7434((uint64_t)v27);
        *(void *)(a1 + 120) = v25;
      }
      if (*(void *)(a2 + 120)) {
        uint64_t v28 = *(uint64_t (****)())(a2 + 120);
      }
      else {
        uint64_t v28 = &off_253B220;
      }
      sub_14D25E4(v25, (uint64_t)v28);
    }
    if ((v24 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      int v29 = *(std::string **)(a1 + 128);
      if (!v29)
      {
        uint64_t v30 = *(void *)(a1 + 8);
        uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          uint64_t v31 = (void *)*v31;
        }
        int v29 = (std::string *)sub_14D7530((uint64_t)v31);
        *(void *)(a1 + 128) = v29;
      }
      if (*(void *)(a2 + 128)) {
        uint64_t v32 = *(uint64_t (****)())(a2 + 128);
      }
      else {
        uint64_t v32 = &off_253B360;
      }
      sub_14D3DAC(v29, (uint64_t)v32);
    }
  }
  uint64_t v33 = *(void *)(a2 + 8);
  if (v33)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v33 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_14D4F78(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_14B6304(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_14B6304(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = *(void *)(*(void *)(a1 + 88) + 8 * v8--);
    if ((~*(_DWORD *)(v9 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 104);
  while ((int)v10 >= 1)
  {
    uint64_t v11 = *(void *)(*(void *)(a1 + 112) + 8 * v10--);
    if ((~*(_DWORD *)(v11 + 16) & 3) != 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_14D2FB8(*(void *)(a1 + 120));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_14D505C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.QueryIntent");
}

void *sub_14D506C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B9CB0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_14D50E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24B9D30;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_14D5168(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B9DB0;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_14D520C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24B9E30;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_14D5294(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B9EB0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

void *sub_14D5338(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24B9F30;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_14D53D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_14A7118(v2, a1, 0);
}

uint64_t sub_14D5434(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BA030;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = a1;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = a1;
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = a1;
  *(void *)(result + 144) = 0;
  *(void *)(result + 152) = 0;
  *(void *)(result + 160) = &qword_2550250;
  *(void *)(result + 168) = &qword_2550250;
  *(void *)(result + 184) = 0;
  *(void *)(result + 192) = 0;
  *(void *)(result + 176) = &qword_2550250;
  *(_DWORD *)(result + 199) = 0;
  return result;
}

void *sub_14D5510(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24BA0B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[6] = 0;
  result[7] = 0;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_14D55B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BA130;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D5640(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BA1B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(_DWORD *)(result + 96) = 0;
  return result;
}

void *sub_14D56F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24BA230;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

double sub_14D5778(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24BA2B0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_14D57FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BA330;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 40) = &qword_2550250;
  *(unsigned char *)(result + 64) = 0;
  return result;
}

uint64_t sub_14D588C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BA3B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_14D5930(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24BA430;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_14D59BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BA4B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_14D5A44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24BA530;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_DWORD *)(v2 + 104) = 0;
  return result;
}

void *sub_14D5AE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24BA5B0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_14D5B58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24BA630;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_14D5BD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BA6B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_14D5C58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24BA730;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_14D5CDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BA7B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D5D64(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BA830;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  return result;
}

uint64_t sub_14D5E0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BA8B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_14D5E88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24BA930;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 84) = 0u;
  return result;
}

void *sub_14D5F40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24BA9B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = 0;
  return result;
}

void *sub_14D5FF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24BAA30;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = a1;
  result[6] = 0;
  result[7] = 0;
  result[8] = &qword_2550250;
  return result;
}

uint64_t sub_14D609C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BAAB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 124) = 0u;
  *(_DWORD *)(result + 140) = 1;
  return result;
}

uint64_t sub_14D6158(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BAB30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D61F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BABB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_14D6298(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24BAC30;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = a1;
  result[6] = 0;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  return result;
}

uint64_t sub_14D6340(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BACB0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_14D63C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24BAD30;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = 0;
  return result;
}

uint64_t sub_14D6478(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BADB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_14D6518(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24BAE30;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = &qword_2550250;
  result[13] = &qword_2550250;
  result[14] = &qword_2550250;
  result[15] = &qword_2550250;
  result[16] = &qword_2550250;
  result[17] = 0;
  result[18] = 0;
  result[19] = 0;
  return result;
}

uint64_t sub_14D65DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BAEB0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_14D6664(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BAF30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D6704(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BAFB0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_14D678C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24BB030;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  return result;
}

void *sub_14D683C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24BB0B0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  result[7] = 0x100000000;
  return result;
}

uint64_t sub_14D68CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BB130;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D696C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BB1B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = 0;
  *(_DWORD *)(result + 88) = 1;
  return result;
}

uint64_t sub_14D6A24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BB230;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_14D6AD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BB2B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

uint64_t sub_14D6B88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BB330;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D6C10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BB3B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 80) = &qword_2550250;
  *(unsigned char *)(result + 104) = 0;
  return result;
}

int64x2_t sub_14D6CC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24BB430;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = &qword_2550250;
  *(void *)(v2 + 120) = &qword_2550250;
  *(void *)(v2 + 128) = &qword_2550250;
  *(void *)(v2 + 136) = &qword_2550250;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(void *)(v2 + 208) = 0;
  int64x2_t result = vdupq_n_s64(0x7FEFFFFFFFFFFFFFuLL);
  *(int64x2_t *)(v2 + 216) = result;
  return result;
}

uint64_t sub_14D6DA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BB4B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(_DWORD *)(result + 88) = 0;
  *(unsigned char *)(result + 92) = 0;
  return result;
}

double sub_14D6E5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24BB530;
  *(void *)(v2 + 8) = a1;
  double result = 0.0;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = 0;
  *(_WORD *)(v2 + 104) = 0;
  return result;
}

void *sub_14D6F1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24BB5B0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = &qword_2550250;
  return result;
}

void *sub_14D6FA8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24BB630;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

void *sub_14D7030(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_24BB6B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = &qword_2550250;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_14D70DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BB730;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D7164(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BB7B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_14D71EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BB830;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_14D726C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24BB8B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_14D7308(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24BB930;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_14D7380(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BB9B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(_DWORD *)(result + 112) = 0;
  return result;
}

uint64_t sub_14D7434(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BBA30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = a1;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = &qword_2550250;
  *(void *)(result + 112) = &qword_2550250;
  *(_OWORD *)(result + 136) = 0u;
  *(_OWORD *)(result + 152) = 0u;
  *(_OWORD *)(result + 168) = 0u;
  *(_OWORD *)(result + 184) = 0u;
  *(_OWORD *)(result + 200) = 0u;
  *(_OWORD *)(result + 216) = 0u;
  *(_OWORD *)(result + 232) = 0u;
  *(_OWORD *)(result + 120) = 0u;
  *(_OWORD *)(result + 248) = 0u;
  *(_OWORD *)(result + 264) = 0u;
  *(_OWORD *)(result + 280) = 0u;
  *(_OWORD *)(result + 296) = 0u;
  *(void *)(result + 311) = 0;
  return result;
}

void *sub_14D7530(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24BBAB0;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

double sub_14D75B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_24BBB30;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  return result;
}

uint64_t sub_14D767C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D771C(uint64_t a1)
{
  sub_14D767C(a1);

  operator delete();
}

uint64_t sub_14D7754(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xE) != 0)
  {
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14D77A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v33, (uint64_t)a3);
        goto LABEL_35;
      case 2u:
        if (v9 != 16) {
          goto LABEL_28;
        }
        v5 |= 2u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v27 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v33 = v27;
          *(void *)(a1 + 32) = v28;
          if (!v27) {
            goto LABEL_47;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v33 = v16;
          *(void *)(a1 + 32) = v17;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_28;
        }
        v5 |= 4u;
        int v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v20);
          *(void *)uint64_t v33 = v29;
          *(void *)(a1 + 40) = v30;
          if (!v29) {
            goto LABEL_47;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v33 = v19;
          *(void *)(a1 + 40) = v20;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        v5 |= 8u;
        int v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v23);
          *(void *)uint64_t v33 = v31;
          *(void *)(a1 + 48) = v32;
          if (!v31) {
            goto LABEL_47;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_27:
          *(void *)uint64_t v33 = v22;
          *(void *)(a1 + 48) = v23;
        }
        goto LABEL_36;
      default:
LABEL_28:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v33;
          }
          uint64_t v15 = sub_1885AC0(v9, v26, v8, a3);
LABEL_35:
          *(void *)uint64_t v33 = v15;
          if (!v15) {
            goto LABEL_47;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

unsigned char *sub_14D7A6C(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 40);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 48);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_14D7CAC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_12:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14D7DB8(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_16;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_16:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14D7E98()
{
  return 1;
}

void *sub_14D7EA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.proto.BrandRelationship");
}

void *sub_14D7EB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24BBBB0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_14D7F38(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253B418)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D7FF0(uint64_t a1)
{
  sub_14D7F38(a1);

  operator delete();
}

char *sub_14D8028(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    BOOL v25 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v12 = *(void **)(a1 + 24);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          unint64_t v12 = sub_14DB564((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          unint64_t v8 = v25;
        }
        unint64_t v14 = (char *)sub_14A7DFC(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_32;
      case 2u:
        if (v9 != 17) {
          goto LABEL_25;
        }
        uint64_t v16 = *(void *)v8;
        unint64_t v15 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v16;
        goto LABEL_24;
      case 3u:
        if (v9 != 24) {
          goto LABEL_25;
        }
        v5 |= 4u;
        uint64_t v17 = v8 + 1;
        int v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v18);
          BOOL v25 = v23;
          *(_DWORD *)(a1 + 40) = v24;
          if (!v23) {
            goto LABEL_40;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_21:
          BOOL v25 = v17;
          *(_DWORD *)(a1 + 40) = v18;
        }
        goto LABEL_33;
      case 4u:
        if (v9 != 37) {
          goto LABEL_25;
        }
        int v20 = *(_DWORD *)v8;
        unint64_t v15 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 44) = v20;
LABEL_24:
        BOOL v25 = v15;
        goto LABEL_33;
      default:
LABEL_25:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            int v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v25;
          }
          unint64_t v14 = (char *)sub_1885AC0(v9, v22, v8, a3);
LABEL_32:
          BOOL v25 = v14;
          if (!v14) {
            goto LABEL_40;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_40:
        }
          BOOL v25 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v25;
    }
  }
}

unsigned char *sub_14D8278(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_14DB148(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *int v4 = 17;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 40);
    *int v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v14 = *(_DWORD *)(a1 + 44);
    *int v4 = 37;
    *(_DWORD *)(v4 + 1) = v14;
    v4 += 5;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_14D848C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_14DB2B0(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_14D8564@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.SpellSuggestion");
}

uint64_t sub_14D8574(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D8614(uint64_t a1)
{
  sub_14D8574(a1);

  operator delete();
}

uint64_t sub_14D864C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14D8694(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    unint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 17)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    *(void *)uint64_t v19 = v7 + 8;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v19;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_14D8830(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *int v4 = 17;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_14D8934(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_14D89D4()
{
  return 1;
}

void *sub_14D89DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.TokenCandidate");
}

uint64_t sub_14D89EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_253B448)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_14DADD4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_14DF744((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D8AB0(uint64_t a1)
{
  sub_14D89EC(a1);

  operator delete();
}

uint64_t sub_14D8AE8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14D864C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_14A7068(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_WORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_14D8B7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void **)(a1 + 48);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_14DB564((uint64_t)v13);
          *(void *)(a1 + 48) = v12;
          uint64_t v8 = v33;
        }
        int v14 = (char *)sub_14A7DFC(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_42;
      case 2u:
        if (v9 != 16) {
          goto LABEL_35;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v33 = v29;
          *(unsigned char *)(a1 + 56) = v30 != 0;
          if (!v29) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          uint64_t v33 = v15;
          *(unsigned char *)(a1 + 56) = v16 != 0;
        }
        goto LABEL_43;
      case 3u:
        if (v9 != 24) {
          goto LABEL_35;
        }
        v5 |= 4u;
        int v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v33 = v31;
          *(unsigned char *)(a1 + 57) = v32 != 0;
          if (!v31) {
            goto LABEL_52;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_24:
          uint64_t v33 = v18;
          *(unsigned char *)(a1 + 57) = v19 != 0;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 34) {
          goto LABEL_35;
        }
        BOOL v21 = v8 - 1;
        while (1)
        {
          int v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v33 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_14D94A0(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            int v22 = (unsigned __int8 *)v33;
          }
          BOOL v21 = (char *)sub_14D8E9C(a3, v25, v22);
          uint64_t v33 = v21;
          if (!v21) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_43;
          }
        }
      default:
LABEL_35:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v33;
          }
          int v14 = (char *)sub_1885AC0(v9, v28, v8, a3);
LABEL_42:
          uint64_t v33 = v14;
          if (!v14) {
            goto LABEL_52;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

uint64_t sub_14D8E9C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D8694(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14D8F2C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_14DB148(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 56);
  *uint64_t v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 57);
    *uint64_t v4 = 24;
    v4[1] = v11;
    v4 += 2;
  }
LABEL_17:
  int v12 = *(_DWORD *)(a1 + 32);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_14D8830(v14, v16, a3);
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    int v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    int v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_14D9154(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14D8934(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_14DB2B0(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v10 = v2 + 2;
    if ((v8 & 2) == 0) {
      uint64_t v10 = v2;
    }
    if ((v8 & 4) != 0) {
      uint64_t v2 = v10 + 2;
    }
    else {
      uint64_t v2 = v10;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14D9258(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_14DF7C4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v13 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v13 = (void *)*v13;
        }
        std::string::pointer data = (std::string *)sub_14DB564((uint64_t)v13);
        v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_253B4F8;
      }
      uint64_t result = sub_14A8F98(data, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 57);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_14D93B0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  uint64_t v4 = *(void *)(v2 + 40);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = v3 - 1;
    BOOL v6 = sub_14DA84C(*(void *)(v4 + 8 * v3));
    uint64_t v3 = v5;
  }
  while (v6);
  return v1;
}

void *sub_14D9414@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.TokenCandidates");
}

double sub_14D9424(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24BBC30;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_14D94A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24BBCB0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_14D9524(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BBD30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_WORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_14D95C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D9668(uint64_t a1)
{
  sub_14D95C8(a1);

  operator delete();
}

uint64_t sub_14D96A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14D96E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  BOOL v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      int v20 = (uint64_t *)*v20;
    }
    uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v14 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_30:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_42;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 16)
  {
    unsigned int v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v18 - 128));
        if (!*(void *)v24) {
          goto LABEL_42;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      unsigned int v15 = v7 + 2;
    }
    *(void *)uint64_t v24 = v15;
LABEL_25:
    if (v16 > 3)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_30;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_42:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_14D98F8(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_14D9A40(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t result = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    int v7 = *(_DWORD *)(a1 + 32);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
  return result;
}

uint64_t sub_14D9ACC(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_14D9A40(a1);
  }
  else
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    int v6 = *(_DWORD *)(a1 + 32);
    uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    if (v6 >= 0) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 10;
    }
    uint64_t result = v4 + v5 + v8 + 2;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_14D9BA0(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_14D9BB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.TokenForm");
}

uint64_t sub_14D9BC4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_253B488)
  {
    int v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_14DA8C8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_14DF840((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14D9CB8(uint64_t a1)
{
  sub_14D9BC4(a1);

  operator delete();
}

uint64_t sub_14D9CF0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14D96A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_18;
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t result = sub_14D9DF8(*(void *)(v1 + 64));
    goto LABEL_10;
  }
  **(unsigned char **)unint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  if ((v5 & 4) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_14D9DF8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14D9E1C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
LABEL_17:
        unint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        int v17 = (void *)sub_188C244(v16, *(char **)v33, (uint64_t)a3);
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v33 = v31;
          *(_DWORD *)(a1 + 72) = v32;
          if (!v31) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_22:
          *(void *)uint64_t v33 = v19;
          *(_DWORD *)(a1 + 72) = v18;
        }
        goto LABEL_47;
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          unint64_t v22 = v21 + 1;
          *(void *)uint64_t v33 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_14DB3B8(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, v26);
            unint64_t v22 = *(unsigned __int8 **)v33;
          }
          uint64_t v21 = (unsigned __int8 *)sub_14DA148(a3, v25, v22);
          *(void *)uint64_t v33 = v21;
          if (!v21) {
            goto LABEL_54;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_47;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        BOOL v27 = *(void **)(a1 + 64);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v28 = (void *)*v28;
          }
          BOOL v27 = sub_14DB4EC((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          unint64_t v8 = *(unsigned __int8 **)v33;
        }
        int v17 = sub_14DA1D8(a3, (uint64_t)v27, v8);
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v33;
          }
          int v17 = sub_1885AC0(v9, v30, (char *)v8, a3);
LABEL_46:
          *(void *)uint64_t v33 = v17;
          if (!v17) {
            goto LABEL_54;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_54:
        }
          *(void *)uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

uint64_t sub_14DA148(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D96E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14DA1D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14DA974(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_14DA268(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 72);
  *uint64_t v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_14D98F8(v12, v14, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    *uint64_t v4 = 42;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    uint64_t v4 = sub_14DAB5C(v15, (unint64_t)v17, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_14DA4DC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14D9ACC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_26;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v15 = sub_14DAD00(*(void *)(a1 + 64));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_22:
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16 < 0) {
    uint64_t v17 = 11;
  }
  else {
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v17;
LABEL_26:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_14DA694(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_14DF940((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_21:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    uint64_t v17 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v17)
    {
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = (std::string *)sub_14DB4EC((uint64_t)v19);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v17;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v20 = &off_253B4D8;
    }
    uint64_t result = sub_117EF04(v17, (uint64_t)v20);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14DA84C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  return (*(unsigned char *)(a1 + 16) & 4) == 0 || (~*(_DWORD *)(*(void *)(a1 + 64) + 16) & 3) == 0;
}

BOOL sub_14DA8A4(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_14DA8B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.Token");
}

void *sub_14DA8C8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14DA93C(void *a1)
{
  sub_14DA8C8(a1);

  operator delete();
}

char *sub_14DA974(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      int v16 = v8 + 2;
LABEL_25:
      uint64_t v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_14DAB5C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_14DAD00(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 3) != 0)
  {
    uint64_t result = sub_1272460((_DWORD *)a1);
  }
  else
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v3 = 12;
    }
    else {
      uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    int v5 = *(_DWORD *)(a1 + 28);
    if (v5 < 0) {
      uint64_t v6 = 10;
    }
    else {
      uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t result = v3 + v6;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_14DADC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.TokenSpan");
}

uint64_t sub_14DADD4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_14DF8C0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14DAE80(uint64_t a1)
{
  sub_14DADD4(a1);

  operator delete();
}

uint64_t sub_14DAEB8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      int v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)int v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      *(void *)int v24 = v18 + 1;
      int v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_14DB440(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = *(unsigned __int8 **)v24;
      }
      uint64_t v18 = (char *)sub_14DB0B8(a3, v22, v19);
      *(void *)int v24 = v18;
      if (!v18) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)int v24 = 0;
  return *(void *)v24;
}

uint64_t sub_14DB0B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14D9E1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14DB148(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14DA268(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_14DB2B0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14DA4DC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_14DB3A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.search.TokenSet");
}

uint64_t sub_14DB3B8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24BBDB0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_14DB440(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24BBE30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

void *sub_14DB4EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24BBEB0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_14DB564(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24BBF30;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void sub_14DB608()
{
}

void *sub_14DB660(uint64_t a1, uint64_t a2)
{
  return sub_14A23B8(a2);
}

uint64_t sub_14DB668(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DB670()
{
}

uint64_t sub_14DB6C4(uint64_t a1, uint64_t a2)
{
  return sub_14A243C(a2);
}

uint64_t sub_14DB6CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DB6D4()
{
}

uint64_t sub_14DB730(uint64_t a1, uint64_t a2)
{
  return sub_14A24DC(a2);
}

uint64_t sub_14DB738(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DB740()
{
}

uint64_t sub_14DB79C(uint64_t a1, uint64_t a2)
{
  return sub_14A2564(a2);
}

uint64_t sub_14DB7A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DB7AC()
{
}

void *sub_14DB804(uint64_t a1, uint64_t a2)
{
  return sub_14A25EC(a2);
}

uint64_t sub_14DB80C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DB814()
{
}

void *sub_14DB864(uint64_t a1, uint64_t a2)
{
  return sub_14A2670(a2);
}

uint64_t sub_14DB86C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DB874()
{
}

void *sub_14DB8CC(uint64_t a1, uint64_t a2)
{
  return sub_14A26EC(a2);
}

uint64_t sub_14DB8D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DB8DC()
{
}

uint64_t sub_14DB930(uint64_t a1, uint64_t a2)
{
  return sub_14A2770(a2);
}

uint64_t sub_14DB938(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DB940()
{
}

uint64_t sub_14DB994(uint64_t a1, uint64_t a2)
{
  return sub_14A4714(a2);
}

uint64_t sub_14DB99C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DB9A4()
{
}

double sub_14DBA0C(uint64_t a1, uint64_t a2)
{
  return sub_14A47B4(a2);
}

uint64_t sub_14DBA14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBA1C()
{
}

void *sub_14DBA74(uint64_t a1, uint64_t a2)
{
  return sub_14A4848(a2);
}

uint64_t sub_14DBA7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBA84()
{
}

uint64_t sub_14DBAE0(uint64_t a1, uint64_t a2)
{
  return sub_14DB3B8(a2);
}

uint64_t sub_14DBAE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBAF0()
{
}

uint64_t sub_14DBB54(uint64_t a1, uint64_t a2)
{
  return sub_14DB440(a2);
}

uint64_t sub_14DBB5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBB64()
{
}

void *sub_14DBBB0(uint64_t a1, uint64_t a2)
{
  return sub_14DB4EC(a2);
}

uint64_t sub_14DBBB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBBC0()
{
}

void *sub_14DBC1C(uint64_t a1, uint64_t a2)
{
  return sub_14DB564(a2);
}

uint64_t sub_14DBC24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBC2C()
{
}

double sub_14DBC7C(uint64_t a1, uint64_t a2)
{
  return sub_14D9424(a2);
}

uint64_t sub_14DBC84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBC8C()
{
}

void *sub_14DBCE4(uint64_t a1, uint64_t a2)
{
  return sub_14D94A0(a2);
}

uint64_t sub_14DBCEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBCF4()
{
}

uint64_t sub_14DBD48(uint64_t a1, uint64_t a2)
{
  return sub_14D9524(a2);
}

uint64_t sub_14DBD50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBD58()
{
}

void *sub_14DBDB4(uint64_t a1, uint64_t a2)
{
  return sub_14D7EB0(a2);
}

uint64_t sub_14DBDBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBDC4()
{
}

void *sub_14DBE10(uint64_t a1, uint64_t a2)
{
  return sub_14D506C(a2);
}

uint64_t sub_14DBE18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBE20()
{
}

void *sub_14DBE78(uint64_t a1, uint64_t a2)
{
  return sub_14D50E4(a2);
}

uint64_t sub_14DBE80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBE88()
{
}

void *sub_14DBEE4(uint64_t a1, uint64_t a2)
{
  return sub_14D5168(a2);
}

uint64_t sub_14DBEEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBEF4()
{
}

uint64_t sub_14DBF50(uint64_t a1, uint64_t a2)
{
  return sub_14D520C(a2);
}

uint64_t sub_14DBF58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBF60()
{
}

void *sub_14DBFBC(uint64_t a1, uint64_t a2)
{
  return sub_14D5294(a2);
}

uint64_t sub_14DBFC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DBFCC()
{
}

void *sub_14DC020(uint64_t a1, uint64_t a2)
{
  return sub_14D5338(a2);
}

uint64_t sub_14DC028(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC030()
{
}

void *sub_14DC074(uint64_t a1, uint64_t a2)
{
  return sub_14D53D4(a2);
}

uint64_t sub_14DC07C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC084()
{
}

uint64_t sub_14DC0FC(uint64_t a1, uint64_t a2)
{
  return sub_14D5434(a2);
}

uint64_t sub_14DC104(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC10C()
{
}

void *sub_14DC16C(uint64_t a1, uint64_t a2)
{
  return sub_14D5510(a2);
}

uint64_t sub_14DC174(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC17C()
{
}

uint64_t sub_14DC1D8(uint64_t a1, uint64_t a2)
{
  return sub_14D55B8(a2);
}

uint64_t sub_14DC1E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC1E8()
{
}

uint64_t sub_14DC250(uint64_t a1, uint64_t a2)
{
  return sub_14D5640(a2);
}

uint64_t sub_14DC258(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC260()
{
}

void *sub_14DC2B8(uint64_t a1, uint64_t a2)
{
  return sub_14D56F4(a2);
}

uint64_t sub_14DC2C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC2C8()
{
}

double sub_14DC320(uint64_t a1, uint64_t a2)
{
  return sub_14D5778(a2);
}

uint64_t sub_14DC328(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC330()
{
}

uint64_t sub_14DC394(uint64_t a1, uint64_t a2)
{
  return sub_14D57FC(a2);
}

uint64_t sub_14DC39C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC3A4()
{
}

uint64_t sub_14DC3F8(uint64_t a1, uint64_t a2)
{
  return sub_14D588C(a2);
}

uint64_t sub_14DC400(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC408()
{
}

void *sub_14DC468(uint64_t a1, uint64_t a2)
{
  return sub_14D5930(a2);
}

uint64_t sub_14DC470(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC478()
{
}

uint64_t sub_14DC4D4(uint64_t a1, uint64_t a2)
{
  return sub_14D59BC(a2);
}

uint64_t sub_14DC4DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC4E4()
{
}

double sub_14DC554(uint64_t a1, uint64_t a2)
{
  return sub_14D5A44(a2);
}

uint64_t sub_14DC55C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC564()
{
}

void *sub_14DC5B0(uint64_t a1, uint64_t a2)
{
  return sub_14D5AE0(a2);
}

uint64_t sub_14DC5B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC5C0()
{
}

void *sub_14DC60C(uint64_t a1, uint64_t a2)
{
  return sub_14D5B58(a2);
}

uint64_t sub_14DC614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC61C()
{
}

uint64_t sub_14DC678(uint64_t a1, uint64_t a2)
{
  return sub_14D5BD0(a2);
}

uint64_t sub_14DC680(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC688()
{
}

void *sub_14DC6E0(uint64_t a1, uint64_t a2)
{
  return sub_14D5C58(a2);
}

uint64_t sub_14DC6E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC6F0()
{
}

uint64_t sub_14DC74C(uint64_t a1, uint64_t a2)
{
  return sub_14D5CDC(a2);
}

uint64_t sub_14DC754(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC75C()
{
}

uint64_t sub_14DC7BC(uint64_t a1, uint64_t a2)
{
  return sub_14D5D64(a2);
}

uint64_t sub_14DC7C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC7CC()
{
}

uint64_t sub_14DC81C(uint64_t a1, uint64_t a2)
{
  return sub_14D5E0C(a2);
}

uint64_t sub_14DC824(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC82C()
{
}

double sub_14DC888(uint64_t a1, uint64_t a2)
{
  return sub_14D5E88(a2);
}

uint64_t sub_14DC890(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC898()
{
}

void *sub_14DC8FC(uint64_t a1, uint64_t a2)
{
  return sub_14D5F40(a2);
}

uint64_t sub_14DC904(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC90C()
{
}

void *sub_14DC96C(uint64_t a1, uint64_t a2)
{
  return sub_14D5FF0(a2);
}

uint64_t sub_14DC974(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC97C()
{
}

uint64_t sub_14DC9E4(uint64_t a1, uint64_t a2)
{
  return sub_14D609C(a2);
}

uint64_t sub_14DC9EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DC9F4()
{
}

uint64_t sub_14DCA48(uint64_t a1, uint64_t a2)
{
  return sub_14D6158(a2);
}

uint64_t sub_14DCA50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DCA58()
{
}

uint64_t sub_14DCAAC(uint64_t a1, uint64_t a2)
{
  return sub_14D61F8(a2);
}

uint64_t sub_14DCAB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DCABC()
{
}

void *sub_14DCB14(uint64_t a1, uint64_t a2)
{
  return sub_14D6298(a2);
}

uint64_t sub_14DCB1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCB24()
{
}

uint64_t sub_14DCB80(uint64_t a1, uint64_t a2)
{
  return sub_14D6340(a2);
}

uint64_t sub_14DCB88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCB90()
{
}

void *sub_14DCBF4(uint64_t a1, uint64_t a2)
{
  return sub_14D63C8(a2);
}

uint64_t sub_14DCBFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCC04()
{
}

uint64_t sub_14DCC58(uint64_t a1, uint64_t a2)
{
  return sub_14D6478(a2);
}

uint64_t sub_14DCC60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DCC68()
{
}

void *sub_14DCCD8(uint64_t a1, uint64_t a2)
{
  return sub_14D6518(a2);
}

uint64_t sub_14DCCE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCCE8()
{
}

uint64_t sub_14DCD44(uint64_t a1, uint64_t a2)
{
  return sub_14D65DC(a2);
}

uint64_t sub_14DCD4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCD54()
{
}

uint64_t sub_14DCDA8(uint64_t a1, uint64_t a2)
{
  return sub_14D6664(a2);
}

uint64_t sub_14DCDB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DCDB8()
{
}

uint64_t sub_14DCE14(uint64_t a1, uint64_t a2)
{
  return sub_14D6704(a2);
}

uint64_t sub_14DCE1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCE24()
{
}

double sub_14DCE7C(uint64_t a1, uint64_t a2)
{
  return sub_14D678C(a2);
}

uint64_t sub_14DCE84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCE8C()
{
}

void *sub_14DCEF0(uint64_t a1, uint64_t a2)
{
  return sub_14D683C(a2);
}

uint64_t sub_14DCEF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCF00()
{
}

uint64_t sub_14DCF54(uint64_t a1, uint64_t a2)
{
  return sub_14D68CC(a2);
}

uint64_t sub_14DCF5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_14DCF64()
{
}

uint64_t sub_14DCFD0(uint64_t a1, uint64_t a2)
{
  return sub_14D696C(a2);
}

uint64_t sub_14DCFD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DCFE0()
{
}

uint64_t sub_14DD044(uint64_t a1, uint64_t a2)
{
  return sub_14D6A24(a2);
}

uint64_t sub_14DD04C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD054()
{
}

uint64_t sub_14DD0C0(uint64_t a1, uint64_t a2)
{
  return sub_14D6AD0(a2);
}

uint64_t sub_14DD0C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD0D0()
{
}

uint64_t sub_14DD12C(uint64_t a1, uint64_t a2)
{
  return sub_14D6B88(a2);
}

uint64_t sub_14DD134(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD13C()
{
}

uint64_t sub_14DD1A4(uint64_t a1, uint64_t a2)
{
  return sub_14D6C10(a2);
}

uint64_t sub_14DD1AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD1B4()
{
}

double sub_14DD234(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = sub_14D6CC8(a2).u64[0];
  return result;
}

uint64_t sub_14DD23C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD244()
{
}

uint64_t sub_14DD2B0(uint64_t a1, uint64_t a2)
{
  return sub_14D6DA4(a2);
}

uint64_t sub_14DD2B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD2C0()
{
}

double sub_14DD31C(uint64_t a1, uint64_t a2)
{
  return sub_14D6E5C(a2);
}

uint64_t sub_14DD324(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD32C()
{
}

void *sub_14DD38C(uint64_t a1, uint64_t a2)
{
  return sub_14D6F1C(a2);
}

uint64_t sub_14DD394(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD39C()
{
}

void *sub_14DD3F8(uint64_t a1, uint64_t a2)
{
  return sub_14D6FA8(a2);
}

uint64_t sub_14DD400(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD408()
{
}

void *sub_14DD46C(uint64_t a1, uint64_t a2)
{
  return sub_14D7030(a2);
}

uint64_t sub_14DD474(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD47C()
{
}

uint64_t sub_14DD4D8(uint64_t a1, uint64_t a2)
{
  return sub_14D70DC(a2);
}

uint64_t sub_14DD4E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD4E8()
{
}

uint64_t sub_14DD544(uint64_t a1, uint64_t a2)
{
  return sub_14D7164(a2);
}

uint64_t sub_14DD54C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD554()
{
}

uint64_t sub_14DD5A8(uint64_t a1, uint64_t a2)
{
  return sub_14D71EC(a2);
}

uint64_t sub_14DD5B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD5B8()
{
}

void *sub_14DD60C(uint64_t a1, uint64_t a2)
{
  return sub_14D726C(a2);
}

uint64_t sub_14DD614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD61C()
{
}

void *sub_14DD668(uint64_t a1, uint64_t a2)
{
  return sub_14D7308(a2);
}

uint64_t sub_14DD670(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD678()
{
}

uint64_t sub_14DD6D4(uint64_t a1, uint64_t a2)
{
  return sub_14D7380(a2);
}

uint64_t sub_14DD6DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

void sub_14DD6E4()
{
}

uint64_t sub_14DD780(uint64_t a1, uint64_t a2)
{
  return sub_14D7434(a2);
}

uint64_t sub_14DD788(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD790()
{
}

void *sub_14DD7EC(uint64_t a1, uint64_t a2)
{
  return sub_14D7530(a2);
}

uint64_t sub_14DD7F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD7FC()
{
}

double sub_14DD85C(uint64_t a1, uint64_t a2)
{
  return sub_14D75B8(a2);
}

uint64_t sub_14DD864(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_14DD86C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A0E24(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DD8EC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A132C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DD96C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A1884(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_14DD9EC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14A25EC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = sub_122BC84(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DDA68(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14A2670(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = sub_14DDAE4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DDAE4(uint64_t a1, std::string *a2)
{
  return sub_14A1790(a2, a1);
}

std::string *sub_14DDAF4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14A26EC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_14DDB70(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A59FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDBF0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A6078(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDC70(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A6964(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDCF0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14D767C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDD70(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14AACD8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDDF0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14AF030();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDE70(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14B640C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDEF0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A4E60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDF70(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A09AC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DDFF0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14D89EC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE070(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14D7F38(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE0F0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A5364(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE170(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A4930(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE1F0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14BC6B0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE270(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14BF234(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE2F0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14BFCEC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE370(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14C0CE4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE3F0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14C3EC4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE470(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14C6700(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE4F0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14DADD4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE570(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14CCC48(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE5F0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1318AD4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE670(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14CD408(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE6F0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14CDC40(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE770(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14B74F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE7F0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14B801C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DE870(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14B3F9C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_14DE8F0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14D520C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = (uint64_t *)sub_1194C34(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DE96C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D5294(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = sub_14DE9E8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DE9E8(uint64_t a1, std::string *a2)
{
  return sub_14A6820(a2, a1);
}

std::string *sub_14DE9F8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D5338(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = sub_14DEA74(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DEA74(uint64_t a1, std::string *a2)
{
  return sub_14A6F64(a2, a1);
}

std::string *sub_14DEA84(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D7EB0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = sub_14DEB00(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DEB00(uint64_t a1, std::string *a2)
{
  return sub_14D7DB8(a2, a1);
}

std::string *sub_14DEB10(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D5510(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      double result = sub_14DEB8C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DEB8C(uint64_t a1, std::string *a2)
{
  return sub_14AB6C0(a2, a1);
}

uint64_t *sub_14DEB9C(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14D588C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_14DEC18(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_14DEC18(uint64_t a1, uint64_t a2)
{
  return sub_14AEE28(a2, a1);
}

uint64_t *sub_14DEC28(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14D5E0C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_11DC268(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DECA4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D50E4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_14DED20(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14A2564(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_148E47C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_14DED9C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14D9524(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_14DEE18(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DEE18(uint64_t a1, std::string *a2)
{
  return sub_14D9258(a2, a1);
}

void sub_14DEE28(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_14D9424(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_14DEEA4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_14DEEA4(uint64_t a1, std::string *a2)
{
  return sub_14BA0B0(a2, a1);
}

std::string *sub_14DEEB4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D5168(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_14DEF30(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DEF30(uint64_t a1, std::string *a2)
{
  return sub_14A5904(a2, a1);
}

std::string *sub_14DEF40(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D506C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_14DEFBC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DEFBC(uint64_t a1, std::string *a2)
{
  return sub_14A4DF0(a2, a1);
}

std::string *sub_14DEFCC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D63C8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_14DF048(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF048(uint64_t a1, std::string *a2)
{
  return sub_14BD0E0(a2, a1);
}

uint64_t *sub_14DF058(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14D65DC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_148E47C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_14DF0D4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14D6704(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_148E47C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF150(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D683C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_14DF1CC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF1CC(uint64_t a1, std::string *a2)
{
  return sub_14C1968(a2, a1);
}

uint64_t *sub_14DF1DC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14D6AD0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_14DF258(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF258(uint64_t a1, std::string *a2)
{
  return sub_14C4C94(a2, a1);
}

void sub_14DF268(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_14D6CC8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_14DF2E4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_14DF2E4(uint64_t a1, std::string *a2)
{
  return sub_14C7F88(a2, a1);
}

std::string *sub_14DF2F4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14DB564(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_14DF370(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF370(uint64_t a1, std::string *a2)
{
  return sub_14A8F98(a2, a1);
}

void sub_14DF380(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_14D71EC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_14DF3FC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_14DF3FC(uint64_t a1, uint64_t a2)
{
}

void sub_14DF40C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_131BDDC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_14DF488(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_14DF488(uint64_t a1, uint64_t a2)
{
}

void sub_14DF498(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_14D726C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_14DF514(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_14DF514(uint64_t a1, uint64_t a2)
{
}

std::string *sub_14DF524(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D7308(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_122B460(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF5A0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D5F40(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_14DF61C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF61C(uint64_t a1, std::string *a2)
{
  return sub_14B7E30(a2, a1);
}

std::string *sub_14DF62C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D5FF0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_14DF6A8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DF6A8(uint64_t a1, std::string *a2)
{
  return sub_14B8738(a2, a1);
}

void sub_14DF6B8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_14D5D64(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_14DF734(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_14DF734(uint64_t a1, uint64_t a2)
{
}

void sub_14DF744(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14D8574(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_14DF7C4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      double result = (std::string *)sub_14D94A0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = sub_122BC84(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_14DF840(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14D95C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_14DF8C0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14D9BC4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_14DF940(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14DB3B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_14DF9BC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      double result = (uint64_t *)sub_14DB440(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      double result = (uint64_t *)sub_14DFA38(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_14DFA38(uint64_t a1, std::string *a2)
{
  return sub_14DA694(a2, a1);
}

uint64_t sub_14DFA48(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14DFB00(uint64_t a1)
{
  sub_14DFA48(a1);

  operator delete();
}

uint64_t sub_14DFB38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_14DFBC0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v9 != 16) {
          goto LABEL_30;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v27 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v31 = v27;
          *(unsigned char *)(a1 + 40) = v28 != 0;
          if (!v27) {
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v31 = v15;
          *(unsigned char *)(a1 + 40) = v16 != 0;
        }
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_30;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v31) {
            goto LABEL_51;
          }
          unint64_t v19 = v29;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v31 = v18;
        }
        if (sub_125D180(v19))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v19;
        }
        else
        {
          if (*v7) {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v30);
        }
        goto LABEL_38;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
LABEL_29:
        uint64_t v23 = (std::string *)sub_1880F84(v14, v13);
        int v24 = (void *)sub_188C244(v23, *(char **)v31, (uint64_t)a3);
        goto LABEL_37;
      default:
LABEL_30:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v31;
          }
          int v24 = sub_1885AC0(v9, v26, v8, a3);
LABEL_37:
          *(void *)uint64_t v31 = v24;
          if (!v24) {
            goto LABEL_51;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

unsigned char *sub_14DFEC0(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 40);
  *uint64_t v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 44);
    *uint64_t v4 = 24;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_15:
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_14E006C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 4) != 0) {
    return v2 + 2;
  }
  else {
    return v2;
  }
}

uint64_t sub_14E00C8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 5) != 0)
  {
    uint64_t result = sub_14E006C(a1);
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t result = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 3;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    result += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 8) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 44);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v11;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_14E01EC(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 5) == 0;
}

void *sub_14E0200@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.CategoryRule");
}

uint64_t sub_14E0210(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DE8((void *)(a1 + 48));
  sub_1514B7C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_14E02DC(uint64_t a1)
{
  sub_14E0210(a1);

  operator delete();
}

uint64_t sub_14E0314(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_14DFB38(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v6 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
    if ((v6 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_15:
  if ((v6 & 0x1C) != 0)
  {
    *(_DWORD *)(a1 + 96) = 0;
    *(void *)(a1 + 88) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_14E0414(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 48);
  unint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v50 + 1);
    unsigned int v10 = **(unsigned char **)v50;
    if ((char)**(unsigned char **)v50 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v50, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v50 + 2);
      }
    }
    *(void *)unint64_t v50 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_57;
        }
        unint64_t v13 = v9 - 1;
        while (1)
        {
          uint64_t v14 = (unsigned __int8 *)(v13 + 1);
          *(void *)unint64_t v50 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(void *)&v15[2 * v16 + 2];
          }
          else
          {
            uint64_t v18 = sub_14FB678(*(void *)(a1 + 24));
            uint64_t v17 = sub_188CDC8(a1 + 24, (uint64_t)v18);
            uint64_t v14 = *(unsigned __int8 **)v50;
          }
          unint64_t v13 = (char *)sub_14E08F0(a3, v17, v14);
          *(void *)unint64_t v50 = v13;
          if (!v13) {
            goto LABEL_80;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_65;
          }
        }
      case 2u:
        if (v10 != 16) {
          goto LABEL_57;
        }
        v5 |= 4u;
        unint64_t v19 = v9 + 1;
        uint64_t v20 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v9, v20);
          *(void *)unint64_t v50 = v44;
          *(unsigned char *)(a1 + 88) = v45 != 0;
          if (!v44) {
            goto LABEL_80;
          }
        }
        else
        {
          unint64_t v19 = v9 + 2;
LABEL_23:
          *(void *)unint64_t v50 = v19;
          *(unsigned char *)(a1 + 88) = v20 != 0;
        }
        goto LABEL_65;
      case 3u:
        if (v10 != 24) {
          goto LABEL_57;
        }
        uint64_t v22 = v9 + 1;
        unint64_t v23 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          *(void *)unint64_t v50 = sub_188C138((uint64_t)v9, (v25 - 128));
          if (!*(void *)v50) {
            goto LABEL_80;
          }
          unint64_t v23 = v46;
        }
        else
        {
          uint64_t v22 = v9 + 2;
LABEL_28:
          *(void *)unint64_t v50 = v22;
        }
        if (sub_125D180(v23))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 92) = v23;
        }
        else
        {
          if (*v8) {
            uint64_t v49 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v23, v49);
        }
        goto LABEL_65;
      case 4u:
        if (v10 != 32) {
          goto LABEL_57;
        }
        v5 |= 0x10u;
        uint64_t v26 = v9 + 1;
        int v27 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v47 = sub_188C0D0((uint64_t)v9, v27);
          *(void *)unint64_t v50 = v47;
          *(_DWORD *)(a1 + 96) = v48;
          if (!v47) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v26 = v9 + 2;
LABEL_35:
          *(void *)unint64_t v50 = v26;
          *(_DWORD *)(a1 + 96) = v27;
        }
        goto LABEL_65;
      case 5u:
        if (v10 != 42) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v30 = (uint64_t *)*v30;
        }
        uint64_t v31 = (void *)(a1 + 72);
        goto LABEL_44;
      case 6u:
        if (v10 != 50) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v32 = *(void *)(a1 + 8);
        uint64_t v30 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          uint64_t v30 = (uint64_t *)*v30;
        }
        uint64_t v31 = (void *)(a1 + 80);
LABEL_44:
        uint64_t v33 = (std::string *)sub_1880F84(v31, v30);
        unint64_t v34 = (void *)sub_188C244(v33, *(char **)v50, (uint64_t)a3);
        goto LABEL_64;
      case 7u:
        if (v10 != 58) {
          goto LABEL_57;
        }
        uint64_t v35 = v9 - 1;
        while (1)
        {
          int v36 = (char *)(v35 + 1);
          *(void *)unint64_t v50 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 64);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 56), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 56) = v38 + 1;
            uint64_t v39 = *(std::string **)&v37[2 * v38 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v41 = v40;
            v41[1] = sub_3A6EDC;
            *BOOL v40 = 0;
            v40[1] = 0;
            v40[2] = 0;
            uint64_t v39 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v40);
            int v36 = *(char **)v50;
          }
          uint64_t v35 = sub_188C244(v39, v36, (uint64_t)a3);
          *(void *)unint64_t v50 = v35;
          if (!v35) {
            goto LABEL_80;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 58) {
            goto LABEL_65;
          }
        }
      default:
LABEL_57:
        if (v10) {
          BOOL v42 = (v10 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v8)
          {
            uint64_t v43 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(char **)v50;
          }
          unint64_t v34 = sub_1885AC0(v10, v43, v9, a3);
LABEL_64:
          *(void *)unint64_t v50 = v34;
          if (!v34) {
            goto LABEL_80;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_80:
        }
          *(void *)unint64_t v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v50;
    }
  }
}

uint64_t sub_14E08F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14DFBC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_14E0980(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_14DFEC0(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v12 = *(unsigned char *)(a1 + 88);
    *__dst = 16;
    __dst[1] = v12;
    __dst += 2;
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v13 = *(int *)(a1 + 92);
    *__dst = 24;
    __dst[1] = v13;
    if (v13 > 0x7F)
    {
      __dst[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      __dst[2] = v13 >> 7;
      __dst += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *__dst++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 96);
    *__dst = 32;
    __dst[1] = v16;
    if (v16 > 0x7F)
    {
      __dst[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      __dst[2] = v16 >> 7;
      __dst += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *__dst++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v11 & 2) != 0) {
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v19 = *(unsigned int *)(a1 + 56);
  if ((int)v19 >= 1)
  {
    uint64_t v20 = 0;
    uint64_t v21 = 8 * v19;
    do
    {
      uint64_t v22 = *(void **)(*(void *)(a1 + 64) + v20 + 8);
      if (*((char *)v22 + 23) < 0)
      {
        int64_t v23 = v22[1];
        if (v23 > 127) {
          goto LABEL_42;
        }
      }
      else
      {
        int64_t v23 = *((unsigned __int8 *)v22 + 23);
      }
      if (*a3 - (void)__dst + 14 >= v23)
      {
        *__dst = 58;
        __dst[1] = v23;
        if (*((char *)v22 + 23) < 0) {
          uint64_t v22 = (void *)*v22;
        }
        int v24 = __dst + 2;
        memcpy(v24, v22, v23);
        __dst = &v24[v23];
        goto LABEL_40;
      }
LABEL_42:
      __dst = (char *)sub_188A868(a3, 7, (uint64_t)v22, __dst);
LABEL_40:
      v20 += 8;
    }
    while (v21 != v20);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return __dst;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    int v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    int v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*a3 - (void)__dst >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(__dst, v28, (int)v29);
    __dst += v30;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, __dst);
}

uint64_t sub_14E0CE0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14E00C8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t result = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 0x1F) != 0)
  {
    if (v14)
    {
      unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v17 = *(void *)(v15 + 8);
      if ((v16 & 0x80u) == 0) {
        uint64_t v17 = v16;
      }
      result += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v14 & 2) != 0)
    {
      unint64_t v18 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      result += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v14 & 4) != 0) {
      result += 2;
    }
    if ((v14 & 8) != 0)
    {
      int v21 = *(_DWORD *)(a1 + 92);
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v21 >= 0) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 11;
      }
      result += v23;
    }
    if ((v14 & 0x10) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v25 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    result += v26;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_14E0EE0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_151517C(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unsigned int v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x1F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_25;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      int v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_26;
    }
LABEL_25:
    v3[3].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 88);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0)
      {
LABEL_14:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_15;
      }
LABEL_13:
      LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
      goto LABEL_14;
    }
LABEL_26:
    HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
    if ((v14 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_14E10CC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 5) == 0);
  return v2 < 1;
}

void *sub_14E1104@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_search.proto.CategoryFilter");
}

char *sub_14E1114(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12C9C94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

double sub_14E11A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24BC848;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  double result = 0.0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a2;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = a2;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = a2;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = a2;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = a2;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = a2;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = a2;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = a2;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = a2;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 440) = a2;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = a2;
  *(void *)(a1 + 464) = a2;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = a2;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 512) = 0;
  *(void *)(a1 + 520) = a2;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 536) = a2;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 552) = a2;
  *(void *)(a1 + 560) = 0;
  *(void *)(a1 + 568) = a2;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = a2;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 600) = a2;
  *(void *)(a1 + 608) = 0;
  *(void *)(a1 + 616) = a2;
  *(void *)(a1 + 624) = 0;
  *(void *)(a1 + 632) = a2;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 648) = a2;
  *(void *)(a1 + 656) = 0;
  *(void *)(a1 + 664) = a2;
  *(void *)(a1 + 672) = &qword_2550250;
  *(void *)(a1 + 680) = &qword_2550250;
  *(void *)(a1 + 688) = &qword_2550250;
  *(void *)(a1 + 696) = &qword_2550250;
  *(void *)(a1 + 704) = &qword_2550250;
  *(void *)(a1 + 712) = &qword_2550250;
  *(void *)(a1 + 720) = &qword_2550250;
  *(void *)(a1 + 728) = &qword_2550250;
  *(void *)(a1 + 736) = &qword_2550250;
  *(void *)(a1 + 744) = &qword_2550250;
  *(void *)(a1 + 752) = &qword_2550250;
  *(void *)(a1 + 760) = &qword_2550250;
  *(void *)(a1 + 768) = &qword_2550250;
  *(void *)(a1 + 776) = &qword_2550250;
  *(void *)(a1 + 784) = &qword_2550250;
  *(void *)(a1 + 792) = &qword_2550250;
  *(void *)(a1 + 800) = &qword_2550250;
  *(void *)(a1 + 808) = &qword_2550250;
  *(void *)(a1 + 816) = &qword_2550250;
  *(void *)(a1 + 824) = &qword_2550250;
  *(void *)(a1 + 832) = &qword_2550250;
  *(void *)(a1 + 840) = &qword_2550250;
  *(void *)(a1 + 848) = &qword_2550250;
  *(void *)(a1 + 856) = &qword_2550250;
  *(_DWORD *)(a1 + 1216) = 0;
  *(_OWORD *)(a1 + 1200) = 0u;
  *(_OWORD *)(a1 + 1184) = 0u;
  *(_OWORD *)(a1 + 1168) = 0u;
  *(_OWORD *)(a1 + 1152) = 0u;
  *(_OWORD *)(a1 + 1136) = 0u;
  *(_OWORD *)(a1 + 1120) = 0u;
  *(_OWORD *)(a1 + 1104) = 0u;
  *(_OWORD *)(a1 + 1088) = 0u;
  *(_OWORD *)(a1 + 1072) = 0u;
  *(_OWORD *)(a1 + 1056) = 0u;
  *(_OWORD *)(a1 + 1040) = 0u;
  *(_OWORD *)(a1 + 1008) = 0u;
  *(_OWORD *)(a1 + 1024) = 0u;
  *(_OWORD *)(a1 + 976) = 0u;
  *(_OWORD *)(a1 + 992) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(_OWORD *)(a1 + 960) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 880) = 0u;
  *(_OWORD *)(a1 + 896) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  return result;
}

void *sub_14E135C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_14E1504((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 82));
  sub_1889DA8((uint64_t)(a1 + 80));
  sub_1889DA8((uint64_t)(a1 + 78));
  sub_1889DA8((uint64_t)(a1 + 76));
  sub_1889DA8((uint64_t)(a1 + 74));
  sub_1889DA8((uint64_t)(a1 + 72));
  sub_1889DA8((uint64_t)(a1 + 70));
  sub_1889DA8((uint64_t)(a1 + 68));
  sub_1889DA8((uint64_t)(a1 + 66));
  sub_1889DA8((uint64_t)(a1 + 64));
  sub_11DB1BC(a1 + 61);
  sub_14DD8EC(a1 + 58);
  sub_1889DA8((uint64_t)(a1 + 56));
  sub_1889DA8((uint64_t)(a1 + 54));
  sub_1889DA8((uint64_t)(a1 + 52));
  sub_1889DA8((uint64_t)(a1 + 50));
  sub_12D3774(a1 + 47);
  sub_122BA8C(a1 + 44);
  sub_122BA8C(a1 + 41);
  sub_1514C7C(a1 + 38);
  sub_14DD86C(a1 + 35);
  sub_1889DE8(a1 + 32);
  sub_1889DE8(a1 + 29);
  sub_1889DE8(a1 + 26);
  sub_1889DE8(a1 + 23);
  sub_1889DE8(a1 + 20);
  sub_1889DE8(a1 + 17);
  sub_1889DA8((uint64_t)(a1 + 15));
  sub_122BA8C(a1 + 12);
  sub_1889DA8((uint64_t)(a1 + 10));
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1514BFC(a1 + 5);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_14E1504(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (*(uint64_t **)(result + 672) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 672));
  }
  if (*(uint64_t **)(result + 680) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 680));
  }
  if (*(uint64_t **)(result + 688) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 688));
  }
  if (*(uint64_t **)(result + 696) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 696));
  }
  if (*(uint64_t **)(result + 704) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 704));
  }
  if (*(uint64_t **)(result + 712) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 712));
  }
  if (*(uint64_t **)(result + 720) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 720));
  }
  if (*(uint64_t **)(result + 728) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 728));
  }
  if (*(uint64_t **)(result + 736) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 736));
  }
  if (*(uint64_t **)(result + 744) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 744));
  }
  if (*(uint64_t **)(result + 752) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 752));
  }
  if (*(uint64_t **)(result + 760) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 760));
  }
  if (*(uint64_t **)(result + 768) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 768));
  }
  if (*(uint64_t **)(result + 776) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 776));
  }
  if (*(uint64_t **)(result + 784) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 784));
  }
  if (*(uint64_t **)(result + 792) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 792));
  }
  if (*(uint64_t **)(result + 800) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 800));
  }
  if (*(uint64_t **)(result + 808) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 808));
  }
  if (*(uint64_t **)(result + 816) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 816));
  }
  if (*(uint64_t **)(result + 824) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 824));
  }
  if (*(uint64_t **)(result + 832) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 832));
  }
  if (*(uint64_t **)(result + 840) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 840));
  }
  if (*(uint64_t **)(result + 848) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 848));
  }
  if (*(uint64_t **)(result + 856) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 856));
  }
  if ((uint64_t (***)())result != &off_253B598)
  {
    uint64_t v2 = *(void **)(result + 864);
    if (v2)
    {
      sub_12C9BDC(v2);
      operator delete();
    }
    if (v1[109])
    {
      sub_15B9F30();
      operator delete();
    }
    uint64_t v3 = v1[110];
    if (v3)
    {
      sub_15B3DFC(v3);
      operator delete();
    }
    if (v1[111])
    {
      sub_1463FF8();
      operator delete();
    }
    int v4 = (void *)v1[112];
    if (v4)
    {
      sub_12C9BDC(v4);
      operator delete();
    }
    uint64_t v5 = v1[113];
    if (v5)
    {
      sub_14EF3BC(v5);
      operator delete();
    }
    uint64_t v6 = v1[114];
    if (v6)
    {
      sub_12CCE4C(v6);
      operator delete();
    }
    int v7 = (void *)v1[115];
    if (v7)
    {
      sub_12C8F14(v7);
      operator delete();
    }
    uint64_t v8 = v1[116];
    if (v8)
    {
      sub_12CC0C8(v8);
      operator delete();
    }
    uint64_t v9 = v1[117];
    if (v9)
    {
      sub_12CC0C8(v9);
      operator delete();
    }
    uint64_t v10 = v1[118];
    if (v10)
    {
      sub_14E0210(v10);
      operator delete();
    }
    if (v1[119])
    {
      sub_12CA25C();
      operator delete();
    }
    uint64_t v11 = v1[120];
    if (v11)
    {
      sub_14E0210(v11);
      operator delete();
    }
    uint64_t v12 = v1[121];
    if (v12)
    {
      sub_12C94C8(v12);
      operator delete();
    }
    uint64_t v13 = (void *)v1[122];
    if (v13)
    {
      sub_12C8F14(v13);
      operator delete();
    }
    if (v1[123])
    {
      sub_12CA25C();
      operator delete();
    }
    if (v1[124])
    {
      sub_12CA25C();
      operator delete();
    }
    int v14 = (void *)v1[125];
    if (v14)
    {
      sub_12C9BDC(v14);
      operator delete();
    }
    if (v1[126])
    {
      sub_158B570();
      operator delete();
    }
    uint64_t v15 = v1[127];
    if (v15)
    {
      sub_12D2300(v15);
      operator delete();
    }
    uint64_t v16 = (void *)v1[128];
    if (v16)
    {
      sub_12C8F14(v16);
      operator delete();
    }
    uint64_t v17 = v1[129];
    if (v17)
    {
      sub_12CC0C8(v17);
      operator delete();
    }
    uint64_t v18 = v1[130];
    if (v18)
    {
      sub_1230800(v18);
      operator delete();
    }
    uint64_t v19 = v1[131];
    if (v19)
    {
      sub_1231B24(v19);
      operator delete();
    }
    uint64_t v20 = v1[132];
    if (v20)
    {
      sub_145EAF8(v20);
      operator delete();
    }
    if (v1[133])
    {
      sub_15A51CC();
      operator delete();
    }
    if (v1[134])
    {
      sub_15A51CC();
      operator delete();
    }
    double result = v1[135];
    if (result)
    {
      sub_15B0994();
      operator delete();
    }
  }
  return result;
}

void sub_14E1AB8(void *a1)
{
  sub_14E135C(a1);

  operator delete();
}

uint64_t sub_14E1AF0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1513014(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 48) = 0;
  }
  *(_DWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  uint64_t v5 = *(unsigned int *)(a1 + 104);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_149FADC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 104) = 0;
  }
  *(_DWORD *)(a1 + 120) = 0;
  sub_188CC00(a1 + 136);
  sub_188CC00(a1 + 160);
  sub_188CC00(a1 + 184);
  sub_188CC00(a1 + 208);
  sub_188CC00(a1 + 232);
  uint64_t result = sub_188CC00(a1 + 256);
  uint64_t v9 = *(unsigned int *)(a1 + 288);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 296) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_14A0EFC(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 288) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 312);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 320) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_12D1E98(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 312) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 336);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 344) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_149FADC(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 336) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 360);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 368) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_149FADC(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 360) = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 384);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 392) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_12CD5A4(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 384) = 0;
  }
  *(_DWORD *)(a1 + 400) = 0;
  *(_DWORD *)(a1 + 416) = 0;
  *(_DWORD *)(a1 + 432) = 0;
  *(_DWORD *)(a1 + 448) = 0;
  uint64_t v24 = *(unsigned int *)(a1 + 472);
  if ((int)v24 >= 1)
  {
    unint64_t v25 = (uint64_t *)(*(void *)(a1 + 480) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_14A13D8(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 472) = 0;
  }
  uint64_t v27 = *(unsigned int *)(a1 + 496);
  if ((int)v27 >= 1)
  {
    int v28 = (uint64_t *)(*(void *)(a1 + 504) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t result = sub_15BAAF0(v29);
      --v27;
    }
    while (v27);
    *(_DWORD *)(a1 + 496) = 0;
  }
  unsigned int v30 = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 512) = 0;
  *(_DWORD *)(a1 + 528) = 0;
  *(_DWORD *)(a1 + 544) = 0;
  *(_DWORD *)(a1 + 560) = 0;
  *(_DWORD *)(a1 + 576) = 0;
  *(_DWORD *)(a1 + 592) = 0;
  *(_DWORD *)(a1 + 608) = 0;
  *(_DWORD *)(a1 + 624) = 0;
  *(_DWORD *)(a1 + 640) = 0;
  *(_DWORD *)(a1 + 656) = 0;
  if ((_BYTE)v30)
  {
    if ((v30 & 1) == 0)
    {
      if ((v30 & 2) == 0) {
        goto LABEL_40;
      }
LABEL_51:
      unint64_t v32 = *(void *)(a1 + 680) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v32 + 23) < 0)
      {
        **(unsigned char **)unint64_t v32 = 0;
        *(void *)(v32 + 8) = 0;
        if ((v30 & 4) != 0) {
          goto LABEL_55;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v32 = 0;
        *(unsigned char *)(v32 + 23) = 0;
        if ((v30 & 4) != 0) {
          goto LABEL_55;
        }
      }
LABEL_41:
      if ((v30 & 8) == 0) {
        goto LABEL_42;
      }
LABEL_59:
      unint64_t v34 = *(void *)(a1 + 696) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v34 + 23) < 0)
      {
        **(unsigned char **)unint64_t v34 = 0;
        *(void *)(v34 + 8) = 0;
        if ((v30 & 0x10) != 0) {
          goto LABEL_63;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v34 = 0;
        *(unsigned char *)(v34 + 23) = 0;
        if ((v30 & 0x10) != 0) {
          goto LABEL_63;
        }
      }
LABEL_43:
      if ((v30 & 0x20) == 0) {
        goto LABEL_44;
      }
LABEL_67:
      unint64_t v36 = *(void *)(a1 + 712) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v36 + 23) < 0)
      {
        **(unsigned char **)unint64_t v36 = 0;
        *(void *)(v36 + 8) = 0;
        if ((v30 & 0x40) != 0) {
          goto LABEL_71;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v36 = 0;
        *(unsigned char *)(v36 + 23) = 0;
        if ((v30 & 0x40) != 0) {
          goto LABEL_71;
        }
      }
LABEL_45:
      if ((v30 & 0x80) == 0) {
        goto LABEL_78;
      }
LABEL_75:
      unint64_t v38 = *(void *)(a1 + 728) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v38 + 23) < 0)
      {
        **(unsigned char **)unint64_t v38 = 0;
        *(void *)(v38 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v38 = 0;
        *(unsigned char *)(v38 + 23) = 0;
      }
      goto LABEL_78;
    }
    unint64_t v31 = *(void *)(a1 + 672) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v31 + 23) < 0)
    {
      **(unsigned char **)unint64_t v31 = 0;
      *(void *)(v31 + 8) = 0;
      if ((v30 & 2) != 0) {
        goto LABEL_51;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v31 = 0;
      *(unsigned char *)(v31 + 23) = 0;
      if ((v30 & 2) != 0) {
        goto LABEL_51;
      }
    }
LABEL_40:
    if ((v30 & 4) == 0) {
      goto LABEL_41;
    }
LABEL_55:
    unint64_t v33 = *(void *)(a1 + 688) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v33 + 23) < 0)
    {
      **(unsigned char **)unint64_t v33 = 0;
      *(void *)(v33 + 8) = 0;
      if ((v30 & 8) != 0) {
        goto LABEL_59;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v33 = 0;
      *(unsigned char *)(v33 + 23) = 0;
      if ((v30 & 8) != 0) {
        goto LABEL_59;
      }
    }
LABEL_42:
    if ((v30 & 0x10) == 0) {
      goto LABEL_43;
    }
LABEL_63:
    unint64_t v35 = *(void *)(a1 + 704) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v35 + 23) < 0)
    {
      **(unsigned char **)unint64_t v35 = 0;
      *(void *)(v35 + 8) = 0;
      if ((v30 & 0x20) != 0) {
        goto LABEL_67;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v35 = 0;
      *(unsigned char *)(v35 + 23) = 0;
      if ((v30 & 0x20) != 0) {
        goto LABEL_67;
      }
    }
LABEL_44:
    if ((v30 & 0x40) == 0) {
      goto LABEL_45;
    }
LABEL_71:
    unint64_t v37 = *(void *)(a1 + 720) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v37 + 23) < 0)
    {
      **(unsigned char **)unint64_t v37 = 0;
      *(void *)(v37 + 8) = 0;
      if ((v30 & 0x80) == 0) {
        goto LABEL_78;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v37 = 0;
      *(unsigned char *)(v37 + 23) = 0;
      if ((v30 & 0x80) == 0) {
        goto LABEL_78;
      }
    }
    goto LABEL_75;
  }
LABEL_78:
  if ((v30 & 0xFF00) == 0) {
    goto LABEL_119;
  }
  if ((v30 & 0x100) == 0)
  {
    if ((v30 & 0x200) == 0) {
      goto LABEL_81;
    }
LABEL_92:
    unint64_t v40 = *(void *)(a1 + 744) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v40 + 23) < 0)
    {
      **(unsigned char **)unint64_t v40 = 0;
      *(void *)(v40 + 8) = 0;
      if ((v30 & 0x400) != 0) {
        goto LABEL_96;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v40 = 0;
      *(unsigned char *)(v40 + 23) = 0;
      if ((v30 & 0x400) != 0) {
        goto LABEL_96;
      }
    }
LABEL_82:
    if ((v30 & 0x800) == 0) {
      goto LABEL_83;
    }
LABEL_100:
    unint64_t v42 = *(void *)(a1 + 760) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v42 + 23) < 0)
    {
      **(unsigned char **)unint64_t v42 = 0;
      *(void *)(v42 + 8) = 0;
      if ((v30 & 0x1000) != 0) {
        goto LABEL_104;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v42 = 0;
      *(unsigned char *)(v42 + 23) = 0;
      if ((v30 & 0x1000) != 0) {
        goto LABEL_104;
      }
    }
LABEL_84:
    if ((v30 & 0x2000) == 0) {
      goto LABEL_85;
    }
LABEL_108:
    unint64_t v44 = *(void *)(a1 + 776) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v44 + 23) < 0)
    {
      **(unsigned char **)unint64_t v44 = 0;
      *(void *)(v44 + 8) = 0;
      if ((v30 & 0x4000) != 0) {
        goto LABEL_112;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v44 = 0;
      *(unsigned char *)(v44 + 23) = 0;
      if ((v30 & 0x4000) != 0) {
        goto LABEL_112;
      }
    }
LABEL_86:
    if ((v30 & 0x8000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_116;
  }
  unint64_t v39 = *(void *)(a1 + 736) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v39 + 23) < 0)
  {
    **(unsigned char **)unint64_t v39 = 0;
    *(void *)(v39 + 8) = 0;
    if ((v30 & 0x200) != 0) {
      goto LABEL_92;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v39 = 0;
    *(unsigned char *)(v39 + 23) = 0;
    if ((v30 & 0x200) != 0) {
      goto LABEL_92;
    }
  }
LABEL_81:
  if ((v30 & 0x400) == 0) {
    goto LABEL_82;
  }
LABEL_96:
  unint64_t v41 = *(void *)(a1 + 752) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v41 + 23) < 0)
  {
    **(unsigned char **)unint64_t v41 = 0;
    *(void *)(v41 + 8) = 0;
    if ((v30 & 0x800) != 0) {
      goto LABEL_100;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v41 = 0;
    *(unsigned char *)(v41 + 23) = 0;
    if ((v30 & 0x800) != 0) {
      goto LABEL_100;
    }
  }
LABEL_83:
  if ((v30 & 0x1000) == 0) {
    goto LABEL_84;
  }
LABEL_104:
  unint64_t v43 = *(void *)(a1 + 768) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v43 + 23) < 0)
  {
    **(unsigned char **)unint64_t v43 = 0;
    *(void *)(v43 + 8) = 0;
    if ((v30 & 0x2000) != 0) {
      goto LABEL_108;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v43 = 0;
    *(unsigned char *)(v43 + 23) = 0;
    if ((v30 & 0x2000) != 0) {
      goto LABEL_108;
    }
  }
LABEL_85:
  if ((v30 & 0x4000) == 0) {
    goto LABEL_86;
  }
LABEL_112:
  unint64_t v45 = *(void *)(a1 + 784) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v45 + 23) < 0)
  {
    **(unsigned char **)unint64_t v45 = 0;
    *(void *)(v45 + 8) = 0;
    if ((v30 & 0x8000) == 0) {
      goto LABEL_119;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v45 = 0;
    *(unsigned char *)(v45 + 23) = 0;
    if ((v30 & 0x8000) == 0) {
      goto LABEL_119;
    }
  }
LABEL_116:
  unint64_t v46 = *(void *)(a1 + 792) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v46 + 23) < 0)
  {
    **(unsigned char **)unint64_t v46 = 0;
    *(void *)(v46 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v46 = 0;
    *(unsigned char *)(v46 + 23) = 0;
  }
LABEL_119:
  if ((v30 & 0xFF0000) == 0) {
    goto LABEL_160;
  }
  if ((v30 & 0x10000) == 0)
  {
    if ((v30 & 0x20000) == 0) {
      goto LABEL_122;
    }
LABEL_133:
    unint64_t v48 = *(void *)(a1 + 808) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v48 + 23) < 0)
    {
      **(unsigned char **)unint64_t v48 = 0;
      *(void *)(v48 + 8) = 0;
      if ((v30 & 0x40000) != 0) {
        goto LABEL_137;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v48 = 0;
      *(unsigned char *)(v48 + 23) = 0;
      if ((v30 & 0x40000) != 0) {
        goto LABEL_137;
      }
    }
LABEL_123:
    if ((v30 & 0x80000) == 0) {
      goto LABEL_124;
    }
LABEL_141:
    unint64_t v50 = *(void *)(a1 + 824) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v50 + 23) < 0)
    {
      **(unsigned char **)unint64_t v50 = 0;
      *(void *)(v50 + 8) = 0;
      if ((v30 & 0x100000) != 0) {
        goto LABEL_145;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v50 = 0;
      *(unsigned char *)(v50 + 23) = 0;
      if ((v30 & 0x100000) != 0) {
        goto LABEL_145;
      }
    }
LABEL_125:
    if ((v30 & 0x200000) == 0) {
      goto LABEL_126;
    }
LABEL_149:
    unint64_t v52 = *(void *)(a1 + 840) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v52 + 23) < 0)
    {
      **(unsigned char **)unint64_t v52 = 0;
      *(void *)(v52 + 8) = 0;
      if ((v30 & 0x400000) != 0) {
        goto LABEL_153;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v52 = 0;
      *(unsigned char *)(v52 + 23) = 0;
      if ((v30 & 0x400000) != 0) {
        goto LABEL_153;
      }
    }
LABEL_127:
    if ((v30 & 0x800000) == 0) {
      goto LABEL_160;
    }
    goto LABEL_157;
  }
  unint64_t v47 = *(void *)(a1 + 800) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v47 + 23) < 0)
  {
    **(unsigned char **)unint64_t v47 = 0;
    *(void *)(v47 + 8) = 0;
    if ((v30 & 0x20000) != 0) {
      goto LABEL_133;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v47 = 0;
    *(unsigned char *)(v47 + 23) = 0;
    if ((v30 & 0x20000) != 0) {
      goto LABEL_133;
    }
  }
LABEL_122:
  if ((v30 & 0x40000) == 0) {
    goto LABEL_123;
  }
LABEL_137:
  unint64_t v49 = *(void *)(a1 + 816) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v49 + 23) < 0)
  {
    **(unsigned char **)unint64_t v49 = 0;
    *(void *)(v49 + 8) = 0;
    if ((v30 & 0x80000) != 0) {
      goto LABEL_141;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v49 = 0;
    *(unsigned char *)(v49 + 23) = 0;
    if ((v30 & 0x80000) != 0) {
      goto LABEL_141;
    }
  }
LABEL_124:
  if ((v30 & 0x100000) == 0) {
    goto LABEL_125;
  }
LABEL_145:
  unint64_t v51 = *(void *)(a1 + 832) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v51 + 23) < 0)
  {
    **(unsigned char **)unint64_t v51 = 0;
    *(void *)(v51 + 8) = 0;
    if ((v30 & 0x200000) != 0) {
      goto LABEL_149;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v51 = 0;
    *(unsigned char *)(v51 + 23) = 0;
    if ((v30 & 0x200000) != 0) {
      goto LABEL_149;
    }
  }
LABEL_126:
  if ((v30 & 0x400000) == 0) {
    goto LABEL_127;
  }
LABEL_153:
  unint64_t v53 = *(void *)(a1 + 848) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v53 + 23) < 0)
  {
    **(unsigned char **)unint64_t v53 = 0;
    *(void *)(v53 + 8) = 0;
    if ((v30 & 0x800000) == 0) {
      goto LABEL_160;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v53 = 0;
    *(unsigned char *)(v53 + 23) = 0;
    if ((v30 & 0x800000) == 0) {
      goto LABEL_160;
    }
  }
LABEL_157:
  unint64_t v54 = *(void *)(a1 + 856) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v54 + 23) < 0)
  {
    **(unsigned char **)unint64_t v54 = 0;
    *(void *)(v54 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v54 = 0;
    *(unsigned char *)(v54 + 23) = 0;
  }
LABEL_160:
  if (!HIBYTE(v30)) {
    goto LABEL_169;
  }
  if ((v30 & 0x1000000) != 0)
  {
    uint64_t result = sub_12C9C18(*(void *)(a1 + 864));
    if ((v30 & 0x2000000) == 0)
    {
LABEL_163:
      if ((v30 & 0x4000000) == 0) {
        goto LABEL_164;
      }
      goto LABEL_243;
    }
  }
  else if ((v30 & 0x2000000) == 0)
  {
    goto LABEL_163;
  }
  uint64_t result = sub_15B9F6C(*(void *)(a1 + 872));
  if ((v30 & 0x4000000) == 0)
  {
LABEL_164:
    if ((v30 & 0x8000000) == 0) {
      goto LABEL_165;
    }
    goto LABEL_244;
  }
LABEL_243:
  uint64_t result = sub_15B043C(*(void *)(a1 + 880));
  if ((v30 & 0x8000000) == 0)
  {
LABEL_165:
    if ((v30 & 0x10000000) == 0) {
      goto LABEL_166;
    }
    goto LABEL_245;
  }
LABEL_244:
  uint64_t result = sub_1464034(*(void *)(a1 + 888));
  if ((v30 & 0x10000000) == 0)
  {
LABEL_166:
    if ((v30 & 0x20000000) == 0) {
      goto LABEL_167;
    }
    goto LABEL_246;
  }
LABEL_245:
  uint64_t result = sub_12C9C18(*(void *)(a1 + 896));
  if ((v30 & 0x20000000) == 0)
  {
LABEL_167:
    if ((v30 & 0x40000000) == 0) {
      goto LABEL_168;
    }
LABEL_247:
    uint64_t result = sub_12C8AD0(*(void *)(a1 + 912));
    if ((v30 & 0x80000000) == 0) {
      goto LABEL_169;
    }
    goto LABEL_248;
  }
LABEL_246:
  uint64_t result = sub_14E24D0(*(void *)(a1 + 904));
  if ((v30 & 0x40000000) != 0) {
    goto LABEL_247;
  }
LABEL_168:
  if ((v30 & 0x80000000) == 0) {
    goto LABEL_169;
  }
LABEL_248:
  uint64_t result = sub_12C8DDC(*(void *)(a1 + 920));
LABEL_169:
  unsigned int v55 = *(_DWORD *)(a1 + 20);
  if (!(_BYTE)v55) {
    goto LABEL_179;
  }
  if (v55)
  {
    uint64_t result = sub_12CC104(*(void *)(a1 + 928));
    if ((v55 & 2) == 0)
    {
LABEL_172:
      if ((v55 & 4) == 0) {
        goto LABEL_173;
      }
      goto LABEL_223;
    }
  }
  else if ((v55 & 2) == 0)
  {
    goto LABEL_172;
  }
  uint64_t result = sub_12CC104(*(void *)(a1 + 936));
  if ((v55 & 4) == 0)
  {
LABEL_173:
    if ((v55 & 8) == 0) {
      goto LABEL_174;
    }
    goto LABEL_224;
  }
LABEL_223:
  uint64_t result = sub_14E0314(*(void *)(a1 + 944));
  if ((v55 & 8) == 0)
  {
LABEL_174:
    if ((v55 & 0x10) == 0) {
      goto LABEL_175;
    }
    goto LABEL_225;
  }
LABEL_224:
  uint64_t result = sub_12CA298(*(void *)(a1 + 952));
  if ((v55 & 0x10) == 0)
  {
LABEL_175:
    if ((v55 & 0x20) == 0) {
      goto LABEL_176;
    }
    goto LABEL_226;
  }
LABEL_225:
  uint64_t result = sub_14E0314(*(void *)(a1 + 960));
  if ((v55 & 0x20) == 0)
  {
LABEL_176:
    if ((v55 & 0x40) == 0) {
      goto LABEL_177;
    }
    goto LABEL_227;
  }
LABEL_226:
  uint64_t result = sub_12C9504(*(void *)(a1 + 968));
  if ((v55 & 0x40) == 0)
  {
LABEL_177:
    if ((v55 & 0x80) == 0) {
      goto LABEL_179;
    }
    goto LABEL_178;
  }
LABEL_227:
  uint64_t result = sub_12C8DDC(*(void *)(a1 + 976));
  if ((v55 & 0x80) != 0) {
LABEL_178:
  }
    uint64_t result = sub_12CA298(*(void *)(a1 + 984));
LABEL_179:
  if ((v55 & 0xFF00) == 0) {
    goto LABEL_189;
  }
  if ((v55 & 0x100) != 0)
  {
    uint64_t result = sub_12CA298(*(void *)(a1 + 992));
    if ((v55 & 0x200) == 0)
    {
LABEL_182:
      if ((v55 & 0x400) == 0) {
        goto LABEL_183;
      }
      goto LABEL_231;
    }
  }
  else if ((v55 & 0x200) == 0)
  {
    goto LABEL_182;
  }
  uint64_t result = sub_12C9C18(*(void *)(a1 + 1000));
  if ((v55 & 0x400) == 0)
  {
LABEL_183:
    if ((v55 & 0x800) == 0) {
      goto LABEL_184;
    }
    goto LABEL_232;
  }
LABEL_231:
  uint64_t result = sub_158B5AC(*(void *)(a1 + 1008));
  if ((v55 & 0x800) == 0)
  {
LABEL_184:
    if ((v55 & 0x1000) == 0) {
      goto LABEL_185;
    }
    goto LABEL_233;
  }
LABEL_232:
  uint64_t result = sub_12D233C(*(void *)(a1 + 1016));
  if ((v55 & 0x1000) == 0)
  {
LABEL_185:
    if ((v55 & 0x2000) == 0) {
      goto LABEL_186;
    }
    goto LABEL_234;
  }
LABEL_233:
  uint64_t result = sub_12C8DDC(*(void *)(a1 + 1024));
  if ((v55 & 0x2000) == 0)
  {
LABEL_186:
    if ((v55 & 0x4000) == 0) {
      goto LABEL_187;
    }
    goto LABEL_235;
  }
LABEL_234:
  uint64_t result = sub_12CC104(*(void *)(a1 + 1032));
  if ((v55 & 0x4000) == 0)
  {
LABEL_187:
    if ((v55 & 0x8000) == 0) {
      goto LABEL_189;
    }
    goto LABEL_188;
  }
LABEL_235:
  uint64_t result = sub_123083C(*(void *)(a1 + 1040));
  if ((v55 & 0x8000) != 0) {
LABEL_188:
  }
    uint64_t result = sub_1231B60(*(void *)(a1 + 1048));
LABEL_189:
  if ((v55 & 0xF0000) == 0) {
    goto LABEL_195;
  }
  if ((v55 & 0x10000) != 0)
  {
    uint64_t result = (uint64_t)sub_145EB34(*(void *)(a1 + 1056));
    if ((v55 & 0x20000) == 0)
    {
LABEL_192:
      if ((v55 & 0x40000) == 0) {
        goto LABEL_193;
      }
      goto LABEL_239;
    }
  }
  else if ((v55 & 0x20000) == 0)
  {
    goto LABEL_192;
  }
  uint64_t result = sub_1596D84(*(void *)(a1 + 1064));
  if ((v55 & 0x40000) == 0)
  {
LABEL_193:
    if ((v55 & 0x80000) == 0) {
      goto LABEL_195;
    }
    goto LABEL_194;
  }
LABEL_239:
  uint64_t result = sub_1596D84(*(void *)(a1 + 1072));
  if ((v55 & 0x80000) != 0) {
LABEL_194:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 1080));
LABEL_195:
  if ((v55 & 0xF00000) != 0) {
    *(_DWORD *)(a1 + 1088) = 0;
  }
  if (HIBYTE(v55))
  {
    *(_DWORD *)(a1 + 1099) = 0;
    *(void *)(a1 + 1092) = 0;
  }
  unsigned int v56 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v56) {
    *(void *)(a1 + 1103) = 0;
  }
  if ((v56 & 0xFF00) != 0)
  {
    *(void *)(a1 + 1117) = 0;
    *(void *)(a1 + 1111) = 0;
  }
  if ((v56 & 0xFF0000) != 0)
  {
    *(_DWORD *)(a1 + 1132) = 0;
    *(void *)(a1 + 1125) = 0;
  }
  if (HIBYTE(v56))
  {
    *(void *)(a1 + 1136) = 0;
    *(void *)(a1 + 1143) = 0;
  }
  unsigned int v57 = *(_DWORD *)(a1 + 28);
  if ((_BYTE)v57)
  {
    *(unsigned char *)(a1 + 1175) = 0;
    *(void *)(a1 + 1167) = 0;
    *(_OWORD *)(a1 + 1151) = 0u;
  }
  if ((v57 & 0xFF00) != 0) {
    *(void *)(a1 + 1176) = 0;
  }
  if ((v57 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 1184) = 0;
    *(void *)(a1 + 1191) = 0;
  }
  if (HIBYTE(v57)) {
    *(void *)(a1 + 1199) = 0;
  }
  if (*(unsigned char *)(a1 + 32))
  {
    *(void *)(a1 + 1212) = 0;
    *(void *)(a1 + 1207) = 0;
  }
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  char v59 = *(unsigned char *)(a1 + 8);
  uint64_t v58 = (uint64_t *)(a1 + 8);
  if (v59)
  {
    return sub_188B4AC(v58);
  }
  return result;
}